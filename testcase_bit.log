[bit-debug] recompute start node 1 <div .a>; input=10
[bit-debug] node 1 <div .a> visit: dirty=true input=10
[bit-debug] node 1 <div .a> recompute -> output=01 (prev=01)
[bit-debug] node 1 <div .a> output unchanged; children remain clean
[bit-debug] node 1 <div .a> propagating to 1 children
[bit-debug] node 2 <div .a> visit: dirty=true input=01
[bit-debug] node 2 <div .a> recompute -> output=01 (prev=01)
[bit-debug] node 2 <div .a> output unchanged; children remain clean
[bit-debug] node 2 <div .a> propagating to 0 children
[bit-debug] node 2 <div .a> finished; dirty flags cleared
[bit-debug] node 1 <div .a> finished; dirty flags cleared
[bit-debug] recompute done node 1 <div .a>
102823
[bit-debug] recompute start node 1 <div .b>; input=10
[bit-debug] node 1 <div .b> visit: dirty=true input=10
[bit-debug] node 1 <div .b> recompute -> output=00 (prev=01)
[bit-debug] node 1 <div .b> output changed; marking 1 children dirty
[bit-debug] node 1 <div .b> child node 2 <div .a> marked dirty due to parent change -> dirty=true
[bit-debug] node 1 <div .b> propagating to 1 children
[bit-debug] node 2 <div .a> visit: dirty=true input=00
[bit-debug] node 2 <div .a> recompute -> output=01 (prev=01)
[bit-debug] node 2 <div .a> output unchanged; children remain clean
[bit-debug] node 2 <div .a> propagating to 0 children
[bit-debug] node 2 <div .a> finished; dirty flags cleared
[bit-debug] node 1 <div .b> finished; dirty flags cleared
[bit-debug] recompute done node 1 <div .b>
72189
BEGIN
.a -> [2]
END
[src/bit.rs:708:5] unsafe { MISS_CNT } = 4
