<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2678" onload="init(evt)" viewBox="0 0 1200 2678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2661.00"> </text><svg id="frames" x="10" width="1180" total_samples="233008376"><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,892,529 samples, 1.67%)</title><rect x="0.0000%" y="2597" width="1.6706%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3892529"/><text x="0.2500%" y="2607.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,193,511 samples, 0.94%)</title><rect x="0.7292%" y="2581" width="0.9414%" height="15" fill="rgb(217,0,24)" fg:x="1699018" fg:w="2193511"/><text x="0.9792%" y="2591.50"></text></g><g><title>[libc.so.6] (5,712,632 samples, 2.45%)</title><rect x="1.6706%" y="2597" width="2.4517%" height="15" fill="rgb(221,193,54)" fg:x="3892529" fg:w="5712632"/><text x="1.9206%" y="2607.50">[l..</text></g><g><title>malloc (2,626,961 samples, 1.13%)</title><rect x="2.9948%" y="2581" width="1.1274%" height="15" fill="rgb(248,212,6)" fg:x="6978200" fg:w="2626961"/><text x="3.2448%" y="2591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,380,389 samples, 1.45%)</title><rect x="5.1085%" y="2581" width="1.4508%" height="15" fill="rgb(208,68,35)" fg:x="11903146" fg:w="3380389"/><text x="5.3585%" y="2591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,380,389 samples, 1.45%)</title><rect x="5.1085%" y="2565" width="1.4508%" height="15" fill="rgb(232,128,0)" fg:x="11903146" fg:w="3380389"/><text x="5.3585%" y="2575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (3,380,389 samples, 1.45%)</title><rect x="5.1085%" y="2549" width="1.4508%" height="15" fill="rgb(207,160,47)" fg:x="11903146" fg:w="3380389"/><text x="5.3585%" y="2559.50"></text></g><g><title>[unknown] (7,705,069 samples, 3.31%)</title><rect x="4.1222%" y="2597" width="3.3068%" height="15" fill="rgb(228,23,34)" fg:x="9605161" fg:w="7705069"/><text x="4.3722%" y="2607.50">[un..</text></g><g><title>[libc.so.6] (2,026,695 samples, 0.87%)</title><rect x="6.5592%" y="2581" width="0.8698%" height="15" fill="rgb(218,30,26)" fg:x="15283535" fg:w="2026695"/><text x="6.8092%" y="2591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,066,049 samples, 1.32%)</title><rect x="7.4290%" y="2293" width="1.3159%" height="15" fill="rgb(220,122,19)" fg:x="17310230" fg:w="3066049"/><text x="7.6790%" y="2303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,066,049 samples, 1.32%)</title><rect x="7.4290%" y="2277" width="1.3159%" height="15" fill="rgb(250,228,42)" fg:x="17310230" fg:w="3066049"/><text x="7.6790%" y="2287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,066,049 samples, 1.32%)</title><rect x="7.4290%" y="2261" width="1.3159%" height="15" fill="rgb(240,193,28)" fg:x="17310230" fg:w="3066049"/><text x="7.6790%" y="2271.50"></text></g><g><title>alloc::slice::hack::to_vec (3,066,049 samples, 1.32%)</title><rect x="7.4290%" y="2245" width="1.3159%" height="15" fill="rgb(216,20,37)" fg:x="17310230" fg:w="3066049"/><text x="7.6790%" y="2255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,066,049 samples, 1.32%)</title><rect x="7.4290%" y="2229" width="1.3159%" height="15" fill="rgb(206,188,39)" fg:x="17310230" fg:w="3066049"/><text x="7.6790%" y="2239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,066,049 samples, 1.32%)</title><rect x="7.4290%" y="2213" width="1.3159%" height="15" fill="rgb(217,207,13)" fg:x="17310230" fg:w="3066049"/><text x="7.6790%" y="2223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,066,049 samples, 1.32%)</title><rect x="7.4290%" y="2197" width="1.3159%" height="15" fill="rgb(231,73,38)" fg:x="17310230" fg:w="3066049"/><text x="7.6790%" y="2207.50"></text></g><g><title>[libc.so.6] (3,066,049 samples, 1.32%)</title><rect x="7.4290%" y="2181" width="1.3159%" height="15" fill="rgb(225,20,46)" fg:x="17310230" fg:w="3066049"/><text x="7.6790%" y="2191.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,393,856 samples, 1.03%)</title><rect x="8.7449%" y="1589" width="1.0274%" height="15" fill="rgb(210,31,41)" fg:x="20376279" fg:w="2393856"/><text x="8.9949%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,393,856 samples, 1.03%)</title><rect x="8.7449%" y="1573" width="1.0274%" height="15" fill="rgb(221,200,47)" fg:x="20376279" fg:w="2393856"/><text x="8.9949%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,393,856 samples, 1.03%)</title><rect x="8.7449%" y="1557" width="1.0274%" height="15" fill="rgb(226,26,5)" fg:x="20376279" fg:w="2393856"/><text x="8.9949%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (2,393,856 samples, 1.03%)</title><rect x="8.7449%" y="1541" width="1.0274%" height="15" fill="rgb(249,33,26)" fg:x="20376279" fg:w="2393856"/><text x="8.9949%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,393,856 samples, 1.03%)</title><rect x="8.7449%" y="1525" width="1.0274%" height="15" fill="rgb(235,183,28)" fg:x="20376279" fg:w="2393856"/><text x="8.9949%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,393,856 samples, 1.03%)</title><rect x="8.7449%" y="1509" width="1.0274%" height="15" fill="rgb(221,5,38)" fg:x="20376279" fg:w="2393856"/><text x="8.9949%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,393,856 samples, 1.03%)</title><rect x="8.7449%" y="1493" width="1.0274%" height="15" fill="rgb(247,18,42)" fg:x="20376279" fg:w="2393856"/><text x="8.9949%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,393,856 samples, 1.03%)</title><rect x="8.7449%" y="1477" width="1.0274%" height="15" fill="rgb(241,131,45)" fg:x="20376279" fg:w="2393856"/><text x="8.9949%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,393,856 samples, 1.03%)</title><rect x="8.7449%" y="1461" width="1.0274%" height="15" fill="rgb(249,31,29)" fg:x="20376279" fg:w="2393856"/><text x="8.9949%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,393,856 samples, 1.03%)</title><rect x="8.7449%" y="1445" width="1.0274%" height="15" fill="rgb(225,111,53)" fg:x="20376279" fg:w="2393856"/><text x="8.9949%" y="1455.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,393,856 samples, 1.03%)</title><rect x="8.7449%" y="1429" width="1.0274%" height="15" fill="rgb(238,160,17)" fg:x="20376279" fg:w="2393856"/><text x="8.9949%" y="1439.50"></text></g><g><title>alloc::alloc::alloc (2,393,856 samples, 1.03%)</title><rect x="8.7449%" y="1413" width="1.0274%" height="15" fill="rgb(214,148,48)" fg:x="20376279" fg:w="2393856"/><text x="8.9949%" y="1423.50"></text></g><g><title>__rdl_alloc (2,393,856 samples, 1.03%)</title><rect x="8.7449%" y="1397" width="1.0274%" height="15" fill="rgb(232,36,49)" fg:x="20376279" fg:w="2393856"/><text x="8.9949%" y="1407.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,393,856 samples, 1.03%)</title><rect x="8.7449%" y="1381" width="1.0274%" height="15" fill="rgb(209,103,24)" fg:x="20376279" fg:w="2393856"/><text x="8.9949%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1573" width="1.2729%" height="15" fill="rgb(229,88,8)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1557" width="1.2729%" height="15" fill="rgb(213,181,19)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1541" width="1.2729%" height="15" fill="rgb(254,191,54)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1525" width="1.2729%" height="15" fill="rgb(241,83,37)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1535.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1509" width="1.2729%" height="15" fill="rgb(233,36,39)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1519.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1493" width="1.2729%" height="15" fill="rgb(226,3,54)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1477" width="1.2729%" height="15" fill="rgb(245,192,40)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1461" width="1.2729%" height="15" fill="rgb(238,167,29)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1471.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1445" width="1.2729%" height="15" fill="rgb(232,182,51)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1429" width="1.2729%" height="15" fill="rgb(231,60,39)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1413" width="1.2729%" height="15" fill="rgb(208,69,12)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1423.50"></text></g><g><title>alloc::slice::hack::to_vec (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1397" width="1.2729%" height="15" fill="rgb(235,93,37)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1381" width="1.2729%" height="15" fill="rgb(213,116,39)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1391.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1365" width="1.2729%" height="15" fill="rgb(222,207,29)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1375.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1349" width="1.2729%" height="15" fill="rgb(206,96,30)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1359.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1333" width="1.2729%" height="15" fill="rgb(218,138,4)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1317" width="1.2729%" height="15" fill="rgb(250,191,14)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1327.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1301" width="1.2729%" height="15" fill="rgb(239,60,40)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1285" width="1.2729%" height="15" fill="rgb(206,27,48)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1269" width="1.2729%" height="15" fill="rgb(225,35,8)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1253" width="1.2729%" height="15" fill="rgb(250,213,24)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1237" width="1.2729%" height="15" fill="rgb(247,123,22)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1247.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1221" width="1.2729%" height="15" fill="rgb(231,138,38)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1231.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1205" width="1.2729%" height="15" fill="rgb(231,145,46)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1189" width="1.2729%" height="15" fill="rgb(251,118,11)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1173" width="1.2729%" height="15" fill="rgb(217,147,25)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1183.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1157" width="1.2729%" height="15" fill="rgb(247,81,37)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1167.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1141" width="1.2729%" height="15" fill="rgb(209,12,38)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1125" width="1.2729%" height="15" fill="rgb(227,1,9)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1109" width="1.2729%" height="15" fill="rgb(248,47,43)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1093" width="1.2729%" height="15" fill="rgb(221,10,30)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1077" width="1.2729%" height="15" fill="rgb(210,229,1)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1061" width="1.2729%" height="15" fill="rgb(222,148,37)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1045" width="1.2729%" height="15" fill="rgb(234,67,33)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1029" width="1.2729%" height="15" fill="rgb(247,98,35)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="1013" width="1.2729%" height="15" fill="rgb(247,138,52)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="997" width="1.2729%" height="15" fill="rgb(213,79,30)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="981" width="1.2729%" height="15" fill="rgb(246,177,23)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="991.50"></text></g><g><title>alloc::alloc::alloc (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="965" width="1.2729%" height="15" fill="rgb(230,62,27)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="975.50"></text></g><g><title>malloc (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="949" width="1.2729%" height="15" fill="rgb(216,154,8)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="959.50"></text></g><g><title>[libc.so.6] (2,965,915 samples, 1.27%)</title><rect x="9.7722%" y="933" width="1.2729%" height="15" fill="rgb(244,35,45)" fg:x="22770135" fg:w="2965915"/><text x="10.0222%" y="943.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="2021" width="3.7077%" height="15" fill="rgb(251,115,12)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="2031.50">&lt;ser..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="2005" width="3.7077%" height="15" fill="rgb(240,54,50)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="2015.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1989" width="3.7077%" height="15" fill="rgb(233,84,52)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1999.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1973" width="3.7077%" height="15" fill="rgb(207,117,47)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1983.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1957" width="3.7077%" height="15" fill="rgb(249,43,39)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1967.50">&lt;T a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1941" width="3.7077%" height="15" fill="rgb(209,38,44)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1951.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1925" width="3.7077%" height="15" fill="rgb(236,212,23)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1935.50">&lt;ser..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1909" width="3.7077%" height="15" fill="rgb(242,79,21)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1919.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1893" width="3.7077%" height="15" fill="rgb(211,96,35)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1903.50">&lt;all..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1877" width="3.7077%" height="15" fill="rgb(253,215,40)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1887.50">&lt;ser..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1861" width="3.7077%" height="15" fill="rgb(211,81,21)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1871.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1845" width="3.7077%" height="15" fill="rgb(208,190,38)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1855.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1829" width="3.7077%" height="15" fill="rgb(235,213,38)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1839.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1813" width="3.7077%" height="15" fill="rgb(237,122,38)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1823.50">&lt;T a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1797" width="3.7077%" height="15" fill="rgb(244,218,35)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1807.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1781" width="3.7077%" height="15" fill="rgb(240,68,47)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1791.50">&lt;ser..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1765" width="3.7077%" height="15" fill="rgb(210,16,53)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1775.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1749" width="3.7077%" height="15" fill="rgb(235,124,12)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1759.50">&lt;all..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1733" width="3.7077%" height="15" fill="rgb(224,169,11)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1743.50">&lt;ser..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1717" width="3.7077%" height="15" fill="rgb(250,166,2)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1727.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1701" width="3.7077%" height="15" fill="rgb(242,216,29)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1711.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1685" width="3.7077%" height="15" fill="rgb(230,116,27)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1695.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1669" width="3.7077%" height="15" fill="rgb(228,99,48)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1679.50">&lt;T a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1653" width="3.7077%" height="15" fill="rgb(253,11,6)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1663.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1637" width="3.7077%" height="15" fill="rgb(247,143,39)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1647.50">&lt;ser..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1621" width="3.7077%" height="15" fill="rgb(236,97,10)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1631.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,639,329 samples, 3.71%)</title><rect x="8.7449%" y="1605" width="3.7077%" height="15" fill="rgb(233,208,19)" fg:x="20376279" fg:w="8639329"/><text x="8.9949%" y="1615.50">&lt;all..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,245,473 samples, 2.68%)</title><rect x="9.7722%" y="1589" width="2.6804%" height="15" fill="rgb(216,164,2)" fg:x="22770135" fg:w="6245473"/><text x="10.0222%" y="1599.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,279,558 samples, 1.41%)</title><rect x="11.0451%" y="1573" width="1.4075%" height="15" fill="rgb(220,129,5)" fg:x="25736050" fg:w="3279558"/><text x="11.2951%" y="1583.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (13,954,246 samples, 5.99%)</title><rect x="7.4290%" y="2309" width="5.9887%" height="15" fill="rgb(242,17,10)" fg:x="17310230" fg:w="13954246"/><text x="7.6790%" y="2319.50">&lt;benchma..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2293" width="4.6729%" height="15" fill="rgb(242,107,0)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2303.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2277" width="4.6729%" height="15" fill="rgb(251,28,31)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2287.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2261" width="4.6729%" height="15" fill="rgb(233,223,10)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2271.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2245" width="4.6729%" height="15" fill="rgb(215,21,27)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2255.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2229" width="4.6729%" height="15" fill="rgb(232,23,21)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2239.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2213" width="4.6729%" height="15" fill="rgb(244,5,23)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2223.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2197" width="4.6729%" height="15" fill="rgb(226,81,46)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2207.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2181" width="4.6729%" height="15" fill="rgb(247,70,30)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2191.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2165" width="4.6729%" height="15" fill="rgb(212,68,19)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2175.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2149" width="4.6729%" height="15" fill="rgb(240,187,13)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2159.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2133" width="4.6729%" height="15" fill="rgb(223,113,26)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2143.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2117" width="4.6729%" height="15" fill="rgb(206,192,2)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2127.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2101" width="4.6729%" height="15" fill="rgb(241,108,4)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2111.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2085" width="4.6729%" height="15" fill="rgb(247,173,49)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2095.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2069" width="4.6729%" height="15" fill="rgb(224,114,35)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2079.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2053" width="4.6729%" height="15" fill="rgb(245,159,27)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2063.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10,888,197 samples, 4.67%)</title><rect x="8.7449%" y="2037" width="4.6729%" height="15" fill="rgb(245,172,44)" fg:x="20376279" fg:w="10888197"/><text x="8.9949%" y="2047.50">&lt;allo..</text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (2,248,868 samples, 0.97%)</title><rect x="12.4526%" y="2021" width="0.9651%" height="15" fill="rgb(236,23,11)" fg:x="29015608" fg:w="2248868"/><text x="12.7026%" y="2031.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (2,248,868 samples, 0.97%)</title><rect x="12.4526%" y="2005" width="0.9651%" height="15" fill="rgb(205,117,38)" fg:x="29015608" fg:w="2248868"/><text x="12.7026%" y="2015.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,248,868 samples, 0.97%)</title><rect x="12.4526%" y="1989" width="0.9651%" height="15" fill="rgb(237,72,25)" fg:x="29015608" fg:w="2248868"/><text x="12.7026%" y="1999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,940,821 samples, 1.26%)</title><rect x="13.4177%" y="2309" width="1.2621%" height="15" fill="rgb(244,70,9)" fg:x="31264476" fg:w="2940821"/><text x="13.6677%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,940,821 samples, 1.26%)</title><rect x="13.4177%" y="2293" width="1.2621%" height="15" fill="rgb(217,125,39)" fg:x="31264476" fg:w="2940821"/><text x="13.6677%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,940,821 samples, 1.26%)</title><rect x="13.4177%" y="2277" width="1.2621%" height="15" fill="rgb(235,36,10)" fg:x="31264476" fg:w="2940821"/><text x="13.6677%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,940,821 samples, 1.26%)</title><rect x="13.4177%" y="2261" width="1.2621%" height="15" fill="rgb(251,123,47)" fg:x="31264476" fg:w="2940821"/><text x="13.6677%" y="2271.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,940,821 samples, 1.26%)</title><rect x="13.4177%" y="2245" width="1.2621%" height="15" fill="rgb(221,13,13)" fg:x="31264476" fg:w="2940821"/><text x="13.6677%" y="2255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,940,821 samples, 1.26%)</title><rect x="13.4177%" y="2229" width="1.2621%" height="15" fill="rgb(238,131,9)" fg:x="31264476" fg:w="2940821"/><text x="13.6677%" y="2239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,940,821 samples, 1.26%)</title><rect x="13.4177%" y="2213" width="1.2621%" height="15" fill="rgb(211,50,8)" fg:x="31264476" fg:w="2940821"/><text x="13.6677%" y="2223.50"></text></g><g><title>alloc::alloc::realloc (2,940,821 samples, 1.26%)</title><rect x="13.4177%" y="2197" width="1.2621%" height="15" fill="rgb(245,182,24)" fg:x="31264476" fg:w="2940821"/><text x="13.6677%" y="2207.50"></text></g><g><title>realloc (2,940,821 samples, 1.26%)</title><rect x="13.4177%" y="2181" width="1.2621%" height="15" fill="rgb(242,14,37)" fg:x="31264476" fg:w="2940821"/><text x="13.6677%" y="2191.50"></text></g><g><title>[libc.so.6] (2,940,821 samples, 1.26%)</title><rect x="13.4177%" y="2165" width="1.2621%" height="15" fill="rgb(246,228,12)" fg:x="31264476" fg:w="2940821"/><text x="13.6677%" y="2175.50"></text></g><g><title>[libc.so.6] (2,940,821 samples, 1.26%)</title><rect x="13.4177%" y="2149" width="1.2621%" height="15" fill="rgb(213,55,15)" fg:x="31264476" fg:w="2940821"/><text x="13.6677%" y="2159.50"></text></g><g><title>[libc.so.6] (2,940,821 samples, 1.26%)</title><rect x="13.4177%" y="2133" width="1.2621%" height="15" fill="rgb(209,9,3)" fg:x="31264476" fg:w="2940821"/><text x="13.6677%" y="2143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,179,838 samples, 0.94%)</title><rect x="14.6799%" y="2245" width="0.9355%" height="15" fill="rgb(230,59,30)" fg:x="34205297" fg:w="2179838"/><text x="14.9299%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,179,838 samples, 0.94%)</title><rect x="14.6799%" y="2229" width="0.9355%" height="15" fill="rgb(209,121,21)" fg:x="34205297" fg:w="2179838"/><text x="14.9299%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,179,838 samples, 0.94%)</title><rect x="14.6799%" y="2213" width="0.9355%" height="15" fill="rgb(220,109,13)" fg:x="34205297" fg:w="2179838"/><text x="14.9299%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,179,838 samples, 0.94%)</title><rect x="14.6799%" y="2197" width="0.9355%" height="15" fill="rgb(232,18,1)" fg:x="34205297" fg:w="2179838"/><text x="14.9299%" y="2207.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,179,838 samples, 0.94%)</title><rect x="14.6799%" y="2181" width="0.9355%" height="15" fill="rgb(215,41,42)" fg:x="34205297" fg:w="2179838"/><text x="14.9299%" y="2191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,179,838 samples, 0.94%)</title><rect x="14.6799%" y="2165" width="0.9355%" height="15" fill="rgb(224,123,36)" fg:x="34205297" fg:w="2179838"/><text x="14.9299%" y="2175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,179,838 samples, 0.94%)</title><rect x="14.6799%" y="2149" width="0.9355%" height="15" fill="rgb(240,125,3)" fg:x="34205297" fg:w="2179838"/><text x="14.9299%" y="2159.50"></text></g><g><title>alloc::alloc::realloc (2,179,838 samples, 0.94%)</title><rect x="14.6799%" y="2133" width="0.9355%" height="15" fill="rgb(205,98,50)" fg:x="34205297" fg:w="2179838"/><text x="14.9299%" y="2143.50"></text></g><g><title>realloc (2,179,838 samples, 0.94%)</title><rect x="14.6799%" y="2117" width="0.9355%" height="15" fill="rgb(205,185,37)" fg:x="34205297" fg:w="2179838"/><text x="14.9299%" y="2127.50"></text></g><g><title>[libc.so.6] (2,179,838 samples, 0.94%)</title><rect x="14.6799%" y="2101" width="0.9355%" height="15" fill="rgb(238,207,15)" fg:x="34205297" fg:w="2179838"/><text x="14.9299%" y="2111.50"></text></g><g><title>[libc.so.6] (2,179,838 samples, 0.94%)</title><rect x="14.6799%" y="2085" width="0.9355%" height="15" fill="rgb(213,199,42)" fg:x="34205297" fg:w="2179838"/><text x="14.9299%" y="2095.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="2229" width="1.3519%" height="15" fill="rgb(235,201,11)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="2239.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="2213" width="1.3519%" height="15" fill="rgb(207,46,11)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="2223.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="2197" width="1.3519%" height="15" fill="rgb(241,35,35)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="2207.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="2181" width="1.3519%" height="15" fill="rgb(243,32,47)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="2191.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="2165" width="1.3519%" height="15" fill="rgb(247,202,23)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="2175.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="2149" width="1.3519%" height="15" fill="rgb(219,102,11)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="2159.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="2133" width="1.3519%" height="15" fill="rgb(243,110,44)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="2143.50"></text></g><g><title>alloc::slice::hack::to_vec (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="2117" width="1.3519%" height="15" fill="rgb(222,74,54)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="2127.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="2101" width="1.3519%" height="15" fill="rgb(216,99,12)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="2111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="2085" width="1.3519%" height="15" fill="rgb(226,22,26)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="2069" width="1.3519%" height="15" fill="rgb(217,163,10)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="2053" width="1.3519%" height="15" fill="rgb(213,25,53)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="2037" width="1.3519%" height="15" fill="rgb(252,105,26)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="2047.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="2021" width="1.3519%" height="15" fill="rgb(220,39,43)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="2031.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="2005" width="1.3519%" height="15" fill="rgb(229,68,48)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="2015.50"></text></g><g><title>alloc::alloc::alloc (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="1989" width="1.3519%" height="15" fill="rgb(252,8,32)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="1999.50"></text></g><g><title>malloc (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="1973" width="1.3519%" height="15" fill="rgb(223,20,43)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="1983.50"></text></g><g><title>[libc.so.6] (3,150,071 samples, 1.35%)</title><rect x="15.6154%" y="1957" width="1.3519%" height="15" fill="rgb(229,81,49)" fg:x="36385135" fg:w="3150071"/><text x="15.8654%" y="1967.50"></text></g><g><title>benchmark::json_to_html_node (6,300,229 samples, 2.70%)</title><rect x="15.6154%" y="2245" width="2.7039%" height="15" fill="rgb(236,28,36)" fg:x="36385135" fg:w="6300229"/><text x="15.8654%" y="2255.50">be..</text></g><g><title>benchmark::json_to_html_node (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="2229" width="1.3520%" height="15" fill="rgb(249,185,26)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="2239.50"></text></g><g><title>benchmark::json_to_html_node (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="2213" width="1.3520%" height="15" fill="rgb(249,174,33)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="2223.50"></text></g><g><title>benchmark::json_to_html_node (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="2197" width="1.3520%" height="15" fill="rgb(233,201,37)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="2207.50"></text></g><g><title>benchmark::json_to_html_node (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="2181" width="1.3520%" height="15" fill="rgb(221,78,26)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="2191.50"></text></g><g><title>benchmark::json_to_html_node (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="2165" width="1.3520%" height="15" fill="rgb(250,127,30)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="2175.50"></text></g><g><title>benchmark::json_to_html_node (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="2149" width="1.3520%" height="15" fill="rgb(230,49,44)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="2159.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="2133" width="1.3520%" height="15" fill="rgb(229,67,23)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="2143.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="2117" width="1.3520%" height="15" fill="rgb(249,83,47)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="2127.50"></text></g><g><title>alloc::str::convert_while_ascii (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="2101" width="1.3520%" height="15" fill="rgb(215,43,3)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="2111.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="2085" width="1.3520%" height="15" fill="rgb(238,154,13)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="2095.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="2069" width="1.3520%" height="15" fill="rgb(219,56,2)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="2053" width="1.3520%" height="15" fill="rgb(233,0,4)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="2037" width="1.3520%" height="15" fill="rgb(235,30,7)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="2021" width="1.3520%" height="15" fill="rgb(250,79,13)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="2031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="2005" width="1.3520%" height="15" fill="rgb(211,146,34)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="2015.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="1989" width="1.3520%" height="15" fill="rgb(228,22,38)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="1999.50"></text></g><g><title>alloc::alloc::alloc (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="1973" width="1.3520%" height="15" fill="rgb(235,168,5)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="1983.50"></text></g><g><title>malloc (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="1957" width="1.3520%" height="15" fill="rgb(221,155,16)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="1967.50"></text></g><g><title>[libc.so.6] (3,150,158 samples, 1.35%)</title><rect x="16.9673%" y="1941" width="1.3520%" height="15" fill="rgb(215,215,53)" fg:x="39535206" fg:w="3150158"/><text x="17.2173%" y="1951.50"></text></g><g><title>benchmark::apply_frame_modifications (10,801,175 samples, 4.64%)</title><rect x="14.6799%" y="2309" width="4.6355%" height="15" fill="rgb(223,4,10)" fg:x="34205297" fg:w="10801175"/><text x="14.9299%" y="2319.50">bench..</text></g><g><title>benchmark::json_to_html_node (10,801,175 samples, 4.64%)</title><rect x="14.6799%" y="2293" width="4.6355%" height="15" fill="rgb(234,103,6)" fg:x="34205297" fg:w="10801175"/><text x="14.9299%" y="2303.50">bench..</text></g><g><title>benchmark::json_to_html_node (10,801,175 samples, 4.64%)</title><rect x="14.6799%" y="2277" width="4.6355%" height="15" fill="rgb(227,97,0)" fg:x="34205297" fg:w="10801175"/><text x="14.9299%" y="2287.50">bench..</text></g><g><title>benchmark::json_to_html_node (10,801,175 samples, 4.64%)</title><rect x="14.6799%" y="2261" width="4.6355%" height="15" fill="rgb(234,150,53)" fg:x="34205297" fg:w="10801175"/><text x="14.9299%" y="2271.50">bench..</text></g><g><title>css_bitvector_compiler::HtmlNode::new (2,321,108 samples, 1.00%)</title><rect x="18.3192%" y="2245" width="0.9961%" height="15" fill="rgb(228,201,54)" fg:x="42685364" fg:w="2321108"/><text x="18.5692%" y="2255.50"></text></g><g><title>css_bitvector_compiler::BitVector::new (2,321,108 samples, 1.00%)</title><rect x="18.3192%" y="2229" width="0.9961%" height="15" fill="rgb(222,22,37)" fg:x="42685364" fg:w="2321108"/><text x="18.5692%" y="2239.50"></text></g><g><title>alloc::vec::from_elem (2,321,108 samples, 1.00%)</title><rect x="18.3192%" y="2213" width="0.9961%" height="15" fill="rgb(237,53,32)" fg:x="42685364" fg:w="2321108"/><text x="18.5692%" y="2223.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2,321,108 samples, 1.00%)</title><rect x="18.3192%" y="2197" width="0.9961%" height="15" fill="rgb(233,25,53)" fg:x="42685364" fg:w="2321108"/><text x="18.5692%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (2,321,108 samples, 1.00%)</title><rect x="18.3192%" y="2181" width="0.9961%" height="15" fill="rgb(210,40,34)" fg:x="42685364" fg:w="2321108"/><text x="18.5692%" y="2191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (2,321,108 samples, 1.00%)</title><rect x="18.3192%" y="2165" width="0.9961%" height="15" fill="rgb(241,220,44)" fg:x="42685364" fg:w="2321108"/><text x="18.5692%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,321,108 samples, 1.00%)</title><rect x="18.3192%" y="2149" width="0.9961%" height="15" fill="rgb(235,28,35)" fg:x="42685364" fg:w="2321108"/><text x="18.5692%" y="2159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (2,321,108 samples, 1.00%)</title><rect x="18.3192%" y="2133" width="0.9961%" height="15" fill="rgb(210,56,17)" fg:x="42685364" fg:w="2321108"/><text x="18.5692%" y="2143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,321,108 samples, 1.00%)</title><rect x="18.3192%" y="2117" width="0.9961%" height="15" fill="rgb(224,130,29)" fg:x="42685364" fg:w="2321108"/><text x="18.5692%" y="2127.50"></text></g><g><title>alloc::alloc::alloc_zeroed (2,321,108 samples, 1.00%)</title><rect x="18.3192%" y="2101" width="0.9961%" height="15" fill="rgb(235,212,8)" fg:x="42685364" fg:w="2321108"/><text x="18.5692%" y="2111.50"></text></g><g><title>__libc_calloc (2,321,108 samples, 1.00%)</title><rect x="18.3192%" y="2085" width="0.9961%" height="15" fill="rgb(223,33,50)" fg:x="42685364" fg:w="2321108"/><text x="18.5692%" y="2095.50"></text></g><g><title>[libc.so.6] (2,321,108 samples, 1.00%)</title><rect x="18.3192%" y="2069" width="0.9961%" height="15" fill="rgb(219,149,13)" fg:x="42685364" fg:w="2321108"/><text x="18.5692%" y="2079.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,417,056 samples, 1.47%)</title><rect x="19.3154%" y="2037" width="1.4665%" height="15" fill="rgb(250,156,29)" fg:x="45006472" fg:w="3417056"/><text x="19.5654%" y="2047.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,110,151 samples, 1.33%)</title><rect x="22.2003%" y="1797" width="1.3348%" height="15" fill="rgb(216,193,19)" fg:x="51728603" fg:w="3110151"/><text x="22.4503%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,110,151 samples, 1.33%)</title><rect x="22.2003%" y="1781" width="1.3348%" height="15" fill="rgb(216,135,14)" fg:x="51728603" fg:w="3110151"/><text x="22.4503%" y="1791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,110,151 samples, 1.33%)</title><rect x="22.2003%" y="1765" width="1.3348%" height="15" fill="rgb(241,47,5)" fg:x="51728603" fg:w="3110151"/><text x="22.4503%" y="1775.50"></text></g><g><title>alloc::slice::hack::to_vec (3,110,151 samples, 1.33%)</title><rect x="22.2003%" y="1749" width="1.3348%" height="15" fill="rgb(233,42,35)" fg:x="51728603" fg:w="3110151"/><text x="22.4503%" y="1759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,110,151 samples, 1.33%)</title><rect x="22.2003%" y="1733" width="1.3348%" height="15" fill="rgb(231,13,6)" fg:x="51728603" fg:w="3110151"/><text x="22.4503%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,110,151 samples, 1.33%)</title><rect x="22.2003%" y="1717" width="1.3348%" height="15" fill="rgb(207,181,40)" fg:x="51728603" fg:w="3110151"/><text x="22.4503%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,110,151 samples, 1.33%)</title><rect x="22.2003%" y="1701" width="1.3348%" height="15" fill="rgb(254,173,49)" fg:x="51728603" fg:w="3110151"/><text x="22.4503%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,110,151 samples, 1.33%)</title><rect x="22.2003%" y="1685" width="1.3348%" height="15" fill="rgb(221,1,38)" fg:x="51728603" fg:w="3110151"/><text x="22.4503%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,110,151 samples, 1.33%)</title><rect x="22.2003%" y="1669" width="1.3348%" height="15" fill="rgb(206,124,46)" fg:x="51728603" fg:w="3110151"/><text x="22.4503%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,110,151 samples, 1.33%)</title><rect x="22.2003%" y="1653" width="1.3348%" height="15" fill="rgb(249,21,11)" fg:x="51728603" fg:w="3110151"/><text x="22.4503%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,110,151 samples, 1.33%)</title><rect x="22.2003%" y="1637" width="1.3348%" height="15" fill="rgb(222,201,40)" fg:x="51728603" fg:w="3110151"/><text x="22.4503%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (3,110,151 samples, 1.33%)</title><rect x="22.2003%" y="1621" width="1.3348%" height="15" fill="rgb(235,61,29)" fg:x="51728603" fg:w="3110151"/><text x="22.4503%" y="1631.50"></text></g><g><title>malloc (3,110,151 samples, 1.33%)</title><rect x="22.2003%" y="1605" width="1.3348%" height="15" fill="rgb(219,207,3)" fg:x="51728603" fg:w="3110151"/><text x="22.4503%" y="1615.50"></text></g><g><title>[libc.so.6] (3,110,151 samples, 1.33%)</title><rect x="22.2003%" y="1589" width="1.3348%" height="15" fill="rgb(222,56,46)" fg:x="51728603" fg:w="3110151"/><text x="22.4503%" y="1599.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,877,486 samples, 2.95%)</title><rect x="23.5351%" y="1717" width="2.9516%" height="15" fill="rgb(239,76,54)" fg:x="54838754" fg:w="6877486"/><text x="23.7851%" y="1727.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,595,321 samples, 1.54%)</title><rect x="24.9437%" y="1701" width="1.5430%" height="15" fill="rgb(231,124,27)" fg:x="58120919" fg:w="3595321"/><text x="25.1937%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,595,321 samples, 1.54%)</title><rect x="24.9437%" y="1685" width="1.5430%" height="15" fill="rgb(249,195,6)" fg:x="58120919" fg:w="3595321"/><text x="25.1937%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (3,595,321 samples, 1.54%)</title><rect x="24.9437%" y="1669" width="1.5430%" height="15" fill="rgb(237,174,47)" fg:x="58120919" fg:w="3595321"/><text x="25.1937%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,595,321 samples, 1.54%)</title><rect x="24.9437%" y="1653" width="1.5430%" height="15" fill="rgb(206,201,31)" fg:x="58120919" fg:w="3595321"/><text x="25.1937%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,595,321 samples, 1.54%)</title><rect x="24.9437%" y="1637" width="1.5430%" height="15" fill="rgb(231,57,52)" fg:x="58120919" fg:w="3595321"/><text x="25.1937%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,595,321 samples, 1.54%)</title><rect x="24.9437%" y="1621" width="1.5430%" height="15" fill="rgb(248,177,22)" fg:x="58120919" fg:w="3595321"/><text x="25.1937%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,595,321 samples, 1.54%)</title><rect x="24.9437%" y="1605" width="1.5430%" height="15" fill="rgb(215,211,37)" fg:x="58120919" fg:w="3595321"/><text x="25.1937%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,595,321 samples, 1.54%)</title><rect x="24.9437%" y="1589" width="1.5430%" height="15" fill="rgb(241,128,51)" fg:x="58120919" fg:w="3595321"/><text x="25.1937%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,595,321 samples, 1.54%)</title><rect x="24.9437%" y="1573" width="1.5430%" height="15" fill="rgb(227,165,31)" fg:x="58120919" fg:w="3595321"/><text x="25.1937%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,595,321 samples, 1.54%)</title><rect x="24.9437%" y="1557" width="1.5430%" height="15" fill="rgb(228,167,24)" fg:x="58120919" fg:w="3595321"/><text x="25.1937%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (3,595,321 samples, 1.54%)</title><rect x="24.9437%" y="1541" width="1.5430%" height="15" fill="rgb(228,143,12)" fg:x="58120919" fg:w="3595321"/><text x="25.1937%" y="1551.50"></text></g><g><title>malloc (3,595,321 samples, 1.54%)</title><rect x="24.9437%" y="1525" width="1.5430%" height="15" fill="rgb(249,149,8)" fg:x="58120919" fg:w="3595321"/><text x="25.1937%" y="1535.50"></text></g><g><title>[libc.so.6] (3,595,321 samples, 1.54%)</title><rect x="24.9437%" y="1509" width="1.5430%" height="15" fill="rgb(243,35,44)" fg:x="58120919" fg:w="3595321"/><text x="25.1937%" y="1519.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,508,620 samples, 1.51%)</title><rect x="26.4867%" y="933" width="1.5058%" height="15" fill="rgb(246,89,9)" fg:x="61716240" fg:w="3508620"/><text x="26.7367%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,508,620 samples, 1.51%)</title><rect x="26.4867%" y="917" width="1.5058%" height="15" fill="rgb(233,213,13)" fg:x="61716240" fg:w="3508620"/><text x="26.7367%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,708,914 samples, 2.88%)</title><rect x="26.4867%" y="997" width="2.8793%" height="15" fill="rgb(233,141,41)" fg:x="61716240" fg:w="6708914"/><text x="26.7367%" y="1007.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,708,914 samples, 2.88%)</title><rect x="26.4867%" y="981" width="2.8793%" height="15" fill="rgb(239,167,4)" fg:x="61716240" fg:w="6708914"/><text x="26.7367%" y="991.50">al..</text></g><g><title>alloc::slice::hack::to_vec (6,708,914 samples, 2.88%)</title><rect x="26.4867%" y="965" width="2.8793%" height="15" fill="rgb(209,217,16)" fg:x="61716240" fg:w="6708914"/><text x="26.7367%" y="975.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,708,914 samples, 2.88%)</title><rect x="26.4867%" y="949" width="2.8793%" height="15" fill="rgb(219,88,35)" fg:x="61716240" fg:w="6708914"/><text x="26.7367%" y="959.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,200,294 samples, 1.37%)</title><rect x="27.9925%" y="933" width="1.3735%" height="15" fill="rgb(220,193,23)" fg:x="65224860" fg:w="3200294"/><text x="28.2425%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,200,294 samples, 1.37%)</title><rect x="27.9925%" y="917" width="1.3735%" height="15" fill="rgb(230,90,52)" fg:x="65224860" fg:w="3200294"/><text x="28.2425%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,200,294 samples, 1.37%)</title><rect x="27.9925%" y="901" width="1.3735%" height="15" fill="rgb(252,106,19)" fg:x="65224860" fg:w="3200294"/><text x="28.2425%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,200,294 samples, 1.37%)</title><rect x="27.9925%" y="885" width="1.3735%" height="15" fill="rgb(206,74,20)" fg:x="65224860" fg:w="3200294"/><text x="28.2425%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,200,294 samples, 1.37%)</title><rect x="27.9925%" y="869" width="1.3735%" height="15" fill="rgb(230,138,44)" fg:x="65224860" fg:w="3200294"/><text x="28.2425%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,200,294 samples, 1.37%)</title><rect x="27.9925%" y="853" width="1.3735%" height="15" fill="rgb(235,182,43)" fg:x="65224860" fg:w="3200294"/><text x="28.2425%" y="863.50"></text></g><g><title>alloc::alloc::alloc (3,200,294 samples, 1.37%)</title><rect x="27.9925%" y="837" width="1.3735%" height="15" fill="rgb(242,16,51)" fg:x="65224860" fg:w="3200294"/><text x="28.2425%" y="847.50"></text></g><g><title>malloc (3,200,294 samples, 1.37%)</title><rect x="27.9925%" y="821" width="1.3735%" height="15" fill="rgb(248,9,4)" fg:x="65224860" fg:w="3200294"/><text x="28.2425%" y="831.50"></text></g><g><title>[libc.so.6] (3,200,294 samples, 1.37%)</title><rect x="27.9925%" y="805" width="1.3735%" height="15" fill="rgb(210,31,22)" fg:x="65224860" fg:w="3200294"/><text x="28.2425%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,017,105 samples, 4.30%)</title><rect x="26.4867%" y="1077" width="4.2990%" height="15" fill="rgb(239,54,39)" fg:x="61716240" fg:w="10017105"/><text x="26.7367%" y="1087.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,017,105 samples, 4.30%)</title><rect x="26.4867%" y="1061" width="4.2990%" height="15" fill="rgb(230,99,41)" fg:x="61716240" fg:w="10017105"/><text x="26.7367%" y="1071.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (10,017,105 samples, 4.30%)</title><rect x="26.4867%" y="1045" width="4.2990%" height="15" fill="rgb(253,106,12)" fg:x="61716240" fg:w="10017105"/><text x="26.7367%" y="1055.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,017,105 samples, 4.30%)</title><rect x="26.4867%" y="1029" width="4.2990%" height="15" fill="rgb(213,46,41)" fg:x="61716240" fg:w="10017105"/><text x="26.7367%" y="1039.50">&lt;T as..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (10,017,105 samples, 4.30%)</title><rect x="26.4867%" y="1013" width="4.2990%" height="15" fill="rgb(215,133,35)" fg:x="61716240" fg:w="10017105"/><text x="26.7367%" y="1023.50">&lt;css_..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="997" width="1.4198%" height="15" fill="rgb(213,28,5)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="1007.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="981" width="1.4198%" height="15" fill="rgb(215,77,49)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="991.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="965" width="1.4198%" height="15" fill="rgb(248,100,22)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="949" width="1.4198%" height="15" fill="rgb(208,67,9)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="933" width="1.4198%" height="15" fill="rgb(219,133,21)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="917" width="1.4198%" height="15" fill="rgb(246,46,29)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="927.50"></text></g><g><title>core::clone::Clone::clone (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="901" width="1.4198%" height="15" fill="rgb(246,185,52)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="885" width="1.4198%" height="15" fill="rgb(252,136,11)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="869" width="1.4198%" height="15" fill="rgb(219,138,53)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="853" width="1.4198%" height="15" fill="rgb(211,51,23)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="837" width="1.4198%" height="15" fill="rgb(247,221,28)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="821" width="1.4198%" height="15" fill="rgb(251,222,45)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="805" width="1.4198%" height="15" fill="rgb(217,162,53)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="789" width="1.4198%" height="15" fill="rgb(229,93,14)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="773" width="1.4198%" height="15" fill="rgb(209,67,49)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="757" width="1.4198%" height="15" fill="rgb(213,87,29)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="741" width="1.4198%" height="15" fill="rgb(205,151,52)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="725" width="1.4198%" height="15" fill="rgb(253,215,39)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="735.50"></text></g><g><title>alloc::alloc::alloc (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="709" width="1.4198%" height="15" fill="rgb(221,220,41)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="719.50"></text></g><g><title>malloc (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="693" width="1.4198%" height="15" fill="rgb(218,133,21)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="703.50"></text></g><g><title>[libc.so.6] (3,308,191 samples, 1.42%)</title><rect x="29.3660%" y="677" width="1.4198%" height="15" fill="rgb(221,193,43)" fg:x="68425154" fg:w="3308191"/><text x="29.6160%" y="687.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (13,332,373 samples, 5.72%)</title><rect x="26.4867%" y="1093" width="5.7218%" height="15" fill="rgb(240,128,52)" fg:x="61716240" fg:w="13332373"/><text x="26.7367%" y="1103.50">&lt;css_bi..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,315,268 samples, 1.42%)</title><rect x="30.7857%" y="1077" width="1.4228%" height="15" fill="rgb(253,114,12)" fg:x="71733345" fg:w="3315268"/><text x="31.0357%" y="1087.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,315,268 samples, 1.42%)</title><rect x="30.7857%" y="1061" width="1.4228%" height="15" fill="rgb(215,223,47)" fg:x="71733345" fg:w="3315268"/><text x="31.0357%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,315,268 samples, 1.42%)</title><rect x="30.7857%" y="1045" width="1.4228%" height="15" fill="rgb(248,225,23)" fg:x="71733345" fg:w="3315268"/><text x="31.0357%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,315,268 samples, 1.42%)</title><rect x="30.7857%" y="1029" width="1.4228%" height="15" fill="rgb(250,108,0)" fg:x="71733345" fg:w="3315268"/><text x="31.0357%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,315,268 samples, 1.42%)</title><rect x="30.7857%" y="1013" width="1.4228%" height="15" fill="rgb(228,208,7)" fg:x="71733345" fg:w="3315268"/><text x="31.0357%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,315,268 samples, 1.42%)</title><rect x="30.7857%" y="997" width="1.4228%" height="15" fill="rgb(244,45,10)" fg:x="71733345" fg:w="3315268"/><text x="31.0357%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (3,315,268 samples, 1.42%)</title><rect x="30.7857%" y="981" width="1.4228%" height="15" fill="rgb(207,125,25)" fg:x="71733345" fg:w="3315268"/><text x="31.0357%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,315,268 samples, 1.42%)</title><rect x="30.7857%" y="965" width="1.4228%" height="15" fill="rgb(210,195,18)" fg:x="71733345" fg:w="3315268"/><text x="31.0357%" y="975.50"></text></g><g><title>[libc.so.6] (3,315,268 samples, 1.42%)</title><rect x="30.7857%" y="949" width="1.4228%" height="15" fill="rgb(249,80,12)" fg:x="71733345" fg:w="3315268"/><text x="31.0357%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,873,054 samples, 8.53%)</title><rect x="26.4867%" y="1237" width="8.5289%" height="15" fill="rgb(221,65,9)" fg:x="61716240" fg:w="19873054"/><text x="26.7367%" y="1247.50">&lt;alloc::vec:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,873,054 samples, 8.53%)</title><rect x="26.4867%" y="1221" width="8.5289%" height="15" fill="rgb(235,49,36)" fg:x="61716240" fg:w="19873054"/><text x="26.7367%" y="1231.50">alloc::slice..</text></g><g><title>alloc::slice::hack::to_vec (19,873,054 samples, 8.53%)</title><rect x="26.4867%" y="1205" width="8.5289%" height="15" fill="rgb(225,32,20)" fg:x="61716240" fg:w="19873054"/><text x="26.7367%" y="1215.50">alloc::slice..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,873,054 samples, 8.53%)</title><rect x="26.4867%" y="1189" width="8.5289%" height="15" fill="rgb(215,141,46)" fg:x="61716240" fg:w="19873054"/><text x="26.7367%" y="1199.50">&lt;T as alloc:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,873,054 samples, 8.53%)</title><rect x="26.4867%" y="1173" width="8.5289%" height="15" fill="rgb(250,160,47)" fg:x="61716240" fg:w="19873054"/><text x="26.7367%" y="1183.50">&lt;css_bitvect..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,873,054 samples, 8.53%)</title><rect x="26.4867%" y="1157" width="8.5289%" height="15" fill="rgb(216,222,40)" fg:x="61716240" fg:w="19873054"/><text x="26.7367%" y="1167.50">&lt;alloc::vec:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,873,054 samples, 8.53%)</title><rect x="26.4867%" y="1141" width="8.5289%" height="15" fill="rgb(234,217,39)" fg:x="61716240" fg:w="19873054"/><text x="26.7367%" y="1151.50">alloc::slice..</text></g><g><title>alloc::slice::hack::to_vec (19,873,054 samples, 8.53%)</title><rect x="26.4867%" y="1125" width="8.5289%" height="15" fill="rgb(207,178,40)" fg:x="61716240" fg:w="19873054"/><text x="26.7367%" y="1135.50">alloc::slice..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,873,054 samples, 8.53%)</title><rect x="26.4867%" y="1109" width="8.5289%" height="15" fill="rgb(221,136,13)" fg:x="61716240" fg:w="19873054"/><text x="26.7367%" y="1119.50">&lt;T as alloc:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,540,681 samples, 2.81%)</title><rect x="32.2085%" y="1093" width="2.8071%" height="15" fill="rgb(249,199,10)" fg:x="75048613" fg:w="6540681"/><text x="32.4585%" y="1103.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,540,681 samples, 2.81%)</title><rect x="32.2085%" y="1077" width="2.8071%" height="15" fill="rgb(249,222,13)" fg:x="75048613" fg:w="6540681"/><text x="32.4585%" y="1087.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,540,681 samples, 2.81%)</title><rect x="32.2085%" y="1061" width="2.8071%" height="15" fill="rgb(244,185,38)" fg:x="75048613" fg:w="6540681"/><text x="32.4585%" y="1071.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,540,681 samples, 2.81%)</title><rect x="32.2085%" y="1045" width="2.8071%" height="15" fill="rgb(236,202,9)" fg:x="75048613" fg:w="6540681"/><text x="32.4585%" y="1055.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,540,681 samples, 2.81%)</title><rect x="32.2085%" y="1029" width="2.8071%" height="15" fill="rgb(250,229,37)" fg:x="75048613" fg:w="6540681"/><text x="32.4585%" y="1039.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (6,540,681 samples, 2.81%)</title><rect x="32.2085%" y="1013" width="2.8071%" height="15" fill="rgb(206,174,23)" fg:x="75048613" fg:w="6540681"/><text x="32.4585%" y="1023.50">al..</text></g><g><title>alloc::alloc::alloc (6,540,681 samples, 2.81%)</title><rect x="32.2085%" y="997" width="2.8071%" height="15" fill="rgb(211,33,43)" fg:x="75048613" fg:w="6540681"/><text x="32.4585%" y="1007.50">al..</text></g><g><title>malloc (6,540,681 samples, 2.81%)</title><rect x="32.2085%" y="981" width="2.8071%" height="15" fill="rgb(245,58,50)" fg:x="75048613" fg:w="6540681"/><text x="32.4585%" y="991.50">ma..</text></g><g><title>[libc.so.6] (6,540,681 samples, 2.81%)</title><rect x="32.2085%" y="965" width="2.8071%" height="15" fill="rgb(244,68,36)" fg:x="75048613" fg:w="6540681"/><text x="32.4585%" y="975.50">[l..</text></g><g><title>[libc.so.6] (3,537,655 samples, 1.52%)</title><rect x="33.4974%" y="949" width="1.5183%" height="15" fill="rgb(232,229,15)" fg:x="78051639" fg:w="3537655"/><text x="33.7474%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22,929,820 samples, 9.84%)</title><rect x="26.4867%" y="1317" width="9.8408%" height="15" fill="rgb(254,30,23)" fg:x="61716240" fg:w="22929820"/><text x="26.7367%" y="1327.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22,929,820 samples, 9.84%)</title><rect x="26.4867%" y="1301" width="9.8408%" height="15" fill="rgb(235,160,14)" fg:x="61716240" fg:w="22929820"/><text x="26.7367%" y="1311.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (22,929,820 samples, 9.84%)</title><rect x="26.4867%" y="1285" width="9.8408%" height="15" fill="rgb(212,155,44)" fg:x="61716240" fg:w="22929820"/><text x="26.7367%" y="1295.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22,929,820 samples, 9.84%)</title><rect x="26.4867%" y="1269" width="9.8408%" height="15" fill="rgb(226,2,50)" fg:x="61716240" fg:w="22929820"/><text x="26.7367%" y="1279.50">&lt;T as alloc::s..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (22,929,820 samples, 9.84%)</title><rect x="26.4867%" y="1253" width="9.8408%" height="15" fill="rgb(234,177,6)" fg:x="61716240" fg:w="22929820"/><text x="26.7367%" y="1263.50">&lt;css_bitvector..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,056,766 samples, 1.31%)</title><rect x="35.0156%" y="1237" width="1.3119%" height="15" fill="rgb(217,24,9)" fg:x="81589294" fg:w="3056766"/><text x="35.2656%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,056,766 samples, 1.31%)</title><rect x="35.0156%" y="1221" width="1.3119%" height="15" fill="rgb(220,13,46)" fg:x="81589294" fg:w="3056766"/><text x="35.2656%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,056,766 samples, 1.31%)</title><rect x="35.0156%" y="1205" width="1.3119%" height="15" fill="rgb(239,221,27)" fg:x="81589294" fg:w="3056766"/><text x="35.2656%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (3,056,766 samples, 1.31%)</title><rect x="35.0156%" y="1189" width="1.3119%" height="15" fill="rgb(222,198,25)" fg:x="81589294" fg:w="3056766"/><text x="35.2656%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,056,766 samples, 1.31%)</title><rect x="35.0156%" y="1173" width="1.3119%" height="15" fill="rgb(211,99,13)" fg:x="81589294" fg:w="3056766"/><text x="35.2656%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,056,766 samples, 1.31%)</title><rect x="35.0156%" y="1157" width="1.3119%" height="15" fill="rgb(232,111,31)" fg:x="81589294" fg:w="3056766"/><text x="35.2656%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,056,766 samples, 1.31%)</title><rect x="35.0156%" y="1141" width="1.3119%" height="15" fill="rgb(245,82,37)" fg:x="81589294" fg:w="3056766"/><text x="35.2656%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,056,766 samples, 1.31%)</title><rect x="35.0156%" y="1125" width="1.3119%" height="15" fill="rgb(227,149,46)" fg:x="81589294" fg:w="3056766"/><text x="35.2656%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,056,766 samples, 1.31%)</title><rect x="35.0156%" y="1109" width="1.3119%" height="15" fill="rgb(218,36,50)" fg:x="81589294" fg:w="3056766"/><text x="35.2656%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,056,766 samples, 1.31%)</title><rect x="35.0156%" y="1093" width="1.3119%" height="15" fill="rgb(226,80,48)" fg:x="81589294" fg:w="3056766"/><text x="35.2656%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,056,766 samples, 1.31%)</title><rect x="35.0156%" y="1077" width="1.3119%" height="15" fill="rgb(238,224,15)" fg:x="81589294" fg:w="3056766"/><text x="35.2656%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (3,056,766 samples, 1.31%)</title><rect x="35.0156%" y="1061" width="1.3119%" height="15" fill="rgb(241,136,10)" fg:x="81589294" fg:w="3056766"/><text x="35.2656%" y="1071.50"></text></g><g><title>malloc (3,056,766 samples, 1.31%)</title><rect x="35.0156%" y="1045" width="1.3119%" height="15" fill="rgb(208,32,45)" fg:x="81589294" fg:w="3056766"/><text x="35.2656%" y="1055.50"></text></g><g><title>[libc.so.6] (3,056,766 samples, 1.31%)</title><rect x="35.0156%" y="1029" width="1.3119%" height="15" fill="rgb(207,135,9)" fg:x="81589294" fg:w="3056766"/><text x="35.2656%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29,435,485 samples, 12.63%)</title><rect x="26.4867%" y="1397" width="12.6328%" height="15" fill="rgb(206,86,44)" fg:x="61716240" fg:w="29435485"/><text x="26.7367%" y="1407.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29,435,485 samples, 12.63%)</title><rect x="26.4867%" y="1381" width="12.6328%" height="15" fill="rgb(245,177,15)" fg:x="61716240" fg:w="29435485"/><text x="26.7367%" y="1391.50">alloc::slice::&lt;impl..</text></g><g><title>alloc::slice::hack::to_vec (29,435,485 samples, 12.63%)</title><rect x="26.4867%" y="1365" width="12.6328%" height="15" fill="rgb(206,64,50)" fg:x="61716240" fg:w="29435485"/><text x="26.7367%" y="1375.50">alloc::slice::hack:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29,435,485 samples, 12.63%)</title><rect x="26.4867%" y="1349" width="12.6328%" height="15" fill="rgb(234,36,40)" fg:x="61716240" fg:w="29435485"/><text x="26.7367%" y="1359.50">&lt;T as alloc::slice:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (29,435,485 samples, 12.63%)</title><rect x="26.4867%" y="1333" width="12.6328%" height="15" fill="rgb(213,64,8)" fg:x="61716240" fg:w="29435485"/><text x="26.7367%" y="1343.50">&lt;css_bitvector_comp..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1317" width="2.7920%" height="15" fill="rgb(210,75,36)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1327.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1301" width="2.7920%" height="15" fill="rgb(229,88,21)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1311.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1285" width="2.7920%" height="15" fill="rgb(252,204,47)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1295.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1269" width="2.7920%" height="15" fill="rgb(208,77,27)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1279.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1253" width="2.7920%" height="15" fill="rgb(221,76,26)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1263.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1237" width="2.7920%" height="15" fill="rgb(225,139,18)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1247.50">ha..</text></g><g><title>core::clone::Clone::clone (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1221" width="2.7920%" height="15" fill="rgb(230,137,11)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1231.50">co..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1205" width="2.7920%" height="15" fill="rgb(212,28,1)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1215.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1189" width="2.7920%" height="15" fill="rgb(248,164,17)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1199.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1173" width="2.7920%" height="15" fill="rgb(222,171,42)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1183.50">al..</text></g><g><title>alloc::slice::hack::to_vec (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1157" width="2.7920%" height="15" fill="rgb(243,84,45)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1167.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1141" width="2.7920%" height="15" fill="rgb(252,49,23)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1151.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1125" width="2.7920%" height="15" fill="rgb(215,19,7)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1135.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1109" width="2.7920%" height="15" fill="rgb(238,81,41)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1119.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1093" width="2.7920%" height="15" fill="rgb(210,199,37)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1103.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,505,665 samples, 2.79%)</title><rect x="36.3275%" y="1077" width="2.7920%" height="15" fill="rgb(244,192,49)" fg:x="84646060" fg:w="6505665"/><text x="36.5775%" y="1087.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,474,040 samples, 1.49%)</title><rect x="37.6286%" y="1061" width="1.4910%" height="15" fill="rgb(226,211,11)" fg:x="87677685" fg:w="3474040"/><text x="37.8786%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,474,040 samples, 1.49%)</title><rect x="37.6286%" y="1045" width="1.4910%" height="15" fill="rgb(236,162,54)" fg:x="87677685" fg:w="3474040"/><text x="37.8786%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (3,474,040 samples, 1.49%)</title><rect x="37.6286%" y="1029" width="1.4910%" height="15" fill="rgb(220,229,9)" fg:x="87677685" fg:w="3474040"/><text x="37.8786%" y="1039.50"></text></g><g><title>__rust_alloc (3,474,040 samples, 1.49%)</title><rect x="37.6286%" y="1013" width="1.4910%" height="15" fill="rgb(250,87,22)" fg:x="87677685" fg:w="3474040"/><text x="37.8786%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32,620,460 samples, 14.00%)</title><rect x="26.4867%" y="1477" width="13.9997%" height="15" fill="rgb(239,43,17)" fg:x="61716240" fg:w="32620460"/><text x="26.7367%" y="1487.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32,620,460 samples, 14.00%)</title><rect x="26.4867%" y="1461" width="13.9997%" height="15" fill="rgb(231,177,25)" fg:x="61716240" fg:w="32620460"/><text x="26.7367%" y="1471.50">alloc::slice::&lt;impl [..</text></g><g><title>alloc::slice::hack::to_vec (32,620,460 samples, 14.00%)</title><rect x="26.4867%" y="1445" width="13.9997%" height="15" fill="rgb(219,179,1)" fg:x="61716240" fg:w="32620460"/><text x="26.7367%" y="1455.50">alloc::slice::hack::t..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32,620,460 samples, 14.00%)</title><rect x="26.4867%" y="1429" width="13.9997%" height="15" fill="rgb(238,219,53)" fg:x="61716240" fg:w="32620460"/><text x="26.7367%" y="1439.50">&lt;T as alloc::slice::h..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (32,620,460 samples, 14.00%)</title><rect x="26.4867%" y="1413" width="13.9997%" height="15" fill="rgb(232,167,36)" fg:x="61716240" fg:w="32620460"/><text x="26.7367%" y="1423.50">&lt;css_bitvector_compil..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,184,975 samples, 1.37%)</title><rect x="39.1195%" y="1397" width="1.3669%" height="15" fill="rgb(244,19,51)" fg:x="91151725" fg:w="3184975"/><text x="39.3695%" y="1407.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,184,975 samples, 1.37%)</title><rect x="39.1195%" y="1381" width="1.3669%" height="15" fill="rgb(224,6,22)" fg:x="91151725" fg:w="3184975"/><text x="39.3695%" y="1391.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,184,975 samples, 1.37%)</title><rect x="39.1195%" y="1365" width="1.3669%" height="15" fill="rgb(224,145,5)" fg:x="91151725" fg:w="3184975"/><text x="39.3695%" y="1375.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,184,975 samples, 1.37%)</title><rect x="39.1195%" y="1349" width="1.3669%" height="15" fill="rgb(234,130,49)" fg:x="91151725" fg:w="3184975"/><text x="39.3695%" y="1359.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,184,975 samples, 1.37%)</title><rect x="39.1195%" y="1333" width="1.3669%" height="15" fill="rgb(254,6,2)" fg:x="91151725" fg:w="3184975"/><text x="39.3695%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,184,975 samples, 1.37%)</title><rect x="39.1195%" y="1317" width="1.3669%" height="15" fill="rgb(208,96,46)" fg:x="91151725" fg:w="3184975"/><text x="39.3695%" y="1327.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (3,184,975 samples, 1.37%)</title><rect x="39.1195%" y="1301" width="1.3669%" height="15" fill="rgb(239,3,39)" fg:x="91151725" fg:w="3184975"/><text x="39.3695%" y="1311.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,184,975 samples, 1.37%)</title><rect x="39.1195%" y="1285" width="1.3669%" height="15" fill="rgb(233,210,1)" fg:x="91151725" fg:w="3184975"/><text x="39.3695%" y="1295.50"></text></g><g><title>[libc.so.6] (3,184,975 samples, 1.37%)</title><rect x="39.1195%" y="1269" width="1.3669%" height="15" fill="rgb(244,137,37)" fg:x="91151725" fg:w="3184975"/><text x="39.3695%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (35,834,031 samples, 15.38%)</title><rect x="26.4867%" y="1557" width="15.3789%" height="15" fill="rgb(240,136,2)" fg:x="61716240" fg:w="35834031"/><text x="26.7367%" y="1567.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (35,834,031 samples, 15.38%)</title><rect x="26.4867%" y="1541" width="15.3789%" height="15" fill="rgb(239,18,37)" fg:x="61716240" fg:w="35834031"/><text x="26.7367%" y="1551.50">alloc::slice::&lt;impl [T]&gt;..</text></g><g><title>alloc::slice::hack::to_vec (35,834,031 samples, 15.38%)</title><rect x="26.4867%" y="1525" width="15.3789%" height="15" fill="rgb(218,185,22)" fg:x="61716240" fg:w="35834031"/><text x="26.7367%" y="1535.50">alloc::slice::hack::to_v..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (35,834,031 samples, 15.38%)</title><rect x="26.4867%" y="1509" width="15.3789%" height="15" fill="rgb(225,218,4)" fg:x="61716240" fg:w="35834031"/><text x="26.7367%" y="1519.50">&lt;T as alloc::slice::hack..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (35,834,031 samples, 15.38%)</title><rect x="26.4867%" y="1493" width="15.3789%" height="15" fill="rgb(230,182,32)" fg:x="61716240" fg:w="35834031"/><text x="26.7367%" y="1503.50">&lt;css_bitvector_compiler:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,213,571 samples, 1.38%)</title><rect x="40.4864%" y="1477" width="1.3792%" height="15" fill="rgb(242,56,43)" fg:x="94336700" fg:w="3213571"/><text x="40.7364%" y="1487.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,213,571 samples, 1.38%)</title><rect x="40.4864%" y="1461" width="1.3792%" height="15" fill="rgb(233,99,24)" fg:x="94336700" fg:w="3213571"/><text x="40.7364%" y="1471.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,213,571 samples, 1.38%)</title><rect x="40.4864%" y="1445" width="1.3792%" height="15" fill="rgb(234,209,42)" fg:x="94336700" fg:w="3213571"/><text x="40.7364%" y="1455.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,213,571 samples, 1.38%)</title><rect x="40.4864%" y="1429" width="1.3792%" height="15" fill="rgb(227,7,12)" fg:x="94336700" fg:w="3213571"/><text x="40.7364%" y="1439.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,213,571 samples, 1.38%)</title><rect x="40.4864%" y="1413" width="1.3792%" height="15" fill="rgb(245,203,43)" fg:x="94336700" fg:w="3213571"/><text x="40.7364%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,213,571 samples, 1.38%)</title><rect x="40.4864%" y="1397" width="1.3792%" height="15" fill="rgb(238,205,33)" fg:x="94336700" fg:w="3213571"/><text x="40.7364%" y="1407.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,213,571 samples, 1.38%)</title><rect x="40.4864%" y="1381" width="1.3792%" height="15" fill="rgb(231,56,7)" fg:x="94336700" fg:w="3213571"/><text x="40.7364%" y="1391.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,299,955 samples, 1.42%)</title><rect x="41.8656%" y="1557" width="1.4162%" height="15" fill="rgb(244,186,29)" fg:x="97550271" fg:w="3299955"/><text x="42.1156%" y="1567.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,299,955 samples, 1.42%)</title><rect x="41.8656%" y="1541" width="1.4162%" height="15" fill="rgb(234,111,31)" fg:x="97550271" fg:w="3299955"/><text x="42.1156%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,299,955 samples, 1.42%)</title><rect x="41.8656%" y="1525" width="1.4162%" height="15" fill="rgb(241,149,10)" fg:x="97550271" fg:w="3299955"/><text x="42.1156%" y="1535.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,299,955 samples, 1.42%)</title><rect x="41.8656%" y="1509" width="1.4162%" height="15" fill="rgb(249,206,44)" fg:x="97550271" fg:w="3299955"/><text x="42.1156%" y="1519.50"></text></g><g><title>alloc::slice::hack::to_vec (3,299,955 samples, 1.42%)</title><rect x="41.8656%" y="1493" width="1.4162%" height="15" fill="rgb(251,153,30)" fg:x="97550271" fg:w="3299955"/><text x="42.1156%" y="1503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,299,955 samples, 1.42%)</title><rect x="41.8656%" y="1477" width="1.4162%" height="15" fill="rgb(239,152,38)" fg:x="97550271" fg:w="3299955"/><text x="42.1156%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,299,955 samples, 1.42%)</title><rect x="41.8656%" y="1461" width="1.4162%" height="15" fill="rgb(249,139,47)" fg:x="97550271" fg:w="3299955"/><text x="42.1156%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,299,955 samples, 1.42%)</title><rect x="41.8656%" y="1445" width="1.4162%" height="15" fill="rgb(244,64,35)" fg:x="97550271" fg:w="3299955"/><text x="42.1156%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,299,955 samples, 1.42%)</title><rect x="41.8656%" y="1429" width="1.4162%" height="15" fill="rgb(216,46,15)" fg:x="97550271" fg:w="3299955"/><text x="42.1156%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,299,955 samples, 1.42%)</title><rect x="41.8656%" y="1413" width="1.4162%" height="15" fill="rgb(250,74,19)" fg:x="97550271" fg:w="3299955"/><text x="42.1156%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,299,955 samples, 1.42%)</title><rect x="41.8656%" y="1397" width="1.4162%" height="15" fill="rgb(249,42,33)" fg:x="97550271" fg:w="3299955"/><text x="42.1156%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,299,955 samples, 1.42%)</title><rect x="41.8656%" y="1381" width="1.4162%" height="15" fill="rgb(242,149,17)" fg:x="97550271" fg:w="3299955"/><text x="42.1156%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (3,299,955 samples, 1.42%)</title><rect x="41.8656%" y="1365" width="1.4162%" height="15" fill="rgb(244,29,21)" fg:x="97550271" fg:w="3299955"/><text x="42.1156%" y="1375.50"></text></g><g><title>malloc (3,299,955 samples, 1.42%)</title><rect x="41.8656%" y="1349" width="1.4162%" height="15" fill="rgb(220,130,37)" fg:x="97550271" fg:w="3299955"/><text x="42.1156%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42,287,984 samples, 18.15%)</title><rect x="26.4867%" y="1637" width="18.1487%" height="15" fill="rgb(211,67,2)" fg:x="61716240" fg:w="42287984"/><text x="26.7367%" y="1647.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (42,287,984 samples, 18.15%)</title><rect x="26.4867%" y="1621" width="18.1487%" height="15" fill="rgb(235,68,52)" fg:x="61716240" fg:w="42287984"/><text x="26.7367%" y="1631.50">alloc::slice::&lt;impl [T]&gt;::to..</text></g><g><title>alloc::slice::hack::to_vec (42,287,984 samples, 18.15%)</title><rect x="26.4867%" y="1605" width="18.1487%" height="15" fill="rgb(246,142,3)" fg:x="61716240" fg:w="42287984"/><text x="26.7367%" y="1615.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42,287,984 samples, 18.15%)</title><rect x="26.4867%" y="1589" width="18.1487%" height="15" fill="rgb(241,25,7)" fg:x="61716240" fg:w="42287984"/><text x="26.7367%" y="1599.50">&lt;T as alloc::slice::hack::Co..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (42,287,984 samples, 18.15%)</title><rect x="26.4867%" y="1573" width="18.1487%" height="15" fill="rgb(242,119,39)" fg:x="61716240" fg:w="42287984"/><text x="26.7367%" y="1583.50">&lt;css_bitvector_compiler::Htm..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,153,998 samples, 1.35%)</title><rect x="43.2818%" y="1557" width="1.3536%" height="15" fill="rgb(241,98,45)" fg:x="100850226" fg:w="3153998"/><text x="43.5318%" y="1567.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,153,998 samples, 1.35%)</title><rect x="43.2818%" y="1541" width="1.3536%" height="15" fill="rgb(254,28,30)" fg:x="100850226" fg:w="3153998"/><text x="43.5318%" y="1551.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,153,998 samples, 1.35%)</title><rect x="43.2818%" y="1525" width="1.3536%" height="15" fill="rgb(241,142,54)" fg:x="100850226" fg:w="3153998"/><text x="43.5318%" y="1535.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,153,998 samples, 1.35%)</title><rect x="43.2818%" y="1509" width="1.3536%" height="15" fill="rgb(222,85,15)" fg:x="100850226" fg:w="3153998"/><text x="43.5318%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3,153,998 samples, 1.35%)</title><rect x="43.2818%" y="1493" width="1.3536%" height="15" fill="rgb(210,85,47)" fg:x="100850226" fg:w="3153998"/><text x="43.5318%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,153,998 samples, 1.35%)</title><rect x="43.2818%" y="1477" width="1.3536%" height="15" fill="rgb(224,206,25)" fg:x="100850226" fg:w="3153998"/><text x="43.5318%" y="1487.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3,153,998 samples, 1.35%)</title><rect x="43.2818%" y="1461" width="1.3536%" height="15" fill="rgb(243,201,19)" fg:x="100850226" fg:w="3153998"/><text x="43.5318%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,153,998 samples, 1.35%)</title><rect x="43.2818%" y="1445" width="1.3536%" height="15" fill="rgb(236,59,4)" fg:x="100850226" fg:w="3153998"/><text x="43.5318%" y="1455.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,153,998 samples, 1.35%)</title><rect x="43.2818%" y="1429" width="1.3536%" height="15" fill="rgb(254,179,45)" fg:x="100850226" fg:w="3153998"/><text x="43.5318%" y="1439.50"></text></g><g><title>alloc::alloc::alloc (3,153,998 samples, 1.35%)</title><rect x="43.2818%" y="1413" width="1.3536%" height="15" fill="rgb(226,14,10)" fg:x="100850226" fg:w="3153998"/><text x="43.5318%" y="1423.50"></text></g><g><title>[libc.so.6] (3,153,998 samples, 1.35%)</title><rect x="43.2818%" y="1397" width="1.3536%" height="15" fill="rgb(244,27,41)" fg:x="100850226" fg:w="3153998"/><text x="43.5318%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (45,617,169 samples, 19.58%)</title><rect x="26.4867%" y="1717" width="19.5775%" height="15" fill="rgb(235,35,32)" fg:x="61716240" fg:w="45617169"/><text x="26.7367%" y="1727.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (45,617,169 samples, 19.58%)</title><rect x="26.4867%" y="1701" width="19.5775%" height="15" fill="rgb(218,68,31)" fg:x="61716240" fg:w="45617169"/><text x="26.7367%" y="1711.50">alloc::slice::&lt;impl [T]&gt;::to_ve..</text></g><g><title>alloc::slice::hack::to_vec (45,617,169 samples, 19.58%)</title><rect x="26.4867%" y="1685" width="19.5775%" height="15" fill="rgb(207,120,37)" fg:x="61716240" fg:w="45617169"/><text x="26.7367%" y="1695.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (45,617,169 samples, 19.58%)</title><rect x="26.4867%" y="1669" width="19.5775%" height="15" fill="rgb(227,98,0)" fg:x="61716240" fg:w="45617169"/><text x="26.7367%" y="1679.50">&lt;T as alloc::slice::hack::Conve..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (45,617,169 samples, 19.58%)</title><rect x="26.4867%" y="1653" width="19.5775%" height="15" fill="rgb(207,7,3)" fg:x="61716240" fg:w="45617169"/><text x="26.7367%" y="1663.50">&lt;css_bitvector_compiler::HtmlNo..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,329,185 samples, 1.43%)</title><rect x="44.6354%" y="1637" width="1.4288%" height="15" fill="rgb(206,98,19)" fg:x="104004224" fg:w="3329185"/><text x="44.8854%" y="1647.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,329,185 samples, 1.43%)</title><rect x="44.6354%" y="1621" width="1.4288%" height="15" fill="rgb(217,5,26)" fg:x="104004224" fg:w="3329185"/><text x="44.8854%" y="1631.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,218,788 samples, 1.38%)</title><rect x="46.0642%" y="1717" width="1.3814%" height="15" fill="rgb(235,190,38)" fg:x="107333409" fg:w="3218788"/><text x="46.3142%" y="1727.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,156,133 samples, 1.35%)</title><rect x="47.4456%" y="1717" width="1.3545%" height="15" fill="rgb(247,86,24)" fg:x="110552197" fg:w="3156133"/><text x="47.6956%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,156,133 samples, 1.35%)</title><rect x="47.4456%" y="1701" width="1.3545%" height="15" fill="rgb(205,101,16)" fg:x="110552197" fg:w="3156133"/><text x="47.6956%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,156,133 samples, 1.35%)</title><rect x="47.4456%" y="1685" width="1.3545%" height="15" fill="rgb(246,168,33)" fg:x="110552197" fg:w="3156133"/><text x="47.6956%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (3,156,133 samples, 1.35%)</title><rect x="47.4456%" y="1669" width="1.3545%" height="15" fill="rgb(231,114,1)" fg:x="110552197" fg:w="3156133"/><text x="47.6956%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,156,133 samples, 1.35%)</title><rect x="47.4456%" y="1653" width="1.3545%" height="15" fill="rgb(207,184,53)" fg:x="110552197" fg:w="3156133"/><text x="47.6956%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,156,133 samples, 1.35%)</title><rect x="47.4456%" y="1637" width="1.3545%" height="15" fill="rgb(224,95,51)" fg:x="110552197" fg:w="3156133"/><text x="47.6956%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,156,133 samples, 1.35%)</title><rect x="47.4456%" y="1621" width="1.3545%" height="15" fill="rgb(212,188,45)" fg:x="110552197" fg:w="3156133"/><text x="47.6956%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,156,133 samples, 1.35%)</title><rect x="47.4456%" y="1605" width="1.3545%" height="15" fill="rgb(223,154,38)" fg:x="110552197" fg:w="3156133"/><text x="47.6956%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,156,133 samples, 1.35%)</title><rect x="47.4456%" y="1589" width="1.3545%" height="15" fill="rgb(251,22,52)" fg:x="110552197" fg:w="3156133"/><text x="47.6956%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,156,133 samples, 1.35%)</title><rect x="47.4456%" y="1573" width="1.3545%" height="15" fill="rgb(229,209,22)" fg:x="110552197" fg:w="3156133"/><text x="47.6956%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,156,133 samples, 1.35%)</title><rect x="47.4456%" y="1557" width="1.3545%" height="15" fill="rgb(234,138,34)" fg:x="110552197" fg:w="3156133"/><text x="47.6956%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (3,156,133 samples, 1.35%)</title><rect x="47.4456%" y="1541" width="1.3545%" height="15" fill="rgb(212,95,11)" fg:x="110552197" fg:w="3156133"/><text x="47.6956%" y="1551.50"></text></g><g><title>malloc (3,156,133 samples, 1.35%)</title><rect x="47.4456%" y="1525" width="1.3545%" height="15" fill="rgb(240,179,47)" fg:x="110552197" fg:w="3156133"/><text x="47.6956%" y="1535.50"></text></g><g><title>[libc.so.6] (3,156,133 samples, 1.35%)</title><rect x="47.4456%" y="1509" width="1.3545%" height="15" fill="rgb(240,163,11)" fg:x="110552197" fg:w="3156133"/><text x="47.6956%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (62,302,267 samples, 26.74%)</title><rect x="23.5351%" y="1797" width="26.7382%" height="15" fill="rgb(236,37,12)" fg:x="54838754" fg:w="62302267"/><text x="23.7851%" y="1807.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (62,302,267 samples, 26.74%)</title><rect x="23.5351%" y="1781" width="26.7382%" height="15" fill="rgb(232,164,16)" fg:x="54838754" fg:w="62302267"/><text x="23.7851%" y="1791.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (62,302,267 samples, 26.74%)</title><rect x="23.5351%" y="1765" width="26.7382%" height="15" fill="rgb(244,205,15)" fg:x="54838754" fg:w="62302267"/><text x="23.7851%" y="1775.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (62,302,267 samples, 26.74%)</title><rect x="23.5351%" y="1749" width="26.7382%" height="15" fill="rgb(223,117,47)" fg:x="54838754" fg:w="62302267"/><text x="23.7851%" y="1759.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_v..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (62,302,267 samples, 26.74%)</title><rect x="23.5351%" y="1733" width="26.7382%" height="15" fill="rgb(244,107,35)" fg:x="54838754" fg:w="62302267"/><text x="23.7851%" y="1743.50">&lt;css_bitvector_compiler::HtmlNode as core::..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,432,691 samples, 1.47%)</title><rect x="48.8001%" y="1717" width="1.4732%" height="15" fill="rgb(205,140,8)" fg:x="113708330" fg:w="3432691"/><text x="49.0501%" y="1727.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,432,691 samples, 1.47%)</title><rect x="48.8001%" y="1701" width="1.4732%" height="15" fill="rgb(228,84,46)" fg:x="113708330" fg:w="3432691"/><text x="49.0501%" y="1711.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,432,691 samples, 1.47%)</title><rect x="48.8001%" y="1685" width="1.4732%" height="15" fill="rgb(254,188,9)" fg:x="113708330" fg:w="3432691"/><text x="49.0501%" y="1695.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,432,691 samples, 1.47%)</title><rect x="48.8001%" y="1669" width="1.4732%" height="15" fill="rgb(206,112,54)" fg:x="113708330" fg:w="3432691"/><text x="49.0501%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3,432,691 samples, 1.47%)</title><rect x="48.8001%" y="1653" width="1.4732%" height="15" fill="rgb(216,84,49)" fg:x="113708330" fg:w="3432691"/><text x="49.0501%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,432,691 samples, 1.47%)</title><rect x="48.8001%" y="1637" width="1.4732%" height="15" fill="rgb(214,194,35)" fg:x="113708330" fg:w="3432691"/><text x="49.0501%" y="1647.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3,432,691 samples, 1.47%)</title><rect x="48.8001%" y="1621" width="1.4732%" height="15" fill="rgb(249,28,3)" fg:x="113708330" fg:w="3432691"/><text x="49.0501%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,432,691 samples, 1.47%)</title><rect x="48.8001%" y="1605" width="1.4732%" height="15" fill="rgb(222,56,52)" fg:x="113708330" fg:w="3432691"/><text x="49.0501%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,432,691 samples, 1.47%)</title><rect x="48.8001%" y="1589" width="1.4732%" height="15" fill="rgb(245,217,50)" fg:x="113708330" fg:w="3432691"/><text x="49.0501%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (3,432,691 samples, 1.47%)</title><rect x="48.8001%" y="1573" width="1.4732%" height="15" fill="rgb(213,201,24)" fg:x="113708330" fg:w="3432691"/><text x="49.0501%" y="1583.50"></text></g><g><title>malloc (3,432,691 samples, 1.47%)</title><rect x="48.8001%" y="1557" width="1.4732%" height="15" fill="rgb(248,116,28)" fg:x="113708330" fg:w="3432691"/><text x="49.0501%" y="1567.50"></text></g><g><title>[libc.so.6] (3,432,691 samples, 1.47%)</title><rect x="48.8001%" y="1541" width="1.4732%" height="15" fill="rgb(219,72,43)" fg:x="113708330" fg:w="3432691"/><text x="49.0501%" y="1551.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (71,950,624 samples, 30.88%)</title><rect x="20.7819%" y="1893" width="30.8790%" height="15" fill="rgb(209,138,14)" fg:x="48423528" fg:w="71950624"/><text x="21.0319%" y="1903.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (68,645,549 samples, 29.46%)</title><rect x="22.2003%" y="1877" width="29.4605%" height="15" fill="rgb(222,18,33)" fg:x="51728603" fg:w="68645549"/><text x="22.4503%" y="1887.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::c..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (68,645,549 samples, 29.46%)</title><rect x="22.2003%" y="1861" width="29.4605%" height="15" fill="rgb(213,199,7)" fg:x="51728603" fg:w="68645549"/><text x="22.4503%" y="1871.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (68,645,549 samples, 29.46%)</title><rect x="22.2003%" y="1845" width="29.4605%" height="15" fill="rgb(250,110,10)" fg:x="51728603" fg:w="68645549"/><text x="22.4503%" y="1855.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (68,645,549 samples, 29.46%)</title><rect x="22.2003%" y="1829" width="29.4605%" height="15" fill="rgb(248,123,6)" fg:x="51728603" fg:w="68645549"/><text x="22.4503%" y="1839.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (68,645,549 samples, 29.46%)</title><rect x="22.2003%" y="1813" width="29.4605%" height="15" fill="rgb(206,91,31)" fg:x="51728603" fg:w="68645549"/><text x="22.4503%" y="1823.50">&lt;css_bitvector_compiler::HtmlNode as core::clon..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,233,131 samples, 1.39%)</title><rect x="50.2733%" y="1797" width="1.3876%" height="15" fill="rgb(211,154,13)" fg:x="117141021" fg:w="3233131"/><text x="50.5233%" y="1807.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,233,131 samples, 1.39%)</title><rect x="50.2733%" y="1781" width="1.3876%" height="15" fill="rgb(225,148,7)" fg:x="117141021" fg:w="3233131"/><text x="50.5233%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,233,131 samples, 1.39%)</title><rect x="50.2733%" y="1765" width="1.3876%" height="15" fill="rgb(220,160,43)" fg:x="117141021" fg:w="3233131"/><text x="50.5233%" y="1775.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,233,131 samples, 1.39%)</title><rect x="50.2733%" y="1749" width="1.3876%" height="15" fill="rgb(213,52,39)" fg:x="117141021" fg:w="3233131"/><text x="50.5233%" y="1759.50"></text></g><g><title>alloc::slice::hack::to_vec (3,233,131 samples, 1.39%)</title><rect x="50.2733%" y="1733" width="1.3876%" height="15" fill="rgb(243,137,7)" fg:x="117141021" fg:w="3233131"/><text x="50.5233%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,233,131 samples, 1.39%)</title><rect x="50.2733%" y="1717" width="1.3876%" height="15" fill="rgb(230,79,13)" fg:x="117141021" fg:w="3233131"/><text x="50.5233%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,233,131 samples, 1.39%)</title><rect x="50.2733%" y="1701" width="1.3876%" height="15" fill="rgb(247,105,23)" fg:x="117141021" fg:w="3233131"/><text x="50.5233%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,233,131 samples, 1.39%)</title><rect x="50.2733%" y="1685" width="1.3876%" height="15" fill="rgb(223,179,41)" fg:x="117141021" fg:w="3233131"/><text x="50.5233%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,233,131 samples, 1.39%)</title><rect x="50.2733%" y="1669" width="1.3876%" height="15" fill="rgb(218,9,34)" fg:x="117141021" fg:w="3233131"/><text x="50.5233%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,233,131 samples, 1.39%)</title><rect x="50.2733%" y="1653" width="1.3876%" height="15" fill="rgb(222,106,8)" fg:x="117141021" fg:w="3233131"/><text x="50.5233%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,233,131 samples, 1.39%)</title><rect x="50.2733%" y="1637" width="1.3876%" height="15" fill="rgb(211,220,0)" fg:x="117141021" fg:w="3233131"/><text x="50.5233%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,233,131 samples, 1.39%)</title><rect x="50.2733%" y="1621" width="1.3876%" height="15" fill="rgb(229,52,16)" fg:x="117141021" fg:w="3233131"/><text x="50.5233%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (3,233,131 samples, 1.39%)</title><rect x="50.2733%" y="1605" width="1.3876%" height="15" fill="rgb(212,155,18)" fg:x="117141021" fg:w="3233131"/><text x="50.5233%" y="1615.50"></text></g><g><title>malloc (3,233,131 samples, 1.39%)</title><rect x="50.2733%" y="1589" width="1.3876%" height="15" fill="rgb(242,21,14)" fg:x="117141021" fg:w="3233131"/><text x="50.5233%" y="1599.50"></text></g><g><title>[libc.so.6] (3,233,131 samples, 1.39%)</title><rect x="50.2733%" y="1573" width="1.3876%" height="15" fill="rgb(222,19,48)" fg:x="117141021" fg:w="3233131"/><text x="50.5233%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (74,997,666 samples, 32.19%)</title><rect x="20.7819%" y="2037" width="32.1867%" height="15" fill="rgb(232,45,27)" fg:x="48423528" fg:w="74997666"/><text x="21.0319%" y="2047.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (74,997,666 samples, 32.19%)</title><rect x="20.7819%" y="2021" width="32.1867%" height="15" fill="rgb(249,103,42)" fg:x="48423528" fg:w="74997666"/><text x="21.0319%" y="2031.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (74,997,666 samples, 32.19%)</title><rect x="20.7819%" y="2005" width="32.1867%" height="15" fill="rgb(246,81,33)" fg:x="48423528" fg:w="74997666"/><text x="21.0319%" y="2015.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (74,997,666 samples, 32.19%)</title><rect x="20.7819%" y="1989" width="32.1867%" height="15" fill="rgb(252,33,42)" fg:x="48423528" fg:w="74997666"/><text x="21.0319%" y="1999.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (74,997,666 samples, 32.19%)</title><rect x="20.7819%" y="1973" width="32.1867%" height="15" fill="rgb(209,212,41)" fg:x="48423528" fg:w="74997666"/><text x="21.0319%" y="1983.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Cl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (74,997,666 samples, 32.19%)</title><rect x="20.7819%" y="1957" width="32.1867%" height="15" fill="rgb(207,154,6)" fg:x="48423528" fg:w="74997666"/><text x="21.0319%" y="1967.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (74,997,666 samples, 32.19%)</title><rect x="20.7819%" y="1941" width="32.1867%" height="15" fill="rgb(223,64,47)" fg:x="48423528" fg:w="74997666"/><text x="21.0319%" y="1951.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (74,997,666 samples, 32.19%)</title><rect x="20.7819%" y="1925" width="32.1867%" height="15" fill="rgb(211,161,38)" fg:x="48423528" fg:w="74997666"/><text x="21.0319%" y="1935.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (74,997,666 samples, 32.19%)</title><rect x="20.7819%" y="1909" width="32.1867%" height="15" fill="rgb(219,138,40)" fg:x="48423528" fg:w="74997666"/><text x="21.0319%" y="1919.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,047,042 samples, 1.31%)</title><rect x="51.6609%" y="1893" width="1.3077%" height="15" fill="rgb(241,228,46)" fg:x="120374152" fg:w="3047042"/><text x="51.9109%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,047,042 samples, 1.31%)</title><rect x="51.6609%" y="1877" width="1.3077%" height="15" fill="rgb(223,209,38)" fg:x="120374152" fg:w="3047042"/><text x="51.9109%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,047,042 samples, 1.31%)</title><rect x="51.6609%" y="1861" width="1.3077%" height="15" fill="rgb(236,164,45)" fg:x="120374152" fg:w="3047042"/><text x="51.9109%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,047,042 samples, 1.31%)</title><rect x="51.6609%" y="1845" width="1.3077%" height="15" fill="rgb(231,15,5)" fg:x="120374152" fg:w="3047042"/><text x="51.9109%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,047,042 samples, 1.31%)</title><rect x="51.6609%" y="1829" width="1.3077%" height="15" fill="rgb(252,35,15)" fg:x="120374152" fg:w="3047042"/><text x="51.9109%" y="1839.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,047,042 samples, 1.31%)</title><rect x="51.6609%" y="1813" width="1.3077%" height="15" fill="rgb(248,181,18)" fg:x="120374152" fg:w="3047042"/><text x="51.9109%" y="1823.50"></text></g><g><title>alloc::alloc::alloc (3,047,042 samples, 1.31%)</title><rect x="51.6609%" y="1797" width="1.3077%" height="15" fill="rgb(233,39,42)" fg:x="120374152" fg:w="3047042"/><text x="51.9109%" y="1807.50"></text></g><g><title>malloc (3,047,042 samples, 1.31%)</title><rect x="51.6609%" y="1781" width="1.3077%" height="15" fill="rgb(238,110,33)" fg:x="120374152" fg:w="3047042"/><text x="51.9109%" y="1791.50"></text></g><g><title>[libc.so.6] (3,047,042 samples, 1.31%)</title><rect x="51.6609%" y="1765" width="1.3077%" height="15" fill="rgb(233,195,10)" fg:x="120374152" fg:w="3047042"/><text x="51.9109%" y="1775.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (81,407,248 samples, 34.94%)</title><rect x="19.3154%" y="2053" width="34.9375%" height="15" fill="rgb(254,105,3)" fg:x="45006472" fg:w="81407248"/><text x="19.5654%" y="2063.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="2037" width="1.2843%" height="15" fill="rgb(221,225,9)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="2047.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="2021" width="1.2843%" height="15" fill="rgb(224,227,45)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="2031.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="2005" width="1.2843%" height="15" fill="rgb(229,198,43)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="2015.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1989" width="1.2843%" height="15" fill="rgb(206,209,35)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1999.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1973" width="1.2843%" height="15" fill="rgb(245,195,53)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1983.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1957" width="1.2843%" height="15" fill="rgb(240,92,26)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1967.50"></text></g><g><title>core::clone::Clone::clone (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1941" width="1.2843%" height="15" fill="rgb(207,40,23)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1951.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1925" width="1.2843%" height="15" fill="rgb(223,111,35)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1909" width="1.2843%" height="15" fill="rgb(229,147,28)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1919.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1893" width="1.2843%" height="15" fill="rgb(211,29,28)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1903.50"></text></g><g><title>alloc::slice::hack::to_vec (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1877" width="1.2843%" height="15" fill="rgb(228,72,33)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1887.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1861" width="1.2843%" height="15" fill="rgb(205,214,31)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1845" width="1.2843%" height="15" fill="rgb(224,111,15)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1829" width="1.2843%" height="15" fill="rgb(253,21,26)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1813" width="1.2843%" height="15" fill="rgb(245,139,43)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1797" width="1.2843%" height="15" fill="rgb(252,170,7)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1781" width="1.2843%" height="15" fill="rgb(231,118,14)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1765" width="1.2843%" height="15" fill="rgb(238,83,0)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1775.50"></text></g><g><title>alloc::alloc::alloc (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1749" width="1.2843%" height="15" fill="rgb(221,39,39)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1759.50"></text></g><g><title>malloc (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1733" width="1.2843%" height="15" fill="rgb(222,119,46)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1743.50"></text></g><g><title>[libc.so.6] (2,992,526 samples, 1.28%)</title><rect x="52.9686%" y="1717" width="1.2843%" height="15" fill="rgb(222,165,49)" fg:x="123421194" fg:w="2992526"/><text x="53.2186%" y="1727.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (84,451,358 samples, 36.24%)</title><rect x="19.3154%" y="2293" width="36.2439%" height="15" fill="rgb(219,113,52)" fg:x="45006472" fg:w="84451358"/><text x="19.5654%" y="2303.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (84,451,358 samples, 36.24%)</title><rect x="19.3154%" y="2277" width="36.2439%" height="15" fill="rgb(214,7,15)" fg:x="45006472" fg:w="84451358"/><text x="19.5654%" y="2287.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (84,451,358 samples, 36.24%)</title><rect x="19.3154%" y="2261" width="36.2439%" height="15" fill="rgb(235,32,4)" fg:x="45006472" fg:w="84451358"/><text x="19.5654%" y="2271.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (84,451,358 samples, 36.24%)</title><rect x="19.3154%" y="2245" width="36.2439%" height="15" fill="rgb(238,90,54)" fg:x="45006472" fg:w="84451358"/><text x="19.5654%" y="2255.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (84,451,358 samples, 36.24%)</title><rect x="19.3154%" y="2229" width="36.2439%" height="15" fill="rgb(213,208,19)" fg:x="45006472" fg:w="84451358"/><text x="19.5654%" y="2239.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (84,451,358 samples, 36.24%)</title><rect x="19.3154%" y="2213" width="36.2439%" height="15" fill="rgb(233,156,4)" fg:x="45006472" fg:w="84451358"/><text x="19.5654%" y="2223.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (84,451,358 samples, 36.24%)</title><rect x="19.3154%" y="2197" width="36.2439%" height="15" fill="rgb(207,194,5)" fg:x="45006472" fg:w="84451358"/><text x="19.5654%" y="2207.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (84,451,358 samples, 36.24%)</title><rect x="19.3154%" y="2181" width="36.2439%" height="15" fill="rgb(206,111,30)" fg:x="45006472" fg:w="84451358"/><text x="19.5654%" y="2191.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (84,451,358 samples, 36.24%)</title><rect x="19.3154%" y="2165" width="36.2439%" height="15" fill="rgb(243,70,54)" fg:x="45006472" fg:w="84451358"/><text x="19.5654%" y="2175.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (84,451,358 samples, 36.24%)</title><rect x="19.3154%" y="2149" width="36.2439%" height="15" fill="rgb(242,28,8)" fg:x="45006472" fg:w="84451358"/><text x="19.5654%" y="2159.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (84,451,358 samples, 36.24%)</title><rect x="19.3154%" y="2133" width="36.2439%" height="15" fill="rgb(219,106,18)" fg:x="45006472" fg:w="84451358"/><text x="19.5654%" y="2143.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (84,451,358 samples, 36.24%)</title><rect x="19.3154%" y="2117" width="36.2439%" height="15" fill="rgb(244,222,10)" fg:x="45006472" fg:w="84451358"/><text x="19.5654%" y="2127.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (84,451,358 samples, 36.24%)</title><rect x="19.3154%" y="2101" width="36.2439%" height="15" fill="rgb(236,179,52)" fg:x="45006472" fg:w="84451358"/><text x="19.5654%" y="2111.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (84,451,358 samples, 36.24%)</title><rect x="19.3154%" y="2085" width="36.2439%" height="15" fill="rgb(213,23,39)" fg:x="45006472" fg:w="84451358"/><text x="19.5654%" y="2095.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (84,451,358 samples, 36.24%)</title><rect x="19.3154%" y="2069" width="36.2439%" height="15" fill="rgb(238,48,10)" fg:x="45006472" fg:w="84451358"/><text x="19.5654%" y="2079.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,044,110 samples, 1.31%)</title><rect x="54.2529%" y="2053" width="1.3064%" height="15" fill="rgb(251,196,23)" fg:x="126413720" fg:w="3044110"/><text x="54.5029%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,044,110 samples, 1.31%)</title><rect x="54.2529%" y="2037" width="1.3064%" height="15" fill="rgb(250,152,24)" fg:x="126413720" fg:w="3044110"/><text x="54.5029%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,044,110 samples, 1.31%)</title><rect x="54.2529%" y="2021" width="1.3064%" height="15" fill="rgb(209,150,17)" fg:x="126413720" fg:w="3044110"/><text x="54.5029%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,044,110 samples, 1.31%)</title><rect x="54.2529%" y="2005" width="1.3064%" height="15" fill="rgb(234,202,34)" fg:x="126413720" fg:w="3044110"/><text x="54.5029%" y="2015.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,044,110 samples, 1.31%)</title><rect x="54.2529%" y="1989" width="1.3064%" height="15" fill="rgb(253,148,53)" fg:x="126413720" fg:w="3044110"/><text x="54.5029%" y="1999.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,044,110 samples, 1.31%)</title><rect x="54.2529%" y="1973" width="1.3064%" height="15" fill="rgb(218,129,16)" fg:x="126413720" fg:w="3044110"/><text x="54.5029%" y="1983.50"></text></g><g><title>alloc::alloc::alloc (3,044,110 samples, 1.31%)</title><rect x="54.2529%" y="1957" width="1.3064%" height="15" fill="rgb(216,85,19)" fg:x="126413720" fg:w="3044110"/><text x="54.5029%" y="1967.50"></text></g><g><title>malloc (3,044,110 samples, 1.31%)</title><rect x="54.2529%" y="1941" width="1.3064%" height="15" fill="rgb(235,228,7)" fg:x="126413720" fg:w="3044110"/><text x="54.5029%" y="1951.50"></text></g><g><title>[libc.so.6] (3,044,110 samples, 1.31%)</title><rect x="54.2529%" y="1925" width="1.3064%" height="15" fill="rgb(245,175,0)" fg:x="126413720" fg:w="3044110"/><text x="54.5029%" y="1935.50"></text></g><g><title>[libc.so.6] (3,044,110 samples, 1.31%)</title><rect x="54.2529%" y="1909" width="1.3064%" height="15" fill="rgb(208,168,36)" fg:x="126413720" fg:w="3044110"/><text x="54.5029%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (3,123,526 samples, 1.34%)</title><rect x="55.5593%" y="2277" width="1.3405%" height="15" fill="rgb(246,171,24)" fg:x="129457830" fg:w="3123526"/><text x="55.8093%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,123,526 samples, 1.34%)</title><rect x="55.5593%" y="2261" width="1.3405%" height="15" fill="rgb(215,142,24)" fg:x="129457830" fg:w="3123526"/><text x="55.8093%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,123,526 samples, 1.34%)</title><rect x="55.5593%" y="2245" width="1.3405%" height="15" fill="rgb(250,187,7)" fg:x="129457830" fg:w="3123526"/><text x="55.8093%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,123,526 samples, 1.34%)</title><rect x="55.5593%" y="2229" width="1.3405%" height="15" fill="rgb(228,66,33)" fg:x="129457830" fg:w="3123526"/><text x="55.8093%" y="2239.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,123,526 samples, 1.34%)</title><rect x="55.5593%" y="2213" width="1.3405%" height="15" fill="rgb(234,215,21)" fg:x="129457830" fg:w="3123526"/><text x="55.8093%" y="2223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,123,526 samples, 1.34%)</title><rect x="55.5593%" y="2197" width="1.3405%" height="15" fill="rgb(222,191,20)" fg:x="129457830" fg:w="3123526"/><text x="55.8093%" y="2207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3,123,526 samples, 1.34%)</title><rect x="55.5593%" y="2181" width="1.3405%" height="15" fill="rgb(245,79,54)" fg:x="129457830" fg:w="3123526"/><text x="55.8093%" y="2191.50"></text></g><g><title>alloc::alloc::realloc (3,123,526 samples, 1.34%)</title><rect x="55.5593%" y="2165" width="1.3405%" height="15" fill="rgb(240,10,37)" fg:x="129457830" fg:w="3123526"/><text x="55.8093%" y="2175.50"></text></g><g><title>realloc (3,123,526 samples, 1.34%)</title><rect x="55.5593%" y="2149" width="1.3405%" height="15" fill="rgb(214,192,32)" fg:x="129457830" fg:w="3123526"/><text x="55.8093%" y="2159.50"></text></g><g><title>[libc.so.6] (3,123,526 samples, 1.34%)</title><rect x="55.5593%" y="2133" width="1.3405%" height="15" fill="rgb(209,36,54)" fg:x="129457830" fg:w="3123526"/><text x="55.8093%" y="2143.50"></text></g><g><title>[libc.so.6] (3,123,526 samples, 1.34%)</title><rect x="55.5593%" y="2117" width="1.3405%" height="15" fill="rgb(220,10,11)" fg:x="129457830" fg:w="3123526"/><text x="55.8093%" y="2127.50"></text></g><g><title>benchmark::extract_path_from_command (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2277" width="1.2272%" height="15" fill="rgb(221,106,17)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2261" width="1.2272%" height="15" fill="rgb(251,142,44)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2271.50"></text></g><g><title>benchmark::extract_path_from_command::_{{closure}} (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2245" width="1.2272%" height="15" fill="rgb(238,13,15)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2229" width="1.2272%" height="15" fill="rgb(208,107,27)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2213" width="1.2272%" height="15" fill="rgb(205,136,37)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2197" width="1.2272%" height="15" fill="rgb(250,205,27)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2181" width="1.2272%" height="15" fill="rgb(210,80,43)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2165" width="1.2272%" height="15" fill="rgb(247,160,36)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2149" width="1.2272%" height="15" fill="rgb(234,13,49)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2133" width="1.2272%" height="15" fill="rgb(234,122,0)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2117" width="1.2272%" height="15" fill="rgb(207,146,38)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2101" width="1.2272%" height="15" fill="rgb(207,177,25)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2085" width="1.2272%" height="15" fill="rgb(211,178,42)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2095.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2069" width="1.2272%" height="15" fill="rgb(230,69,54)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2079.50"></text></g><g><title>alloc::alloc::alloc (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2053" width="1.2272%" height="15" fill="rgb(214,135,41)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2063.50"></text></g><g><title>malloc (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2037" width="1.2272%" height="15" fill="rgb(237,67,25)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2047.50"></text></g><g><title>[libc.so.6] (2,859,482 samples, 1.23%)</title><rect x="56.8998%" y="2021" width="1.2272%" height="15" fill="rgb(222,189,50)" fg:x="132581356" fg:w="2859482"/><text x="57.1498%" y="2031.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (2,234,865 samples, 0.96%)</title><rect x="58.1270%" y="2213" width="0.9591%" height="15" fill="rgb(245,148,34)" fg:x="135440838" fg:w="2234865"/><text x="58.3770%" y="2223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (2,234,865 samples, 0.96%)</title><rect x="58.1270%" y="2197" width="0.9591%" height="15" fill="rgb(222,29,6)" fg:x="135440838" fg:w="2234865"/><text x="58.3770%" y="2207.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2,234,865 samples, 0.96%)</title><rect x="58.1270%" y="2181" width="0.9591%" height="15" fill="rgb(221,189,43)" fg:x="135440838" fg:w="2234865"/><text x="58.3770%" y="2191.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2,234,865 samples, 0.96%)</title><rect x="58.1270%" y="2165" width="0.9591%" height="15" fill="rgb(207,36,27)" fg:x="135440838" fg:w="2234865"/><text x="58.3770%" y="2175.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2,234,865 samples, 0.96%)</title><rect x="58.1270%" y="2149" width="0.9591%" height="15" fill="rgb(217,90,24)" fg:x="135440838" fg:w="2234865"/><text x="58.3770%" y="2159.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (2,234,865 samples, 0.96%)</title><rect x="58.1270%" y="2133" width="0.9591%" height="15" fill="rgb(224,66,35)" fg:x="135440838" fg:w="2234865"/><text x="58.3770%" y="2143.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (2,234,865 samples, 0.96%)</title><rect x="58.1270%" y="2117" width="0.9591%" height="15" fill="rgb(221,13,50)" fg:x="135440838" fg:w="2234865"/><text x="58.3770%" y="2127.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (2,234,865 samples, 0.96%)</title><rect x="58.1270%" y="2101" width="0.9591%" height="15" fill="rgb(236,68,49)" fg:x="135440838" fg:w="2234865"/><text x="58.3770%" y="2111.50"></text></g><g><title>[libc.so.6] (2,234,865 samples, 0.96%)</title><rect x="58.1270%" y="2085" width="0.9591%" height="15" fill="rgb(229,146,28)" fg:x="135440838" fg:w="2234865"/><text x="58.3770%" y="2095.50"></text></g><g><title>benchmark::apply_frame_modifications (14,699,359 samples, 6.31%)</title><rect x="55.5593%" y="2293" width="6.3085%" height="15" fill="rgb(225,31,38)" fg:x="129457830" fg:w="14699359"/><text x="55.8093%" y="2303.50">benchmar..</text></g><g><title>benchmark::json_to_html_node (8,716,351 samples, 3.74%)</title><rect x="58.1270%" y="2277" width="3.7408%" height="15" fill="rgb(250,208,3)" fg:x="135440838" fg:w="8716351"/><text x="58.3770%" y="2287.50">benc..</text></g><g><title>benchmark::json_to_html_node (8,716,351 samples, 3.74%)</title><rect x="58.1270%" y="2261" width="3.7408%" height="15" fill="rgb(246,54,23)" fg:x="135440838" fg:w="8716351"/><text x="58.3770%" y="2271.50">benc..</text></g><g><title>benchmark::json_to_html_node (8,716,351 samples, 3.74%)</title><rect x="58.1270%" y="2245" width="3.7408%" height="15" fill="rgb(243,76,11)" fg:x="135440838" fg:w="8716351"/><text x="58.3770%" y="2255.50">benc..</text></g><g><title>benchmark::json_to_html_node (8,716,351 samples, 3.74%)</title><rect x="58.1270%" y="2229" width="3.7408%" height="15" fill="rgb(245,21,50)" fg:x="135440838" fg:w="8716351"/><text x="58.3770%" y="2239.50">benc..</text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (6,481,486 samples, 2.78%)</title><rect x="59.0862%" y="2213" width="2.7817%" height="15" fill="rgb(228,9,43)" fg:x="137675703" fg:w="6481486"/><text x="59.3362%" y="2223.50">se..</text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (6,481,486 samples, 2.78%)</title><rect x="59.0862%" y="2197" width="2.7817%" height="15" fill="rgb(208,100,47)" fg:x="137675703" fg:w="6481486"/><text x="59.3362%" y="2207.50">&lt;&amp;..</text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (3,219,743 samples, 1.38%)</title><rect x="60.4860%" y="2181" width="1.3818%" height="15" fill="rgb(232,26,8)" fg:x="140937446" fg:w="3219743"/><text x="60.7360%" y="2191.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (3,219,743 samples, 1.38%)</title><rect x="60.4860%" y="2165" width="1.3818%" height="15" fill="rgb(216,166,38)" fg:x="140937446" fg:w="3219743"/><text x="60.7360%" y="2175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (3,219,743 samples, 1.38%)</title><rect x="60.4860%" y="2149" width="1.3818%" height="15" fill="rgb(251,202,51)" fg:x="140937446" fg:w="3219743"/><text x="60.7360%" y="2159.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (3,219,743 samples, 1.38%)</title><rect x="60.4860%" y="2133" width="1.3818%" height="15" fill="rgb(254,216,34)" fg:x="140937446" fg:w="3219743"/><text x="60.7360%" y="2143.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (3,219,743 samples, 1.38%)</title><rect x="60.4860%" y="2117" width="1.3818%" height="15" fill="rgb(251,32,27)" fg:x="140937446" fg:w="3219743"/><text x="60.7360%" y="2127.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (3,219,743 samples, 1.38%)</title><rect x="60.4860%" y="2101" width="1.3818%" height="15" fill="rgb(208,127,28)" fg:x="140937446" fg:w="3219743"/><text x="60.7360%" y="2111.50"></text></g><g><title>benchmark::count_nodes (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2293" width="0.9739%" height="15" fill="rgb(224,137,22)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2277" width="0.9739%" height="15" fill="rgb(254,70,32)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2287.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2261" width="0.9739%" height="15" fill="rgb(229,75,37)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2245" width="0.9739%" height="15" fill="rgb(252,64,23)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2229" width="0.9739%" height="15" fill="rgb(232,162,48)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2239.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2213" width="0.9739%" height="15" fill="rgb(246,160,12)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2223.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2197" width="0.9739%" height="15" fill="rgb(247,166,0)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2207.50"></text></g><g><title>benchmark::count_nodes (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2181" width="0.9739%" height="15" fill="rgb(249,219,21)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2165" width="0.9739%" height="15" fill="rgb(205,209,3)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2175.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2149" width="0.9739%" height="15" fill="rgb(243,44,1)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2133" width="0.9739%" height="15" fill="rgb(206,159,16)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2143.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2117" width="0.9739%" height="15" fill="rgb(244,77,30)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2127.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2101" width="0.9739%" height="15" fill="rgb(218,69,12)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2111.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2085" width="0.9739%" height="15" fill="rgb(212,87,7)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2095.50"></text></g><g><title>benchmark::count_nodes (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2069" width="0.9739%" height="15" fill="rgb(245,114,25)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2079.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2053" width="0.9739%" height="15" fill="rgb(210,61,42)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2063.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2037" width="0.9739%" height="15" fill="rgb(211,52,33)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2047.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2021" width="0.9739%" height="15" fill="rgb(234,58,33)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2031.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="2005" width="0.9739%" height="15" fill="rgb(220,115,36)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="2015.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1989" width="0.9739%" height="15" fill="rgb(243,153,54)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1999.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1973" width="0.9739%" height="15" fill="rgb(251,47,18)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1983.50"></text></g><g><title>benchmark::count_nodes (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1957" width="0.9739%" height="15" fill="rgb(242,102,42)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1941" width="0.9739%" height="15" fill="rgb(234,31,38)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1951.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1925" width="0.9739%" height="15" fill="rgb(221,117,51)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1935.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1909" width="0.9739%" height="15" fill="rgb(212,20,18)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1919.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1893" width="0.9739%" height="15" fill="rgb(245,133,36)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1903.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1877" width="0.9739%" height="15" fill="rgb(212,6,19)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1887.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1861" width="0.9739%" height="15" fill="rgb(218,1,36)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1871.50"></text></g><g><title>benchmark::count_nodes (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1845" width="0.9739%" height="15" fill="rgb(246,84,54)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1829" width="0.9739%" height="15" fill="rgb(242,110,6)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1839.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1813" width="0.9739%" height="15" fill="rgb(214,47,5)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1797" width="0.9739%" height="15" fill="rgb(218,159,25)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1807.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1781" width="0.9739%" height="15" fill="rgb(215,211,28)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1791.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1765" width="0.9739%" height="15" fill="rgb(238,59,32)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1775.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1749" width="0.9739%" height="15" fill="rgb(226,82,3)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1759.50"></text></g><g><title>benchmark::count_nodes (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1733" width="0.9739%" height="15" fill="rgb(240,164,32)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1717" width="0.9739%" height="15" fill="rgb(232,46,7)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1727.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1701" width="0.9739%" height="15" fill="rgb(229,129,53)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1685" width="0.9739%" height="15" fill="rgb(234,188,29)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1695.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1669" width="0.9739%" height="15" fill="rgb(246,141,4)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1679.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1653" width="0.9739%" height="15" fill="rgb(229,23,39)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1663.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1637" width="0.9739%" height="15" fill="rgb(206,12,3)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1647.50"></text></g><g><title>benchmark::count_nodes (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1621" width="0.9739%" height="15" fill="rgb(252,226,20)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1605" width="0.9739%" height="15" fill="rgb(216,123,35)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1615.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1589" width="0.9739%" height="15" fill="rgb(212,68,40)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1573" width="0.9739%" height="15" fill="rgb(254,125,32)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1583.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1557" width="0.9739%" height="15" fill="rgb(253,97,22)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1567.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1541" width="0.9739%" height="15" fill="rgb(241,101,14)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1551.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1525" width="0.9739%" height="15" fill="rgb(238,103,29)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1535.50"></text></g><g><title>benchmark::count_nodes (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1509" width="0.9739%" height="15" fill="rgb(233,195,47)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1493" width="0.9739%" height="15" fill="rgb(246,218,30)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1503.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1477" width="0.9739%" height="15" fill="rgb(219,145,47)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1461" width="0.9739%" height="15" fill="rgb(243,12,26)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1471.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1445" width="0.9739%" height="15" fill="rgb(214,87,16)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1455.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1429" width="0.9739%" height="15" fill="rgb(208,99,42)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1439.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1413" width="0.9739%" height="15" fill="rgb(253,99,2)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1423.50"></text></g><g><title>benchmark::count_nodes (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1397" width="0.9739%" height="15" fill="rgb(220,168,23)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1381" width="0.9739%" height="15" fill="rgb(242,38,24)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1391.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1365" width="0.9739%" height="15" fill="rgb(225,182,9)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1349" width="0.9739%" height="15" fill="rgb(243,178,37)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1333" width="0.9739%" height="15" fill="rgb(232,139,19)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1343.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1317" width="0.9739%" height="15" fill="rgb(225,201,24)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1327.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1301" width="0.9739%" height="15" fill="rgb(221,47,46)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1311.50"></text></g><g><title>benchmark::count_nodes (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1285" width="0.9739%" height="15" fill="rgb(249,23,13)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1269" width="0.9739%" height="15" fill="rgb(219,9,5)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,269,259 samples, 0.97%)</title><rect x="61.8678%" y="1253" width="0.9739%" height="15" fill="rgb(254,171,16)" fg:x="144157189" fg:w="2269259"/><text x="62.1178%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,453,609 samples, 1.48%)</title><rect x="62.8417%" y="1765" width="1.4822%" height="15" fill="rgb(230,171,20)" fg:x="146426448" fg:w="3453609"/><text x="63.0917%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,453,609 samples, 1.48%)</title><rect x="62.8417%" y="1749" width="1.4822%" height="15" fill="rgb(210,71,41)" fg:x="146426448" fg:w="3453609"/><text x="63.0917%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,453,609 samples, 1.48%)</title><rect x="62.8417%" y="1733" width="1.4822%" height="15" fill="rgb(206,173,20)" fg:x="146426448" fg:w="3453609"/><text x="63.0917%" y="1743.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,453,609 samples, 1.48%)</title><rect x="62.8417%" y="1717" width="1.4822%" height="15" fill="rgb(233,88,34)" fg:x="146426448" fg:w="3453609"/><text x="63.0917%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,453,609 samples, 1.48%)</title><rect x="62.8417%" y="1701" width="1.4822%" height="15" fill="rgb(223,209,46)" fg:x="146426448" fg:w="3453609"/><text x="63.0917%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,453,609 samples, 1.48%)</title><rect x="62.8417%" y="1685" width="1.4822%" height="15" fill="rgb(250,43,18)" fg:x="146426448" fg:w="3453609"/><text x="63.0917%" y="1695.50"></text></g><g><title>alloc::alloc::dealloc (3,453,609 samples, 1.48%)</title><rect x="62.8417%" y="1669" width="1.4822%" height="15" fill="rgb(208,13,10)" fg:x="146426448" fg:w="3453609"/><text x="63.0917%" y="1679.50"></text></g><g><title>cfree (3,453,609 samples, 1.48%)</title><rect x="62.8417%" y="1653" width="1.4822%" height="15" fill="rgb(212,200,36)" fg:x="146426448" fg:w="3453609"/><text x="63.0917%" y="1663.50"></text></g><g><title>[libc.so.6] (3,453,609 samples, 1.48%)</title><rect x="62.8417%" y="1637" width="1.4822%" height="15" fill="rgb(225,90,30)" fg:x="146426448" fg:w="3453609"/><text x="63.0917%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,433,228 samples, 1.47%)</title><rect x="64.3239%" y="1189" width="1.4734%" height="15" fill="rgb(236,182,39)" fg:x="149880057" fg:w="3433228"/><text x="64.5739%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,433,228 samples, 1.47%)</title><rect x="64.3239%" y="1173" width="1.4734%" height="15" fill="rgb(212,144,35)" fg:x="149880057" fg:w="3433228"/><text x="64.5739%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,433,228 samples, 1.47%)</title><rect x="64.3239%" y="1157" width="1.4734%" height="15" fill="rgb(228,63,44)" fg:x="149880057" fg:w="3433228"/><text x="64.5739%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,433,228 samples, 1.47%)</title><rect x="64.3239%" y="1141" width="1.4734%" height="15" fill="rgb(228,109,6)" fg:x="149880057" fg:w="3433228"/><text x="64.5739%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,433,228 samples, 1.47%)</title><rect x="64.3239%" y="1125" width="1.4734%" height="15" fill="rgb(238,117,24)" fg:x="149880057" fg:w="3433228"/><text x="64.5739%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,433,228 samples, 1.47%)</title><rect x="64.3239%" y="1109" width="1.4734%" height="15" fill="rgb(242,26,26)" fg:x="149880057" fg:w="3433228"/><text x="64.5739%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,433,228 samples, 1.47%)</title><rect x="64.3239%" y="1093" width="1.4734%" height="15" fill="rgb(221,92,48)" fg:x="149880057" fg:w="3433228"/><text x="64.5739%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,433,228 samples, 1.47%)</title><rect x="64.3239%" y="1077" width="1.4734%" height="15" fill="rgb(209,209,32)" fg:x="149880057" fg:w="3433228"/><text x="64.5739%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,433,228 samples, 1.47%)</title><rect x="64.3239%" y="1061" width="1.4734%" height="15" fill="rgb(221,70,22)" fg:x="149880057" fg:w="3433228"/><text x="64.5739%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,433,228 samples, 1.47%)</title><rect x="64.3239%" y="1045" width="1.4734%" height="15" fill="rgb(248,145,5)" fg:x="149880057" fg:w="3433228"/><text x="64.5739%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,433,228 samples, 1.47%)</title><rect x="64.3239%" y="1029" width="1.4734%" height="15" fill="rgb(226,116,26)" fg:x="149880057" fg:w="3433228"/><text x="64.5739%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (3,433,228 samples, 1.47%)</title><rect x="64.3239%" y="1013" width="1.4734%" height="15" fill="rgb(244,5,17)" fg:x="149880057" fg:w="3433228"/><text x="64.5739%" y="1023.50"></text></g><g><title>cfree (3,433,228 samples, 1.47%)</title><rect x="64.3239%" y="997" width="1.4734%" height="15" fill="rgb(252,159,33)" fg:x="149880057" fg:w="3433228"/><text x="64.5739%" y="1007.50"></text></g><g><title>[libc.so.6] (3,433,228 samples, 1.47%)</title><rect x="64.3239%" y="981" width="1.4734%" height="15" fill="rgb(206,71,0)" fg:x="149880057" fg:w="3433228"/><text x="64.5739%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,529,958 samples, 2.80%)</title><rect x="64.3239%" y="1317" width="2.8025%" height="15" fill="rgb(233,118,54)" fg:x="149880057" fg:w="6529958"/><text x="64.5739%" y="1327.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,529,958 samples, 2.80%)</title><rect x="64.3239%" y="1301" width="2.8025%" height="15" fill="rgb(234,83,48)" fg:x="149880057" fg:w="6529958"/><text x="64.5739%" y="1311.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,529,958 samples, 2.80%)</title><rect x="64.3239%" y="1285" width="2.8025%" height="15" fill="rgb(228,3,54)" fg:x="149880057" fg:w="6529958"/><text x="64.5739%" y="1295.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,529,958 samples, 2.80%)</title><rect x="64.3239%" y="1269" width="2.8025%" height="15" fill="rgb(226,155,13)" fg:x="149880057" fg:w="6529958"/><text x="64.5739%" y="1279.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,529,958 samples, 2.80%)</title><rect x="64.3239%" y="1253" width="2.8025%" height="15" fill="rgb(241,28,37)" fg:x="149880057" fg:w="6529958"/><text x="64.5739%" y="1263.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,529,958 samples, 2.80%)</title><rect x="64.3239%" y="1237" width="2.8025%" height="15" fill="rgb(233,93,10)" fg:x="149880057" fg:w="6529958"/><text x="64.5739%" y="1247.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,529,958 samples, 2.80%)</title><rect x="64.3239%" y="1221" width="2.8025%" height="15" fill="rgb(225,113,19)" fg:x="149880057" fg:w="6529958"/><text x="64.5739%" y="1231.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,529,958 samples, 2.80%)</title><rect x="64.3239%" y="1205" width="2.8025%" height="15" fill="rgb(241,2,18)" fg:x="149880057" fg:w="6529958"/><text x="64.5739%" y="1215.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="1189" width="1.3290%" height="15" fill="rgb(228,207,21)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="1173" width="1.3290%" height="15" fill="rgb(213,211,35)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="1157" width="1.3290%" height="15" fill="rgb(209,83,10)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="1141" width="1.3290%" height="15" fill="rgb(209,164,1)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="1125" width="1.3290%" height="15" fill="rgb(213,184,43)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="1109" width="1.3290%" height="15" fill="rgb(231,61,34)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="1093" width="1.3290%" height="15" fill="rgb(235,75,3)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="1077" width="1.3290%" height="15" fill="rgb(220,106,47)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="1061" width="1.3290%" height="15" fill="rgb(210,196,33)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="1045" width="1.3290%" height="15" fill="rgb(229,154,42)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="1029" width="1.3290%" height="15" fill="rgb(228,114,26)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="1013" width="1.3290%" height="15" fill="rgb(208,144,1)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="997" width="1.3290%" height="15" fill="rgb(239,112,37)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="981" width="1.3290%" height="15" fill="rgb(210,96,50)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="965" width="1.3290%" height="15" fill="rgb(222,178,2)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="949" width="1.3290%" height="15" fill="rgb(226,74,18)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="933" width="1.3290%" height="15" fill="rgb(225,67,54)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="943.50"></text></g><g><title>cfree (3,096,730 samples, 1.33%)</title><rect x="65.7973%" y="917" width="1.3290%" height="15" fill="rgb(251,92,32)" fg:x="153313285" fg:w="3096730"/><text x="66.0473%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,854,328 samples, 4.23%)</title><rect x="64.3239%" y="1365" width="4.2292%" height="15" fill="rgb(228,149,22)" fg:x="149880057" fg:w="9854328"/><text x="64.5739%" y="1375.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,854,328 samples, 4.23%)</title><rect x="64.3239%" y="1349" width="4.2292%" height="15" fill="rgb(243,54,13)" fg:x="149880057" fg:w="9854328"/><text x="64.5739%" y="1359.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,854,328 samples, 4.23%)</title><rect x="64.3239%" y="1333" width="4.2292%" height="15" fill="rgb(243,180,28)" fg:x="149880057" fg:w="9854328"/><text x="64.5739%" y="1343.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,324,370 samples, 1.43%)</title><rect x="67.1263%" y="1317" width="1.4267%" height="15" fill="rgb(208,167,24)" fg:x="156410015" fg:w="3324370"/><text x="67.3763%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,324,370 samples, 1.43%)</title><rect x="67.1263%" y="1301" width="1.4267%" height="15" fill="rgb(245,73,45)" fg:x="156410015" fg:w="3324370"/><text x="67.3763%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,324,370 samples, 1.43%)</title><rect x="67.1263%" y="1285" width="1.4267%" height="15" fill="rgb(237,203,48)" fg:x="156410015" fg:w="3324370"/><text x="67.3763%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,324,370 samples, 1.43%)</title><rect x="67.1263%" y="1269" width="1.4267%" height="15" fill="rgb(211,197,16)" fg:x="156410015" fg:w="3324370"/><text x="67.3763%" y="1279.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,324,370 samples, 1.43%)</title><rect x="67.1263%" y="1253" width="1.4267%" height="15" fill="rgb(243,99,51)" fg:x="156410015" fg:w="3324370"/><text x="67.3763%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,324,370 samples, 1.43%)</title><rect x="67.1263%" y="1237" width="1.4267%" height="15" fill="rgb(215,123,29)" fg:x="156410015" fg:w="3324370"/><text x="67.3763%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,324,370 samples, 1.43%)</title><rect x="67.1263%" y="1221" width="1.4267%" height="15" fill="rgb(239,186,37)" fg:x="156410015" fg:w="3324370"/><text x="67.3763%" y="1231.50"></text></g><g><title>alloc::alloc::dealloc (3,324,370 samples, 1.43%)</title><rect x="67.1263%" y="1205" width="1.4267%" height="15" fill="rgb(252,136,39)" fg:x="156410015" fg:w="3324370"/><text x="67.3763%" y="1215.50"></text></g><g><title>__rdl_dealloc (3,324,370 samples, 1.43%)</title><rect x="67.1263%" y="1189" width="1.4267%" height="15" fill="rgb(223,213,32)" fg:x="156410015" fg:w="3324370"/><text x="67.3763%" y="1199.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,324,370 samples, 1.43%)</title><rect x="67.1263%" y="1173" width="1.4267%" height="15" fill="rgb(233,115,5)" fg:x="156410015" fg:w="3324370"/><text x="67.3763%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (12,910,948 samples, 5.54%)</title><rect x="64.3239%" y="1509" width="5.5410%" height="15" fill="rgb(207,226,44)" fg:x="149880057" fg:w="12910948"/><text x="64.5739%" y="1519.50">core::p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,910,948 samples, 5.54%)</title><rect x="64.3239%" y="1493" width="5.5410%" height="15" fill="rgb(208,126,0)" fg:x="149880057" fg:w="12910948"/><text x="64.5739%" y="1503.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (12,910,948 samples, 5.54%)</title><rect x="64.3239%" y="1477" width="5.5410%" height="15" fill="rgb(244,66,21)" fg:x="149880057" fg:w="12910948"/><text x="64.5739%" y="1487.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (12,910,948 samples, 5.54%)</title><rect x="64.3239%" y="1461" width="5.5410%" height="15" fill="rgb(222,97,12)" fg:x="149880057" fg:w="12910948"/><text x="64.5739%" y="1471.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (12,910,948 samples, 5.54%)</title><rect x="64.3239%" y="1445" width="5.5410%" height="15" fill="rgb(219,213,19)" fg:x="149880057" fg:w="12910948"/><text x="64.5739%" y="1455.50">core::p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,910,948 samples, 5.54%)</title><rect x="64.3239%" y="1429" width="5.5410%" height="15" fill="rgb(252,169,30)" fg:x="149880057" fg:w="12910948"/><text x="64.5739%" y="1439.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (12,910,948 samples, 5.54%)</title><rect x="64.3239%" y="1413" width="5.5410%" height="15" fill="rgb(206,32,51)" fg:x="149880057" fg:w="12910948"/><text x="64.5739%" y="1423.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (12,910,948 samples, 5.54%)</title><rect x="64.3239%" y="1397" width="5.5410%" height="15" fill="rgb(250,172,42)" fg:x="149880057" fg:w="12910948"/><text x="64.5739%" y="1407.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (12,910,948 samples, 5.54%)</title><rect x="64.3239%" y="1381" width="5.5410%" height="15" fill="rgb(209,34,43)" fg:x="149880057" fg:w="12910948"/><text x="64.5739%" y="1391.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,056,620 samples, 1.31%)</title><rect x="68.5531%" y="1365" width="1.3118%" height="15" fill="rgb(223,11,35)" fg:x="159734385" fg:w="3056620"/><text x="68.8031%" y="1375.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,056,620 samples, 1.31%)</title><rect x="68.5531%" y="1349" width="1.3118%" height="15" fill="rgb(251,219,26)" fg:x="159734385" fg:w="3056620"/><text x="68.8031%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,056,620 samples, 1.31%)</title><rect x="68.5531%" y="1333" width="1.3118%" height="15" fill="rgb(231,119,3)" fg:x="159734385" fg:w="3056620"/><text x="68.8031%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,056,620 samples, 1.31%)</title><rect x="68.5531%" y="1317" width="1.3118%" height="15" fill="rgb(216,97,11)" fg:x="159734385" fg:w="3056620"/><text x="68.8031%" y="1327.50"></text></g><g><title>alloc::alloc::dealloc (3,056,620 samples, 1.31%)</title><rect x="68.5531%" y="1301" width="1.3118%" height="15" fill="rgb(223,59,9)" fg:x="159734385" fg:w="3056620"/><text x="68.8031%" y="1311.50"></text></g><g><title>cfree (3,056,620 samples, 1.31%)</title><rect x="68.5531%" y="1285" width="1.3118%" height="15" fill="rgb(233,93,31)" fg:x="159734385" fg:w="3056620"/><text x="68.8031%" y="1295.50"></text></g><g><title>[libc.so.6] (3,056,620 samples, 1.31%)</title><rect x="68.5531%" y="1269" width="1.3118%" height="15" fill="rgb(239,81,33)" fg:x="159734385" fg:w="3056620"/><text x="68.8031%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (16,106,072 samples, 6.91%)</title><rect x="64.3239%" y="1701" width="6.9122%" height="15" fill="rgb(213,120,34)" fg:x="149880057" fg:w="16106072"/><text x="64.5739%" y="1711.50">core::ptr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,106,072 samples, 6.91%)</title><rect x="64.3239%" y="1685" width="6.9122%" height="15" fill="rgb(243,49,53)" fg:x="149880057" fg:w="16106072"/><text x="64.5739%" y="1695.50">&lt;alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (16,106,072 samples, 6.91%)</title><rect x="64.3239%" y="1669" width="6.9122%" height="15" fill="rgb(247,216,33)" fg:x="149880057" fg:w="16106072"/><text x="64.5739%" y="1679.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (16,106,072 samples, 6.91%)</title><rect x="64.3239%" y="1653" width="6.9122%" height="15" fill="rgb(226,26,14)" fg:x="149880057" fg:w="16106072"/><text x="64.5739%" y="1663.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (16,106,072 samples, 6.91%)</title><rect x="64.3239%" y="1637" width="6.9122%" height="15" fill="rgb(215,49,53)" fg:x="149880057" fg:w="16106072"/><text x="64.5739%" y="1647.50">core::ptr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,106,072 samples, 6.91%)</title><rect x="64.3239%" y="1621" width="6.9122%" height="15" fill="rgb(245,162,40)" fg:x="149880057" fg:w="16106072"/><text x="64.5739%" y="1631.50">&lt;alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (16,106,072 samples, 6.91%)</title><rect x="64.3239%" y="1605" width="6.9122%" height="15" fill="rgb(229,68,17)" fg:x="149880057" fg:w="16106072"/><text x="64.5739%" y="1615.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (16,106,072 samples, 6.91%)</title><rect x="64.3239%" y="1589" width="6.9122%" height="15" fill="rgb(213,182,10)" fg:x="149880057" fg:w="16106072"/><text x="64.5739%" y="1599.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (16,106,072 samples, 6.91%)</title><rect x="64.3239%" y="1573" width="6.9122%" height="15" fill="rgb(245,125,30)" fg:x="149880057" fg:w="16106072"/><text x="64.5739%" y="1583.50">core::ptr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,106,072 samples, 6.91%)</title><rect x="64.3239%" y="1557" width="6.9122%" height="15" fill="rgb(232,202,2)" fg:x="149880057" fg:w="16106072"/><text x="64.5739%" y="1567.50">&lt;alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (16,106,072 samples, 6.91%)</title><rect x="64.3239%" y="1541" width="6.9122%" height="15" fill="rgb(237,140,51)" fg:x="149880057" fg:w="16106072"/><text x="64.5739%" y="1551.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (16,106,072 samples, 6.91%)</title><rect x="64.3239%" y="1525" width="6.9122%" height="15" fill="rgb(236,157,25)" fg:x="149880057" fg:w="16106072"/><text x="64.5739%" y="1535.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,195,124 samples, 1.37%)</title><rect x="69.8649%" y="1509" width="1.3712%" height="15" fill="rgb(219,209,0)" fg:x="162791005" fg:w="3195124"/><text x="70.1149%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,195,124 samples, 1.37%)</title><rect x="69.8649%" y="1493" width="1.3712%" height="15" fill="rgb(240,116,54)" fg:x="162791005" fg:w="3195124"/><text x="70.1149%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,195,124 samples, 1.37%)</title><rect x="69.8649%" y="1477" width="1.3712%" height="15" fill="rgb(216,10,36)" fg:x="162791005" fg:w="3195124"/><text x="70.1149%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,195,124 samples, 1.37%)</title><rect x="69.8649%" y="1461" width="1.3712%" height="15" fill="rgb(222,72,44)" fg:x="162791005" fg:w="3195124"/><text x="70.1149%" y="1471.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,195,124 samples, 1.37%)</title><rect x="69.8649%" y="1445" width="1.3712%" height="15" fill="rgb(232,159,9)" fg:x="162791005" fg:w="3195124"/><text x="70.1149%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,195,124 samples, 1.37%)</title><rect x="69.8649%" y="1429" width="1.3712%" height="15" fill="rgb(210,39,32)" fg:x="162791005" fg:w="3195124"/><text x="70.1149%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,195,124 samples, 1.37%)</title><rect x="69.8649%" y="1413" width="1.3712%" height="15" fill="rgb(216,194,45)" fg:x="162791005" fg:w="3195124"/><text x="70.1149%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,195,124 samples, 1.37%)</title><rect x="69.8649%" y="1397" width="1.3712%" height="15" fill="rgb(218,18,35)" fg:x="162791005" fg:w="3195124"/><text x="70.1149%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (3,195,124 samples, 1.37%)</title><rect x="69.8649%" y="1381" width="1.3712%" height="15" fill="rgb(207,83,51)" fg:x="162791005" fg:w="3195124"/><text x="70.1149%" y="1391.50"></text></g><g><title>cfree (3,195,124 samples, 1.37%)</title><rect x="69.8649%" y="1365" width="1.3712%" height="15" fill="rgb(225,63,43)" fg:x="162791005" fg:w="3195124"/><text x="70.1149%" y="1375.50"></text></g><g><title>[libc.so.6] (3,195,124 samples, 1.37%)</title><rect x="69.8649%" y="1349" width="1.3712%" height="15" fill="rgb(207,57,36)" fg:x="162791005" fg:w="3195124"/><text x="70.1149%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,682,297 samples, 9.73%)</title><rect x="62.8417%" y="1941" width="9.7345%" height="15" fill="rgb(216,99,33)" fg:x="146426448" fg:w="22682297"/><text x="63.0917%" y="1951.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (22,682,297 samples, 9.73%)</title><rect x="62.8417%" y="1925" width="9.7345%" height="15" fill="rgb(225,42,16)" fg:x="146426448" fg:w="22682297"/><text x="63.0917%" y="1935.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (22,682,297 samples, 9.73%)</title><rect x="62.8417%" y="1909" width="9.7345%" height="15" fill="rgb(220,201,45)" fg:x="146426448" fg:w="22682297"/><text x="63.0917%" y="1919.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (22,682,297 samples, 9.73%)</title><rect x="62.8417%" y="1893" width="9.7345%" height="15" fill="rgb(225,33,4)" fg:x="146426448" fg:w="22682297"/><text x="63.0917%" y="1903.50">core::ptr::dro..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,682,297 samples, 9.73%)</title><rect x="62.8417%" y="1877" width="9.7345%" height="15" fill="rgb(224,33,50)" fg:x="146426448" fg:w="22682297"/><text x="63.0917%" y="1887.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (22,682,297 samples, 9.73%)</title><rect x="62.8417%" y="1861" width="9.7345%" height="15" fill="rgb(246,198,51)" fg:x="146426448" fg:w="22682297"/><text x="63.0917%" y="1871.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (22,682,297 samples, 9.73%)</title><rect x="62.8417%" y="1845" width="9.7345%" height="15" fill="rgb(205,22,4)" fg:x="146426448" fg:w="22682297"/><text x="63.0917%" y="1855.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (22,682,297 samples, 9.73%)</title><rect x="62.8417%" y="1829" width="9.7345%" height="15" fill="rgb(206,3,8)" fg:x="146426448" fg:w="22682297"/><text x="63.0917%" y="1839.50">core::ptr::dro..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,682,297 samples, 9.73%)</title><rect x="62.8417%" y="1813" width="9.7345%" height="15" fill="rgb(251,23,15)" fg:x="146426448" fg:w="22682297"/><text x="63.0917%" y="1823.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (22,682,297 samples, 9.73%)</title><rect x="62.8417%" y="1797" width="9.7345%" height="15" fill="rgb(252,88,28)" fg:x="146426448" fg:w="22682297"/><text x="63.0917%" y="1807.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (22,682,297 samples, 9.73%)</title><rect x="62.8417%" y="1781" width="9.7345%" height="15" fill="rgb(212,127,14)" fg:x="146426448" fg:w="22682297"/><text x="63.0917%" y="1791.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (19,228,688 samples, 8.25%)</title><rect x="64.3239%" y="1765" width="8.2524%" height="15" fill="rgb(247,145,37)" fg:x="149880057" fg:w="19228688"/><text x="64.5739%" y="1775.50">core::ptr::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19,228,688 samples, 8.25%)</title><rect x="64.3239%" y="1749" width="8.2524%" height="15" fill="rgb(209,117,53)" fg:x="149880057" fg:w="19228688"/><text x="64.5739%" y="1759.50">&lt;alloc::vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (19,228,688 samples, 8.25%)</title><rect x="64.3239%" y="1733" width="8.2524%" height="15" fill="rgb(212,90,42)" fg:x="149880057" fg:w="19228688"/><text x="64.5739%" y="1743.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (19,228,688 samples, 8.25%)</title><rect x="64.3239%" y="1717" width="8.2524%" height="15" fill="rgb(218,164,37)" fg:x="149880057" fg:w="19228688"/><text x="64.5739%" y="1727.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,122,616 samples, 1.34%)</title><rect x="71.2361%" y="1701" width="1.3401%" height="15" fill="rgb(246,65,34)" fg:x="165986129" fg:w="3122616"/><text x="71.4861%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,122,616 samples, 1.34%)</title><rect x="71.2361%" y="1685" width="1.3401%" height="15" fill="rgb(231,100,33)" fg:x="165986129" fg:w="3122616"/><text x="71.4861%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,122,616 samples, 1.34%)</title><rect x="71.2361%" y="1669" width="1.3401%" height="15" fill="rgb(228,126,14)" fg:x="165986129" fg:w="3122616"/><text x="71.4861%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,122,616 samples, 1.34%)</title><rect x="71.2361%" y="1653" width="1.3401%" height="15" fill="rgb(215,173,21)" fg:x="165986129" fg:w="3122616"/><text x="71.4861%" y="1663.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,122,616 samples, 1.34%)</title><rect x="71.2361%" y="1637" width="1.3401%" height="15" fill="rgb(210,6,40)" fg:x="165986129" fg:w="3122616"/><text x="71.4861%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,122,616 samples, 1.34%)</title><rect x="71.2361%" y="1621" width="1.3401%" height="15" fill="rgb(212,48,18)" fg:x="165986129" fg:w="3122616"/><text x="71.4861%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,122,616 samples, 1.34%)</title><rect x="71.2361%" y="1605" width="1.3401%" height="15" fill="rgb(230,214,11)" fg:x="165986129" fg:w="3122616"/><text x="71.4861%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,122,616 samples, 1.34%)</title><rect x="71.2361%" y="1589" width="1.3401%" height="15" fill="rgb(254,105,39)" fg:x="165986129" fg:w="3122616"/><text x="71.4861%" y="1599.50"></text></g><g><title>alloc::alloc::dealloc (3,122,616 samples, 1.34%)</title><rect x="71.2361%" y="1573" width="1.3401%" height="15" fill="rgb(245,158,5)" fg:x="165986129" fg:w="3122616"/><text x="71.4861%" y="1583.50"></text></g><g><title>__rust_dealloc (3,122,616 samples, 1.34%)</title><rect x="71.2361%" y="1557" width="1.3401%" height="15" fill="rgb(249,208,11)" fg:x="165986129" fg:w="3122616"/><text x="71.4861%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,645,053 samples, 11.01%)</title><rect x="62.8417%" y="2005" width="11.0061%" height="15" fill="rgb(210,39,28)" fg:x="146426448" fg:w="25645053"/><text x="63.0917%" y="2015.50">&lt;alloc::vec::Vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (25,645,053 samples, 11.01%)</title><rect x="62.8417%" y="1989" width="11.0061%" height="15" fill="rgb(211,56,53)" fg:x="146426448" fg:w="25645053"/><text x="63.0917%" y="1999.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (25,645,053 samples, 11.01%)</title><rect x="62.8417%" y="1973" width="11.0061%" height="15" fill="rgb(226,201,30)" fg:x="146426448" fg:w="25645053"/><text x="63.0917%" y="1983.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (25,645,053 samples, 11.01%)</title><rect x="62.8417%" y="1957" width="11.0061%" height="15" fill="rgb(239,101,34)" fg:x="146426448" fg:w="25645053"/><text x="63.0917%" y="1967.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,962,756 samples, 1.27%)</title><rect x="72.5763%" y="1941" width="1.2715%" height="15" fill="rgb(226,209,5)" fg:x="169108745" fg:w="2962756"/><text x="72.8263%" y="1951.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,962,756 samples, 1.27%)</title><rect x="72.5763%" y="1925" width="1.2715%" height="15" fill="rgb(250,105,47)" fg:x="169108745" fg:w="2962756"/><text x="72.8263%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,962,756 samples, 1.27%)</title><rect x="72.5763%" y="1909" width="1.2715%" height="15" fill="rgb(230,72,3)" fg:x="169108745" fg:w="2962756"/><text x="72.8263%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,962,756 samples, 1.27%)</title><rect x="72.5763%" y="1893" width="1.2715%" height="15" fill="rgb(232,218,39)" fg:x="169108745" fg:w="2962756"/><text x="72.8263%" y="1903.50"></text></g><g><title>alloc::alloc::dealloc (2,962,756 samples, 1.27%)</title><rect x="72.5763%" y="1877" width="1.2715%" height="15" fill="rgb(248,166,6)" fg:x="169108745" fg:w="2962756"/><text x="72.8263%" y="1887.50"></text></g><g><title>cfree (2,962,756 samples, 1.27%)</title><rect x="72.5763%" y="1861" width="1.2715%" height="15" fill="rgb(247,89,20)" fg:x="169108745" fg:w="2962756"/><text x="72.8263%" y="1871.50"></text></g><g><title>[libc.so.6] (2,962,756 samples, 1.27%)</title><rect x="72.5763%" y="1845" width="1.2715%" height="15" fill="rgb(248,130,54)" fg:x="169108745" fg:w="2962756"/><text x="72.8263%" y="1855.50"></text></g><g><title>[libc.so.6] (2,962,756 samples, 1.27%)</title><rect x="72.5763%" y="1829" width="1.2715%" height="15" fill="rgb(234,196,4)" fg:x="169108745" fg:w="2962756"/><text x="72.8263%" y="1839.50"></text></g><g><title>[libc.so.6] (2,962,756 samples, 1.27%)</title><rect x="72.5763%" y="1813" width="1.2715%" height="15" fill="rgb(250,143,31)" fg:x="169108745" fg:w="2962756"/><text x="72.8263%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (28,880,191 samples, 12.39%)</title><rect x="62.8417%" y="2085" width="12.3945%" height="15" fill="rgb(211,110,34)" fg:x="146426448" fg:w="28880191"/><text x="63.0917%" y="2095.50">core::ptr::drop_in_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28,880,191 samples, 12.39%)</title><rect x="62.8417%" y="2069" width="12.3945%" height="15" fill="rgb(215,124,48)" fg:x="146426448" fg:w="28880191"/><text x="63.0917%" y="2079.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (28,880,191 samples, 12.39%)</title><rect x="62.8417%" y="2053" width="12.3945%" height="15" fill="rgb(216,46,13)" fg:x="146426448" fg:w="28880191"/><text x="63.0917%" y="2063.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (28,880,191 samples, 12.39%)</title><rect x="62.8417%" y="2037" width="12.3945%" height="15" fill="rgb(205,184,25)" fg:x="146426448" fg:w="28880191"/><text x="63.0917%" y="2047.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (28,880,191 samples, 12.39%)</title><rect x="62.8417%" y="2021" width="12.3945%" height="15" fill="rgb(228,1,10)" fg:x="146426448" fg:w="28880191"/><text x="63.0917%" y="2031.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,235,138 samples, 1.39%)</title><rect x="73.8478%" y="2005" width="1.3884%" height="15" fill="rgb(213,116,27)" fg:x="172071501" fg:w="3235138"/><text x="74.0978%" y="2015.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,235,138 samples, 1.39%)</title><rect x="73.8478%" y="1989" width="1.3884%" height="15" fill="rgb(241,95,50)" fg:x="172071501" fg:w="3235138"/><text x="74.0978%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,235,138 samples, 1.39%)</title><rect x="73.8478%" y="1973" width="1.3884%" height="15" fill="rgb(238,48,32)" fg:x="172071501" fg:w="3235138"/><text x="74.0978%" y="1983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,235,138 samples, 1.39%)</title><rect x="73.8478%" y="1957" width="1.3884%" height="15" fill="rgb(235,113,49)" fg:x="172071501" fg:w="3235138"/><text x="74.0978%" y="1967.50"></text></g><g><title>alloc::alloc::dealloc (3,235,138 samples, 1.39%)</title><rect x="73.8478%" y="1941" width="1.3884%" height="15" fill="rgb(205,127,43)" fg:x="172071501" fg:w="3235138"/><text x="74.0978%" y="1951.50"></text></g><g><title>cfree (3,235,138 samples, 1.39%)</title><rect x="73.8478%" y="1925" width="1.3884%" height="15" fill="rgb(250,162,2)" fg:x="172071501" fg:w="3235138"/><text x="74.0978%" y="1935.50"></text></g><g><title>[libc.so.6] (3,235,138 samples, 1.39%)</title><rect x="73.8478%" y="1909" width="1.3884%" height="15" fill="rgb(220,13,41)" fg:x="172071501" fg:w="3235138"/><text x="74.0978%" y="1919.50"></text></g><g><title>[libc.so.6] (3,235,138 samples, 1.39%)</title><rect x="73.8478%" y="1893" width="1.3884%" height="15" fill="rgb(249,221,25)" fg:x="172071501" fg:w="3235138"/><text x="74.0978%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32,227,744 samples, 13.83%)</title><rect x="62.8417%" y="2133" width="13.8312%" height="15" fill="rgb(215,208,19)" fg:x="146426448" fg:w="32227744"/><text x="63.0917%" y="2143.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (32,227,744 samples, 13.83%)</title><rect x="62.8417%" y="2117" width="13.8312%" height="15" fill="rgb(236,175,2)" fg:x="146426448" fg:w="32227744"/><text x="63.0917%" y="2127.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (32,227,744 samples, 13.83%)</title><rect x="62.8417%" y="2101" width="13.8312%" height="15" fill="rgb(241,52,2)" fg:x="146426448" fg:w="32227744"/><text x="63.0917%" y="2111.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="2085" width="1.4367%" height="15" fill="rgb(248,140,14)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="2069" width="1.4367%" height="15" fill="rgb(253,22,42)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="2053" width="1.4367%" height="15" fill="rgb(234,61,47)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="2037" width="1.4367%" height="15" fill="rgb(208,226,15)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="2047.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="2021" width="1.4367%" height="15" fill="rgb(217,221,4)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="2031.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="2005" width="1.4367%" height="15" fill="rgb(212,174,34)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="2015.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="1989" width="1.4367%" height="15" fill="rgb(253,83,4)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="1999.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="1973" width="1.4367%" height="15" fill="rgb(250,195,49)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="1983.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="1957" width="1.4367%" height="15" fill="rgb(241,192,25)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="1941" width="1.4367%" height="15" fill="rgb(208,124,10)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="1925" width="1.4367%" height="15" fill="rgb(222,33,0)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="1909" width="1.4367%" height="15" fill="rgb(234,209,28)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="1893" width="1.4367%" height="15" fill="rgb(224,11,23)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="1903.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="1877" width="1.4367%" height="15" fill="rgb(232,99,1)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="1861" width="1.4367%" height="15" fill="rgb(237,95,45)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="1845" width="1.4367%" height="15" fill="rgb(208,109,11)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="1855.50"></text></g><g><title>alloc::alloc::dealloc (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="1829" width="1.4367%" height="15" fill="rgb(216,190,48)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="1839.50"></text></g><g><title>cfree (3,347,553 samples, 1.44%)</title><rect x="75.2362%" y="1813" width="1.4367%" height="15" fill="rgb(251,171,36)" fg:x="175306639" fg:w="3347553"/><text x="75.4862%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (35,428,144 samples, 15.20%)</title><rect x="62.8417%" y="2293" width="15.2047%" height="15" fill="rgb(230,62,22)" fg:x="146426448" fg:w="35428144"/><text x="63.0917%" y="2303.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (35,428,144 samples, 15.20%)</title><rect x="62.8417%" y="2277" width="15.2047%" height="15" fill="rgb(225,114,35)" fg:x="146426448" fg:w="35428144"/><text x="63.0917%" y="2287.50">core::ptr::drop_in_plac..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35,428,144 samples, 15.20%)</title><rect x="62.8417%" y="2261" width="15.2047%" height="15" fill="rgb(215,118,42)" fg:x="146426448" fg:w="35428144"/><text x="63.0917%" y="2271.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (35,428,144 samples, 15.20%)</title><rect x="62.8417%" y="2245" width="15.2047%" height="15" fill="rgb(243,119,21)" fg:x="146426448" fg:w="35428144"/><text x="63.0917%" y="2255.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (35,428,144 samples, 15.20%)</title><rect x="62.8417%" y="2229" width="15.2047%" height="15" fill="rgb(252,177,53)" fg:x="146426448" fg:w="35428144"/><text x="63.0917%" y="2239.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (35,428,144 samples, 15.20%)</title><rect x="62.8417%" y="2213" width="15.2047%" height="15" fill="rgb(237,209,29)" fg:x="146426448" fg:w="35428144"/><text x="63.0917%" y="2223.50">core::ptr::drop_in_plac..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35,428,144 samples, 15.20%)</title><rect x="62.8417%" y="2197" width="15.2047%" height="15" fill="rgb(212,65,23)" fg:x="146426448" fg:w="35428144"/><text x="63.0917%" y="2207.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (35,428,144 samples, 15.20%)</title><rect x="62.8417%" y="2181" width="15.2047%" height="15" fill="rgb(230,222,46)" fg:x="146426448" fg:w="35428144"/><text x="63.0917%" y="2191.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (35,428,144 samples, 15.20%)</title><rect x="62.8417%" y="2165" width="15.2047%" height="15" fill="rgb(215,135,32)" fg:x="146426448" fg:w="35428144"/><text x="63.0917%" y="2175.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (35,428,144 samples, 15.20%)</title><rect x="62.8417%" y="2149" width="15.2047%" height="15" fill="rgb(246,101,22)" fg:x="146426448" fg:w="35428144"/><text x="63.0917%" y="2159.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,200,400 samples, 1.37%)</title><rect x="76.6729%" y="2133" width="1.3735%" height="15" fill="rgb(206,107,13)" fg:x="178654192" fg:w="3200400"/><text x="76.9229%" y="2143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,200,400 samples, 1.37%)</title><rect x="76.6729%" y="2117" width="1.3735%" height="15" fill="rgb(250,100,44)" fg:x="178654192" fg:w="3200400"/><text x="76.9229%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,200,400 samples, 1.37%)</title><rect x="76.6729%" y="2101" width="1.3735%" height="15" fill="rgb(231,147,38)" fg:x="178654192" fg:w="3200400"/><text x="76.9229%" y="2111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,200,400 samples, 1.37%)</title><rect x="76.6729%" y="2085" width="1.3735%" height="15" fill="rgb(229,8,40)" fg:x="178654192" fg:w="3200400"/><text x="76.9229%" y="2095.50"></text></g><g><title>alloc::alloc::dealloc (3,200,400 samples, 1.37%)</title><rect x="76.6729%" y="2069" width="1.3735%" height="15" fill="rgb(221,135,30)" fg:x="178654192" fg:w="3200400"/><text x="76.9229%" y="2079.50"></text></g><g><title>cfree (3,200,400 samples, 1.37%)</title><rect x="76.6729%" y="2053" width="1.3735%" height="15" fill="rgb(249,193,18)" fg:x="178654192" fg:w="3200400"/><text x="76.9229%" y="2063.50"></text></g><g><title>[libc.so.6] (3,200,400 samples, 1.37%)</title><rect x="76.6729%" y="2037" width="1.3735%" height="15" fill="rgb(209,133,39)" fg:x="178654192" fg:w="3200400"/><text x="76.9229%" y="2047.50"></text></g><g><title>[libc.so.6] (3,200,400 samples, 1.37%)</title><rect x="76.6729%" y="2021" width="1.3735%" height="15" fill="rgb(232,100,14)" fg:x="178654192" fg:w="3200400"/><text x="76.9229%" y="2031.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,502,384 samples, 1.50%)</title><rect x="78.0464%" y="2293" width="1.5031%" height="15" fill="rgb(224,185,1)" fg:x="181854592" fg:w="3502384"/><text x="78.2964%" y="2303.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,502,384 samples, 1.50%)</title><rect x="78.0464%" y="2277" width="1.5031%" height="15" fill="rgb(223,139,8)" fg:x="181854592" fg:w="3502384"/><text x="78.2964%" y="2287.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,502,384 samples, 1.50%)</title><rect x="78.0464%" y="2261" width="1.5031%" height="15" fill="rgb(232,213,38)" fg:x="181854592" fg:w="3502384"/><text x="78.2964%" y="2271.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,502,384 samples, 1.50%)</title><rect x="78.0464%" y="2245" width="1.5031%" height="15" fill="rgb(207,94,22)" fg:x="181854592" fg:w="3502384"/><text x="78.2964%" y="2255.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,502,384 samples, 1.50%)</title><rect x="78.0464%" y="2229" width="1.5031%" height="15" fill="rgb(219,183,54)" fg:x="181854592" fg:w="3502384"/><text x="78.2964%" y="2239.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,502,384 samples, 1.50%)</title><rect x="78.0464%" y="2213" width="1.5031%" height="15" fill="rgb(216,185,54)" fg:x="181854592" fg:w="3502384"/><text x="78.2964%" y="2223.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,502,384 samples, 1.50%)</title><rect x="78.0464%" y="2197" width="1.5031%" height="15" fill="rgb(254,217,39)" fg:x="181854592" fg:w="3502384"/><text x="78.2964%" y="2207.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,502,384 samples, 1.50%)</title><rect x="78.0464%" y="2181" width="1.5031%" height="15" fill="rgb(240,178,23)" fg:x="181854592" fg:w="3502384"/><text x="78.2964%" y="2191.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,502,384 samples, 1.50%)</title><rect x="78.0464%" y="2165" width="1.5031%" height="15" fill="rgb(218,11,47)" fg:x="181854592" fg:w="3502384"/><text x="78.2964%" y="2175.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,502,384 samples, 1.50%)</title><rect x="78.0464%" y="2149" width="1.5031%" height="15" fill="rgb(218,51,51)" fg:x="181854592" fg:w="3502384"/><text x="78.2964%" y="2159.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,502,384 samples, 1.50%)</title><rect x="78.0464%" y="2133" width="1.5031%" height="15" fill="rgb(238,126,27)" fg:x="181854592" fg:w="3502384"/><text x="78.2964%" y="2143.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,502,384 samples, 1.50%)</title><rect x="78.0464%" y="2117" width="1.5031%" height="15" fill="rgb(249,202,22)" fg:x="181854592" fg:w="3502384"/><text x="78.2964%" y="2127.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,502,384 samples, 1.50%)</title><rect x="78.0464%" y="2101" width="1.5031%" height="15" fill="rgb(254,195,49)" fg:x="181854592" fg:w="3502384"/><text x="78.2964%" y="2111.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,502,384 samples, 1.50%)</title><rect x="78.0464%" y="2085" width="1.5031%" height="15" fill="rgb(208,123,14)" fg:x="181854592" fg:w="3502384"/><text x="78.2964%" y="2095.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,502,384 samples, 1.50%)</title><rect x="78.0464%" y="2069" width="1.5031%" height="15" fill="rgb(224,200,8)" fg:x="181854592" fg:w="3502384"/><text x="78.2964%" y="2079.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (143,498,957 samples, 61.59%)</title><rect x="19.3154%" y="2309" width="61.5853%" height="15" fill="rgb(217,61,36)" fg:x="45006472" fg:w="143498957"/><text x="19.5654%" y="2319.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_bitvector (3,148,453 samples, 1.35%)</title><rect x="79.5495%" y="2293" width="1.3512%" height="15" fill="rgb(206,35,45)" fg:x="185356976" fg:w="3148453"/><text x="79.7995%" y="2303.50"></text></g><g><title>css_bitvector_compiler::BitVector::with_capacity (3,148,453 samples, 1.35%)</title><rect x="79.5495%" y="2277" width="1.3512%" height="15" fill="rgb(217,65,33)" fg:x="185356976" fg:w="3148453"/><text x="79.7995%" y="2287.50"></text></g><g><title>alloc::vec::from_elem (3,148,453 samples, 1.35%)</title><rect x="79.5495%" y="2261" width="1.3512%" height="15" fill="rgb(222,158,48)" fg:x="185356976" fg:w="3148453"/><text x="79.7995%" y="2271.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3,148,453 samples, 1.35%)</title><rect x="79.5495%" y="2245" width="1.3512%" height="15" fill="rgb(254,2,54)" fg:x="185356976" fg:w="3148453"/><text x="79.7995%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (3,148,453 samples, 1.35%)</title><rect x="79.5495%" y="2229" width="1.3512%" height="15" fill="rgb(250,143,38)" fg:x="185356976" fg:w="3148453"/><text x="79.7995%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (3,148,453 samples, 1.35%)</title><rect x="79.5495%" y="2213" width="1.3512%" height="15" fill="rgb(248,25,0)" fg:x="185356976" fg:w="3148453"/><text x="79.7995%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,148,453 samples, 1.35%)</title><rect x="79.5495%" y="2197" width="1.3512%" height="15" fill="rgb(206,152,27)" fg:x="185356976" fg:w="3148453"/><text x="79.7995%" y="2207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (3,148,453 samples, 1.35%)</title><rect x="79.5495%" y="2181" width="1.3512%" height="15" fill="rgb(240,77,30)" fg:x="185356976" fg:w="3148453"/><text x="79.7995%" y="2191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,148,453 samples, 1.35%)</title><rect x="79.5495%" y="2165" width="1.3512%" height="15" fill="rgb(231,5,3)" fg:x="185356976" fg:w="3148453"/><text x="79.7995%" y="2175.50"></text></g><g><title>alloc::alloc::alloc_zeroed (3,148,453 samples, 1.35%)</title><rect x="79.5495%" y="2149" width="1.3512%" height="15" fill="rgb(207,226,32)" fg:x="185356976" fg:w="3148453"/><text x="79.7995%" y="2159.50"></text></g><g><title>__rdl_alloc_zeroed (3,148,453 samples, 1.35%)</title><rect x="79.5495%" y="2133" width="1.3512%" height="15" fill="rgb(222,207,47)" fg:x="185356976" fg:w="3148453"/><text x="79.7995%" y="2143.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (3,148,453 samples, 1.35%)</title><rect x="79.5495%" y="2117" width="1.3512%" height="15" fill="rgb(229,115,45)" fg:x="185356976" fg:w="3148453"/><text x="79.7995%" y="2127.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (443,171 samples, 0.19%)</title><rect x="80.9007%" y="2293" width="0.1902%" height="15" fill="rgb(224,191,6)" fg:x="188505429" fg:w="443171"/><text x="81.1507%" y="2303.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (443,171 samples, 0.19%)</title><rect x="80.9007%" y="2277" width="0.1902%" height="15" fill="rgb(230,227,24)" fg:x="188505429" fg:w="443171"/><text x="81.1507%" y="2287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (443,171 samples, 0.19%)</title><rect x="80.9007%" y="2261" width="0.1902%" height="15" fill="rgb(228,80,19)" fg:x="188505429" fg:w="443171"/><text x="81.1507%" y="2271.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (443,171 samples, 0.19%)</title><rect x="80.9007%" y="2245" width="0.1902%" height="15" fill="rgb(247,229,0)" fg:x="188505429" fg:w="443171"/><text x="81.1507%" y="2255.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (443,171 samples, 0.19%)</title><rect x="80.9007%" y="2229" width="0.1902%" height="15" fill="rgb(237,194,15)" fg:x="188505429" fg:w="443171"/><text x="81.1507%" y="2239.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (443,171 samples, 0.19%)</title><rect x="80.9007%" y="2213" width="0.1902%" height="15" fill="rgb(219,203,20)" fg:x="188505429" fg:w="443171"/><text x="81.1507%" y="2223.50"></text></g><g><title>core::slice::memchr::memchr (443,171 samples, 0.19%)</title><rect x="80.9007%" y="2197" width="0.1902%" height="15" fill="rgb(234,128,8)" fg:x="188505429" fg:w="443171"/><text x="81.1507%" y="2207.50"></text></g><g><title>core::slice::memchr::memchr_aligned (443,171 samples, 0.19%)</title><rect x="80.9007%" y="2181" width="0.1902%" height="15" fill="rgb(248,202,8)" fg:x="188505429" fg:w="443171"/><text x="81.1507%" y="2191.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (443,171 samples, 0.19%)</title><rect x="80.9007%" y="2165" width="0.1902%" height="15" fill="rgb(206,104,37)" fg:x="188505429" fg:w="443171"/><text x="81.1507%" y="2175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,504,647 samples, 1.07%)</title><rect x="81.0909%" y="2213" width="1.0749%" height="15" fill="rgb(223,8,27)" fg:x="188948600" fg:w="2504647"/><text x="81.3409%" y="2223.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (2,504,647 samples, 1.07%)</title><rect x="81.0909%" y="2197" width="1.0749%" height="15" fill="rgb(216,217,28)" fg:x="188948600" fg:w="2504647"/><text x="81.3409%" y="2207.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (2,504,647 samples, 1.07%)</title><rect x="81.0909%" y="2181" width="1.0749%" height="15" fill="rgb(249,199,1)" fg:x="188948600" fg:w="2504647"/><text x="81.3409%" y="2191.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,504,647 samples, 1.07%)</title><rect x="81.0909%" y="2165" width="1.0749%" height="15" fill="rgb(240,85,17)" fg:x="188948600" fg:w="2504647"/><text x="81.3409%" y="2175.50"></text></g><g><title>malloc (2,504,647 samples, 1.07%)</title><rect x="81.0909%" y="2149" width="1.0749%" height="15" fill="rgb(206,108,45)" fg:x="188948600" fg:w="2504647"/><text x="81.3409%" y="2159.50"></text></g><g><title>[libc.so.6] (2,504,647 samples, 1.07%)</title><rect x="81.0909%" y="2133" width="1.0749%" height="15" fill="rgb(245,210,41)" fg:x="188948600" fg:w="2504647"/><text x="81.3409%" y="2143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,166,323 samples, 0.93%)</title><rect x="82.1658%" y="1653" width="0.9297%" height="15" fill="rgb(206,13,37)" fg:x="191453247" fg:w="2166323"/><text x="82.4158%" y="1663.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,166,323 samples, 0.93%)</title><rect x="82.1658%" y="1637" width="0.9297%" height="15" fill="rgb(250,61,18)" fg:x="191453247" fg:w="2166323"/><text x="82.4158%" y="1647.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2,166,323 samples, 0.93%)</title><rect x="82.1658%" y="1621" width="0.9297%" height="15" fill="rgb(235,172,48)" fg:x="191453247" fg:w="2166323"/><text x="82.4158%" y="1631.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,166,323 samples, 0.93%)</title><rect x="82.1658%" y="1605" width="0.9297%" height="15" fill="rgb(249,201,17)" fg:x="191453247" fg:w="2166323"/><text x="82.4158%" y="1615.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,166,323 samples, 0.93%)</title><rect x="82.1658%" y="1589" width="0.9297%" height="15" fill="rgb(219,208,6)" fg:x="191453247" fg:w="2166323"/><text x="82.4158%" y="1599.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2,166,323 samples, 0.93%)</title><rect x="82.1658%" y="1573" width="0.9297%" height="15" fill="rgb(248,31,23)" fg:x="191453247" fg:w="2166323"/><text x="82.4158%" y="1583.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (2,166,323 samples, 0.93%)</title><rect x="82.1658%" y="1557" width="0.9297%" height="15" fill="rgb(245,15,42)" fg:x="191453247" fg:w="2166323"/><text x="82.4158%" y="1567.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (2,166,323 samples, 0.93%)</title><rect x="82.1658%" y="1541" width="0.9297%" height="15" fill="rgb(222,217,39)" fg:x="191453247" fg:w="2166323"/><text x="82.4158%" y="1551.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="437" width="0.7688%" height="15" fill="rgb(210,219,27)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="447.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="421" width="0.7688%" height="15" fill="rgb(252,166,36)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="405" width="0.7688%" height="15" fill="rgb(245,132,34)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="415.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="389" width="0.7688%" height="15" fill="rgb(236,54,3)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="373" width="0.7688%" height="15" fill="rgb(241,173,43)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="357" width="0.7688%" height="15" fill="rgb(215,190,9)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="341" width="0.7688%" height="15" fill="rgb(242,101,16)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="351.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="325" width="0.7688%" height="15" fill="rgb(223,190,21)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="335.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="309" width="0.7688%" height="15" fill="rgb(215,228,25)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="319.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="293" width="0.7688%" height="15" fill="rgb(225,36,22)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="277" width="0.7688%" height="15" fill="rgb(251,106,46)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="261" width="0.7688%" height="15" fill="rgb(208,90,1)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="245" width="0.7688%" height="15" fill="rgb(243,10,4)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="255.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="229" width="0.7688%" height="15" fill="rgb(212,137,27)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="239.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="213" width="0.7688%" height="15" fill="rgb(231,220,49)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="197" width="0.7688%" height="15" fill="rgb(237,96,20)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="207.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="181" width="0.7688%" height="15" fill="rgb(239,229,30)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="165" width="0.7688%" height="15" fill="rgb(219,65,33)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="149" width="0.7688%" height="15" fill="rgb(243,134,7)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="133" width="0.7688%" height="15" fill="rgb(216,177,54)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="143.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="117" width="0.7688%" height="15" fill="rgb(211,160,20)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="127.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="101" width="0.7688%" height="15" fill="rgb(239,85,39)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="111.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="85" width="0.7688%" height="15" fill="rgb(232,125,22)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="95.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="69" width="0.7688%" height="15" fill="rgb(244,57,34)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="79.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="53" width="0.7688%" height="15" fill="rgb(214,203,32)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="63.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,791,316 samples, 0.77%)</title><rect x="83.6099%" y="37" width="0.7688%" height="15" fill="rgb(207,58,43)" fg:x="194818113" fg:w="1791316"/><text x="83.8599%" y="47.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="2101" width="3.2194%" height="15" fill="rgb(215,193,15)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="2111.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="2085" width="3.2194%" height="15" fill="rgb(232,15,44)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="2095.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="2069" width="3.2194%" height="15" fill="rgb(212,3,48)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="2079.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="2053" width="3.2194%" height="15" fill="rgb(218,128,7)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="2063.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="2037" width="3.2194%" height="15" fill="rgb(226,216,39)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="2047.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="2021" width="3.2194%" height="15" fill="rgb(243,47,51)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="2031.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="2005" width="3.2194%" height="15" fill="rgb(241,183,40)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="2015.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1989" width="3.2194%" height="15" fill="rgb(231,217,32)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1999.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1973" width="3.2194%" height="15" fill="rgb(229,61,38)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1983.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1957" width="3.2194%" height="15" fill="rgb(225,210,5)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1967.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1941" width="3.2194%" height="15" fill="rgb(231,79,45)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1951.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1925" width="3.2194%" height="15" fill="rgb(224,100,7)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1935.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1909" width="3.2194%" height="15" fill="rgb(241,198,18)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1919.50">&lt;se..</text></g><g><title>serde::de::MapAccess::next_entry (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1893" width="3.2194%" height="15" fill="rgb(252,97,53)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1903.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1877" width="3.2194%" height="15" fill="rgb(220,88,7)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1887.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1861" width="3.2194%" height="15" fill="rgb(213,176,14)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1871.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1845" width="3.2194%" height="15" fill="rgb(246,73,7)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1855.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1829" width="3.2194%" height="15" fill="rgb(245,64,36)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1839.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1813" width="3.2194%" height="15" fill="rgb(245,80,10)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1823.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1797" width="3.2194%" height="15" fill="rgb(232,107,50)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1807.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1781" width="3.2194%" height="15" fill="rgb(253,3,0)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1791.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1765" width="3.2194%" height="15" fill="rgb(212,99,53)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1775.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1749" width="3.2194%" height="15" fill="rgb(249,111,54)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1759.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1733" width="3.2194%" height="15" fill="rgb(249,55,30)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1743.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1717" width="3.2194%" height="15" fill="rgb(237,47,42)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1727.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1701" width="3.2194%" height="15" fill="rgb(211,20,18)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1711.50">&lt;se..</text></g><g><title>serde::de::MapAccess::next_entry (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1685" width="3.2194%" height="15" fill="rgb(231,203,46)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1695.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (7,501,504 samples, 3.22%)</title><rect x="82.1658%" y="1669" width="3.2194%" height="15" fill="rgb(237,142,3)" fg:x="191453247" fg:w="7501504"/><text x="82.4158%" y="1679.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1653" width="2.2897%" height="15" fill="rgb(241,107,1)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1663.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1637" width="2.2897%" height="15" fill="rgb(229,83,13)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1647.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1621" width="2.2897%" height="15" fill="rgb(241,91,40)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1631.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1605" width="2.2897%" height="15" fill="rgb(225,3,45)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1615.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1589" width="2.2897%" height="15" fill="rgb(244,223,14)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1599.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1573" width="2.2897%" height="15" fill="rgb(224,124,37)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1583.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1557" width="2.2897%" height="15" fill="rgb(251,171,30)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1567.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1541" width="2.2897%" height="15" fill="rgb(236,46,54)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1551.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1525" width="2.2897%" height="15" fill="rgb(245,213,5)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1535.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1509" width="2.2897%" height="15" fill="rgb(230,144,27)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1519.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1493" width="2.2897%" height="15" fill="rgb(220,86,6)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1503.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1477" width="2.2897%" height="15" fill="rgb(240,20,13)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1487.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1461" width="2.2897%" height="15" fill="rgb(217,89,34)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1471.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1445" width="2.2897%" height="15" fill="rgb(229,13,5)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1455.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1429" width="2.2897%" height="15" fill="rgb(244,67,35)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1439.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1413" width="2.2897%" height="15" fill="rgb(221,40,2)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1423.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1397" width="2.2897%" height="15" fill="rgb(237,157,21)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1407.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1381" width="2.2897%" height="15" fill="rgb(222,94,11)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1391.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1365" width="2.2897%" height="15" fill="rgb(249,113,6)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1375.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1349" width="2.2897%" height="15" fill="rgb(238,137,36)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1359.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1333" width="2.2897%" height="15" fill="rgb(210,102,26)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1343.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1317" width="2.2897%" height="15" fill="rgb(218,30,30)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1327.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1301" width="2.2897%" height="15" fill="rgb(214,67,26)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1311.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1285" width="2.2897%" height="15" fill="rgb(251,9,53)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1295.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1269" width="2.2897%" height="15" fill="rgb(228,204,25)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1279.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1253" width="2.2897%" height="15" fill="rgb(207,153,8)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1263.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1237" width="2.2897%" height="15" fill="rgb(242,9,16)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1247.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1221" width="2.2897%" height="15" fill="rgb(217,211,10)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1231.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1205" width="2.2897%" height="15" fill="rgb(219,228,52)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1215.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1189" width="2.2897%" height="15" fill="rgb(231,92,29)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1199.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1173" width="2.2897%" height="15" fill="rgb(232,8,23)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1183.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1157" width="2.2897%" height="15" fill="rgb(216,211,34)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1167.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1141" width="2.2897%" height="15" fill="rgb(236,151,0)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1151.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1125" width="2.2897%" height="15" fill="rgb(209,168,3)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1135.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1109" width="2.2897%" height="15" fill="rgb(208,129,28)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1119.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1093" width="2.2897%" height="15" fill="rgb(229,78,22)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1103.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1077" width="2.2897%" height="15" fill="rgb(228,187,13)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1087.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1061" width="2.2897%" height="15" fill="rgb(240,119,24)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1071.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1045" width="2.2897%" height="15" fill="rgb(209,194,42)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1055.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1029" width="2.2897%" height="15" fill="rgb(247,200,46)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1039.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="1013" width="2.2897%" height="15" fill="rgb(218,76,16)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1023.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="997" width="2.2897%" height="15" fill="rgb(225,21,48)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="1007.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="981" width="2.2897%" height="15" fill="rgb(239,223,50)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="991.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="965" width="2.2897%" height="15" fill="rgb(244,45,21)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="975.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="949" width="2.2897%" height="15" fill="rgb(232,33,43)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="959.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="933" width="2.2897%" height="15" fill="rgb(209,8,3)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="943.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="917" width="2.2897%" height="15" fill="rgb(214,25,53)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="927.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="901" width="2.2897%" height="15" fill="rgb(254,186,54)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="911.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="885" width="2.2897%" height="15" fill="rgb(208,174,49)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="895.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="869" width="2.2897%" height="15" fill="rgb(233,191,51)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="879.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="853" width="2.2897%" height="15" fill="rgb(222,134,10)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="863.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="837" width="2.2897%" height="15" fill="rgb(230,226,20)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="847.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="821" width="2.2897%" height="15" fill="rgb(251,111,25)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="831.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="805" width="2.2897%" height="15" fill="rgb(224,40,46)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="815.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="789" width="2.2897%" height="15" fill="rgb(236,108,47)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="799.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,335,181 samples, 2.29%)</title><rect x="83.0955%" y="773" width="2.2897%" height="15" fill="rgb(234,93,0)" fg:x="193619570" fg:w="5335181"/><text x="83.3455%" y="783.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="757" width="1.7753%" height="15" fill="rgb(224,213,32)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="767.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="741" width="1.7753%" height="15" fill="rgb(251,11,48)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="751.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="725" width="1.7753%" height="15" fill="rgb(236,173,5)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="735.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="709" width="1.7753%" height="15" fill="rgb(230,95,12)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="719.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="693" width="1.7753%" height="15" fill="rgb(232,209,1)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="703.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="677" width="1.7753%" height="15" fill="rgb(232,6,1)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="687.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="661" width="1.7753%" height="15" fill="rgb(210,224,50)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="671.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="645" width="1.7753%" height="15" fill="rgb(228,127,35)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="655.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="629" width="1.7753%" height="15" fill="rgb(245,102,45)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="639.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="613" width="1.7753%" height="15" fill="rgb(214,1,49)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="623.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="597" width="1.7753%" height="15" fill="rgb(226,163,40)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="607.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="581" width="1.7753%" height="15" fill="rgb(239,212,28)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="591.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="565" width="1.7753%" height="15" fill="rgb(220,20,13)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="575.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="549" width="1.7753%" height="15" fill="rgb(210,164,35)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="559.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="533" width="1.7753%" height="15" fill="rgb(248,109,41)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="543.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="517" width="1.7753%" height="15" fill="rgb(238,23,50)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="527.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="501" width="1.7753%" height="15" fill="rgb(211,48,49)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="511.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="485" width="1.7753%" height="15" fill="rgb(223,36,21)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="495.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="469" width="1.7753%" height="15" fill="rgb(207,123,46)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="479.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,136,638 samples, 1.78%)</title><rect x="83.6099%" y="453" width="1.7753%" height="15" fill="rgb(240,218,32)" fg:x="194818113" fg:w="4136638"/><text x="83.8599%" y="463.50">&lt;..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,345,322 samples, 1.01%)</title><rect x="84.3787%" y="437" width="1.0065%" height="15" fill="rgb(252,5,43)" fg:x="196609429" fg:w="2345322"/><text x="84.6287%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,345,322 samples, 1.01%)</title><rect x="84.3787%" y="421" width="1.0065%" height="15" fill="rgb(252,84,19)" fg:x="196609429" fg:w="2345322"/><text x="84.6287%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (2,345,322 samples, 1.01%)</title><rect x="84.3787%" y="405" width="1.0065%" height="15" fill="rgb(243,152,39)" fg:x="196609429" fg:w="2345322"/><text x="84.6287%" y="415.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2,345,322 samples, 1.01%)</title><rect x="84.3787%" y="389" width="1.0065%" height="15" fill="rgb(234,160,15)" fg:x="196609429" fg:w="2345322"/><text x="84.6287%" y="399.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2,345,322 samples, 1.01%)</title><rect x="84.3787%" y="373" width="1.0065%" height="15" fill="rgb(237,34,20)" fg:x="196609429" fg:w="2345322"/><text x="84.6287%" y="383.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2,345,322 samples, 1.01%)</title><rect x="84.3787%" y="357" width="1.0065%" height="15" fill="rgb(229,97,13)" fg:x="196609429" fg:w="2345322"/><text x="84.6287%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (2,345,322 samples, 1.01%)</title><rect x="84.3787%" y="341" width="1.0065%" height="15" fill="rgb(234,71,50)" fg:x="196609429" fg:w="2345322"/><text x="84.6287%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (2,345,322 samples, 1.01%)</title><rect x="84.3787%" y="325" width="1.0065%" height="15" fill="rgb(253,155,4)" fg:x="196609429" fg:w="2345322"/><text x="84.6287%" y="335.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (2,345,322 samples, 1.01%)</title><rect x="84.3787%" y="309" width="1.0065%" height="15" fill="rgb(222,185,37)" fg:x="196609429" fg:w="2345322"/><text x="84.6287%" y="319.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (2,345,322 samples, 1.01%)</title><rect x="84.3787%" y="293" width="1.0065%" height="15" fill="rgb(251,177,13)" fg:x="196609429" fg:w="2345322"/><text x="84.6287%" y="303.50"></text></g><g><title>[libc.so.6] (2,345,322 samples, 1.01%)</title><rect x="84.3787%" y="277" width="1.0065%" height="15" fill="rgb(250,179,40)" fg:x="196609429" fg:w="2345322"/><text x="84.6287%" y="287.50"></text></g><g><title>serde_json::de::from_str (14,845,553 samples, 6.37%)</title><rect x="81.0909%" y="2293" width="6.3713%" height="15" fill="rgb(242,44,2)" fg:x="188948600" fg:w="14845553"/><text x="81.3409%" y="2303.50">serde_js..</text></g><g><title>serde_json::de::from_trait (14,845,553 samples, 6.37%)</title><rect x="81.0909%" y="2277" width="6.3713%" height="15" fill="rgb(216,177,13)" fg:x="188948600" fg:w="14845553"/><text x="81.3409%" y="2287.50">serde_js..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,845,553 samples, 6.37%)</title><rect x="81.0909%" y="2261" width="6.3713%" height="15" fill="rgb(216,106,43)" fg:x="188948600" fg:w="14845553"/><text x="81.3409%" y="2271.50">serde_js..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,845,553 samples, 6.37%)</title><rect x="81.0909%" y="2245" width="6.3713%" height="15" fill="rgb(216,183,2)" fg:x="188948600" fg:w="14845553"/><text x="81.3409%" y="2255.50">&lt;&amp;mut se..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14,845,553 samples, 6.37%)</title><rect x="81.0909%" y="2229" width="6.3713%" height="15" fill="rgb(249,75,3)" fg:x="188948600" fg:w="14845553"/><text x="81.3409%" y="2239.50">&lt;serde_j..</text></g><g><title>serde::de::MapAccess::next_entry (12,340,906 samples, 5.30%)</title><rect x="82.1658%" y="2213" width="5.2963%" height="15" fill="rgb(219,67,39)" fg:x="191453247" fg:w="12340906"/><text x="82.4158%" y="2223.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,340,906 samples, 5.30%)</title><rect x="82.1658%" y="2197" width="5.2963%" height="15" fill="rgb(253,228,2)" fg:x="191453247" fg:w="12340906"/><text x="82.4158%" y="2207.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,340,906 samples, 5.30%)</title><rect x="82.1658%" y="2181" width="5.2963%" height="15" fill="rgb(235,138,27)" fg:x="191453247" fg:w="12340906"/><text x="82.4158%" y="2191.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,340,906 samples, 5.30%)</title><rect x="82.1658%" y="2165" width="5.2963%" height="15" fill="rgb(236,97,51)" fg:x="191453247" fg:w="12340906"/><text x="82.4158%" y="2175.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,340,906 samples, 5.30%)</title><rect x="82.1658%" y="2149" width="5.2963%" height="15" fill="rgb(240,80,30)" fg:x="191453247" fg:w="12340906"/><text x="82.4158%" y="2159.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,340,906 samples, 5.30%)</title><rect x="82.1658%" y="2133" width="5.2963%" height="15" fill="rgb(230,178,19)" fg:x="191453247" fg:w="12340906"/><text x="82.4158%" y="2143.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,340,906 samples, 5.30%)</title><rect x="82.1658%" y="2117" width="5.2963%" height="15" fill="rgb(210,190,27)" fg:x="191453247" fg:w="12340906"/><text x="82.4158%" y="2127.50">&lt;serde..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (4,839,402 samples, 2.08%)</title><rect x="85.3852%" y="2101" width="2.0769%" height="15" fill="rgb(222,107,31)" fg:x="198954751" fg:w="4839402"/><text x="85.6352%" y="2111.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4,839,402 samples, 2.08%)</title><rect x="85.3852%" y="2085" width="2.0769%" height="15" fill="rgb(216,127,34)" fg:x="198954751" fg:w="4839402"/><text x="85.6352%" y="2095.50">a..</text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4,839,402 samples, 2.08%)</title><rect x="85.3852%" y="2069" width="2.0769%" height="15" fill="rgb(234,116,52)" fg:x="198954751" fg:w="4839402"/><text x="85.6352%" y="2079.50">a..</text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (4,839,402 samples, 2.08%)</title><rect x="85.3852%" y="2053" width="2.0769%" height="15" fill="rgb(222,124,15)" fg:x="198954751" fg:w="4839402"/><text x="85.6352%" y="2063.50">a..</text></g><g><title>benchmark::parse_web_layout_trace (15,790,228 samples, 6.78%)</title><rect x="80.9007%" y="2309" width="6.7767%" height="15" fill="rgb(231,179,28)" fg:x="188505429" fg:w="15790228"/><text x="81.1507%" y="2319.50">benchmark..</text></g><g><title>std::fs::read_to_string (501,504 samples, 0.22%)</title><rect x="87.4622%" y="2293" width="0.2152%" height="15" fill="rgb(226,93,45)" fg:x="203794153" fg:w="501504"/><text x="87.7122%" y="2303.50"></text></g><g><title>std::fs::read_to_string::inner (501,504 samples, 0.22%)</title><rect x="87.4622%" y="2277" width="0.2152%" height="15" fill="rgb(215,8,51)" fg:x="203794153" fg:w="501504"/><text x="87.7122%" y="2287.50"></text></g><g><title>std::io::default_read_to_string (501,504 samples, 0.22%)</title><rect x="87.4622%" y="2261" width="0.2152%" height="15" fill="rgb(223,106,5)" fg:x="203794153" fg:w="501504"/><text x="87.7122%" y="2271.50"></text></g><g><title>std::io::append_to_string (501,504 samples, 0.22%)</title><rect x="87.4622%" y="2245" width="0.2152%" height="15" fill="rgb(250,191,5)" fg:x="203794153" fg:w="501504"/><text x="87.7122%" y="2255.50"></text></g><g><title>core::str::converts::from_utf8 (501,504 samples, 0.22%)</title><rect x="87.4622%" y="2229" width="0.2152%" height="15" fill="rgb(242,132,44)" fg:x="203794153" fg:w="501504"/><text x="87.7122%" y="2239.50"></text></g><g><title>core::str::validations::run_utf8_validation (501,504 samples, 0.22%)</title><rect x="87.4622%" y="2213" width="0.2152%" height="15" fill="rgb(251,152,29)" fg:x="203794153" fg:w="501504"/><text x="87.7122%" y="2223.50"></text></g><g><title>cfree (3,013,628 samples, 1.29%)</title><rect x="87.6774%" y="2069" width="1.2934%" height="15" fill="rgb(218,179,5)" fg:x="204295657" fg:w="3013628"/><text x="87.9274%" y="2079.50"></text></g><g><title>[libc.so.6] (3,013,628 samples, 1.29%)</title><rect x="87.6774%" y="2053" width="1.2934%" height="15" fill="rgb(227,67,19)" fg:x="204295657" fg:w="3013628"/><text x="87.9274%" y="2063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,036,297 samples, 2.59%)</title><rect x="87.6774%" y="2293" width="2.5906%" height="15" fill="rgb(233,119,31)" fg:x="204295657" fg:w="6036297"/><text x="87.9274%" y="2303.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (6,036,297 samples, 2.59%)</title><rect x="87.6774%" y="2277" width="2.5906%" height="15" fill="rgb(241,120,22)" fg:x="204295657" fg:w="6036297"/><text x="87.9274%" y="2287.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (6,036,297 samples, 2.59%)</title><rect x="87.6774%" y="2261" width="2.5906%" height="15" fill="rgb(224,102,30)" fg:x="204295657" fg:w="6036297"/><text x="87.9274%" y="2271.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,036,297 samples, 2.59%)</title><rect x="87.6774%" y="2245" width="2.5906%" height="15" fill="rgb(210,164,37)" fg:x="204295657" fg:w="6036297"/><text x="87.9274%" y="2255.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,036,297 samples, 2.59%)</title><rect x="87.6774%" y="2229" width="2.5906%" height="15" fill="rgb(226,191,16)" fg:x="204295657" fg:w="6036297"/><text x="87.9274%" y="2239.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,036,297 samples, 2.59%)</title><rect x="87.6774%" y="2213" width="2.5906%" height="15" fill="rgb(214,40,45)" fg:x="204295657" fg:w="6036297"/><text x="87.9274%" y="2223.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,036,297 samples, 2.59%)</title><rect x="87.6774%" y="2197" width="2.5906%" height="15" fill="rgb(244,29,26)" fg:x="204295657" fg:w="6036297"/><text x="87.9274%" y="2207.50">&lt;a..</text></g><g><title>core::mem::drop (6,036,297 samples, 2.59%)</title><rect x="87.6774%" y="2181" width="2.5906%" height="15" fill="rgb(216,16,5)" fg:x="204295657" fg:w="6036297"/><text x="87.9274%" y="2191.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,036,297 samples, 2.59%)</title><rect x="87.6774%" y="2165" width="2.5906%" height="15" fill="rgb(249,76,35)" fg:x="204295657" fg:w="6036297"/><text x="87.9274%" y="2175.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,036,297 samples, 2.59%)</title><rect x="87.6774%" y="2149" width="2.5906%" height="15" fill="rgb(207,11,44)" fg:x="204295657" fg:w="6036297"/><text x="87.9274%" y="2159.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,036,297 samples, 2.59%)</title><rect x="87.6774%" y="2133" width="2.5906%" height="15" fill="rgb(228,190,49)" fg:x="204295657" fg:w="6036297"/><text x="87.9274%" y="2143.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,036,297 samples, 2.59%)</title><rect x="87.6774%" y="2117" width="2.5906%" height="15" fill="rgb(214,173,12)" fg:x="204295657" fg:w="6036297"/><text x="87.9274%" y="2127.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,036,297 samples, 2.59%)</title><rect x="87.6774%" y="2101" width="2.5906%" height="15" fill="rgb(218,26,35)" fg:x="204295657" fg:w="6036297"/><text x="87.9274%" y="2111.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,036,297 samples, 2.59%)</title><rect x="87.6774%" y="2085" width="2.5906%" height="15" fill="rgb(220,200,19)" fg:x="204295657" fg:w="6036297"/><text x="87.9274%" y="2095.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="2069" width="1.2972%" height="15" fill="rgb(239,95,49)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="2053" width="1.2972%" height="15" fill="rgb(235,85,53)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="2037" width="1.2972%" height="15" fill="rgb(233,133,31)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="2047.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="2021" width="1.2972%" height="15" fill="rgb(218,25,20)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="2031.50"></text></g><g><title>core::mem::drop (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="2005" width="1.2972%" height="15" fill="rgb(252,210,38)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="1989" width="1.2972%" height="15" fill="rgb(242,134,21)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="1999.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="1973" width="1.2972%" height="15" fill="rgb(213,28,48)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="1957" width="1.2972%" height="15" fill="rgb(250,196,2)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="1967.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="1941" width="1.2972%" height="15" fill="rgb(227,5,17)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="1925" width="1.2972%" height="15" fill="rgb(221,226,24)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="1909" width="1.2972%" height="15" fill="rgb(211,5,48)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="1893" width="1.2972%" height="15" fill="rgb(219,150,6)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="1903.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="1877" width="1.2972%" height="15" fill="rgb(251,46,16)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="1861" width="1.2972%" height="15" fill="rgb(220,204,40)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="1845" width="1.2972%" height="15" fill="rgb(211,85,2)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="1855.50"></text></g><g><title>alloc::alloc::dealloc (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="1829" width="1.2972%" height="15" fill="rgb(229,17,7)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="1839.50"></text></g><g><title>cfree (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="1813" width="1.2972%" height="15" fill="rgb(239,72,28)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="1823.50"></text></g><g><title>[libc.so.6] (3,022,669 samples, 1.30%)</title><rect x="88.9707%" y="1797" width="1.2972%" height="15" fill="rgb(230,47,54)" fg:x="207309285" fg:w="3022669"/><text x="89.2207%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (12,444,747 samples, 5.34%)</title><rect x="87.6774%" y="2309" width="5.3409%" height="15" fill="rgb(214,50,8)" fg:x="204295657" fg:w="12444747"/><text x="87.9274%" y="2319.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (6,408,450 samples, 2.75%)</title><rect x="90.2680%" y="2293" width="2.7503%" height="15" fill="rgb(216,198,43)" fg:x="210331954" fg:w="6408450"/><text x="90.5180%" y="2303.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,408,450 samples, 2.75%)</title><rect x="90.2680%" y="2277" width="2.7503%" height="15" fill="rgb(234,20,35)" fg:x="210331954" fg:w="6408450"/><text x="90.5180%" y="2287.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,408,450 samples, 2.75%)</title><rect x="90.2680%" y="2261" width="2.7503%" height="15" fill="rgb(254,45,19)" fg:x="210331954" fg:w="6408450"/><text x="90.5180%" y="2271.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,408,450 samples, 2.75%)</title><rect x="90.2680%" y="2245" width="2.7503%" height="15" fill="rgb(219,14,44)" fg:x="210331954" fg:w="6408450"/><text x="90.5180%" y="2255.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (6,408,450 samples, 2.75%)</title><rect x="90.2680%" y="2229" width="2.7503%" height="15" fill="rgb(217,220,26)" fg:x="210331954" fg:w="6408450"/><text x="90.5180%" y="2239.50">al..</text></g><g><title>cfree (6,408,450 samples, 2.75%)</title><rect x="90.2680%" y="2213" width="2.7503%" height="15" fill="rgb(213,158,28)" fg:x="210331954" fg:w="6408450"/><text x="90.5180%" y="2223.50">cf..</text></g><g><title>[libc.so.6] (6,408,450 samples, 2.75%)</title><rect x="90.2680%" y="2197" width="2.7503%" height="15" fill="rgb(252,51,52)" fg:x="210331954" fg:w="6408450"/><text x="90.5180%" y="2207.50">[l..</text></g><g><title>[libc.so.6] (6,408,450 samples, 2.75%)</title><rect x="90.2680%" y="2181" width="2.7503%" height="15" fill="rgb(246,89,16)" fg:x="210331954" fg:w="6408450"/><text x="90.5180%" y="2191.50">[l..</text></g><g><title>[libc.so.6] (3,286,611 samples, 1.41%)</title><rect x="91.6078%" y="2165" width="1.4105%" height="15" fill="rgb(216,158,49)" fg:x="213453793" fg:w="3286611"/><text x="91.8578%" y="2175.50"></text></g><g><title>std::panic::catch_unwind (202,736,894 samples, 87.01%)</title><rect x="7.4290%" y="2453" width="87.0084%" height="15" fill="rgb(236,107,19)" fg:x="17310230" fg:w="202736894"/><text x="7.6790%" y="2463.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (202,736,894 samples, 87.01%)</title><rect x="7.4290%" y="2437" width="87.0084%" height="15" fill="rgb(228,185,30)" fg:x="17310230" fg:w="202736894"/><text x="7.6790%" y="2447.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (202,736,894 samples, 87.01%)</title><rect x="7.4290%" y="2421" width="87.0084%" height="15" fill="rgb(246,134,8)" fg:x="17310230" fg:w="202736894"/><text x="7.6790%" y="2431.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (202,736,894 samples, 87.01%)</title><rect x="7.4290%" y="2405" width="87.0084%" height="15" fill="rgb(214,143,50)" fg:x="17310230" fg:w="202736894"/><text x="7.6790%" y="2415.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (202,736,894 samples, 87.01%)</title><rect x="7.4290%" y="2389" width="87.0084%" height="15" fill="rgb(228,75,8)" fg:x="17310230" fg:w="202736894"/><text x="7.6790%" y="2399.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (202,736,894 samples, 87.01%)</title><rect x="7.4290%" y="2373" width="87.0084%" height="15" fill="rgb(207,175,4)" fg:x="17310230" fg:w="202736894"/><text x="7.6790%" y="2383.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (202,736,894 samples, 87.01%)</title><rect x="7.4290%" y="2357" width="87.0084%" height="15" fill="rgb(205,108,24)" fg:x="17310230" fg:w="202736894"/><text x="7.6790%" y="2367.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (202,736,894 samples, 87.01%)</title><rect x="7.4290%" y="2341" width="87.0084%" height="15" fill="rgb(244,120,49)" fg:x="17310230" fg:w="202736894"/><text x="7.6790%" y="2351.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (202,736,894 samples, 87.01%)</title><rect x="7.4290%" y="2325" width="87.0084%" height="15" fill="rgb(223,47,38)" fg:x="17310230" fg:w="202736894"/><text x="7.6790%" y="2335.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2309" width="1.4191%" height="15" fill="rgb(229,179,11)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2293" width="1.4191%" height="15" fill="rgb(231,122,1)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2277" width="1.4191%" height="15" fill="rgb(245,119,9)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2261" width="1.4191%" height="15" fill="rgb(241,163,25)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2245" width="1.4191%" height="15" fill="rgb(217,214,3)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2229" width="1.4191%" height="15" fill="rgb(240,86,28)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2213" width="1.4191%" height="15" fill="rgb(215,47,9)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2197" width="1.4191%" height="15" fill="rgb(252,25,45)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2181" width="1.4191%" height="15" fill="rgb(251,164,9)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2165" width="1.4191%" height="15" fill="rgb(233,194,0)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2149" width="1.4191%" height="15" fill="rgb(249,111,24)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2133" width="1.4191%" height="15" fill="rgb(250,223,3)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2117" width="1.4191%" height="15" fill="rgb(236,178,37)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2101" width="1.4191%" height="15" fill="rgb(241,158,50)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2085" width="1.4191%" height="15" fill="rgb(213,121,41)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2069" width="1.4191%" height="15" fill="rgb(240,92,3)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2053" width="1.4191%" height="15" fill="rgb(205,123,3)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2037" width="1.4191%" height="15" fill="rgb(205,97,47)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2047.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2021" width="1.4191%" height="15" fill="rgb(247,152,14)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="2005" width="1.4191%" height="15" fill="rgb(248,195,53)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="1989" width="1.4191%" height="15" fill="rgb(226,201,16)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="1973" width="1.4191%" height="15" fill="rgb(205,98,0)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="1957" width="1.4191%" height="15" fill="rgb(214,191,48)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="1967.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="1941" width="1.4191%" height="15" fill="rgb(237,112,39)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="1925" width="1.4191%" height="15" fill="rgb(247,203,27)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="1909" width="1.4191%" height="15" fill="rgb(235,124,28)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="1919.50"></text></g><g><title>alloc::alloc::dealloc (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="1893" width="1.4191%" height="15" fill="rgb(208,207,46)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="1903.50"></text></g><g><title>cfree (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="1877" width="1.4191%" height="15" fill="rgb(234,176,4)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="1887.50"></text></g><g><title>[libc.so.6] (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="1861" width="1.4191%" height="15" fill="rgb(230,133,28)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="1871.50"></text></g><g><title>[libc.so.6] (3,306,720 samples, 1.42%)</title><rect x="93.0183%" y="1845" width="1.4191%" height="15" fill="rgb(211,137,40)" fg:x="216740404" fg:w="3306720"/><text x="93.2683%" y="1855.50"></text></g><g><title>_start (203,238,398 samples, 87.22%)</title><rect x="7.4290%" y="2597" width="87.2236%" height="15" fill="rgb(254,35,13)" fg:x="17310230" fg:w="203238398"/><text x="7.6790%" y="2607.50">_start</text></g><g><title>__libc_start_main (203,238,398 samples, 87.22%)</title><rect x="7.4290%" y="2581" width="87.2236%" height="15" fill="rgb(225,49,51)" fg:x="17310230" fg:w="203238398"/><text x="7.6790%" y="2591.50">__libc_start_main</text></g><g><title>[libc.so.6] (203,238,398 samples, 87.22%)</title><rect x="7.4290%" y="2565" width="87.2236%" height="15" fill="rgb(251,10,15)" fg:x="17310230" fg:w="203238398"/><text x="7.6790%" y="2575.50">[libc.so.6]</text></g><g><title>main (203,238,398 samples, 87.22%)</title><rect x="7.4290%" y="2549" width="87.2236%" height="15" fill="rgb(228,207,15)" fg:x="17310230" fg:w="203238398"/><text x="7.6790%" y="2559.50">main</text></g><g><title>std::rt::lang_start_internal (203,238,398 samples, 87.22%)</title><rect x="7.4290%" y="2533" width="87.2236%" height="15" fill="rgb(241,99,19)" fg:x="17310230" fg:w="203238398"/><text x="7.6790%" y="2543.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (203,238,398 samples, 87.22%)</title><rect x="7.4290%" y="2517" width="87.2236%" height="15" fill="rgb(207,104,49)" fg:x="17310230" fg:w="203238398"/><text x="7.6790%" y="2527.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (203,238,398 samples, 87.22%)</title><rect x="7.4290%" y="2501" width="87.2236%" height="15" fill="rgb(234,99,18)" fg:x="17310230" fg:w="203238398"/><text x="7.6790%" y="2511.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (203,238,398 samples, 87.22%)</title><rect x="7.4290%" y="2485" width="87.2236%" height="15" fill="rgb(213,191,49)" fg:x="17310230" fg:w="203238398"/><text x="7.6790%" y="2495.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (203,238,398 samples, 87.22%)</title><rect x="7.4290%" y="2469" width="87.2236%" height="15" fill="rgb(210,226,19)" fg:x="17310230" fg:w="203238398"/><text x="7.6790%" y="2479.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::rt::init (501,504 samples, 0.22%)</title><rect x="94.4374%" y="2453" width="0.2152%" height="15" fill="rgb(229,97,18)" fg:x="220047124" fg:w="501504"/><text x="94.6874%" y="2463.50"></text></g><g><title>std::sys::pal::unix::init (501,504 samples, 0.22%)</title><rect x="94.4374%" y="2437" width="0.2152%" height="15" fill="rgb(211,167,15)" fg:x="220047124" fg:w="501504"/><text x="94.6874%" y="2447.50"></text></g><g><title>std::sys::pal::unix::init::sanitize_standard_fds (501,504 samples, 0.22%)</title><rect x="94.4374%" y="2421" width="0.2152%" height="15" fill="rgb(210,169,34)" fg:x="220047124" fg:w="501504"/><text x="94.6874%" y="2431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3,108,091 samples, 1.33%)</title><rect x="94.6527%" y="2597" width="1.3339%" height="15" fill="rgb(241,121,31)" fg:x="220548628" fg:w="3108091"/><text x="94.9027%" y="2607.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,249,815 samples, 2.68%)</title><rect x="95.9866%" y="2597" width="2.6822%" height="15" fill="rgb(232,40,11)" fg:x="223656719" fg:w="6249815"/><text x="96.2366%" y="2607.50">cs..</text></g><g><title>serde_json::read::parse_escape (713,469 samples, 0.31%)</title><rect x="98.6688%" y="2597" width="0.3062%" height="15" fill="rgb(205,86,26)" fg:x="229906534" fg:w="713469"/><text x="98.9188%" y="2607.50"></text></g><g><title>all (233,008,376 samples, 100%)</title><rect x="0.0000%" y="2629" width="100.0000%" height="15" fill="rgb(231,126,28)" fg:x="0" fg:w="233008376"/><text x="0.2500%" y="2639.50"></text></g><g><title>benchmark (233,008,376 samples, 100.00%)</title><rect x="0.0000%" y="2613" width="100.0000%" height="15" fill="rgb(219,221,18)" fg:x="0" fg:w="233008376"/><text x="0.2500%" y="2623.50">benchmark</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,388,373 samples, 1.03%)</title><rect x="98.9750%" y="2597" width="1.0250%" height="15" fill="rgb(211,40,0)" fg:x="230620003" fg:w="2388373"/><text x="99.2250%" y="2607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,388,373 samples, 1.03%)</title><rect x="98.9750%" y="2581" width="1.0250%" height="15" fill="rgb(239,85,43)" fg:x="230620003" fg:w="2388373"/><text x="99.2250%" y="2591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,388,373 samples, 1.03%)</title><rect x="98.9750%" y="2565" width="1.0250%" height="15" fill="rgb(231,55,21)" fg:x="230620003" fg:w="2388373"/><text x="99.2250%" y="2575.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,388,373 samples, 1.03%)</title><rect x="98.9750%" y="2549" width="1.0250%" height="15" fill="rgb(225,184,43)" fg:x="230620003" fg:w="2388373"/><text x="99.2250%" y="2559.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,388,373 samples, 1.03%)</title><rect x="98.9750%" y="2533" width="1.0250%" height="15" fill="rgb(251,158,41)" fg:x="230620003" fg:w="2388373"/><text x="99.2250%" y="2543.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,388,373 samples, 1.03%)</title><rect x="98.9750%" y="2517" width="1.0250%" height="15" fill="rgb(234,159,37)" fg:x="230620003" fg:w="2388373"/><text x="99.2250%" y="2527.50"></text></g></svg></svg>