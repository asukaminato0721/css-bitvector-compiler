<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="3494" onload="init(evt)" viewBox="0 0 1200 3494" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="3494" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="3477.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="3477.00"> </text><svg id="frames" x="10" width="1180" total_samples="121700553"><g><title>[libc.so.6] (3,260,768 samples, 2.68%)</title><rect x="0.0000%" y="3413" width="2.6793%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3260768"/><text x="0.2500%" y="3423.50">[l..</text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (3,232,567 samples, 2.66%)</title><rect x="2.6793%" y="3397" width="2.6562%" height="15" fill="rgb(217,0,24)" fg:x="3260768" fg:w="3232567"/><text x="2.9293%" y="3407.50">&lt;s..</text></g><g><title>[libc.so.6] (2,910,880 samples, 2.39%)</title><rect x="5.3355%" y="3397" width="2.3918%" height="15" fill="rgb(221,193,54)" fg:x="6493335" fg:w="2910880"/><text x="5.5855%" y="3407.50">[l..</text></g><g><title>[unknown] (7,157,023 samples, 5.88%)</title><rect x="2.6793%" y="3413" width="5.8808%" height="15" fill="rgb(248,212,6)" fg:x="3260768" fg:w="7157023"/><text x="2.9293%" y="3423.50">[unknow..</text></g><g><title>alloc::raw_vec::finish_grow (1,013,576 samples, 0.83%)</title><rect x="7.7273%" y="3397" width="0.8328%" height="15" fill="rgb(208,68,35)" fg:x="9404215" fg:w="1013576"/><text x="7.9773%" y="3407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,013,576 samples, 0.83%)</title><rect x="7.7273%" y="3381" width="0.8328%" height="15" fill="rgb(232,128,0)" fg:x="9404215" fg:w="1013576"/><text x="7.9773%" y="3391.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,013,576 samples, 0.83%)</title><rect x="7.7273%" y="3365" width="0.8328%" height="15" fill="rgb(207,160,47)" fg:x="9404215" fg:w="1013576"/><text x="7.9773%" y="3375.50"></text></g><g><title>alloc::alloc::realloc (1,013,576 samples, 0.83%)</title><rect x="7.7273%" y="3349" width="0.8328%" height="15" fill="rgb(228,23,34)" fg:x="9404215" fg:w="1013576"/><text x="7.9773%" y="3359.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,894,385 samples, 2.38%)</title><rect x="8.5602%" y="2245" width="2.3783%" height="15" fill="rgb(218,30,26)" fg:x="10417791" fg:w="2894385"/><text x="8.8102%" y="2255.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,894,385 samples, 2.38%)</title><rect x="8.5602%" y="2229" width="2.3783%" height="15" fill="rgb(220,122,19)" fg:x="10417791" fg:w="2894385"/><text x="8.8102%" y="2239.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,894,385 samples, 2.38%)</title><rect x="8.5602%" y="2213" width="2.3783%" height="15" fill="rgb(250,228,42)" fg:x="10417791" fg:w="2894385"/><text x="8.8102%" y="2223.50">al..</text></g><g><title>alloc::slice::hack::to_vec (2,894,385 samples, 2.38%)</title><rect x="8.5602%" y="2197" width="2.3783%" height="15" fill="rgb(240,193,28)" fg:x="10417791" fg:w="2894385"/><text x="8.8102%" y="2207.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,894,385 samples, 2.38%)</title><rect x="8.5602%" y="2181" width="2.3783%" height="15" fill="rgb(216,20,37)" fg:x="10417791" fg:w="2894385"/><text x="8.8102%" y="2191.50">&lt;T..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,894,385 samples, 2.38%)</title><rect x="8.5602%" y="2165" width="2.3783%" height="15" fill="rgb(206,188,39)" fg:x="10417791" fg:w="2894385"/><text x="8.8102%" y="2175.50">co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (2,894,385 samples, 2.38%)</title><rect x="8.5602%" y="2149" width="2.3783%" height="15" fill="rgb(217,207,13)" fg:x="10417791" fg:w="2894385"/><text x="8.8102%" y="2159.50">co..</text></g><g><title>[libc.so.6] (2,894,385 samples, 2.38%)</title><rect x="8.5602%" y="2133" width="2.3783%" height="15" fill="rgb(231,73,38)" fg:x="10417791" fg:w="2894385"/><text x="8.8102%" y="2143.50">[l..</text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="3125" width="4.6620%" height="15" fill="rgb(225,20,46)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="3135.50">&lt;benc..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="3109" width="4.6620%" height="15" fill="rgb(210,31,41)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="3119.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="3093" width="4.6620%" height="15" fill="rgb(221,200,47)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="3103.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="3077" width="4.6620%" height="15" fill="rgb(226,26,5)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="3087.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="3061" width="4.6620%" height="15" fill="rgb(249,33,26)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="3071.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="3045" width="4.6620%" height="15" fill="rgb(235,183,28)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="3055.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="3029" width="4.6620%" height="15" fill="rgb(221,5,38)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="3039.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="3013" width="4.6620%" height="15" fill="rgb(247,18,42)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="3023.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2997" width="4.6620%" height="15" fill="rgb(241,131,45)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="3007.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2981" width="4.6620%" height="15" fill="rgb(249,31,29)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2991.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2965" width="4.6620%" height="15" fill="rgb(225,111,53)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2975.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2949" width="4.6620%" height="15" fill="rgb(238,160,17)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2959.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2933" width="4.6620%" height="15" fill="rgb(214,148,48)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2943.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2917" width="4.6620%" height="15" fill="rgb(232,36,49)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2927.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2901" width="4.6620%" height="15" fill="rgb(209,103,24)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2911.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2885" width="4.6620%" height="15" fill="rgb(229,88,8)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2895.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2869" width="4.6620%" height="15" fill="rgb(213,181,19)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2879.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2853" width="4.6620%" height="15" fill="rgb(254,191,54)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2863.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2837" width="4.6620%" height="15" fill="rgb(241,83,37)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2847.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2821" width="4.6620%" height="15" fill="rgb(233,36,39)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2831.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2805" width="4.6620%" height="15" fill="rgb(226,3,54)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2815.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2789" width="4.6620%" height="15" fill="rgb(245,192,40)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2799.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2773" width="4.6620%" height="15" fill="rgb(238,167,29)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2783.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2757" width="4.6620%" height="15" fill="rgb(232,182,51)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2767.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2741" width="4.6620%" height="15" fill="rgb(231,60,39)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2751.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2725" width="4.6620%" height="15" fill="rgb(208,69,12)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2735.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2709" width="4.6620%" height="15" fill="rgb(235,93,37)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2719.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2693" width="4.6620%" height="15" fill="rgb(213,116,39)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2703.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2677" width="4.6620%" height="15" fill="rgb(222,207,29)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2687.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2661" width="4.6620%" height="15" fill="rgb(206,96,30)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2671.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2645" width="4.6620%" height="15" fill="rgb(218,138,4)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2655.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2629" width="4.6620%" height="15" fill="rgb(250,191,14)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2639.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2613" width="4.6620%" height="15" fill="rgb(239,60,40)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2623.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2597" width="4.6620%" height="15" fill="rgb(206,27,48)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2607.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2581" width="4.6620%" height="15" fill="rgb(225,35,8)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2591.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2565" width="4.6620%" height="15" fill="rgb(250,213,24)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2575.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2549" width="4.6620%" height="15" fill="rgb(247,123,22)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2559.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2533" width="4.6620%" height="15" fill="rgb(231,138,38)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2543.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2517" width="4.6620%" height="15" fill="rgb(231,145,46)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2527.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2501" width="4.6620%" height="15" fill="rgb(251,118,11)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2511.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2485" width="4.6620%" height="15" fill="rgb(217,147,25)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2495.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2469" width="4.6620%" height="15" fill="rgb(247,81,37)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2479.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2453" width="4.6620%" height="15" fill="rgb(209,12,38)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2463.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2437" width="4.6620%" height="15" fill="rgb(227,1,9)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2447.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2421" width="4.6620%" height="15" fill="rgb(248,47,43)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2431.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2405" width="4.6620%" height="15" fill="rgb(221,10,30)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2415.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2389" width="4.6620%" height="15" fill="rgb(210,229,1)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2399.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2373" width="4.6620%" height="15" fill="rgb(222,148,37)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2383.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2357" width="4.6620%" height="15" fill="rgb(234,67,33)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2367.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2341" width="4.6620%" height="15" fill="rgb(247,98,35)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2351.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2325" width="4.6620%" height="15" fill="rgb(247,138,52)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2335.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2309" width="4.6620%" height="15" fill="rgb(213,79,30)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2319.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2293" width="4.6620%" height="15" fill="rgb(246,177,23)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2303.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2277" width="4.6620%" height="15" fill="rgb(230,62,27)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2287.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,673,637 samples, 4.66%)</title><rect x="8.5602%" y="2261" width="4.6620%" height="15" fill="rgb(216,154,8)" fg:x="10417791" fg:w="5673637"/><text x="8.8102%" y="2271.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2245" width="2.2837%" height="15" fill="rgb(244,35,45)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2255.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2229" width="2.2837%" height="15" fill="rgb(251,115,12)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2239.50">a..</text></g><g><title>alloc::slice::hack::to_vec (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2213" width="2.2837%" height="15" fill="rgb(240,54,50)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2223.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2197" width="2.2837%" height="15" fill="rgb(233,84,52)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2207.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2181" width="2.2837%" height="15" fill="rgb(207,117,47)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2191.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2165" width="2.2837%" height="15" fill="rgb(249,43,39)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2175.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2149" width="2.2837%" height="15" fill="rgb(209,38,44)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2159.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2133" width="2.2837%" height="15" fill="rgb(236,212,23)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2143.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2117" width="2.2837%" height="15" fill="rgb(242,79,21)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2127.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2101" width="2.2837%" height="15" fill="rgb(211,96,35)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2111.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2085" width="2.2837%" height="15" fill="rgb(253,215,40)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2095.50">a..</text></g><g><title>alloc::slice::hack::to_vec (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2069" width="2.2837%" height="15" fill="rgb(211,81,21)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2079.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2053" width="2.2837%" height="15" fill="rgb(208,190,38)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2063.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2037" width="2.2837%" height="15" fill="rgb(235,213,38)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2047.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2021" width="2.2837%" height="15" fill="rgb(237,122,38)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2031.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="2005" width="2.2837%" height="15" fill="rgb(244,218,35)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="2015.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="1989" width="2.2837%" height="15" fill="rgb(240,68,47)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="1999.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,779,252 samples, 2.28%)</title><rect x="10.9385%" y="1973" width="2.2837%" height="15" fill="rgb(210,16,53)" fg:x="13312176" fg:w="2779252"/><text x="11.1885%" y="1983.50">&lt;..</text></g><g><title>benchmark::apply_frame_modifications (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="3125" width="2.4726%" height="15" fill="rgb(235,124,12)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="3135.50">be..</text></g><g><title>benchmark::json_to_html_node (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="3109" width="2.4726%" height="15" fill="rgb(224,169,11)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="3119.50">be..</text></g><g><title>benchmark::json_to_html_node (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="3093" width="2.4726%" height="15" fill="rgb(250,166,2)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="3103.50">be..</text></g><g><title>benchmark::json_to_html_node (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="3077" width="2.4726%" height="15" fill="rgb(242,216,29)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="3087.50">be..</text></g><g><title>benchmark::json_to_html_node (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="3061" width="2.4726%" height="15" fill="rgb(230,116,27)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="3071.50">be..</text></g><g><title>benchmark::json_to_html_node (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="3045" width="2.4726%" height="15" fill="rgb(228,99,48)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="3055.50">be..</text></g><g><title>benchmark::json_to_html_node (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="3029" width="2.4726%" height="15" fill="rgb(253,11,6)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="3039.50">be..</text></g><g><title>benchmark::json_to_html_node (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="3013" width="2.4726%" height="15" fill="rgb(247,143,39)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="3023.50">be..</text></g><g><title>benchmark::json_to_html_node (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2997" width="2.4726%" height="15" fill="rgb(236,97,10)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="3007.50">be..</text></g><g><title>benchmark::json_to_html_node (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2981" width="2.4726%" height="15" fill="rgb(233,208,19)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="2991.50">be..</text></g><g><title>benchmark::json_to_html_node (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2965" width="2.4726%" height="15" fill="rgb(216,164,2)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="2975.50">be..</text></g><g><title>css_bitvector_compiler::HtmlNode::new (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2949" width="2.4726%" height="15" fill="rgb(220,129,5)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="2959.50">cs..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2933" width="2.4726%" height="15" fill="rgb(242,17,10)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="2943.50">al..</text></g><g><title>alloc::str::convert_while_ascii (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2917" width="2.4726%" height="15" fill="rgb(242,107,0)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="2927.50">al..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2901" width="2.4726%" height="15" fill="rgb(251,28,31)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="2911.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2885" width="2.4726%" height="15" fill="rgb(233,223,10)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="2895.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2869" width="2.4726%" height="15" fill="rgb(215,21,27)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="2879.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2853" width="2.4726%" height="15" fill="rgb(232,23,21)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="2863.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2837" width="2.4726%" height="15" fill="rgb(244,5,23)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="2847.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2821" width="2.4726%" height="15" fill="rgb(226,81,46)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="2831.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2805" width="2.4726%" height="15" fill="rgb(247,70,30)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="2815.50">al..</text></g><g><title>alloc::alloc::alloc (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2789" width="2.4726%" height="15" fill="rgb(212,68,19)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="2799.50">al..</text></g><g><title>__rdl_alloc (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2773" width="2.4726%" height="15" fill="rgb(240,187,13)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="2783.50">__..</text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,009,205 samples, 2.47%)</title><rect x="13.2221%" y="2757" width="2.4726%" height="15" fill="rgb(223,113,26)" fg:x="16091428" fg:w="3009205"/><text x="13.4721%" y="2767.50">st..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,742,738 samples, 2.25%)</title><rect x="20.4859%" y="2213" width="2.2537%" height="15" fill="rgb(206,192,2)" fg:x="24931475" fg:w="2742738"/><text x="20.7359%" y="2223.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,742,738 samples, 2.25%)</title><rect x="20.4859%" y="2197" width="2.2537%" height="15" fill="rgb(241,108,4)" fg:x="24931475" fg:w="2742738"/><text x="20.7359%" y="2207.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,742,738 samples, 2.25%)</title><rect x="20.4859%" y="2181" width="2.2537%" height="15" fill="rgb(247,173,49)" fg:x="24931475" fg:w="2742738"/><text x="20.7359%" y="2191.50">a..</text></g><g><title>alloc::slice::hack::to_vec (2,742,738 samples, 2.25%)</title><rect x="20.4859%" y="2165" width="2.2537%" height="15" fill="rgb(224,114,35)" fg:x="24931475" fg:w="2742738"/><text x="20.7359%" y="2175.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,742,738 samples, 2.25%)</title><rect x="20.4859%" y="2149" width="2.2537%" height="15" fill="rgb(245,159,27)" fg:x="24931475" fg:w="2742738"/><text x="20.7359%" y="2159.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,742,738 samples, 2.25%)</title><rect x="20.4859%" y="2133" width="2.2537%" height="15" fill="rgb(245,172,44)" fg:x="24931475" fg:w="2742738"/><text x="20.7359%" y="2143.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,742,738 samples, 2.25%)</title><rect x="20.4859%" y="2117" width="2.2537%" height="15" fill="rgb(236,23,11)" fg:x="24931475" fg:w="2742738"/><text x="20.7359%" y="2127.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,742,738 samples, 2.25%)</title><rect x="20.4859%" y="2101" width="2.2537%" height="15" fill="rgb(205,117,38)" fg:x="24931475" fg:w="2742738"/><text x="20.7359%" y="2111.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,742,738 samples, 2.25%)</title><rect x="20.4859%" y="2085" width="2.2537%" height="15" fill="rgb(237,72,25)" fg:x="24931475" fg:w="2742738"/><text x="20.7359%" y="2095.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,742,738 samples, 2.25%)</title><rect x="20.4859%" y="2069" width="2.2537%" height="15" fill="rgb(244,70,9)" fg:x="24931475" fg:w="2742738"/><text x="20.7359%" y="2079.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,742,738 samples, 2.25%)</title><rect x="20.4859%" y="2053" width="2.2537%" height="15" fill="rgb(217,125,39)" fg:x="24931475" fg:w="2742738"/><text x="20.7359%" y="2063.50">a..</text></g><g><title>alloc::alloc::alloc (2,742,738 samples, 2.25%)</title><rect x="20.4859%" y="2037" width="2.2537%" height="15" fill="rgb(235,36,10)" fg:x="24931475" fg:w="2742738"/><text x="20.7359%" y="2047.50">a..</text></g><g><title>malloc (2,742,738 samples, 2.25%)</title><rect x="20.4859%" y="2021" width="2.2537%" height="15" fill="rgb(251,123,47)" fg:x="24931475" fg:w="2742738"/><text x="20.7359%" y="2031.50">m..</text></g><g><title>[libc.so.6] (2,742,738 samples, 2.25%)</title><rect x="20.4859%" y="2005" width="2.2537%" height="15" fill="rgb(221,13,13)" fg:x="24931475" fg:w="2742738"/><text x="20.7359%" y="2015.50">[..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,680,484 samples, 2.20%)</title><rect x="22.7396%" y="2149" width="2.2025%" height="15" fill="rgb(238,131,9)" fg:x="27674213" fg:w="2680484"/><text x="22.9896%" y="2159.50">&lt;..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,118,775 samples, 2.56%)</title><rect x="24.9421%" y="1909" width="2.5627%" height="15" fill="rgb(211,50,8)" fg:x="30354697" fg:w="3118775"/><text x="25.1921%" y="1919.50">&lt;c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,118,775 samples, 2.56%)</title><rect x="24.9421%" y="1893" width="2.5627%" height="15" fill="rgb(245,182,24)" fg:x="30354697" fg:w="3118775"/><text x="25.1921%" y="1903.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,118,775 samples, 2.56%)</title><rect x="24.9421%" y="1877" width="2.5627%" height="15" fill="rgb(242,14,37)" fg:x="30354697" fg:w="3118775"/><text x="25.1921%" y="1887.50">al..</text></g><g><title>alloc::slice::hack::to_vec (3,118,775 samples, 2.56%)</title><rect x="24.9421%" y="1861" width="2.5627%" height="15" fill="rgb(246,228,12)" fg:x="30354697" fg:w="3118775"/><text x="25.1921%" y="1871.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,118,775 samples, 2.56%)</title><rect x="24.9421%" y="1845" width="2.5627%" height="15" fill="rgb(213,55,15)" fg:x="30354697" fg:w="3118775"/><text x="25.1921%" y="1855.50">&lt;T..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,118,775 samples, 2.56%)</title><rect x="24.9421%" y="1829" width="2.5627%" height="15" fill="rgb(209,9,3)" fg:x="30354697" fg:w="3118775"/><text x="25.1921%" y="1839.50">&lt;c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,727,585 samples, 4.71%)</title><rect x="24.9421%" y="2133" width="4.7063%" height="15" fill="rgb(230,59,30)" fg:x="30354697" fg:w="5727585"/><text x="25.1921%" y="2143.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,727,585 samples, 4.71%)</title><rect x="24.9421%" y="2117" width="4.7063%" height="15" fill="rgb(209,121,21)" fg:x="30354697" fg:w="5727585"/><text x="25.1921%" y="2127.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (5,727,585 samples, 4.71%)</title><rect x="24.9421%" y="2101" width="4.7063%" height="15" fill="rgb(220,109,13)" fg:x="30354697" fg:w="5727585"/><text x="25.1921%" y="2111.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,727,585 samples, 4.71%)</title><rect x="24.9421%" y="2085" width="4.7063%" height="15" fill="rgb(232,18,1)" fg:x="30354697" fg:w="5727585"/><text x="25.1921%" y="2095.50">&lt;T as..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (5,727,585 samples, 4.71%)</title><rect x="24.9421%" y="2069" width="4.7063%" height="15" fill="rgb(215,41,42)" fg:x="30354697" fg:w="5727585"/><text x="25.1921%" y="2079.50">&lt;css_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,727,585 samples, 4.71%)</title><rect x="24.9421%" y="2053" width="4.7063%" height="15" fill="rgb(224,123,36)" fg:x="30354697" fg:w="5727585"/><text x="25.1921%" y="2063.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,727,585 samples, 4.71%)</title><rect x="24.9421%" y="2037" width="4.7063%" height="15" fill="rgb(240,125,3)" fg:x="30354697" fg:w="5727585"/><text x="25.1921%" y="2047.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (5,727,585 samples, 4.71%)</title><rect x="24.9421%" y="2021" width="4.7063%" height="15" fill="rgb(205,98,50)" fg:x="30354697" fg:w="5727585"/><text x="25.1921%" y="2031.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,727,585 samples, 4.71%)</title><rect x="24.9421%" y="2005" width="4.7063%" height="15" fill="rgb(205,185,37)" fg:x="30354697" fg:w="5727585"/><text x="25.1921%" y="2015.50">&lt;T as..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (5,727,585 samples, 4.71%)</title><rect x="24.9421%" y="1989" width="4.7063%" height="15" fill="rgb(238,207,15)" fg:x="30354697" fg:w="5727585"/><text x="25.1921%" y="1999.50">&lt;css_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,727,585 samples, 4.71%)</title><rect x="24.9421%" y="1973" width="4.7063%" height="15" fill="rgb(213,199,42)" fg:x="30354697" fg:w="5727585"/><text x="25.1921%" y="1983.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,727,585 samples, 4.71%)</title><rect x="24.9421%" y="1957" width="4.7063%" height="15" fill="rgb(235,201,11)" fg:x="30354697" fg:w="5727585"/><text x="25.1921%" y="1967.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (5,727,585 samples, 4.71%)</title><rect x="24.9421%" y="1941" width="4.7063%" height="15" fill="rgb(207,46,11)" fg:x="30354697" fg:w="5727585"/><text x="25.1921%" y="1951.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,727,585 samples, 4.71%)</title><rect x="24.9421%" y="1925" width="4.7063%" height="15" fill="rgb(241,35,35)" fg:x="30354697" fg:w="5727585"/><text x="25.1921%" y="1935.50">&lt;T as..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,608,810 samples, 2.14%)</title><rect x="27.5048%" y="1909" width="2.1436%" height="15" fill="rgb(243,32,47)" fg:x="33473472" fg:w="2608810"/><text x="27.7548%" y="1919.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,608,810 samples, 2.14%)</title><rect x="27.5048%" y="1893" width="2.1436%" height="15" fill="rgb(247,202,23)" fg:x="33473472" fg:w="2608810"/><text x="27.7548%" y="1903.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,608,810 samples, 2.14%)</title><rect x="27.5048%" y="1877" width="2.1436%" height="15" fill="rgb(219,102,11)" fg:x="33473472" fg:w="2608810"/><text x="27.7548%" y="1887.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,608,810 samples, 2.14%)</title><rect x="27.5048%" y="1861" width="2.1436%" height="15" fill="rgb(243,110,44)" fg:x="33473472" fg:w="2608810"/><text x="27.7548%" y="1871.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,608,810 samples, 2.14%)</title><rect x="27.5048%" y="1845" width="2.1436%" height="15" fill="rgb(222,74,54)" fg:x="33473472" fg:w="2608810"/><text x="27.7548%" y="1855.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,608,810 samples, 2.14%)</title><rect x="27.5048%" y="1829" width="2.1436%" height="15" fill="rgb(216,99,12)" fg:x="33473472" fg:w="2608810"/><text x="27.7548%" y="1839.50">a..</text></g><g><title>alloc::alloc::alloc (2,608,810 samples, 2.14%)</title><rect x="27.5048%" y="1813" width="2.1436%" height="15" fill="rgb(226,22,26)" fg:x="33473472" fg:w="2608810"/><text x="27.7548%" y="1823.50">a..</text></g><g><title>malloc (2,608,810 samples, 2.14%)</title><rect x="27.5048%" y="1797" width="2.1436%" height="15" fill="rgb(217,163,10)" fg:x="33473472" fg:w="2608810"/><text x="27.7548%" y="1807.50">m..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,408,160 samples, 9.37%)</title><rect x="22.7396%" y="2213" width="9.3740%" height="15" fill="rgb(213,25,53)" fg:x="27674213" fg:w="11408160"/><text x="22.9896%" y="2223.50">&lt;alloc::vec::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11,408,160 samples, 9.37%)</title><rect x="22.7396%" y="2197" width="9.3740%" height="15" fill="rgb(252,105,26)" fg:x="27674213" fg:w="11408160"/><text x="22.9896%" y="2207.50">alloc::slice:..</text></g><g><title>alloc::slice::hack::to_vec (11,408,160 samples, 9.37%)</title><rect x="22.7396%" y="2181" width="9.3740%" height="15" fill="rgb(220,39,43)" fg:x="27674213" fg:w="11408160"/><text x="22.9896%" y="2191.50">alloc::slice:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11,408,160 samples, 9.37%)</title><rect x="22.7396%" y="2165" width="9.3740%" height="15" fill="rgb(229,68,48)" fg:x="27674213" fg:w="11408160"/><text x="22.9896%" y="2175.50">&lt;T as alloc::..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (8,727,676 samples, 7.17%)</title><rect x="24.9421%" y="2149" width="7.1714%" height="15" fill="rgb(252,8,32)" fg:x="30354697" fg:w="8727676"/><text x="25.1921%" y="2159.50">&lt;css_bitve..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,000,091 samples, 2.47%)</title><rect x="29.6484%" y="2133" width="2.4651%" height="15" fill="rgb(223,20,43)" fg:x="36082282" fg:w="3000091"/><text x="29.8984%" y="2143.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,000,091 samples, 2.47%)</title><rect x="29.6484%" y="2117" width="2.4651%" height="15" fill="rgb(229,81,49)" fg:x="36082282" fg:w="3000091"/><text x="29.8984%" y="2127.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,000,091 samples, 2.47%)</title><rect x="29.6484%" y="2101" width="2.4651%" height="15" fill="rgb(236,28,36)" fg:x="36082282" fg:w="3000091"/><text x="29.8984%" y="2111.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,000,091 samples, 2.47%)</title><rect x="29.6484%" y="2085" width="2.4651%" height="15" fill="rgb(249,185,26)" fg:x="36082282" fg:w="3000091"/><text x="29.8984%" y="2095.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3,000,091 samples, 2.47%)</title><rect x="29.6484%" y="2069" width="2.4651%" height="15" fill="rgb(249,174,33)" fg:x="36082282" fg:w="3000091"/><text x="29.8984%" y="2079.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,000,091 samples, 2.47%)</title><rect x="29.6484%" y="2053" width="2.4651%" height="15" fill="rgb(233,201,37)" fg:x="36082282" fg:w="3000091"/><text x="29.8984%" y="2063.50">ha..</text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3,000,091 samples, 2.47%)</title><rect x="29.6484%" y="2037" width="2.4651%" height="15" fill="rgb(221,78,26)" fg:x="36082282" fg:w="3000091"/><text x="29.8984%" y="2047.50">ha..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,000,091 samples, 2.47%)</title><rect x="29.6484%" y="2021" width="2.4651%" height="15" fill="rgb(250,127,30)" fg:x="36082282" fg:w="3000091"/><text x="29.8984%" y="2031.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (3,000,091 samples, 2.47%)</title><rect x="29.6484%" y="2005" width="2.4651%" height="15" fill="rgb(230,49,44)" fg:x="36082282" fg:w="3000091"/><text x="29.8984%" y="2015.50">al..</text></g><g><title>alloc::alloc::alloc (3,000,091 samples, 2.47%)</title><rect x="29.6484%" y="1989" width="2.4651%" height="15" fill="rgb(229,67,23)" fg:x="36082282" fg:w="3000091"/><text x="29.8984%" y="1999.50">al..</text></g><g><title>malloc (3,000,091 samples, 2.47%)</title><rect x="29.6484%" y="1973" width="2.4651%" height="15" fill="rgb(249,83,47)" fg:x="36082282" fg:w="3000091"/><text x="29.8984%" y="1983.50">ma..</text></g><g><title>[libc.so.6] (3,000,091 samples, 2.47%)</title><rect x="29.6484%" y="1957" width="2.4651%" height="15" fill="rgb(215,43,3)" fg:x="36082282" fg:w="3000091"/><text x="29.8984%" y="1967.50">[l..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,853,221 samples, 13.85%)</title><rect x="20.4859%" y="2373" width="13.8481%" height="15" fill="rgb(238,154,13)" fg:x="24931475" fg:w="16853221"/><text x="20.7359%" y="2383.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,853,221 samples, 13.85%)</title><rect x="20.4859%" y="2357" width="13.8481%" height="15" fill="rgb(219,56,2)" fg:x="24931475" fg:w="16853221"/><text x="20.7359%" y="2367.50">alloc::slice::&lt;impl [..</text></g><g><title>alloc::slice::hack::to_vec (16,853,221 samples, 13.85%)</title><rect x="20.4859%" y="2341" width="13.8481%" height="15" fill="rgb(233,0,4)" fg:x="24931475" fg:w="16853221"/><text x="20.7359%" y="2351.50">alloc::slice::hack::t..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16,853,221 samples, 13.85%)</title><rect x="20.4859%" y="2325" width="13.8481%" height="15" fill="rgb(235,30,7)" fg:x="24931475" fg:w="16853221"/><text x="20.7359%" y="2335.50">&lt;T as alloc::slice::h..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (16,853,221 samples, 13.85%)</title><rect x="20.4859%" y="2309" width="13.8481%" height="15" fill="rgb(250,79,13)" fg:x="24931475" fg:w="16853221"/><text x="20.7359%" y="2319.50">&lt;css_bitvector_compil..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,853,221 samples, 13.85%)</title><rect x="20.4859%" y="2293" width="13.8481%" height="15" fill="rgb(211,146,34)" fg:x="24931475" fg:w="16853221"/><text x="20.7359%" y="2303.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,853,221 samples, 13.85%)</title><rect x="20.4859%" y="2277" width="13.8481%" height="15" fill="rgb(228,22,38)" fg:x="24931475" fg:w="16853221"/><text x="20.7359%" y="2287.50">alloc::slice::&lt;impl [..</text></g><g><title>alloc::slice::hack::to_vec (16,853,221 samples, 13.85%)</title><rect x="20.4859%" y="2261" width="13.8481%" height="15" fill="rgb(235,168,5)" fg:x="24931475" fg:w="16853221"/><text x="20.7359%" y="2271.50">alloc::slice::hack::t..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16,853,221 samples, 13.85%)</title><rect x="20.4859%" y="2245" width="13.8481%" height="15" fill="rgb(221,155,16)" fg:x="24931475" fg:w="16853221"/><text x="20.7359%" y="2255.50">&lt;T as alloc::slice::h..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (16,853,221 samples, 13.85%)</title><rect x="20.4859%" y="2229" width="13.8481%" height="15" fill="rgb(215,215,53)" fg:x="24931475" fg:w="16853221"/><text x="20.7359%" y="2239.50">&lt;css_bitvector_compil..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,702,323 samples, 2.22%)</title><rect x="32.1136%" y="2213" width="2.2205%" height="15" fill="rgb(223,4,10)" fg:x="39082373" fg:w="2702323"/><text x="32.3636%" y="2223.50">&lt;..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,702,323 samples, 2.22%)</title><rect x="32.1136%" y="2197" width="2.2205%" height="15" fill="rgb(234,103,6)" fg:x="39082373" fg:w="2702323"/><text x="32.3636%" y="2207.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,702,323 samples, 2.22%)</title><rect x="32.1136%" y="2181" width="2.2205%" height="15" fill="rgb(227,97,0)" fg:x="39082373" fg:w="2702323"/><text x="32.3636%" y="2191.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,702,323 samples, 2.22%)</title><rect x="32.1136%" y="2165" width="2.2205%" height="15" fill="rgb(234,150,53)" fg:x="39082373" fg:w="2702323"/><text x="32.3636%" y="2175.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,702,323 samples, 2.22%)</title><rect x="32.1136%" y="2149" width="2.2205%" height="15" fill="rgb(228,201,54)" fg:x="39082373" fg:w="2702323"/><text x="32.3636%" y="2159.50">h..</text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,702,323 samples, 2.22%)</title><rect x="32.1136%" y="2133" width="2.2205%" height="15" fill="rgb(222,22,37)" fg:x="39082373" fg:w="2702323"/><text x="32.3636%" y="2143.50">h..</text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,702,323 samples, 2.22%)</title><rect x="32.1136%" y="2117" width="2.2205%" height="15" fill="rgb(237,53,32)" fg:x="39082373" fg:w="2702323"/><text x="32.3636%" y="2127.50">h..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,702,323 samples, 2.22%)</title><rect x="32.1136%" y="2101" width="2.2205%" height="15" fill="rgb(233,25,53)" fg:x="39082373" fg:w="2702323"/><text x="32.3636%" y="2111.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,702,323 samples, 2.22%)</title><rect x="32.1136%" y="2085" width="2.2205%" height="15" fill="rgb(210,40,34)" fg:x="39082373" fg:w="2702323"/><text x="32.3636%" y="2095.50">a..</text></g><g><title>alloc::alloc::alloc (2,702,323 samples, 2.22%)</title><rect x="32.1136%" y="2069" width="2.2205%" height="15" fill="rgb(241,220,44)" fg:x="39082373" fg:w="2702323"/><text x="32.3636%" y="2079.50">a..</text></g><g><title>malloc (2,702,323 samples, 2.22%)</title><rect x="32.1136%" y="2053" width="2.2205%" height="15" fill="rgb(235,28,35)" fg:x="39082373" fg:w="2702323"/><text x="32.3636%" y="2063.50">m..</text></g><g><title>[libc.so.6] (2,702,323 samples, 2.22%)</title><rect x="32.1136%" y="2037" width="2.2205%" height="15" fill="rgb(210,56,17)" fg:x="39082373" fg:w="2702323"/><text x="32.3636%" y="2047.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25,677,338 samples, 21.10%)</title><rect x="15.6948%" y="2533" width="21.0988%" height="15" fill="rgb(224,130,29)" fg:x="19100633" fg:w="25677338"/><text x="15.9448%" y="2543.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25,677,338 samples, 21.10%)</title><rect x="15.6948%" y="2517" width="21.0988%" height="15" fill="rgb(235,212,8)" fg:x="19100633" fg:w="25677338"/><text x="15.9448%" y="2527.50">alloc::slice::&lt;impl [T]&gt;::to_vec_..</text></g><g><title>alloc::slice::hack::to_vec (25,677,338 samples, 21.10%)</title><rect x="15.6948%" y="2501" width="21.0988%" height="15" fill="rgb(223,33,50)" fg:x="19100633" fg:w="25677338"/><text x="15.9448%" y="2511.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25,677,338 samples, 21.10%)</title><rect x="15.6948%" y="2485" width="21.0988%" height="15" fill="rgb(219,149,13)" fg:x="19100633" fg:w="25677338"/><text x="15.9448%" y="2495.50">&lt;T as alloc::slice::hack::Convert..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (25,677,338 samples, 21.10%)</title><rect x="15.6948%" y="2469" width="21.0988%" height="15" fill="rgb(250,156,29)" fg:x="19100633" fg:w="25677338"/><text x="15.9448%" y="2479.50">&lt;css_bitvector_compiler::HtmlNode..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25,677,338 samples, 21.10%)</title><rect x="15.6948%" y="2453" width="21.0988%" height="15" fill="rgb(216,193,19)" fg:x="19100633" fg:w="25677338"/><text x="15.9448%" y="2463.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25,677,338 samples, 21.10%)</title><rect x="15.6948%" y="2437" width="21.0988%" height="15" fill="rgb(216,135,14)" fg:x="19100633" fg:w="25677338"/><text x="15.9448%" y="2447.50">alloc::slice::&lt;impl [T]&gt;::to_vec_..</text></g><g><title>alloc::slice::hack::to_vec (25,677,338 samples, 21.10%)</title><rect x="15.6948%" y="2421" width="21.0988%" height="15" fill="rgb(241,47,5)" fg:x="19100633" fg:w="25677338"/><text x="15.9448%" y="2431.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25,677,338 samples, 21.10%)</title><rect x="15.6948%" y="2405" width="21.0988%" height="15" fill="rgb(233,42,35)" fg:x="19100633" fg:w="25677338"/><text x="15.9448%" y="2415.50">&lt;T as alloc::slice::hack::Convert..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (25,677,338 samples, 21.10%)</title><rect x="15.6948%" y="2389" width="21.0988%" height="15" fill="rgb(231,13,6)" fg:x="19100633" fg:w="25677338"/><text x="15.9448%" y="2399.50">&lt;css_bitvector_compiler::HtmlNode..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,993,275 samples, 2.46%)</title><rect x="34.3340%" y="2373" width="2.4595%" height="15" fill="rgb(207,181,40)" fg:x="41784696" fg:w="2993275"/><text x="34.5840%" y="2383.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,993,275 samples, 2.46%)</title><rect x="34.3340%" y="2357" width="2.4595%" height="15" fill="rgb(254,173,49)" fg:x="41784696" fg:w="2993275"/><text x="34.5840%" y="2367.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,993,275 samples, 2.46%)</title><rect x="34.3340%" y="2341" width="2.4595%" height="15" fill="rgb(221,1,38)" fg:x="41784696" fg:w="2993275"/><text x="34.5840%" y="2351.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,993,275 samples, 2.46%)</title><rect x="34.3340%" y="2325" width="2.4595%" height="15" fill="rgb(206,124,46)" fg:x="41784696" fg:w="2993275"/><text x="34.5840%" y="2335.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,993,275 samples, 2.46%)</title><rect x="34.3340%" y="2309" width="2.4595%" height="15" fill="rgb(249,21,11)" fg:x="41784696" fg:w="2993275"/><text x="34.5840%" y="2319.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,993,275 samples, 2.46%)</title><rect x="34.3340%" y="2293" width="2.4595%" height="15" fill="rgb(222,201,40)" fg:x="41784696" fg:w="2993275"/><text x="34.5840%" y="2303.50">ha..</text></g><g><title>core::clone::Clone::clone (2,993,275 samples, 2.46%)</title><rect x="34.3340%" y="2277" width="2.4595%" height="15" fill="rgb(235,61,29)" fg:x="41784696" fg:w="2993275"/><text x="34.5840%" y="2287.50">co..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,993,275 samples, 2.46%)</title><rect x="34.3340%" y="2261" width="2.4595%" height="15" fill="rgb(219,207,3)" fg:x="41784696" fg:w="2993275"/><text x="34.5840%" y="2271.50">&lt;a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (28,910,731 samples, 23.76%)</title><rect x="15.6948%" y="2549" width="23.7556%" height="15" fill="rgb(222,56,46)" fg:x="19100633" fg:w="28910731"/><text x="15.9448%" y="2559.50">&lt;css_bitvector_compiler::HtmlNode as c..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,233,393 samples, 2.66%)</title><rect x="36.7936%" y="2533" width="2.6568%" height="15" fill="rgb(239,76,54)" fg:x="44777971" fg:w="3233393"/><text x="37.0436%" y="2543.50">&lt;c..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,233,393 samples, 2.66%)</title><rect x="36.7936%" y="2517" width="2.6568%" height="15" fill="rgb(231,124,27)" fg:x="44777971" fg:w="3233393"/><text x="37.0436%" y="2527.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31,602,642 samples, 25.97%)</title><rect x="15.6948%" y="2693" width="25.9675%" height="15" fill="rgb(249,195,6)" fg:x="19100633" fg:w="31602642"/><text x="15.9448%" y="2703.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clon..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31,602,642 samples, 25.97%)</title><rect x="15.6948%" y="2677" width="25.9675%" height="15" fill="rgb(237,174,47)" fg:x="19100633" fg:w="31602642"/><text x="15.9448%" y="2687.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (31,602,642 samples, 25.97%)</title><rect x="15.6948%" y="2661" width="25.9675%" height="15" fill="rgb(206,201,31)" fg:x="19100633" fg:w="31602642"/><text x="15.9448%" y="2671.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31,602,642 samples, 25.97%)</title><rect x="15.6948%" y="2645" width="25.9675%" height="15" fill="rgb(231,57,52)" fg:x="19100633" fg:w="31602642"/><text x="15.9448%" y="2655.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (31,602,642 samples, 25.97%)</title><rect x="15.6948%" y="2629" width="25.9675%" height="15" fill="rgb(248,177,22)" fg:x="19100633" fg:w="31602642"/><text x="15.9448%" y="2639.50">&lt;css_bitvector_compiler::HtmlNode as core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31,602,642 samples, 25.97%)</title><rect x="15.6948%" y="2613" width="25.9675%" height="15" fill="rgb(215,211,37)" fg:x="19100633" fg:w="31602642"/><text x="15.9448%" y="2623.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clon..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31,602,642 samples, 25.97%)</title><rect x="15.6948%" y="2597" width="25.9675%" height="15" fill="rgb(241,128,51)" fg:x="19100633" fg:w="31602642"/><text x="15.9448%" y="2607.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (31,602,642 samples, 25.97%)</title><rect x="15.6948%" y="2581" width="25.9675%" height="15" fill="rgb(227,165,31)" fg:x="19100633" fg:w="31602642"/><text x="15.9448%" y="2591.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31,602,642 samples, 25.97%)</title><rect x="15.6948%" y="2565" width="25.9675%" height="15" fill="rgb(228,167,24)" fg:x="19100633" fg:w="31602642"/><text x="15.9448%" y="2575.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,691,911 samples, 2.21%)</title><rect x="39.4504%" y="2549" width="2.2119%" height="15" fill="rgb(228,143,12)" fg:x="48011364" fg:w="2691911"/><text x="39.7004%" y="2559.50">c..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (34,453,707 samples, 28.31%)</title><rect x="15.6948%" y="2869" width="28.3102%" height="15" fill="rgb(249,149,8)" fg:x="19100633" fg:w="34453707"/><text x="15.9448%" y="2879.50">&lt;css_bitvector_compiler::HtmlNode as core::cl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (34,453,707 samples, 28.31%)</title><rect x="15.6948%" y="2853" width="28.3102%" height="15" fill="rgb(243,35,44)" fg:x="19100633" fg:w="34453707"/><text x="15.9448%" y="2863.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34,453,707 samples, 28.31%)</title><rect x="15.6948%" y="2837" width="28.3102%" height="15" fill="rgb(246,89,9)" fg:x="19100633" fg:w="34453707"/><text x="15.9448%" y="2847.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (34,453,707 samples, 28.31%)</title><rect x="15.6948%" y="2821" width="28.3102%" height="15" fill="rgb(233,213,13)" fg:x="19100633" fg:w="34453707"/><text x="15.9448%" y="2831.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34,453,707 samples, 28.31%)</title><rect x="15.6948%" y="2805" width="28.3102%" height="15" fill="rgb(233,141,41)" fg:x="19100633" fg:w="34453707"/><text x="15.9448%" y="2815.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (34,453,707 samples, 28.31%)</title><rect x="15.6948%" y="2789" width="28.3102%" height="15" fill="rgb(239,167,4)" fg:x="19100633" fg:w="34453707"/><text x="15.9448%" y="2799.50">&lt;css_bitvector_compiler::HtmlNode as core::cl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (34,453,707 samples, 28.31%)</title><rect x="15.6948%" y="2773" width="28.3102%" height="15" fill="rgb(209,217,16)" fg:x="19100633" fg:w="34453707"/><text x="15.9448%" y="2783.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34,453,707 samples, 28.31%)</title><rect x="15.6948%" y="2757" width="28.3102%" height="15" fill="rgb(219,88,35)" fg:x="19100633" fg:w="34453707"/><text x="15.9448%" y="2767.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (34,453,707 samples, 28.31%)</title><rect x="15.6948%" y="2741" width="28.3102%" height="15" fill="rgb(220,193,23)" fg:x="19100633" fg:w="34453707"/><text x="15.9448%" y="2751.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34,453,707 samples, 28.31%)</title><rect x="15.6948%" y="2725" width="28.3102%" height="15" fill="rgb(230,90,52)" fg:x="19100633" fg:w="34453707"/><text x="15.9448%" y="2735.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (34,453,707 samples, 28.31%)</title><rect x="15.6948%" y="2709" width="28.3102%" height="15" fill="rgb(252,106,19)" fg:x="19100633" fg:w="34453707"/><text x="15.9448%" y="2719.50">&lt;css_bitvector_compiler::HtmlNode as core::cl..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,851,065 samples, 2.34%)</title><rect x="41.6623%" y="2693" width="2.3427%" height="15" fill="rgb(206,74,20)" fg:x="50703275" fg:w="2851065"/><text x="41.9123%" y="2703.50">&lt;..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (37,392,157 samples, 30.72%)</title><rect x="15.6948%" y="3109" width="30.7247%" height="15" fill="rgb(230,138,44)" fg:x="19100633" fg:w="37392157"/><text x="15.9448%" y="3119.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37,392,157 samples, 30.72%)</title><rect x="15.6948%" y="3093" width="30.7247%" height="15" fill="rgb(235,182,43)" fg:x="19100633" fg:w="37392157"/><text x="15.9448%" y="3103.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37,392,157 samples, 30.72%)</title><rect x="15.6948%" y="3077" width="30.7247%" height="15" fill="rgb(242,16,51)" fg:x="19100633" fg:w="37392157"/><text x="15.9448%" y="3087.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (37,392,157 samples, 30.72%)</title><rect x="15.6948%" y="3061" width="30.7247%" height="15" fill="rgb(248,9,4)" fg:x="19100633" fg:w="37392157"/><text x="15.9448%" y="3071.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37,392,157 samples, 30.72%)</title><rect x="15.6948%" y="3045" width="30.7247%" height="15" fill="rgb(210,31,22)" fg:x="19100633" fg:w="37392157"/><text x="15.9448%" y="3055.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (37,392,157 samples, 30.72%)</title><rect x="15.6948%" y="3029" width="30.7247%" height="15" fill="rgb(239,54,39)" fg:x="19100633" fg:w="37392157"/><text x="15.9448%" y="3039.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37,392,157 samples, 30.72%)</title><rect x="15.6948%" y="3013" width="30.7247%" height="15" fill="rgb(230,99,41)" fg:x="19100633" fg:w="37392157"/><text x="15.9448%" y="3023.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37,392,157 samples, 30.72%)</title><rect x="15.6948%" y="2997" width="30.7247%" height="15" fill="rgb(253,106,12)" fg:x="19100633" fg:w="37392157"/><text x="15.9448%" y="3007.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (37,392,157 samples, 30.72%)</title><rect x="15.6948%" y="2981" width="30.7247%" height="15" fill="rgb(213,46,41)" fg:x="19100633" fg:w="37392157"/><text x="15.9448%" y="2991.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37,392,157 samples, 30.72%)</title><rect x="15.6948%" y="2965" width="30.7247%" height="15" fill="rgb(215,133,35)" fg:x="19100633" fg:w="37392157"/><text x="15.9448%" y="2975.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (37,392,157 samples, 30.72%)</title><rect x="15.6948%" y="2949" width="30.7247%" height="15" fill="rgb(213,28,5)" fg:x="19100633" fg:w="37392157"/><text x="15.9448%" y="2959.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37,392,157 samples, 30.72%)</title><rect x="15.6948%" y="2933" width="30.7247%" height="15" fill="rgb(215,77,49)" fg:x="19100633" fg:w="37392157"/><text x="15.9448%" y="2943.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37,392,157 samples, 30.72%)</title><rect x="15.6948%" y="2917" width="30.7247%" height="15" fill="rgb(248,100,22)" fg:x="19100633" fg:w="37392157"/><text x="15.9448%" y="2927.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (37,392,157 samples, 30.72%)</title><rect x="15.6948%" y="2901" width="30.7247%" height="15" fill="rgb(208,67,9)" fg:x="19100633" fg:w="37392157"/><text x="15.9448%" y="2911.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37,392,157 samples, 30.72%)</title><rect x="15.6948%" y="2885" width="30.7247%" height="15" fill="rgb(219,133,21)" fg:x="19100633" fg:w="37392157"/><text x="15.9448%" y="2895.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,938,450 samples, 2.41%)</title><rect x="44.0050%" y="2869" width="2.4145%" height="15" fill="rgb(246,46,29)" fg:x="53554340" fg:w="2938450"/><text x="44.2550%" y="2879.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,938,450 samples, 2.41%)</title><rect x="44.0050%" y="2853" width="2.4145%" height="15" fill="rgb(246,185,52)" fg:x="53554340" fg:w="2938450"/><text x="44.2550%" y="2863.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,938,450 samples, 2.41%)</title><rect x="44.0050%" y="2837" width="2.4145%" height="15" fill="rgb(252,136,11)" fg:x="53554340" fg:w="2938450"/><text x="44.2550%" y="2847.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,938,450 samples, 2.41%)</title><rect x="44.0050%" y="2821" width="2.4145%" height="15" fill="rgb(219,138,53)" fg:x="53554340" fg:w="2938450"/><text x="44.2550%" y="2831.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,938,450 samples, 2.41%)</title><rect x="44.0050%" y="2805" width="2.4145%" height="15" fill="rgb(211,51,23)" fg:x="53554340" fg:w="2938450"/><text x="44.2550%" y="2815.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,938,450 samples, 2.41%)</title><rect x="44.0050%" y="2789" width="2.4145%" height="15" fill="rgb(247,221,28)" fg:x="53554340" fg:w="2938450"/><text x="44.2550%" y="2799.50">al..</text></g><g><title>alloc::alloc::alloc (2,938,450 samples, 2.41%)</title><rect x="44.0050%" y="2773" width="2.4145%" height="15" fill="rgb(251,222,45)" fg:x="53554340" fg:w="2938450"/><text x="44.2550%" y="2783.50">al..</text></g><g><title>malloc (2,938,450 samples, 2.41%)</title><rect x="44.0050%" y="2757" width="2.4145%" height="15" fill="rgb(217,162,53)" fg:x="53554340" fg:w="2938450"/><text x="44.2550%" y="2767.50">ma..</text></g><g><title>[libc.so.6] (2,938,450 samples, 2.41%)</title><rect x="44.0050%" y="2741" width="2.4145%" height="15" fill="rgb(229,93,14)" fg:x="53554340" fg:w="2938450"/><text x="44.2550%" y="2751.50">[l..</text></g><g><title>[libc.so.6] (2,938,450 samples, 2.41%)</title><rect x="44.0050%" y="2725" width="2.4145%" height="15" fill="rgb(209,67,49)" fg:x="53554340" fg:w="2938450"/><text x="44.2550%" y="2735.50">[l..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (3,101,565 samples, 2.55%)</title><rect x="46.4195%" y="3109" width="2.5485%" height="15" fill="rgb(213,87,29)" fg:x="56492790" fg:w="3101565"/><text x="46.6695%" y="3119.50">al..</text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (3,101,565 samples, 2.55%)</title><rect x="46.4195%" y="3093" width="2.5485%" height="15" fill="rgb(205,151,52)" fg:x="56492790" fg:w="3101565"/><text x="46.6695%" y="3103.50">al..</text></g><g><title>alloc::str::join_generic_copy (3,101,565 samples, 2.55%)</title><rect x="46.4195%" y="3077" width="2.5485%" height="15" fill="rgb(253,215,39)" fg:x="56492790" fg:w="3101565"/><text x="46.6695%" y="3087.50">al..</text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (3,101,565 samples, 2.55%)</title><rect x="46.4195%" y="3061" width="2.5485%" height="15" fill="rgb(221,220,41)" fg:x="56492790" fg:w="3101565"/><text x="46.6695%" y="3071.50">co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (3,101,565 samples, 2.55%)</title><rect x="46.4195%" y="3045" width="2.5485%" height="15" fill="rgb(218,133,21)" fg:x="56492790" fg:w="3101565"/><text x="46.6695%" y="3055.50">co..</text></g><g><title>[libc.so.6] (3,101,565 samples, 2.55%)</title><rect x="46.4195%" y="3029" width="2.5485%" height="15" fill="rgb(221,193,43)" fg:x="56492790" fg:w="3101565"/><text x="46.6695%" y="3039.50">[l..</text></g><g><title>benchmark::apply_frame_modifications (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="3109" width="2.1960%" height="15" fill="rgb(240,128,52)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="3119.50">b..</text></g><g><title>benchmark::json_to_html_node (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="3093" width="2.1960%" height="15" fill="rgb(253,114,12)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="3103.50">b..</text></g><g><title>benchmark::json_to_html_node (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="3077" width="2.1960%" height="15" fill="rgb(215,223,47)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="3087.50">b..</text></g><g><title>benchmark::json_to_html_node (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="3061" width="2.1960%" height="15" fill="rgb(248,225,23)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="3071.50">b..</text></g><g><title>benchmark::json_to_html_node (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="3045" width="2.1960%" height="15" fill="rgb(250,108,0)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="3055.50">b..</text></g><g><title>benchmark::json_to_html_node (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="3029" width="2.1960%" height="15" fill="rgb(228,208,7)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="3039.50">b..</text></g><g><title>benchmark::json_to_html_node (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="3013" width="2.1960%" height="15" fill="rgb(244,45,10)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="3023.50">b..</text></g><g><title>benchmark::json_to_html_node (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="2997" width="2.1960%" height="15" fill="rgb(207,125,25)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="3007.50">b..</text></g><g><title>benchmark::json_to_html_node (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="2981" width="2.1960%" height="15" fill="rgb(210,195,18)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="2991.50">b..</text></g><g><title>serde_json::value::Value::get (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="2965" width="2.1960%" height="15" fill="rgb(249,80,12)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="2975.50">s..</text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="2949" width="2.1960%" height="15" fill="rgb(221,65,9)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="2959.50">&lt;..</text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="2933" width="2.1960%" height="15" fill="rgb(235,49,36)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="2943.50">&lt;..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="2917" width="2.1960%" height="15" fill="rgb(225,32,20)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="2927.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="2901" width="2.1960%" height="15" fill="rgb(215,141,46)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="2911.50">a..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="2885" width="2.1960%" height="15" fill="rgb(250,160,47)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="2895.50">a..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="2869" width="2.1960%" height="15" fill="rgb(216,222,40)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="2879.50">a..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="2853" width="2.1960%" height="15" fill="rgb(234,217,39)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="2863.50">a..</text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="2837" width="2.1960%" height="15" fill="rgb(207,178,40)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="2847.50">c..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="2821" width="2.1960%" height="15" fill="rgb(221,136,13)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="2831.50">c..</text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="2805" width="2.1960%" height="15" fill="rgb(249,199,10)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="2815.50">&lt;..</text></g><g><title>[libc.so.6] (2,672,571 samples, 2.20%)</title><rect x="48.9680%" y="2789" width="2.1960%" height="15" fill="rgb(249,222,13)" fg:x="59594355" fg:w="2672571"/><text x="49.2180%" y="2799.50">[..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,784,819 samples, 2.29%)</title><rect x="51.1640%" y="2197" width="2.2883%" height="15" fill="rgb(244,185,38)" fg:x="62266926" fg:w="2784819"/><text x="51.4140%" y="2207.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,784,819 samples, 2.29%)</title><rect x="51.1640%" y="2181" width="2.2883%" height="15" fill="rgb(236,202,9)" fg:x="62266926" fg:w="2784819"/><text x="51.4140%" y="2191.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,784,819 samples, 2.29%)</title><rect x="51.1640%" y="2165" width="2.2883%" height="15" fill="rgb(250,229,37)" fg:x="62266926" fg:w="2784819"/><text x="51.4140%" y="2175.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,784,819 samples, 2.29%)</title><rect x="51.1640%" y="2149" width="2.2883%" height="15" fill="rgb(206,174,23)" fg:x="62266926" fg:w="2784819"/><text x="51.4140%" y="2159.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,784,819 samples, 2.29%)</title><rect x="51.1640%" y="2133" width="2.2883%" height="15" fill="rgb(211,33,43)" fg:x="62266926" fg:w="2784819"/><text x="51.4140%" y="2143.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,784,819 samples, 2.29%)</title><rect x="51.1640%" y="2117" width="2.2883%" height="15" fill="rgb(245,58,50)" fg:x="62266926" fg:w="2784819"/><text x="51.4140%" y="2127.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (2,784,819 samples, 2.29%)</title><rect x="51.1640%" y="2101" width="2.2883%" height="15" fill="rgb(244,68,36)" fg:x="62266926" fg:w="2784819"/><text x="51.4140%" y="2111.50">a..</text></g><g><title>cfree (2,784,819 samples, 2.29%)</title><rect x="51.1640%" y="2085" width="2.2883%" height="15" fill="rgb(232,229,15)" fg:x="62266926" fg:w="2784819"/><text x="51.4140%" y="2095.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,447,317 samples, 4.48%)</title><rect x="51.1640%" y="2261" width="4.4760%" height="15" fill="rgb(254,30,23)" fg:x="62266926" fg:w="5447317"/><text x="51.4140%" y="2271.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,447,317 samples, 4.48%)</title><rect x="51.1640%" y="2245" width="4.4760%" height="15" fill="rgb(235,160,14)" fg:x="62266926" fg:w="5447317"/><text x="51.4140%" y="2255.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,447,317 samples, 4.48%)</title><rect x="51.1640%" y="2229" width="4.4760%" height="15" fill="rgb(212,155,44)" fg:x="62266926" fg:w="5447317"/><text x="51.4140%" y="2239.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,447,317 samples, 4.48%)</title><rect x="51.1640%" y="2213" width="4.4760%" height="15" fill="rgb(226,2,50)" fg:x="62266926" fg:w="5447317"/><text x="51.4140%" y="2223.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="2197" width="2.1877%" height="15" fill="rgb(234,177,6)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="2207.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="2181" width="2.1877%" height="15" fill="rgb(217,24,9)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="2191.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="2165" width="2.1877%" height="15" fill="rgb(220,13,46)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="2175.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="2149" width="2.1877%" height="15" fill="rgb(239,221,27)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="2159.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="2133" width="2.1877%" height="15" fill="rgb(222,198,25)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="2143.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="2117" width="2.1877%" height="15" fill="rgb(211,99,13)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="2127.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="2101" width="2.1877%" height="15" fill="rgb(232,111,31)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="2111.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="2085" width="2.1877%" height="15" fill="rgb(245,82,37)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="2095.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="2069" width="2.1877%" height="15" fill="rgb(227,149,46)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="2079.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="2053" width="2.1877%" height="15" fill="rgb(218,36,50)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="2063.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="2037" width="2.1877%" height="15" fill="rgb(226,80,48)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="2047.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="2021" width="2.1877%" height="15" fill="rgb(238,224,15)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="2031.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="2005" width="2.1877%" height="15" fill="rgb(241,136,10)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="2015.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="1989" width="2.1877%" height="15" fill="rgb(208,32,45)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="1999.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="1973" width="2.1877%" height="15" fill="rgb(207,135,9)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="1983.50">a..</text></g><g><title>cfree (2,662,498 samples, 2.19%)</title><rect x="53.4523%" y="1957" width="2.1877%" height="15" fill="rgb(206,86,44)" fg:x="65051745" fg:w="2662498"/><text x="53.7023%" y="1967.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,334,636 samples, 6.85%)</title><rect x="51.1640%" y="2309" width="6.8485%" height="15" fill="rgb(245,177,15)" fg:x="62266926" fg:w="8334636"/><text x="51.4140%" y="2319.50">&lt;alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (8,334,636 samples, 6.85%)</title><rect x="51.1640%" y="2293" width="6.8485%" height="15" fill="rgb(206,64,50)" fg:x="62266926" fg:w="8334636"/><text x="51.4140%" y="2303.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (8,334,636 samples, 6.85%)</title><rect x="51.1640%" y="2277" width="6.8485%" height="15" fill="rgb(234,36,40)" fg:x="62266926" fg:w="8334636"/><text x="51.4140%" y="2287.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,887,319 samples, 2.37%)</title><rect x="55.6400%" y="2261" width="2.3725%" height="15" fill="rgb(213,64,8)" fg:x="67714243" fg:w="2887319"/><text x="55.8900%" y="2271.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,887,319 samples, 2.37%)</title><rect x="55.6400%" y="2245" width="2.3725%" height="15" fill="rgb(210,75,36)" fg:x="67714243" fg:w="2887319"/><text x="55.8900%" y="2255.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,887,319 samples, 2.37%)</title><rect x="55.6400%" y="2229" width="2.3725%" height="15" fill="rgb(229,88,21)" fg:x="67714243" fg:w="2887319"/><text x="55.8900%" y="2239.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,887,319 samples, 2.37%)</title><rect x="55.6400%" y="2213" width="2.3725%" height="15" fill="rgb(252,204,47)" fg:x="67714243" fg:w="2887319"/><text x="55.8900%" y="2223.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,887,319 samples, 2.37%)</title><rect x="55.6400%" y="2197" width="2.3725%" height="15" fill="rgb(208,77,27)" fg:x="67714243" fg:w="2887319"/><text x="55.8900%" y="2207.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,887,319 samples, 2.37%)</title><rect x="55.6400%" y="2181" width="2.3725%" height="15" fill="rgb(221,76,26)" fg:x="67714243" fg:w="2887319"/><text x="55.8900%" y="2191.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (2,887,319 samples, 2.37%)</title><rect x="55.6400%" y="2165" width="2.3725%" height="15" fill="rgb(225,139,18)" fg:x="67714243" fg:w="2887319"/><text x="55.8900%" y="2175.50">al..</text></g><g><title>cfree (2,887,319 samples, 2.37%)</title><rect x="55.6400%" y="2149" width="2.3725%" height="15" fill="rgb(230,137,11)" fg:x="67714243" fg:w="2887319"/><text x="55.8900%" y="2159.50">cf..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (10,986,380 samples, 9.03%)</title><rect x="51.1640%" y="2325" width="9.0274%" height="15" fill="rgb(212,28,1)" fg:x="62266926" fg:w="10986380"/><text x="51.4140%" y="2335.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,651,744 samples, 2.18%)</title><rect x="58.0125%" y="2309" width="2.1789%" height="15" fill="rgb(248,164,17)" fg:x="70601562" fg:w="2651744"/><text x="58.2625%" y="2319.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,651,744 samples, 2.18%)</title><rect x="58.0125%" y="2293" width="2.1789%" height="15" fill="rgb(222,171,42)" fg:x="70601562" fg:w="2651744"/><text x="58.2625%" y="2303.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,651,744 samples, 2.18%)</title><rect x="58.0125%" y="2277" width="2.1789%" height="15" fill="rgb(243,84,45)" fg:x="70601562" fg:w="2651744"/><text x="58.2625%" y="2287.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,651,744 samples, 2.18%)</title><rect x="58.0125%" y="2261" width="2.1789%" height="15" fill="rgb(252,49,23)" fg:x="70601562" fg:w="2651744"/><text x="58.2625%" y="2271.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (2,651,744 samples, 2.18%)</title><rect x="58.0125%" y="2245" width="2.1789%" height="15" fill="rgb(215,19,7)" fg:x="70601562" fg:w="2651744"/><text x="58.2625%" y="2255.50">a..</text></g><g><title>cfree (2,651,744 samples, 2.18%)</title><rect x="58.0125%" y="2229" width="2.1789%" height="15" fill="rgb(238,81,41)" fg:x="70601562" fg:w="2651744"/><text x="58.2625%" y="2239.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,848,754 samples, 2.34%)</title><rect x="60.1914%" y="2325" width="2.3408%" height="15" fill="rgb(210,199,37)" fg:x="73253306" fg:w="2848754"/><text x="60.4414%" y="2335.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,848,754 samples, 2.34%)</title><rect x="60.1914%" y="2309" width="2.3408%" height="15" fill="rgb(244,192,49)" fg:x="73253306" fg:w="2848754"/><text x="60.4414%" y="2319.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,848,754 samples, 2.34%)</title><rect x="60.1914%" y="2293" width="2.3408%" height="15" fill="rgb(226,211,11)" fg:x="73253306" fg:w="2848754"/><text x="60.4414%" y="2303.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,848,754 samples, 2.34%)</title><rect x="60.1914%" y="2277" width="2.3408%" height="15" fill="rgb(236,162,54)" fg:x="73253306" fg:w="2848754"/><text x="60.4414%" y="2287.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,848,754 samples, 2.34%)</title><rect x="60.1914%" y="2261" width="2.3408%" height="15" fill="rgb(220,229,9)" fg:x="73253306" fg:w="2848754"/><text x="60.4414%" y="2271.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,848,754 samples, 2.34%)</title><rect x="60.1914%" y="2245" width="2.3408%" height="15" fill="rgb(250,87,22)" fg:x="73253306" fg:w="2848754"/><text x="60.4414%" y="2255.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,848,754 samples, 2.34%)</title><rect x="60.1914%" y="2229" width="2.3408%" height="15" fill="rgb(239,43,17)" fg:x="73253306" fg:w="2848754"/><text x="60.4414%" y="2239.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (2,848,754 samples, 2.34%)</title><rect x="60.1914%" y="2213" width="2.3408%" height="15" fill="rgb(231,177,25)" fg:x="73253306" fg:w="2848754"/><text x="60.4414%" y="2223.50">a..</text></g><g><title>cfree (2,848,754 samples, 2.34%)</title><rect x="60.1914%" y="2197" width="2.3408%" height="15" fill="rgb(219,179,1)" fg:x="73253306" fg:w="2848754"/><text x="60.4414%" y="2207.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,777,511 samples, 13.79%)</title><rect x="51.1640%" y="2437" width="13.7859%" height="15" fill="rgb(238,219,53)" fg:x="62266926" fg:w="16777511"/><text x="51.4140%" y="2447.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (16,777,511 samples, 13.79%)</title><rect x="51.1640%" y="2421" width="13.7859%" height="15" fill="rgb(232,167,36)" fg:x="62266926" fg:w="16777511"/><text x="51.4140%" y="2431.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (16,777,511 samples, 13.79%)</title><rect x="51.1640%" y="2405" width="13.7859%" height="15" fill="rgb(244,19,51)" fg:x="62266926" fg:w="16777511"/><text x="51.4140%" y="2415.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (16,777,511 samples, 13.79%)</title><rect x="51.1640%" y="2389" width="13.7859%" height="15" fill="rgb(224,6,22)" fg:x="62266926" fg:w="16777511"/><text x="51.4140%" y="2399.50">core::ptr::drop_in_pl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,777,511 samples, 13.79%)</title><rect x="51.1640%" y="2373" width="13.7859%" height="15" fill="rgb(224,145,5)" fg:x="62266926" fg:w="16777511"/><text x="51.4140%" y="2383.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (16,777,511 samples, 13.79%)</title><rect x="51.1640%" y="2357" width="13.7859%" height="15" fill="rgb(234,130,49)" fg:x="62266926" fg:w="16777511"/><text x="51.4140%" y="2367.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (16,777,511 samples, 13.79%)</title><rect x="51.1640%" y="2341" width="13.7859%" height="15" fill="rgb(254,6,2)" fg:x="62266926" fg:w="16777511"/><text x="51.4140%" y="2351.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,942,377 samples, 2.42%)</title><rect x="62.5322%" y="2325" width="2.4177%" height="15" fill="rgb(208,96,46)" fg:x="76102060" fg:w="2942377"/><text x="62.7822%" y="2335.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,942,377 samples, 2.42%)</title><rect x="62.5322%" y="2309" width="2.4177%" height="15" fill="rgb(239,3,39)" fg:x="76102060" fg:w="2942377"/><text x="62.7822%" y="2319.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,942,377 samples, 2.42%)</title><rect x="62.5322%" y="2293" width="2.4177%" height="15" fill="rgb(233,210,1)" fg:x="76102060" fg:w="2942377"/><text x="62.7822%" y="2303.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,942,377 samples, 2.42%)</title><rect x="62.5322%" y="2277" width="2.4177%" height="15" fill="rgb(244,137,37)" fg:x="76102060" fg:w="2942377"/><text x="62.7822%" y="2287.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,942,377 samples, 2.42%)</title><rect x="62.5322%" y="2261" width="2.4177%" height="15" fill="rgb(240,136,2)" fg:x="76102060" fg:w="2942377"/><text x="62.7822%" y="2271.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,942,377 samples, 2.42%)</title><rect x="62.5322%" y="2245" width="2.4177%" height="15" fill="rgb(239,18,37)" fg:x="76102060" fg:w="2942377"/><text x="62.7822%" y="2255.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (2,942,377 samples, 2.42%)</title><rect x="62.5322%" y="2229" width="2.4177%" height="15" fill="rgb(218,185,22)" fg:x="76102060" fg:w="2942377"/><text x="62.7822%" y="2239.50">ha..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (19,951,326 samples, 16.39%)</title><rect x="51.1640%" y="2453" width="16.3938%" height="15" fill="rgb(225,218,4)" fg:x="62266926" fg:w="19951326"/><text x="51.4140%" y="2463.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,173,815 samples, 2.61%)</title><rect x="64.9499%" y="2437" width="2.6079%" height="15" fill="rgb(230,182,32)" fg:x="79044437" fg:w="3173815"/><text x="65.1999%" y="2447.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,173,815 samples, 2.61%)</title><rect x="64.9499%" y="2421" width="2.6079%" height="15" fill="rgb(242,56,43)" fg:x="79044437" fg:w="3173815"/><text x="65.1999%" y="2431.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,173,815 samples, 2.61%)</title><rect x="64.9499%" y="2405" width="2.6079%" height="15" fill="rgb(233,99,24)" fg:x="79044437" fg:w="3173815"/><text x="65.1999%" y="2415.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,173,815 samples, 2.61%)</title><rect x="64.9499%" y="2389" width="2.6079%" height="15" fill="rgb(234,209,42)" fg:x="79044437" fg:w="3173815"/><text x="65.1999%" y="2399.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (3,173,815 samples, 2.61%)</title><rect x="64.9499%" y="2373" width="2.6079%" height="15" fill="rgb(227,7,12)" fg:x="79044437" fg:w="3173815"/><text x="65.1999%" y="2383.50">al..</text></g><g><title>__rust_dealloc (3,173,815 samples, 2.61%)</title><rect x="64.9499%" y="2357" width="2.6079%" height="15" fill="rgb(245,203,43)" fg:x="79044437" fg:w="3173815"/><text x="65.1999%" y="2367.50">__..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (22,722,471 samples, 18.67%)</title><rect x="51.1640%" y="2517" width="18.6708%" height="15" fill="rgb(238,205,33)" fg:x="62266926" fg:w="22722471"/><text x="51.4140%" y="2527.50">core::ptr::drop_in_place&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,722,471 samples, 18.67%)</title><rect x="51.1640%" y="2501" width="18.6708%" height="15" fill="rgb(231,56,7)" fg:x="62266926" fg:w="22722471"/><text x="51.4140%" y="2511.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (22,722,471 samples, 18.67%)</title><rect x="51.1640%" y="2485" width="18.6708%" height="15" fill="rgb(244,186,29)" fg:x="62266926" fg:w="22722471"/><text x="51.4140%" y="2495.50">core::ptr::drop_in_place&lt;[css..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (22,722,471 samples, 18.67%)</title><rect x="51.1640%" y="2469" width="18.6708%" height="15" fill="rgb(234,111,31)" fg:x="62266926" fg:w="22722471"/><text x="51.4140%" y="2479.50">core::ptr::drop_in_place&lt;css_..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,771,145 samples, 2.28%)</title><rect x="67.5578%" y="2453" width="2.2770%" height="15" fill="rgb(241,149,10)" fg:x="82218252" fg:w="2771145"/><text x="67.8078%" y="2463.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,771,145 samples, 2.28%)</title><rect x="67.5578%" y="2437" width="2.2770%" height="15" fill="rgb(249,206,44)" fg:x="82218252" fg:w="2771145"/><text x="67.8078%" y="2447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,771,145 samples, 2.28%)</title><rect x="67.5578%" y="2421" width="2.2770%" height="15" fill="rgb(251,153,30)" fg:x="82218252" fg:w="2771145"/><text x="67.8078%" y="2431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,771,145 samples, 2.28%)</title><rect x="67.5578%" y="2405" width="2.2770%" height="15" fill="rgb(239,152,38)" fg:x="82218252" fg:w="2771145"/><text x="67.8078%" y="2415.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,771,145 samples, 2.28%)</title><rect x="67.5578%" y="2389" width="2.2770%" height="15" fill="rgb(249,139,47)" fg:x="82218252" fg:w="2771145"/><text x="67.8078%" y="2399.50">&lt;..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,771,145 samples, 2.28%)</title><rect x="67.5578%" y="2373" width="2.2770%" height="15" fill="rgb(244,64,35)" fg:x="82218252" fg:w="2771145"/><text x="67.8078%" y="2383.50">h..</text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2,771,145 samples, 2.28%)</title><rect x="67.5578%" y="2357" width="2.2770%" height="15" fill="rgb(216,46,15)" fg:x="82218252" fg:w="2771145"/><text x="67.8078%" y="2367.50">h..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,771,145 samples, 2.28%)</title><rect x="67.5578%" y="2341" width="2.2770%" height="15" fill="rgb(250,74,19)" fg:x="82218252" fg:w="2771145"/><text x="67.8078%" y="2351.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (2,771,145 samples, 2.28%)</title><rect x="67.5578%" y="2325" width="2.2770%" height="15" fill="rgb(249,42,33)" fg:x="82218252" fg:w="2771145"/><text x="67.8078%" y="2335.50">a..</text></g><g><title>cfree (2,771,145 samples, 2.28%)</title><rect x="67.5578%" y="2309" width="2.2770%" height="15" fill="rgb(242,149,17)" fg:x="82218252" fg:w="2771145"/><text x="67.8078%" y="2319.50">c..</text></g><g><title>benchmark::benchmark_accumulated_modifications (68,836,292 samples, 56.56%)</title><rect x="15.6948%" y="3125" width="56.5620%" height="15" fill="rgb(244,29,21)" fg:x="19100633" fg:w="68836292"/><text x="15.9448%" y="3135.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="3109" width="21.0928%" height="15" fill="rgb(220,130,37)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="3119.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="3093" width="21.0928%" height="15" fill="rgb(211,67,2)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="3103.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="3077" width="21.0928%" height="15" fill="rgb(235,68,52)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="3087.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="3061" width="21.0928%" height="15" fill="rgb(246,142,3)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="3071.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="3045" width="21.0928%" height="15" fill="rgb(241,25,7)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="3055.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="3029" width="21.0928%" height="15" fill="rgb(242,119,39)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="3039.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="3013" width="21.0928%" height="15" fill="rgb(241,98,45)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="3023.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2997" width="21.0928%" height="15" fill="rgb(254,28,30)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="3007.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2981" width="21.0928%" height="15" fill="rgb(241,142,54)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2991.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2965" width="21.0928%" height="15" fill="rgb(222,85,15)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2975.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2949" width="21.0928%" height="15" fill="rgb(210,85,47)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2959.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2933" width="21.0928%" height="15" fill="rgb(224,206,25)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2943.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2917" width="21.0928%" height="15" fill="rgb(243,201,19)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2927.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2901" width="21.0928%" height="15" fill="rgb(236,59,4)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2911.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2885" width="21.0928%" height="15" fill="rgb(254,179,45)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2895.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2869" width="21.0928%" height="15" fill="rgb(226,14,10)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2879.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2853" width="21.0928%" height="15" fill="rgb(244,27,41)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2863.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2837" width="21.0928%" height="15" fill="rgb(235,35,32)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2847.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2821" width="21.0928%" height="15" fill="rgb(218,68,31)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2831.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2805" width="21.0928%" height="15" fill="rgb(207,120,37)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2815.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2789" width="21.0928%" height="15" fill="rgb(227,98,0)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2799.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2773" width="21.0928%" height="15" fill="rgb(207,7,3)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2783.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2757" width="21.0928%" height="15" fill="rgb(206,98,19)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2767.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2741" width="21.0928%" height="15" fill="rgb(217,5,26)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2751.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2725" width="21.0928%" height="15" fill="rgb(235,190,38)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2735.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2709" width="21.0928%" height="15" fill="rgb(247,86,24)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2719.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2693" width="21.0928%" height="15" fill="rgb(205,101,16)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2703.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2677" width="21.0928%" height="15" fill="rgb(246,168,33)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2687.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2661" width="21.0928%" height="15" fill="rgb(231,114,1)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2671.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2645" width="21.0928%" height="15" fill="rgb(207,184,53)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2655.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2629" width="21.0928%" height="15" fill="rgb(224,95,51)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2639.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2613" width="21.0928%" height="15" fill="rgb(212,188,45)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2623.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2597" width="21.0928%" height="15" fill="rgb(223,154,38)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2607.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2581" width="21.0928%" height="15" fill="rgb(251,22,52)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2591.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2565" width="21.0928%" height="15" fill="rgb(229,209,22)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2575.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2549" width="21.0928%" height="15" fill="rgb(234,138,34)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2559.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (25,669,999 samples, 21.09%)</title><rect x="51.1640%" y="2533" width="21.0928%" height="15" fill="rgb(212,95,11)" fg:x="62266926" fg:w="25669999"/><text x="51.4140%" y="2543.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,947,528 samples, 2.42%)</title><rect x="69.8348%" y="2517" width="2.4220%" height="15" fill="rgb(240,179,47)" fg:x="84989397" fg:w="2947528"/><text x="70.0848%" y="2527.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,947,528 samples, 2.42%)</title><rect x="69.8348%" y="2501" width="2.4220%" height="15" fill="rgb(240,163,11)" fg:x="84989397" fg:w="2947528"/><text x="70.0848%" y="2511.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,947,528 samples, 2.42%)</title><rect x="69.8348%" y="2485" width="2.4220%" height="15" fill="rgb(236,37,12)" fg:x="84989397" fg:w="2947528"/><text x="70.0848%" y="2495.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,947,528 samples, 2.42%)</title><rect x="69.8348%" y="2469" width="2.4220%" height="15" fill="rgb(232,164,16)" fg:x="84989397" fg:w="2947528"/><text x="70.0848%" y="2479.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,947,528 samples, 2.42%)</title><rect x="69.8348%" y="2453" width="2.4220%" height="15" fill="rgb(244,205,15)" fg:x="84989397" fg:w="2947528"/><text x="70.0848%" y="2463.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,947,528 samples, 2.42%)</title><rect x="69.8348%" y="2437" width="2.4220%" height="15" fill="rgb(223,117,47)" fg:x="84989397" fg:w="2947528"/><text x="70.0848%" y="2447.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,947,528 samples, 2.42%)</title><rect x="69.8348%" y="2421" width="2.4220%" height="15" fill="rgb(244,107,35)" fg:x="84989397" fg:w="2947528"/><text x="70.0848%" y="2431.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (2,947,528 samples, 2.42%)</title><rect x="69.8348%" y="2405" width="2.4220%" height="15" fill="rgb(205,140,8)" fg:x="84989397" fg:w="2947528"/><text x="70.0848%" y="2415.50">al..</text></g><g><title>cfree (2,947,528 samples, 2.42%)</title><rect x="69.8348%" y="2389" width="2.4220%" height="15" fill="rgb(228,84,46)" fg:x="84989397" fg:w="2947528"/><text x="70.0848%" y="2399.50">cf..</text></g><g><title>[libc.so.6] (2,947,528 samples, 2.42%)</title><rect x="69.8348%" y="2373" width="2.4220%" height="15" fill="rgb(254,188,9)" fg:x="84989397" fg:w="2947528"/><text x="70.0848%" y="2383.50">[l..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,311,265 samples, 1.90%)</title><rect x="72.2568%" y="885" width="1.8991%" height="15" fill="rgb(206,112,54)" fg:x="87936925" fg:w="2311265"/><text x="72.5068%" y="895.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,311,265 samples, 1.90%)</title><rect x="72.2568%" y="869" width="1.8991%" height="15" fill="rgb(216,84,49)" fg:x="87936925" fg:w="2311265"/><text x="72.5068%" y="879.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,311,265 samples, 1.90%)</title><rect x="72.2568%" y="853" width="1.8991%" height="15" fill="rgb(214,194,35)" fg:x="87936925" fg:w="2311265"/><text x="72.5068%" y="863.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,311,265 samples, 1.90%)</title><rect x="72.2568%" y="837" width="1.8991%" height="15" fill="rgb(249,28,3)" fg:x="87936925" fg:w="2311265"/><text x="72.5068%" y="847.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,311,265 samples, 1.90%)</title><rect x="72.2568%" y="821" width="1.8991%" height="15" fill="rgb(222,56,52)" fg:x="87936925" fg:w="2311265"/><text x="72.5068%" y="831.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,311,265 samples, 1.90%)</title><rect x="72.2568%" y="805" width="1.8991%" height="15" fill="rgb(245,217,50)" fg:x="87936925" fg:w="2311265"/><text x="72.5068%" y="815.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,311,265 samples, 1.90%)</title><rect x="72.2568%" y="789" width="1.8991%" height="15" fill="rgb(213,201,24)" fg:x="87936925" fg:w="2311265"/><text x="72.5068%" y="799.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (2,311,265 samples, 1.90%)</title><rect x="72.2568%" y="773" width="1.8991%" height="15" fill="rgb(248,116,28)" fg:x="87936925" fg:w="2311265"/><text x="72.5068%" y="783.50">a..</text></g><g><title>cfree (2,311,265 samples, 1.90%)</title><rect x="72.2568%" y="757" width="1.8991%" height="15" fill="rgb(219,72,43)" fg:x="87936925" fg:w="2311265"/><text x="72.5068%" y="767.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="3109" width="3.4228%" height="15" fill="rgb(209,138,14)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="3119.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="3093" width="3.4228%" height="15" fill="rgb(222,18,33)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="3103.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="3077" width="3.4228%" height="15" fill="rgb(213,199,7)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="3087.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="3061" width="3.4228%" height="15" fill="rgb(250,110,10)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="3071.50">&lt;al..</text></g><g><title>core::mem::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="3045" width="3.4228%" height="15" fill="rgb(248,123,6)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="3055.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="3029" width="3.4228%" height="15" fill="rgb(206,91,31)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="3039.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="3013" width="3.4228%" height="15" fill="rgb(211,154,13)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="3023.50">&lt;al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2997" width="3.4228%" height="15" fill="rgb(225,148,7)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="3007.50">all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2981" width="3.4228%" height="15" fill="rgb(220,160,43)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2991.50">cor..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2965" width="3.4228%" height="15" fill="rgb(213,52,39)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2975.50">&lt;al..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2949" width="3.4228%" height="15" fill="rgb(243,137,7)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2959.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2933" width="3.4228%" height="15" fill="rgb(230,79,13)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2943.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2917" width="3.4228%" height="15" fill="rgb(247,105,23)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2927.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2901" width="3.4228%" height="15" fill="rgb(223,179,41)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2911.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2885" width="3.4228%" height="15" fill="rgb(218,9,34)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2895.50">&lt;al..</text></g><g><title>core::mem::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2869" width="3.4228%" height="15" fill="rgb(222,106,8)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2879.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2853" width="3.4228%" height="15" fill="rgb(211,220,0)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2863.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2837" width="3.4228%" height="15" fill="rgb(229,52,16)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2847.50">&lt;al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2821" width="3.4228%" height="15" fill="rgb(212,155,18)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2831.50">all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2805" width="3.4228%" height="15" fill="rgb(242,21,14)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2815.50">cor..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2789" width="3.4228%" height="15" fill="rgb(222,19,48)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2799.50">&lt;al..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2773" width="3.4228%" height="15" fill="rgb(232,45,27)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2783.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2757" width="3.4228%" height="15" fill="rgb(249,103,42)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2767.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2741" width="3.4228%" height="15" fill="rgb(246,81,33)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2751.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2725" width="3.4228%" height="15" fill="rgb(252,33,42)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2735.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2709" width="3.4228%" height="15" fill="rgb(209,212,41)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2719.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2693" width="3.4228%" height="15" fill="rgb(207,154,6)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2703.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2677" width="3.4228%" height="15" fill="rgb(223,64,47)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2687.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2661" width="3.4228%" height="15" fill="rgb(211,161,38)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2671.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2645" width="3.4228%" height="15" fill="rgb(219,138,40)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2655.50">&lt;al..</text></g><g><title>core::mem::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2629" width="3.4228%" height="15" fill="rgb(241,228,46)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2639.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2613" width="3.4228%" height="15" fill="rgb(223,209,38)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2623.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2597" width="3.4228%" height="15" fill="rgb(236,164,45)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2607.50">&lt;al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2581" width="3.4228%" height="15" fill="rgb(231,15,5)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2591.50">all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2565" width="3.4228%" height="15" fill="rgb(252,35,15)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2575.50">cor..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2549" width="3.4228%" height="15" fill="rgb(248,181,18)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2559.50">&lt;al..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2533" width="3.4228%" height="15" fill="rgb(233,39,42)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2543.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2517" width="3.4228%" height="15" fill="rgb(238,110,33)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2527.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2501" width="3.4228%" height="15" fill="rgb(233,195,10)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2511.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2485" width="3.4228%" height="15" fill="rgb(254,105,3)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2495.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2469" width="3.4228%" height="15" fill="rgb(221,225,9)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2479.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2453" width="3.4228%" height="15" fill="rgb(224,227,45)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2463.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2437" width="3.4228%" height="15" fill="rgb(229,198,43)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2447.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2421" width="3.4228%" height="15" fill="rgb(206,209,35)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2431.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2405" width="3.4228%" height="15" fill="rgb(245,195,53)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2415.50">&lt;al..</text></g><g><title>core::mem::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2389" width="3.4228%" height="15" fill="rgb(240,92,26)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2399.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2373" width="3.4228%" height="15" fill="rgb(207,40,23)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2383.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2357" width="3.4228%" height="15" fill="rgb(223,111,35)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2367.50">&lt;al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2341" width="3.4228%" height="15" fill="rgb(229,147,28)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2351.50">all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2325" width="3.4228%" height="15" fill="rgb(211,29,28)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2335.50">cor..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2309" width="3.4228%" height="15" fill="rgb(228,72,33)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2319.50">&lt;al..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2293" width="3.4228%" height="15" fill="rgb(205,214,31)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2303.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2277" width="3.4228%" height="15" fill="rgb(224,111,15)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2287.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2261" width="3.4228%" height="15" fill="rgb(253,21,26)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2271.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2245" width="3.4228%" height="15" fill="rgb(245,139,43)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2255.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2229" width="3.4228%" height="15" fill="rgb(252,170,7)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2239.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2213" width="3.4228%" height="15" fill="rgb(231,118,14)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2223.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2197" width="3.4228%" height="15" fill="rgb(238,83,0)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2207.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2181" width="3.4228%" height="15" fill="rgb(221,39,39)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2191.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2165" width="3.4228%" height="15" fill="rgb(222,119,46)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2175.50">&lt;al..</text></g><g><title>core::mem::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2149" width="3.4228%" height="15" fill="rgb(222,165,49)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2159.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2133" width="3.4228%" height="15" fill="rgb(219,113,52)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2143.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2117" width="3.4228%" height="15" fill="rgb(214,7,15)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2127.50">&lt;al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2101" width="3.4228%" height="15" fill="rgb(235,32,4)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2111.50">all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2085" width="3.4228%" height="15" fill="rgb(238,90,54)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2095.50">cor..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2069" width="3.4228%" height="15" fill="rgb(213,208,19)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2079.50">&lt;al..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2053" width="3.4228%" height="15" fill="rgb(233,156,4)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2063.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2037" width="3.4228%" height="15" fill="rgb(207,194,5)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2047.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2021" width="3.4228%" height="15" fill="rgb(206,111,30)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2031.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="2005" width="3.4228%" height="15" fill="rgb(243,70,54)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="2015.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1989" width="3.4228%" height="15" fill="rgb(242,28,8)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1999.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1973" width="3.4228%" height="15" fill="rgb(219,106,18)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1983.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1957" width="3.4228%" height="15" fill="rgb(244,222,10)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1967.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1941" width="3.4228%" height="15" fill="rgb(236,179,52)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1951.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1925" width="3.4228%" height="15" fill="rgb(213,23,39)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1935.50">&lt;al..</text></g><g><title>core::mem::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1909" width="3.4228%" height="15" fill="rgb(238,48,10)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1919.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1893" width="3.4228%" height="15" fill="rgb(251,196,23)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1903.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1877" width="3.4228%" height="15" fill="rgb(250,152,24)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1887.50">&lt;al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1861" width="3.4228%" height="15" fill="rgb(209,150,17)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1871.50">all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1845" width="3.4228%" height="15" fill="rgb(234,202,34)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1855.50">cor..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1829" width="3.4228%" height="15" fill="rgb(253,148,53)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1839.50">&lt;al..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1813" width="3.4228%" height="15" fill="rgb(218,129,16)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1823.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1797" width="3.4228%" height="15" fill="rgb(216,85,19)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1807.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1781" width="3.4228%" height="15" fill="rgb(235,228,7)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1791.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1765" width="3.4228%" height="15" fill="rgb(245,175,0)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1775.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1749" width="3.4228%" height="15" fill="rgb(208,168,36)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1759.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1733" width="3.4228%" height="15" fill="rgb(246,171,24)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1743.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1717" width="3.4228%" height="15" fill="rgb(215,142,24)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1727.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1701" width="3.4228%" height="15" fill="rgb(250,187,7)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1711.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1685" width="3.4228%" height="15" fill="rgb(228,66,33)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1695.50">&lt;al..</text></g><g><title>core::mem::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1669" width="3.4228%" height="15" fill="rgb(234,215,21)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1679.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1653" width="3.4228%" height="15" fill="rgb(222,191,20)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1663.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1637" width="3.4228%" height="15" fill="rgb(245,79,54)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1647.50">&lt;al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1621" width="3.4228%" height="15" fill="rgb(240,10,37)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1631.50">all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1605" width="3.4228%" height="15" fill="rgb(214,192,32)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1615.50">cor..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1589" width="3.4228%" height="15" fill="rgb(209,36,54)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1599.50">&lt;al..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1573" width="3.4228%" height="15" fill="rgb(220,10,11)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1583.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1557" width="3.4228%" height="15" fill="rgb(221,106,17)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1567.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1541" width="3.4228%" height="15" fill="rgb(251,142,44)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1551.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1525" width="3.4228%" height="15" fill="rgb(238,13,15)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1535.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1509" width="3.4228%" height="15" fill="rgb(208,107,27)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1519.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1493" width="3.4228%" height="15" fill="rgb(205,136,37)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1503.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1477" width="3.4228%" height="15" fill="rgb(250,205,27)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1487.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1461" width="3.4228%" height="15" fill="rgb(210,80,43)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1471.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1445" width="3.4228%" height="15" fill="rgb(247,160,36)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1455.50">&lt;al..</text></g><g><title>core::mem::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1429" width="3.4228%" height="15" fill="rgb(234,13,49)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1439.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1413" width="3.4228%" height="15" fill="rgb(234,122,0)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1423.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1397" width="3.4228%" height="15" fill="rgb(207,146,38)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1407.50">&lt;al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1381" width="3.4228%" height="15" fill="rgb(207,177,25)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1391.50">all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1365" width="3.4228%" height="15" fill="rgb(211,178,42)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1375.50">cor..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1349" width="3.4228%" height="15" fill="rgb(230,69,54)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1359.50">&lt;al..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1333" width="3.4228%" height="15" fill="rgb(214,135,41)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1343.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1317" width="3.4228%" height="15" fill="rgb(237,67,25)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1327.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1301" width="3.4228%" height="15" fill="rgb(222,189,50)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1311.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1285" width="3.4228%" height="15" fill="rgb(245,148,34)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1295.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1269" width="3.4228%" height="15" fill="rgb(222,29,6)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1279.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1253" width="3.4228%" height="15" fill="rgb(221,189,43)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1263.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1237" width="3.4228%" height="15" fill="rgb(207,36,27)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1247.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1221" width="3.4228%" height="15" fill="rgb(217,90,24)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1231.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1205" width="3.4228%" height="15" fill="rgb(224,66,35)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1215.50">&lt;al..</text></g><g><title>core::mem::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1189" width="3.4228%" height="15" fill="rgb(221,13,50)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1199.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1173" width="3.4228%" height="15" fill="rgb(236,68,49)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1183.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1157" width="3.4228%" height="15" fill="rgb(229,146,28)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1167.50">&lt;al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1141" width="3.4228%" height="15" fill="rgb(225,31,38)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1151.50">all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1125" width="3.4228%" height="15" fill="rgb(250,208,3)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1135.50">cor..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1109" width="3.4228%" height="15" fill="rgb(246,54,23)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1119.50">&lt;al..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1093" width="3.4228%" height="15" fill="rgb(243,76,11)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1103.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1077" width="3.4228%" height="15" fill="rgb(245,21,50)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1087.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1061" width="3.4228%" height="15" fill="rgb(228,9,43)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1071.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1045" width="3.4228%" height="15" fill="rgb(208,100,47)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1055.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1029" width="3.4228%" height="15" fill="rgb(232,26,8)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1039.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="1013" width="3.4228%" height="15" fill="rgb(216,166,38)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1023.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="997" width="3.4228%" height="15" fill="rgb(251,202,51)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="1007.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="981" width="3.4228%" height="15" fill="rgb(254,216,34)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="991.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="965" width="3.4228%" height="15" fill="rgb(251,32,27)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="975.50">&lt;al..</text></g><g><title>core::mem::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="949" width="3.4228%" height="15" fill="rgb(208,127,28)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="959.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="933" width="3.4228%" height="15" fill="rgb(224,137,22)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="943.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="917" width="3.4228%" height="15" fill="rgb(254,70,32)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="927.50">&lt;al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,165,553 samples, 3.42%)</title><rect x="72.2568%" y="901" width="3.4228%" height="15" fill="rgb(229,75,37)" fg:x="87936925" fg:w="4165553"/><text x="72.5068%" y="911.50">all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="885" width="1.5236%" height="15" fill="rgb(252,64,23)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="869" width="1.5236%" height="15" fill="rgb(232,162,48)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="853" width="1.5236%" height="15" fill="rgb(246,160,12)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="837" width="1.5236%" height="15" fill="rgb(247,166,0)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="821" width="1.5236%" height="15" fill="rgb(249,219,21)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="805" width="1.5236%" height="15" fill="rgb(205,209,3)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="789" width="1.5236%" height="15" fill="rgb(243,44,1)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="773" width="1.5236%" height="15" fill="rgb(206,159,16)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="757" width="1.5236%" height="15" fill="rgb(244,77,30)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="741" width="1.5236%" height="15" fill="rgb(218,69,12)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="725" width="1.5236%" height="15" fill="rgb(212,87,7)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="735.50"></text></g><g><title>core::mem::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="709" width="1.5236%" height="15" fill="rgb(245,114,25)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="693" width="1.5236%" height="15" fill="rgb(210,61,42)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="677" width="1.5236%" height="15" fill="rgb(211,52,33)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="661" width="1.5236%" height="15" fill="rgb(234,58,33)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="645" width="1.5236%" height="15" fill="rgb(220,115,36)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="629" width="1.5236%" height="15" fill="rgb(243,153,54)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="639.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="613" width="1.5236%" height="15" fill="rgb(251,47,18)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="597" width="1.5236%" height="15" fill="rgb(242,102,42)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="581" width="1.5236%" height="15" fill="rgb(234,31,38)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="565" width="1.5236%" height="15" fill="rgb(221,117,51)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="549" width="1.5236%" height="15" fill="rgb(212,20,18)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="533" width="1.5236%" height="15" fill="rgb(245,133,36)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="517" width="1.5236%" height="15" fill="rgb(212,6,19)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="501" width="1.5236%" height="15" fill="rgb(218,1,36)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="485" width="1.5236%" height="15" fill="rgb(246,84,54)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="495.50"></text></g><g><title>core::mem::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="469" width="1.5236%" height="15" fill="rgb(242,110,6)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="453" width="1.5236%" height="15" fill="rgb(214,47,5)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="437" width="1.5236%" height="15" fill="rgb(218,159,25)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="421" width="1.5236%" height="15" fill="rgb(215,211,28)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="405" width="1.5236%" height="15" fill="rgb(238,59,32)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="389" width="1.5236%" height="15" fill="rgb(226,82,3)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="399.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="373" width="1.5236%" height="15" fill="rgb(240,164,32)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="357" width="1.5236%" height="15" fill="rgb(232,46,7)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="341" width="1.5236%" height="15" fill="rgb(229,129,53)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="325" width="1.5236%" height="15" fill="rgb(234,188,29)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="309" width="1.5236%" height="15" fill="rgb(246,141,4)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="293" width="1.5236%" height="15" fill="rgb(229,23,39)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="277" width="1.5236%" height="15" fill="rgb(206,12,3)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="261" width="1.5236%" height="15" fill="rgb(252,226,20)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="245" width="1.5236%" height="15" fill="rgb(216,123,35)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="255.50"></text></g><g><title>core::mem::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="229" width="1.5236%" height="15" fill="rgb(212,68,40)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="213" width="1.5236%" height="15" fill="rgb(254,125,32)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="197" width="1.5236%" height="15" fill="rgb(253,97,22)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="207.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="181" width="1.5236%" height="15" fill="rgb(241,101,14)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="191.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="165" width="1.5236%" height="15" fill="rgb(238,103,29)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="149" width="1.5236%" height="15" fill="rgb(233,195,47)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="133" width="1.5236%" height="15" fill="rgb(246,218,30)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="117" width="1.5236%" height="15" fill="rgb(219,145,47)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="101" width="1.5236%" height="15" fill="rgb(243,12,26)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="85" width="1.5236%" height="15" fill="rgb(214,87,16)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="69" width="1.5236%" height="15" fill="rgb(208,99,42)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="79.50"></text></g><g><title>alloc::alloc::dealloc (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="53" width="1.5236%" height="15" fill="rgb(253,99,2)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="63.50"></text></g><g><title>cfree (1,854,288 samples, 1.52%)</title><rect x="74.1559%" y="37" width="1.5236%" height="15" fill="rgb(220,168,23)" fg:x="90248190" fg:w="1854288"/><text x="74.4059%" y="47.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,246,524 samples, 1.02%)</title><rect x="75.6796%" y="2677" width="1.0243%" height="15" fill="rgb(242,38,24)" fg:x="92102478" fg:w="1246524"/><text x="75.9296%" y="2687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,246,524 samples, 1.02%)</title><rect x="75.6796%" y="2661" width="1.0243%" height="15" fill="rgb(225,182,9)" fg:x="92102478" fg:w="1246524"/><text x="75.9296%" y="2671.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,246,524 samples, 1.02%)</title><rect x="75.6796%" y="2645" width="1.0243%" height="15" fill="rgb(243,178,37)" fg:x="92102478" fg:w="1246524"/><text x="75.9296%" y="2655.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,246,524 samples, 1.02%)</title><rect x="75.6796%" y="2629" width="1.0243%" height="15" fill="rgb(232,139,19)" fg:x="92102478" fg:w="1246524"/><text x="75.9296%" y="2639.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,246,524 samples, 1.02%)</title><rect x="75.6796%" y="2613" width="1.0243%" height="15" fill="rgb(225,201,24)" fg:x="92102478" fg:w="1246524"/><text x="75.9296%" y="2623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,246,524 samples, 1.02%)</title><rect x="75.6796%" y="2597" width="1.0243%" height="15" fill="rgb(221,47,46)" fg:x="92102478" fg:w="1246524"/><text x="75.9296%" y="2607.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,072,742 samples, 2.52%)</title><rect x="76.7038%" y="997" width="2.5248%" height="15" fill="rgb(249,23,13)" fg:x="93349002" fg:w="3072742"/><text x="76.9538%" y="1007.50">&lt;c..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (3,072,742 samples, 2.52%)</title><rect x="76.7038%" y="981" width="2.5248%" height="15" fill="rgb(219,9,5)" fg:x="93349002" fg:w="3072742"/><text x="76.9538%" y="991.50">se..</text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (3,072,742 samples, 2.52%)</title><rect x="76.7038%" y="965" width="2.5248%" height="15" fill="rgb(254,171,16)" fg:x="93349002" fg:w="3072742"/><text x="76.9538%" y="975.50">&lt;s..</text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,072,742 samples, 2.52%)</title><rect x="76.7038%" y="949" width="2.5248%" height="15" fill="rgb(230,171,20)" fg:x="93349002" fg:w="3072742"/><text x="76.9538%" y="959.50">&lt;s..</text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3,072,742 samples, 2.52%)</title><rect x="76.7038%" y="933" width="2.5248%" height="15" fill="rgb(210,71,41)" fg:x="93349002" fg:w="3072742"/><text x="76.9538%" y="943.50">&lt;s..</text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (3,072,742 samples, 2.52%)</title><rect x="76.7038%" y="917" width="2.5248%" height="15" fill="rgb(206,173,20)" fg:x="93349002" fg:w="3072742"/><text x="76.9538%" y="927.50">se..</text></g><g><title>serde_json::read::SliceRead::skip_to_escape (3,072,742 samples, 2.52%)</title><rect x="76.7038%" y="901" width="2.5248%" height="15" fill="rgb(233,88,34)" fg:x="93349002" fg:w="3072742"/><text x="76.9538%" y="911.50">se..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5,239,163 samples, 4.30%)</title><rect x="76.7038%" y="1013" width="4.3050%" height="15" fill="rgb(223,209,46)" fg:x="93349002" fg:w="5239163"/><text x="76.9538%" y="1023.50">&lt;serd..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (2,166,421 samples, 1.78%)</title><rect x="79.2287%" y="997" width="1.7801%" height="15" fill="rgb(250,43,18)" fg:x="96421744" fg:w="2166421"/><text x="79.4787%" y="1007.50">&lt;..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (529,857 samples, 0.44%)</title><rect x="81.0088%" y="837" width="0.4354%" height="15" fill="rgb(208,13,10)" fg:x="98588165" fg:w="529857"/><text x="81.2588%" y="847.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (529,857 samples, 0.44%)</title><rect x="81.0088%" y="821" width="0.4354%" height="15" fill="rgb(212,200,36)" fg:x="98588165" fg:w="529857"/><text x="81.2588%" y="831.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (529,857 samples, 0.44%)</title><rect x="81.0088%" y="805" width="0.4354%" height="15" fill="rgb(225,90,30)" fg:x="98588165" fg:w="529857"/><text x="81.2588%" y="815.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (529,857 samples, 0.44%)</title><rect x="81.0088%" y="789" width="0.4354%" height="15" fill="rgb(236,182,39)" fg:x="98588165" fg:w="529857"/><text x="81.2588%" y="799.50"></text></g><g><title>malloc (529,857 samples, 0.44%)</title><rect x="81.0088%" y="773" width="0.4354%" height="15" fill="rgb(212,144,35)" fg:x="98588165" fg:w="529857"/><text x="81.2588%" y="783.50"></text></g><g><title>[libc.so.6] (529,857 samples, 0.44%)</title><rect x="81.0088%" y="757" width="0.4354%" height="15" fill="rgb(228,63,44)" fg:x="98588165" fg:w="529857"/><text x="81.2588%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,356,186 samples, 2.76%)</title><rect x="81.0088%" y="949" width="2.7577%" height="15" fill="rgb(228,109,6)" fg:x="98588165" fg:w="3356186"/><text x="81.2588%" y="959.50">&lt;s..</text></g><g><title>serde::de::SeqAccess::next_element (3,356,186 samples, 2.76%)</title><rect x="81.0088%" y="933" width="2.7577%" height="15" fill="rgb(238,117,24)" fg:x="98588165" fg:w="3356186"/><text x="81.2588%" y="943.50">se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3,356,186 samples, 2.76%)</title><rect x="81.0088%" y="917" width="2.7577%" height="15" fill="rgb(242,26,26)" fg:x="98588165" fg:w="3356186"/><text x="81.2588%" y="927.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,356,186 samples, 2.76%)</title><rect x="81.0088%" y="901" width="2.7577%" height="15" fill="rgb(221,92,48)" fg:x="98588165" fg:w="3356186"/><text x="81.2588%" y="911.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,356,186 samples, 2.76%)</title><rect x="81.0088%" y="885" width="2.7577%" height="15" fill="rgb(209,209,32)" fg:x="98588165" fg:w="3356186"/><text x="81.2588%" y="895.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,356,186 samples, 2.76%)</title><rect x="81.0088%" y="869" width="2.7577%" height="15" fill="rgb(221,70,22)" fg:x="98588165" fg:w="3356186"/><text x="81.2588%" y="879.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,356,186 samples, 2.76%)</title><rect x="81.0088%" y="853" width="2.7577%" height="15" fill="rgb(248,145,5)" fg:x="98588165" fg:w="3356186"/><text x="81.2588%" y="863.50">&lt;s..</text></g><g><title>serde::de::MapAccess::next_entry (2,826,329 samples, 2.32%)</title><rect x="81.4442%" y="837" width="2.3224%" height="15" fill="rgb(226,116,26)" fg:x="99118022" fg:w="2826329"/><text x="81.6942%" y="847.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (2,826,329 samples, 2.32%)</title><rect x="81.4442%" y="821" width="2.3224%" height="15" fill="rgb(244,5,17)" fg:x="99118022" fg:w="2826329"/><text x="81.6942%" y="831.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,826,329 samples, 2.32%)</title><rect x="81.4442%" y="805" width="2.3224%" height="15" fill="rgb(252,159,33)" fg:x="99118022" fg:w="2826329"/><text x="81.6942%" y="815.50">&lt;..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (2,826,329 samples, 2.32%)</title><rect x="81.4442%" y="789" width="2.3224%" height="15" fill="rgb(206,71,0)" fg:x="99118022" fg:w="2826329"/><text x="81.6942%" y="799.50">&lt;..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (2,826,329 samples, 2.32%)</title><rect x="81.4442%" y="773" width="2.3224%" height="15" fill="rgb(233,118,54)" fg:x="99118022" fg:w="2826329"/><text x="81.6942%" y="783.50">s..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (2,826,329 samples, 2.32%)</title><rect x="81.4442%" y="757" width="2.3224%" height="15" fill="rgb(234,83,48)" fg:x="99118022" fg:w="2826329"/><text x="81.6942%" y="767.50">s..</text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (2,826,329 samples, 2.32%)</title><rect x="81.4442%" y="741" width="2.3224%" height="15" fill="rgb(228,3,54)" fg:x="99118022" fg:w="2826329"/><text x="81.6942%" y="751.50">&lt;..</text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (2,826,329 samples, 2.32%)</title><rect x="81.4442%" y="725" width="2.3224%" height="15" fill="rgb(226,155,13)" fg:x="99118022" fg:w="2826329"/><text x="81.6942%" y="735.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="3029" width="10.3000%" height="15" fill="rgb(241,28,37)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="3039.50">serde::de::MapA..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="3013" width="10.3000%" height="15" fill="rgb(233,93,10)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="3023.50">serde::de::MapA..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2997" width="10.3000%" height="15" fill="rgb(225,113,19)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="3007.50">&lt;serde_json::de..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2981" width="10.3000%" height="15" fill="rgb(241,2,18)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2991.50">&lt;core::marker::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2965" width="10.3000%" height="15" fill="rgb(228,207,21)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2975.50">serde_json::val..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2949" width="10.3000%" height="15" fill="rgb(213,211,35)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2959.50">&lt;&amp;mut serde_jso..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2933" width="10.3000%" height="15" fill="rgb(209,83,10)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2943.50">&lt;serde_json::va..</text></g><g><title>serde::de::MapAccess::next_entry (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2917" width="10.3000%" height="15" fill="rgb(209,164,1)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2927.50">serde::de::MapA..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2901" width="10.3000%" height="15" fill="rgb(213,184,43)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2911.50">serde::de::MapA..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2885" width="10.3000%" height="15" fill="rgb(231,61,34)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2895.50">&lt;serde_json::de..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2869" width="10.3000%" height="15" fill="rgb(235,75,3)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2879.50">&lt;core::marker::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2853" width="10.3000%" height="15" fill="rgb(220,106,47)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2863.50">serde_json::val..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2837" width="10.3000%" height="15" fill="rgb(210,196,33)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2847.50">&lt;&amp;mut serde_jso..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2821" width="10.3000%" height="15" fill="rgb(229,154,42)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2831.50">&lt;serde_json::va..</text></g><g><title>serde::de::SeqAccess::next_element (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2805" width="10.3000%" height="15" fill="rgb(228,114,26)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2815.50">serde::de::SeqA..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2789" width="10.3000%" height="15" fill="rgb(208,144,1)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2799.50">&lt;serde_json::de..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2773" width="10.3000%" height="15" fill="rgb(239,112,37)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2783.50">&lt;core::marker::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2757" width="10.3000%" height="15" fill="rgb(210,96,50)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2767.50">serde_json::val..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2741" width="10.3000%" height="15" fill="rgb(222,178,2)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2751.50">&lt;&amp;mut serde_jso..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2725" width="10.3000%" height="15" fill="rgb(226,74,18)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2735.50">&lt;serde_json::va..</text></g><g><title>serde::de::MapAccess::next_entry (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2709" width="10.3000%" height="15" fill="rgb(225,67,54)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2719.50">serde::de::MapA..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,535,114 samples, 10.30%)</title><rect x="75.6796%" y="2693" width="10.3000%" height="15" fill="rgb(251,92,32)" fg:x="92102478" fg:w="12535114"/><text x="75.9296%" y="2703.50">serde::de::MapA..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2677" width="9.2757%" height="15" fill="rgb(228,149,22)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2687.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2661" width="9.2757%" height="15" fill="rgb(243,54,13)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2671.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2645" width="9.2757%" height="15" fill="rgb(243,180,28)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2655.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2629" width="9.2757%" height="15" fill="rgb(208,167,24)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2639.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2613" width="9.2757%" height="15" fill="rgb(245,73,45)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2623.50">&lt;serde_json::..</text></g><g><title>serde::de::SeqAccess::next_element (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2597" width="9.2757%" height="15" fill="rgb(237,203,48)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2607.50">serde::de::Se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2581" width="9.2757%" height="15" fill="rgb(211,197,16)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2591.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2565" width="9.2757%" height="15" fill="rgb(243,99,51)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2575.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2549" width="9.2757%" height="15" fill="rgb(215,123,29)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2559.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2533" width="9.2757%" height="15" fill="rgb(239,186,37)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2543.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2517" width="9.2757%" height="15" fill="rgb(252,136,39)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2527.50">&lt;serde_json::..</text></g><g><title>serde::de::MapAccess::next_entry (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2501" width="9.2757%" height="15" fill="rgb(223,213,32)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2511.50">serde::de::Ma..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2485" width="9.2757%" height="15" fill="rgb(233,115,5)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2495.50">serde::de::Ma..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2469" width="9.2757%" height="15" fill="rgb(207,226,44)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2479.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2453" width="9.2757%" height="15" fill="rgb(208,126,0)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2463.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2437" width="9.2757%" height="15" fill="rgb(244,66,21)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2447.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2421" width="9.2757%" height="15" fill="rgb(222,97,12)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2431.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2405" width="9.2757%" height="15" fill="rgb(219,213,19)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2415.50">&lt;serde_json::..</text></g><g><title>serde::de::SeqAccess::next_element (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2389" width="9.2757%" height="15" fill="rgb(252,169,30)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2399.50">serde::de::Se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2373" width="9.2757%" height="15" fill="rgb(206,32,51)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2383.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2357" width="9.2757%" height="15" fill="rgb(250,172,42)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2367.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2341" width="9.2757%" height="15" fill="rgb(209,34,43)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2351.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2325" width="9.2757%" height="15" fill="rgb(223,11,35)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2335.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2309" width="9.2757%" height="15" fill="rgb(251,219,26)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2319.50">&lt;serde_json::..</text></g><g><title>serde::de::MapAccess::next_entry (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2293" width="9.2757%" height="15" fill="rgb(231,119,3)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2303.50">serde::de::Ma..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2277" width="9.2757%" height="15" fill="rgb(216,97,11)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2287.50">serde::de::Ma..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2261" width="9.2757%" height="15" fill="rgb(223,59,9)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2271.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2245" width="9.2757%" height="15" fill="rgb(233,93,31)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2255.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2229" width="9.2757%" height="15" fill="rgb(239,81,33)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2239.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2213" width="9.2757%" height="15" fill="rgb(213,120,34)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2223.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2197" width="9.2757%" height="15" fill="rgb(243,49,53)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2207.50">&lt;serde_json::..</text></g><g><title>serde::de::SeqAccess::next_element (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2181" width="9.2757%" height="15" fill="rgb(247,216,33)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2191.50">serde::de::Se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2165" width="9.2757%" height="15" fill="rgb(226,26,14)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2175.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2149" width="9.2757%" height="15" fill="rgb(215,49,53)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2159.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2133" width="9.2757%" height="15" fill="rgb(245,162,40)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2143.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2117" width="9.2757%" height="15" fill="rgb(229,68,17)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2127.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2101" width="9.2757%" height="15" fill="rgb(213,182,10)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2111.50">&lt;serde_json::..</text></g><g><title>serde::de::MapAccess::next_entry (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2085" width="9.2757%" height="15" fill="rgb(245,125,30)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2095.50">serde::de::Ma..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2069" width="9.2757%" height="15" fill="rgb(232,202,2)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2079.50">serde::de::Ma..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2053" width="9.2757%" height="15" fill="rgb(237,140,51)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2063.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2037" width="9.2757%" height="15" fill="rgb(236,157,25)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2047.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2021" width="9.2757%" height="15" fill="rgb(219,209,0)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2031.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="2005" width="9.2757%" height="15" fill="rgb(240,116,54)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="2015.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1989" width="9.2757%" height="15" fill="rgb(216,10,36)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1999.50">&lt;serde_json::..</text></g><g><title>serde::de::SeqAccess::next_element (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1973" width="9.2757%" height="15" fill="rgb(222,72,44)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1983.50">serde::de::Se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1957" width="9.2757%" height="15" fill="rgb(232,159,9)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1967.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1941" width="9.2757%" height="15" fill="rgb(210,39,32)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1951.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1925" width="9.2757%" height="15" fill="rgb(216,194,45)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1935.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1909" width="9.2757%" height="15" fill="rgb(218,18,35)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1919.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1893" width="9.2757%" height="15" fill="rgb(207,83,51)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1903.50">&lt;serde_json::..</text></g><g><title>serde::de::MapAccess::next_entry (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1877" width="9.2757%" height="15" fill="rgb(225,63,43)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1887.50">serde::de::Ma..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1861" width="9.2757%" height="15" fill="rgb(207,57,36)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1871.50">serde::de::Ma..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1845" width="9.2757%" height="15" fill="rgb(216,99,33)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1855.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1829" width="9.2757%" height="15" fill="rgb(225,42,16)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1839.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1813" width="9.2757%" height="15" fill="rgb(220,201,45)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1823.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1797" width="9.2757%" height="15" fill="rgb(225,33,4)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1807.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1781" width="9.2757%" height="15" fill="rgb(224,33,50)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1791.50">&lt;serde_json::..</text></g><g><title>serde::de::SeqAccess::next_element (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1765" width="9.2757%" height="15" fill="rgb(246,198,51)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1775.50">serde::de::Se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1749" width="9.2757%" height="15" fill="rgb(205,22,4)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1759.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1733" width="9.2757%" height="15" fill="rgb(206,3,8)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1743.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1717" width="9.2757%" height="15" fill="rgb(251,23,15)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1727.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1701" width="9.2757%" height="15" fill="rgb(252,88,28)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1711.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1685" width="9.2757%" height="15" fill="rgb(212,127,14)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1695.50">&lt;serde_json::..</text></g><g><title>serde::de::MapAccess::next_entry (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1669" width="9.2757%" height="15" fill="rgb(247,145,37)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1679.50">serde::de::Ma..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1653" width="9.2757%" height="15" fill="rgb(209,117,53)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1663.50">serde::de::Ma..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1637" width="9.2757%" height="15" fill="rgb(212,90,42)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1647.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1621" width="9.2757%" height="15" fill="rgb(218,164,37)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1631.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1605" width="9.2757%" height="15" fill="rgb(246,65,34)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1615.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1589" width="9.2757%" height="15" fill="rgb(231,100,33)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1599.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1573" width="9.2757%" height="15" fill="rgb(228,126,14)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1583.50">&lt;serde_json::..</text></g><g><title>serde::de::SeqAccess::next_element (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1557" width="9.2757%" height="15" fill="rgb(215,173,21)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1567.50">serde::de::Se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1541" width="9.2757%" height="15" fill="rgb(210,6,40)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1551.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1525" width="9.2757%" height="15" fill="rgb(212,48,18)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1535.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1509" width="9.2757%" height="15" fill="rgb(230,214,11)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1519.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1493" width="9.2757%" height="15" fill="rgb(254,105,39)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1503.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1477" width="9.2757%" height="15" fill="rgb(245,158,5)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1487.50">&lt;serde_json::..</text></g><g><title>serde::de::MapAccess::next_entry (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1461" width="9.2757%" height="15" fill="rgb(249,208,11)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1471.50">serde::de::Ma..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1445" width="9.2757%" height="15" fill="rgb(210,39,28)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1455.50">serde::de::Ma..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1429" width="9.2757%" height="15" fill="rgb(211,56,53)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1439.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1413" width="9.2757%" height="15" fill="rgb(226,201,30)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1423.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1397" width="9.2757%" height="15" fill="rgb(239,101,34)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1407.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1381" width="9.2757%" height="15" fill="rgb(226,209,5)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1391.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1365" width="9.2757%" height="15" fill="rgb(250,105,47)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1375.50">&lt;serde_json::..</text></g><g><title>serde::de::SeqAccess::next_element (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1349" width="9.2757%" height="15" fill="rgb(230,72,3)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1359.50">serde::de::Se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1333" width="9.2757%" height="15" fill="rgb(232,218,39)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1343.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1317" width="9.2757%" height="15" fill="rgb(248,166,6)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1327.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1301" width="9.2757%" height="15" fill="rgb(247,89,20)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1311.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1285" width="9.2757%" height="15" fill="rgb(248,130,54)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1295.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1269" width="9.2757%" height="15" fill="rgb(234,196,4)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1279.50">&lt;serde_json::..</text></g><g><title>serde::de::MapAccess::next_entry (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1253" width="9.2757%" height="15" fill="rgb(250,143,31)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1263.50">serde::de::Ma..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1237" width="9.2757%" height="15" fill="rgb(211,110,34)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1247.50">serde::de::Ma..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1221" width="9.2757%" height="15" fill="rgb(215,124,48)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1231.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1205" width="9.2757%" height="15" fill="rgb(216,46,13)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1215.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1189" width="9.2757%" height="15" fill="rgb(205,184,25)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1199.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1173" width="9.2757%" height="15" fill="rgb(228,1,10)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1183.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1157" width="9.2757%" height="15" fill="rgb(213,116,27)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1167.50">&lt;serde_json::..</text></g><g><title>serde::de::SeqAccess::next_element (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1141" width="9.2757%" height="15" fill="rgb(241,95,50)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1151.50">serde::de::Se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1125" width="9.2757%" height="15" fill="rgb(238,48,32)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1135.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1109" width="9.2757%" height="15" fill="rgb(235,113,49)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1119.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1093" width="9.2757%" height="15" fill="rgb(205,127,43)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1103.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1077" width="9.2757%" height="15" fill="rgb(250,162,2)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1087.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1061" width="9.2757%" height="15" fill="rgb(220,13,41)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1071.50">&lt;serde_json::..</text></g><g><title>serde::de::MapAccess::next_entry (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1045" width="9.2757%" height="15" fill="rgb(249,221,25)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1055.50">serde::de::Ma..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,288,590 samples, 9.28%)</title><rect x="76.7038%" y="1029" width="9.2757%" height="15" fill="rgb(215,208,19)" fg:x="93349002" fg:w="11288590"/><text x="76.9538%" y="1039.50">serde::de::Ma..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,049,427 samples, 4.97%)</title><rect x="81.0088%" y="1013" width="4.9707%" height="15" fill="rgb(236,175,2)" fg:x="98588165" fg:w="6049427"/><text x="81.2588%" y="1023.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,049,427 samples, 4.97%)</title><rect x="81.0088%" y="997" width="4.9707%" height="15" fill="rgb(241,52,2)" fg:x="98588165" fg:w="6049427"/><text x="81.2588%" y="1007.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,049,427 samples, 4.97%)</title><rect x="81.0088%" y="981" width="4.9707%" height="15" fill="rgb(248,140,14)" fg:x="98588165" fg:w="6049427"/><text x="81.2588%" y="991.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,049,427 samples, 4.97%)</title><rect x="81.0088%" y="965" width="4.9707%" height="15" fill="rgb(253,22,42)" fg:x="98588165" fg:w="6049427"/><text x="81.2588%" y="975.50">&lt;&amp;mut ..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="949" width="2.2130%" height="15" fill="rgb(234,61,47)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="959.50">s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="933" width="2.2130%" height="15" fill="rgb(208,226,15)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="943.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="917" width="2.2130%" height="15" fill="rgb(217,221,4)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="927.50">&lt;..</text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="901" width="2.2130%" height="15" fill="rgb(212,174,34)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="911.50">a..</text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="885" width="2.2130%" height="15" fill="rgb(253,83,4)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="895.50">a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="869" width="2.2130%" height="15" fill="rgb(250,195,49)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="879.50">a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="853" width="2.2130%" height="15" fill="rgb(241,192,25)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="863.50">a..</text></g><g><title>alloc::slice::hack::to_vec (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="837" width="2.2130%" height="15" fill="rgb(208,124,10)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="847.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="821" width="2.2130%" height="15" fill="rgb(222,33,0)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="831.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="805" width="2.2130%" height="15" fill="rgb(234,209,28)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="815.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="789" width="2.2130%" height="15" fill="rgb(224,11,23)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="799.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="773" width="2.2130%" height="15" fill="rgb(232,99,1)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="783.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="757" width="2.2130%" height="15" fill="rgb(237,95,45)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="767.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="741" width="2.2130%" height="15" fill="rgb(208,109,11)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="751.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="725" width="2.2130%" height="15" fill="rgb(216,190,48)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="735.50">a..</text></g><g><title>alloc::alloc::alloc (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="709" width="2.2130%" height="15" fill="rgb(251,171,36)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="719.50">a..</text></g><g><title>malloc (2,693,241 samples, 2.21%)</title><rect x="83.7665%" y="693" width="2.2130%" height="15" fill="rgb(230,62,22)" fg:x="101944351" fg:w="2693241"/><text x="84.0165%" y="703.50">m..</text></g><g><title>benchmark::parse_web_layout_trace (19,733,526 samples, 16.21%)</title><rect x="72.2568%" y="3125" width="16.2148%" height="15" fill="rgb(225,114,35)" fg:x="87936925" fg:w="19733526"/><text x="72.5068%" y="3135.50">benchmark::parse_web_layo..</text></g><g><title>serde_json::de::from_str (15,567,973 samples, 12.79%)</title><rect x="75.6796%" y="3109" width="12.7920%" height="15" fill="rgb(215,118,42)" fg:x="92102478" fg:w="15567973"/><text x="75.9296%" y="3119.50">serde_json::de::fro..</text></g><g><title>serde_json::de::from_trait (15,567,973 samples, 12.79%)</title><rect x="75.6796%" y="3093" width="12.7920%" height="15" fill="rgb(243,119,21)" fg:x="92102478" fg:w="15567973"/><text x="75.9296%" y="3103.50">serde_json::de::fro..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,567,973 samples, 12.79%)</title><rect x="75.6796%" y="3077" width="12.7920%" height="15" fill="rgb(252,177,53)" fg:x="92102478" fg:w="15567973"/><text x="75.9296%" y="3087.50">serde_json::value::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,567,973 samples, 12.79%)</title><rect x="75.6796%" y="3061" width="12.7920%" height="15" fill="rgb(237,209,29)" fg:x="92102478" fg:w="15567973"/><text x="75.9296%" y="3071.50">&lt;&amp;mut serde_json::d..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15,567,973 samples, 12.79%)</title><rect x="75.6796%" y="3045" width="12.7920%" height="15" fill="rgb(212,65,23)" fg:x="92102478" fg:w="15567973"/><text x="75.9296%" y="3055.50">&lt;serde_json::value:..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (3,032,859 samples, 2.49%)</title><rect x="85.9796%" y="3029" width="2.4921%" height="15" fill="rgb(230,222,46)" fg:x="104637592" fg:w="3032859"/><text x="86.2296%" y="3039.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3,032,859 samples, 2.49%)</title><rect x="85.9796%" y="3013" width="2.4921%" height="15" fill="rgb(215,135,32)" fg:x="104637592" fg:w="3032859"/><text x="86.2296%" y="3023.50">al..</text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3,032,859 samples, 2.49%)</title><rect x="85.9796%" y="2997" width="2.4921%" height="15" fill="rgb(246,101,22)" fg:x="104637592" fg:w="3032859"/><text x="86.2296%" y="3007.50">al..</text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (3,032,859 samples, 2.49%)</title><rect x="85.9796%" y="2981" width="2.4921%" height="15" fill="rgb(206,107,13)" fg:x="104637592" fg:w="3032859"/><text x="86.2296%" y="2991.50">al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3,032,859 samples, 2.49%)</title><rect x="85.9796%" y="2965" width="2.4921%" height="15" fill="rgb(250,100,44)" fg:x="104637592" fg:w="3032859"/><text x="86.2296%" y="2975.50">al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (3,032,859 samples, 2.49%)</title><rect x="85.9796%" y="2949" width="2.4921%" height="15" fill="rgb(231,147,38)" fg:x="104637592" fg:w="3032859"/><text x="86.2296%" y="2959.50">al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (3,032,859 samples, 2.49%)</title><rect x="85.9796%" y="2933" width="2.4921%" height="15" fill="rgb(229,8,40)" fg:x="104637592" fg:w="3032859"/><text x="86.2296%" y="2943.50">al..</text></g><g><title>alloc::collections::btree::node::slice_insert (3,032,859 samples, 2.49%)</title><rect x="85.9796%" y="2917" width="2.4921%" height="15" fill="rgb(221,135,30)" fg:x="104637592" fg:w="3032859"/><text x="86.2296%" y="2927.50">al..</text></g><g><title>core::intrinsics::copy (3,032,859 samples, 2.49%)</title><rect x="85.9796%" y="2901" width="2.4921%" height="15" fill="rgb(249,193,18)" fg:x="104637592" fg:w="3032859"/><text x="86.2296%" y="2911.50">co..</text></g><g><title>[libc.so.6] (3,032,859 samples, 2.49%)</title><rect x="85.9796%" y="2885" width="2.4921%" height="15" fill="rgb(209,133,39)" fg:x="104637592" fg:w="3032859"/><text x="86.2296%" y="2895.50">[l..</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (100,017,192 samples, 82.18%)</title><rect x="8.5602%" y="3141" width="82.1830%" height="15" fill="rgb(232,100,14)" fg:x="10417791" fg:w="100017192"/><text x="8.8102%" y="3151.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="3125" width="2.2716%" height="15" fill="rgb(224,185,1)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="3135.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="3109" width="2.2716%" height="15" fill="rgb(223,139,8)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="3119.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="3093" width="2.2716%" height="15" fill="rgb(232,213,38)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="3103.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="3077" width="2.2716%" height="15" fill="rgb(207,94,22)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="3087.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="3061" width="2.2716%" height="15" fill="rgb(219,183,54)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="3071.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="3045" width="2.2716%" height="15" fill="rgb(216,185,54)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="3055.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="3029" width="2.2716%" height="15" fill="rgb(254,217,39)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="3039.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="3013" width="2.2716%" height="15" fill="rgb(240,178,23)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="3023.50">&lt;..</text></g><g><title>core::mem::drop (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2997" width="2.2716%" height="15" fill="rgb(218,11,47)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="3007.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2981" width="2.2716%" height="15" fill="rgb(218,51,51)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2991.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2965" width="2.2716%" height="15" fill="rgb(238,126,27)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2975.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2949" width="2.2716%" height="15" fill="rgb(249,202,22)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2959.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2933" width="2.2716%" height="15" fill="rgb(254,195,49)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2943.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2917" width="2.2716%" height="15" fill="rgb(208,123,14)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2927.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2901" width="2.2716%" height="15" fill="rgb(224,200,8)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2911.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2885" width="2.2716%" height="15" fill="rgb(217,61,36)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2895.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2869" width="2.2716%" height="15" fill="rgb(206,35,45)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2879.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2853" width="2.2716%" height="15" fill="rgb(217,65,33)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2863.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2837" width="2.2716%" height="15" fill="rgb(222,158,48)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2847.50">&lt;..</text></g><g><title>core::mem::drop (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2821" width="2.2716%" height="15" fill="rgb(254,2,54)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2831.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2805" width="2.2716%" height="15" fill="rgb(250,143,38)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2815.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2789" width="2.2716%" height="15" fill="rgb(248,25,0)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2799.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2773" width="2.2716%" height="15" fill="rgb(206,152,27)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2783.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2757" width="2.2716%" height="15" fill="rgb(240,77,30)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2767.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2741" width="2.2716%" height="15" fill="rgb(231,5,3)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2751.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2725" width="2.2716%" height="15" fill="rgb(207,226,32)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2735.50">c..</text></g><g><title>cfree (2,764,532 samples, 2.27%)</title><rect x="88.4716%" y="2709" width="2.2716%" height="15" fill="rgb(222,207,47)" fg:x="107670451" fg:w="2764532"/><text x="88.7216%" y="2719.50">c..</text></g><g><title>std::panic::catch_unwind (102,730,266 samples, 84.41%)</title><rect x="8.5602%" y="3269" width="84.4123%" height="15" fill="rgb(229,115,45)" fg:x="10417791" fg:w="102730266"/><text x="8.8102%" y="3279.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (102,730,266 samples, 84.41%)</title><rect x="8.5602%" y="3253" width="84.4123%" height="15" fill="rgb(224,191,6)" fg:x="10417791" fg:w="102730266"/><text x="8.8102%" y="3263.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (102,730,266 samples, 84.41%)</title><rect x="8.5602%" y="3237" width="84.4123%" height="15" fill="rgb(230,227,24)" fg:x="10417791" fg:w="102730266"/><text x="8.8102%" y="3247.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (102,730,266 samples, 84.41%)</title><rect x="8.5602%" y="3221" width="84.4123%" height="15" fill="rgb(228,80,19)" fg:x="10417791" fg:w="102730266"/><text x="8.8102%" y="3231.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (102,730,266 samples, 84.41%)</title><rect x="8.5602%" y="3205" width="84.4123%" height="15" fill="rgb(247,229,0)" fg:x="10417791" fg:w="102730266"/><text x="8.8102%" y="3215.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (102,730,266 samples, 84.41%)</title><rect x="8.5602%" y="3189" width="84.4123%" height="15" fill="rgb(237,194,15)" fg:x="10417791" fg:w="102730266"/><text x="8.8102%" y="3199.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (102,730,266 samples, 84.41%)</title><rect x="8.5602%" y="3173" width="84.4123%" height="15" fill="rgb(219,203,20)" fg:x="10417791" fg:w="102730266"/><text x="8.8102%" y="3183.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (102,730,266 samples, 84.41%)</title><rect x="8.5602%" y="3157" width="84.4123%" height="15" fill="rgb(234,128,8)" fg:x="10417791" fg:w="102730266"/><text x="8.8102%" y="3167.50">benchmark::main</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::WebLayoutFrameResult&gt;&gt; (2,713,074 samples, 2.23%)</title><rect x="90.7432%" y="3141" width="2.2293%" height="15" fill="rgb(248,202,8)" fg:x="110434983" fg:w="2713074"/><text x="90.9932%" y="3151.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,713,074 samples, 2.23%)</title><rect x="90.7432%" y="3125" width="2.2293%" height="15" fill="rgb(206,104,37)" fg:x="110434983" fg:w="2713074"/><text x="90.9932%" y="3135.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::WebLayoutFrameResult]&gt; (2,713,074 samples, 2.23%)</title><rect x="90.7432%" y="3109" width="2.2293%" height="15" fill="rgb(223,8,27)" fg:x="110434983" fg:w="2713074"/><text x="90.9932%" y="3119.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;benchmark::WebLayoutFrameResult&gt; (2,713,074 samples, 2.23%)</title><rect x="90.7432%" y="3093" width="2.2293%" height="15" fill="rgb(216,217,28)" fg:x="110434983" fg:w="2713074"/><text x="90.9932%" y="3103.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,713,074 samples, 2.23%)</title><rect x="90.7432%" y="3077" width="2.2293%" height="15" fill="rgb(249,199,1)" fg:x="110434983" fg:w="2713074"/><text x="90.9932%" y="3087.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,713,074 samples, 2.23%)</title><rect x="90.7432%" y="3061" width="2.2293%" height="15" fill="rgb(240,85,17)" fg:x="110434983" fg:w="2713074"/><text x="90.9932%" y="3071.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,713,074 samples, 2.23%)</title><rect x="90.7432%" y="3045" width="2.2293%" height="15" fill="rgb(206,108,45)" fg:x="110434983" fg:w="2713074"/><text x="90.9932%" y="3055.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,713,074 samples, 2.23%)</title><rect x="90.7432%" y="3029" width="2.2293%" height="15" fill="rgb(245,210,41)" fg:x="110434983" fg:w="2713074"/><text x="90.9932%" y="3039.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,713,074 samples, 2.23%)</title><rect x="90.7432%" y="3013" width="2.2293%" height="15" fill="rgb(206,13,37)" fg:x="110434983" fg:w="2713074"/><text x="90.9932%" y="3023.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,713,074 samples, 2.23%)</title><rect x="90.7432%" y="2997" width="2.2293%" height="15" fill="rgb(250,61,18)" fg:x="110434983" fg:w="2713074"/><text x="90.9932%" y="3007.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (2,713,074 samples, 2.23%)</title><rect x="90.7432%" y="2981" width="2.2293%" height="15" fill="rgb(235,172,48)" fg:x="110434983" fg:w="2713074"/><text x="90.9932%" y="2991.50">a..</text></g><g><title>cfree (2,713,074 samples, 2.23%)</title><rect x="90.7432%" y="2965" width="2.2293%" height="15" fill="rgb(249,201,17)" fg:x="110434983" fg:w="2713074"/><text x="90.9932%" y="2975.50">c..</text></g><g><title>[libc.so.6] (2,713,074 samples, 2.23%)</title><rect x="90.7432%" y="2949" width="2.2293%" height="15" fill="rgb(219,208,6)" fg:x="110434983" fg:w="2713074"/><text x="90.9932%" y="2959.50">[..</text></g><g><title>[libc.so.6] (2,713,074 samples, 2.23%)</title><rect x="90.7432%" y="2933" width="2.2293%" height="15" fill="rgb(248,31,23)" fg:x="110434983" fg:w="2713074"/><text x="90.9932%" y="2943.50">[..</text></g><g><title>_start (103,231,770 samples, 84.82%)</title><rect x="8.5602%" y="3413" width="84.8244%" height="15" fill="rgb(245,15,42)" fg:x="10417791" fg:w="103231770"/><text x="8.8102%" y="3423.50">_start</text></g><g><title>__libc_start_main (103,231,770 samples, 84.82%)</title><rect x="8.5602%" y="3397" width="84.8244%" height="15" fill="rgb(222,217,39)" fg:x="10417791" fg:w="103231770"/><text x="8.8102%" y="3407.50">__libc_start_main</text></g><g><title>[libc.so.6] (103,231,770 samples, 84.82%)</title><rect x="8.5602%" y="3381" width="84.8244%" height="15" fill="rgb(210,219,27)" fg:x="10417791" fg:w="103231770"/><text x="8.8102%" y="3391.50">[libc.so.6]</text></g><g><title>main (103,231,770 samples, 84.82%)</title><rect x="8.5602%" y="3365" width="84.8244%" height="15" fill="rgb(252,166,36)" fg:x="10417791" fg:w="103231770"/><text x="8.8102%" y="3375.50">main</text></g><g><title>std::rt::lang_start_internal (103,231,770 samples, 84.82%)</title><rect x="8.5602%" y="3349" width="84.8244%" height="15" fill="rgb(245,132,34)" fg:x="10417791" fg:w="103231770"/><text x="8.8102%" y="3359.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (103,231,770 samples, 84.82%)</title><rect x="8.5602%" y="3333" width="84.8244%" height="15" fill="rgb(236,54,3)" fg:x="10417791" fg:w="103231770"/><text x="8.8102%" y="3343.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (103,231,770 samples, 84.82%)</title><rect x="8.5602%" y="3317" width="84.8244%" height="15" fill="rgb(241,173,43)" fg:x="10417791" fg:w="103231770"/><text x="8.8102%" y="3327.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (103,231,770 samples, 84.82%)</title><rect x="8.5602%" y="3301" width="84.8244%" height="15" fill="rgb(215,190,9)" fg:x="10417791" fg:w="103231770"/><text x="8.8102%" y="3311.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (103,231,770 samples, 84.82%)</title><rect x="8.5602%" y="3285" width="84.8244%" height="15" fill="rgb(242,101,16)" fg:x="10417791" fg:w="103231770"/><text x="8.8102%" y="3295.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::rt::init (501,504 samples, 0.41%)</title><rect x="92.9725%" y="3269" width="0.4121%" height="15" fill="rgb(223,190,21)" fg:x="113148057" fg:w="501504"/><text x="93.2225%" y="3279.50"></text></g><g><title>std::sys::pal::unix::init (501,504 samples, 0.41%)</title><rect x="92.9725%" y="3253" width="0.4121%" height="15" fill="rgb(215,228,25)" fg:x="113148057" fg:w="501504"/><text x="93.2225%" y="3263.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::init (501,504 samples, 0.41%)</title><rect x="92.9725%" y="3237" width="0.4121%" height="15" fill="rgb(225,36,22)" fg:x="113148057" fg:w="501504"/><text x="93.2225%" y="3247.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard (501,504 samples, 0.41%)</title><rect x="92.9725%" y="3221" width="0.4121%" height="15" fill="rgb(251,106,46)" fg:x="113148057" fg:w="501504"/><text x="93.2225%" y="3231.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard_linux (501,504 samples, 0.41%)</title><rect x="92.9725%" y="3205" width="0.4121%" height="15" fill="rgb(208,90,1)" fg:x="113148057" fg:w="501504"/><text x="93.2225%" y="3215.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::stack_start_aligned (501,504 samples, 0.41%)</title><rect x="92.9725%" y="3189" width="0.4121%" height="15" fill="rgb(243,10,4)" fg:x="113148057" fg:w="501504"/><text x="93.2225%" y="3199.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack_start (501,504 samples, 0.41%)</title><rect x="92.9725%" y="3173" width="0.4121%" height="15" fill="rgb(212,137,27)" fg:x="113148057" fg:w="501504"/><text x="93.2225%" y="3183.50"></text></g><g><title>pthread_getattr_np (501,504 samples, 0.41%)</title><rect x="92.9725%" y="3157" width="0.4121%" height="15" fill="rgb(231,220,49)" fg:x="113148057" fg:w="501504"/><text x="93.2225%" y="3167.50"></text></g><g><title>__isoc23_sscanf (501,504 samples, 0.41%)</title><rect x="92.9725%" y="3141" width="0.4121%" height="15" fill="rgb(237,96,20)" fg:x="113148057" fg:w="501504"/><text x="93.2225%" y="3151.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.41%)</title><rect x="92.9725%" y="3125" width="0.4121%" height="15" fill="rgb(239,229,30)" fg:x="113148057" fg:w="501504"/><text x="93.2225%" y="3135.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.41%)</title><rect x="92.9725%" y="3109" width="0.4121%" height="15" fill="rgb(219,65,33)" fg:x="113148057" fg:w="501504"/><text x="93.2225%" y="3119.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (501,504 samples, 0.41%)</title><rect x="93.3846%" y="3413" width="0.4121%" height="15" fill="rgb(243,134,7)" fg:x="113649561" fg:w="501504"/><text x="93.6346%" y="3423.50"></text></g><g><title>malloc (4,402,888 samples, 3.62%)</title><rect x="93.7967%" y="3413" width="3.6178%" height="15" fill="rgb(216,177,54)" fg:x="114151065" fg:w="4402888"/><text x="94.0467%" y="3423.50">mall..</text></g><g><title>all (121,700,553 samples, 100%)</title><rect x="0.0000%" y="3445" width="100.0000%" height="15" fill="rgb(211,160,20)" fg:x="0" fg:w="121700553"/><text x="0.2500%" y="3455.50"></text></g><g><title>benchmark (121,700,553 samples, 100.00%)</title><rect x="0.0000%" y="3429" width="100.0000%" height="15" fill="rgb(239,85,39)" fg:x="0" fg:w="121700553"/><text x="0.2500%" y="3439.50">benchmark</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,146,600 samples, 2.59%)</title><rect x="97.4145%" y="3413" width="2.5855%" height="15" fill="rgb(232,125,22)" fg:x="118553953" fg:w="3146600"/><text x="97.6645%" y="3423.50">se..</text></g></svg></svg>