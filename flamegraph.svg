<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2486" onload="init(evt)" viewBox="0 0 1200 2486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2486" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2469.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2469.00"> </text><svg id="frames" x="10" width="1180" total_samples="246900814"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,389,847 samples, 0.56%)</title><rect x="0.0000%" y="2405" width="0.5629%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1389847"/><text x="0.2500%" y="2415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,186,704 samples, 0.48%)</title><rect x="0.5629%" y="2405" width="0.4806%" height="15" fill="rgb(217,0,24)" fg:x="1389847" fg:w="1186704"/><text x="0.8129%" y="2415.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,186,704 samples, 0.48%)</title><rect x="0.5629%" y="2389" width="0.4806%" height="15" fill="rgb(221,193,54)" fg:x="1389847" fg:w="1186704"/><text x="0.8129%" y="2399.50"></text></g><g><title>[libc.so.6] (571,175 samples, 0.23%)</title><rect x="1.0436%" y="2405" width="0.2313%" height="15" fill="rgb(248,212,6)" fg:x="2576551" fg:w="571175"/><text x="1.2936%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,391,795 samples, 0.56%)</title><rect x="1.2749%" y="2389" width="0.5637%" height="15" fill="rgb(208,68,35)" fg:x="3147726" fg:w="1391795"/><text x="1.5249%" y="2399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,391,795 samples, 0.56%)</title><rect x="1.2749%" y="2373" width="0.5637%" height="15" fill="rgb(232,128,0)" fg:x="3147726" fg:w="1391795"/><text x="1.5249%" y="2383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,391,795 samples, 0.56%)</title><rect x="1.2749%" y="2357" width="0.5637%" height="15" fill="rgb(207,160,47)" fg:x="3147726" fg:w="1391795"/><text x="1.5249%" y="2367.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (996,872 samples, 0.40%)</title><rect x="1.8386%" y="2389" width="0.4038%" height="15" fill="rgb(228,23,34)" fg:x="4539521" fg:w="996872"/><text x="2.0886%" y="2399.50"></text></g><g><title>[libc.so.6] (1,224,270 samples, 0.50%)</title><rect x="2.2424%" y="2389" width="0.4959%" height="15" fill="rgb(218,30,26)" fg:x="5536393" fg:w="1224270"/><text x="2.4924%" y="2399.50"></text></g><g><title>[unknown] (4,918,400 samples, 1.99%)</title><rect x="1.2749%" y="2405" width="1.9921%" height="15" fill="rgb(220,122,19)" fg:x="3147726" fg:w="4918400"/><text x="1.5249%" y="2415.50">[..</text></g><g><title>[unknown] (1,305,463 samples, 0.53%)</title><rect x="2.7382%" y="2389" width="0.5287%" height="15" fill="rgb(250,228,42)" fg:x="6760663" fg:w="1305463"/><text x="2.9882%" y="2399.50"></text></g><g><title>benchmark::clear_dirty_flags (1,305,463 samples, 0.53%)</title><rect x="2.7382%" y="2373" width="0.5287%" height="15" fill="rgb(240,193,28)" fg:x="6760663" fg:w="1305463"/><text x="2.9882%" y="2383.50"></text></g><g><title>__rdl_dealloc (2,198,534 samples, 0.89%)</title><rect x="3.2669%" y="2405" width="0.8905%" height="15" fill="rgb(216,20,37)" fg:x="8066126" fg:w="2198534"/><text x="3.5169%" y="2415.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,198,534 samples, 0.89%)</title><rect x="3.2669%" y="2389" width="0.8905%" height="15" fill="rgb(206,188,39)" fg:x="8066126" fg:w="2198534"/><text x="3.5169%" y="2399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (978,686 samples, 0.40%)</title><rect x="4.5439%" y="1109" width="0.3964%" height="15" fill="rgb(217,207,13)" fg:x="11219024" fg:w="978686"/><text x="4.7939%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (978,686 samples, 0.40%)</title><rect x="4.5439%" y="1093" width="0.3964%" height="15" fill="rgb(231,73,38)" fg:x="11219024" fg:w="978686"/><text x="4.7939%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (978,686 samples, 0.40%)</title><rect x="4.5439%" y="1077" width="0.3964%" height="15" fill="rgb(225,20,46)" fg:x="11219024" fg:w="978686"/><text x="4.7939%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (978,686 samples, 0.40%)</title><rect x="4.5439%" y="1061" width="0.3964%" height="15" fill="rgb(210,31,41)" fg:x="11219024" fg:w="978686"/><text x="4.7939%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (978,686 samples, 0.40%)</title><rect x="4.5439%" y="1045" width="0.3964%" height="15" fill="rgb(221,200,47)" fg:x="11219024" fg:w="978686"/><text x="4.7939%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (978,686 samples, 0.40%)</title><rect x="4.5439%" y="1029" width="0.3964%" height="15" fill="rgb(226,26,5)" fg:x="11219024" fg:w="978686"/><text x="4.7939%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (978,686 samples, 0.40%)</title><rect x="4.5439%" y="1013" width="0.3964%" height="15" fill="rgb(249,33,26)" fg:x="11219024" fg:w="978686"/><text x="4.7939%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (978,686 samples, 0.40%)</title><rect x="4.5439%" y="997" width="0.3964%" height="15" fill="rgb(235,183,28)" fg:x="11219024" fg:w="978686"/><text x="4.7939%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (978,686 samples, 0.40%)</title><rect x="4.5439%" y="981" width="0.3964%" height="15" fill="rgb(221,5,38)" fg:x="11219024" fg:w="978686"/><text x="4.7939%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (978,686 samples, 0.40%)</title><rect x="4.5439%" y="965" width="0.3964%" height="15" fill="rgb(247,18,42)" fg:x="11219024" fg:w="978686"/><text x="4.7939%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (978,686 samples, 0.40%)</title><rect x="4.5439%" y="949" width="0.3964%" height="15" fill="rgb(241,131,45)" fg:x="11219024" fg:w="978686"/><text x="4.7939%" y="959.50"></text></g><g><title>alloc::alloc::alloc (978,686 samples, 0.40%)</title><rect x="4.5439%" y="933" width="0.3964%" height="15" fill="rgb(249,31,29)" fg:x="11219024" fg:w="978686"/><text x="4.7939%" y="943.50"></text></g><g><title>malloc (978,686 samples, 0.40%)</title><rect x="4.5439%" y="917" width="0.3964%" height="15" fill="rgb(225,111,53)" fg:x="11219024" fg:w="978686"/><text x="4.7939%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,455,772 samples, 0.99%)</title><rect x="4.9403%" y="949" width="0.9946%" height="15" fill="rgb(238,160,17)" fg:x="12197710" fg:w="2455772"/><text x="5.1903%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,455,772 samples, 0.99%)</title><rect x="4.9403%" y="933" width="0.9946%" height="15" fill="rgb(214,148,48)" fg:x="12197710" fg:w="2455772"/><text x="5.1903%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,455,772 samples, 0.99%)</title><rect x="4.9403%" y="917" width="0.9946%" height="15" fill="rgb(232,36,49)" fg:x="12197710" fg:w="2455772"/><text x="5.1903%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (2,455,772 samples, 0.99%)</title><rect x="4.9403%" y="901" width="0.9946%" height="15" fill="rgb(209,103,24)" fg:x="12197710" fg:w="2455772"/><text x="5.1903%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,455,772 samples, 0.99%)</title><rect x="4.9403%" y="885" width="0.9946%" height="15" fill="rgb(229,88,8)" fg:x="12197710" fg:w="2455772"/><text x="5.1903%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,455,772 samples, 0.99%)</title><rect x="4.9403%" y="869" width="0.9946%" height="15" fill="rgb(213,181,19)" fg:x="12197710" fg:w="2455772"/><text x="5.1903%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,455,772 samples, 0.99%)</title><rect x="4.9403%" y="853" width="0.9946%" height="15" fill="rgb(254,191,54)" fg:x="12197710" fg:w="2455772"/><text x="5.1903%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,455,772 samples, 0.99%)</title><rect x="4.9403%" y="837" width="0.9946%" height="15" fill="rgb(241,83,37)" fg:x="12197710" fg:w="2455772"/><text x="5.1903%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,455,772 samples, 0.99%)</title><rect x="4.9403%" y="821" width="0.9946%" height="15" fill="rgb(233,36,39)" fg:x="12197710" fg:w="2455772"/><text x="5.1903%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,455,772 samples, 0.99%)</title><rect x="4.9403%" y="805" width="0.9946%" height="15" fill="rgb(226,3,54)" fg:x="12197710" fg:w="2455772"/><text x="5.1903%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,455,772 samples, 0.99%)</title><rect x="4.9403%" y="789" width="0.9946%" height="15" fill="rgb(245,192,40)" fg:x="12197710" fg:w="2455772"/><text x="5.1903%" y="799.50"></text></g><g><title>alloc::alloc::alloc (2,455,772 samples, 0.99%)</title><rect x="4.9403%" y="773" width="0.9946%" height="15" fill="rgb(238,167,29)" fg:x="12197710" fg:w="2455772"/><text x="5.1903%" y="783.50"></text></g><g><title>malloc (2,455,772 samples, 0.99%)</title><rect x="4.9403%" y="757" width="0.9946%" height="15" fill="rgb(232,182,51)" fg:x="12197710" fg:w="2455772"/><text x="5.1903%" y="767.50"></text></g><g><title>[libc.so.6] (2,455,772 samples, 0.99%)</title><rect x="4.9403%" y="741" width="0.9946%" height="15" fill="rgb(231,60,39)" fg:x="12197710" fg:w="2455772"/><text x="5.1903%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1381" width="1.9366%" height="15" fill="rgb(208,69,12)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1391.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1365" width="1.9366%" height="15" fill="rgb(235,93,37)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1375.50">a..</text></g><g><title>alloc::slice::hack::to_vec (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1349" width="1.9366%" height="15" fill="rgb(213,116,39)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1359.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1333" width="1.9366%" height="15" fill="rgb(222,207,29)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1343.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1317" width="1.9366%" height="15" fill="rgb(206,96,30)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1327.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1301" width="1.9366%" height="15" fill="rgb(218,138,4)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1311.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1285" width="1.9366%" height="15" fill="rgb(250,191,14)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1295.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1269" width="1.9366%" height="15" fill="rgb(239,60,40)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1279.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1253" width="1.9366%" height="15" fill="rgb(206,27,48)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1263.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1237" width="1.9366%" height="15" fill="rgb(225,35,8)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1247.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1221" width="1.9366%" height="15" fill="rgb(250,213,24)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1231.50">a..</text></g><g><title>alloc::slice::hack::to_vec (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1205" width="1.9366%" height="15" fill="rgb(247,123,22)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1215.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1189" width="1.9366%" height="15" fill="rgb(231,138,38)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1199.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1173" width="1.9366%" height="15" fill="rgb(231,145,46)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1183.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1157" width="1.9366%" height="15" fill="rgb(251,118,11)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1167.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1141" width="1.9366%" height="15" fill="rgb(217,147,25)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1151.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,781,507 samples, 1.94%)</title><rect x="4.5439%" y="1125" width="1.9366%" height="15" fill="rgb(247,81,37)" fg:x="11219024" fg:w="4781507"/><text x="4.7939%" y="1135.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,802,821 samples, 1.54%)</title><rect x="4.9403%" y="1109" width="1.5402%" height="15" fill="rgb(209,12,38)" fg:x="12197710" fg:w="3802821"/><text x="5.1903%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,802,821 samples, 1.54%)</title><rect x="4.9403%" y="1093" width="1.5402%" height="15" fill="rgb(227,1,9)" fg:x="12197710" fg:w="3802821"/><text x="5.1903%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,802,821 samples, 1.54%)</title><rect x="4.9403%" y="1077" width="1.5402%" height="15" fill="rgb(248,47,43)" fg:x="12197710" fg:w="3802821"/><text x="5.1903%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (3,802,821 samples, 1.54%)</title><rect x="4.9403%" y="1061" width="1.5402%" height="15" fill="rgb(221,10,30)" fg:x="12197710" fg:w="3802821"/><text x="5.1903%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,802,821 samples, 1.54%)</title><rect x="4.9403%" y="1045" width="1.5402%" height="15" fill="rgb(210,229,1)" fg:x="12197710" fg:w="3802821"/><text x="5.1903%" y="1055.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,802,821 samples, 1.54%)</title><rect x="4.9403%" y="1029" width="1.5402%" height="15" fill="rgb(222,148,37)" fg:x="12197710" fg:w="3802821"/><text x="5.1903%" y="1039.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,802,821 samples, 1.54%)</title><rect x="4.9403%" y="1013" width="1.5402%" height="15" fill="rgb(234,67,33)" fg:x="12197710" fg:w="3802821"/><text x="5.1903%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,802,821 samples, 1.54%)</title><rect x="4.9403%" y="997" width="1.5402%" height="15" fill="rgb(247,98,35)" fg:x="12197710" fg:w="3802821"/><text x="5.1903%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,802,821 samples, 1.54%)</title><rect x="4.9403%" y="981" width="1.5402%" height="15" fill="rgb(247,138,52)" fg:x="12197710" fg:w="3802821"/><text x="5.1903%" y="991.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,802,821 samples, 1.54%)</title><rect x="4.9403%" y="965" width="1.5402%" height="15" fill="rgb(213,79,30)" fg:x="12197710" fg:w="3802821"/><text x="5.1903%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="949" width="0.5456%" height="15" fill="rgb(246,177,23)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="933" width="0.5456%" height="15" fill="rgb(230,62,27)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="917" width="0.5456%" height="15" fill="rgb(216,154,8)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="901" width="0.5456%" height="15" fill="rgb(244,35,45)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="911.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="885" width="0.5456%" height="15" fill="rgb(251,115,12)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="895.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="869" width="0.5456%" height="15" fill="rgb(240,54,50)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="853" width="0.5456%" height="15" fill="rgb(233,84,52)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="837" width="0.5456%" height="15" fill="rgb(207,117,47)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="821" width="0.5456%" height="15" fill="rgb(249,43,39)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="805" width="0.5456%" height="15" fill="rgb(209,38,44)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="789" width="0.5456%" height="15" fill="rgb(236,212,23)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="773" width="0.5456%" height="15" fill="rgb(242,79,21)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="757" width="0.5456%" height="15" fill="rgb(211,96,35)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="741" width="0.5456%" height="15" fill="rgb(253,215,40)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="725" width="0.5456%" height="15" fill="rgb(211,81,21)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="709" width="0.5456%" height="15" fill="rgb(208,190,38)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="693" width="0.5456%" height="15" fill="rgb(235,213,38)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="677" width="0.5456%" height="15" fill="rgb(237,122,38)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="661" width="0.5456%" height="15" fill="rgb(244,218,35)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="645" width="0.5456%" height="15" fill="rgb(240,68,47)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="655.50"></text></g><g><title>malloc (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="629" width="0.5456%" height="15" fill="rgb(210,16,53)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="639.50"></text></g><g><title>[libc.so.6] (1,347,049 samples, 0.55%)</title><rect x="5.9350%" y="613" width="0.5456%" height="15" fill="rgb(235,124,12)" fg:x="14653482" fg:w="1347049"/><text x="6.1850%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,253,078 samples, 0.51%)</title><rect x="6.4806%" y="1333" width="0.5075%" height="15" fill="rgb(224,169,11)" fg:x="16000531" fg:w="1253078"/><text x="6.7306%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,253,078 samples, 0.51%)</title><rect x="6.4806%" y="1317" width="0.5075%" height="15" fill="rgb(250,166,2)" fg:x="16000531" fg:w="1253078"/><text x="6.7306%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,253,078 samples, 0.51%)</title><rect x="6.4806%" y="1301" width="0.5075%" height="15" fill="rgb(242,216,29)" fg:x="16000531" fg:w="1253078"/><text x="6.7306%" y="1311.50"></text></g><g><title>alloc::slice::hack::to_vec (1,253,078 samples, 0.51%)</title><rect x="6.4806%" y="1285" width="0.5075%" height="15" fill="rgb(230,116,27)" fg:x="16000531" fg:w="1253078"/><text x="6.7306%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,253,078 samples, 0.51%)</title><rect x="6.4806%" y="1269" width="0.5075%" height="15" fill="rgb(228,99,48)" fg:x="16000531" fg:w="1253078"/><text x="6.7306%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,253,078 samples, 0.51%)</title><rect x="6.4806%" y="1253" width="0.5075%" height="15" fill="rgb(253,11,6)" fg:x="16000531" fg:w="1253078"/><text x="6.7306%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,253,078 samples, 0.51%)</title><rect x="6.4806%" y="1237" width="0.5075%" height="15" fill="rgb(247,143,39)" fg:x="16000531" fg:w="1253078"/><text x="6.7306%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,253,078 samples, 0.51%)</title><rect x="6.4806%" y="1221" width="0.5075%" height="15" fill="rgb(236,97,10)" fg:x="16000531" fg:w="1253078"/><text x="6.7306%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,253,078 samples, 0.51%)</title><rect x="6.4806%" y="1205" width="0.5075%" height="15" fill="rgb(233,208,19)" fg:x="16000531" fg:w="1253078"/><text x="6.7306%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,253,078 samples, 0.51%)</title><rect x="6.4806%" y="1189" width="0.5075%" height="15" fill="rgb(216,164,2)" fg:x="16000531" fg:w="1253078"/><text x="6.7306%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,253,078 samples, 0.51%)</title><rect x="6.4806%" y="1173" width="0.5075%" height="15" fill="rgb(220,129,5)" fg:x="16000531" fg:w="1253078"/><text x="6.7306%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (1,253,078 samples, 0.51%)</title><rect x="6.4806%" y="1157" width="0.5075%" height="15" fill="rgb(242,17,10)" fg:x="16000531" fg:w="1253078"/><text x="6.7306%" y="1167.50"></text></g><g><title>malloc (1,253,078 samples, 0.51%)</title><rect x="6.4806%" y="1141" width="0.5075%" height="15" fill="rgb(242,107,0)" fg:x="16000531" fg:w="1253078"/><text x="6.7306%" y="1151.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,113,134 samples, 3.29%)</title><rect x="4.1574%" y="1397" width="3.2860%" height="15" fill="rgb(251,28,31)" fg:x="10264660" fg:w="8113134"/><text x="4.4074%" y="1407.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,377,263 samples, 0.96%)</title><rect x="6.4806%" y="1381" width="0.9628%" height="15" fill="rgb(233,223,10)" fg:x="16000531" fg:w="2377263"/><text x="6.7306%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,377,263 samples, 0.96%)</title><rect x="6.4806%" y="1365" width="0.9628%" height="15" fill="rgb(215,21,27)" fg:x="16000531" fg:w="2377263"/><text x="6.7306%" y="1375.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,377,263 samples, 0.96%)</title><rect x="6.4806%" y="1349" width="0.9628%" height="15" fill="rgb(232,23,21)" fg:x="16000531" fg:w="2377263"/><text x="6.7306%" y="1359.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,124,185 samples, 0.46%)</title><rect x="6.9881%" y="1333" width="0.4553%" height="15" fill="rgb(244,5,23)" fg:x="17253609" fg:w="1124185"/><text x="7.2381%" y="1343.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,124,185 samples, 0.46%)</title><rect x="6.9881%" y="1317" width="0.4553%" height="15" fill="rgb(226,81,46)" fg:x="17253609" fg:w="1124185"/><text x="7.2381%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,124,185 samples, 0.46%)</title><rect x="6.9881%" y="1301" width="0.4553%" height="15" fill="rgb(247,70,30)" fg:x="17253609" fg:w="1124185"/><text x="7.2381%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,124,185 samples, 0.46%)</title><rect x="6.9881%" y="1285" width="0.4553%" height="15" fill="rgb(212,68,19)" fg:x="17253609" fg:w="1124185"/><text x="7.2381%" y="1295.50"></text></g><g><title>alloc::slice::hack::to_vec (1,124,185 samples, 0.46%)</title><rect x="6.9881%" y="1269" width="0.4553%" height="15" fill="rgb(240,187,13)" fg:x="17253609" fg:w="1124185"/><text x="7.2381%" y="1279.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,124,185 samples, 0.46%)</title><rect x="6.9881%" y="1253" width="0.4553%" height="15" fill="rgb(223,113,26)" fg:x="17253609" fg:w="1124185"/><text x="7.2381%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,124,185 samples, 0.46%)</title><rect x="6.9881%" y="1237" width="0.4553%" height="15" fill="rgb(206,192,2)" fg:x="17253609" fg:w="1124185"/><text x="7.2381%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,124,185 samples, 0.46%)</title><rect x="6.9881%" y="1221" width="0.4553%" height="15" fill="rgb(241,108,4)" fg:x="17253609" fg:w="1124185"/><text x="7.2381%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,124,185 samples, 0.46%)</title><rect x="6.9881%" y="1205" width="0.4553%" height="15" fill="rgb(247,173,49)" fg:x="17253609" fg:w="1124185"/><text x="7.2381%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,124,185 samples, 0.46%)</title><rect x="6.9881%" y="1189" width="0.4553%" height="15" fill="rgb(224,114,35)" fg:x="17253609" fg:w="1124185"/><text x="7.2381%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,124,185 samples, 0.46%)</title><rect x="6.9881%" y="1173" width="0.4553%" height="15" fill="rgb(245,159,27)" fg:x="17253609" fg:w="1124185"/><text x="7.2381%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,124,185 samples, 0.46%)</title><rect x="6.9881%" y="1157" width="0.4553%" height="15" fill="rgb(245,172,44)" fg:x="17253609" fg:w="1124185"/><text x="7.2381%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (1,124,185 samples, 0.46%)</title><rect x="6.9881%" y="1141" width="0.4553%" height="15" fill="rgb(236,23,11)" fg:x="17253609" fg:w="1124185"/><text x="7.2381%" y="1151.50"></text></g><g><title>malloc (1,124,185 samples, 0.46%)</title><rect x="6.9881%" y="1125" width="0.4553%" height="15" fill="rgb(205,117,38)" fg:x="17253609" fg:w="1124185"/><text x="7.2381%" y="1135.50"></text></g><g><title>[libc.so.6] (1,124,185 samples, 0.46%)</title><rect x="6.9881%" y="1109" width="0.4553%" height="15" fill="rgb(237,72,25)" fg:x="17253609" fg:w="1124185"/><text x="7.2381%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1957" width="3.8201%" height="15" fill="rgb(244,70,9)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1967.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1941" width="3.8201%" height="15" fill="rgb(217,125,39)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1951.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1925" width="3.8201%" height="15" fill="rgb(235,36,10)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1935.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1909" width="3.8201%" height="15" fill="rgb(251,123,47)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1919.50">&lt;T a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1893" width="3.8201%" height="15" fill="rgb(221,13,13)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1903.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1877" width="3.8201%" height="15" fill="rgb(238,131,9)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1887.50">&lt;ser..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1861" width="3.8201%" height="15" fill="rgb(211,50,8)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1871.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1845" width="3.8201%" height="15" fill="rgb(245,182,24)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1855.50">&lt;all..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1829" width="3.8201%" height="15" fill="rgb(242,14,37)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1839.50">&lt;ser..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1813" width="3.8201%" height="15" fill="rgb(246,228,12)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1823.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1797" width="3.8201%" height="15" fill="rgb(213,55,15)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1807.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1781" width="3.8201%" height="15" fill="rgb(209,9,3)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1791.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1765" width="3.8201%" height="15" fill="rgb(230,59,30)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1775.50">&lt;T a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1749" width="3.8201%" height="15" fill="rgb(209,121,21)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1759.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1733" width="3.8201%" height="15" fill="rgb(220,109,13)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1743.50">&lt;ser..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1717" width="3.8201%" height="15" fill="rgb(232,18,1)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1727.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1701" width="3.8201%" height="15" fill="rgb(215,41,42)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1711.50">&lt;all..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1685" width="3.8201%" height="15" fill="rgb(224,123,36)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1695.50">&lt;ser..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1669" width="3.8201%" height="15" fill="rgb(240,125,3)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1679.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1653" width="3.8201%" height="15" fill="rgb(205,98,50)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1663.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1637" width="3.8201%" height="15" fill="rgb(205,185,37)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1647.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1621" width="3.8201%" height="15" fill="rgb(238,207,15)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1631.50">&lt;T a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1605" width="3.8201%" height="15" fill="rgb(213,199,42)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1615.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1589" width="3.8201%" height="15" fill="rgb(235,201,11)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1599.50">&lt;ser..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1573" width="3.8201%" height="15" fill="rgb(207,46,11)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1583.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1557" width="3.8201%" height="15" fill="rgb(241,35,35)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1567.50">&lt;all..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1541" width="3.8201%" height="15" fill="rgb(243,32,47)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1551.50">&lt;ser..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1525" width="3.8201%" height="15" fill="rgb(247,202,23)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1535.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1509" width="3.8201%" height="15" fill="rgb(219,102,11)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1519.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1493" width="3.8201%" height="15" fill="rgb(243,110,44)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1503.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1477" width="3.8201%" height="15" fill="rgb(222,74,54)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1487.50">&lt;T a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1461" width="3.8201%" height="15" fill="rgb(216,99,12)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1471.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1445" width="3.8201%" height="15" fill="rgb(226,22,26)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1455.50">&lt;ser..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1429" width="3.8201%" height="15" fill="rgb(217,163,10)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1439.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9,431,941 samples, 3.82%)</title><rect x="4.1574%" y="1413" width="3.8201%" height="15" fill="rgb(213,25,53)" fg:x="10264660" fg:w="9431941"/><text x="4.4074%" y="1423.50">&lt;all..</text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (1,318,807 samples, 0.53%)</title><rect x="7.4434%" y="1397" width="0.5341%" height="15" fill="rgb(252,105,26)" fg:x="18377794" fg:w="1318807"/><text x="7.6934%" y="1407.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (1,318,807 samples, 0.53%)</title><rect x="7.4434%" y="1381" width="0.5341%" height="15" fill="rgb(220,39,43)" fg:x="18377794" fg:w="1318807"/><text x="7.6934%" y="1391.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,318,807 samples, 0.53%)</title><rect x="7.4434%" y="1365" width="0.5341%" height="15" fill="rgb(229,68,48)" fg:x="18377794" fg:w="1318807"/><text x="7.6934%" y="1375.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (10,761,561 samples, 4.36%)</title><rect x="4.1574%" y="1973" width="4.3587%" height="15" fill="rgb(252,8,32)" fg:x="10264660" fg:w="10761561"/><text x="4.4074%" y="1983.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1957" width="0.5385%" height="15" fill="rgb(223,20,43)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1967.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1941" width="0.5385%" height="15" fill="rgb(229,81,49)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1925" width="0.5385%" height="15" fill="rgb(236,28,36)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1935.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1909" width="0.5385%" height="15" fill="rgb(249,185,26)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1919.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1893" width="0.5385%" height="15" fill="rgb(249,174,33)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1877" width="0.5385%" height="15" fill="rgb(233,201,37)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1887.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1861" width="0.5385%" height="15" fill="rgb(221,78,26)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1871.50"></text></g><g><title>alloc::slice::hack::to_vec (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1845" width="0.5385%" height="15" fill="rgb(250,127,30)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1855.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1829" width="0.5385%" height="15" fill="rgb(230,49,44)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1813" width="0.5385%" height="15" fill="rgb(229,67,23)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1797" width="0.5385%" height="15" fill="rgb(249,83,47)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1781" width="0.5385%" height="15" fill="rgb(215,43,3)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1765" width="0.5385%" height="15" fill="rgb(238,154,13)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1749" width="0.5385%" height="15" fill="rgb(219,56,2)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1733" width="0.5385%" height="15" fill="rgb(233,0,4)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1717" width="0.5385%" height="15" fill="rgb(235,30,7)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1727.50"></text></g><g><title>malloc (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1701" width="0.5385%" height="15" fill="rgb(250,79,13)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1711.50"></text></g><g><title>[libc.so.6] (1,329,620 samples, 0.54%)</title><rect x="7.9775%" y="1685" width="0.5385%" height="15" fill="rgb(211,146,34)" fg:x="19696601" fg:w="1329620"/><text x="8.2275%" y="1695.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (12,079,338 samples, 4.89%)</title><rect x="4.1574%" y="2117" width="4.8924%" height="15" fill="rgb(228,22,38)" fg:x="10264660" fg:w="12079338"/><text x="4.4074%" y="2127.50">&lt;bench..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (12,079,338 samples, 4.89%)</title><rect x="4.1574%" y="2101" width="4.8924%" height="15" fill="rgb(235,168,5)" fg:x="10264660" fg:w="12079338"/><text x="4.4074%" y="2111.50">&lt;serde..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (12,079,338 samples, 4.89%)</title><rect x="4.1574%" y="2085" width="4.8924%" height="15" fill="rgb(221,155,16)" fg:x="10264660" fg:w="12079338"/><text x="4.4074%" y="2095.50">&lt;serde..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (12,079,338 samples, 4.89%)</title><rect x="4.1574%" y="2069" width="4.8924%" height="15" fill="rgb(215,215,53)" fg:x="10264660" fg:w="12079338"/><text x="4.4074%" y="2079.50">&lt;alloc..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (12,079,338 samples, 4.89%)</title><rect x="4.1574%" y="2053" width="4.8924%" height="15" fill="rgb(223,4,10)" fg:x="10264660" fg:w="12079338"/><text x="4.4074%" y="2063.50">&lt;alloc..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (12,079,338 samples, 4.89%)</title><rect x="4.1574%" y="2037" width="4.8924%" height="15" fill="rgb(234,103,6)" fg:x="10264660" fg:w="12079338"/><text x="4.4074%" y="2047.50">&lt;serde..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (12,079,338 samples, 4.89%)</title><rect x="4.1574%" y="2021" width="4.8924%" height="15" fill="rgb(227,97,0)" fg:x="10264660" fg:w="12079338"/><text x="4.4074%" y="2031.50">&lt;serde..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (12,079,338 samples, 4.89%)</title><rect x="4.1574%" y="2005" width="4.8924%" height="15" fill="rgb(234,150,53)" fg:x="10264660" fg:w="12079338"/><text x="4.4074%" y="2015.50">&lt;alloc..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (12,079,338 samples, 4.89%)</title><rect x="4.1574%" y="1989" width="4.8924%" height="15" fill="rgb(228,201,54)" fg:x="10264660" fg:w="12079338"/><text x="4.4074%" y="1999.50">&lt;alloc..</text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (1,317,777 samples, 0.53%)</title><rect x="8.5161%" y="1973" width="0.5337%" height="15" fill="rgb(222,22,37)" fg:x="21026221" fg:w="1317777"/><text x="8.7661%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (1,317,777 samples, 0.53%)</title><rect x="8.5161%" y="1957" width="0.5337%" height="15" fill="rgb(237,53,32)" fg:x="21026221" fg:w="1317777"/><text x="8.7661%" y="1967.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,317,777 samples, 0.53%)</title><rect x="8.5161%" y="1941" width="0.5337%" height="15" fill="rgb(233,25,53)" fg:x="21026221" fg:w="1317777"/><text x="8.7661%" y="1951.50"></text></g><g><title>alloc::fmt::format (501,504 samples, 0.20%)</title><rect x="9.0498%" y="2117" width="0.2031%" height="15" fill="rgb(210,40,34)" fg:x="22343998" fg:w="501504"/><text x="9.2998%" y="2127.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (501,504 samples, 0.20%)</title><rect x="9.0498%" y="2101" width="0.2031%" height="15" fill="rgb(241,220,44)" fg:x="22343998" fg:w="501504"/><text x="9.2998%" y="2111.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (501,504 samples, 0.20%)</title><rect x="9.0498%" y="2085" width="0.2031%" height="15" fill="rgb(235,28,35)" fg:x="22343998" fg:w="501504"/><text x="9.2998%" y="2095.50"></text></g><g><title>alloc::fmt::format::format_inner (501,504 samples, 0.20%)</title><rect x="9.0498%" y="2069" width="0.2031%" height="15" fill="rgb(210,56,17)" fg:x="22343998" fg:w="501504"/><text x="9.2998%" y="2079.50"></text></g><g><title>core::fmt::Write::write_fmt (501,504 samples, 0.20%)</title><rect x="9.0498%" y="2053" width="0.2031%" height="15" fill="rgb(224,130,29)" fg:x="22343998" fg:w="501504"/><text x="9.2998%" y="2063.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (501,504 samples, 0.20%)</title><rect x="9.0498%" y="2037" width="0.2031%" height="15" fill="rgb(235,212,8)" fg:x="22343998" fg:w="501504"/><text x="9.2998%" y="2047.50"></text></g><g><title>core::fmt::write (501,504 samples, 0.20%)</title><rect x="9.0498%" y="2021" width="0.2031%" height="15" fill="rgb(223,33,50)" fg:x="22343998" fg:w="501504"/><text x="9.2998%" y="2031.50"></text></g><g><title>core::fmt::rt::Argument::fmt (501,504 samples, 0.20%)</title><rect x="9.0498%" y="2005" width="0.2031%" height="15" fill="rgb(219,149,13)" fg:x="22343998" fg:w="501504"/><text x="9.2998%" y="2015.50"></text></g><g><title>core::fmt::Formatter::pad (501,504 samples, 0.20%)</title><rect x="9.0498%" y="1989" width="0.2031%" height="15" fill="rgb(250,156,29)" fg:x="22343998" fg:w="501504"/><text x="9.2998%" y="1999.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,260,472 samples, 0.51%)</title><rect x="9.2529%" y="1765" width="0.5105%" height="15" fill="rgb(216,193,19)" fg:x="22845502" fg:w="1260472"/><text x="9.5029%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,260,472 samples, 0.51%)</title><rect x="9.2529%" y="1749" width="0.5105%" height="15" fill="rgb(216,135,14)" fg:x="22845502" fg:w="1260472"/><text x="9.5029%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,260,472 samples, 0.51%)</title><rect x="9.2529%" y="1733" width="0.5105%" height="15" fill="rgb(241,47,5)" fg:x="22845502" fg:w="1260472"/><text x="9.5029%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,260,472 samples, 0.51%)</title><rect x="9.2529%" y="1717" width="0.5105%" height="15" fill="rgb(233,42,35)" fg:x="22845502" fg:w="1260472"/><text x="9.5029%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,472 samples, 0.51%)</title><rect x="9.2529%" y="1701" width="0.5105%" height="15" fill="rgb(231,13,6)" fg:x="22845502" fg:w="1260472"/><text x="9.5029%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,260,472 samples, 0.51%)</title><rect x="9.2529%" y="1685" width="0.5105%" height="15" fill="rgb(207,181,40)" fg:x="22845502" fg:w="1260472"/><text x="9.5029%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,260,472 samples, 0.51%)</title><rect x="9.2529%" y="1669" width="0.5105%" height="15" fill="rgb(254,173,49)" fg:x="22845502" fg:w="1260472"/><text x="9.5029%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (1,260,472 samples, 0.51%)</title><rect x="9.2529%" y="1653" width="0.5105%" height="15" fill="rgb(221,1,38)" fg:x="22845502" fg:w="1260472"/><text x="9.5029%" y="1663.50"></text></g><g><title>cfree (1,260,472 samples, 0.51%)</title><rect x="9.2529%" y="1637" width="0.5105%" height="15" fill="rgb(206,124,46)" fg:x="22845502" fg:w="1260472"/><text x="9.5029%" y="1647.50"></text></g><g><title>[libc.so.6] (1,260,472 samples, 0.51%)</title><rect x="9.2529%" y="1621" width="0.5105%" height="15" fill="rgb(249,21,11)" fg:x="22845502" fg:w="1260472"/><text x="9.5029%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="2117" width="0.9053%" height="15" fill="rgb(222,201,40)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="2101" width="0.9053%" height="15" fill="rgb(235,61,29)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="2085" width="0.9053%" height="15" fill="rgb(219,207,3)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="2069" width="0.9053%" height="15" fill="rgb(222,56,46)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="2053" width="0.9053%" height="15" fill="rgb(239,76,54)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="2037" width="0.9053%" height="15" fill="rgb(231,124,27)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="2047.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="2021" width="0.9053%" height="15" fill="rgb(249,195,6)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="2031.50"></text></g><g><title>core::mem::drop (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="2005" width="0.9053%" height="15" fill="rgb(237,174,47)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="1989" width="0.9053%" height="15" fill="rgb(206,201,31)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="1999.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="1973" width="0.9053%" height="15" fill="rgb(231,57,52)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="1957" width="0.9053%" height="15" fill="rgb(248,177,22)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="1941" width="0.9053%" height="15" fill="rgb(215,211,37)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="1925" width="0.9053%" height="15" fill="rgb(241,128,51)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="1935.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="1909" width="0.9053%" height="15" fill="rgb(227,165,31)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="1893" width="0.9053%" height="15" fill="rgb(228,167,24)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="1877" width="0.9053%" height="15" fill="rgb(228,143,12)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="1861" width="0.9053%" height="15" fill="rgb(249,149,8)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="1845" width="0.9053%" height="15" fill="rgb(243,35,44)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="1855.50"></text></g><g><title>core::mem::drop (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="1829" width="0.9053%" height="15" fill="rgb(246,89,9)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="1813" width="0.9053%" height="15" fill="rgb(233,213,13)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="1797" width="0.9053%" height="15" fill="rgb(233,141,41)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="1807.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,235,116 samples, 0.91%)</title><rect x="9.2529%" y="1781" width="0.9053%" height="15" fill="rgb(239,167,4)" fg:x="22845502" fg:w="2235116"/><text x="9.5029%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (974,644 samples, 0.39%)</title><rect x="9.7634%" y="1765" width="0.3948%" height="15" fill="rgb(209,217,16)" fg:x="24105974" fg:w="974644"/><text x="10.0134%" y="1775.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (974,644 samples, 0.39%)</title><rect x="9.7634%" y="1749" width="0.3948%" height="15" fill="rgb(219,88,35)" fg:x="24105974" fg:w="974644"/><text x="10.0134%" y="1759.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (974,644 samples, 0.39%)</title><rect x="9.7634%" y="1733" width="0.3948%" height="15" fill="rgb(220,193,23)" fg:x="24105974" fg:w="974644"/><text x="10.0134%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (974,644 samples, 0.39%)</title><rect x="9.7634%" y="1717" width="0.3948%" height="15" fill="rgb(230,90,52)" fg:x="24105974" fg:w="974644"/><text x="10.0134%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (974,644 samples, 0.39%)</title><rect x="9.7634%" y="1701" width="0.3948%" height="15" fill="rgb(252,106,19)" fg:x="24105974" fg:w="974644"/><text x="10.0134%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (974,644 samples, 0.39%)</title><rect x="9.7634%" y="1685" width="0.3948%" height="15" fill="rgb(206,74,20)" fg:x="24105974" fg:w="974644"/><text x="10.0134%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (974,644 samples, 0.39%)</title><rect x="9.7634%" y="1669" width="0.3948%" height="15" fill="rgb(230,138,44)" fg:x="24105974" fg:w="974644"/><text x="10.0134%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (974,644 samples, 0.39%)</title><rect x="9.7634%" y="1653" width="0.3948%" height="15" fill="rgb(235,182,43)" fg:x="24105974" fg:w="974644"/><text x="10.0134%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (974,644 samples, 0.39%)</title><rect x="9.7634%" y="1637" width="0.3948%" height="15" fill="rgb(242,16,51)" fg:x="24105974" fg:w="974644"/><text x="10.0134%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (974,644 samples, 0.39%)</title><rect x="9.7634%" y="1621" width="0.3948%" height="15" fill="rgb(248,9,4)" fg:x="24105974" fg:w="974644"/><text x="10.0134%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (974,644 samples, 0.39%)</title><rect x="9.7634%" y="1605" width="0.3948%" height="15" fill="rgb(210,31,22)" fg:x="24105974" fg:w="974644"/><text x="10.0134%" y="1615.50"></text></g><g><title>core::mem::drop (974,644 samples, 0.39%)</title><rect x="9.7634%" y="1589" width="0.3948%" height="15" fill="rgb(239,54,39)" fg:x="24105974" fg:w="974644"/><text x="10.0134%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (974,644 samples, 0.39%)</title><rect x="9.7634%" y="1573" width="0.3948%" height="15" fill="rgb(230,99,41)" fg:x="24105974" fg:w="974644"/><text x="10.0134%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (974,644 samples, 0.39%)</title><rect x="9.7634%" y="1557" width="0.3948%" height="15" fill="rgb(253,106,12)" fg:x="24105974" fg:w="974644"/><text x="10.0134%" y="1567.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (974,644 samples, 0.39%)</title><rect x="9.7634%" y="1541" width="0.3948%" height="15" fill="rgb(213,46,41)" fg:x="24105974" fg:w="974644"/><text x="10.0134%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (3,915,683 samples, 1.59%)</title><rect x="10.1582%" y="2101" width="1.5859%" height="15" fill="rgb(215,133,35)" fg:x="25080618" fg:w="3915683"/><text x="10.4082%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,915,683 samples, 1.59%)</title><rect x="10.1582%" y="2085" width="1.5859%" height="15" fill="rgb(213,28,5)" fg:x="25080618" fg:w="3915683"/><text x="10.4082%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,915,683 samples, 1.59%)</title><rect x="10.1582%" y="2069" width="1.5859%" height="15" fill="rgb(215,77,49)" fg:x="25080618" fg:w="3915683"/><text x="10.4082%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,915,683 samples, 1.59%)</title><rect x="10.1582%" y="2053" width="1.5859%" height="15" fill="rgb(248,100,22)" fg:x="25080618" fg:w="3915683"/><text x="10.4082%" y="2063.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,915,683 samples, 1.59%)</title><rect x="10.1582%" y="2037" width="1.5859%" height="15" fill="rgb(208,67,9)" fg:x="25080618" fg:w="3915683"/><text x="10.4082%" y="2047.50"></text></g><g><title>malloc (3,915,683 samples, 1.59%)</title><rect x="10.1582%" y="2021" width="1.5859%" height="15" fill="rgb(219,133,21)" fg:x="25080618" fg:w="3915683"/><text x="10.4082%" y="2031.50"></text></g><g><title>[libc.so.6] (3,915,683 samples, 1.59%)</title><rect x="10.1582%" y="2005" width="1.5859%" height="15" fill="rgb(246,46,29)" fg:x="25080618" fg:w="3915683"/><text x="10.4082%" y="2015.50"></text></g><g><title>[libc.so.6] (3,915,683 samples, 1.59%)</title><rect x="10.1582%" y="1989" width="1.5859%" height="15" fill="rgb(246,185,52)" fg:x="25080618" fg:w="3915683"/><text x="10.4082%" y="1999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,065,432 samples, 1.65%)</title><rect x="11.7441%" y="2085" width="1.6466%" height="15" fill="rgb(252,136,11)" fg:x="28996301" fg:w="4065432"/><text x="11.9941%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4,065,432 samples, 1.65%)</title><rect x="11.7441%" y="2069" width="1.6466%" height="15" fill="rgb(219,138,53)" fg:x="28996301" fg:w="4065432"/><text x="11.9941%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (4,065,432 samples, 1.65%)</title><rect x="11.7441%" y="2053" width="1.6466%" height="15" fill="rgb(211,51,23)" fg:x="28996301" fg:w="4065432"/><text x="11.9941%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (4,065,432 samples, 1.65%)</title><rect x="11.7441%" y="2037" width="1.6466%" height="15" fill="rgb(247,221,28)" fg:x="28996301" fg:w="4065432"/><text x="11.9941%" y="2047.50"></text></g><g><title>alloc::raw_vec::finish_grow (4,065,432 samples, 1.65%)</title><rect x="11.7441%" y="2021" width="1.6466%" height="15" fill="rgb(251,222,45)" fg:x="28996301" fg:w="4065432"/><text x="11.9941%" y="2031.50"></text></g><g><title>malloc (4,065,432 samples, 1.65%)</title><rect x="11.7441%" y="2005" width="1.6466%" height="15" fill="rgb(217,162,53)" fg:x="28996301" fg:w="4065432"/><text x="11.9941%" y="2015.50"></text></g><g><title>[libc.so.6] (4,065,432 samples, 1.65%)</title><rect x="11.7441%" y="1989" width="1.6466%" height="15" fill="rgb(229,93,14)" fg:x="28996301" fg:w="4065432"/><text x="11.9941%" y="1999.50"></text></g><g><title>[libc.so.6] (2,799,016 samples, 1.13%)</title><rect x="12.2570%" y="1973" width="1.1337%" height="15" fill="rgb(209,67,49)" fg:x="30262717" fg:w="2799016"/><text x="12.5070%" y="1983.50"></text></g><g><title>[libc.so.6] (1,417,594 samples, 0.57%)</title><rect x="12.8165%" y="1957" width="0.5742%" height="15" fill="rgb(213,87,29)" fg:x="31644139" fg:w="1417594"/><text x="13.0665%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,382,545 samples, 0.56%)</title><rect x="13.3907%" y="2069" width="0.5600%" height="15" fill="rgb(205,151,52)" fg:x="33061733" fg:w="1382545"/><text x="13.6407%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,382,545 samples, 0.56%)</title><rect x="13.3907%" y="2053" width="0.5600%" height="15" fill="rgb(253,215,39)" fg:x="33061733" fg:w="1382545"/><text x="13.6407%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,382,545 samples, 0.56%)</title><rect x="13.3907%" y="2037" width="0.5600%" height="15" fill="rgb(221,220,41)" fg:x="33061733" fg:w="1382545"/><text x="13.6407%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,382,545 samples, 0.56%)</title><rect x="13.3907%" y="2021" width="0.5600%" height="15" fill="rgb(218,133,21)" fg:x="33061733" fg:w="1382545"/><text x="13.6407%" y="2031.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,382,545 samples, 0.56%)</title><rect x="13.3907%" y="2005" width="0.5600%" height="15" fill="rgb(221,193,43)" fg:x="33061733" fg:w="1382545"/><text x="13.6407%" y="2015.50"></text></g><g><title>malloc (1,382,545 samples, 0.56%)</title><rect x="13.3907%" y="1989" width="0.5600%" height="15" fill="rgb(240,128,52)" fg:x="33061733" fg:w="1382545"/><text x="13.6407%" y="1999.50"></text></g><g><title>[libc.so.6] (1,382,545 samples, 0.56%)</title><rect x="13.3907%" y="1973" width="0.5600%" height="15" fill="rgb(253,114,12)" fg:x="33061733" fg:w="1382545"/><text x="13.6407%" y="1983.50"></text></g><g><title>[libc.so.6] (1,382,545 samples, 0.56%)</title><rect x="13.3907%" y="1957" width="0.5600%" height="15" fill="rgb(215,223,47)" fg:x="33061733" fg:w="1382545"/><text x="13.6407%" y="1967.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,232,954 samples, 0.50%)</title><rect x="13.9507%" y="2037" width="0.4994%" height="15" fill="rgb(248,225,23)" fg:x="34444278" fg:w="1232954"/><text x="14.2007%" y="2047.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (1,232,954 samples, 0.50%)</title><rect x="13.9507%" y="2021" width="0.4994%" height="15" fill="rgb(250,108,0)" fg:x="34444278" fg:w="1232954"/><text x="14.2007%" y="2031.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (1,232,954 samples, 0.50%)</title><rect x="13.9507%" y="2005" width="0.4994%" height="15" fill="rgb(228,208,7)" fg:x="34444278" fg:w="1232954"/><text x="14.2007%" y="2015.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,232,954 samples, 0.50%)</title><rect x="13.9507%" y="1989" width="0.4994%" height="15" fill="rgb(244,45,10)" fg:x="34444278" fg:w="1232954"/><text x="14.2007%" y="1999.50"></text></g><g><title>alloc::string::String::push_str (1,232,954 samples, 0.50%)</title><rect x="13.9507%" y="1973" width="0.4994%" height="15" fill="rgb(207,125,25)" fg:x="34444278" fg:w="1232954"/><text x="14.2007%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,232,954 samples, 0.50%)</title><rect x="13.9507%" y="1957" width="0.4994%" height="15" fill="rgb(210,195,18)" fg:x="34444278" fg:w="1232954"/><text x="14.2007%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,232,954 samples, 0.50%)</title><rect x="13.9507%" y="1941" width="0.4994%" height="15" fill="rgb(249,80,12)" fg:x="34444278" fg:w="1232954"/><text x="14.2007%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,232,954 samples, 0.50%)</title><rect x="13.9507%" y="1925" width="0.4994%" height="15" fill="rgb(221,65,9)" fg:x="34444278" fg:w="1232954"/><text x="14.2007%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,232,954 samples, 0.50%)</title><rect x="13.9507%" y="1909" width="0.4994%" height="15" fill="rgb(235,49,36)" fg:x="34444278" fg:w="1232954"/><text x="14.2007%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,232,954 samples, 0.50%)</title><rect x="13.9507%" y="1893" width="0.4994%" height="15" fill="rgb(225,32,20)" fg:x="34444278" fg:w="1232954"/><text x="14.2007%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,232,954 samples, 0.50%)</title><rect x="13.9507%" y="1877" width="0.4994%" height="15" fill="rgb(215,141,46)" fg:x="34444278" fg:w="1232954"/><text x="14.2007%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,232,954 samples, 0.50%)</title><rect x="13.9507%" y="1861" width="0.4994%" height="15" fill="rgb(250,160,47)" fg:x="34444278" fg:w="1232954"/><text x="14.2007%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,232,954 samples, 0.50%)</title><rect x="13.9507%" y="1845" width="0.4994%" height="15" fill="rgb(216,222,40)" fg:x="34444278" fg:w="1232954"/><text x="14.2007%" y="1855.50"></text></g><g><title>[libc.so.6] (939,428 samples, 0.38%)</title><rect x="14.4500%" y="1989" width="0.3805%" height="15" fill="rgb(234,217,39)" fg:x="35677232" fg:w="939428"/><text x="14.7000%" y="1999.50"></text></g><g><title>benchmark::json_to_html_node (2,267,584 samples, 0.92%)</title><rect x="14.4500%" y="2021" width="0.9184%" height="15" fill="rgb(207,178,40)" fg:x="35677232" fg:w="2267584"/><text x="14.7000%" y="2031.50"></text></g><g><title>benchmark::json_to_html_node (2,267,584 samples, 0.92%)</title><rect x="14.4500%" y="2005" width="0.9184%" height="15" fill="rgb(221,136,13)" fg:x="35677232" fg:w="2267584"/><text x="14.7000%" y="2015.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,328,156 samples, 0.54%)</title><rect x="14.8305%" y="1989" width="0.5379%" height="15" fill="rgb(249,199,10)" fg:x="36616660" fg:w="1328156"/><text x="15.0805%" y="1999.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,328,156 samples, 0.54%)</title><rect x="14.8305%" y="1973" width="0.5379%" height="15" fill="rgb(249,222,13)" fg:x="36616660" fg:w="1328156"/><text x="15.0805%" y="1983.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,328,156 samples, 0.54%)</title><rect x="14.8305%" y="1957" width="0.5379%" height="15" fill="rgb(244,185,38)" fg:x="36616660" fg:w="1328156"/><text x="15.0805%" y="1967.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,328,156 samples, 0.54%)</title><rect x="14.8305%" y="1941" width="0.5379%" height="15" fill="rgb(236,202,9)" fg:x="36616660" fg:w="1328156"/><text x="15.0805%" y="1951.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,328,156 samples, 0.54%)</title><rect x="14.8305%" y="1925" width="0.5379%" height="15" fill="rgb(250,229,37)" fg:x="36616660" fg:w="1328156"/><text x="15.0805%" y="1935.50"></text></g><g><title>benchmark::json_to_html_node (3,434,880 samples, 1.39%)</title><rect x="14.4500%" y="2037" width="1.3912%" height="15" fill="rgb(206,174,23)" fg:x="35677232" fg:w="3434880"/><text x="14.7000%" y="2047.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,167,296 samples, 0.47%)</title><rect x="15.3684%" y="2021" width="0.4728%" height="15" fill="rgb(211,33,43)" fg:x="37944816" fg:w="1167296"/><text x="15.6184%" y="2031.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,167,296 samples, 0.47%)</title><rect x="15.3684%" y="2005" width="0.4728%" height="15" fill="rgb(245,58,50)" fg:x="37944816" fg:w="1167296"/><text x="15.6184%" y="2015.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,167,296 samples, 0.47%)</title><rect x="15.3684%" y="1989" width="0.4728%" height="15" fill="rgb(244,68,36)" fg:x="37944816" fg:w="1167296"/><text x="15.6184%" y="1999.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,167,296 samples, 0.47%)</title><rect x="15.3684%" y="1973" width="0.4728%" height="15" fill="rgb(232,229,15)" fg:x="37944816" fg:w="1167296"/><text x="15.6184%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,167,296 samples, 0.47%)</title><rect x="15.3684%" y="1957" width="0.4728%" height="15" fill="rgb(254,30,23)" fg:x="37944816" fg:w="1167296"/><text x="15.6184%" y="1967.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,167,296 samples, 0.47%)</title><rect x="15.3684%" y="1941" width="0.4728%" height="15" fill="rgb(235,160,14)" fg:x="37944816" fg:w="1167296"/><text x="15.6184%" y="1951.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,167,296 samples, 0.47%)</title><rect x="15.3684%" y="1925" width="0.4728%" height="15" fill="rgb(212,155,44)" fg:x="37944816" fg:w="1167296"/><text x="15.6184%" y="1935.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,167,296 samples, 0.47%)</title><rect x="15.3684%" y="1909" width="0.4728%" height="15" fill="rgb(226,2,50)" fg:x="37944816" fg:w="1167296"/><text x="15.6184%" y="1919.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (1,167,296 samples, 0.47%)</title><rect x="15.3684%" y="1893" width="0.4728%" height="15" fill="rgb(234,177,6)" fg:x="37944816" fg:w="1167296"/><text x="15.6184%" y="1903.50"></text></g><g><title>benchmark::json_to_html_node (5,922,179 samples, 2.40%)</title><rect x="13.9507%" y="2069" width="2.3986%" height="15" fill="rgb(217,24,9)" fg:x="34444278" fg:w="5922179"/><text x="14.2007%" y="2079.50">be..</text></g><g><title>benchmark::json_to_html_node (5,922,179 samples, 2.40%)</title><rect x="13.9507%" y="2053" width="2.3986%" height="15" fill="rgb(220,13,46)" fg:x="34444278" fg:w="5922179"/><text x="14.2007%" y="2063.50">be..</text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,254,345 samples, 0.51%)</title><rect x="15.8412%" y="2037" width="0.5080%" height="15" fill="rgb(239,221,27)" fg:x="39112112" fg:w="1254345"/><text x="16.0912%" y="2047.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,254,345 samples, 0.51%)</title><rect x="15.8412%" y="2021" width="0.5080%" height="15" fill="rgb(222,198,25)" fg:x="39112112" fg:w="1254345"/><text x="16.0912%" y="2031.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,254,345 samples, 0.51%)</title><rect x="15.8412%" y="2005" width="0.5080%" height="15" fill="rgb(211,99,13)" fg:x="39112112" fg:w="1254345"/><text x="16.0912%" y="2015.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,254,345 samples, 0.51%)</title><rect x="15.8412%" y="1989" width="0.5080%" height="15" fill="rgb(232,111,31)" fg:x="39112112" fg:w="1254345"/><text x="16.0912%" y="1999.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,254,345 samples, 0.51%)</title><rect x="15.8412%" y="1973" width="0.5080%" height="15" fill="rgb(245,82,37)" fg:x="39112112" fg:w="1254345"/><text x="16.0912%" y="1983.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,254,345 samples, 0.51%)</title><rect x="15.8412%" y="1957" width="0.5080%" height="15" fill="rgb(227,149,46)" fg:x="39112112" fg:w="1254345"/><text x="16.0912%" y="1967.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,254,345 samples, 0.51%)</title><rect x="15.8412%" y="1941" width="0.5080%" height="15" fill="rgb(218,36,50)" fg:x="39112112" fg:w="1254345"/><text x="16.0912%" y="1951.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,254,345 samples, 0.51%)</title><rect x="15.8412%" y="1925" width="0.5080%" height="15" fill="rgb(226,80,48)" fg:x="39112112" fg:w="1254345"/><text x="16.0912%" y="1935.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,254,345 samples, 0.51%)</title><rect x="15.8412%" y="1909" width="0.5080%" height="15" fill="rgb(238,224,15)" fg:x="39112112" fg:w="1254345"/><text x="16.0912%" y="1919.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,254,345 samples, 0.51%)</title><rect x="15.8412%" y="1893" width="0.5080%" height="15" fill="rgb(241,136,10)" fg:x="39112112" fg:w="1254345"/><text x="16.0912%" y="1903.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,254,345 samples, 0.51%)</title><rect x="15.8412%" y="1877" width="0.5080%" height="15" fill="rgb(208,32,45)" fg:x="39112112" fg:w="1254345"/><text x="16.0912%" y="1887.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (1,254,345 samples, 0.51%)</title><rect x="15.8412%" y="1861" width="0.5080%" height="15" fill="rgb(207,135,9)" fg:x="39112112" fg:w="1254345"/><text x="16.0912%" y="1871.50"></text></g><g><title>benchmark::apply_frame_modifications (16,201,609 samples, 6.56%)</title><rect x="10.1582%" y="2117" width="6.5620%" height="15" fill="rgb(206,86,44)" fg:x="25080618" fg:w="16201609"/><text x="10.4082%" y="2127.50">benchmark..</text></g><g><title>benchmark::json_to_html_node (12,285,926 samples, 4.98%)</title><rect x="11.7441%" y="2101" width="4.9761%" height="15" fill="rgb(245,177,15)" fg:x="28996301" fg:w="12285926"/><text x="11.9941%" y="2111.50">benchm..</text></g><g><title>benchmark::json_to_html_node (8,220,494 samples, 3.33%)</title><rect x="13.3907%" y="2085" width="3.3295%" height="15" fill="rgb(206,64,50)" fg:x="33061733" fg:w="8220494"/><text x="13.6407%" y="2095.50">ben..</text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (915,770 samples, 0.37%)</title><rect x="16.3493%" y="2069" width="0.3709%" height="15" fill="rgb(234,36,40)" fg:x="40366457" fg:w="915770"/><text x="16.5993%" y="2079.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (915,770 samples, 0.37%)</title><rect x="16.3493%" y="2053" width="0.3709%" height="15" fill="rgb(213,64,8)" fg:x="40366457" fg:w="915770"/><text x="16.5993%" y="2063.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (915,770 samples, 0.37%)</title><rect x="16.3493%" y="2037" width="0.3709%" height="15" fill="rgb(210,75,36)" fg:x="40366457" fg:w="915770"/><text x="16.5993%" y="2047.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (915,770 samples, 0.37%)</title><rect x="16.3493%" y="2021" width="0.3709%" height="15" fill="rgb(229,88,21)" fg:x="40366457" fg:w="915770"/><text x="16.5993%" y="2031.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (915,770 samples, 0.37%)</title><rect x="16.3493%" y="2005" width="0.3709%" height="15" fill="rgb(252,204,47)" fg:x="40366457" fg:w="915770"/><text x="16.5993%" y="2015.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (915,770 samples, 0.37%)</title><rect x="16.3493%" y="1989" width="0.3709%" height="15" fill="rgb(208,77,27)" fg:x="40366457" fg:w="915770"/><text x="16.5993%" y="1999.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (915,770 samples, 0.37%)</title><rect x="16.3493%" y="1973" width="0.3709%" height="15" fill="rgb(221,76,26)" fg:x="40366457" fg:w="915770"/><text x="16.5993%" y="1983.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (915,770 samples, 0.37%)</title><rect x="16.3493%" y="1957" width="0.3709%" height="15" fill="rgb(225,139,18)" fg:x="40366457" fg:w="915770"/><text x="16.5993%" y="1967.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,267,488 samples, 0.51%)</title><rect x="16.7202%" y="1845" width="0.5134%" height="15" fill="rgb(230,137,11)" fg:x="41282227" fg:w="1267488"/><text x="16.9702%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,267,488 samples, 0.51%)</title><rect x="16.7202%" y="1829" width="0.5134%" height="15" fill="rgb(212,28,1)" fg:x="41282227" fg:w="1267488"/><text x="16.9702%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,267,488 samples, 0.51%)</title><rect x="16.7202%" y="1813" width="0.5134%" height="15" fill="rgb(248,164,17)" fg:x="41282227" fg:w="1267488"/><text x="16.9702%" y="1823.50"></text></g><g><title>alloc::slice::hack::to_vec (1,267,488 samples, 0.51%)</title><rect x="16.7202%" y="1797" width="0.5134%" height="15" fill="rgb(222,171,42)" fg:x="41282227" fg:w="1267488"/><text x="16.9702%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,267,488 samples, 0.51%)</title><rect x="16.7202%" y="1781" width="0.5134%" height="15" fill="rgb(243,84,45)" fg:x="41282227" fg:w="1267488"/><text x="16.9702%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,267,488 samples, 0.51%)</title><rect x="16.7202%" y="1765" width="0.5134%" height="15" fill="rgb(252,49,23)" fg:x="41282227" fg:w="1267488"/><text x="16.9702%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,267,488 samples, 0.51%)</title><rect x="16.7202%" y="1749" width="0.5134%" height="15" fill="rgb(215,19,7)" fg:x="41282227" fg:w="1267488"/><text x="16.9702%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,267,488 samples, 0.51%)</title><rect x="16.7202%" y="1733" width="0.5134%" height="15" fill="rgb(238,81,41)" fg:x="41282227" fg:w="1267488"/><text x="16.9702%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,267,488 samples, 0.51%)</title><rect x="16.7202%" y="1717" width="0.5134%" height="15" fill="rgb(210,199,37)" fg:x="41282227" fg:w="1267488"/><text x="16.9702%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,267,488 samples, 0.51%)</title><rect x="16.7202%" y="1701" width="0.5134%" height="15" fill="rgb(244,192,49)" fg:x="41282227" fg:w="1267488"/><text x="16.9702%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,267,488 samples, 0.51%)</title><rect x="16.7202%" y="1685" width="0.5134%" height="15" fill="rgb(226,211,11)" fg:x="41282227" fg:w="1267488"/><text x="16.9702%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (1,267,488 samples, 0.51%)</title><rect x="16.7202%" y="1669" width="0.5134%" height="15" fill="rgb(236,162,54)" fg:x="41282227" fg:w="1267488"/><text x="16.9702%" y="1679.50"></text></g><g><title>malloc (1,267,488 samples, 0.51%)</title><rect x="16.7202%" y="1653" width="0.5134%" height="15" fill="rgb(220,229,9)" fg:x="41282227" fg:w="1267488"/><text x="16.9702%" y="1663.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,408,860 samples, 0.57%)</title><rect x="17.7679%" y="1765" width="0.5706%" height="15" fill="rgb(250,87,22)" fg:x="43869205" fg:w="1408860"/><text x="18.0179%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,408,860 samples, 0.57%)</title><rect x="17.7679%" y="1749" width="0.5706%" height="15" fill="rgb(239,43,17)" fg:x="43869205" fg:w="1408860"/><text x="18.0179%" y="1759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,408,860 samples, 0.57%)</title><rect x="17.7679%" y="1733" width="0.5706%" height="15" fill="rgb(231,177,25)" fg:x="43869205" fg:w="1408860"/><text x="18.0179%" y="1743.50"></text></g><g><title>alloc::slice::hack::to_vec (1,408,860 samples, 0.57%)</title><rect x="17.7679%" y="1717" width="0.5706%" height="15" fill="rgb(219,179,1)" fg:x="43869205" fg:w="1408860"/><text x="18.0179%" y="1727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,408,860 samples, 0.57%)</title><rect x="17.7679%" y="1701" width="0.5706%" height="15" fill="rgb(238,219,53)" fg:x="43869205" fg:w="1408860"/><text x="18.0179%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,408,860 samples, 0.57%)</title><rect x="17.7679%" y="1685" width="0.5706%" height="15" fill="rgb(232,167,36)" fg:x="43869205" fg:w="1408860"/><text x="18.0179%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,408,860 samples, 0.57%)</title><rect x="17.7679%" y="1669" width="0.5706%" height="15" fill="rgb(244,19,51)" fg:x="43869205" fg:w="1408860"/><text x="18.0179%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,408,860 samples, 0.57%)</title><rect x="17.7679%" y="1653" width="0.5706%" height="15" fill="rgb(224,6,22)" fg:x="43869205" fg:w="1408860"/><text x="18.0179%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,408,860 samples, 0.57%)</title><rect x="17.7679%" y="1637" width="0.5706%" height="15" fill="rgb(224,145,5)" fg:x="43869205" fg:w="1408860"/><text x="18.0179%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,408,860 samples, 0.57%)</title><rect x="17.7679%" y="1621" width="0.5706%" height="15" fill="rgb(234,130,49)" fg:x="43869205" fg:w="1408860"/><text x="18.0179%" y="1631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,408,860 samples, 0.57%)</title><rect x="17.7679%" y="1605" width="0.5706%" height="15" fill="rgb(254,6,2)" fg:x="43869205" fg:w="1408860"/><text x="18.0179%" y="1615.50"></text></g><g><title>alloc::alloc::alloc (1,408,860 samples, 0.57%)</title><rect x="17.7679%" y="1589" width="0.5706%" height="15" fill="rgb(208,96,46)" fg:x="43869205" fg:w="1408860"/><text x="18.0179%" y="1599.50"></text></g><g><title>__rdl_alloc (1,408,860 samples, 0.57%)</title><rect x="17.7679%" y="1573" width="0.5706%" height="15" fill="rgb(239,3,39)" fg:x="43869205" fg:w="1408860"/><text x="18.0179%" y="1583.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,408,860 samples, 0.57%)</title><rect x="17.7679%" y="1557" width="0.5706%" height="15" fill="rgb(233,210,1)" fg:x="43869205" fg:w="1408860"/><text x="18.0179%" y="1567.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,033,556 samples, 0.42%)</title><rect x="18.3386%" y="1685" width="0.4186%" height="15" fill="rgb(244,137,37)" fg:x="45278065" fg:w="1033556"/><text x="18.5886%" y="1695.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,127,408 samples, 1.67%)</title><rect x="18.7572%" y="1605" width="1.6717%" height="15" fill="rgb(240,136,2)" fg:x="46311621" fg:w="4127408"/><text x="19.0072%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,127,408 samples, 1.67%)</title><rect x="18.7572%" y="1589" width="1.6717%" height="15" fill="rgb(239,18,37)" fg:x="46311621" fg:w="4127408"/><text x="19.0072%" y="1599.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,127,408 samples, 1.67%)</title><rect x="18.7572%" y="1573" width="1.6717%" height="15" fill="rgb(218,185,22)" fg:x="46311621" fg:w="4127408"/><text x="19.0072%" y="1583.50"></text></g><g><title>alloc::slice::hack::to_vec (4,127,408 samples, 1.67%)</title><rect x="18.7572%" y="1557" width="1.6717%" height="15" fill="rgb(225,218,4)" fg:x="46311621" fg:w="4127408"/><text x="19.0072%" y="1567.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,127,408 samples, 1.67%)</title><rect x="18.7572%" y="1541" width="1.6717%" height="15" fill="rgb(230,182,32)" fg:x="46311621" fg:w="4127408"/><text x="19.0072%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,127,408 samples, 1.67%)</title><rect x="18.7572%" y="1525" width="1.6717%" height="15" fill="rgb(242,56,43)" fg:x="46311621" fg:w="4127408"/><text x="19.0072%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,127,408 samples, 1.67%)</title><rect x="18.7572%" y="1509" width="1.6717%" height="15" fill="rgb(233,99,24)" fg:x="46311621" fg:w="4127408"/><text x="19.0072%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,127,408 samples, 1.67%)</title><rect x="18.7572%" y="1493" width="1.6717%" height="15" fill="rgb(234,209,42)" fg:x="46311621" fg:w="4127408"/><text x="19.0072%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,127,408 samples, 1.67%)</title><rect x="18.7572%" y="1477" width="1.6717%" height="15" fill="rgb(227,7,12)" fg:x="46311621" fg:w="4127408"/><text x="19.0072%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,127,408 samples, 1.67%)</title><rect x="18.7572%" y="1461" width="1.6717%" height="15" fill="rgb(245,203,43)" fg:x="46311621" fg:w="4127408"/><text x="19.0072%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,127,408 samples, 1.67%)</title><rect x="18.7572%" y="1445" width="1.6717%" height="15" fill="rgb(238,205,33)" fg:x="46311621" fg:w="4127408"/><text x="19.0072%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (4,127,408 samples, 1.67%)</title><rect x="18.7572%" y="1429" width="1.6717%" height="15" fill="rgb(231,56,7)" fg:x="46311621" fg:w="4127408"/><text x="19.0072%" y="1439.50"></text></g><g><title>malloc (4,127,408 samples, 1.67%)</title><rect x="18.7572%" y="1413" width="1.6717%" height="15" fill="rgb(244,186,29)" fg:x="46311621" fg:w="4127408"/><text x="19.0072%" y="1423.50"></text></g><g><title>[libc.so.6] (2,829,950 samples, 1.15%)</title><rect x="19.2827%" y="1397" width="1.1462%" height="15" fill="rgb(234,111,31)" fg:x="47609079" fg:w="2829950"/><text x="19.5327%" y="1407.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,402,863 samples, 0.97%)</title><rect x="20.4289%" y="1525" width="0.9732%" height="15" fill="rgb(241,149,10)" fg:x="50439029" fg:w="2402863"/><text x="20.6789%" y="1535.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,310,763 samples, 0.53%)</title><rect x="21.9124%" y="1365" width="0.5309%" height="15" fill="rgb(249,206,44)" fg:x="54101844" fg:w="1310763"/><text x="22.1624%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,310,763 samples, 0.53%)</title><rect x="21.9124%" y="1349" width="0.5309%" height="15" fill="rgb(251,153,30)" fg:x="54101844" fg:w="1310763"/><text x="22.1624%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,310,763 samples, 0.53%)</title><rect x="21.9124%" y="1333" width="0.5309%" height="15" fill="rgb(239,152,38)" fg:x="54101844" fg:w="1310763"/><text x="22.1624%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (1,310,763 samples, 0.53%)</title><rect x="21.9124%" y="1317" width="0.5309%" height="15" fill="rgb(249,139,47)" fg:x="54101844" fg:w="1310763"/><text x="22.1624%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,310,763 samples, 0.53%)</title><rect x="21.9124%" y="1301" width="0.5309%" height="15" fill="rgb(244,64,35)" fg:x="54101844" fg:w="1310763"/><text x="22.1624%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,310,763 samples, 0.53%)</title><rect x="21.9124%" y="1285" width="0.5309%" height="15" fill="rgb(216,46,15)" fg:x="54101844" fg:w="1310763"/><text x="22.1624%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,310,763 samples, 0.53%)</title><rect x="21.9124%" y="1269" width="0.5309%" height="15" fill="rgb(250,74,19)" fg:x="54101844" fg:w="1310763"/><text x="22.1624%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,310,763 samples, 0.53%)</title><rect x="21.9124%" y="1253" width="0.5309%" height="15" fill="rgb(249,42,33)" fg:x="54101844" fg:w="1310763"/><text x="22.1624%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,310,763 samples, 0.53%)</title><rect x="21.9124%" y="1237" width="0.5309%" height="15" fill="rgb(242,149,17)" fg:x="54101844" fg:w="1310763"/><text x="22.1624%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,310,763 samples, 0.53%)</title><rect x="21.9124%" y="1221" width="0.5309%" height="15" fill="rgb(244,29,21)" fg:x="54101844" fg:w="1310763"/><text x="22.1624%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,310,763 samples, 0.53%)</title><rect x="21.9124%" y="1205" width="0.5309%" height="15" fill="rgb(220,130,37)" fg:x="54101844" fg:w="1310763"/><text x="22.1624%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (1,310,763 samples, 0.53%)</title><rect x="21.9124%" y="1189" width="0.5309%" height="15" fill="rgb(211,67,2)" fg:x="54101844" fg:w="1310763"/><text x="22.1624%" y="1199.50"></text></g><g><title>malloc (1,310,763 samples, 0.53%)</title><rect x="21.9124%" y="1173" width="0.5309%" height="15" fill="rgb(235,68,52)" fg:x="54101844" fg:w="1310763"/><text x="22.1624%" y="1183.50"></text></g><g><title>[libc.so.6] (1,310,763 samples, 0.53%)</title><rect x="21.9124%" y="1157" width="0.5309%" height="15" fill="rgb(246,142,3)" fg:x="54101844" fg:w="1310763"/><text x="22.1624%" y="1167.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,261,863 samples, 0.51%)</title><rect x="22.4433%" y="1285" width="0.5111%" height="15" fill="rgb(241,25,7)" fg:x="55412607" fg:w="1261863"/><text x="22.6933%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,261,863 samples, 0.51%)</title><rect x="22.4433%" y="1269" width="0.5111%" height="15" fill="rgb(242,119,39)" fg:x="55412607" fg:w="1261863"/><text x="22.6933%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,261,863 samples, 0.51%)</title><rect x="22.4433%" y="1253" width="0.5111%" height="15" fill="rgb(241,98,45)" fg:x="55412607" fg:w="1261863"/><text x="22.6933%" y="1263.50"></text></g><g><title>alloc::slice::hack::to_vec (1,261,863 samples, 0.51%)</title><rect x="22.4433%" y="1237" width="0.5111%" height="15" fill="rgb(254,28,30)" fg:x="55412607" fg:w="1261863"/><text x="22.6933%" y="1247.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,261,863 samples, 0.51%)</title><rect x="22.4433%" y="1221" width="0.5111%" height="15" fill="rgb(241,142,54)" fg:x="55412607" fg:w="1261863"/><text x="22.6933%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,261,863 samples, 0.51%)</title><rect x="22.4433%" y="1205" width="0.5111%" height="15" fill="rgb(222,85,15)" fg:x="55412607" fg:w="1261863"/><text x="22.6933%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,261,863 samples, 0.51%)</title><rect x="22.4433%" y="1189" width="0.5111%" height="15" fill="rgb(210,85,47)" fg:x="55412607" fg:w="1261863"/><text x="22.6933%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,261,863 samples, 0.51%)</title><rect x="22.4433%" y="1173" width="0.5111%" height="15" fill="rgb(224,206,25)" fg:x="55412607" fg:w="1261863"/><text x="22.6933%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,261,863 samples, 0.51%)</title><rect x="22.4433%" y="1157" width="0.5111%" height="15" fill="rgb(243,201,19)" fg:x="55412607" fg:w="1261863"/><text x="22.6933%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,261,863 samples, 0.51%)</title><rect x="22.4433%" y="1141" width="0.5111%" height="15" fill="rgb(236,59,4)" fg:x="55412607" fg:w="1261863"/><text x="22.6933%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,261,863 samples, 0.51%)</title><rect x="22.4433%" y="1125" width="0.5111%" height="15" fill="rgb(254,179,45)" fg:x="55412607" fg:w="1261863"/><text x="22.6933%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (1,261,863 samples, 0.51%)</title><rect x="22.4433%" y="1109" width="0.5111%" height="15" fill="rgb(226,14,10)" fg:x="55412607" fg:w="1261863"/><text x="22.6933%" y="1119.50"></text></g><g><title>malloc (1,261,863 samples, 0.51%)</title><rect x="22.4433%" y="1093" width="0.5111%" height="15" fill="rgb(244,27,41)" fg:x="55412607" fg:w="1261863"/><text x="22.6933%" y="1103.50"></text></g><g><title>[libc.so.6] (1,261,863 samples, 0.51%)</title><rect x="22.4433%" y="1077" width="0.5111%" height="15" fill="rgb(235,35,32)" fg:x="55412607" fg:w="1261863"/><text x="22.6933%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,301,128 samples, 0.53%)</title><rect x="22.9543%" y="1125" width="0.5270%" height="15" fill="rgb(218,68,31)" fg:x="56674470" fg:w="1301128"/><text x="23.2043%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,301,128 samples, 0.53%)</title><rect x="22.9543%" y="1109" width="0.5270%" height="15" fill="rgb(207,120,37)" fg:x="56674470" fg:w="1301128"/><text x="23.2043%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,301,128 samples, 0.53%)</title><rect x="22.9543%" y="1093" width="0.5270%" height="15" fill="rgb(227,98,0)" fg:x="56674470" fg:w="1301128"/><text x="23.2043%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (1,301,128 samples, 0.53%)</title><rect x="22.9543%" y="1077" width="0.5270%" height="15" fill="rgb(207,7,3)" fg:x="56674470" fg:w="1301128"/><text x="23.2043%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,301,128 samples, 0.53%)</title><rect x="22.9543%" y="1061" width="0.5270%" height="15" fill="rgb(206,98,19)" fg:x="56674470" fg:w="1301128"/><text x="23.2043%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,301,128 samples, 0.53%)</title><rect x="22.9543%" y="1045" width="0.5270%" height="15" fill="rgb(217,5,26)" fg:x="56674470" fg:w="1301128"/><text x="23.2043%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,301,128 samples, 0.53%)</title><rect x="22.9543%" y="1029" width="0.5270%" height="15" fill="rgb(235,190,38)" fg:x="56674470" fg:w="1301128"/><text x="23.2043%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,301,128 samples, 0.53%)</title><rect x="22.9543%" y="1013" width="0.5270%" height="15" fill="rgb(247,86,24)" fg:x="56674470" fg:w="1301128"/><text x="23.2043%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,301,128 samples, 0.53%)</title><rect x="22.9543%" y="997" width="0.5270%" height="15" fill="rgb(205,101,16)" fg:x="56674470" fg:w="1301128"/><text x="23.2043%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,301,128 samples, 0.53%)</title><rect x="22.9543%" y="981" width="0.5270%" height="15" fill="rgb(246,168,33)" fg:x="56674470" fg:w="1301128"/><text x="23.2043%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,301,128 samples, 0.53%)</title><rect x="22.9543%" y="965" width="0.5270%" height="15" fill="rgb(231,114,1)" fg:x="56674470" fg:w="1301128"/><text x="23.2043%" y="975.50"></text></g><g><title>alloc::alloc::alloc (1,301,128 samples, 0.53%)</title><rect x="22.9543%" y="949" width="0.5270%" height="15" fill="rgb(207,184,53)" fg:x="56674470" fg:w="1301128"/><text x="23.2043%" y="959.50"></text></g><g><title>__rdl_alloc (1,301,128 samples, 0.53%)</title><rect x="22.9543%" y="933" width="0.5270%" height="15" fill="rgb(224,95,51)" fg:x="56674470" fg:w="1301128"/><text x="23.2043%" y="943.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,301,128 samples, 0.53%)</title><rect x="22.9543%" y="917" width="0.5270%" height="15" fill="rgb(212,188,45)" fg:x="56674470" fg:w="1301128"/><text x="23.2043%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,281,432 samples, 0.52%)</title><rect x="23.4813%" y="725" width="0.5190%" height="15" fill="rgb(223,154,38)" fg:x="57975598" fg:w="1281432"/><text x="23.7313%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,281,432 samples, 0.52%)</title><rect x="23.4813%" y="709" width="0.5190%" height="15" fill="rgb(251,22,52)" fg:x="57975598" fg:w="1281432"/><text x="23.7313%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,281,432 samples, 0.52%)</title><rect x="23.4813%" y="693" width="0.5190%" height="15" fill="rgb(229,209,22)" fg:x="57975598" fg:w="1281432"/><text x="23.7313%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1,281,432 samples, 0.52%)</title><rect x="23.4813%" y="677" width="0.5190%" height="15" fill="rgb(234,138,34)" fg:x="57975598" fg:w="1281432"/><text x="23.7313%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,281,432 samples, 0.52%)</title><rect x="23.4813%" y="661" width="0.5190%" height="15" fill="rgb(212,95,11)" fg:x="57975598" fg:w="1281432"/><text x="23.7313%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,281,432 samples, 0.52%)</title><rect x="23.4813%" y="645" width="0.5190%" height="15" fill="rgb(240,179,47)" fg:x="57975598" fg:w="1281432"/><text x="23.7313%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,281,432 samples, 0.52%)</title><rect x="23.4813%" y="629" width="0.5190%" height="15" fill="rgb(240,163,11)" fg:x="57975598" fg:w="1281432"/><text x="23.7313%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,281,432 samples, 0.52%)</title><rect x="23.4813%" y="613" width="0.5190%" height="15" fill="rgb(236,37,12)" fg:x="57975598" fg:w="1281432"/><text x="23.7313%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,281,432 samples, 0.52%)</title><rect x="23.4813%" y="597" width="0.5190%" height="15" fill="rgb(232,164,16)" fg:x="57975598" fg:w="1281432"/><text x="23.7313%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,281,432 samples, 0.52%)</title><rect x="23.4813%" y="581" width="0.5190%" height="15" fill="rgb(244,205,15)" fg:x="57975598" fg:w="1281432"/><text x="23.7313%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,281,432 samples, 0.52%)</title><rect x="23.4813%" y="565" width="0.5190%" height="15" fill="rgb(223,117,47)" fg:x="57975598" fg:w="1281432"/><text x="23.7313%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1,281,432 samples, 0.52%)</title><rect x="23.4813%" y="549" width="0.5190%" height="15" fill="rgb(244,107,35)" fg:x="57975598" fg:w="1281432"/><text x="23.7313%" y="559.50"></text></g><g><title>malloc (1,281,432 samples, 0.52%)</title><rect x="23.4813%" y="533" width="0.5190%" height="15" fill="rgb(205,140,8)" fg:x="57975598" fg:w="1281432"/><text x="23.7313%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="565" width="0.5400%" height="15" fill="rgb(228,84,46)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="549" width="0.5400%" height="15" fill="rgb(254,188,9)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="533" width="0.5400%" height="15" fill="rgb(206,112,54)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="517" width="0.5400%" height="15" fill="rgb(216,84,49)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="527.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="501" width="0.5400%" height="15" fill="rgb(214,194,35)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="485" width="0.5400%" height="15" fill="rgb(249,28,3)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="469" width="0.5400%" height="15" fill="rgb(222,56,52)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="453" width="0.5400%" height="15" fill="rgb(245,217,50)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="437" width="0.5400%" height="15" fill="rgb(213,201,24)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="447.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="421" width="0.5400%" height="15" fill="rgb(248,116,28)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="405" width="0.5400%" height="15" fill="rgb(219,72,43)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="389" width="0.5400%" height="15" fill="rgb(209,138,14)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="373" width="0.5400%" height="15" fill="rgb(222,18,33)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="357" width="0.5400%" height="15" fill="rgb(213,199,7)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="367.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="341" width="0.5400%" height="15" fill="rgb(250,110,10)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="351.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="325" width="0.5400%" height="15" fill="rgb(248,123,6)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="309" width="0.5400%" height="15" fill="rgb(206,91,31)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="293" width="0.5400%" height="15" fill="rgb(211,154,13)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="277" width="0.5400%" height="15" fill="rgb(225,148,7)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="261" width="0.5400%" height="15" fill="rgb(220,160,43)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="245" width="0.5400%" height="15" fill="rgb(213,52,39)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="229" width="0.5400%" height="15" fill="rgb(243,137,7)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="213" width="0.5400%" height="15" fill="rgb(230,79,13)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="197" width="0.5400%" height="15" fill="rgb(247,105,23)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="181" width="0.5400%" height="15" fill="rgb(223,179,41)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="165" width="0.5400%" height="15" fill="rgb(218,9,34)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="149" width="0.5400%" height="15" fill="rgb(222,106,8)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="133" width="0.5400%" height="15" fill="rgb(211,220,0)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="143.50"></text></g><g><title>malloc (1,333,265 samples, 0.54%)</title><rect x="24.0003%" y="117" width="0.5400%" height="15" fill="rgb(229,52,16)" fg:x="59257030" fg:w="1333265"/><text x="24.2503%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,599,910 samples, 1.05%)</title><rect x="24.0003%" y="645" width="1.0530%" height="15" fill="rgb(212,155,18)" fg:x="59257030" fg:w="2599910"/><text x="24.2503%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,599,910 samples, 1.05%)</title><rect x="24.0003%" y="629" width="1.0530%" height="15" fill="rgb(242,21,14)" fg:x="59257030" fg:w="2599910"/><text x="24.2503%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2,599,910 samples, 1.05%)</title><rect x="24.0003%" y="613" width="1.0530%" height="15" fill="rgb(222,19,48)" fg:x="59257030" fg:w="2599910"/><text x="24.2503%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,599,910 samples, 1.05%)</title><rect x="24.0003%" y="597" width="1.0530%" height="15" fill="rgb(232,45,27)" fg:x="59257030" fg:w="2599910"/><text x="24.2503%" y="607.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,599,910 samples, 1.05%)</title><rect x="24.0003%" y="581" width="1.0530%" height="15" fill="rgb(249,103,42)" fg:x="59257030" fg:w="2599910"/><text x="24.2503%" y="591.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,266,645 samples, 0.51%)</title><rect x="24.5403%" y="565" width="0.5130%" height="15" fill="rgb(246,81,33)" fg:x="60590295" fg:w="1266645"/><text x="24.7903%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,888,585 samples, 1.57%)</title><rect x="24.0003%" y="725" width="1.5750%" height="15" fill="rgb(252,33,42)" fg:x="59257030" fg:w="3888585"/><text x="24.2503%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,888,585 samples, 1.57%)</title><rect x="24.0003%" y="709" width="1.5750%" height="15" fill="rgb(209,212,41)" fg:x="59257030" fg:w="3888585"/><text x="24.2503%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (3,888,585 samples, 1.57%)</title><rect x="24.0003%" y="693" width="1.5750%" height="15" fill="rgb(207,154,6)" fg:x="59257030" fg:w="3888585"/><text x="24.2503%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,888,585 samples, 1.57%)</title><rect x="24.0003%" y="677" width="1.5750%" height="15" fill="rgb(223,64,47)" fg:x="59257030" fg:w="3888585"/><text x="24.2503%" y="687.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,888,585 samples, 1.57%)</title><rect x="24.0003%" y="661" width="1.5750%" height="15" fill="rgb(211,161,38)" fg:x="59257030" fg:w="3888585"/><text x="24.2503%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,288,675 samples, 0.52%)</title><rect x="25.0534%" y="645" width="0.5219%" height="15" fill="rgb(219,138,40)" fg:x="61856940" fg:w="1288675"/><text x="25.3034%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,327,746 samples, 0.54%)</title><rect x="25.5753%" y="661" width="0.5378%" height="15" fill="rgb(241,228,46)" fg:x="63145615" fg:w="1327746"/><text x="25.8253%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,327,746 samples, 0.54%)</title><rect x="25.5753%" y="645" width="0.5378%" height="15" fill="rgb(223,209,38)" fg:x="63145615" fg:w="1327746"/><text x="25.8253%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1,327,746 samples, 0.54%)</title><rect x="25.5753%" y="629" width="0.5378%" height="15" fill="rgb(236,164,45)" fg:x="63145615" fg:w="1327746"/><text x="25.8253%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,327,746 samples, 0.54%)</title><rect x="25.5753%" y="613" width="0.5378%" height="15" fill="rgb(231,15,5)" fg:x="63145615" fg:w="1327746"/><text x="25.8253%" y="623.50"></text></g><g><title>core::ptr::write (1,327,746 samples, 0.54%)</title><rect x="25.5753%" y="597" width="0.5378%" height="15" fill="rgb(252,35,15)" fg:x="63145615" fg:w="1327746"/><text x="25.8253%" y="607.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (7,865,441 samples, 3.19%)</title><rect x="23.4813%" y="741" width="3.1857%" height="15" fill="rgb(248,181,18)" fg:x="57975598" fg:w="7865441"/><text x="23.7313%" y="751.50">&lt;cs..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,695,424 samples, 1.09%)</title><rect x="25.5753%" y="725" width="1.0917%" height="15" fill="rgb(233,39,42)" fg:x="63145615" fg:w="2695424"/><text x="25.8253%" y="735.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,695,424 samples, 1.09%)</title><rect x="25.5753%" y="709" width="1.0917%" height="15" fill="rgb(238,110,33)" fg:x="63145615" fg:w="2695424"/><text x="25.8253%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,695,424 samples, 1.09%)</title><rect x="25.5753%" y="693" width="1.0917%" height="15" fill="rgb(233,195,10)" fg:x="63145615" fg:w="2695424"/><text x="25.8253%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,695,424 samples, 1.09%)</title><rect x="25.5753%" y="677" width="1.0917%" height="15" fill="rgb(254,105,3)" fg:x="63145615" fg:w="2695424"/><text x="25.8253%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,367,678 samples, 0.55%)</title><rect x="26.1131%" y="661" width="0.5539%" height="15" fill="rgb(221,225,9)" fg:x="64473361" fg:w="1367678"/><text x="26.3631%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,367,678 samples, 0.55%)</title><rect x="26.1131%" y="645" width="0.5539%" height="15" fill="rgb(224,227,45)" fg:x="64473361" fg:w="1367678"/><text x="26.3631%" y="655.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,367,678 samples, 0.55%)</title><rect x="26.1131%" y="629" width="0.5539%" height="15" fill="rgb(229,198,43)" fg:x="64473361" fg:w="1367678"/><text x="26.3631%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,367,678 samples, 0.55%)</title><rect x="26.1131%" y="613" width="0.5539%" height="15" fill="rgb(206,209,35)" fg:x="64473361" fg:w="1367678"/><text x="26.3631%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,367,678 samples, 0.55%)</title><rect x="26.1131%" y="597" width="0.5539%" height="15" fill="rgb(245,195,53)" fg:x="64473361" fg:w="1367678"/><text x="26.3631%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1,367,678 samples, 0.55%)</title><rect x="26.1131%" y="581" width="0.5539%" height="15" fill="rgb(240,92,26)" fg:x="64473361" fg:w="1367678"/><text x="26.3631%" y="591.50"></text></g><g><title>malloc (1,367,678 samples, 0.55%)</title><rect x="26.1131%" y="565" width="0.5539%" height="15" fill="rgb(207,40,23)" fg:x="64473361" fg:w="1367678"/><text x="26.3631%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,126,521 samples, 3.70%)</title><rect x="23.4813%" y="805" width="3.6964%" height="15" fill="rgb(223,111,35)" fg:x="57975598" fg:w="9126521"/><text x="23.7313%" y="815.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,126,521 samples, 3.70%)</title><rect x="23.4813%" y="789" width="3.6964%" height="15" fill="rgb(229,147,28)" fg:x="57975598" fg:w="9126521"/><text x="23.7313%" y="799.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,126,521 samples, 3.70%)</title><rect x="23.4813%" y="773" width="3.6964%" height="15" fill="rgb(211,29,28)" fg:x="57975598" fg:w="9126521"/><text x="23.7313%" y="783.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,126,521 samples, 3.70%)</title><rect x="23.4813%" y="757" width="3.6964%" height="15" fill="rgb(228,72,33)" fg:x="57975598" fg:w="9126521"/><text x="23.7313%" y="767.50">&lt;T a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,261,080 samples, 0.51%)</title><rect x="26.6670%" y="741" width="0.5108%" height="15" fill="rgb(205,214,31)" fg:x="65841039" fg:w="1261080"/><text x="26.9170%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,423,440 samples, 4.22%)</title><rect x="23.4813%" y="885" width="4.2217%" height="15" fill="rgb(224,111,15)" fg:x="57975598" fg:w="10423440"/><text x="23.7313%" y="895.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,423,440 samples, 4.22%)</title><rect x="23.4813%" y="869" width="4.2217%" height="15" fill="rgb(253,21,26)" fg:x="57975598" fg:w="10423440"/><text x="23.7313%" y="879.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (10,423,440 samples, 4.22%)</title><rect x="23.4813%" y="853" width="4.2217%" height="15" fill="rgb(245,139,43)" fg:x="57975598" fg:w="10423440"/><text x="23.7313%" y="863.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,423,440 samples, 4.22%)</title><rect x="23.4813%" y="837" width="4.2217%" height="15" fill="rgb(252,170,7)" fg:x="57975598" fg:w="10423440"/><text x="23.7313%" y="847.50">&lt;T as..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (10,423,440 samples, 4.22%)</title><rect x="23.4813%" y="821" width="4.2217%" height="15" fill="rgb(231,118,14)" fg:x="57975598" fg:w="10423440"/><text x="23.7313%" y="831.50">&lt;css_..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,296,919 samples, 0.53%)</title><rect x="27.1778%" y="805" width="0.5253%" height="15" fill="rgb(238,83,0)" fg:x="67102119" fg:w="1296919"/><text x="27.4278%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,296,919 samples, 0.53%)</title><rect x="27.1778%" y="789" width="0.5253%" height="15" fill="rgb(221,39,39)" fg:x="67102119" fg:w="1296919"/><text x="27.4278%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,296,919 samples, 0.53%)</title><rect x="27.1778%" y="773" width="0.5253%" height="15" fill="rgb(222,119,46)" fg:x="67102119" fg:w="1296919"/><text x="27.4278%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,296,919 samples, 0.53%)</title><rect x="27.1778%" y="757" width="0.5253%" height="15" fill="rgb(222,165,49)" fg:x="67102119" fg:w="1296919"/><text x="27.4278%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1,296,919 samples, 0.53%)</title><rect x="27.1778%" y="741" width="0.5253%" height="15" fill="rgb(219,113,52)" fg:x="67102119" fg:w="1296919"/><text x="27.4278%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,296,919 samples, 0.53%)</title><rect x="27.1778%" y="725" width="0.5253%" height="15" fill="rgb(214,7,15)" fg:x="67102119" fg:w="1296919"/><text x="27.4278%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,296,919 samples, 0.53%)</title><rect x="27.1778%" y="709" width="0.5253%" height="15" fill="rgb(235,32,4)" fg:x="67102119" fg:w="1296919"/><text x="27.4278%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,296,919 samples, 0.53%)</title><rect x="27.1778%" y="693" width="0.5253%" height="15" fill="rgb(238,90,54)" fg:x="67102119" fg:w="1296919"/><text x="27.4278%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,296,919 samples, 0.53%)</title><rect x="27.1778%" y="677" width="0.5253%" height="15" fill="rgb(213,208,19)" fg:x="67102119" fg:w="1296919"/><text x="27.4278%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,296,919 samples, 0.53%)</title><rect x="27.1778%" y="661" width="0.5253%" height="15" fill="rgb(233,156,4)" fg:x="67102119" fg:w="1296919"/><text x="27.4278%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,296,919 samples, 0.53%)</title><rect x="27.1778%" y="645" width="0.5253%" height="15" fill="rgb(207,194,5)" fg:x="67102119" fg:w="1296919"/><text x="27.4278%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,296,919 samples, 0.53%)</title><rect x="27.1778%" y="629" width="0.5253%" height="15" fill="rgb(206,111,30)" fg:x="67102119" fg:w="1296919"/><text x="27.4278%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1,296,919 samples, 0.53%)</title><rect x="27.1778%" y="613" width="0.5253%" height="15" fill="rgb(243,70,54)" fg:x="67102119" fg:w="1296919"/><text x="27.4278%" y="623.50"></text></g><g><title>malloc (1,296,919 samples, 0.53%)</title><rect x="27.1778%" y="597" width="0.5253%" height="15" fill="rgb(242,28,8)" fg:x="67102119" fg:w="1296919"/><text x="27.4278%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,670,559 samples, 4.73%)</title><rect x="23.4813%" y="965" width="4.7268%" height="15" fill="rgb(219,106,18)" fg:x="57975598" fg:w="11670559"/><text x="23.7313%" y="975.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11,670,559 samples, 4.73%)</title><rect x="23.4813%" y="949" width="4.7268%" height="15" fill="rgb(244,222,10)" fg:x="57975598" fg:w="11670559"/><text x="23.7313%" y="959.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (11,670,559 samples, 4.73%)</title><rect x="23.4813%" y="933" width="4.7268%" height="15" fill="rgb(236,179,52)" fg:x="57975598" fg:w="11670559"/><text x="23.7313%" y="943.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11,670,559 samples, 4.73%)</title><rect x="23.4813%" y="917" width="4.7268%" height="15" fill="rgb(213,23,39)" fg:x="57975598" fg:w="11670559"/><text x="23.7313%" y="927.50">&lt;T as ..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (11,670,559 samples, 4.73%)</title><rect x="23.4813%" y="901" width="4.7268%" height="15" fill="rgb(238,48,10)" fg:x="57975598" fg:w="11670559"/><text x="23.7313%" y="911.50">&lt;css_b..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,247,119 samples, 0.51%)</title><rect x="27.7030%" y="885" width="0.5051%" height="15" fill="rgb(251,196,23)" fg:x="68399038" fg:w="1247119"/><text x="27.9530%" y="895.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,247,119 samples, 0.51%)</title><rect x="27.7030%" y="869" width="0.5051%" height="15" fill="rgb(250,152,24)" fg:x="68399038" fg:w="1247119"/><text x="27.9530%" y="879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,247,119 samples, 0.51%)</title><rect x="27.7030%" y="853" width="0.5051%" height="15" fill="rgb(209,150,17)" fg:x="68399038" fg:w="1247119"/><text x="27.9530%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,247,119 samples, 0.51%)</title><rect x="27.7030%" y="837" width="0.5051%" height="15" fill="rgb(234,202,34)" fg:x="68399038" fg:w="1247119"/><text x="27.9530%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,247,119 samples, 0.51%)</title><rect x="27.7030%" y="821" width="0.5051%" height="15" fill="rgb(253,148,53)" fg:x="68399038" fg:w="1247119"/><text x="27.9530%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,247,119 samples, 0.51%)</title><rect x="27.7030%" y="805" width="0.5051%" height="15" fill="rgb(218,129,16)" fg:x="68399038" fg:w="1247119"/><text x="27.9530%" y="815.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,247,119 samples, 0.51%)</title><rect x="27.7030%" y="789" width="0.5051%" height="15" fill="rgb(216,85,19)" fg:x="68399038" fg:w="1247119"/><text x="27.9530%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,247,119 samples, 0.51%)</title><rect x="27.7030%" y="773" width="0.5051%" height="15" fill="rgb(235,228,7)" fg:x="68399038" fg:w="1247119"/><text x="27.9530%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,247,119 samples, 0.51%)</title><rect x="27.7030%" y="757" width="0.5051%" height="15" fill="rgb(245,175,0)" fg:x="68399038" fg:w="1247119"/><text x="27.9530%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1,247,119 samples, 0.51%)</title><rect x="27.7030%" y="741" width="0.5051%" height="15" fill="rgb(208,168,36)" fg:x="68399038" fg:w="1247119"/><text x="27.9530%" y="751.50"></text></g><g><title>malloc (1,247,119 samples, 0.51%)</title><rect x="27.7030%" y="725" width="0.5051%" height="15" fill="rgb(246,171,24)" fg:x="68399038" fg:w="1247119"/><text x="27.9530%" y="735.50"></text></g><g><title>[libc.so.6] (1,247,119 samples, 0.51%)</title><rect x="27.7030%" y="709" width="0.5051%" height="15" fill="rgb(215,142,24)" fg:x="68399038" fg:w="1247119"/><text x="27.9530%" y="719.50"></text></g><g><title>core::clone::Clone::clone (2,607,366 samples, 1.06%)</title><rect x="28.2082%" y="869" width="1.0560%" height="15" fill="rgb(250,187,7)" fg:x="69646157" fg:w="2607366"/><text x="28.4582%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,607,366 samples, 1.06%)</title><rect x="28.2082%" y="853" width="1.0560%" height="15" fill="rgb(228,66,33)" fg:x="69646157" fg:w="2607366"/><text x="28.4582%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,607,366 samples, 1.06%)</title><rect x="28.2082%" y="837" width="1.0560%" height="15" fill="rgb(234,215,21)" fg:x="69646157" fg:w="2607366"/><text x="28.4582%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,607,366 samples, 1.06%)</title><rect x="28.2082%" y="821" width="1.0560%" height="15" fill="rgb(222,191,20)" fg:x="69646157" fg:w="2607366"/><text x="28.4582%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (2,607,366 samples, 1.06%)</title><rect x="28.2082%" y="805" width="1.0560%" height="15" fill="rgb(245,79,54)" fg:x="69646157" fg:w="2607366"/><text x="28.4582%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,607,366 samples, 1.06%)</title><rect x="28.2082%" y="789" width="1.0560%" height="15" fill="rgb(240,10,37)" fg:x="69646157" fg:w="2607366"/><text x="28.4582%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,607,366 samples, 1.06%)</title><rect x="28.2082%" y="773" width="1.0560%" height="15" fill="rgb(214,192,32)" fg:x="69646157" fg:w="2607366"/><text x="28.4582%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,607,366 samples, 1.06%)</title><rect x="28.2082%" y="757" width="1.0560%" height="15" fill="rgb(209,36,54)" fg:x="69646157" fg:w="2607366"/><text x="28.4582%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,607,366 samples, 1.06%)</title><rect x="28.2082%" y="741" width="1.0560%" height="15" fill="rgb(220,10,11)" fg:x="69646157" fg:w="2607366"/><text x="28.4582%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,607,366 samples, 1.06%)</title><rect x="28.2082%" y="725" width="1.0560%" height="15" fill="rgb(221,106,17)" fg:x="69646157" fg:w="2607366"/><text x="28.4582%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,607,366 samples, 1.06%)</title><rect x="28.2082%" y="709" width="1.0560%" height="15" fill="rgb(251,142,44)" fg:x="69646157" fg:w="2607366"/><text x="28.4582%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,607,366 samples, 1.06%)</title><rect x="28.2082%" y="693" width="1.0560%" height="15" fill="rgb(238,13,15)" fg:x="69646157" fg:w="2607366"/><text x="28.4582%" y="703.50"></text></g><g><title>alloc::alloc::alloc (2,607,366 samples, 1.06%)</title><rect x="28.2082%" y="677" width="1.0560%" height="15" fill="rgb(208,107,27)" fg:x="69646157" fg:w="2607366"/><text x="28.4582%" y="687.50"></text></g><g><title>malloc (1,255,523 samples, 0.51%)</title><rect x="28.7557%" y="661" width="0.5085%" height="15" fill="rgb(205,136,37)" fg:x="70998000" fg:w="1255523"/><text x="29.0057%" y="671.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (15,559,497 samples, 6.30%)</title><rect x="23.4813%" y="981" width="6.3019%" height="15" fill="rgb(250,205,27)" fg:x="57975598" fg:w="15559497"/><text x="23.7313%" y="991.50">&lt;css_bit..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,888,938 samples, 1.58%)</title><rect x="28.2082%" y="965" width="1.5751%" height="15" fill="rgb(210,80,43)" fg:x="69646157" fg:w="3888938"/><text x="28.4582%" y="975.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,888,938 samples, 1.58%)</title><rect x="28.2082%" y="949" width="1.5751%" height="15" fill="rgb(247,160,36)" fg:x="69646157" fg:w="3888938"/><text x="28.4582%" y="959.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,888,938 samples, 1.58%)</title><rect x="28.2082%" y="933" width="1.5751%" height="15" fill="rgb(234,13,49)" fg:x="69646157" fg:w="3888938"/><text x="28.4582%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,888,938 samples, 1.58%)</title><rect x="28.2082%" y="917" width="1.5751%" height="15" fill="rgb(234,122,0)" fg:x="69646157" fg:w="3888938"/><text x="28.4582%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,888,938 samples, 1.58%)</title><rect x="28.2082%" y="901" width="1.5751%" height="15" fill="rgb(207,146,38)" fg:x="69646157" fg:w="3888938"/><text x="28.4582%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,888,938 samples, 1.58%)</title><rect x="28.2082%" y="885" width="1.5751%" height="15" fill="rgb(207,177,25)" fg:x="69646157" fg:w="3888938"/><text x="28.4582%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1,281,572 samples, 0.52%)</title><rect x="29.2642%" y="869" width="0.5191%" height="15" fill="rgb(211,178,42)" fg:x="72253523" fg:w="1281572"/><text x="29.5142%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,281,572 samples, 0.52%)</title><rect x="29.2642%" y="853" width="0.5191%" height="15" fill="rgb(230,69,54)" fg:x="72253523" fg:w="1281572"/><text x="29.5142%" y="863.50"></text></g><g><title>core::ptr::write (1,281,572 samples, 0.52%)</title><rect x="29.2642%" y="837" width="0.5191%" height="15" fill="rgb(214,135,41)" fg:x="72253523" fg:w="1281572"/><text x="29.5142%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,945,653 samples, 6.86%)</title><rect x="23.4813%" y="1045" width="6.8633%" height="15" fill="rgb(237,67,25)" fg:x="57975598" fg:w="16945653"/><text x="23.7313%" y="1055.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,945,653 samples, 6.86%)</title><rect x="23.4813%" y="1029" width="6.8633%" height="15" fill="rgb(222,189,50)" fg:x="57975598" fg:w="16945653"/><text x="23.7313%" y="1039.50">alloc::sl..</text></g><g><title>alloc::slice::hack::to_vec (16,945,653 samples, 6.86%)</title><rect x="23.4813%" y="1013" width="6.8633%" height="15" fill="rgb(245,148,34)" fg:x="57975598" fg:w="16945653"/><text x="23.7313%" y="1023.50">alloc::sl..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16,945,653 samples, 6.86%)</title><rect x="23.4813%" y="997" width="6.8633%" height="15" fill="rgb(222,29,6)" fg:x="57975598" fg:w="16945653"/><text x="23.7313%" y="1007.50">&lt;T as all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,386,156 samples, 0.56%)</title><rect x="29.7833%" y="981" width="0.5614%" height="15" fill="rgb(221,189,43)" fg:x="73535095" fg:w="1386156"/><text x="30.0333%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,386,156 samples, 0.56%)</title><rect x="29.7833%" y="965" width="0.5614%" height="15" fill="rgb(207,36,27)" fg:x="73535095" fg:w="1386156"/><text x="30.0333%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,386,156 samples, 0.56%)</title><rect x="29.7833%" y="949" width="0.5614%" height="15" fill="rgb(217,90,24)" fg:x="73535095" fg:w="1386156"/><text x="30.0333%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,386,156 samples, 0.56%)</title><rect x="29.7833%" y="933" width="0.5614%" height="15" fill="rgb(224,66,35)" fg:x="73535095" fg:w="1386156"/><text x="30.0333%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,386,156 samples, 0.56%)</title><rect x="29.7833%" y="917" width="0.5614%" height="15" fill="rgb(221,13,50)" fg:x="73535095" fg:w="1386156"/><text x="30.0333%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,386,156 samples, 0.56%)</title><rect x="29.7833%" y="901" width="0.5614%" height="15" fill="rgb(236,68,49)" fg:x="73535095" fg:w="1386156"/><text x="30.0333%" y="911.50"></text></g><g><title>alloc::alloc::alloc (1,386,156 samples, 0.56%)</title><rect x="29.7833%" y="885" width="0.5614%" height="15" fill="rgb(229,146,28)" fg:x="73535095" fg:w="1386156"/><text x="30.0333%" y="895.50"></text></g><g><title>malloc (1,386,156 samples, 0.56%)</title><rect x="29.7833%" y="869" width="0.5614%" height="15" fill="rgb(225,31,38)" fg:x="73535095" fg:w="1386156"/><text x="30.0333%" y="879.50"></text></g><g><title>[libc.so.6] (1,386,156 samples, 0.56%)</title><rect x="29.7833%" y="853" width="0.5614%" height="15" fill="rgb(250,208,3)" fg:x="73535095" fg:w="1386156"/><text x="30.0333%" y="863.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,266,725 samples, 0.51%)</title><rect x="30.3447%" y="1045" width="0.5131%" height="15" fill="rgb(246,54,23)" fg:x="74921251" fg:w="1266725"/><text x="30.5947%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,266,725 samples, 0.51%)</title><rect x="30.3447%" y="1029" width="0.5131%" height="15" fill="rgb(243,76,11)" fg:x="74921251" fg:w="1266725"/><text x="30.5947%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,266,725 samples, 0.51%)</title><rect x="30.3447%" y="1013" width="0.5131%" height="15" fill="rgb(245,21,50)" fg:x="74921251" fg:w="1266725"/><text x="30.5947%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (1,266,725 samples, 0.51%)</title><rect x="30.3447%" y="997" width="0.5131%" height="15" fill="rgb(228,9,43)" fg:x="74921251" fg:w="1266725"/><text x="30.5947%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,266,725 samples, 0.51%)</title><rect x="30.3447%" y="981" width="0.5131%" height="15" fill="rgb(208,100,47)" fg:x="74921251" fg:w="1266725"/><text x="30.5947%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,266,725 samples, 0.51%)</title><rect x="30.3447%" y="965" width="0.5131%" height="15" fill="rgb(232,26,8)" fg:x="74921251" fg:w="1266725"/><text x="30.5947%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,266,725 samples, 0.51%)</title><rect x="30.3447%" y="949" width="0.5131%" height="15" fill="rgb(216,166,38)" fg:x="74921251" fg:w="1266725"/><text x="30.5947%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,266,725 samples, 0.51%)</title><rect x="30.3447%" y="933" width="0.5131%" height="15" fill="rgb(251,202,51)" fg:x="74921251" fg:w="1266725"/><text x="30.5947%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,266,725 samples, 0.51%)</title><rect x="30.3447%" y="917" width="0.5131%" height="15" fill="rgb(254,216,34)" fg:x="74921251" fg:w="1266725"/><text x="30.5947%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,266,725 samples, 0.51%)</title><rect x="30.3447%" y="901" width="0.5131%" height="15" fill="rgb(251,32,27)" fg:x="74921251" fg:w="1266725"/><text x="30.5947%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,266,725 samples, 0.51%)</title><rect x="30.3447%" y="885" width="0.5131%" height="15" fill="rgb(208,127,28)" fg:x="74921251" fg:w="1266725"/><text x="30.5947%" y="895.50"></text></g><g><title>alloc::alloc::alloc (1,266,725 samples, 0.51%)</title><rect x="30.3447%" y="869" width="0.5131%" height="15" fill="rgb(224,137,22)" fg:x="74921251" fg:w="1266725"/><text x="30.5947%" y="879.50"></text></g><g><title>malloc (1,266,725 samples, 0.51%)</title><rect x="30.3447%" y="853" width="0.5131%" height="15" fill="rgb(254,70,32)" fg:x="74921251" fg:w="1266725"/><text x="30.5947%" y="863.50"></text></g><g><title>[libc.so.6] (1,266,725 samples, 0.51%)</title><rect x="30.3447%" y="837" width="0.5131%" height="15" fill="rgb(229,75,37)" fg:x="74921251" fg:w="1266725"/><text x="30.5947%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,359,485 samples, 0.55%)</title><rect x="30.8577%" y="981" width="0.5506%" height="15" fill="rgb(252,64,23)" fg:x="76187976" fg:w="1359485"/><text x="31.1077%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,359,485 samples, 0.55%)</title><rect x="30.8577%" y="965" width="0.5506%" height="15" fill="rgb(232,162,48)" fg:x="76187976" fg:w="1359485"/><text x="31.1077%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1,359,485 samples, 0.55%)</title><rect x="30.8577%" y="949" width="0.5506%" height="15" fill="rgb(246,160,12)" fg:x="76187976" fg:w="1359485"/><text x="31.1077%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,359,485 samples, 0.55%)</title><rect x="30.8577%" y="933" width="0.5506%" height="15" fill="rgb(247,166,0)" fg:x="76187976" fg:w="1359485"/><text x="31.1077%" y="943.50"></text></g><g><title>[libc.so.6] (1,359,485 samples, 0.55%)</title><rect x="30.8577%" y="917" width="0.5506%" height="15" fill="rgb(249,219,21)" fg:x="76187976" fg:w="1359485"/><text x="31.1077%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20,810,899 samples, 8.43%)</title><rect x="23.4813%" y="1125" width="8.4288%" height="15" fill="rgb(205,209,3)" fg:x="57975598" fg:w="20810899"/><text x="23.7313%" y="1135.50">&lt;alloc::vec:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20,810,899 samples, 8.43%)</title><rect x="23.4813%" y="1109" width="8.4288%" height="15" fill="rgb(243,44,1)" fg:x="57975598" fg:w="20810899"/><text x="23.7313%" y="1119.50">alloc::slice..</text></g><g><title>alloc::slice::hack::to_vec (20,810,899 samples, 8.43%)</title><rect x="23.4813%" y="1093" width="8.4288%" height="15" fill="rgb(206,159,16)" fg:x="57975598" fg:w="20810899"/><text x="23.7313%" y="1103.50">alloc::slice..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20,810,899 samples, 8.43%)</title><rect x="23.4813%" y="1077" width="8.4288%" height="15" fill="rgb(244,77,30)" fg:x="57975598" fg:w="20810899"/><text x="23.7313%" y="1087.50">&lt;T as alloc:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (20,810,899 samples, 8.43%)</title><rect x="23.4813%" y="1061" width="8.4288%" height="15" fill="rgb(218,69,12)" fg:x="57975598" fg:w="20810899"/><text x="23.7313%" y="1071.50">&lt;css_bitvect..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,598,521 samples, 1.05%)</title><rect x="30.8577%" y="1045" width="1.0525%" height="15" fill="rgb(212,87,7)" fg:x="76187976" fg:w="2598521"/><text x="31.1077%" y="1055.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,598,521 samples, 1.05%)</title><rect x="30.8577%" y="1029" width="1.0525%" height="15" fill="rgb(245,114,25)" fg:x="76187976" fg:w="2598521"/><text x="31.1077%" y="1039.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,598,521 samples, 1.05%)</title><rect x="30.8577%" y="1013" width="1.0525%" height="15" fill="rgb(210,61,42)" fg:x="76187976" fg:w="2598521"/><text x="31.1077%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,598,521 samples, 1.05%)</title><rect x="30.8577%" y="997" width="1.0525%" height="15" fill="rgb(211,52,33)" fg:x="76187976" fg:w="2598521"/><text x="31.1077%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,239,036 samples, 0.50%)</title><rect x="31.4083%" y="981" width="0.5018%" height="15" fill="rgb(234,58,33)" fg:x="77547461" fg:w="1239036"/><text x="31.6583%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,239,036 samples, 0.50%)</title><rect x="31.4083%" y="965" width="0.5018%" height="15" fill="rgb(220,115,36)" fg:x="77547461" fg:w="1239036"/><text x="31.6583%" y="975.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,239,036 samples, 0.50%)</title><rect x="31.4083%" y="949" width="0.5018%" height="15" fill="rgb(243,153,54)" fg:x="77547461" fg:w="1239036"/><text x="31.6583%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,239,036 samples, 0.50%)</title><rect x="31.4083%" y="933" width="0.5018%" height="15" fill="rgb(251,47,18)" fg:x="77547461" fg:w="1239036"/><text x="31.6583%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,239,036 samples, 0.50%)</title><rect x="31.4083%" y="917" width="0.5018%" height="15" fill="rgb(242,102,42)" fg:x="77547461" fg:w="1239036"/><text x="31.6583%" y="927.50"></text></g><g><title>alloc::alloc::alloc (1,239,036 samples, 0.50%)</title><rect x="31.4083%" y="901" width="0.5018%" height="15" fill="rgb(234,31,38)" fg:x="77547461" fg:w="1239036"/><text x="31.6583%" y="911.50"></text></g><g><title>malloc (1,239,036 samples, 0.50%)</title><rect x="31.4083%" y="885" width="0.5018%" height="15" fill="rgb(221,117,51)" fg:x="77547461" fg:w="1239036"/><text x="31.6583%" y="895.50"></text></g><g><title>[libc.so.6] (1,239,036 samples, 0.50%)</title><rect x="31.4083%" y="869" width="0.5018%" height="15" fill="rgb(212,20,18)" fg:x="77547461" fg:w="1239036"/><text x="31.6583%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,385,913 samples, 0.56%)</title><rect x="31.9102%" y="1125" width="0.5613%" height="15" fill="rgb(245,133,36)" fg:x="78786497" fg:w="1385913"/><text x="32.1602%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,385,913 samples, 0.56%)</title><rect x="31.9102%" y="1109" width="0.5613%" height="15" fill="rgb(212,6,19)" fg:x="78786497" fg:w="1385913"/><text x="32.1602%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,385,913 samples, 0.56%)</title><rect x="31.9102%" y="1093" width="0.5613%" height="15" fill="rgb(218,1,36)" fg:x="78786497" fg:w="1385913"/><text x="32.1602%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,385,913 samples, 0.56%)</title><rect x="31.9102%" y="1077" width="0.5613%" height="15" fill="rgb(246,84,54)" fg:x="78786497" fg:w="1385913"/><text x="32.1602%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (1,385,913 samples, 0.56%)</title><rect x="31.9102%" y="1061" width="0.5613%" height="15" fill="rgb(242,110,6)" fg:x="78786497" fg:w="1385913"/><text x="32.1602%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,385,913 samples, 0.56%)</title><rect x="31.9102%" y="1045" width="0.5613%" height="15" fill="rgb(214,47,5)" fg:x="78786497" fg:w="1385913"/><text x="32.1602%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,385,913 samples, 0.56%)</title><rect x="31.9102%" y="1029" width="0.5613%" height="15" fill="rgb(218,159,25)" fg:x="78786497" fg:w="1385913"/><text x="32.1602%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,385,913 samples, 0.56%)</title><rect x="31.9102%" y="1013" width="0.5613%" height="15" fill="rgb(215,211,28)" fg:x="78786497" fg:w="1385913"/><text x="32.1602%" y="1023.50"></text></g><g><title>[libc.so.6] (1,385,913 samples, 0.56%)</title><rect x="31.9102%" y="997" width="0.5613%" height="15" fill="rgb(238,59,32)" fg:x="78786497" fg:w="1385913"/><text x="32.1602%" y="1007.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,290,070 samples, 0.52%)</title><rect x="32.4715%" y="1125" width="0.5225%" height="15" fill="rgb(226,82,3)" fg:x="80172410" fg:w="1290070"/><text x="32.7215%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,290,070 samples, 0.52%)</title><rect x="32.4715%" y="1109" width="0.5225%" height="15" fill="rgb(240,164,32)" fg:x="80172410" fg:w="1290070"/><text x="32.7215%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,290,070 samples, 0.52%)</title><rect x="32.4715%" y="1093" width="0.5225%" height="15" fill="rgb(232,46,7)" fg:x="80172410" fg:w="1290070"/><text x="32.7215%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (1,290,070 samples, 0.52%)</title><rect x="32.4715%" y="1077" width="0.5225%" height="15" fill="rgb(229,129,53)" fg:x="80172410" fg:w="1290070"/><text x="32.7215%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,290,070 samples, 0.52%)</title><rect x="32.4715%" y="1061" width="0.5225%" height="15" fill="rgb(234,188,29)" fg:x="80172410" fg:w="1290070"/><text x="32.7215%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,290,070 samples, 0.52%)</title><rect x="32.4715%" y="1045" width="0.5225%" height="15" fill="rgb(246,141,4)" fg:x="80172410" fg:w="1290070"/><text x="32.7215%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,290,070 samples, 0.52%)</title><rect x="32.4715%" y="1029" width="0.5225%" height="15" fill="rgb(229,23,39)" fg:x="80172410" fg:w="1290070"/><text x="32.7215%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,290,070 samples, 0.52%)</title><rect x="32.4715%" y="1013" width="0.5225%" height="15" fill="rgb(206,12,3)" fg:x="80172410" fg:w="1290070"/><text x="32.7215%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,290,070 samples, 0.52%)</title><rect x="32.4715%" y="997" width="0.5225%" height="15" fill="rgb(252,226,20)" fg:x="80172410" fg:w="1290070"/><text x="32.7215%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,290,070 samples, 0.52%)</title><rect x="32.4715%" y="981" width="0.5225%" height="15" fill="rgb(216,123,35)" fg:x="80172410" fg:w="1290070"/><text x="32.7215%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,290,070 samples, 0.52%)</title><rect x="32.4715%" y="965" width="0.5225%" height="15" fill="rgb(212,68,40)" fg:x="80172410" fg:w="1290070"/><text x="32.7215%" y="975.50"></text></g><g><title>alloc::alloc::alloc (1,290,070 samples, 0.52%)</title><rect x="32.4715%" y="949" width="0.5225%" height="15" fill="rgb(254,125,32)" fg:x="80172410" fg:w="1290070"/><text x="32.7215%" y="959.50"></text></g><g><title>malloc (1,290,070 samples, 0.52%)</title><rect x="32.4715%" y="933" width="0.5225%" height="15" fill="rgb(253,97,22)" fg:x="80172410" fg:w="1290070"/><text x="32.7215%" y="943.50"></text></g><g><title>[libc.so.6] (1,290,070 samples, 0.52%)</title><rect x="32.4715%" y="917" width="0.5225%" height="15" fill="rgb(241,101,14)" fg:x="80172410" fg:w="1290070"/><text x="32.7215%" y="927.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (26,046,532 samples, 10.55%)</title><rect x="22.9543%" y="1141" width="10.5494%" height="15" fill="rgb(238,103,29)" fg:x="56674470" fg:w="26046532"/><text x="23.2043%" y="1151.50">&lt;css_bitvector_..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,258,522 samples, 0.51%)</title><rect x="32.9940%" y="1125" width="0.5097%" height="15" fill="rgb(233,195,47)" fg:x="81462480" fg:w="1258522"/><text x="33.2440%" y="1135.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,258,522 samples, 0.51%)</title><rect x="32.9940%" y="1109" width="0.5097%" height="15" fill="rgb(246,218,30)" fg:x="81462480" fg:w="1258522"/><text x="33.2440%" y="1119.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,258,522 samples, 0.51%)</title><rect x="32.9940%" y="1093" width="0.5097%" height="15" fill="rgb(219,145,47)" fg:x="81462480" fg:w="1258522"/><text x="33.2440%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,258,522 samples, 0.51%)</title><rect x="32.9940%" y="1077" width="0.5097%" height="15" fill="rgb(243,12,26)" fg:x="81462480" fg:w="1258522"/><text x="33.2440%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,258,522 samples, 0.51%)</title><rect x="32.9940%" y="1061" width="0.5097%" height="15" fill="rgb(214,87,16)" fg:x="81462480" fg:w="1258522"/><text x="33.2440%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,258,522 samples, 0.51%)</title><rect x="32.9940%" y="1045" width="0.5097%" height="15" fill="rgb(208,99,42)" fg:x="81462480" fg:w="1258522"/><text x="33.2440%" y="1055.50"></text></g><g><title>core::clone::Clone::clone (1,258,522 samples, 0.51%)</title><rect x="32.9940%" y="1029" width="0.5097%" height="15" fill="rgb(253,99,2)" fg:x="81462480" fg:w="1258522"/><text x="33.2440%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,258,522 samples, 0.51%)</title><rect x="32.9940%" y="1013" width="0.5097%" height="15" fill="rgb(220,168,23)" fg:x="81462480" fg:w="1258522"/><text x="33.2440%" y="1023.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (27,359,636 samples, 11.08%)</title><rect x="22.9543%" y="1221" width="11.0812%" height="15" fill="rgb(242,38,24)" fg:x="56674470" fg:w="27359636"/><text x="23.2043%" y="1231.50">&lt;css_bitvector_c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27,359,636 samples, 11.08%)</title><rect x="22.9543%" y="1205" width="11.0812%" height="15" fill="rgb(225,182,9)" fg:x="56674470" fg:w="27359636"/><text x="23.2043%" y="1215.50">&lt;alloc::vec::Vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27,359,636 samples, 11.08%)</title><rect x="22.9543%" y="1189" width="11.0812%" height="15" fill="rgb(243,178,37)" fg:x="56674470" fg:w="27359636"/><text x="23.2043%" y="1199.50">alloc::slice::&lt;i..</text></g><g><title>alloc::slice::hack::to_vec (27,359,636 samples, 11.08%)</title><rect x="22.9543%" y="1173" width="11.0812%" height="15" fill="rgb(232,139,19)" fg:x="56674470" fg:w="27359636"/><text x="23.2043%" y="1183.50">alloc::slice::ha..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27,359,636 samples, 11.08%)</title><rect x="22.9543%" y="1157" width="11.0812%" height="15" fill="rgb(225,201,24)" fg:x="56674470" fg:w="27359636"/><text x="23.2043%" y="1167.50">&lt;T as alloc::sli..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,313,104 samples, 0.53%)</title><rect x="33.5037%" y="1141" width="0.5318%" height="15" fill="rgb(221,47,46)" fg:x="82721002" fg:w="1313104"/><text x="33.7537%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,313,104 samples, 0.53%)</title><rect x="33.5037%" y="1125" width="0.5318%" height="15" fill="rgb(249,23,13)" fg:x="82721002" fg:w="1313104"/><text x="33.7537%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,313,104 samples, 0.53%)</title><rect x="33.5037%" y="1109" width="0.5318%" height="15" fill="rgb(219,9,5)" fg:x="82721002" fg:w="1313104"/><text x="33.7537%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,313,104 samples, 0.53%)</title><rect x="33.5037%" y="1093" width="0.5318%" height="15" fill="rgb(254,171,16)" fg:x="82721002" fg:w="1313104"/><text x="33.7537%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,313,104 samples, 0.53%)</title><rect x="33.5037%" y="1077" width="0.5318%" height="15" fill="rgb(230,171,20)" fg:x="82721002" fg:w="1313104"/><text x="33.7537%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,313,104 samples, 0.53%)</title><rect x="33.5037%" y="1061" width="0.5318%" height="15" fill="rgb(210,71,41)" fg:x="82721002" fg:w="1313104"/><text x="33.7537%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (1,313,104 samples, 0.53%)</title><rect x="33.5037%" y="1045" width="0.5318%" height="15" fill="rgb(206,173,20)" fg:x="82721002" fg:w="1313104"/><text x="33.7537%" y="1055.50"></text></g><g><title>malloc (1,313,104 samples, 0.53%)</title><rect x="33.5037%" y="1029" width="0.5318%" height="15" fill="rgb(233,88,34)" fg:x="82721002" fg:w="1313104"/><text x="33.7537%" y="1039.50"></text></g><g><title>[libc.so.6] (1,313,104 samples, 0.53%)</title><rect x="33.5037%" y="1013" width="0.5318%" height="15" fill="rgb(223,209,46)" fg:x="82721002" fg:w="1313104"/><text x="33.7537%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28,787,309 samples, 11.66%)</title><rect x="22.9543%" y="1285" width="11.6595%" height="15" fill="rgb(250,43,18)" fg:x="56674470" fg:w="28787309"/><text x="23.2043%" y="1295.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28,787,309 samples, 11.66%)</title><rect x="22.9543%" y="1269" width="11.6595%" height="15" fill="rgb(208,13,10)" fg:x="56674470" fg:w="28787309"/><text x="23.2043%" y="1279.50">alloc::slice::&lt;im..</text></g><g><title>alloc::slice::hack::to_vec (28,787,309 samples, 11.66%)</title><rect x="22.9543%" y="1253" width="11.6595%" height="15" fill="rgb(212,200,36)" fg:x="56674470" fg:w="28787309"/><text x="23.2043%" y="1263.50">alloc::slice::hac..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28,787,309 samples, 11.66%)</title><rect x="22.9543%" y="1237" width="11.6595%" height="15" fill="rgb(225,90,30)" fg:x="56674470" fg:w="28787309"/><text x="23.2043%" y="1247.50">&lt;T as alloc::slic..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,427,673 samples, 0.58%)</title><rect x="34.0356%" y="1221" width="0.5782%" height="15" fill="rgb(236,182,39)" fg:x="84034106" fg:w="1427673"/><text x="34.2856%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,427,673 samples, 0.58%)</title><rect x="34.0356%" y="1205" width="0.5782%" height="15" fill="rgb(212,144,35)" fg:x="84034106" fg:w="1427673"/><text x="34.2856%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,427,673 samples, 0.58%)</title><rect x="34.0356%" y="1189" width="0.5782%" height="15" fill="rgb(228,63,44)" fg:x="84034106" fg:w="1427673"/><text x="34.2856%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,427,673 samples, 0.58%)</title><rect x="34.0356%" y="1173" width="0.5782%" height="15" fill="rgb(228,109,6)" fg:x="84034106" fg:w="1427673"/><text x="34.2856%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,427,673 samples, 0.58%)</title><rect x="34.0356%" y="1157" width="0.5782%" height="15" fill="rgb(238,117,24)" fg:x="84034106" fg:w="1427673"/><text x="34.2856%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,427,673 samples, 0.58%)</title><rect x="34.0356%" y="1141" width="0.5782%" height="15" fill="rgb(242,26,26)" fg:x="84034106" fg:w="1427673"/><text x="34.2856%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (1,427,673 samples, 0.58%)</title><rect x="34.0356%" y="1125" width="0.5782%" height="15" fill="rgb(221,92,48)" fg:x="84034106" fg:w="1427673"/><text x="34.2856%" y="1135.50"></text></g><g><title>malloc (1,427,673 samples, 0.58%)</title><rect x="34.0356%" y="1109" width="0.5782%" height="15" fill="rgb(209,209,32)" fg:x="84034106" fg:w="1427673"/><text x="34.2856%" y="1119.50"></text></g><g><title>[libc.so.6] (1,427,673 samples, 0.58%)</title><rect x="34.0356%" y="1093" width="0.5782%" height="15" fill="rgb(221,70,22)" fg:x="84034106" fg:w="1427673"/><text x="34.2856%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,411,629 samples, 0.57%)</title><rect x="34.6138%" y="1205" width="0.5717%" height="15" fill="rgb(248,145,5)" fg:x="85461779" fg:w="1411629"/><text x="34.8638%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,411,629 samples, 0.57%)</title><rect x="34.6138%" y="1189" width="0.5717%" height="15" fill="rgb(226,116,26)" fg:x="85461779" fg:w="1411629"/><text x="34.8638%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,411,629 samples, 0.57%)</title><rect x="34.6138%" y="1173" width="0.5717%" height="15" fill="rgb(244,5,17)" fg:x="85461779" fg:w="1411629"/><text x="34.8638%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,411,629 samples, 0.57%)</title><rect x="34.6138%" y="1157" width="0.5717%" height="15" fill="rgb(252,159,33)" fg:x="85461779" fg:w="1411629"/><text x="34.8638%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,411,629 samples, 0.57%)</title><rect x="34.6138%" y="1141" width="0.5717%" height="15" fill="rgb(206,71,0)" fg:x="85461779" fg:w="1411629"/><text x="34.8638%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,411,629 samples, 0.57%)</title><rect x="34.6138%" y="1125" width="0.5717%" height="15" fill="rgb(233,118,54)" fg:x="85461779" fg:w="1411629"/><text x="34.8638%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (1,411,629 samples, 0.57%)</title><rect x="34.6138%" y="1109" width="0.5717%" height="15" fill="rgb(234,83,48)" fg:x="85461779" fg:w="1411629"/><text x="34.8638%" y="1119.50"></text></g><g><title>malloc (1,411,629 samples, 0.57%)</title><rect x="34.6138%" y="1093" width="0.5717%" height="15" fill="rgb(228,3,54)" fg:x="85461779" fg:w="1411629"/><text x="34.8638%" y="1103.50"></text></g><g><title>[libc.so.6] (1,411,629 samples, 0.57%)</title><rect x="34.6138%" y="1077" width="0.5717%" height="15" fill="rgb(226,155,13)" fg:x="85461779" fg:w="1411629"/><text x="34.8638%" y="1087.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,676,172 samples, 1.08%)</title><rect x="34.6138%" y="1285" width="1.0839%" height="15" fill="rgb(241,28,37)" fg:x="85461779" fg:w="2676172"/><text x="34.8638%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,676,172 samples, 1.08%)</title><rect x="34.6138%" y="1269" width="1.0839%" height="15" fill="rgb(233,93,10)" fg:x="85461779" fg:w="2676172"/><text x="34.8638%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,676,172 samples, 1.08%)</title><rect x="34.6138%" y="1253" width="1.0839%" height="15" fill="rgb(225,113,19)" fg:x="85461779" fg:w="2676172"/><text x="34.8638%" y="1263.50"></text></g><g><title>alloc::slice::hack::to_vec (2,676,172 samples, 1.08%)</title><rect x="34.6138%" y="1237" width="1.0839%" height="15" fill="rgb(241,2,18)" fg:x="85461779" fg:w="2676172"/><text x="34.8638%" y="1247.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,676,172 samples, 1.08%)</title><rect x="34.6138%" y="1221" width="1.0839%" height="15" fill="rgb(228,207,21)" fg:x="85461779" fg:w="2676172"/><text x="34.8638%" y="1231.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,264,543 samples, 0.51%)</title><rect x="35.1855%" y="1205" width="0.5122%" height="15" fill="rgb(213,211,35)" fg:x="86873408" fg:w="1264543"/><text x="35.4355%" y="1215.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,264,543 samples, 0.51%)</title><rect x="35.1855%" y="1189" width="0.5122%" height="15" fill="rgb(209,83,10)" fg:x="86873408" fg:w="1264543"/><text x="35.4355%" y="1199.50"></text></g><g><title>[libc.so.6] (1,264,543 samples, 0.51%)</title><rect x="35.1855%" y="1173" width="0.5122%" height="15" fill="rgb(209,164,1)" fg:x="86873408" fg:w="1264543"/><text x="35.4355%" y="1183.50"></text></g><g><title>core::clone::Clone::clone (2,563,927 samples, 1.04%)</title><rect x="35.6977%" y="1189" width="1.0384%" height="15" fill="rgb(213,184,43)" fg:x="88137951" fg:w="2563927"/><text x="35.9477%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,563,927 samples, 1.04%)</title><rect x="35.6977%" y="1173" width="1.0384%" height="15" fill="rgb(231,61,34)" fg:x="88137951" fg:w="2563927"/><text x="35.9477%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,563,927 samples, 1.04%)</title><rect x="35.6977%" y="1157" width="1.0384%" height="15" fill="rgb(235,75,3)" fg:x="88137951" fg:w="2563927"/><text x="35.9477%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,563,927 samples, 1.04%)</title><rect x="35.6977%" y="1141" width="1.0384%" height="15" fill="rgb(220,106,47)" fg:x="88137951" fg:w="2563927"/><text x="35.9477%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (2,563,927 samples, 1.04%)</title><rect x="35.6977%" y="1125" width="1.0384%" height="15" fill="rgb(210,196,33)" fg:x="88137951" fg:w="2563927"/><text x="35.9477%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,563,927 samples, 1.04%)</title><rect x="35.6977%" y="1109" width="1.0384%" height="15" fill="rgb(229,154,42)" fg:x="88137951" fg:w="2563927"/><text x="35.9477%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,563,927 samples, 1.04%)</title><rect x="35.6977%" y="1093" width="1.0384%" height="15" fill="rgb(228,114,26)" fg:x="88137951" fg:w="2563927"/><text x="35.9477%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,563,927 samples, 1.04%)</title><rect x="35.6977%" y="1077" width="1.0384%" height="15" fill="rgb(208,144,1)" fg:x="88137951" fg:w="2563927"/><text x="35.9477%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,563,927 samples, 1.04%)</title><rect x="35.6977%" y="1061" width="1.0384%" height="15" fill="rgb(239,112,37)" fg:x="88137951" fg:w="2563927"/><text x="35.9477%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,563,927 samples, 1.04%)</title><rect x="35.6977%" y="1045" width="1.0384%" height="15" fill="rgb(210,96,50)" fg:x="88137951" fg:w="2563927"/><text x="35.9477%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,563,927 samples, 1.04%)</title><rect x="35.6977%" y="1029" width="1.0384%" height="15" fill="rgb(222,178,2)" fg:x="88137951" fg:w="2563927"/><text x="35.9477%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,563,927 samples, 1.04%)</title><rect x="35.6977%" y="1013" width="1.0384%" height="15" fill="rgb(226,74,18)" fg:x="88137951" fg:w="2563927"/><text x="35.9477%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (2,563,927 samples, 1.04%)</title><rect x="35.6977%" y="997" width="1.0384%" height="15" fill="rgb(225,67,54)" fg:x="88137951" fg:w="2563927"/><text x="35.9477%" y="1007.50"></text></g><g><title>malloc (2,563,927 samples, 1.04%)</title><rect x="35.6977%" y="981" width="1.0384%" height="15" fill="rgb(251,92,32)" fg:x="88137951" fg:w="2563927"/><text x="35.9477%" y="991.50"></text></g><g><title>[libc.so.6] (1,289,722 samples, 0.52%)</title><rect x="36.2138%" y="965" width="0.5224%" height="15" fill="rgb(228,149,22)" fg:x="89412156" fg:w="1289722"/><text x="36.4638%" y="975.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (36,644,886 samples, 14.84%)</title><rect x="22.4433%" y="1301" width="14.8419%" height="15" fill="rgb(243,54,13)" fg:x="55412607" fg:w="36644886"/><text x="22.6933%" y="1311.50">&lt;css_bitvector_compiler..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,919,542 samples, 1.59%)</title><rect x="35.6977%" y="1285" width="1.5875%" height="15" fill="rgb(243,180,28)" fg:x="88137951" fg:w="3919542"/><text x="35.9477%" y="1295.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,919,542 samples, 1.59%)</title><rect x="35.6977%" y="1269" width="1.5875%" height="15" fill="rgb(208,167,24)" fg:x="88137951" fg:w="3919542"/><text x="35.9477%" y="1279.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,919,542 samples, 1.59%)</title><rect x="35.6977%" y="1253" width="1.5875%" height="15" fill="rgb(245,73,45)" fg:x="88137951" fg:w="3919542"/><text x="35.9477%" y="1263.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,919,542 samples, 1.59%)</title><rect x="35.6977%" y="1237" width="1.5875%" height="15" fill="rgb(237,203,48)" fg:x="88137951" fg:w="3919542"/><text x="35.9477%" y="1247.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,919,542 samples, 1.59%)</title><rect x="35.6977%" y="1221" width="1.5875%" height="15" fill="rgb(211,197,16)" fg:x="88137951" fg:w="3919542"/><text x="35.9477%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,919,542 samples, 1.59%)</title><rect x="35.6977%" y="1205" width="1.5875%" height="15" fill="rgb(243,99,51)" fg:x="88137951" fg:w="3919542"/><text x="35.9477%" y="1215.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1,355,615 samples, 0.55%)</title><rect x="36.7362%" y="1189" width="0.5491%" height="15" fill="rgb(215,123,29)" fg:x="90701878" fg:w="1355615"/><text x="36.9862%" y="1199.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,355,615 samples, 0.55%)</title><rect x="36.7362%" y="1173" width="0.5491%" height="15" fill="rgb(239,186,37)" fg:x="90701878" fg:w="1355615"/><text x="36.9862%" y="1183.50"></text></g><g><title>[libc.so.6] (1,355,615 samples, 0.55%)</title><rect x="36.7362%" y="1157" width="0.5491%" height="15" fill="rgb(252,136,39)" fg:x="90701878" fg:w="1355615"/><text x="36.9862%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37,909,308 samples, 15.35%)</title><rect x="22.4433%" y="1365" width="15.3541%" height="15" fill="rgb(223,213,32)" fg:x="55412607" fg:w="37909308"/><text x="22.6933%" y="1375.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37,909,308 samples, 15.35%)</title><rect x="22.4433%" y="1349" width="15.3541%" height="15" fill="rgb(233,115,5)" fg:x="55412607" fg:w="37909308"/><text x="22.6933%" y="1359.50">alloc::slice::&lt;impl [T]&gt;..</text></g><g><title>alloc::slice::hack::to_vec (37,909,308 samples, 15.35%)</title><rect x="22.4433%" y="1333" width="15.3541%" height="15" fill="rgb(207,226,44)" fg:x="55412607" fg:w="37909308"/><text x="22.6933%" y="1343.50">alloc::slice::hack::to_v..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37,909,308 samples, 15.35%)</title><rect x="22.4433%" y="1317" width="15.3541%" height="15" fill="rgb(208,126,0)" fg:x="55412607" fg:w="37909308"/><text x="22.6933%" y="1327.50">&lt;T as alloc::slice::hack..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,264,422 samples, 0.51%)</title><rect x="37.2852%" y="1301" width="0.5121%" height="15" fill="rgb(244,66,21)" fg:x="92057493" fg:w="1264422"/><text x="37.5352%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,264,422 samples, 0.51%)</title><rect x="37.2852%" y="1285" width="0.5121%" height="15" fill="rgb(222,97,12)" fg:x="92057493" fg:w="1264422"/><text x="37.5352%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,264,422 samples, 0.51%)</title><rect x="37.2852%" y="1269" width="0.5121%" height="15" fill="rgb(219,213,19)" fg:x="92057493" fg:w="1264422"/><text x="37.5352%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,264,422 samples, 0.51%)</title><rect x="37.2852%" y="1253" width="0.5121%" height="15" fill="rgb(252,169,30)" fg:x="92057493" fg:w="1264422"/><text x="37.5352%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,264,422 samples, 0.51%)</title><rect x="37.2852%" y="1237" width="0.5121%" height="15" fill="rgb(206,32,51)" fg:x="92057493" fg:w="1264422"/><text x="37.5352%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,264,422 samples, 0.51%)</title><rect x="37.2852%" y="1221" width="0.5121%" height="15" fill="rgb(250,172,42)" fg:x="92057493" fg:w="1264422"/><text x="37.5352%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (1,264,422 samples, 0.51%)</title><rect x="37.2852%" y="1205" width="0.5121%" height="15" fill="rgb(209,34,43)" fg:x="92057493" fg:w="1264422"/><text x="37.5352%" y="1215.50"></text></g><g><title>malloc (1,264,422 samples, 0.51%)</title><rect x="37.2852%" y="1189" width="0.5121%" height="15" fill="rgb(223,11,35)" fg:x="92057493" fg:w="1264422"/><text x="37.5352%" y="1199.50"></text></g><g><title>[libc.so.6] (1,264,422 samples, 0.51%)</title><rect x="37.2852%" y="1173" width="0.5121%" height="15" fill="rgb(251,219,26)" fg:x="92057493" fg:w="1264422"/><text x="37.5352%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,263,541 samples, 0.51%)</title><rect x="37.7973%" y="1365" width="0.5118%" height="15" fill="rgb(231,119,3)" fg:x="93321915" fg:w="1263541"/><text x="38.0473%" y="1375.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,263,541 samples, 0.51%)</title><rect x="37.7973%" y="1349" width="0.5118%" height="15" fill="rgb(216,97,11)" fg:x="93321915" fg:w="1263541"/><text x="38.0473%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,263,541 samples, 0.51%)</title><rect x="37.7973%" y="1333" width="0.5118%" height="15" fill="rgb(223,59,9)" fg:x="93321915" fg:w="1263541"/><text x="38.0473%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,263,541 samples, 0.51%)</title><rect x="37.7973%" y="1317" width="0.5118%" height="15" fill="rgb(233,93,31)" fg:x="93321915" fg:w="1263541"/><text x="38.0473%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (1,263,541 samples, 0.51%)</title><rect x="37.7973%" y="1301" width="0.5118%" height="15" fill="rgb(239,81,33)" fg:x="93321915" fg:w="1263541"/><text x="38.0473%" y="1311.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,263,541 samples, 0.51%)</title><rect x="37.7973%" y="1285" width="0.5118%" height="15" fill="rgb(213,120,34)" fg:x="93321915" fg:w="1263541"/><text x="38.0473%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,263,541 samples, 0.51%)</title><rect x="37.7973%" y="1269" width="0.5118%" height="15" fill="rgb(243,49,53)" fg:x="93321915" fg:w="1263541"/><text x="38.0473%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,263,541 samples, 0.51%)</title><rect x="37.7973%" y="1253" width="0.5118%" height="15" fill="rgb(247,216,33)" fg:x="93321915" fg:w="1263541"/><text x="38.0473%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,263,541 samples, 0.51%)</title><rect x="37.7973%" y="1237" width="0.5118%" height="15" fill="rgb(226,26,14)" fg:x="93321915" fg:w="1263541"/><text x="38.0473%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,263,541 samples, 0.51%)</title><rect x="37.7973%" y="1221" width="0.5118%" height="15" fill="rgb(215,49,53)" fg:x="93321915" fg:w="1263541"/><text x="38.0473%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,263,541 samples, 0.51%)</title><rect x="37.7973%" y="1205" width="0.5118%" height="15" fill="rgb(245,162,40)" fg:x="93321915" fg:w="1263541"/><text x="38.0473%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,263,541 samples, 0.51%)</title><rect x="37.7973%" y="1189" width="0.5118%" height="15" fill="rgb(229,68,17)" fg:x="93321915" fg:w="1263541"/><text x="38.0473%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (1,263,541 samples, 0.51%)</title><rect x="37.7973%" y="1173" width="0.5118%" height="15" fill="rgb(213,182,10)" fg:x="93321915" fg:w="1263541"/><text x="38.0473%" y="1183.50"></text></g><g><title>malloc (1,263,541 samples, 0.51%)</title><rect x="37.7973%" y="1157" width="0.5118%" height="15" fill="rgb(245,125,30)" fg:x="93321915" fg:w="1263541"/><text x="38.0473%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1301" width="1.1027%" height="15" fill="rgb(232,202,2)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1285" width="1.1027%" height="15" fill="rgb(237,140,51)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1295.50"></text></g><g><title>core::clone::Clone::clone (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1269" width="1.1027%" height="15" fill="rgb(236,157,25)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1279.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1253" width="1.1027%" height="15" fill="rgb(219,209,0)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1237" width="1.1027%" height="15" fill="rgb(240,116,54)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1221" width="1.1027%" height="15" fill="rgb(216,10,36)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1205" width="1.1027%" height="15" fill="rgb(222,72,44)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1189" width="1.1027%" height="15" fill="rgb(232,159,9)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1173" width="1.1027%" height="15" fill="rgb(210,39,32)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1157" width="1.1027%" height="15" fill="rgb(216,194,45)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1141" width="1.1027%" height="15" fill="rgb(218,18,35)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1125" width="1.1027%" height="15" fill="rgb(207,83,51)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1109" width="1.1027%" height="15" fill="rgb(225,63,43)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1093" width="1.1027%" height="15" fill="rgb(207,57,36)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1077" width="1.1027%" height="15" fill="rgb(216,99,33)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1087.50"></text></g><g><title>malloc (2,722,494 samples, 1.10%)</title><rect x="38.3091%" y="1061" width="1.1027%" height="15" fill="rgb(225,42,16)" fg:x="94585456" fg:w="2722494"/><text x="38.5591%" y="1071.50"></text></g><g><title>[libc.so.6] (1,385,843 samples, 0.56%)</title><rect x="38.8505%" y="1045" width="0.5613%" height="15" fill="rgb(220,201,45)" fg:x="95922107" fg:w="1385843"/><text x="39.1005%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (44,460,350 samples, 18.01%)</title><rect x="21.9124%" y="1445" width="18.0074%" height="15" fill="rgb(225,33,4)" fg:x="54101844" fg:w="44460350"/><text x="22.1624%" y="1455.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (44,460,350 samples, 18.01%)</title><rect x="21.9124%" y="1429" width="18.0074%" height="15" fill="rgb(224,33,50)" fg:x="54101844" fg:w="44460350"/><text x="22.1624%" y="1439.50">alloc::slice::&lt;impl [T]&gt;::to..</text></g><g><title>alloc::slice::hack::to_vec (44,460,350 samples, 18.01%)</title><rect x="21.9124%" y="1413" width="18.0074%" height="15" fill="rgb(246,198,51)" fg:x="54101844" fg:w="44460350"/><text x="22.1624%" y="1423.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (44,460,350 samples, 18.01%)</title><rect x="21.9124%" y="1397" width="18.0074%" height="15" fill="rgb(205,22,4)" fg:x="54101844" fg:w="44460350"/><text x="22.1624%" y="1407.50">&lt;T as alloc::slice::hack::Co..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (44,460,350 samples, 18.01%)</title><rect x="21.9124%" y="1381" width="18.0074%" height="15" fill="rgb(206,3,8)" fg:x="54101844" fg:w="44460350"/><text x="22.1624%" y="1391.50">&lt;css_bitvector_compiler::Htm..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,976,738 samples, 1.61%)</title><rect x="38.3091%" y="1365" width="1.6107%" height="15" fill="rgb(251,23,15)" fg:x="94585456" fg:w="3976738"/><text x="38.5591%" y="1375.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,976,738 samples, 1.61%)</title><rect x="38.3091%" y="1349" width="1.6107%" height="15" fill="rgb(252,88,28)" fg:x="94585456" fg:w="3976738"/><text x="38.5591%" y="1359.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,976,738 samples, 1.61%)</title><rect x="38.3091%" y="1333" width="1.6107%" height="15" fill="rgb(212,127,14)" fg:x="94585456" fg:w="3976738"/><text x="38.5591%" y="1343.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,976,738 samples, 1.61%)</title><rect x="38.3091%" y="1317" width="1.6107%" height="15" fill="rgb(247,145,37)" fg:x="94585456" fg:w="3976738"/><text x="38.5591%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,254,244 samples, 0.51%)</title><rect x="39.4118%" y="1301" width="0.5080%" height="15" fill="rgb(209,117,53)" fg:x="97307950" fg:w="1254244"/><text x="39.6618%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,254,244 samples, 0.51%)</title><rect x="39.4118%" y="1285" width="0.5080%" height="15" fill="rgb(212,90,42)" fg:x="97307950" fg:w="1254244"/><text x="39.6618%" y="1295.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,254,244 samples, 0.51%)</title><rect x="39.4118%" y="1269" width="0.5080%" height="15" fill="rgb(218,164,37)" fg:x="97307950" fg:w="1254244"/><text x="39.6618%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,254,244 samples, 0.51%)</title><rect x="39.4118%" y="1253" width="0.5080%" height="15" fill="rgb(246,65,34)" fg:x="97307950" fg:w="1254244"/><text x="39.6618%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,254,244 samples, 0.51%)</title><rect x="39.4118%" y="1237" width="0.5080%" height="15" fill="rgb(231,100,33)" fg:x="97307950" fg:w="1254244"/><text x="39.6618%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (1,254,244 samples, 0.51%)</title><rect x="39.4118%" y="1221" width="0.5080%" height="15" fill="rgb(228,126,14)" fg:x="97307950" fg:w="1254244"/><text x="39.6618%" y="1231.50"></text></g><g><title>malloc (1,254,244 samples, 0.51%)</title><rect x="39.4118%" y="1205" width="0.5080%" height="15" fill="rgb(215,173,21)" fg:x="97307950" fg:w="1254244"/><text x="39.6618%" y="1215.50"></text></g><g><title>[libc.so.6] (1,254,244 samples, 0.51%)</title><rect x="39.4118%" y="1189" width="0.5080%" height="15" fill="rgb(210,6,40)" fg:x="97307950" fg:w="1254244"/><text x="39.6618%" y="1199.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (46,963,775 samples, 19.02%)</title><rect x="21.4021%" y="1461" width="19.0213%" height="15" fill="rgb(212,48,18)" fg:x="52841892" fg:w="46963775"/><text x="21.6521%" y="1471.50">&lt;css_bitvector_compiler::HtmlN..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,243,473 samples, 0.50%)</title><rect x="39.9198%" y="1445" width="0.5036%" height="15" fill="rgb(230,214,11)" fg:x="98562194" fg:w="1243473"/><text x="40.1698%" y="1455.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,243,473 samples, 0.50%)</title><rect x="39.9198%" y="1429" width="0.5036%" height="15" fill="rgb(254,105,39)" fg:x="98562194" fg:w="1243473"/><text x="40.1698%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,243,473 samples, 0.50%)</title><rect x="39.9198%" y="1413" width="0.5036%" height="15" fill="rgb(245,158,5)" fg:x="98562194" fg:w="1243473"/><text x="40.1698%" y="1423.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,243,473 samples, 0.50%)</title><rect x="39.9198%" y="1397" width="0.5036%" height="15" fill="rgb(249,208,11)" fg:x="98562194" fg:w="1243473"/><text x="40.1698%" y="1407.50"></text></g><g><title>alloc::slice::hack::to_vec (1,243,473 samples, 0.50%)</title><rect x="39.9198%" y="1381" width="0.5036%" height="15" fill="rgb(210,39,28)" fg:x="98562194" fg:w="1243473"/><text x="40.1698%" y="1391.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,243,473 samples, 0.50%)</title><rect x="39.9198%" y="1365" width="0.5036%" height="15" fill="rgb(211,56,53)" fg:x="98562194" fg:w="1243473"/><text x="40.1698%" y="1375.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,243,473 samples, 0.50%)</title><rect x="39.9198%" y="1349" width="0.5036%" height="15" fill="rgb(226,201,30)" fg:x="98562194" fg:w="1243473"/><text x="40.1698%" y="1359.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,243,473 samples, 0.50%)</title><rect x="39.9198%" y="1333" width="0.5036%" height="15" fill="rgb(239,101,34)" fg:x="98562194" fg:w="1243473"/><text x="40.1698%" y="1343.50"></text></g><g><title>[libc.so.6] (1,243,473 samples, 0.50%)</title><rect x="39.9198%" y="1317" width="0.5036%" height="15" fill="rgb(226,209,5)" fg:x="98562194" fg:w="1243473"/><text x="40.1698%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (48,226,939 samples, 19.53%)</title><rect x="21.4021%" y="1525" width="19.5329%" height="15" fill="rgb(250,105,47)" fg:x="52841892" fg:w="48226939"/><text x="21.6521%" y="1535.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (48,226,939 samples, 19.53%)</title><rect x="21.4021%" y="1509" width="19.5329%" height="15" fill="rgb(230,72,3)" fg:x="52841892" fg:w="48226939"/><text x="21.6521%" y="1519.50">alloc::slice::&lt;impl [T]&gt;::to_ve..</text></g><g><title>alloc::slice::hack::to_vec (48,226,939 samples, 19.53%)</title><rect x="21.4021%" y="1493" width="19.5329%" height="15" fill="rgb(232,218,39)" fg:x="52841892" fg:w="48226939"/><text x="21.6521%" y="1503.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (48,226,939 samples, 19.53%)</title><rect x="21.4021%" y="1477" width="19.5329%" height="15" fill="rgb(248,166,6)" fg:x="52841892" fg:w="48226939"/><text x="21.6521%" y="1487.50">&lt;T as alloc::slice::hack::Conve..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,263,164 samples, 0.51%)</title><rect x="40.4234%" y="1461" width="0.5116%" height="15" fill="rgb(247,89,20)" fg:x="99805667" fg:w="1263164"/><text x="40.6734%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,263,164 samples, 0.51%)</title><rect x="40.4234%" y="1445" width="0.5116%" height="15" fill="rgb(248,130,54)" fg:x="99805667" fg:w="1263164"/><text x="40.6734%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,263,164 samples, 0.51%)</title><rect x="40.4234%" y="1429" width="0.5116%" height="15" fill="rgb(234,196,4)" fg:x="99805667" fg:w="1263164"/><text x="40.6734%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,263,164 samples, 0.51%)</title><rect x="40.4234%" y="1413" width="0.5116%" height="15" fill="rgb(250,143,31)" fg:x="99805667" fg:w="1263164"/><text x="40.6734%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,263,164 samples, 0.51%)</title><rect x="40.4234%" y="1397" width="0.5116%" height="15" fill="rgb(211,110,34)" fg:x="99805667" fg:w="1263164"/><text x="40.6734%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,263,164 samples, 0.51%)</title><rect x="40.4234%" y="1381" width="0.5116%" height="15" fill="rgb(215,124,48)" fg:x="99805667" fg:w="1263164"/><text x="40.6734%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (1,263,164 samples, 0.51%)</title><rect x="40.4234%" y="1365" width="0.5116%" height="15" fill="rgb(216,46,13)" fg:x="99805667" fg:w="1263164"/><text x="40.6734%" y="1375.50"></text></g><g><title>malloc (1,263,164 samples, 0.51%)</title><rect x="40.4234%" y="1349" width="0.5116%" height="15" fill="rgb(205,184,25)" fg:x="99805667" fg:w="1263164"/><text x="40.6734%" y="1359.50"></text></g><g><title>[libc.so.6] (1,263,164 samples, 0.51%)</title><rect x="40.4234%" y="1333" width="0.5116%" height="15" fill="rgb(228,1,10)" fg:x="99805667" fg:w="1263164"/><text x="40.6734%" y="1343.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,752,762 samples, 1.11%)</title><rect x="40.9350%" y="1525" width="1.1149%" height="15" fill="rgb(213,116,27)" fg:x="101068831" fg:w="2752762"/><text x="41.1850%" y="1535.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,752,762 samples, 1.11%)</title><rect x="40.9350%" y="1509" width="1.1149%" height="15" fill="rgb(241,95,50)" fg:x="101068831" fg:w="2752762"/><text x="41.1850%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,752,762 samples, 1.11%)</title><rect x="40.9350%" y="1493" width="1.1149%" height="15" fill="rgb(238,48,32)" fg:x="101068831" fg:w="2752762"/><text x="41.1850%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,752,762 samples, 1.11%)</title><rect x="40.9350%" y="1477" width="1.1149%" height="15" fill="rgb(235,113,49)" fg:x="101068831" fg:w="2752762"/><text x="41.1850%" y="1487.50"></text></g><g><title>alloc::slice::hack::to_vec (2,752,762 samples, 1.11%)</title><rect x="40.9350%" y="1461" width="1.1149%" height="15" fill="rgb(205,127,43)" fg:x="101068831" fg:w="2752762"/><text x="41.1850%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,752,762 samples, 1.11%)</title><rect x="40.9350%" y="1445" width="1.1149%" height="15" fill="rgb(250,162,2)" fg:x="101068831" fg:w="2752762"/><text x="41.1850%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,752,762 samples, 1.11%)</title><rect x="40.9350%" y="1429" width="1.1149%" height="15" fill="rgb(220,13,41)" fg:x="101068831" fg:w="2752762"/><text x="41.1850%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,752,762 samples, 1.11%)</title><rect x="40.9350%" y="1413" width="1.1149%" height="15" fill="rgb(249,221,25)" fg:x="101068831" fg:w="2752762"/><text x="41.1850%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,752,762 samples, 1.11%)</title><rect x="40.9350%" y="1397" width="1.1149%" height="15" fill="rgb(215,208,19)" fg:x="101068831" fg:w="2752762"/><text x="41.1850%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,752,762 samples, 1.11%)</title><rect x="40.9350%" y="1381" width="1.1149%" height="15" fill="rgb(236,175,2)" fg:x="101068831" fg:w="2752762"/><text x="41.1850%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,752,762 samples, 1.11%)</title><rect x="40.9350%" y="1365" width="1.1149%" height="15" fill="rgb(241,52,2)" fg:x="101068831" fg:w="2752762"/><text x="41.1850%" y="1375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,752,762 samples, 1.11%)</title><rect x="40.9350%" y="1349" width="1.1149%" height="15" fill="rgb(248,140,14)" fg:x="101068831" fg:w="2752762"/><text x="41.1850%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (2,752,762 samples, 1.11%)</title><rect x="40.9350%" y="1333" width="1.1149%" height="15" fill="rgb(253,22,42)" fg:x="101068831" fg:w="2752762"/><text x="41.1850%" y="1343.50"></text></g><g><title>malloc (2,752,762 samples, 1.11%)</title><rect x="40.9350%" y="1317" width="1.1149%" height="15" fill="rgb(234,61,47)" fg:x="101068831" fg:w="2752762"/><text x="41.1850%" y="1327.50"></text></g><g><title>[libc.so.6] (2,752,762 samples, 1.11%)</title><rect x="40.9350%" y="1301" width="1.1149%" height="15" fill="rgb(208,226,15)" fg:x="101068831" fg:w="2752762"/><text x="41.1850%" y="1311.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,313,944 samples, 0.53%)</title><rect x="42.0499%" y="1525" width="0.5322%" height="15" fill="rgb(217,221,4)" fg:x="103821593" fg:w="1313944"/><text x="42.2999%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,313,944 samples, 0.53%)</title><rect x="42.0499%" y="1509" width="0.5322%" height="15" fill="rgb(212,174,34)" fg:x="103821593" fg:w="1313944"/><text x="42.2999%" y="1519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,313,944 samples, 0.53%)</title><rect x="42.0499%" y="1493" width="0.5322%" height="15" fill="rgb(253,83,4)" fg:x="103821593" fg:w="1313944"/><text x="42.2999%" y="1503.50"></text></g><g><title>alloc::slice::hack::to_vec (1,313,944 samples, 0.53%)</title><rect x="42.0499%" y="1477" width="0.5322%" height="15" fill="rgb(250,195,49)" fg:x="103821593" fg:w="1313944"/><text x="42.2999%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,313,944 samples, 0.53%)</title><rect x="42.0499%" y="1461" width="0.5322%" height="15" fill="rgb(241,192,25)" fg:x="103821593" fg:w="1313944"/><text x="42.2999%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,313,944 samples, 0.53%)</title><rect x="42.0499%" y="1445" width="0.5322%" height="15" fill="rgb(208,124,10)" fg:x="103821593" fg:w="1313944"/><text x="42.2999%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,313,944 samples, 0.53%)</title><rect x="42.0499%" y="1429" width="0.5322%" height="15" fill="rgb(222,33,0)" fg:x="103821593" fg:w="1313944"/><text x="42.2999%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,313,944 samples, 0.53%)</title><rect x="42.0499%" y="1413" width="0.5322%" height="15" fill="rgb(234,209,28)" fg:x="103821593" fg:w="1313944"/><text x="42.2999%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,313,944 samples, 0.53%)</title><rect x="42.0499%" y="1397" width="0.5322%" height="15" fill="rgb(224,11,23)" fg:x="103821593" fg:w="1313944"/><text x="42.2999%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,313,944 samples, 0.53%)</title><rect x="42.0499%" y="1381" width="0.5322%" height="15" fill="rgb(232,99,1)" fg:x="103821593" fg:w="1313944"/><text x="42.2999%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,313,944 samples, 0.53%)</title><rect x="42.0499%" y="1365" width="0.5322%" height="15" fill="rgb(237,95,45)" fg:x="103821593" fg:w="1313944"/><text x="42.2999%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (1,313,944 samples, 0.53%)</title><rect x="42.0499%" y="1349" width="0.5322%" height="15" fill="rgb(208,109,11)" fg:x="103821593" fg:w="1313944"/><text x="42.2999%" y="1359.50"></text></g><g><title>__rdl_alloc (1,313,944 samples, 0.53%)</title><rect x="42.0499%" y="1333" width="0.5322%" height="15" fill="rgb(216,190,48)" fg:x="103821593" fg:w="1313944"/><text x="42.2999%" y="1343.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,313,944 samples, 0.53%)</title><rect x="42.0499%" y="1317" width="0.5322%" height="15" fill="rgb(251,171,36)" fg:x="103821593" fg:w="1313944"/><text x="42.2999%" y="1327.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (57,225,676 samples, 23.18%)</title><rect x="20.4289%" y="1541" width="23.1776%" height="15" fill="rgb(230,62,22)" fg:x="50439029" fg:w="57225676"/><text x="20.6789%" y="1551.50">&lt;css_bitvector_compiler::HtmlNode as ..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,529,168 samples, 1.02%)</title><rect x="42.5821%" y="1525" width="1.0244%" height="15" fill="rgb(225,114,35)" fg:x="105135537" fg:w="2529168"/><text x="42.8321%" y="1535.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,529,168 samples, 1.02%)</title><rect x="42.5821%" y="1509" width="1.0244%" height="15" fill="rgb(215,118,42)" fg:x="105135537" fg:w="2529168"/><text x="42.8321%" y="1519.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,529,168 samples, 1.02%)</title><rect x="42.5821%" y="1493" width="1.0244%" height="15" fill="rgb(243,119,21)" fg:x="105135537" fg:w="2529168"/><text x="42.8321%" y="1503.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1477" width="0.5113%" height="15" fill="rgb(252,177,53)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1487.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1461" width="0.5113%" height="15" fill="rgb(237,209,29)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1445" width="0.5113%" height="15" fill="rgb(212,65,23)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1455.50"></text></g><g><title>core::clone::Clone::clone (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1429" width="0.5113%" height="15" fill="rgb(230,222,46)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1439.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1413" width="0.5113%" height="15" fill="rgb(215,135,32)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1397" width="0.5113%" height="15" fill="rgb(246,101,22)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1381" width="0.5113%" height="15" fill="rgb(206,107,13)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1391.50"></text></g><g><title>alloc::slice::hack::to_vec (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1365" width="0.5113%" height="15" fill="rgb(250,100,44)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1375.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1349" width="0.5113%" height="15" fill="rgb(231,147,38)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1333" width="0.5113%" height="15" fill="rgb(229,8,40)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1317" width="0.5113%" height="15" fill="rgb(221,135,30)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1301" width="0.5113%" height="15" fill="rgb(249,193,18)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1285" width="0.5113%" height="15" fill="rgb(209,133,39)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1269" width="0.5113%" height="15" fill="rgb(232,100,14)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1253" width="0.5113%" height="15" fill="rgb(224,185,1)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1237" width="0.5113%" height="15" fill="rgb(223,139,8)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1247.50"></text></g><g><title>malloc (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1221" width="0.5113%" height="15" fill="rgb(232,213,38)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1231.50"></text></g><g><title>[libc.so.6] (1,262,384 samples, 0.51%)</title><rect x="43.0952%" y="1205" width="0.5113%" height="15" fill="rgb(207,94,22)" fg:x="106402321" fg:w="1262384"/><text x="43.3452%" y="1215.50"></text></g><g><title>__rust_alloc (1,328,255 samples, 0.54%)</title><rect x="43.6065%" y="1429" width="0.5380%" height="15" fill="rgb(219,183,54)" fg:x="107664705" fg:w="1328255"/><text x="43.8565%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,603,999 samples, 1.05%)</title><rect x="43.6065%" y="1541" width="1.0547%" height="15" fill="rgb(216,185,54)" fg:x="107664705" fg:w="2603999"/><text x="43.8565%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,603,999 samples, 1.05%)</title><rect x="43.6065%" y="1525" width="1.0547%" height="15" fill="rgb(254,217,39)" fg:x="107664705" fg:w="2603999"/><text x="43.8565%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,603,999 samples, 1.05%)</title><rect x="43.6065%" y="1509" width="1.0547%" height="15" fill="rgb(240,178,23)" fg:x="107664705" fg:w="2603999"/><text x="43.8565%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,603,999 samples, 1.05%)</title><rect x="43.6065%" y="1493" width="1.0547%" height="15" fill="rgb(218,11,47)" fg:x="107664705" fg:w="2603999"/><text x="43.8565%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,603,999 samples, 1.05%)</title><rect x="43.6065%" y="1477" width="1.0547%" height="15" fill="rgb(218,51,51)" fg:x="107664705" fg:w="2603999"/><text x="43.8565%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,603,999 samples, 1.05%)</title><rect x="43.6065%" y="1461" width="1.0547%" height="15" fill="rgb(238,126,27)" fg:x="107664705" fg:w="2603999"/><text x="43.8565%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (2,603,999 samples, 1.05%)</title><rect x="43.6065%" y="1445" width="1.0547%" height="15" fill="rgb(249,202,22)" fg:x="107664705" fg:w="2603999"/><text x="43.8565%" y="1455.50"></text></g><g><title>malloc (1,275,744 samples, 0.52%)</title><rect x="44.1444%" y="1429" width="0.5167%" height="15" fill="rgb(254,195,49)" fg:x="108992960" fg:w="1275744"/><text x="44.3944%" y="1439.50"></text></g><g><title>[libc.so.6] (1,275,744 samples, 0.52%)</title><rect x="44.1444%" y="1413" width="0.5167%" height="15" fill="rgb(208,123,14)" fg:x="108992960" fg:w="1275744"/><text x="44.3944%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (61,085,500 samples, 24.74%)</title><rect x="20.4289%" y="1605" width="24.7409%" height="15" fill="rgb(224,200,8)" fg:x="50439029" fg:w="61085500"/><text x="20.6789%" y="1615.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::C..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (61,085,500 samples, 24.74%)</title><rect x="20.4289%" y="1589" width="24.7409%" height="15" fill="rgb(217,61,36)" fg:x="50439029" fg:w="61085500"/><text x="20.6789%" y="1599.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (61,085,500 samples, 24.74%)</title><rect x="20.4289%" y="1573" width="24.7409%" height="15" fill="rgb(206,35,45)" fg:x="50439029" fg:w="61085500"/><text x="20.6789%" y="1583.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (61,085,500 samples, 24.74%)</title><rect x="20.4289%" y="1557" width="24.7409%" height="15" fill="rgb(217,65,33)" fg:x="50439029" fg:w="61085500"/><text x="20.6789%" y="1567.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,255,825 samples, 0.51%)</title><rect x="44.6611%" y="1541" width="0.5086%" height="15" fill="rgb(222,158,48)" fg:x="110268704" fg:w="1255825"/><text x="44.9111%" y="1551.50"></text></g><g><title>[libc.so.6] (1,259,582 samples, 0.51%)</title><rect x="45.6873%" y="1397" width="0.5102%" height="15" fill="rgb(254,2,54)" fg:x="112802357" fg:w="1259582"/><text x="45.9373%" y="1407.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5,137,473 samples, 2.08%)</title><rect x="45.1698%" y="1605" width="2.0808%" height="15" fill="rgb(250,143,38)" fg:x="111524529" fg:w="5137473"/><text x="45.4198%" y="1615.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,137,473 samples, 2.08%)</title><rect x="45.1698%" y="1589" width="2.0808%" height="15" fill="rgb(248,25,0)" fg:x="111524529" fg:w="5137473"/><text x="45.4198%" y="1599.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,859,645 samples, 1.56%)</title><rect x="45.6873%" y="1573" width="1.5632%" height="15" fill="rgb(206,152,27)" fg:x="112802357" fg:w="3859645"/><text x="45.9373%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,859,645 samples, 1.56%)</title><rect x="45.6873%" y="1557" width="1.5632%" height="15" fill="rgb(240,77,30)" fg:x="112802357" fg:w="3859645"/><text x="45.9373%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (3,859,645 samples, 1.56%)</title><rect x="45.6873%" y="1541" width="1.5632%" height="15" fill="rgb(231,5,3)" fg:x="112802357" fg:w="3859645"/><text x="45.9373%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,859,645 samples, 1.56%)</title><rect x="45.6873%" y="1525" width="1.5632%" height="15" fill="rgb(207,226,32)" fg:x="112802357" fg:w="3859645"/><text x="45.9373%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,859,645 samples, 1.56%)</title><rect x="45.6873%" y="1509" width="1.5632%" height="15" fill="rgb(222,207,47)" fg:x="112802357" fg:w="3859645"/><text x="45.9373%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,859,645 samples, 1.56%)</title><rect x="45.6873%" y="1493" width="1.5632%" height="15" fill="rgb(229,115,45)" fg:x="112802357" fg:w="3859645"/><text x="45.9373%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,859,645 samples, 1.56%)</title><rect x="45.6873%" y="1477" width="1.5632%" height="15" fill="rgb(224,191,6)" fg:x="112802357" fg:w="3859645"/><text x="45.9373%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,859,645 samples, 1.56%)</title><rect x="45.6873%" y="1461" width="1.5632%" height="15" fill="rgb(230,227,24)" fg:x="112802357" fg:w="3859645"/><text x="45.9373%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,859,645 samples, 1.56%)</title><rect x="45.6873%" y="1445" width="1.5632%" height="15" fill="rgb(228,80,19)" fg:x="112802357" fg:w="3859645"/><text x="45.9373%" y="1455.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,859,645 samples, 1.56%)</title><rect x="45.6873%" y="1429" width="1.5632%" height="15" fill="rgb(247,229,0)" fg:x="112802357" fg:w="3859645"/><text x="45.9373%" y="1439.50"></text></g><g><title>alloc::alloc::alloc (3,859,645 samples, 1.56%)</title><rect x="45.6873%" y="1413" width="1.5632%" height="15" fill="rgb(237,194,15)" fg:x="112802357" fg:w="3859645"/><text x="45.9373%" y="1423.50"></text></g><g><title>malloc (2,600,063 samples, 1.05%)</title><rect x="46.1975%" y="1397" width="1.0531%" height="15" fill="rgb(219,203,20)" fg:x="114061939" fg:w="2600063"/><text x="46.4475%" y="1407.50"></text></g><g><title>[libc.so.6] (1,338,048 samples, 0.54%)</title><rect x="46.7086%" y="1381" width="0.5419%" height="15" fill="rgb(234,128,8)" fg:x="115323954" fg:w="1338048"/><text x="46.9586%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (72,650,224 samples, 29.42%)</title><rect x="18.3386%" y="1765" width="29.4249%" height="15" fill="rgb(248,202,8)" fg:x="45278065" fg:w="72650224"/><text x="18.5886%" y="1775.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::c..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (72,650,224 samples, 29.42%)</title><rect x="18.3386%" y="1749" width="29.4249%" height="15" fill="rgb(206,104,37)" fg:x="45278065" fg:w="72650224"/><text x="18.5886%" y="1759.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (72,650,224 samples, 29.42%)</title><rect x="18.3386%" y="1733" width="29.4249%" height="15" fill="rgb(223,8,27)" fg:x="45278065" fg:w="72650224"/><text x="18.5886%" y="1743.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (72,650,224 samples, 29.42%)</title><rect x="18.3386%" y="1717" width="29.4249%" height="15" fill="rgb(216,217,28)" fg:x="45278065" fg:w="72650224"/><text x="18.5886%" y="1727.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (72,650,224 samples, 29.42%)</title><rect x="18.3386%" y="1701" width="29.4249%" height="15" fill="rgb(249,199,1)" fg:x="45278065" fg:w="72650224"/><text x="18.5886%" y="1711.50">&lt;css_bitvector_compiler::HtmlNode as core::clon..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (71,616,668 samples, 29.01%)</title><rect x="18.7572%" y="1685" width="29.0063%" height="15" fill="rgb(240,85,17)" fg:x="46311621" fg:w="71616668"/><text x="19.0072%" y="1695.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::c..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (71,616,668 samples, 29.01%)</title><rect x="18.7572%" y="1669" width="29.0063%" height="15" fill="rgb(206,108,45)" fg:x="46311621" fg:w="71616668"/><text x="19.0072%" y="1679.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (71,616,668 samples, 29.01%)</title><rect x="18.7572%" y="1653" width="29.0063%" height="15" fill="rgb(245,210,41)" fg:x="46311621" fg:w="71616668"/><text x="19.0072%" y="1663.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (71,616,668 samples, 29.01%)</title><rect x="18.7572%" y="1637" width="29.0063%" height="15" fill="rgb(206,13,37)" fg:x="46311621" fg:w="71616668"/><text x="19.0072%" y="1647.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (71,616,668 samples, 29.01%)</title><rect x="18.7572%" y="1621" width="29.0063%" height="15" fill="rgb(250,61,18)" fg:x="46311621" fg:w="71616668"/><text x="19.0072%" y="1631.50">&lt;css_bitvector_compiler::HtmlNode as core::clon..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,266,287 samples, 0.51%)</title><rect x="47.2506%" y="1605" width="0.5129%" height="15" fill="rgb(235,172,48)" fg:x="116662002" fg:w="1266287"/><text x="47.5006%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,266,287 samples, 0.51%)</title><rect x="47.2506%" y="1589" width="0.5129%" height="15" fill="rgb(249,201,17)" fg:x="116662002" fg:w="1266287"/><text x="47.5006%" y="1599.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,296,392 samples, 0.53%)</title><rect x="47.7634%" y="1765" width="0.5251%" height="15" fill="rgb(219,208,6)" fg:x="117928289" fg:w="1296392"/><text x="48.0134%" y="1775.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,296,392 samples, 0.53%)</title><rect x="47.7634%" y="1749" width="0.5251%" height="15" fill="rgb(248,31,23)" fg:x="117928289" fg:w="1296392"/><text x="48.0134%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,296,392 samples, 0.53%)</title><rect x="47.7634%" y="1733" width="0.5251%" height="15" fill="rgb(245,15,42)" fg:x="117928289" fg:w="1296392"/><text x="48.0134%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,296,392 samples, 0.53%)</title><rect x="47.7634%" y="1717" width="0.5251%" height="15" fill="rgb(222,217,39)" fg:x="117928289" fg:w="1296392"/><text x="48.0134%" y="1727.50"></text></g><g><title>alloc::slice::hack::to_vec (1,296,392 samples, 0.53%)</title><rect x="47.7634%" y="1701" width="0.5251%" height="15" fill="rgb(210,219,27)" fg:x="117928289" fg:w="1296392"/><text x="48.0134%" y="1711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,296,392 samples, 0.53%)</title><rect x="47.7634%" y="1685" width="0.5251%" height="15" fill="rgb(252,166,36)" fg:x="117928289" fg:w="1296392"/><text x="48.0134%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,296,392 samples, 0.53%)</title><rect x="47.7634%" y="1669" width="0.5251%" height="15" fill="rgb(245,132,34)" fg:x="117928289" fg:w="1296392"/><text x="48.0134%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,296,392 samples, 0.53%)</title><rect x="47.7634%" y="1653" width="0.5251%" height="15" fill="rgb(236,54,3)" fg:x="117928289" fg:w="1296392"/><text x="48.0134%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,296,392 samples, 0.53%)</title><rect x="47.7634%" y="1637" width="0.5251%" height="15" fill="rgb(241,173,43)" fg:x="117928289" fg:w="1296392"/><text x="48.0134%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,296,392 samples, 0.53%)</title><rect x="47.7634%" y="1621" width="0.5251%" height="15" fill="rgb(215,190,9)" fg:x="117928289" fg:w="1296392"/><text x="48.0134%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,296,392 samples, 0.53%)</title><rect x="47.7634%" y="1605" width="0.5251%" height="15" fill="rgb(242,101,16)" fg:x="117928289" fg:w="1296392"/><text x="48.0134%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,296,392 samples, 0.53%)</title><rect x="47.7634%" y="1589" width="0.5251%" height="15" fill="rgb(223,190,21)" fg:x="117928289" fg:w="1296392"/><text x="48.0134%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (1,296,392 samples, 0.53%)</title><rect x="47.7634%" y="1573" width="0.5251%" height="15" fill="rgb(215,228,25)" fg:x="117928289" fg:w="1296392"/><text x="48.0134%" y="1583.50"></text></g><g><title>malloc (1,296,392 samples, 0.53%)</title><rect x="47.7634%" y="1557" width="0.5251%" height="15" fill="rgb(225,36,22)" fg:x="117928289" fg:w="1296392"/><text x="48.0134%" y="1567.50"></text></g><g><title>[libc.so.6] (1,296,392 samples, 0.53%)</title><rect x="47.7634%" y="1541" width="0.5251%" height="15" fill="rgb(251,106,46)" fg:x="117928289" fg:w="1296392"/><text x="48.0134%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,248,204 samples, 0.51%)</title><rect x="48.2885%" y="1685" width="0.5055%" height="15" fill="rgb(208,90,1)" fg:x="119224681" fg:w="1248204"/><text x="48.5385%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,248,204 samples, 0.51%)</title><rect x="48.2885%" y="1669" width="0.5055%" height="15" fill="rgb(243,10,4)" fg:x="119224681" fg:w="1248204"/><text x="48.5385%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,248,204 samples, 0.51%)</title><rect x="48.2885%" y="1653" width="0.5055%" height="15" fill="rgb(212,137,27)" fg:x="119224681" fg:w="1248204"/><text x="48.5385%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,248,204 samples, 0.51%)</title><rect x="48.2885%" y="1637" width="0.5055%" height="15" fill="rgb(231,220,49)" fg:x="119224681" fg:w="1248204"/><text x="48.5385%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,248,204 samples, 0.51%)</title><rect x="48.2885%" y="1621" width="0.5055%" height="15" fill="rgb(237,96,20)" fg:x="119224681" fg:w="1248204"/><text x="48.5385%" y="1631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,248,204 samples, 0.51%)</title><rect x="48.2885%" y="1605" width="0.5055%" height="15" fill="rgb(239,229,30)" fg:x="119224681" fg:w="1248204"/><text x="48.5385%" y="1615.50"></text></g><g><title>alloc::alloc::alloc (1,248,204 samples, 0.51%)</title><rect x="48.2885%" y="1589" width="0.5055%" height="15" fill="rgb(219,65,33)" fg:x="119224681" fg:w="1248204"/><text x="48.5385%" y="1599.50"></text></g><g><title>malloc (1,248,204 samples, 0.51%)</title><rect x="48.2885%" y="1573" width="0.5055%" height="15" fill="rgb(243,134,7)" fg:x="119224681" fg:w="1248204"/><text x="48.5385%" y="1583.50"></text></g><g><title>[libc.so.6] (1,248,204 samples, 0.51%)</title><rect x="48.2885%" y="1557" width="0.5055%" height="15" fill="rgb(216,177,54)" fg:x="119224681" fg:w="1248204"/><text x="48.5385%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (79,358,570 samples, 32.14%)</title><rect x="17.2335%" y="1845" width="32.1419%" height="15" fill="rgb(211,160,20)" fg:x="42549715" fg:w="79358570"/><text x="17.4835%" y="1855.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (79,358,570 samples, 32.14%)</title><rect x="17.2335%" y="1829" width="32.1419%" height="15" fill="rgb(239,85,39)" fg:x="42549715" fg:w="79358570"/><text x="17.4835%" y="1839.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (79,358,570 samples, 32.14%)</title><rect x="17.2335%" y="1813" width="32.1419%" height="15" fill="rgb(232,125,22)" fg:x="42549715" fg:w="79358570"/><text x="17.4835%" y="1823.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (79,358,570 samples, 32.14%)</title><rect x="17.2335%" y="1797" width="32.1419%" height="15" fill="rgb(244,57,34)" fg:x="42549715" fg:w="79358570"/><text x="17.4835%" y="1807.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (79,358,570 samples, 32.14%)</title><rect x="17.2335%" y="1781" width="32.1419%" height="15" fill="rgb(214,203,32)" fg:x="42549715" fg:w="79358570"/><text x="17.4835%" y="1791.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Cl..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,683,604 samples, 1.09%)</title><rect x="48.2885%" y="1765" width="1.0869%" height="15" fill="rgb(207,58,43)" fg:x="119224681" fg:w="2683604"/><text x="48.5385%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,683,604 samples, 1.09%)</title><rect x="48.2885%" y="1749" width="1.0869%" height="15" fill="rgb(215,193,15)" fg:x="119224681" fg:w="2683604"/><text x="48.5385%" y="1759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,683,604 samples, 1.09%)</title><rect x="48.2885%" y="1733" width="1.0869%" height="15" fill="rgb(232,15,44)" fg:x="119224681" fg:w="2683604"/><text x="48.5385%" y="1743.50"></text></g><g><title>alloc::slice::hack::to_vec (2,683,604 samples, 1.09%)</title><rect x="48.2885%" y="1717" width="1.0869%" height="15" fill="rgb(212,3,48)" fg:x="119224681" fg:w="2683604"/><text x="48.5385%" y="1727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,683,604 samples, 1.09%)</title><rect x="48.2885%" y="1701" width="1.0869%" height="15" fill="rgb(218,128,7)" fg:x="119224681" fg:w="2683604"/><text x="48.5385%" y="1711.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,435,400 samples, 0.58%)</title><rect x="48.7940%" y="1685" width="0.5814%" height="15" fill="rgb(226,216,39)" fg:x="120472885" fg:w="1435400"/><text x="49.0440%" y="1695.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,435,400 samples, 0.58%)</title><rect x="48.7940%" y="1669" width="0.5814%" height="15" fill="rgb(243,47,51)" fg:x="120472885" fg:w="1435400"/><text x="49.0440%" y="1679.50"></text></g><g><title>[libc.so.6] (1,435,400 samples, 0.58%)</title><rect x="48.7940%" y="1653" width="0.5814%" height="15" fill="rgb(241,183,40)" fg:x="120472885" fg:w="1435400"/><text x="49.0440%" y="1663.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,276,997 samples, 0.52%)</title><rect x="50.4033%" y="1829" width="0.5172%" height="15" fill="rgb(231,217,32)" fg:x="124446142" fg:w="1276997"/><text x="50.6533%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,276,997 samples, 0.52%)</title><rect x="50.4033%" y="1813" width="0.5172%" height="15" fill="rgb(229,61,38)" fg:x="124446142" fg:w="1276997"/><text x="50.6533%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,276,997 samples, 0.52%)</title><rect x="50.4033%" y="1797" width="0.5172%" height="15" fill="rgb(225,210,5)" fg:x="124446142" fg:w="1276997"/><text x="50.6533%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (1,276,997 samples, 0.52%)</title><rect x="50.4033%" y="1781" width="0.5172%" height="15" fill="rgb(231,79,45)" fg:x="124446142" fg:w="1276997"/><text x="50.6533%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,276,997 samples, 0.52%)</title><rect x="50.4033%" y="1765" width="0.5172%" height="15" fill="rgb(224,100,7)" fg:x="124446142" fg:w="1276997"/><text x="50.6533%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,276,997 samples, 0.52%)</title><rect x="50.4033%" y="1749" width="0.5172%" height="15" fill="rgb(241,198,18)" fg:x="124446142" fg:w="1276997"/><text x="50.6533%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,276,997 samples, 0.52%)</title><rect x="50.4033%" y="1733" width="0.5172%" height="15" fill="rgb(252,97,53)" fg:x="124446142" fg:w="1276997"/><text x="50.6533%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,276,997 samples, 0.52%)</title><rect x="50.4033%" y="1717" width="0.5172%" height="15" fill="rgb(220,88,7)" fg:x="124446142" fg:w="1276997"/><text x="50.6533%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,276,997 samples, 0.52%)</title><rect x="50.4033%" y="1701" width="0.5172%" height="15" fill="rgb(213,176,14)" fg:x="124446142" fg:w="1276997"/><text x="50.6533%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,276,997 samples, 0.52%)</title><rect x="50.4033%" y="1685" width="0.5172%" height="15" fill="rgb(246,73,7)" fg:x="124446142" fg:w="1276997"/><text x="50.6533%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,276,997 samples, 0.52%)</title><rect x="50.4033%" y="1669" width="0.5172%" height="15" fill="rgb(245,64,36)" fg:x="124446142" fg:w="1276997"/><text x="50.6533%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (1,276,997 samples, 0.52%)</title><rect x="50.4033%" y="1653" width="0.5172%" height="15" fill="rgb(245,80,10)" fg:x="124446142" fg:w="1276997"/><text x="50.6533%" y="1663.50"></text></g><g><title>malloc (1,276,997 samples, 0.52%)</title><rect x="50.4033%" y="1637" width="0.5172%" height="15" fill="rgb(232,107,50)" fg:x="124446142" fg:w="1276997"/><text x="50.6533%" y="1647.50"></text></g><g><title>[libc.so.6] (1,276,997 samples, 0.52%)</title><rect x="50.4033%" y="1621" width="0.5172%" height="15" fill="rgb(253,3,0)" fg:x="124446142" fg:w="1276997"/><text x="50.6533%" y="1631.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5,073,360 samples, 2.05%)</title><rect x="49.3754%" y="1845" width="2.0548%" height="15" fill="rgb(212,99,53)" fg:x="121908285" fg:w="5073360"/><text x="49.6254%" y="1855.50">&lt;..</text></g><g><title>malloc (1,258,506 samples, 0.51%)</title><rect x="50.9205%" y="1829" width="0.5097%" height="15" fill="rgb(249,111,54)" fg:x="125723139" fg:w="1258506"/><text x="51.1705%" y="1839.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,293,737 samples, 0.52%)</title><rect x="51.4302%" y="1845" width="0.5240%" height="15" fill="rgb(249,55,30)" fg:x="126981645" fg:w="1293737"/><text x="51.6802%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,293,737 samples, 0.52%)</title><rect x="51.4302%" y="1829" width="0.5240%" height="15" fill="rgb(237,47,42)" fg:x="126981645" fg:w="1293737"/><text x="51.6802%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,293,737 samples, 0.52%)</title><rect x="51.4302%" y="1813" width="0.5240%" height="15" fill="rgb(211,20,18)" fg:x="126981645" fg:w="1293737"/><text x="51.6802%" y="1823.50"></text></g><g><title>alloc::slice::hack::to_vec (1,293,737 samples, 0.52%)</title><rect x="51.4302%" y="1797" width="0.5240%" height="15" fill="rgb(231,203,46)" fg:x="126981645" fg:w="1293737"/><text x="51.6802%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,293,737 samples, 0.52%)</title><rect x="51.4302%" y="1781" width="0.5240%" height="15" fill="rgb(237,142,3)" fg:x="126981645" fg:w="1293737"/><text x="51.6802%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,293,737 samples, 0.52%)</title><rect x="51.4302%" y="1765" width="0.5240%" height="15" fill="rgb(241,107,1)" fg:x="126981645" fg:w="1293737"/><text x="51.6802%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,293,737 samples, 0.52%)</title><rect x="51.4302%" y="1749" width="0.5240%" height="15" fill="rgb(229,83,13)" fg:x="126981645" fg:w="1293737"/><text x="51.6802%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,293,737 samples, 0.52%)</title><rect x="51.4302%" y="1733" width="0.5240%" height="15" fill="rgb(241,91,40)" fg:x="126981645" fg:w="1293737"/><text x="51.6802%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,293,737 samples, 0.52%)</title><rect x="51.4302%" y="1717" width="0.5240%" height="15" fill="rgb(225,3,45)" fg:x="126981645" fg:w="1293737"/><text x="51.6802%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,293,737 samples, 0.52%)</title><rect x="51.4302%" y="1701" width="0.5240%" height="15" fill="rgb(244,223,14)" fg:x="126981645" fg:w="1293737"/><text x="51.6802%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,293,737 samples, 0.52%)</title><rect x="51.4302%" y="1685" width="0.5240%" height="15" fill="rgb(224,124,37)" fg:x="126981645" fg:w="1293737"/><text x="51.6802%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (1,293,737 samples, 0.52%)</title><rect x="51.4302%" y="1669" width="0.5240%" height="15" fill="rgb(251,171,30)" fg:x="126981645" fg:w="1293737"/><text x="51.6802%" y="1679.50"></text></g><g><title>malloc (1,293,737 samples, 0.52%)</title><rect x="51.4302%" y="1653" width="0.5240%" height="15" fill="rgb(236,46,54)" fg:x="126981645" fg:w="1293737"/><text x="51.6802%" y="1663.50"></text></g><g><title>[libc.so.6] (1,293,737 samples, 0.52%)</title><rect x="51.4302%" y="1637" width="0.5240%" height="15" fill="rgb(245,213,5)" fg:x="126981645" fg:w="1293737"/><text x="51.6802%" y="1647.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (88,254,842 samples, 35.75%)</title><rect x="16.7202%" y="1861" width="35.7451%" height="15" fill="rgb(230,144,27)" fg:x="41282227" fg:w="88254842"/><text x="16.9702%" y="1871.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,261,687 samples, 0.51%)</title><rect x="51.9542%" y="1845" width="0.5110%" height="15" fill="rgb(220,86,6)" fg:x="128275382" fg:w="1261687"/><text x="52.2042%" y="1855.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,261,687 samples, 0.51%)</title><rect x="51.9542%" y="1829" width="0.5110%" height="15" fill="rgb(240,20,13)" fg:x="128275382" fg:w="1261687"/><text x="52.2042%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (89,159,560 samples, 36.11%)</title><rect x="16.7202%" y="2005" width="36.1115%" height="15" fill="rgb(217,89,34)" fg:x="41282227" fg:w="89159560"/><text x="16.9702%" y="2015.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (89,159,560 samples, 36.11%)</title><rect x="16.7202%" y="1989" width="36.1115%" height="15" fill="rgb(229,13,5)" fg:x="41282227" fg:w="89159560"/><text x="16.9702%" y="1999.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (89,159,560 samples, 36.11%)</title><rect x="16.7202%" y="1973" width="36.1115%" height="15" fill="rgb(244,67,35)" fg:x="41282227" fg:w="89159560"/><text x="16.9702%" y="1983.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (89,159,560 samples, 36.11%)</title><rect x="16.7202%" y="1957" width="36.1115%" height="15" fill="rgb(221,40,2)" fg:x="41282227" fg:w="89159560"/><text x="16.9702%" y="1967.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (89,159,560 samples, 36.11%)</title><rect x="16.7202%" y="1941" width="36.1115%" height="15" fill="rgb(237,157,21)" fg:x="41282227" fg:w="89159560"/><text x="16.9702%" y="1951.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (89,159,560 samples, 36.11%)</title><rect x="16.7202%" y="1925" width="36.1115%" height="15" fill="rgb(222,94,11)" fg:x="41282227" fg:w="89159560"/><text x="16.9702%" y="1935.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (89,159,560 samples, 36.11%)</title><rect x="16.7202%" y="1909" width="36.1115%" height="15" fill="rgb(249,113,6)" fg:x="41282227" fg:w="89159560"/><text x="16.9702%" y="1919.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (89,159,560 samples, 36.11%)</title><rect x="16.7202%" y="1893" width="36.1115%" height="15" fill="rgb(238,137,36)" fg:x="41282227" fg:w="89159560"/><text x="16.9702%" y="1903.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (89,159,560 samples, 36.11%)</title><rect x="16.7202%" y="1877" width="36.1115%" height="15" fill="rgb(210,102,26)" fg:x="41282227" fg:w="89159560"/><text x="16.9702%" y="1887.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (904,718 samples, 0.37%)</title><rect x="52.4652%" y="1861" width="0.3664%" height="15" fill="rgb(218,30,30)" fg:x="129537069" fg:w="904718"/><text x="52.7152%" y="1871.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (90,379,061 samples, 36.61%)</title><rect x="16.7202%" y="2101" width="36.6054%" height="15" fill="rgb(214,67,26)" fg:x="41282227" fg:w="90379061"/><text x="16.9702%" y="2111.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::cl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (90,379,061 samples, 36.61%)</title><rect x="16.7202%" y="2085" width="36.6054%" height="15" fill="rgb(251,9,53)" fg:x="41282227" fg:w="90379061"/><text x="16.9702%" y="2095.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (90,379,061 samples, 36.61%)</title><rect x="16.7202%" y="2069" width="36.6054%" height="15" fill="rgb(228,204,25)" fg:x="41282227" fg:w="90379061"/><text x="16.9702%" y="2079.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (90,379,061 samples, 36.61%)</title><rect x="16.7202%" y="2053" width="36.6054%" height="15" fill="rgb(207,153,8)" fg:x="41282227" fg:w="90379061"/><text x="16.9702%" y="2063.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (90,379,061 samples, 36.61%)</title><rect x="16.7202%" y="2037" width="36.6054%" height="15" fill="rgb(242,9,16)" fg:x="41282227" fg:w="90379061"/><text x="16.9702%" y="2047.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (90,379,061 samples, 36.61%)</title><rect x="16.7202%" y="2021" width="36.6054%" height="15" fill="rgb(217,211,10)" fg:x="41282227" fg:w="90379061"/><text x="16.9702%" y="2031.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::cl..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,219,501 samples, 0.49%)</title><rect x="52.8317%" y="2005" width="0.4939%" height="15" fill="rgb(219,228,52)" fg:x="130441787" fg:w="1219501"/><text x="53.0817%" y="2015.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,219,501 samples, 0.49%)</title><rect x="52.8317%" y="1989" width="0.4939%" height="15" fill="rgb(231,92,29)" fg:x="130441787" fg:w="1219501"/><text x="53.0817%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,219,501 samples, 0.49%)</title><rect x="52.8317%" y="1973" width="0.4939%" height="15" fill="rgb(232,8,23)" fg:x="130441787" fg:w="1219501"/><text x="53.0817%" y="1983.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,219,501 samples, 0.49%)</title><rect x="52.8317%" y="1957" width="0.4939%" height="15" fill="rgb(216,211,34)" fg:x="130441787" fg:w="1219501"/><text x="53.0817%" y="1967.50"></text></g><g><title>alloc::slice::hack::to_vec (1,219,501 samples, 0.49%)</title><rect x="52.8317%" y="1941" width="0.4939%" height="15" fill="rgb(236,151,0)" fg:x="130441787" fg:w="1219501"/><text x="53.0817%" y="1951.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,219,501 samples, 0.49%)</title><rect x="52.8317%" y="1925" width="0.4939%" height="15" fill="rgb(209,168,3)" fg:x="130441787" fg:w="1219501"/><text x="53.0817%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,219,501 samples, 0.49%)</title><rect x="52.8317%" y="1909" width="0.4939%" height="15" fill="rgb(208,129,28)" fg:x="130441787" fg:w="1219501"/><text x="53.0817%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,219,501 samples, 0.49%)</title><rect x="52.8317%" y="1893" width="0.4939%" height="15" fill="rgb(229,78,22)" fg:x="130441787" fg:w="1219501"/><text x="53.0817%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,219,501 samples, 0.49%)</title><rect x="52.8317%" y="1877" width="0.4939%" height="15" fill="rgb(228,187,13)" fg:x="130441787" fg:w="1219501"/><text x="53.0817%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,219,501 samples, 0.49%)</title><rect x="52.8317%" y="1861" width="0.4939%" height="15" fill="rgb(240,119,24)" fg:x="130441787" fg:w="1219501"/><text x="53.0817%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,219,501 samples, 0.49%)</title><rect x="52.8317%" y="1845" width="0.4939%" height="15" fill="rgb(209,194,42)" fg:x="130441787" fg:w="1219501"/><text x="53.0817%" y="1855.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,219,501 samples, 0.49%)</title><rect x="52.8317%" y="1829" width="0.4939%" height="15" fill="rgb(247,200,46)" fg:x="130441787" fg:w="1219501"/><text x="53.0817%" y="1839.50"></text></g><g><title>alloc::alloc::alloc (1,219,501 samples, 0.49%)</title><rect x="52.8317%" y="1813" width="0.4939%" height="15" fill="rgb(218,76,16)" fg:x="130441787" fg:w="1219501"/><text x="53.0817%" y="1823.50"></text></g><g><title>__rdl_alloc (1,219,501 samples, 0.49%)</title><rect x="52.8317%" y="1797" width="0.4939%" height="15" fill="rgb(225,21,48)" fg:x="130441787" fg:w="1219501"/><text x="53.0817%" y="1807.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,219,501 samples, 0.49%)</title><rect x="52.8317%" y="1781" width="0.4939%" height="15" fill="rgb(239,223,50)" fg:x="130441787" fg:w="1219501"/><text x="53.0817%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1,082,735 samples, 0.44%)</title><rect x="53.3256%" y="2085" width="0.4385%" height="15" fill="rgb(244,45,21)" fg:x="131661288" fg:w="1082735"/><text x="53.5756%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,082,735 samples, 0.44%)</title><rect x="53.3256%" y="2069" width="0.4385%" height="15" fill="rgb(232,33,43)" fg:x="131661288" fg:w="1082735"/><text x="53.5756%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,082,735 samples, 0.44%)</title><rect x="53.3256%" y="2053" width="0.4385%" height="15" fill="rgb(209,8,3)" fg:x="131661288" fg:w="1082735"/><text x="53.5756%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,082,735 samples, 0.44%)</title><rect x="53.3256%" y="2037" width="0.4385%" height="15" fill="rgb(214,25,53)" fg:x="131661288" fg:w="1082735"/><text x="53.5756%" y="2047.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,082,735 samples, 0.44%)</title><rect x="53.3256%" y="2021" width="0.4385%" height="15" fill="rgb(254,186,54)" fg:x="131661288" fg:w="1082735"/><text x="53.5756%" y="2031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,082,735 samples, 0.44%)</title><rect x="53.3256%" y="2005" width="0.4385%" height="15" fill="rgb(208,174,49)" fg:x="131661288" fg:w="1082735"/><text x="53.5756%" y="2015.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,082,735 samples, 0.44%)</title><rect x="53.3256%" y="1989" width="0.4385%" height="15" fill="rgb(233,191,51)" fg:x="131661288" fg:w="1082735"/><text x="53.5756%" y="1999.50"></text></g><g><title>alloc::alloc::realloc (1,082,735 samples, 0.44%)</title><rect x="53.3256%" y="1973" width="0.4385%" height="15" fill="rgb(222,134,10)" fg:x="131661288" fg:w="1082735"/><text x="53.5756%" y="1983.50"></text></g><g><title>realloc (1,082,735 samples, 0.44%)</title><rect x="53.3256%" y="1957" width="0.4385%" height="15" fill="rgb(230,226,20)" fg:x="131661288" fg:w="1082735"/><text x="53.5756%" y="1967.50"></text></g><g><title>benchmark::extract_path_from_command (1,302,814 samples, 0.53%)</title><rect x="53.7641%" y="2085" width="0.5277%" height="15" fill="rgb(251,111,25)" fg:x="132744023" fg:w="1302814"/><text x="54.0141%" y="2095.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,302,814 samples, 0.53%)</title><rect x="53.7641%" y="2069" width="0.5277%" height="15" fill="rgb(224,40,46)" fg:x="132744023" fg:w="1302814"/><text x="54.0141%" y="2079.50"></text></g><g><title>benchmark::extract_path_from_command::_{{closure}} (1,302,814 samples, 0.53%)</title><rect x="53.7641%" y="2053" width="0.5277%" height="15" fill="rgb(236,108,47)" fg:x="132744023" fg:w="1302814"/><text x="54.0141%" y="2063.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,302,814 samples, 0.53%)</title><rect x="53.7641%" y="2037" width="0.5277%" height="15" fill="rgb(234,93,0)" fg:x="132744023" fg:w="1302814"/><text x="54.0141%" y="2047.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,302,814 samples, 0.53%)</title><rect x="53.7641%" y="2021" width="0.5277%" height="15" fill="rgb(224,213,32)" fg:x="132744023" fg:w="1302814"/><text x="54.0141%" y="2031.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,302,814 samples, 0.53%)</title><rect x="53.7641%" y="2005" width="0.5277%" height="15" fill="rgb(251,11,48)" fg:x="132744023" fg:w="1302814"/><text x="54.0141%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,302,814 samples, 0.53%)</title><rect x="53.7641%" y="1989" width="0.5277%" height="15" fill="rgb(236,173,5)" fg:x="132744023" fg:w="1302814"/><text x="54.0141%" y="1999.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,302,814 samples, 0.53%)</title><rect x="53.7641%" y="1973" width="0.5277%" height="15" fill="rgb(230,95,12)" fg:x="132744023" fg:w="1302814"/><text x="54.0141%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,302,814 samples, 0.53%)</title><rect x="53.7641%" y="1957" width="0.5277%" height="15" fill="rgb(232,209,1)" fg:x="132744023" fg:w="1302814"/><text x="54.0141%" y="1967.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (1,302,814 samples, 0.53%)</title><rect x="53.7641%" y="1941" width="0.5277%" height="15" fill="rgb(232,6,1)" fg:x="132744023" fg:w="1302814"/><text x="54.0141%" y="1951.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,302,814 samples, 0.53%)</title><rect x="53.7641%" y="1925" width="0.5277%" height="15" fill="rgb(210,224,50)" fg:x="132744023" fg:w="1302814"/><text x="54.0141%" y="1935.50"></text></g><g><title>benchmark::extract_path_from_command::_{{closure}}::_{{closure}} (1,302,814 samples, 0.53%)</title><rect x="53.7641%" y="1909" width="0.5277%" height="15" fill="rgb(228,127,35)" fg:x="132744023" fg:w="1302814"/><text x="54.0141%" y="1919.50"></text></g><g><title>serde_json::value::Value::as_u64 (1,302,814 samples, 0.53%)</title><rect x="53.7641%" y="1893" width="0.5277%" height="15" fill="rgb(245,102,45)" fg:x="132744023" fg:w="1302814"/><text x="54.0141%" y="1903.50"></text></g><g><title>benchmark::json_to_html_node (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="2005" width="0.5592%" height="15" fill="rgb(214,1,49)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="2015.50"></text></g><g><title>benchmark::json_to_html_node (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1989" width="0.5592%" height="15" fill="rgb(226,163,40)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1999.50"></text></g><g><title>benchmark::json_to_html_node (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1973" width="0.5592%" height="15" fill="rgb(239,212,28)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1957" width="0.5592%" height="15" fill="rgb(220,20,13)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1967.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1941" width="0.5592%" height="15" fill="rgb(210,164,35)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1951.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1925" width="0.5592%" height="15" fill="rgb(248,109,41)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1935.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1909" width="0.5592%" height="15" fill="rgb(238,23,50)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1919.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1893" width="0.5592%" height="15" fill="rgb(211,48,49)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1877" width="0.5592%" height="15" fill="rgb(223,36,21)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1861" width="0.5592%" height="15" fill="rgb(207,123,46)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1845" width="0.5592%" height="15" fill="rgb(240,218,32)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1829" width="0.5592%" height="15" fill="rgb(252,5,43)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1839.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1813" width="0.5592%" height="15" fill="rgb(252,84,19)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1823.50"></text></g><g><title>benchmark::json_to_html_node::_{{closure}} (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1797" width="0.5592%" height="15" fill="rgb(243,152,39)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1807.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1781" width="0.5592%" height="15" fill="rgb(234,160,15)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1791.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1765" width="0.5592%" height="15" fill="rgb(237,34,20)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1775.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1749" width="0.5592%" height="15" fill="rgb(229,97,13)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1759.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1733" width="0.5592%" height="15" fill="rgb(234,71,50)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1717" width="0.5592%" height="15" fill="rgb(253,155,4)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1701" width="0.5592%" height="15" fill="rgb(222,185,37)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1685" width="0.5592%" height="15" fill="rgb(251,177,13)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1669" width="0.5592%" height="15" fill="rgb(250,179,40)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1653" width="0.5592%" height="15" fill="rgb(242,44,2)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1637" width="0.5592%" height="15" fill="rgb(216,177,13)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1621" width="0.5592%" height="15" fill="rgb(216,106,43)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1605" width="0.5592%" height="15" fill="rgb(216,183,2)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1589" width="0.5592%" height="15" fill="rgb(249,75,3)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1573" width="0.5592%" height="15" fill="rgb(219,67,39)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1557" width="0.5592%" height="15" fill="rgb(253,228,2)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1541" width="0.5592%" height="15" fill="rgb(235,138,27)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1551.50"></text></g><g><title>malloc (1,380,736 samples, 0.56%)</title><rect x="54.2918%" y="1525" width="0.5592%" height="15" fill="rgb(236,97,51)" fg:x="134046837" fg:w="1380736"/><text x="54.5418%" y="1535.50"></text></g><g><title>benchmark::json_to_html_node (2,334,496 samples, 0.95%)</title><rect x="54.2918%" y="2069" width="0.9455%" height="15" fill="rgb(240,80,30)" fg:x="134046837" fg:w="2334496"/><text x="54.5418%" y="2079.50"></text></g><g><title>benchmark::json_to_html_node (2,334,496 samples, 0.95%)</title><rect x="54.2918%" y="2053" width="0.9455%" height="15" fill="rgb(230,178,19)" fg:x="134046837" fg:w="2334496"/><text x="54.5418%" y="2063.50"></text></g><g><title>benchmark::json_to_html_node (2,334,496 samples, 0.95%)</title><rect x="54.2918%" y="2037" width="0.9455%" height="15" fill="rgb(210,190,27)" fg:x="134046837" fg:w="2334496"/><text x="54.5418%" y="2047.50"></text></g><g><title>benchmark::json_to_html_node (2,334,496 samples, 0.95%)</title><rect x="54.2918%" y="2021" width="0.9455%" height="15" fill="rgb(222,107,31)" fg:x="134046837" fg:w="2334496"/><text x="54.5418%" y="2031.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (953,760 samples, 0.39%)</title><rect x="54.8510%" y="2005" width="0.3863%" height="15" fill="rgb(216,127,34)" fg:x="135427573" fg:w="953760"/><text x="55.1010%" y="2015.50"></text></g><g><title>css_bitvector_compiler::BitVector::new (953,760 samples, 0.39%)</title><rect x="54.8510%" y="1989" width="0.3863%" height="15" fill="rgb(234,116,52)" fg:x="135427573" fg:w="953760"/><text x="55.1010%" y="1999.50"></text></g><g><title>alloc::vec::from_elem (953,760 samples, 0.39%)</title><rect x="54.8510%" y="1973" width="0.3863%" height="15" fill="rgb(222,124,15)" fg:x="135427573" fg:w="953760"/><text x="55.1010%" y="1983.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (953,760 samples, 0.39%)</title><rect x="54.8510%" y="1957" width="0.3863%" height="15" fill="rgb(231,179,28)" fg:x="135427573" fg:w="953760"/><text x="55.1010%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (953,760 samples, 0.39%)</title><rect x="54.8510%" y="1941" width="0.3863%" height="15" fill="rgb(226,93,45)" fg:x="135427573" fg:w="953760"/><text x="55.1010%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (953,760 samples, 0.39%)</title><rect x="54.8510%" y="1925" width="0.3863%" height="15" fill="rgb(215,8,51)" fg:x="135427573" fg:w="953760"/><text x="55.1010%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (953,760 samples, 0.39%)</title><rect x="54.8510%" y="1909" width="0.3863%" height="15" fill="rgb(223,106,5)" fg:x="135427573" fg:w="953760"/><text x="55.1010%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (953,760 samples, 0.39%)</title><rect x="54.8510%" y="1893" width="0.3863%" height="15" fill="rgb(250,191,5)" fg:x="135427573" fg:w="953760"/><text x="55.1010%" y="1903.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (953,760 samples, 0.39%)</title><rect x="54.8510%" y="1877" width="0.3863%" height="15" fill="rgb(242,132,44)" fg:x="135427573" fg:w="953760"/><text x="55.1010%" y="1887.50"></text></g><g><title>alloc::alloc::alloc_zeroed (953,760 samples, 0.39%)</title><rect x="54.8510%" y="1861" width="0.3863%" height="15" fill="rgb(251,152,29)" fg:x="135427573" fg:w="953760"/><text x="55.1010%" y="1871.50"></text></g><g><title>__libc_calloc (953,760 samples, 0.39%)</title><rect x="54.8510%" y="1845" width="0.3863%" height="15" fill="rgb(218,179,5)" fg:x="135427573" fg:w="953760"/><text x="55.1010%" y="1855.50"></text></g><g><title>[libc.so.6] (953,760 samples, 0.39%)</title><rect x="54.8510%" y="1829" width="0.3863%" height="15" fill="rgb(227,67,19)" fg:x="135427573" fg:w="953760"/><text x="55.1010%" y="1839.50"></text></g><g><title>benchmark::json_to_html_node (3,606,816 samples, 1.46%)</title><rect x="54.2918%" y="2085" width="1.4608%" height="15" fill="rgb(233,119,31)" fg:x="134046837" fg:w="3606816"/><text x="54.5418%" y="2095.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,272,320 samples, 0.52%)</title><rect x="55.2373%" y="2069" width="0.5153%" height="15" fill="rgb(241,120,22)" fg:x="136381333" fg:w="1272320"/><text x="55.4873%" y="2079.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,272,320 samples, 0.52%)</title><rect x="55.2373%" y="2053" width="0.5153%" height="15" fill="rgb(224,102,30)" fg:x="136381333" fg:w="1272320"/><text x="55.4873%" y="2063.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,272,320 samples, 0.52%)</title><rect x="55.2373%" y="2037" width="0.5153%" height="15" fill="rgb(210,164,37)" fg:x="136381333" fg:w="1272320"/><text x="55.4873%" y="2047.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,272,320 samples, 0.52%)</title><rect x="55.2373%" y="2021" width="0.5153%" height="15" fill="rgb(226,191,16)" fg:x="136381333" fg:w="1272320"/><text x="55.4873%" y="2031.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,272,320 samples, 0.52%)</title><rect x="55.2373%" y="2005" width="0.5153%" height="15" fill="rgb(214,40,45)" fg:x="136381333" fg:w="1272320"/><text x="55.4873%" y="2015.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,272,320 samples, 0.52%)</title><rect x="55.2373%" y="1989" width="0.5153%" height="15" fill="rgb(244,29,26)" fg:x="136381333" fg:w="1272320"/><text x="55.4873%" y="1999.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,272,320 samples, 0.52%)</title><rect x="55.2373%" y="1973" width="0.5153%" height="15" fill="rgb(216,16,5)" fg:x="136381333" fg:w="1272320"/><text x="55.4873%" y="1983.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,272,320 samples, 0.52%)</title><rect x="55.2373%" y="1957" width="0.5153%" height="15" fill="rgb(249,76,35)" fg:x="136381333" fg:w="1272320"/><text x="55.4873%" y="1967.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,272,320 samples, 0.52%)</title><rect x="55.2373%" y="1941" width="0.5153%" height="15" fill="rgb(207,11,44)" fg:x="136381333" fg:w="1272320"/><text x="55.4873%" y="1951.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,272,320 samples, 0.52%)</title><rect x="55.2373%" y="1925" width="0.5153%" height="15" fill="rgb(228,190,49)" fg:x="136381333" fg:w="1272320"/><text x="55.4873%" y="1935.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,272,320 samples, 0.52%)</title><rect x="55.2373%" y="1909" width="0.5153%" height="15" fill="rgb(214,173,12)" fg:x="136381333" fg:w="1272320"/><text x="55.4873%" y="1919.50"></text></g><g><title>[libc.so.6] (1,272,320 samples, 0.52%)</title><rect x="55.2373%" y="1893" width="0.5153%" height="15" fill="rgb(218,26,35)" fg:x="136381333" fg:w="1272320"/><text x="55.4873%" y="1903.50"></text></g><g><title>benchmark::apply_frame_modifications (7,252,836 samples, 2.94%)</title><rect x="53.3256%" y="2101" width="2.9376%" height="15" fill="rgb(220,200,19)" fg:x="131661288" fg:w="7252836"/><text x="53.5756%" y="2111.50">be..</text></g><g><title>serde_json::value::Value::get (1,260,471 samples, 0.51%)</title><rect x="55.7526%" y="2085" width="0.5105%" height="15" fill="rgb(239,95,49)" fg:x="137653653" fg:w="1260471"/><text x="56.0026%" y="2095.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,260,471 samples, 0.51%)</title><rect x="55.7526%" y="2069" width="0.5105%" height="15" fill="rgb(235,85,53)" fg:x="137653653" fg:w="1260471"/><text x="56.0026%" y="2079.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,260,471 samples, 0.51%)</title><rect x="55.7526%" y="2053" width="0.5105%" height="15" fill="rgb(233,133,31)" fg:x="137653653" fg:w="1260471"/><text x="56.0026%" y="2063.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,260,471 samples, 0.51%)</title><rect x="55.7526%" y="2037" width="0.5105%" height="15" fill="rgb(218,25,20)" fg:x="137653653" fg:w="1260471"/><text x="56.0026%" y="2047.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,260,471 samples, 0.51%)</title><rect x="55.7526%" y="2021" width="0.5105%" height="15" fill="rgb(252,210,38)" fg:x="137653653" fg:w="1260471"/><text x="56.0026%" y="2031.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,260,471 samples, 0.51%)</title><rect x="55.7526%" y="2005" width="0.5105%" height="15" fill="rgb(242,134,21)" fg:x="137653653" fg:w="1260471"/><text x="56.0026%" y="2015.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,260,471 samples, 0.51%)</title><rect x="55.7526%" y="1989" width="0.5105%" height="15" fill="rgb(213,28,48)" fg:x="137653653" fg:w="1260471"/><text x="56.0026%" y="1999.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,260,471 samples, 0.51%)</title><rect x="55.7526%" y="1973" width="0.5105%" height="15" fill="rgb(250,196,2)" fg:x="137653653" fg:w="1260471"/><text x="56.0026%" y="1983.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,260,471 samples, 0.51%)</title><rect x="55.7526%" y="1957" width="0.5105%" height="15" fill="rgb(227,5,17)" fg:x="137653653" fg:w="1260471"/><text x="56.0026%" y="1967.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,260,471 samples, 0.51%)</title><rect x="55.7526%" y="1941" width="0.5105%" height="15" fill="rgb(221,226,24)" fg:x="137653653" fg:w="1260471"/><text x="56.0026%" y="1951.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,260,471 samples, 0.51%)</title><rect x="55.7526%" y="1925" width="0.5105%" height="15" fill="rgb(211,5,48)" fg:x="137653653" fg:w="1260471"/><text x="56.0026%" y="1935.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (1,260,471 samples, 0.51%)</title><rect x="55.7526%" y="1909" width="0.5105%" height="15" fill="rgb(219,150,6)" fg:x="137653653" fg:w="1260471"/><text x="56.0026%" y="1919.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,361,367 samples, 0.55%)</title><rect x="56.7727%" y="1861" width="0.5514%" height="15" fill="rgb(251,46,16)" fg:x="140172212" fg:w="1361367"/><text x="57.0227%" y="1871.50"></text></g><g><title>benchmark::clear_dirty_flags (4,045,425 samples, 1.64%)</title><rect x="56.2631%" y="2101" width="1.6385%" height="15" fill="rgb(220,204,40)" fg:x="138914124" fg:w="4045425"/><text x="56.5131%" y="2111.50"></text></g><g><title>benchmark::clear_dirty_flags (4,045,425 samples, 1.64%)</title><rect x="56.2631%" y="2085" width="1.6385%" height="15" fill="rgb(211,85,2)" fg:x="138914124" fg:w="4045425"/><text x="56.5131%" y="2095.50"></text></g><g><title>benchmark::clear_dirty_flags (4,045,425 samples, 1.64%)</title><rect x="56.2631%" y="2069" width="1.6385%" height="15" fill="rgb(229,17,7)" fg:x="138914124" fg:w="4045425"/><text x="56.5131%" y="2079.50"></text></g><g><title>benchmark::clear_dirty_flags (4,045,425 samples, 1.64%)</title><rect x="56.2631%" y="2053" width="1.6385%" height="15" fill="rgb(239,72,28)" fg:x="138914124" fg:w="4045425"/><text x="56.5131%" y="2063.50"></text></g><g><title>benchmark::clear_dirty_flags (4,045,425 samples, 1.64%)</title><rect x="56.2631%" y="2037" width="1.6385%" height="15" fill="rgb(230,47,54)" fg:x="138914124" fg:w="4045425"/><text x="56.5131%" y="2047.50"></text></g><g><title>benchmark::clear_dirty_flags (4,045,425 samples, 1.64%)</title><rect x="56.2631%" y="2021" width="1.6385%" height="15" fill="rgb(214,50,8)" fg:x="138914124" fg:w="4045425"/><text x="56.5131%" y="2031.50"></text></g><g><title>benchmark::clear_dirty_flags (4,045,425 samples, 1.64%)</title><rect x="56.2631%" y="2005" width="1.6385%" height="15" fill="rgb(216,198,43)" fg:x="138914124" fg:w="4045425"/><text x="56.5131%" y="2015.50"></text></g><g><title>benchmark::clear_dirty_flags (2,787,337 samples, 1.13%)</title><rect x="56.7727%" y="1989" width="1.1289%" height="15" fill="rgb(234,20,35)" fg:x="140172212" fg:w="2787337"/><text x="57.0227%" y="1999.50"></text></g><g><title>benchmark::clear_dirty_flags (2,787,337 samples, 1.13%)</title><rect x="56.7727%" y="1973" width="1.1289%" height="15" fill="rgb(254,45,19)" fg:x="140172212" fg:w="2787337"/><text x="57.0227%" y="1983.50"></text></g><g><title>benchmark::clear_dirty_flags (2,787,337 samples, 1.13%)</title><rect x="56.7727%" y="1957" width="1.1289%" height="15" fill="rgb(219,14,44)" fg:x="140172212" fg:w="2787337"/><text x="57.0227%" y="1967.50"></text></g><g><title>benchmark::clear_dirty_flags (2,787,337 samples, 1.13%)</title><rect x="56.7727%" y="1941" width="1.1289%" height="15" fill="rgb(217,220,26)" fg:x="140172212" fg:w="2787337"/><text x="57.0227%" y="1951.50"></text></g><g><title>benchmark::clear_dirty_flags (2,787,337 samples, 1.13%)</title><rect x="56.7727%" y="1925" width="1.1289%" height="15" fill="rgb(213,158,28)" fg:x="140172212" fg:w="2787337"/><text x="57.0227%" y="1935.50"></text></g><g><title>benchmark::clear_dirty_flags (2,787,337 samples, 1.13%)</title><rect x="56.7727%" y="1909" width="1.1289%" height="15" fill="rgb(252,51,52)" fg:x="140172212" fg:w="2787337"/><text x="57.0227%" y="1919.50"></text></g><g><title>benchmark::clear_dirty_flags (2,787,337 samples, 1.13%)</title><rect x="56.7727%" y="1893" width="1.1289%" height="15" fill="rgb(246,89,16)" fg:x="140172212" fg:w="2787337"/><text x="57.0227%" y="1903.50"></text></g><g><title>benchmark::clear_dirty_flags (2,787,337 samples, 1.13%)</title><rect x="56.7727%" y="1877" width="1.1289%" height="15" fill="rgb(216,158,49)" fg:x="140172212" fg:w="2787337"/><text x="57.0227%" y="1887.50"></text></g><g><title>benchmark::clear_dirty_flags (1,425,970 samples, 0.58%)</title><rect x="57.3241%" y="1861" width="0.5775%" height="15" fill="rgb(236,107,19)" fg:x="141533579" fg:w="1425970"/><text x="57.5741%" y="1871.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,425,970 samples, 0.58%)</title><rect x="57.3241%" y="1845" width="0.5775%" height="15" fill="rgb(228,185,30)" fg:x="141533579" fg:w="1425970"/><text x="57.5741%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,407,783 samples, 0.57%)</title><rect x="58.4118%" y="517" width="0.5702%" height="15" fill="rgb(246,134,8)" fg:x="144219291" fg:w="1407783"/><text x="58.6618%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,407,783 samples, 0.57%)</title><rect x="58.4118%" y="501" width="0.5702%" height="15" fill="rgb(214,143,50)" fg:x="144219291" fg:w="1407783"/><text x="58.6618%" y="511.50"></text></g><g><title>benchmark::count_nodes (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="2101" width="1.6570%" height="15" fill="rgb(228,75,8)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="2111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="2085" width="1.6570%" height="15" fill="rgb(207,175,4)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="2095.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="2069" width="1.6570%" height="15" fill="rgb(205,108,24)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="2079.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="2053" width="1.6570%" height="15" fill="rgb(244,120,49)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="2063.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="2037" width="1.6570%" height="15" fill="rgb(223,47,38)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="2047.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="2021" width="1.6570%" height="15" fill="rgb(229,179,11)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="2031.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="2005" width="1.6570%" height="15" fill="rgb(231,122,1)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="2015.50"></text></g><g><title>benchmark::count_nodes (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1989" width="1.6570%" height="15" fill="rgb(245,119,9)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1999.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1973" width="1.6570%" height="15" fill="rgb(241,163,25)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1983.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1957" width="1.6570%" height="15" fill="rgb(217,214,3)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1967.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1941" width="1.6570%" height="15" fill="rgb(240,86,28)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1951.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1925" width="1.6570%" height="15" fill="rgb(215,47,9)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1935.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1909" width="1.6570%" height="15" fill="rgb(252,25,45)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1919.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1893" width="1.6570%" height="15" fill="rgb(251,164,9)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1903.50"></text></g><g><title>benchmark::count_nodes (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1877" width="1.6570%" height="15" fill="rgb(233,194,0)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1861" width="1.6570%" height="15" fill="rgb(249,111,24)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1871.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1845" width="1.6570%" height="15" fill="rgb(250,223,3)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1855.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1829" width="1.6570%" height="15" fill="rgb(236,178,37)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1839.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1813" width="1.6570%" height="15" fill="rgb(241,158,50)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1823.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1797" width="1.6570%" height="15" fill="rgb(213,121,41)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1807.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1781" width="1.6570%" height="15" fill="rgb(240,92,3)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1791.50"></text></g><g><title>benchmark::count_nodes (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1765" width="1.6570%" height="15" fill="rgb(205,123,3)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1749" width="1.6570%" height="15" fill="rgb(205,97,47)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1759.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1733" width="1.6570%" height="15" fill="rgb(247,152,14)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1717" width="1.6570%" height="15" fill="rgb(248,195,53)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1727.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1701" width="1.6570%" height="15" fill="rgb(226,201,16)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1711.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1685" width="1.6570%" height="15" fill="rgb(205,98,0)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1695.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1669" width="1.6570%" height="15" fill="rgb(214,191,48)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1679.50"></text></g><g><title>benchmark::count_nodes (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1653" width="1.6570%" height="15" fill="rgb(237,112,39)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1637" width="1.6570%" height="15" fill="rgb(247,203,27)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1647.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1621" width="1.6570%" height="15" fill="rgb(235,124,28)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1605" width="1.6570%" height="15" fill="rgb(208,207,46)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1615.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1589" width="1.6570%" height="15" fill="rgb(234,176,4)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1573" width="1.6570%" height="15" fill="rgb(230,133,28)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1583.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1557" width="1.6570%" height="15" fill="rgb(211,137,40)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1567.50"></text></g><g><title>benchmark::count_nodes (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1541" width="1.6570%" height="15" fill="rgb(254,35,13)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1525" width="1.6570%" height="15" fill="rgb(225,49,51)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1535.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1509" width="1.6570%" height="15" fill="rgb(251,10,15)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1493" width="1.6570%" height="15" fill="rgb(228,207,15)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1503.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1477" width="1.6570%" height="15" fill="rgb(241,99,19)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1487.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1461" width="1.6570%" height="15" fill="rgb(207,104,49)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1471.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1445" width="1.6570%" height="15" fill="rgb(234,99,18)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1455.50"></text></g><g><title>benchmark::count_nodes (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1429" width="1.6570%" height="15" fill="rgb(213,191,49)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1413" width="1.6570%" height="15" fill="rgb(210,226,19)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1423.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1397" width="1.6570%" height="15" fill="rgb(229,97,18)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1381" width="1.6570%" height="15" fill="rgb(211,167,15)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1391.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1365" width="1.6570%" height="15" fill="rgb(210,169,34)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1375.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1349" width="1.6570%" height="15" fill="rgb(241,121,31)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1359.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1333" width="1.6570%" height="15" fill="rgb(232,40,11)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1343.50"></text></g><g><title>benchmark::count_nodes (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1317" width="1.6570%" height="15" fill="rgb(205,86,26)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1301" width="1.6570%" height="15" fill="rgb(231,126,28)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1311.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1285" width="1.6570%" height="15" fill="rgb(219,221,18)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1269" width="1.6570%" height="15" fill="rgb(211,40,0)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1279.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1253" width="1.6570%" height="15" fill="rgb(239,85,43)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1263.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1237" width="1.6570%" height="15" fill="rgb(231,55,21)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1247.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1221" width="1.6570%" height="15" fill="rgb(225,184,43)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1231.50"></text></g><g><title>benchmark::count_nodes (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1205" width="1.6570%" height="15" fill="rgb(251,158,41)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1189" width="1.6570%" height="15" fill="rgb(234,159,37)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1199.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1173" width="1.6570%" height="15" fill="rgb(216,204,22)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1157" width="1.6570%" height="15" fill="rgb(214,17,3)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1141" width="1.6570%" height="15" fill="rgb(212,111,17)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1151.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1125" width="1.6570%" height="15" fill="rgb(221,157,24)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1135.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1109" width="1.6570%" height="15" fill="rgb(252,16,13)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1119.50"></text></g><g><title>benchmark::count_nodes (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1093" width="1.6570%" height="15" fill="rgb(221,62,2)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1077" width="1.6570%" height="15" fill="rgb(247,87,22)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1087.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1061" width="1.6570%" height="15" fill="rgb(215,73,9)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1045" width="1.6570%" height="15" fill="rgb(207,175,33)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1029" width="1.6570%" height="15" fill="rgb(243,129,54)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1039.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="1013" width="1.6570%" height="15" fill="rgb(227,119,45)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1023.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="997" width="1.6570%" height="15" fill="rgb(205,109,36)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="1007.50"></text></g><g><title>benchmark::count_nodes (4,091,078 samples, 1.66%)</title><rect x="57.9016%" y="981" width="1.6570%" height="15" fill="rgb(205,6,39)" fg:x="142959549" fg:w="4091078"/><text x="58.1516%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="965" width="1.1468%" height="15" fill="rgb(221,32,16)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="975.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="949" width="1.1468%" height="15" fill="rgb(228,144,50)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="933" width="1.1468%" height="15" fill="rgb(229,201,53)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="917" width="1.1468%" height="15" fill="rgb(249,153,27)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="901" width="1.1468%" height="15" fill="rgb(227,106,25)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="911.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="885" width="1.1468%" height="15" fill="rgb(230,65,29)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="895.50"></text></g><g><title>benchmark::count_nodes (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="869" width="1.1468%" height="15" fill="rgb(221,57,46)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="853" width="1.1468%" height="15" fill="rgb(229,161,17)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="863.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="837" width="1.1468%" height="15" fill="rgb(222,213,11)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="821" width="1.1468%" height="15" fill="rgb(235,35,13)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="805" width="1.1468%" height="15" fill="rgb(233,158,34)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="789" width="1.1468%" height="15" fill="rgb(215,151,48)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="799.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="773" width="1.1468%" height="15" fill="rgb(229,84,14)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="783.50"></text></g><g><title>benchmark::count_nodes (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="757" width="1.1468%" height="15" fill="rgb(229,68,14)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="741" width="1.1468%" height="15" fill="rgb(243,106,26)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="751.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="725" width="1.1468%" height="15" fill="rgb(206,45,38)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="709" width="1.1468%" height="15" fill="rgb(226,6,15)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="693" width="1.1468%" height="15" fill="rgb(232,22,54)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="677" width="1.1468%" height="15" fill="rgb(229,222,32)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="687.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="661" width="1.1468%" height="15" fill="rgb(228,62,29)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="671.50"></text></g><g><title>benchmark::count_nodes (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="645" width="1.1468%" height="15" fill="rgb(251,103,34)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="629" width="1.1468%" height="15" fill="rgb(233,12,30)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="639.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="613" width="1.1468%" height="15" fill="rgb(238,52,0)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="597" width="1.1468%" height="15" fill="rgb(223,98,5)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="581" width="1.1468%" height="15" fill="rgb(228,75,37)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="565" width="1.1468%" height="15" fill="rgb(205,115,49)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="575.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="549" width="1.1468%" height="15" fill="rgb(250,154,43)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="559.50"></text></g><g><title>benchmark::count_nodes (2,831,336 samples, 1.15%)</title><rect x="58.4118%" y="533" width="1.1468%" height="15" fill="rgb(226,43,29)" fg:x="144219291" fg:w="2831336"/><text x="58.6618%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,423,553 samples, 0.58%)</title><rect x="58.9820%" y="517" width="0.5766%" height="15" fill="rgb(249,228,39)" fg:x="145627074" fg:w="1423553"/><text x="59.2320%" y="527.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,423,553 samples, 0.58%)</title><rect x="58.9820%" y="501" width="0.5766%" height="15" fill="rgb(216,79,43)" fg:x="145627074" fg:w="1423553"/><text x="59.2320%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,423,553 samples, 0.58%)</title><rect x="58.9820%" y="485" width="0.5766%" height="15" fill="rgb(228,95,12)" fg:x="145627074" fg:w="1423553"/><text x="59.2320%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,423,553 samples, 0.58%)</title><rect x="58.9820%" y="469" width="0.5766%" height="15" fill="rgb(249,221,15)" fg:x="145627074" fg:w="1423553"/><text x="59.2320%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,423,553 samples, 0.58%)</title><rect x="58.9820%" y="453" width="0.5766%" height="15" fill="rgb(233,34,13)" fg:x="145627074" fg:w="1423553"/><text x="59.2320%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,423,553 samples, 0.58%)</title><rect x="58.9820%" y="437" width="0.5766%" height="15" fill="rgb(214,103,39)" fg:x="145627074" fg:w="1423553"/><text x="59.2320%" y="447.50"></text></g><g><title>benchmark::count_nodes (1,423,553 samples, 0.58%)</title><rect x="58.9820%" y="421" width="0.5766%" height="15" fill="rgb(251,126,39)" fg:x="145627074" fg:w="1423553"/><text x="59.2320%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,423,553 samples, 0.58%)</title><rect x="58.9820%" y="405" width="0.5766%" height="15" fill="rgb(214,216,36)" fg:x="145627074" fg:w="1423553"/><text x="59.2320%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,423,553 samples, 0.58%)</title><rect x="58.9820%" y="389" width="0.5766%" height="15" fill="rgb(220,221,8)" fg:x="145627074" fg:w="1423553"/><text x="59.2320%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,225,791 samples, 0.50%)</title><rect x="59.5586%" y="1829" width="0.4965%" height="15" fill="rgb(240,216,3)" fg:x="147050627" fg:w="1225791"/><text x="59.8086%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,225,791 samples, 0.50%)</title><rect x="59.5586%" y="1813" width="0.4965%" height="15" fill="rgb(232,218,17)" fg:x="147050627" fg:w="1225791"/><text x="59.8086%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,225,791 samples, 0.50%)</title><rect x="59.5586%" y="1797" width="0.4965%" height="15" fill="rgb(229,163,45)" fg:x="147050627" fg:w="1225791"/><text x="59.8086%" y="1807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,225,791 samples, 0.50%)</title><rect x="59.5586%" y="1781" width="0.4965%" height="15" fill="rgb(231,110,42)" fg:x="147050627" fg:w="1225791"/><text x="59.8086%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,225,791 samples, 0.50%)</title><rect x="59.5586%" y="1765" width="0.4965%" height="15" fill="rgb(208,170,48)" fg:x="147050627" fg:w="1225791"/><text x="59.8086%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,225,791 samples, 0.50%)</title><rect x="59.5586%" y="1749" width="0.4965%" height="15" fill="rgb(239,116,25)" fg:x="147050627" fg:w="1225791"/><text x="59.8086%" y="1759.50"></text></g><g><title>alloc::alloc::dealloc (1,225,791 samples, 0.50%)</title><rect x="59.5586%" y="1733" width="0.4965%" height="15" fill="rgb(219,200,50)" fg:x="147050627" fg:w="1225791"/><text x="59.8086%" y="1743.50"></text></g><g><title>cfree (1,225,791 samples, 0.50%)</title><rect x="59.5586%" y="1717" width="0.4965%" height="15" fill="rgb(245,200,0)" fg:x="147050627" fg:w="1225791"/><text x="59.8086%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,263,805 samples, 0.51%)</title><rect x="60.0551%" y="1701" width="0.5119%" height="15" fill="rgb(245,119,33)" fg:x="148276418" fg:w="1263805"/><text x="60.3051%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,263,805 samples, 0.51%)</title><rect x="60.0551%" y="1685" width="0.5119%" height="15" fill="rgb(231,125,12)" fg:x="148276418" fg:w="1263805"/><text x="60.3051%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,263,805 samples, 0.51%)</title><rect x="60.0551%" y="1669" width="0.5119%" height="15" fill="rgb(216,96,41)" fg:x="148276418" fg:w="1263805"/><text x="60.3051%" y="1679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,263,805 samples, 0.51%)</title><rect x="60.0551%" y="1653" width="0.5119%" height="15" fill="rgb(248,43,45)" fg:x="148276418" fg:w="1263805"/><text x="60.3051%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,263,805 samples, 0.51%)</title><rect x="60.0551%" y="1637" width="0.5119%" height="15" fill="rgb(217,222,7)" fg:x="148276418" fg:w="1263805"/><text x="60.3051%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,263,805 samples, 0.51%)</title><rect x="60.0551%" y="1621" width="0.5119%" height="15" fill="rgb(233,28,6)" fg:x="148276418" fg:w="1263805"/><text x="60.3051%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (1,263,805 samples, 0.51%)</title><rect x="60.0551%" y="1605" width="0.5119%" height="15" fill="rgb(231,218,15)" fg:x="148276418" fg:w="1263805"/><text x="60.3051%" y="1615.50"></text></g><g><title>cfree (1,263,805 samples, 0.51%)</title><rect x="60.0551%" y="1589" width="0.5119%" height="15" fill="rgb(226,171,48)" fg:x="148276418" fg:w="1263805"/><text x="60.3051%" y="1599.50"></text></g><g><title>[libc.so.6] (1,263,805 samples, 0.51%)</title><rect x="60.0551%" y="1573" width="0.5119%" height="15" fill="rgb(235,201,9)" fg:x="148276418" fg:w="1263805"/><text x="60.3051%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,262,365 samples, 0.51%)</title><rect x="60.5669%" y="1253" width="0.5113%" height="15" fill="rgb(217,80,15)" fg:x="149540223" fg:w="1262365"/><text x="60.8169%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,262,365 samples, 0.51%)</title><rect x="60.5669%" y="1237" width="0.5113%" height="15" fill="rgb(219,152,8)" fg:x="149540223" fg:w="1262365"/><text x="60.8169%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,262,365 samples, 0.51%)</title><rect x="60.5669%" y="1221" width="0.5113%" height="15" fill="rgb(243,107,38)" fg:x="149540223" fg:w="1262365"/><text x="60.8169%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,262,365 samples, 0.51%)</title><rect x="60.5669%" y="1205" width="0.5113%" height="15" fill="rgb(231,17,5)" fg:x="149540223" fg:w="1262365"/><text x="60.8169%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,262,365 samples, 0.51%)</title><rect x="60.5669%" y="1189" width="0.5113%" height="15" fill="rgb(209,25,54)" fg:x="149540223" fg:w="1262365"/><text x="60.8169%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,262,365 samples, 0.51%)</title><rect x="60.5669%" y="1173" width="0.5113%" height="15" fill="rgb(219,0,2)" fg:x="149540223" fg:w="1262365"/><text x="60.8169%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (1,262,365 samples, 0.51%)</title><rect x="60.5669%" y="1157" width="0.5113%" height="15" fill="rgb(246,9,5)" fg:x="149540223" fg:w="1262365"/><text x="60.8169%" y="1167.50"></text></g><g><title>cfree (1,262,365 samples, 0.51%)</title><rect x="60.5669%" y="1141" width="0.5113%" height="15" fill="rgb(226,159,4)" fg:x="149540223" fg:w="1262365"/><text x="60.8169%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,307,767 samples, 0.53%)</title><rect x="61.0782%" y="1189" width="0.5297%" height="15" fill="rgb(219,175,34)" fg:x="150802588" fg:w="1307767"/><text x="61.3282%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,307,767 samples, 0.53%)</title><rect x="61.0782%" y="1173" width="0.5297%" height="15" fill="rgb(236,10,46)" fg:x="150802588" fg:w="1307767"/><text x="61.3282%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,307,767 samples, 0.53%)</title><rect x="61.0782%" y="1157" width="0.5297%" height="15" fill="rgb(240,211,16)" fg:x="150802588" fg:w="1307767"/><text x="61.3282%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,307,767 samples, 0.53%)</title><rect x="61.0782%" y="1141" width="0.5297%" height="15" fill="rgb(205,3,43)" fg:x="150802588" fg:w="1307767"/><text x="61.3282%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,307,767 samples, 0.53%)</title><rect x="61.0782%" y="1125" width="0.5297%" height="15" fill="rgb(245,7,22)" fg:x="150802588" fg:w="1307767"/><text x="61.3282%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,307,767 samples, 0.53%)</title><rect x="61.0782%" y="1109" width="0.5297%" height="15" fill="rgb(239,132,32)" fg:x="150802588" fg:w="1307767"/><text x="61.3282%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (1,307,767 samples, 0.53%)</title><rect x="61.0782%" y="1093" width="0.5297%" height="15" fill="rgb(228,202,34)" fg:x="150802588" fg:w="1307767"/><text x="61.3282%" y="1103.50"></text></g><g><title>cfree (1,307,767 samples, 0.53%)</title><rect x="61.0782%" y="1077" width="0.5297%" height="15" fill="rgb(254,200,22)" fg:x="150802588" fg:w="1307767"/><text x="61.3282%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="981" width="0.5510%" height="15" fill="rgb(219,10,39)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="965" width="0.5510%" height="15" fill="rgb(226,210,39)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="949" width="0.5510%" height="15" fill="rgb(208,219,16)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="933" width="0.5510%" height="15" fill="rgb(216,158,51)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="917" width="0.5510%" height="15" fill="rgb(233,14,44)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="901" width="0.5510%" height="15" fill="rgb(237,97,39)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="885" width="0.5510%" height="15" fill="rgb(218,198,43)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="869" width="0.5510%" height="15" fill="rgb(231,104,20)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="853" width="0.5510%" height="15" fill="rgb(254,36,13)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="837" width="0.5510%" height="15" fill="rgb(248,14,50)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="821" width="0.5510%" height="15" fill="rgb(217,107,29)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="805" width="0.5510%" height="15" fill="rgb(251,169,33)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="789" width="0.5510%" height="15" fill="rgb(217,108,32)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="773" width="0.5510%" height="15" fill="rgb(219,66,42)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="783.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="757" width="0.5510%" height="15" fill="rgb(206,180,7)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="741" width="0.5510%" height="15" fill="rgb(208,226,31)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="725" width="0.5510%" height="15" fill="rgb(218,26,49)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="709" width="0.5510%" height="15" fill="rgb(233,197,48)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="693" width="0.5510%" height="15" fill="rgb(252,181,51)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="677" width="0.5510%" height="15" fill="rgb(253,90,19)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="661" width="0.5510%" height="15" fill="rgb(215,171,30)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="645" width="0.5510%" height="15" fill="rgb(214,222,9)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="629" width="0.5510%" height="15" fill="rgb(223,3,22)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="613" width="0.5510%" height="15" fill="rgb(225,196,46)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="623.50"></text></g><g><title>cfree (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="597" width="0.5510%" height="15" fill="rgb(209,110,37)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="607.50"></text></g><g><title>[libc.so.6] (1,360,536 samples, 0.55%)</title><rect x="61.6079%" y="581" width="0.5510%" height="15" fill="rgb(249,89,12)" fg:x="152110355" fg:w="1360536"/><text x="61.8579%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,741,431 samples, 1.11%)</title><rect x="61.6079%" y="1061" width="1.1103%" height="15" fill="rgb(226,27,33)" fg:x="152110355" fg:w="2741431"/><text x="61.8579%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,741,431 samples, 1.11%)</title><rect x="61.6079%" y="1045" width="1.1103%" height="15" fill="rgb(213,82,22)" fg:x="152110355" fg:w="2741431"/><text x="61.8579%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,741,431 samples, 1.11%)</title><rect x="61.6079%" y="1029" width="1.1103%" height="15" fill="rgb(248,140,0)" fg:x="152110355" fg:w="2741431"/><text x="61.8579%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,741,431 samples, 1.11%)</title><rect x="61.6079%" y="1013" width="1.1103%" height="15" fill="rgb(228,106,3)" fg:x="152110355" fg:w="2741431"/><text x="61.8579%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,741,431 samples, 1.11%)</title><rect x="61.6079%" y="997" width="1.1103%" height="15" fill="rgb(209,23,37)" fg:x="152110355" fg:w="2741431"/><text x="61.8579%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,380,895 samples, 0.56%)</title><rect x="62.1589%" y="981" width="0.5593%" height="15" fill="rgb(241,93,50)" fg:x="153470891" fg:w="1380895"/><text x="62.4089%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,380,895 samples, 0.56%)</title><rect x="62.1589%" y="965" width="0.5593%" height="15" fill="rgb(253,46,43)" fg:x="153470891" fg:w="1380895"/><text x="62.4089%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,380,895 samples, 0.56%)</title><rect x="62.1589%" y="949" width="0.5593%" height="15" fill="rgb(226,206,43)" fg:x="153470891" fg:w="1380895"/><text x="62.4089%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,380,895 samples, 0.56%)</title><rect x="62.1589%" y="933" width="0.5593%" height="15" fill="rgb(217,54,7)" fg:x="153470891" fg:w="1380895"/><text x="62.4089%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (1,380,895 samples, 0.56%)</title><rect x="62.1589%" y="917" width="0.5593%" height="15" fill="rgb(223,5,52)" fg:x="153470891" fg:w="1380895"/><text x="62.4089%" y="927.50"></text></g><g><title>cfree (1,380,895 samples, 0.56%)</title><rect x="62.1589%" y="901" width="0.5593%" height="15" fill="rgb(206,52,46)" fg:x="153470891" fg:w="1380895"/><text x="62.4089%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,309,976 samples, 2.15%)</title><rect x="61.0782%" y="1237" width="2.1507%" height="15" fill="rgb(253,136,11)" fg:x="150802588" fg:w="5309976"/><text x="61.3282%" y="1247.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,309,976 samples, 2.15%)</title><rect x="61.0782%" y="1221" width="2.1507%" height="15" fill="rgb(208,106,33)" fg:x="150802588" fg:w="5309976"/><text x="61.3282%" y="1231.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,309,976 samples, 2.15%)</title><rect x="61.0782%" y="1205" width="2.1507%" height="15" fill="rgb(206,54,4)" fg:x="150802588" fg:w="5309976"/><text x="61.3282%" y="1215.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (4,002,209 samples, 1.62%)</title><rect x="61.6079%" y="1189" width="1.6210%" height="15" fill="rgb(213,3,15)" fg:x="152110355" fg:w="4002209"/><text x="61.8579%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,002,209 samples, 1.62%)</title><rect x="61.6079%" y="1173" width="1.6210%" height="15" fill="rgb(252,211,39)" fg:x="152110355" fg:w="4002209"/><text x="61.8579%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (4,002,209 samples, 1.62%)</title><rect x="61.6079%" y="1157" width="1.6210%" height="15" fill="rgb(223,6,36)" fg:x="152110355" fg:w="4002209"/><text x="61.8579%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (4,002,209 samples, 1.62%)</title><rect x="61.6079%" y="1141" width="1.6210%" height="15" fill="rgb(252,169,45)" fg:x="152110355" fg:w="4002209"/><text x="61.8579%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (4,002,209 samples, 1.62%)</title><rect x="61.6079%" y="1125" width="1.6210%" height="15" fill="rgb(212,48,26)" fg:x="152110355" fg:w="4002209"/><text x="61.8579%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,002,209 samples, 1.62%)</title><rect x="61.6079%" y="1109" width="1.6210%" height="15" fill="rgb(251,102,48)" fg:x="152110355" fg:w="4002209"/><text x="61.8579%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (4,002,209 samples, 1.62%)</title><rect x="61.6079%" y="1093" width="1.6210%" height="15" fill="rgb(243,208,16)" fg:x="152110355" fg:w="4002209"/><text x="61.8579%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (4,002,209 samples, 1.62%)</title><rect x="61.6079%" y="1077" width="1.6210%" height="15" fill="rgb(219,96,24)" fg:x="152110355" fg:w="4002209"/><text x="61.8579%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,260,778 samples, 0.51%)</title><rect x="62.7182%" y="1061" width="0.5106%" height="15" fill="rgb(219,33,29)" fg:x="154851786" fg:w="1260778"/><text x="62.9682%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,260,778 samples, 0.51%)</title><rect x="62.7182%" y="1045" width="0.5106%" height="15" fill="rgb(223,176,5)" fg:x="154851786" fg:w="1260778"/><text x="62.9682%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,260,778 samples, 0.51%)</title><rect x="62.7182%" y="1029" width="0.5106%" height="15" fill="rgb(228,140,14)" fg:x="154851786" fg:w="1260778"/><text x="62.9682%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,260,778 samples, 0.51%)</title><rect x="62.7182%" y="1013" width="0.5106%" height="15" fill="rgb(217,179,31)" fg:x="154851786" fg:w="1260778"/><text x="62.9682%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,778 samples, 0.51%)</title><rect x="62.7182%" y="997" width="0.5106%" height="15" fill="rgb(230,9,30)" fg:x="154851786" fg:w="1260778"/><text x="62.9682%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,260,778 samples, 0.51%)</title><rect x="62.7182%" y="981" width="0.5106%" height="15" fill="rgb(230,136,20)" fg:x="154851786" fg:w="1260778"/><text x="62.9682%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,260,778 samples, 0.51%)</title><rect x="62.7182%" y="965" width="0.5106%" height="15" fill="rgb(215,210,22)" fg:x="154851786" fg:w="1260778"/><text x="62.9682%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,260,778 samples, 0.51%)</title><rect x="62.7182%" y="949" width="0.5106%" height="15" fill="rgb(218,43,5)" fg:x="154851786" fg:w="1260778"/><text x="62.9682%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,260,778 samples, 0.51%)</title><rect x="62.7182%" y="933" width="0.5106%" height="15" fill="rgb(216,11,5)" fg:x="154851786" fg:w="1260778"/><text x="62.9682%" y="943.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (1,260,778 samples, 0.51%)</title><rect x="62.7182%" y="917" width="0.5106%" height="15" fill="rgb(209,82,29)" fg:x="154851786" fg:w="1260778"/><text x="62.9682%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1,260,778 samples, 0.51%)</title><rect x="62.7182%" y="901" width="0.5106%" height="15" fill="rgb(244,115,12)" fg:x="154851786" fg:w="1260778"/><text x="62.9682%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,745,340 samples, 2.73%)</title><rect x="61.0782%" y="1253" width="2.7320%" height="15" fill="rgb(222,82,18)" fg:x="150802588" fg:w="6745340"/><text x="61.3282%" y="1263.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,435,364 samples, 0.58%)</title><rect x="63.2289%" y="1237" width="0.5814%" height="15" fill="rgb(249,227,8)" fg:x="156112564" fg:w="1435364"/><text x="63.4789%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,435,364 samples, 0.58%)</title><rect x="63.2289%" y="1221" width="0.5814%" height="15" fill="rgb(253,141,45)" fg:x="156112564" fg:w="1435364"/><text x="63.4789%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,435,364 samples, 0.58%)</title><rect x="63.2289%" y="1205" width="0.5814%" height="15" fill="rgb(234,184,4)" fg:x="156112564" fg:w="1435364"/><text x="63.4789%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,435,364 samples, 0.58%)</title><rect x="63.2289%" y="1189" width="0.5814%" height="15" fill="rgb(218,194,23)" fg:x="156112564" fg:w="1435364"/><text x="63.4789%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (1,435,364 samples, 0.58%)</title><rect x="63.2289%" y="1173" width="0.5814%" height="15" fill="rgb(235,66,41)" fg:x="156112564" fg:w="1435364"/><text x="63.4789%" y="1183.50"></text></g><g><title>cfree (1,435,364 samples, 0.58%)</title><rect x="63.2289%" y="1157" width="0.5814%" height="15" fill="rgb(245,217,1)" fg:x="156112564" fg:w="1435364"/><text x="63.4789%" y="1167.50"></text></g><g><title>[libc.so.6] (1,435,364 samples, 0.58%)</title><rect x="63.2289%" y="1141" width="0.5814%" height="15" fill="rgb(229,91,1)" fg:x="156112564" fg:w="1435364"/><text x="63.4789%" y="1151.50"></text></g><g><title>[libc.so.6] (1,435,364 samples, 0.58%)</title><rect x="63.2289%" y="1125" width="0.5814%" height="15" fill="rgb(207,101,30)" fg:x="156112564" fg:w="1435364"/><text x="63.4789%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,275,948 samples, 3.76%)</title><rect x="60.5669%" y="1445" width="3.7570%" height="15" fill="rgb(223,82,49)" fg:x="149540223" fg:w="9275948"/><text x="60.8169%" y="1455.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,275,948 samples, 3.76%)</title><rect x="60.5669%" y="1429" width="3.7570%" height="15" fill="rgb(218,167,17)" fg:x="149540223" fg:w="9275948"/><text x="60.8169%" y="1439.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,275,948 samples, 3.76%)</title><rect x="60.5669%" y="1413" width="3.7570%" height="15" fill="rgb(208,103,14)" fg:x="149540223" fg:w="9275948"/><text x="60.8169%" y="1423.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,275,948 samples, 3.76%)</title><rect x="60.5669%" y="1397" width="3.7570%" height="15" fill="rgb(238,20,8)" fg:x="149540223" fg:w="9275948"/><text x="60.8169%" y="1407.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,275,948 samples, 3.76%)</title><rect x="60.5669%" y="1381" width="3.7570%" height="15" fill="rgb(218,80,54)" fg:x="149540223" fg:w="9275948"/><text x="60.8169%" y="1391.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,275,948 samples, 3.76%)</title><rect x="60.5669%" y="1365" width="3.7570%" height="15" fill="rgb(240,144,17)" fg:x="149540223" fg:w="9275948"/><text x="60.8169%" y="1375.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,275,948 samples, 3.76%)</title><rect x="60.5669%" y="1349" width="3.7570%" height="15" fill="rgb(245,27,50)" fg:x="149540223" fg:w="9275948"/><text x="60.8169%" y="1359.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,275,948 samples, 3.76%)</title><rect x="60.5669%" y="1333" width="3.7570%" height="15" fill="rgb(251,51,7)" fg:x="149540223" fg:w="9275948"/><text x="60.8169%" y="1343.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,275,948 samples, 3.76%)</title><rect x="60.5669%" y="1317" width="3.7570%" height="15" fill="rgb(245,217,29)" fg:x="149540223" fg:w="9275948"/><text x="60.8169%" y="1327.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,275,948 samples, 3.76%)</title><rect x="60.5669%" y="1301" width="3.7570%" height="15" fill="rgb(221,176,29)" fg:x="149540223" fg:w="9275948"/><text x="60.8169%" y="1311.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,275,948 samples, 3.76%)</title><rect x="60.5669%" y="1285" width="3.7570%" height="15" fill="rgb(212,180,24)" fg:x="149540223" fg:w="9275948"/><text x="60.8169%" y="1295.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,275,948 samples, 3.76%)</title><rect x="60.5669%" y="1269" width="3.7570%" height="15" fill="rgb(254,24,2)" fg:x="149540223" fg:w="9275948"/><text x="60.8169%" y="1279.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,268,243 samples, 0.51%)</title><rect x="63.8102%" y="1253" width="0.5137%" height="15" fill="rgb(230,100,2)" fg:x="157547928" fg:w="1268243"/><text x="64.0602%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,268,243 samples, 0.51%)</title><rect x="63.8102%" y="1237" width="0.5137%" height="15" fill="rgb(219,142,25)" fg:x="157547928" fg:w="1268243"/><text x="64.0602%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,268,243 samples, 0.51%)</title><rect x="63.8102%" y="1221" width="0.5137%" height="15" fill="rgb(240,73,43)" fg:x="157547928" fg:w="1268243"/><text x="64.0602%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,268,243 samples, 0.51%)</title><rect x="63.8102%" y="1205" width="0.5137%" height="15" fill="rgb(214,114,15)" fg:x="157547928" fg:w="1268243"/><text x="64.0602%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,268,243 samples, 0.51%)</title><rect x="63.8102%" y="1189" width="0.5137%" height="15" fill="rgb(207,130,4)" fg:x="157547928" fg:w="1268243"/><text x="64.0602%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,268,243 samples, 0.51%)</title><rect x="63.8102%" y="1173" width="0.5137%" height="15" fill="rgb(221,25,40)" fg:x="157547928" fg:w="1268243"/><text x="64.0602%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (1,268,243 samples, 0.51%)</title><rect x="63.8102%" y="1157" width="0.5137%" height="15" fill="rgb(241,184,7)" fg:x="157547928" fg:w="1268243"/><text x="64.0602%" y="1167.50"></text></g><g><title>__rust_dealloc (1,268,243 samples, 0.51%)</title><rect x="63.8102%" y="1141" width="0.5137%" height="15" fill="rgb(235,159,4)" fg:x="157547928" fg:w="1268243"/><text x="64.0602%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,398,455 samples, 0.57%)</title><rect x="64.3239%" y="1445" width="0.5664%" height="15" fill="rgb(214,87,48)" fg:x="158816171" fg:w="1398455"/><text x="64.5739%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,398,455 samples, 0.57%)</title><rect x="64.3239%" y="1429" width="0.5664%" height="15" fill="rgb(246,198,24)" fg:x="158816171" fg:w="1398455"/><text x="64.5739%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,398,455 samples, 0.57%)</title><rect x="64.3239%" y="1413" width="0.5664%" height="15" fill="rgb(209,66,40)" fg:x="158816171" fg:w="1398455"/><text x="64.5739%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,398,455 samples, 0.57%)</title><rect x="64.3239%" y="1397" width="0.5664%" height="15" fill="rgb(233,147,39)" fg:x="158816171" fg:w="1398455"/><text x="64.5739%" y="1407.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,398,455 samples, 0.57%)</title><rect x="64.3239%" y="1381" width="0.5664%" height="15" fill="rgb(231,145,52)" fg:x="158816171" fg:w="1398455"/><text x="64.5739%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,398,455 samples, 0.57%)</title><rect x="64.3239%" y="1365" width="0.5664%" height="15" fill="rgb(206,20,26)" fg:x="158816171" fg:w="1398455"/><text x="64.5739%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,398,455 samples, 0.57%)</title><rect x="64.3239%" y="1349" width="0.5664%" height="15" fill="rgb(238,220,4)" fg:x="158816171" fg:w="1398455"/><text x="64.5739%" y="1359.50"></text></g><g><title>alloc::alloc::dealloc (1,398,455 samples, 0.57%)</title><rect x="64.3239%" y="1333" width="0.5664%" height="15" fill="rgb(252,195,42)" fg:x="158816171" fg:w="1398455"/><text x="64.5739%" y="1343.50"></text></g><g><title>cfree (1,398,455 samples, 0.57%)</title><rect x="64.3239%" y="1317" width="0.5664%" height="15" fill="rgb(209,10,6)" fg:x="158816171" fg:w="1398455"/><text x="64.5739%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (11,931,570 samples, 4.83%)</title><rect x="60.5669%" y="1509" width="4.8325%" height="15" fill="rgb(229,3,52)" fg:x="149540223" fg:w="11931570"/><text x="60.8169%" y="1519.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,931,570 samples, 4.83%)</title><rect x="60.5669%" y="1493" width="4.8325%" height="15" fill="rgb(253,49,37)" fg:x="149540223" fg:w="11931570"/><text x="60.8169%" y="1503.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (11,931,570 samples, 4.83%)</title><rect x="60.5669%" y="1477" width="4.8325%" height="15" fill="rgb(240,103,49)" fg:x="149540223" fg:w="11931570"/><text x="60.8169%" y="1487.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (11,931,570 samples, 4.83%)</title><rect x="60.5669%" y="1461" width="4.8325%" height="15" fill="rgb(250,182,30)" fg:x="149540223" fg:w="11931570"/><text x="60.8169%" y="1471.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,257,167 samples, 0.51%)</title><rect x="64.8903%" y="1445" width="0.5092%" height="15" fill="rgb(248,8,30)" fg:x="160214626" fg:w="1257167"/><text x="65.1403%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,257,167 samples, 0.51%)</title><rect x="64.8903%" y="1429" width="0.5092%" height="15" fill="rgb(237,120,30)" fg:x="160214626" fg:w="1257167"/><text x="65.1403%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,257,167 samples, 0.51%)</title><rect x="64.8903%" y="1413" width="0.5092%" height="15" fill="rgb(221,146,34)" fg:x="160214626" fg:w="1257167"/><text x="65.1403%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,257,167 samples, 0.51%)</title><rect x="64.8903%" y="1397" width="0.5092%" height="15" fill="rgb(242,55,13)" fg:x="160214626" fg:w="1257167"/><text x="65.1403%" y="1407.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,167 samples, 0.51%)</title><rect x="64.8903%" y="1381" width="0.5092%" height="15" fill="rgb(242,112,31)" fg:x="160214626" fg:w="1257167"/><text x="65.1403%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,257,167 samples, 0.51%)</title><rect x="64.8903%" y="1365" width="0.5092%" height="15" fill="rgb(249,192,27)" fg:x="160214626" fg:w="1257167"/><text x="65.1403%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,257,167 samples, 0.51%)</title><rect x="64.8903%" y="1349" width="0.5092%" height="15" fill="rgb(208,204,44)" fg:x="160214626" fg:w="1257167"/><text x="65.1403%" y="1359.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,257,167 samples, 0.51%)</title><rect x="64.8903%" y="1333" width="0.5092%" height="15" fill="rgb(208,93,54)" fg:x="160214626" fg:w="1257167"/><text x="65.1403%" y="1343.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,257,167 samples, 0.51%)</title><rect x="64.8903%" y="1317" width="0.5092%" height="15" fill="rgb(242,1,31)" fg:x="160214626" fg:w="1257167"/><text x="65.1403%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,257,167 samples, 0.51%)</title><rect x="64.8903%" y="1301" width="0.5092%" height="15" fill="rgb(241,83,25)" fg:x="160214626" fg:w="1257167"/><text x="65.1403%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,257,167 samples, 0.51%)</title><rect x="64.8903%" y="1285" width="0.5092%" height="15" fill="rgb(205,169,50)" fg:x="160214626" fg:w="1257167"/><text x="65.1403%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,257,167 samples, 0.51%)</title><rect x="64.8903%" y="1269" width="0.5092%" height="15" fill="rgb(239,186,37)" fg:x="160214626" fg:w="1257167"/><text x="65.1403%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,257,167 samples, 0.51%)</title><rect x="64.8903%" y="1253" width="0.5092%" height="15" fill="rgb(205,221,10)" fg:x="160214626" fg:w="1257167"/><text x="65.1403%" y="1263.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,167 samples, 0.51%)</title><rect x="64.8903%" y="1237" width="0.5092%" height="15" fill="rgb(218,196,15)" fg:x="160214626" fg:w="1257167"/><text x="65.1403%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,594,721 samples, 5.91%)</title><rect x="60.5669%" y="1621" width="5.9112%" height="15" fill="rgb(218,196,35)" fg:x="149540223" fg:w="14594721"/><text x="60.8169%" y="1631.50">&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (14,594,721 samples, 5.91%)</title><rect x="60.5669%" y="1605" width="5.9112%" height="15" fill="rgb(233,63,24)" fg:x="149540223" fg:w="14594721"/><text x="60.8169%" y="1615.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (14,594,721 samples, 5.91%)</title><rect x="60.5669%" y="1589" width="5.9112%" height="15" fill="rgb(225,8,4)" fg:x="149540223" fg:w="14594721"/><text x="60.8169%" y="1599.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (14,594,721 samples, 5.91%)</title><rect x="60.5669%" y="1573" width="5.9112%" height="15" fill="rgb(234,105,35)" fg:x="149540223" fg:w="14594721"/><text x="60.8169%" y="1583.50">core::pt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,594,721 samples, 5.91%)</title><rect x="60.5669%" y="1557" width="5.9112%" height="15" fill="rgb(236,21,32)" fg:x="149540223" fg:w="14594721"/><text x="60.8169%" y="1567.50">&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (14,594,721 samples, 5.91%)</title><rect x="60.5669%" y="1541" width="5.9112%" height="15" fill="rgb(228,109,6)" fg:x="149540223" fg:w="14594721"/><text x="60.8169%" y="1551.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (14,594,721 samples, 5.91%)</title><rect x="60.5669%" y="1525" width="5.9112%" height="15" fill="rgb(229,215,31)" fg:x="149540223" fg:w="14594721"/><text x="60.8169%" y="1535.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,663,151 samples, 1.08%)</title><rect x="65.3995%" y="1509" width="1.0786%" height="15" fill="rgb(221,52,54)" fg:x="161471793" fg:w="2663151"/><text x="65.6495%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,663,151 samples, 1.08%)</title><rect x="65.3995%" y="1493" width="1.0786%" height="15" fill="rgb(252,129,43)" fg:x="161471793" fg:w="2663151"/><text x="65.6495%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,663,151 samples, 1.08%)</title><rect x="65.3995%" y="1477" width="1.0786%" height="15" fill="rgb(248,183,27)" fg:x="161471793" fg:w="2663151"/><text x="65.6495%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,663,151 samples, 1.08%)</title><rect x="65.3995%" y="1461" width="1.0786%" height="15" fill="rgb(250,0,22)" fg:x="161471793" fg:w="2663151"/><text x="65.6495%" y="1471.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,663,151 samples, 1.08%)</title><rect x="65.3995%" y="1445" width="1.0786%" height="15" fill="rgb(213,166,10)" fg:x="161471793" fg:w="2663151"/><text x="65.6495%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,663,151 samples, 1.08%)</title><rect x="65.3995%" y="1429" width="1.0786%" height="15" fill="rgb(207,163,36)" fg:x="161471793" fg:w="2663151"/><text x="65.6495%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,663,151 samples, 1.08%)</title><rect x="65.3995%" y="1413" width="1.0786%" height="15" fill="rgb(208,122,22)" fg:x="161471793" fg:w="2663151"/><text x="65.6495%" y="1423.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,663,151 samples, 1.08%)</title><rect x="65.3995%" y="1397" width="1.0786%" height="15" fill="rgb(207,104,49)" fg:x="161471793" fg:w="2663151"/><text x="65.6495%" y="1407.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,663,151 samples, 1.08%)</title><rect x="65.3995%" y="1381" width="1.0786%" height="15" fill="rgb(248,211,50)" fg:x="161471793" fg:w="2663151"/><text x="65.6495%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,663,151 samples, 1.08%)</title><rect x="65.3995%" y="1365" width="1.0786%" height="15" fill="rgb(217,13,45)" fg:x="161471793" fg:w="2663151"/><text x="65.6495%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,663,151 samples, 1.08%)</title><rect x="65.3995%" y="1349" width="1.0786%" height="15" fill="rgb(211,216,49)" fg:x="161471793" fg:w="2663151"/><text x="65.6495%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,663,151 samples, 1.08%)</title><rect x="65.3995%" y="1333" width="1.0786%" height="15" fill="rgb(221,58,53)" fg:x="161471793" fg:w="2663151"/><text x="65.6495%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,663,151 samples, 1.08%)</title><rect x="65.3995%" y="1317" width="1.0786%" height="15" fill="rgb(220,112,41)" fg:x="161471793" fg:w="2663151"/><text x="65.6495%" y="1327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,663,151 samples, 1.08%)</title><rect x="65.3995%" y="1301" width="1.0786%" height="15" fill="rgb(236,38,28)" fg:x="161471793" fg:w="2663151"/><text x="65.6495%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,393,512 samples, 0.56%)</title><rect x="65.9137%" y="1285" width="0.5644%" height="15" fill="rgb(227,195,22)" fg:x="162741432" fg:w="1393512"/><text x="66.1637%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,393,512 samples, 0.56%)</title><rect x="65.9137%" y="1269" width="0.5644%" height="15" fill="rgb(214,55,33)" fg:x="162741432" fg:w="1393512"/><text x="66.1637%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (1,393,512 samples, 0.56%)</title><rect x="65.9137%" y="1253" width="0.5644%" height="15" fill="rgb(248,80,13)" fg:x="162741432" fg:w="1393512"/><text x="66.1637%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (15,861,468 samples, 6.42%)</title><rect x="60.5669%" y="1637" width="6.4242%" height="15" fill="rgb(238,52,6)" fg:x="149540223" fg:w="15861468"/><text x="60.8169%" y="1647.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,266,747 samples, 0.51%)</title><rect x="66.4781%" y="1621" width="0.5131%" height="15" fill="rgb(224,198,47)" fg:x="164134944" fg:w="1266747"/><text x="66.7281%" y="1631.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,266,747 samples, 0.51%)</title><rect x="66.4781%" y="1605" width="0.5131%" height="15" fill="rgb(233,171,20)" fg:x="164134944" fg:w="1266747"/><text x="66.7281%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,266,747 samples, 0.51%)</title><rect x="66.4781%" y="1589" width="0.5131%" height="15" fill="rgb(241,30,25)" fg:x="164134944" fg:w="1266747"/><text x="66.7281%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,266,747 samples, 0.51%)</title><rect x="66.4781%" y="1573" width="0.5131%" height="15" fill="rgb(207,171,38)" fg:x="164134944" fg:w="1266747"/><text x="66.7281%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (1,266,747 samples, 0.51%)</title><rect x="66.4781%" y="1557" width="0.5131%" height="15" fill="rgb(234,70,1)" fg:x="164134944" fg:w="1266747"/><text x="66.7281%" y="1567.50"></text></g><g><title>cfree (1,266,747 samples, 0.51%)</title><rect x="66.4781%" y="1541" width="0.5131%" height="15" fill="rgb(232,178,18)" fg:x="164134944" fg:w="1266747"/><text x="66.7281%" y="1551.50"></text></g><g><title>[libc.so.6] (1,266,747 samples, 0.51%)</title><rect x="66.4781%" y="1525" width="0.5131%" height="15" fill="rgb(241,78,40)" fg:x="164134944" fg:w="1266747"/><text x="66.7281%" y="1535.50"></text></g><g><title>[libc.so.6] (1,266,747 samples, 0.51%)</title><rect x="66.4781%" y="1509" width="0.5131%" height="15" fill="rgb(222,35,25)" fg:x="164134944" fg:w="1266747"/><text x="66.7281%" y="1519.50"></text></g><g><title>[libc.so.6] (1,266,747 samples, 0.51%)</title><rect x="66.4781%" y="1493" width="0.5131%" height="15" fill="rgb(207,92,16)" fg:x="164134944" fg:w="1266747"/><text x="66.7281%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,160,252 samples, 6.95%)</title><rect x="60.5669%" y="1685" width="6.9503%" height="15" fill="rgb(216,59,51)" fg:x="149540223" fg:w="17160252"/><text x="60.8169%" y="1695.50">&lt;alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (17,160,252 samples, 6.95%)</title><rect x="60.5669%" y="1669" width="6.9503%" height="15" fill="rgb(213,80,28)" fg:x="149540223" fg:w="17160252"/><text x="60.8169%" y="1679.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (17,160,252 samples, 6.95%)</title><rect x="60.5669%" y="1653" width="6.9503%" height="15" fill="rgb(220,93,7)" fg:x="149540223" fg:w="17160252"/><text x="60.8169%" y="1663.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,298,784 samples, 0.53%)</title><rect x="66.9911%" y="1637" width="0.5260%" height="15" fill="rgb(225,24,44)" fg:x="165401691" fg:w="1298784"/><text x="67.2411%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,298,784 samples, 0.53%)</title><rect x="66.9911%" y="1621" width="0.5260%" height="15" fill="rgb(243,74,40)" fg:x="165401691" fg:w="1298784"/><text x="67.2411%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,298,784 samples, 0.53%)</title><rect x="66.9911%" y="1605" width="0.5260%" height="15" fill="rgb(228,39,7)" fg:x="165401691" fg:w="1298784"/><text x="67.2411%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,298,784 samples, 0.53%)</title><rect x="66.9911%" y="1589" width="0.5260%" height="15" fill="rgb(227,79,8)" fg:x="165401691" fg:w="1298784"/><text x="67.2411%" y="1599.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,298,784 samples, 0.53%)</title><rect x="66.9911%" y="1573" width="0.5260%" height="15" fill="rgb(236,58,11)" fg:x="165401691" fg:w="1298784"/><text x="67.2411%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,298,784 samples, 0.53%)</title><rect x="66.9911%" y="1557" width="0.5260%" height="15" fill="rgb(249,63,35)" fg:x="165401691" fg:w="1298784"/><text x="67.2411%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,298,784 samples, 0.53%)</title><rect x="66.9911%" y="1541" width="0.5260%" height="15" fill="rgb(252,114,16)" fg:x="165401691" fg:w="1298784"/><text x="67.2411%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (18,405,897 samples, 7.45%)</title><rect x="60.5669%" y="1701" width="7.4548%" height="15" fill="rgb(254,151,24)" fg:x="149540223" fg:w="18405897"/><text x="60.8169%" y="1711.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,245,645 samples, 0.50%)</title><rect x="67.5172%" y="1685" width="0.5045%" height="15" fill="rgb(253,54,39)" fg:x="166700475" fg:w="1245645"/><text x="67.7672%" y="1695.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,245,645 samples, 0.50%)</title><rect x="67.5172%" y="1669" width="0.5045%" height="15" fill="rgb(243,25,45)" fg:x="166700475" fg:w="1245645"/><text x="67.7672%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,245,645 samples, 0.50%)</title><rect x="67.5172%" y="1653" width="0.5045%" height="15" fill="rgb(234,134,9)" fg:x="166700475" fg:w="1245645"/><text x="67.7672%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,245,645 samples, 0.50%)</title><rect x="67.5172%" y="1637" width="0.5045%" height="15" fill="rgb(227,166,31)" fg:x="166700475" fg:w="1245645"/><text x="67.7672%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (1,245,645 samples, 0.50%)</title><rect x="67.5172%" y="1621" width="0.5045%" height="15" fill="rgb(245,143,41)" fg:x="166700475" fg:w="1245645"/><text x="67.7672%" y="1631.50"></text></g><g><title>cfree (1,245,645 samples, 0.50%)</title><rect x="67.5172%" y="1605" width="0.5045%" height="15" fill="rgb(238,181,32)" fg:x="166700475" fg:w="1245645"/><text x="67.7672%" y="1615.50"></text></g><g><title>[libc.so.6] (1,245,645 samples, 0.50%)</title><rect x="67.5172%" y="1589" width="0.5045%" height="15" fill="rgb(224,113,18)" fg:x="166700475" fg:w="1245645"/><text x="67.7672%" y="1599.50"></text></g><g><title>[libc.so.6] (1,245,645 samples, 0.50%)</title><rect x="67.5172%" y="1573" width="0.5045%" height="15" fill="rgb(240,229,28)" fg:x="166700475" fg:w="1245645"/><text x="67.7672%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,523,109 samples, 1.02%)</title><rect x="68.0217%" y="1701" width="1.0219%" height="15" fill="rgb(250,185,3)" fg:x="167946120" fg:w="2523109"/><text x="68.2717%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,523,109 samples, 1.02%)</title><rect x="68.0217%" y="1685" width="1.0219%" height="15" fill="rgb(212,59,25)" fg:x="167946120" fg:w="2523109"/><text x="68.2717%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,523,109 samples, 1.02%)</title><rect x="68.0217%" y="1669" width="1.0219%" height="15" fill="rgb(221,87,20)" fg:x="167946120" fg:w="2523109"/><text x="68.2717%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,523,109 samples, 1.02%)</title><rect x="68.0217%" y="1653" width="1.0219%" height="15" fill="rgb(213,74,28)" fg:x="167946120" fg:w="2523109"/><text x="68.2717%" y="1663.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,523,109 samples, 1.02%)</title><rect x="68.0217%" y="1637" width="1.0219%" height="15" fill="rgb(224,132,34)" fg:x="167946120" fg:w="2523109"/><text x="68.2717%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,523,109 samples, 1.02%)</title><rect x="68.0217%" y="1621" width="1.0219%" height="15" fill="rgb(222,101,24)" fg:x="167946120" fg:w="2523109"/><text x="68.2717%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,523,109 samples, 1.02%)</title><rect x="68.0217%" y="1605" width="1.0219%" height="15" fill="rgb(254,142,4)" fg:x="167946120" fg:w="2523109"/><text x="68.2717%" y="1615.50"></text></g><g><title>alloc::alloc::dealloc (2,523,109 samples, 1.02%)</title><rect x="68.0217%" y="1589" width="1.0219%" height="15" fill="rgb(230,229,49)" fg:x="167946120" fg:w="2523109"/><text x="68.2717%" y="1599.50"></text></g><g><title>cfree (2,523,109 samples, 1.02%)</title><rect x="68.0217%" y="1573" width="1.0219%" height="15" fill="rgb(238,70,47)" fg:x="167946120" fg:w="2523109"/><text x="68.2717%" y="1583.50"></text></g><g><title>[libc.so.6] (1,266,413 samples, 0.51%)</title><rect x="68.5307%" y="1557" width="0.5129%" height="15" fill="rgb(231,160,17)" fg:x="169202816" fg:w="1266413"/><text x="68.7807%" y="1567.50"></text></g><g><title>__rdl_dealloc (1,348,544 samples, 0.55%)</title><rect x="69.0436%" y="1589" width="0.5462%" height="15" fill="rgb(218,68,53)" fg:x="170469229" fg:w="1348544"/><text x="69.2936%" y="1599.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,348,544 samples, 0.55%)</title><rect x="69.0436%" y="1573" width="0.5462%" height="15" fill="rgb(236,111,10)" fg:x="170469229" fg:w="1348544"/><text x="69.2936%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,597,606 samples, 1.05%)</title><rect x="69.0436%" y="1701" width="1.0521%" height="15" fill="rgb(224,34,41)" fg:x="170469229" fg:w="2597606"/><text x="69.2936%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,597,606 samples, 1.05%)</title><rect x="69.0436%" y="1685" width="1.0521%" height="15" fill="rgb(241,118,19)" fg:x="170469229" fg:w="2597606"/><text x="69.2936%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,597,606 samples, 1.05%)</title><rect x="69.0436%" y="1669" width="1.0521%" height="15" fill="rgb(238,129,25)" fg:x="170469229" fg:w="2597606"/><text x="69.2936%" y="1679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,597,606 samples, 1.05%)</title><rect x="69.0436%" y="1653" width="1.0521%" height="15" fill="rgb(238,22,31)" fg:x="170469229" fg:w="2597606"/><text x="69.2936%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,597,606 samples, 1.05%)</title><rect x="69.0436%" y="1637" width="1.0521%" height="15" fill="rgb(222,174,48)" fg:x="170469229" fg:w="2597606"/><text x="69.2936%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,597,606 samples, 1.05%)</title><rect x="69.0436%" y="1621" width="1.0521%" height="15" fill="rgb(206,152,40)" fg:x="170469229" fg:w="2597606"/><text x="69.2936%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (2,597,606 samples, 1.05%)</title><rect x="69.0436%" y="1605" width="1.0521%" height="15" fill="rgb(218,99,54)" fg:x="170469229" fg:w="2597606"/><text x="69.2936%" y="1615.50"></text></g><g><title>cfree (1,249,062 samples, 0.51%)</title><rect x="69.5898%" y="1589" width="0.5059%" height="15" fill="rgb(220,174,26)" fg:x="171817773" fg:w="1249062"/><text x="69.8398%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26,070,505 samples, 10.56%)</title><rect x="60.0551%" y="1749" width="10.5591%" height="15" fill="rgb(245,116,9)" fg:x="148276418" fg:w="26070505"/><text x="60.3051%" y="1759.50">&lt;alloc::vec::Ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (26,070,505 samples, 10.56%)</title><rect x="60.0551%" y="1733" width="10.5591%" height="15" fill="rgb(209,72,35)" fg:x="148276418" fg:w="26070505"/><text x="60.3051%" y="1743.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (26,070,505 samples, 10.56%)</title><rect x="60.0551%" y="1717" width="10.5591%" height="15" fill="rgb(226,126,21)" fg:x="148276418" fg:w="26070505"/><text x="60.3051%" y="1727.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,280,088 samples, 0.52%)</title><rect x="70.0957%" y="1701" width="0.5185%" height="15" fill="rgb(227,192,1)" fg:x="173066835" fg:w="1280088"/><text x="70.3457%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,280,088 samples, 0.52%)</title><rect x="70.0957%" y="1685" width="0.5185%" height="15" fill="rgb(237,180,29)" fg:x="173066835" fg:w="1280088"/><text x="70.3457%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,280,088 samples, 0.52%)</title><rect x="70.0957%" y="1669" width="0.5185%" height="15" fill="rgb(230,197,35)" fg:x="173066835" fg:w="1280088"/><text x="70.3457%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,280,088 samples, 0.52%)</title><rect x="70.0957%" y="1653" width="0.5185%" height="15" fill="rgb(246,193,31)" fg:x="173066835" fg:w="1280088"/><text x="70.3457%" y="1663.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,280,088 samples, 0.52%)</title><rect x="70.0957%" y="1637" width="0.5185%" height="15" fill="rgb(241,36,4)" fg:x="173066835" fg:w="1280088"/><text x="70.3457%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,280,088 samples, 0.52%)</title><rect x="70.0957%" y="1621" width="0.5185%" height="15" fill="rgb(241,130,17)" fg:x="173066835" fg:w="1280088"/><text x="70.3457%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,280,088 samples, 0.52%)</title><rect x="70.0957%" y="1605" width="0.5185%" height="15" fill="rgb(206,137,32)" fg:x="173066835" fg:w="1280088"/><text x="70.3457%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36,483,682 samples, 14.78%)</title><rect x="60.0551%" y="1813" width="14.7767%" height="15" fill="rgb(237,228,51)" fg:x="148276418" fg:w="36483682"/><text x="60.3051%" y="1823.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (36,483,682 samples, 14.78%)</title><rect x="60.0551%" y="1797" width="14.7767%" height="15" fill="rgb(243,6,42)" fg:x="148276418" fg:w="36483682"/><text x="60.3051%" y="1807.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (36,483,682 samples, 14.78%)</title><rect x="60.0551%" y="1781" width="14.7767%" height="15" fill="rgb(251,74,28)" fg:x="148276418" fg:w="36483682"/><text x="60.3051%" y="1791.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (36,483,682 samples, 14.78%)</title><rect x="60.0551%" y="1765" width="14.7767%" height="15" fill="rgb(218,20,49)" fg:x="148276418" fg:w="36483682"/><text x="60.3051%" y="1775.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (10,413,177 samples, 4.22%)</title><rect x="70.6142%" y="1749" width="4.2176%" height="15" fill="rgb(238,28,14)" fg:x="174346923" fg:w="10413177"/><text x="70.8642%" y="1759.50">core:..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,413,177 samples, 4.22%)</title><rect x="70.6142%" y="1733" width="4.2176%" height="15" fill="rgb(229,40,46)" fg:x="174346923" fg:w="10413177"/><text x="70.8642%" y="1743.50">&lt;allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10,413,177 samples, 4.22%)</title><rect x="70.6142%" y="1717" width="4.2176%" height="15" fill="rgb(244,195,20)" fg:x="174346923" fg:w="10413177"/><text x="70.8642%" y="1727.50">alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,413,177 samples, 4.22%)</title><rect x="70.6142%" y="1701" width="4.2176%" height="15" fill="rgb(253,56,35)" fg:x="174346923" fg:w="10413177"/><text x="70.8642%" y="1711.50">&lt;allo..</text></g><g><title>alloc::alloc::dealloc (10,413,177 samples, 4.22%)</title><rect x="70.6142%" y="1685" width="4.2176%" height="15" fill="rgb(210,149,44)" fg:x="174346923" fg:w="10413177"/><text x="70.8642%" y="1695.50">alloc..</text></g><g><title>cfree (10,413,177 samples, 4.22%)</title><rect x="70.6142%" y="1669" width="4.2176%" height="15" fill="rgb(240,135,12)" fg:x="174346923" fg:w="10413177"/><text x="70.8642%" y="1679.50">cfree</text></g><g><title>[libc.so.6] (10,413,177 samples, 4.22%)</title><rect x="70.6142%" y="1653" width="4.2176%" height="15" fill="rgb(251,24,50)" fg:x="174346923" fg:w="10413177"/><text x="70.8642%" y="1663.50">[libc..</text></g><g><title>[libc.so.6] (10,413,177 samples, 4.22%)</title><rect x="70.6142%" y="1637" width="4.2176%" height="15" fill="rgb(243,200,47)" fg:x="174346923" fg:w="10413177"/><text x="70.8642%" y="1647.50">[libc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (40,410,804 samples, 16.37%)</title><rect x="59.5586%" y="1893" width="16.3672%" height="15" fill="rgb(224,166,26)" fg:x="147050627" fg:w="40410804"/><text x="59.8086%" y="1903.50">core::ptr::drop_in_place&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40,410,804 samples, 16.37%)</title><rect x="59.5586%" y="1877" width="16.3672%" height="15" fill="rgb(233,0,47)" fg:x="147050627" fg:w="40410804"/><text x="59.8086%" y="1887.50">&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (40,410,804 samples, 16.37%)</title><rect x="59.5586%" y="1861" width="16.3672%" height="15" fill="rgb(253,80,5)" fg:x="147050627" fg:w="40410804"/><text x="59.8086%" y="1871.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (40,410,804 samples, 16.37%)</title><rect x="59.5586%" y="1845" width="16.3672%" height="15" fill="rgb(214,133,25)" fg:x="147050627" fg:w="40410804"/><text x="59.8086%" y="1855.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (39,185,013 samples, 15.87%)</title><rect x="60.0551%" y="1829" width="15.8708%" height="15" fill="rgb(209,27,14)" fg:x="148276418" fg:w="39185013"/><text x="60.3051%" y="1839.50">core::ptr::drop_in_place..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,701,331 samples, 1.09%)</title><rect x="74.8317%" y="1813" width="1.0941%" height="15" fill="rgb(219,102,51)" fg:x="184760100" fg:w="2701331"/><text x="75.0817%" y="1823.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,701,331 samples, 1.09%)</title><rect x="74.8317%" y="1797" width="1.0941%" height="15" fill="rgb(237,18,16)" fg:x="184760100" fg:w="2701331"/><text x="75.0817%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,701,331 samples, 1.09%)</title><rect x="74.8317%" y="1781" width="1.0941%" height="15" fill="rgb(241,85,17)" fg:x="184760100" fg:w="2701331"/><text x="75.0817%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,701,331 samples, 1.09%)</title><rect x="74.8317%" y="1765" width="1.0941%" height="15" fill="rgb(236,90,42)" fg:x="184760100" fg:w="2701331"/><text x="75.0817%" y="1775.50"></text></g><g><title>alloc::alloc::dealloc (2,701,331 samples, 1.09%)</title><rect x="74.8317%" y="1749" width="1.0941%" height="15" fill="rgb(249,57,21)" fg:x="184760100" fg:w="2701331"/><text x="75.0817%" y="1759.50"></text></g><g><title>cfree (2,701,331 samples, 1.09%)</title><rect x="74.8317%" y="1733" width="1.0941%" height="15" fill="rgb(243,12,36)" fg:x="184760100" fg:w="2701331"/><text x="75.0817%" y="1743.50"></text></g><g><title>[libc.so.6] (2,701,331 samples, 1.09%)</title><rect x="74.8317%" y="1717" width="1.0941%" height="15" fill="rgb(253,128,47)" fg:x="184760100" fg:w="2701331"/><text x="75.0817%" y="1727.50"></text></g><g><title>[libc.so.6] (2,701,331 samples, 1.09%)</title><rect x="74.8317%" y="1701" width="1.0941%" height="15" fill="rgb(207,33,20)" fg:x="184760100" fg:w="2701331"/><text x="75.0817%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41,676,551 samples, 16.88%)</title><rect x="59.5586%" y="1941" width="16.8799%" height="15" fill="rgb(233,215,35)" fg:x="147050627" fg:w="41676551"/><text x="59.8086%" y="1951.50">&lt;alloc::vec::Vec&lt;T,A&gt; as c..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (41,676,551 samples, 16.88%)</title><rect x="59.5586%" y="1925" width="16.8799%" height="15" fill="rgb(249,188,52)" fg:x="147050627" fg:w="41676551"/><text x="59.8086%" y="1935.50">core::ptr::drop_in_place&lt;[..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (41,676,551 samples, 16.88%)</title><rect x="59.5586%" y="1909" width="16.8799%" height="15" fill="rgb(225,12,32)" fg:x="147050627" fg:w="41676551"/><text x="59.8086%" y="1919.50">core::ptr::drop_in_place&lt;c..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1893" width="0.5127%" height="15" fill="rgb(247,98,14)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1877" width="0.5127%" height="15" fill="rgb(247,219,48)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1861" width="0.5127%" height="15" fill="rgb(253,60,48)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1845" width="0.5127%" height="15" fill="rgb(245,15,52)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1855.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1829" width="0.5127%" height="15" fill="rgb(220,133,28)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1839.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1813" width="0.5127%" height="15" fill="rgb(217,180,4)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1823.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1797" width="0.5127%" height="15" fill="rgb(251,24,1)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1807.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1781" width="0.5127%" height="15" fill="rgb(212,185,49)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1791.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1765" width="0.5127%" height="15" fill="rgb(215,175,22)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1749" width="0.5127%" height="15" fill="rgb(250,205,14)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1733" width="0.5127%" height="15" fill="rgb(225,211,22)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1717" width="0.5127%" height="15" fill="rgb(251,179,42)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1701" width="0.5127%" height="15" fill="rgb(208,216,51)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1685" width="0.5127%" height="15" fill="rgb(235,36,11)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1669" width="0.5127%" height="15" fill="rgb(213,189,28)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1653" width="0.5127%" height="15" fill="rgb(227,203,42)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1663.50"></text></g><g><title>alloc::alloc::dealloc (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1637" width="0.5127%" height="15" fill="rgb(244,72,36)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1647.50"></text></g><g><title>cfree (1,265,747 samples, 0.51%)</title><rect x="75.9258%" y="1621" width="0.5127%" height="15" fill="rgb(213,53,17)" fg:x="187461431" fg:w="1265747"/><text x="76.1758%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (43,071,295 samples, 17.44%)</title><rect x="59.5586%" y="2101" width="17.4448%" height="15" fill="rgb(207,167,3)" fg:x="147050627" fg:w="43071295"/><text x="59.8086%" y="2111.50">core::ptr::drop_in_place&lt;cs..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (43,071,295 samples, 17.44%)</title><rect x="59.5586%" y="2085" width="17.4448%" height="15" fill="rgb(216,98,30)" fg:x="147050627" fg:w="43071295"/><text x="59.8086%" y="2095.50">core::ptr::drop_in_place&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43,071,295 samples, 17.44%)</title><rect x="59.5586%" y="2069" width="17.4448%" height="15" fill="rgb(236,123,15)" fg:x="147050627" fg:w="43071295"/><text x="59.8086%" y="2079.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (43,071,295 samples, 17.44%)</title><rect x="59.5586%" y="2053" width="17.4448%" height="15" fill="rgb(248,81,50)" fg:x="147050627" fg:w="43071295"/><text x="59.8086%" y="2063.50">core::ptr::drop_in_place&lt;[c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (43,071,295 samples, 17.44%)</title><rect x="59.5586%" y="2037" width="17.4448%" height="15" fill="rgb(214,120,4)" fg:x="147050627" fg:w="43071295"/><text x="59.8086%" y="2047.50">core::ptr::drop_in_place&lt;cs..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (43,071,295 samples, 17.44%)</title><rect x="59.5586%" y="2021" width="17.4448%" height="15" fill="rgb(208,179,34)" fg:x="147050627" fg:w="43071295"/><text x="59.8086%" y="2031.50">core::ptr::drop_in_place&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43,071,295 samples, 17.44%)</title><rect x="59.5586%" y="2005" width="17.4448%" height="15" fill="rgb(227,140,7)" fg:x="147050627" fg:w="43071295"/><text x="59.8086%" y="2015.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (43,071,295 samples, 17.44%)</title><rect x="59.5586%" y="1989" width="17.4448%" height="15" fill="rgb(214,22,6)" fg:x="147050627" fg:w="43071295"/><text x="59.8086%" y="1999.50">core::ptr::drop_in_place&lt;[c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (43,071,295 samples, 17.44%)</title><rect x="59.5586%" y="1973" width="17.4448%" height="15" fill="rgb(207,137,27)" fg:x="147050627" fg:w="43071295"/><text x="59.8086%" y="1983.50">core::ptr::drop_in_place&lt;cs..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (43,071,295 samples, 17.44%)</title><rect x="59.5586%" y="1957" width="17.4448%" height="15" fill="rgb(210,8,46)" fg:x="147050627" fg:w="43071295"/><text x="59.8086%" y="1967.50">core::ptr::drop_in_place&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,394,744 samples, 0.56%)</title><rect x="76.4385%" y="1941" width="0.5649%" height="15" fill="rgb(240,16,54)" fg:x="188727178" fg:w="1394744"/><text x="76.6885%" y="1951.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,394,744 samples, 0.56%)</title><rect x="76.4385%" y="1925" width="0.5649%" height="15" fill="rgb(211,209,29)" fg:x="188727178" fg:w="1394744"/><text x="76.6885%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,394,744 samples, 0.56%)</title><rect x="76.4385%" y="1909" width="0.5649%" height="15" fill="rgb(226,228,24)" fg:x="188727178" fg:w="1394744"/><text x="76.6885%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,394,744 samples, 0.56%)</title><rect x="76.4385%" y="1893" width="0.5649%" height="15" fill="rgb(222,84,9)" fg:x="188727178" fg:w="1394744"/><text x="76.6885%" y="1903.50"></text></g><g><title>alloc::alloc::dealloc (1,394,744 samples, 0.56%)</title><rect x="76.4385%" y="1877" width="0.5649%" height="15" fill="rgb(234,203,30)" fg:x="188727178" fg:w="1394744"/><text x="76.6885%" y="1887.50"></text></g><g><title>cfree (1,394,744 samples, 0.56%)</title><rect x="76.4385%" y="1861" width="0.5649%" height="15" fill="rgb(238,109,14)" fg:x="188727178" fg:w="1394744"/><text x="76.6885%" y="1871.50"></text></g><g><title>[libc.so.6] (1,394,744 samples, 0.56%)</title><rect x="76.4385%" y="1845" width="0.5649%" height="15" fill="rgb(233,206,34)" fg:x="188727178" fg:w="1394744"/><text x="76.6885%" y="1855.50"></text></g><g><title>[libc.so.6] (1,394,744 samples, 0.56%)</title><rect x="76.4385%" y="1829" width="0.5649%" height="15" fill="rgb(220,167,47)" fg:x="188727178" fg:w="1394744"/><text x="76.6885%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,381,125 samples, 0.56%)</title><rect x="77.0034%" y="1909" width="0.5594%" height="15" fill="rgb(238,105,10)" fg:x="190121922" fg:w="1381125"/><text x="77.2534%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,381,125 samples, 0.56%)</title><rect x="77.0034%" y="1893" width="0.5594%" height="15" fill="rgb(213,227,17)" fg:x="190121922" fg:w="1381125"/><text x="77.2534%" y="1903.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (151,487,228 samples, 61.36%)</title><rect x="16.7202%" y="2117" width="61.3555%" height="15" fill="rgb(217,132,38)" fg:x="41282227" fg:w="151487228"/><text x="16.9702%" y="2127.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,647,533 samples, 1.07%)</title><rect x="77.0034%" y="2101" width="1.0723%" height="15" fill="rgb(242,146,4)" fg:x="190121922" fg:w="2647533"/><text x="77.2534%" y="2111.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,647,533 samples, 1.07%)</title><rect x="77.0034%" y="2085" width="1.0723%" height="15" fill="rgb(212,61,9)" fg:x="190121922" fg:w="2647533"/><text x="77.2534%" y="2095.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,647,533 samples, 1.07%)</title><rect x="77.0034%" y="2069" width="1.0723%" height="15" fill="rgb(247,126,22)" fg:x="190121922" fg:w="2647533"/><text x="77.2534%" y="2079.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,647,533 samples, 1.07%)</title><rect x="77.0034%" y="2053" width="1.0723%" height="15" fill="rgb(220,196,2)" fg:x="190121922" fg:w="2647533"/><text x="77.2534%" y="2063.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,647,533 samples, 1.07%)</title><rect x="77.0034%" y="2037" width="1.0723%" height="15" fill="rgb(208,46,4)" fg:x="190121922" fg:w="2647533"/><text x="77.2534%" y="2047.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,647,533 samples, 1.07%)</title><rect x="77.0034%" y="2021" width="1.0723%" height="15" fill="rgb(252,104,46)" fg:x="190121922" fg:w="2647533"/><text x="77.2534%" y="2031.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,647,533 samples, 1.07%)</title><rect x="77.0034%" y="2005" width="1.0723%" height="15" fill="rgb(237,152,48)" fg:x="190121922" fg:w="2647533"/><text x="77.2534%" y="2015.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,647,533 samples, 1.07%)</title><rect x="77.0034%" y="1989" width="1.0723%" height="15" fill="rgb(221,59,37)" fg:x="190121922" fg:w="2647533"/><text x="77.2534%" y="1999.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,647,533 samples, 1.07%)</title><rect x="77.0034%" y="1973" width="1.0723%" height="15" fill="rgb(209,202,51)" fg:x="190121922" fg:w="2647533"/><text x="77.2534%" y="1983.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,647,533 samples, 1.07%)</title><rect x="77.0034%" y="1957" width="1.0723%" height="15" fill="rgb(228,81,30)" fg:x="190121922" fg:w="2647533"/><text x="77.2534%" y="1967.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,647,533 samples, 1.07%)</title><rect x="77.0034%" y="1941" width="1.0723%" height="15" fill="rgb(227,42,39)" fg:x="190121922" fg:w="2647533"/><text x="77.2534%" y="1951.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,647,533 samples, 1.07%)</title><rect x="77.0034%" y="1925" width="1.0723%" height="15" fill="rgb(221,26,2)" fg:x="190121922" fg:w="2647533"/><text x="77.2534%" y="1935.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,266,408 samples, 0.51%)</title><rect x="77.5627%" y="1909" width="0.5129%" height="15" fill="rgb(254,61,31)" fg:x="191503047" fg:w="1266408"/><text x="77.8127%" y="1919.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,266,408 samples, 0.51%)</title><rect x="77.5627%" y="1893" width="0.5129%" height="15" fill="rgb(222,173,38)" fg:x="191503047" fg:w="1266408"/><text x="77.8127%" y="1903.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,266,408 samples, 0.51%)</title><rect x="77.5627%" y="1877" width="0.5129%" height="15" fill="rgb(218,50,12)" fg:x="191503047" fg:w="1266408"/><text x="77.8127%" y="1887.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,266,408 samples, 0.51%)</title><rect x="77.5627%" y="1861" width="0.5129%" height="15" fill="rgb(223,88,40)" fg:x="191503047" fg:w="1266408"/><text x="77.8127%" y="1871.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,266,408 samples, 0.51%)</title><rect x="77.5627%" y="1845" width="0.5129%" height="15" fill="rgb(237,54,19)" fg:x="191503047" fg:w="1266408"/><text x="77.8127%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,266,408 samples, 0.51%)</title><rect x="77.5627%" y="1829" width="0.5129%" height="15" fill="rgb(251,129,25)" fg:x="191503047" fg:w="1266408"/><text x="77.8127%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,266,408 samples, 0.51%)</title><rect x="77.5627%" y="1813" width="0.5129%" height="15" fill="rgb(238,97,19)" fg:x="191503047" fg:w="1266408"/><text x="77.8127%" y="1823.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,038,654 samples, 0.42%)</title><rect x="78.0757%" y="2101" width="0.4207%" height="15" fill="rgb(240,169,18)" fg:x="192769455" fg:w="1038654"/><text x="78.3257%" y="2111.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,038,654 samples, 0.42%)</title><rect x="78.0757%" y="2085" width="0.4207%" height="15" fill="rgb(230,187,49)" fg:x="192769455" fg:w="1038654"/><text x="78.3257%" y="2095.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,038,654 samples, 0.42%)</title><rect x="78.0757%" y="2069" width="0.4207%" height="15" fill="rgb(209,44,26)" fg:x="192769455" fg:w="1038654"/><text x="78.3257%" y="2079.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,038,654 samples, 0.42%)</title><rect x="78.0757%" y="2053" width="0.4207%" height="15" fill="rgb(244,0,6)" fg:x="192769455" fg:w="1038654"/><text x="78.3257%" y="2063.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,038,654 samples, 0.42%)</title><rect x="78.0757%" y="2037" width="0.4207%" height="15" fill="rgb(248,18,21)" fg:x="192769455" fg:w="1038654"/><text x="78.3257%" y="2047.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,038,654 samples, 0.42%)</title><rect x="78.0757%" y="2021" width="0.4207%" height="15" fill="rgb(245,180,19)" fg:x="192769455" fg:w="1038654"/><text x="78.3257%" y="2031.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,038,654 samples, 0.42%)</title><rect x="78.0757%" y="2005" width="0.4207%" height="15" fill="rgb(252,118,36)" fg:x="192769455" fg:w="1038654"/><text x="78.3257%" y="2015.50"></text></g><g><title>alloc::slice::hack::to_vec (1,038,654 samples, 0.42%)</title><rect x="78.0757%" y="1989" width="0.4207%" height="15" fill="rgb(210,224,19)" fg:x="192769455" fg:w="1038654"/><text x="78.3257%" y="1999.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,038,654 samples, 0.42%)</title><rect x="78.0757%" y="1973" width="0.4207%" height="15" fill="rgb(218,30,24)" fg:x="192769455" fg:w="1038654"/><text x="78.3257%" y="1983.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,038,654 samples, 0.42%)</title><rect x="78.0757%" y="1957" width="0.4207%" height="15" fill="rgb(219,75,50)" fg:x="192769455" fg:w="1038654"/><text x="78.3257%" y="1967.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,038,654 samples, 0.42%)</title><rect x="78.0757%" y="1941" width="0.4207%" height="15" fill="rgb(234,72,50)" fg:x="192769455" fg:w="1038654"/><text x="78.3257%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,055,112 samples, 0.43%)</title><rect x="78.4963%" y="2101" width="0.4273%" height="15" fill="rgb(219,100,48)" fg:x="193808109" fg:w="1055112"/><text x="78.7463%" y="2111.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1,055,112 samples, 0.43%)</title><rect x="78.4963%" y="2085" width="0.4273%" height="15" fill="rgb(253,5,41)" fg:x="193808109" fg:w="1055112"/><text x="78.7463%" y="2095.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,055,112 samples, 0.43%)</title><rect x="78.4963%" y="2069" width="0.4273%" height="15" fill="rgb(247,181,11)" fg:x="193808109" fg:w="1055112"/><text x="78.7463%" y="2079.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,055,112 samples, 0.43%)</title><rect x="78.4963%" y="2053" width="0.4273%" height="15" fill="rgb(222,223,25)" fg:x="193808109" fg:w="1055112"/><text x="78.7463%" y="2063.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1,055,112 samples, 0.43%)</title><rect x="78.4963%" y="2037" width="0.4273%" height="15" fill="rgb(214,198,28)" fg:x="193808109" fg:w="1055112"/><text x="78.7463%" y="2047.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1,055,112 samples, 0.43%)</title><rect x="78.4963%" y="2021" width="0.4273%" height="15" fill="rgb(230,46,43)" fg:x="193808109" fg:w="1055112"/><text x="78.7463%" y="2031.50"></text></g><g><title>core::slice::memchr::memchr (1,055,112 samples, 0.43%)</title><rect x="78.4963%" y="2005" width="0.4273%" height="15" fill="rgb(233,65,53)" fg:x="193808109" fg:w="1055112"/><text x="78.7463%" y="2015.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1,055,112 samples, 0.43%)</title><rect x="78.4963%" y="1989" width="0.4273%" height="15" fill="rgb(221,121,27)" fg:x="193808109" fg:w="1055112"/><text x="78.7463%" y="1999.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (1,055,112 samples, 0.43%)</title><rect x="78.4963%" y="1973" width="0.4273%" height="15" fill="rgb(247,70,47)" fg:x="193808109" fg:w="1055112"/><text x="78.7463%" y="1983.50"></text></g><g><title>core::slice::memchr::memchr_naive (1,055,112 samples, 0.43%)</title><rect x="78.4963%" y="1957" width="0.4273%" height="15" fill="rgb(228,85,35)" fg:x="193808109" fg:w="1055112"/><text x="78.7463%" y="1967.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (884,386 samples, 0.36%)</title><rect x="78.9237%" y="2021" width="0.3582%" height="15" fill="rgb(209,50,18)" fg:x="194863221" fg:w="884386"/><text x="79.1737%" y="2031.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (884,386 samples, 0.36%)</title><rect x="78.9237%" y="2005" width="0.3582%" height="15" fill="rgb(250,19,35)" fg:x="194863221" fg:w="884386"/><text x="79.1737%" y="2015.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (884,386 samples, 0.36%)</title><rect x="78.9237%" y="1989" width="0.3582%" height="15" fill="rgb(253,107,29)" fg:x="194863221" fg:w="884386"/><text x="79.1737%" y="1999.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (884,386 samples, 0.36%)</title><rect x="78.9237%" y="1973" width="0.3582%" height="15" fill="rgb(252,179,29)" fg:x="194863221" fg:w="884386"/><text x="79.1737%" y="1983.50"></text></g><g><title>[libc.so.6] (884,386 samples, 0.36%)</title><rect x="78.9237%" y="1957" width="0.3582%" height="15" fill="rgb(238,194,6)" fg:x="194863221" fg:w="884386"/><text x="79.1737%" y="1967.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,091,228 samples, 0.44%)</title><rect x="79.2819%" y="1877" width="0.4420%" height="15" fill="rgb(238,164,29)" fg:x="195747607" fg:w="1091228"/><text x="79.5319%" y="1887.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,091,228 samples, 0.44%)</title><rect x="79.2819%" y="1861" width="0.4420%" height="15" fill="rgb(224,25,9)" fg:x="195747607" fg:w="1091228"/><text x="79.5319%" y="1871.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,091,228 samples, 0.44%)</title><rect x="79.2819%" y="1845" width="0.4420%" height="15" fill="rgb(244,153,23)" fg:x="195747607" fg:w="1091228"/><text x="79.5319%" y="1855.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,091,228 samples, 0.44%)</title><rect x="79.2819%" y="1829" width="0.4420%" height="15" fill="rgb(212,203,14)" fg:x="195747607" fg:w="1091228"/><text x="79.5319%" y="1839.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,091,228 samples, 0.44%)</title><rect x="79.2819%" y="1813" width="0.4420%" height="15" fill="rgb(220,164,20)" fg:x="195747607" fg:w="1091228"/><text x="79.5319%" y="1823.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (1,091,228 samples, 0.44%)</title><rect x="79.2819%" y="1797" width="0.4420%" height="15" fill="rgb(222,203,48)" fg:x="195747607" fg:w="1091228"/><text x="79.5319%" y="1807.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (1,091,228 samples, 0.44%)</title><rect x="79.2819%" y="1781" width="0.4420%" height="15" fill="rgb(215,159,22)" fg:x="195747607" fg:w="1091228"/><text x="79.5319%" y="1791.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1,091,228 samples, 0.44%)</title><rect x="79.2819%" y="1765" width="0.4420%" height="15" fill="rgb(216,183,47)" fg:x="195747607" fg:w="1091228"/><text x="79.5319%" y="1775.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,085,673 samples, 0.44%)</title><rect x="79.7239%" y="1813" width="0.4397%" height="15" fill="rgb(229,195,25)" fg:x="196838835" fg:w="1085673"/><text x="79.9739%" y="1823.50"></text></g><g><title>serde::de::MapAccess::next_value (1,085,673 samples, 0.44%)</title><rect x="79.7239%" y="1797" width="0.4397%" height="15" fill="rgb(224,132,51)" fg:x="196838835" fg:w="1085673"/><text x="79.9739%" y="1807.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,085,673 samples, 0.44%)</title><rect x="79.7239%" y="1781" width="0.4397%" height="15" fill="rgb(240,63,7)" fg:x="196838835" fg:w="1085673"/><text x="79.9739%" y="1791.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,085,673 samples, 0.44%)</title><rect x="79.7239%" y="1765" width="0.4397%" height="15" fill="rgb(249,182,41)" fg:x="196838835" fg:w="1085673"/><text x="79.9739%" y="1775.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,085,673 samples, 0.44%)</title><rect x="79.7239%" y="1749" width="0.4397%" height="15" fill="rgb(243,47,26)" fg:x="196838835" fg:w="1085673"/><text x="79.9739%" y="1759.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,085,673 samples, 0.44%)</title><rect x="79.7239%" y="1733" width="0.4397%" height="15" fill="rgb(233,48,2)" fg:x="196838835" fg:w="1085673"/><text x="79.9739%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (1,085,673 samples, 0.44%)</title><rect x="79.7239%" y="1717" width="0.4397%" height="15" fill="rgb(244,165,34)" fg:x="196838835" fg:w="1085673"/><text x="79.9739%" y="1727.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,123,926 samples, 0.46%)</title><rect x="80.1636%" y="1573" width="0.4552%" height="15" fill="rgb(207,89,7)" fg:x="197924508" fg:w="1123926"/><text x="80.4136%" y="1583.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (621,402 samples, 0.25%)</title><rect x="80.3671%" y="1557" width="0.2517%" height="15" fill="rgb(244,117,36)" fg:x="198427032" fg:w="621402"/><text x="80.6171%" y="1567.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (621,402 samples, 0.25%)</title><rect x="80.3671%" y="1541" width="0.2517%" height="15" fill="rgb(226,144,34)" fg:x="198427032" fg:w="621402"/><text x="80.6171%" y="1551.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (621,402 samples, 0.25%)</title><rect x="80.3671%" y="1525" width="0.2517%" height="15" fill="rgb(213,23,19)" fg:x="198427032" fg:w="621402"/><text x="80.6171%" y="1535.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,555,706 samples, 0.63%)</title><rect x="80.1636%" y="1605" width="0.6301%" height="15" fill="rgb(217,75,12)" fg:x="197924508" fg:w="1555706"/><text x="80.4136%" y="1615.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,555,706 samples, 0.63%)</title><rect x="80.1636%" y="1589" width="0.6301%" height="15" fill="rgb(224,159,17)" fg:x="197924508" fg:w="1555706"/><text x="80.4136%" y="1599.50"></text></g><g><title>serde_json::read::parse_escape (431,780 samples, 0.17%)</title><rect x="80.6188%" y="1573" width="0.1749%" height="15" fill="rgb(217,118,1)" fg:x="199048434" fg:w="431780"/><text x="80.8688%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (431,780 samples, 0.17%)</title><rect x="80.6188%" y="1557" width="0.1749%" height="15" fill="rgb(232,180,48)" fg:x="199048434" fg:w="431780"/><text x="80.8688%" y="1567.50"></text></g><g><title>serde::de::MapAccess::next_entry (947,036 samples, 0.38%)</title><rect x="80.7937%" y="1589" width="0.3836%" height="15" fill="rgb(230,27,33)" fg:x="199480214" fg:w="947036"/><text x="81.0437%" y="1599.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (947,036 samples, 0.38%)</title><rect x="80.7937%" y="1573" width="0.3836%" height="15" fill="rgb(205,31,21)" fg:x="199480214" fg:w="947036"/><text x="81.0437%" y="1583.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (947,036 samples, 0.38%)</title><rect x="80.7937%" y="1557" width="0.3836%" height="15" fill="rgb(253,59,4)" fg:x="199480214" fg:w="947036"/><text x="81.0437%" y="1567.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (947,036 samples, 0.38%)</title><rect x="80.7937%" y="1541" width="0.3836%" height="15" fill="rgb(224,201,9)" fg:x="199480214" fg:w="947036"/><text x="81.0437%" y="1551.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (947,036 samples, 0.38%)</title><rect x="80.7937%" y="1525" width="0.3836%" height="15" fill="rgb(229,206,30)" fg:x="199480214" fg:w="947036"/><text x="81.0437%" y="1535.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (947,036 samples, 0.38%)</title><rect x="80.7937%" y="1509" width="0.3836%" height="15" fill="rgb(212,67,47)" fg:x="199480214" fg:w="947036"/><text x="81.0437%" y="1519.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (947,036 samples, 0.38%)</title><rect x="80.7937%" y="1493" width="0.3836%" height="15" fill="rgb(211,96,50)" fg:x="199480214" fg:w="947036"/><text x="81.0437%" y="1503.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (947,036 samples, 0.38%)</title><rect x="80.7937%" y="1477" width="0.3836%" height="15" fill="rgb(252,114,18)" fg:x="199480214" fg:w="947036"/><text x="81.0437%" y="1487.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (947,036 samples, 0.38%)</title><rect x="80.7937%" y="1461" width="0.3836%" height="15" fill="rgb(223,58,37)" fg:x="199480214" fg:w="947036"/><text x="81.0437%" y="1471.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (947,036 samples, 0.38%)</title><rect x="80.7937%" y="1445" width="0.3836%" height="15" fill="rgb(237,70,4)" fg:x="199480214" fg:w="947036"/><text x="81.0437%" y="1455.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,017,520 samples, 0.82%)</title><rect x="80.7937%" y="1605" width="0.8171%" height="15" fill="rgb(244,85,46)" fg:x="199480214" fg:w="2017520"/><text x="81.0437%" y="1615.50"></text></g><g><title>serde::de::MapAccess::next_value (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1589" width="0.4336%" height="15" fill="rgb(223,39,52)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1599.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1573" width="0.4336%" height="15" fill="rgb(218,200,14)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1583.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1557" width="0.4336%" height="15" fill="rgb(208,171,16)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1567.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1541" width="0.4336%" height="15" fill="rgb(234,200,18)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1551.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1525" width="0.4336%" height="15" fill="rgb(228,45,11)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1535.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1509" width="0.4336%" height="15" fill="rgb(237,182,11)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1519.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1493" width="0.4336%" height="15" fill="rgb(241,175,49)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1503.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1477" width="0.4336%" height="15" fill="rgb(247,38,35)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1487.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1461" width="0.4336%" height="15" fill="rgb(228,39,49)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1445" width="0.4336%" height="15" fill="rgb(226,101,26)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1429" width="0.4336%" height="15" fill="rgb(206,141,19)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1413" width="0.4336%" height="15" fill="rgb(211,200,13)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1423.50"></text></g><g><title>alloc::slice::hack::to_vec (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1397" width="0.4336%" height="15" fill="rgb(241,121,6)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1381" width="0.4336%" height="15" fill="rgb(234,221,29)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1365" width="0.4336%" height="15" fill="rgb(229,136,5)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1349" width="0.4336%" height="15" fill="rgb(238,36,11)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1333" width="0.4336%" height="15" fill="rgb(251,55,41)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1317" width="0.4336%" height="15" fill="rgb(242,34,40)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1301" width="0.4336%" height="15" fill="rgb(215,42,17)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1285" width="0.4336%" height="15" fill="rgb(207,44,46)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1269" width="0.4336%" height="15" fill="rgb(211,206,28)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1279.50"></text></g><g><title>malloc (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1253" width="0.4336%" height="15" fill="rgb(237,167,16)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1263.50"></text></g><g><title>[libc.so.6] (1,070,484 samples, 0.43%)</title><rect x="81.1772%" y="1237" width="0.4336%" height="15" fill="rgb(233,66,6)" fg:x="200427250" fg:w="1070484"/><text x="81.4272%" y="1247.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1461" width="0.3736%" height="15" fill="rgb(246,123,29)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1471.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1445" width="0.3736%" height="15" fill="rgb(209,62,40)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1455.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1429" width="0.3736%" height="15" fill="rgb(218,4,25)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1439.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1413" width="0.3736%" height="15" fill="rgb(253,91,49)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1423.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1397" width="0.3736%" height="15" fill="rgb(228,155,29)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1407.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1381" width="0.3736%" height="15" fill="rgb(243,57,37)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1391.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1365" width="0.3736%" height="15" fill="rgb(244,167,17)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1349" width="0.3736%" height="15" fill="rgb(207,181,38)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1333" width="0.3736%" height="15" fill="rgb(211,8,23)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1317" width="0.3736%" height="15" fill="rgb(235,11,44)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1301" width="0.3736%" height="15" fill="rgb(248,18,52)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1311.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1285" width="0.3736%" height="15" fill="rgb(208,4,7)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1269" width="0.3736%" height="15" fill="rgb(240,17,39)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1253" width="0.3736%" height="15" fill="rgb(207,170,3)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1237" width="0.3736%" height="15" fill="rgb(236,100,52)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (922,361 samples, 0.37%)</title><rect x="81.6108%" y="1221" width="0.3736%" height="15" fill="rgb(246,78,51)" fg:x="201497734" fg:w="922361"/><text x="81.8608%" y="1231.50"></text></g><g><title>serde::de::MapAccess::next_value (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1381" width="0.4265%" height="15" fill="rgb(211,17,15)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1391.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1365" width="0.4265%" height="15" fill="rgb(209,59,46)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1375.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1349" width="0.4265%" height="15" fill="rgb(210,92,25)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1359.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1333" width="0.4265%" height="15" fill="rgb(238,174,52)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1343.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1317" width="0.4265%" height="15" fill="rgb(230,73,7)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1327.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1301" width="0.4265%" height="15" fill="rgb(243,124,40)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1311.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1285" width="0.4265%" height="15" fill="rgb(244,170,11)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1295.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1269" width="0.4265%" height="15" fill="rgb(207,114,54)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1279.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1253" width="0.4265%" height="15" fill="rgb(205,42,20)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1237" width="0.4265%" height="15" fill="rgb(230,30,28)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1221" width="0.4265%" height="15" fill="rgb(205,73,54)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1205" width="0.4265%" height="15" fill="rgb(254,227,23)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1189" width="0.4265%" height="15" fill="rgb(228,202,34)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1173" width="0.4265%" height="15" fill="rgb(222,225,37)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1157" width="0.4265%" height="15" fill="rgb(221,14,54)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1141" width="0.4265%" height="15" fill="rgb(254,102,2)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1125" width="0.4265%" height="15" fill="rgb(232,104,17)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1109" width="0.4265%" height="15" fill="rgb(250,220,14)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1093" width="0.4265%" height="15" fill="rgb(241,158,9)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1077" width="0.4265%" height="15" fill="rgb(246,9,43)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1061" width="0.4265%" height="15" fill="rgb(206,73,33)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1071.50"></text></g><g><title>malloc (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1045" width="0.4265%" height="15" fill="rgb(222,79,8)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1055.50"></text></g><g><title>[libc.so.6] (1,053,059 samples, 0.43%)</title><rect x="82.3398%" y="1029" width="0.4265%" height="15" fill="rgb(234,8,54)" fg:x="203297538" fg:w="1053059"/><text x="82.5898%" y="1039.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,057,137 samples, 0.83%)</title><rect x="82.3398%" y="1397" width="0.8332%" height="15" fill="rgb(209,134,38)" fg:x="203297538" fg:w="2057137"/><text x="82.5898%" y="1407.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,004,078 samples, 0.41%)</title><rect x="82.7663%" y="1381" width="0.4067%" height="15" fill="rgb(230,127,29)" fg:x="204350597" fg:w="1004078"/><text x="83.0163%" y="1391.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,004,078 samples, 0.41%)</title><rect x="82.7663%" y="1365" width="0.4067%" height="15" fill="rgb(242,44,41)" fg:x="204350597" fg:w="1004078"/><text x="83.0163%" y="1375.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,004,078 samples, 0.41%)</title><rect x="82.7663%" y="1349" width="0.4067%" height="15" fill="rgb(222,56,43)" fg:x="204350597" fg:w="1004078"/><text x="83.0163%" y="1359.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,004,078 samples, 0.41%)</title><rect x="82.7663%" y="1333" width="0.4067%" height="15" fill="rgb(238,39,47)" fg:x="204350597" fg:w="1004078"/><text x="83.0163%" y="1343.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1,004,078 samples, 0.41%)</title><rect x="82.7663%" y="1317" width="0.4067%" height="15" fill="rgb(226,79,43)" fg:x="204350597" fg:w="1004078"/><text x="83.0163%" y="1327.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1,004,078 samples, 0.41%)</title><rect x="82.7663%" y="1301" width="0.4067%" height="15" fill="rgb(242,105,53)" fg:x="204350597" fg:w="1004078"/><text x="83.0163%" y="1311.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,004,078 samples, 0.41%)</title><rect x="82.7663%" y="1285" width="0.4067%" height="15" fill="rgb(251,132,46)" fg:x="204350597" fg:w="1004078"/><text x="83.0163%" y="1295.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,004,078 samples, 0.41%)</title><rect x="82.7663%" y="1269" width="0.4067%" height="15" fill="rgb(231,77,14)" fg:x="204350597" fg:w="1004078"/><text x="83.0163%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,004,078 samples, 0.41%)</title><rect x="82.7663%" y="1253" width="0.4067%" height="15" fill="rgb(240,135,9)" fg:x="204350597" fg:w="1004078"/><text x="83.0163%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,004,078 samples, 0.41%)</title><rect x="82.7663%" y="1237" width="0.4067%" height="15" fill="rgb(248,109,14)" fg:x="204350597" fg:w="1004078"/><text x="83.0163%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (1,004,078 samples, 0.41%)</title><rect x="82.7663%" y="1221" width="0.4067%" height="15" fill="rgb(227,146,52)" fg:x="204350597" fg:w="1004078"/><text x="83.0163%" y="1231.50"></text></g><g><title>malloc (1,004,078 samples, 0.41%)</title><rect x="82.7663%" y="1205" width="0.4067%" height="15" fill="rgb(232,54,3)" fg:x="204350597" fg:w="1004078"/><text x="83.0163%" y="1215.50"></text></g><g><title>[libc.so.6] (1,004,078 samples, 0.41%)</title><rect x="82.7663%" y="1189" width="0.4067%" height="15" fill="rgb(229,201,43)" fg:x="204350597" fg:w="1004078"/><text x="83.0163%" y="1199.50"></text></g><g><title>[libc.so.6] (1,004,078 samples, 0.41%)</title><rect x="82.7663%" y="1173" width="0.4067%" height="15" fill="rgb(252,161,33)" fg:x="204350597" fg:w="1004078"/><text x="83.0163%" y="1183.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1253" width="0.8194%" height="15" fill="rgb(226,146,40)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1237" width="0.8194%" height="15" fill="rgb(219,47,25)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1247.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1221" width="0.8194%" height="15" fill="rgb(250,135,13)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1231.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1205" width="0.8194%" height="15" fill="rgb(219,229,18)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1215.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1189" width="0.8194%" height="15" fill="rgb(217,152,27)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1199.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1173" width="0.8194%" height="15" fill="rgb(225,71,47)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1183.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1157" width="0.8194%" height="15" fill="rgb(220,139,14)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1141" width="0.8194%" height="15" fill="rgb(247,54,32)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1125" width="0.8194%" height="15" fill="rgb(252,131,39)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1109" width="0.8194%" height="15" fill="rgb(210,108,39)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1093" width="0.8194%" height="15" fill="rgb(205,23,29)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1077" width="0.8194%" height="15" fill="rgb(246,139,46)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1061" width="0.8194%" height="15" fill="rgb(250,81,26)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1045" width="0.8194%" height="15" fill="rgb(214,104,7)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1029" width="0.8194%" height="15" fill="rgb(233,189,8)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="1013" width="0.8194%" height="15" fill="rgb(228,141,17)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="997" width="0.8194%" height="15" fill="rgb(247,157,1)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="981" width="0.8194%" height="15" fill="rgb(249,225,5)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="991.50"></text></g><g><title>alloc::alloc::alloc (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="965" width="0.8194%" height="15" fill="rgb(242,55,13)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="975.50"></text></g><g><title>malloc (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="949" width="0.8194%" height="15" fill="rgb(230,49,50)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="959.50"></text></g><g><title>[libc.so.6] (2,023,218 samples, 0.82%)</title><rect x="83.1729%" y="933" width="0.8194%" height="15" fill="rgb(241,111,38)" fg:x="205354675" fg:w="2023218"/><text x="83.4229%" y="943.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (785,062 samples, 0.32%)</title><rect x="83.9924%" y="981" width="0.3180%" height="15" fill="rgb(252,155,4)" fg:x="207377893" fg:w="785062"/><text x="84.2424%" y="991.50"></text></g><g><title>serde::de::MapAccess::next_value (785,062 samples, 0.32%)</title><rect x="83.9924%" y="965" width="0.3180%" height="15" fill="rgb(212,69,32)" fg:x="207377893" fg:w="785062"/><text x="84.2424%" y="975.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (785,062 samples, 0.32%)</title><rect x="83.9924%" y="949" width="0.3180%" height="15" fill="rgb(243,107,47)" fg:x="207377893" fg:w="785062"/><text x="84.2424%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (785,062 samples, 0.32%)</title><rect x="83.9924%" y="933" width="0.3180%" height="15" fill="rgb(247,130,12)" fg:x="207377893" fg:w="785062"/><text x="84.2424%" y="943.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (785,062 samples, 0.32%)</title><rect x="83.9924%" y="917" width="0.3180%" height="15" fill="rgb(233,74,16)" fg:x="207377893" fg:w="785062"/><text x="84.2424%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (785,062 samples, 0.32%)</title><rect x="83.9924%" y="901" width="0.3180%" height="15" fill="rgb(208,58,18)" fg:x="207377893" fg:w="785062"/><text x="84.2424%" y="911.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="357" width="0.4429%" height="15" fill="rgb(242,225,1)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="367.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="341" width="0.4429%" height="15" fill="rgb(249,39,40)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="351.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="325" width="0.4429%" height="15" fill="rgb(207,72,44)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="335.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="309" width="0.4429%" height="15" fill="rgb(215,193,12)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="293" width="0.4429%" height="15" fill="rgb(248,41,39)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="277" width="0.4429%" height="15" fill="rgb(253,85,4)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="261" width="0.4429%" height="15" fill="rgb(243,70,31)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="271.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="245" width="0.4429%" height="15" fill="rgb(253,195,26)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="255.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="229" width="0.4429%" height="15" fill="rgb(243,42,11)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="213" width="0.4429%" height="15" fill="rgb(239,66,17)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="223.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="197" width="0.4429%" height="15" fill="rgb(217,132,21)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="181" width="0.4429%" height="15" fill="rgb(252,202,21)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="165" width="0.4429%" height="15" fill="rgb(233,98,36)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="149" width="0.4429%" height="15" fill="rgb(216,153,54)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="159.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="133" width="0.4429%" height="15" fill="rgb(250,99,7)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="143.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="117" width="0.4429%" height="15" fill="rgb(207,56,50)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="127.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,093,510 samples, 0.44%)</title><rect x="84.3104%" y="101" width="0.4429%" height="15" fill="rgb(244,61,34)" fg:x="208162955" fg:w="1093510"/><text x="84.5604%" y="111.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="661" width="0.7134%" height="15" fill="rgb(241,50,38)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="671.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="645" width="0.7134%" height="15" fill="rgb(212,166,30)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="629" width="0.7134%" height="15" fill="rgb(249,127,32)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="613" width="0.7134%" height="15" fill="rgb(209,103,0)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="597" width="0.7134%" height="15" fill="rgb(238,209,51)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="581" width="0.7134%" height="15" fill="rgb(237,56,23)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="565" width="0.7134%" height="15" fill="rgb(215,153,46)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="575.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="549" width="0.7134%" height="15" fill="rgb(224,49,31)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="559.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="533" width="0.7134%" height="15" fill="rgb(250,18,42)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="543.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="517" width="0.7134%" height="15" fill="rgb(215,176,39)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="501" width="0.7134%" height="15" fill="rgb(223,77,29)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="485" width="0.7134%" height="15" fill="rgb(234,94,52)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="469" width="0.7134%" height="15" fill="rgb(220,154,50)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="479.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="453" width="0.7134%" height="15" fill="rgb(212,11,10)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="463.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="437" width="0.7134%" height="15" fill="rgb(205,166,19)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="421" width="0.7134%" height="15" fill="rgb(244,198,16)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="431.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="405" width="0.7134%" height="15" fill="rgb(219,69,12)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="389" width="0.7134%" height="15" fill="rgb(245,30,7)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,761,289 samples, 0.71%)</title><rect x="84.3104%" y="373" width="0.7134%" height="15" fill="rgb(218,221,48)" fg:x="208162955" fg:w="1761289"/><text x="84.5604%" y="383.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (667,779 samples, 0.27%)</title><rect x="84.7533%" y="357" width="0.2705%" height="15" fill="rgb(216,66,15)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (667,779 samples, 0.27%)</title><rect x="84.7533%" y="341" width="0.2705%" height="15" fill="rgb(226,122,50)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (667,779 samples, 0.27%)</title><rect x="84.7533%" y="325" width="0.2705%" height="15" fill="rgb(239,156,16)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="335.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (667,779 samples, 0.27%)</title><rect x="84.7533%" y="309" width="0.2705%" height="15" fill="rgb(224,27,38)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (667,779 samples, 0.27%)</title><rect x="84.7533%" y="293" width="0.2705%" height="15" fill="rgb(224,39,27)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (667,779 samples, 0.27%)</title><rect x="84.7533%" y="277" width="0.2705%" height="15" fill="rgb(215,92,29)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (667,779 samples, 0.27%)</title><rect x="84.7533%" y="261" width="0.2705%" height="15" fill="rgb(207,159,16)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (667,779 samples, 0.27%)</title><rect x="84.7533%" y="245" width="0.2705%" height="15" fill="rgb(238,163,47)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (667,779 samples, 0.27%)</title><rect x="84.7533%" y="229" width="0.2705%" height="15" fill="rgb(219,91,49)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (667,779 samples, 0.27%)</title><rect x="84.7533%" y="213" width="0.2705%" height="15" fill="rgb(227,167,31)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (667,779 samples, 0.27%)</title><rect x="84.7533%" y="197" width="0.2705%" height="15" fill="rgb(234,80,54)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (667,779 samples, 0.27%)</title><rect x="84.7533%" y="181" width="0.2705%" height="15" fill="rgb(212,114,2)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (667,779 samples, 0.27%)</title><rect x="84.7533%" y="165" width="0.2705%" height="15" fill="rgb(234,50,24)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (667,779 samples, 0.27%)</title><rect x="84.7533%" y="149" width="0.2705%" height="15" fill="rgb(221,68,8)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (667,779 samples, 0.27%)</title><rect x="84.7533%" y="133" width="0.2705%" height="15" fill="rgb(254,180,31)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="143.50"></text></g><g><title>alloc::alloc::alloc (667,779 samples, 0.27%)</title><rect x="84.7533%" y="117" width="0.2705%" height="15" fill="rgb(247,130,50)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="127.50"></text></g><g><title>malloc (667,779 samples, 0.27%)</title><rect x="84.7533%" y="101" width="0.2705%" height="15" fill="rgb(211,109,4)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="111.50"></text></g><g><title>[libc.so.6] (667,779 samples, 0.27%)</title><rect x="84.7533%" y="85" width="0.2705%" height="15" fill="rgb(238,50,21)" fg:x="209256465" fg:w="667779"/><text x="85.0033%" y="95.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,540,095 samples, 1.43%)</title><rect x="83.9924%" y="1077" width="1.4338%" height="15" fill="rgb(225,57,45)" fg:x="207377893" fg:w="3540095"/><text x="84.2424%" y="1087.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,540,095 samples, 1.43%)</title><rect x="83.9924%" y="1061" width="1.4338%" height="15" fill="rgb(209,196,50)" fg:x="207377893" fg:w="3540095"/><text x="84.2424%" y="1071.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,540,095 samples, 1.43%)</title><rect x="83.9924%" y="1045" width="1.4338%" height="15" fill="rgb(242,140,13)" fg:x="207377893" fg:w="3540095"/><text x="84.2424%" y="1055.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,540,095 samples, 1.43%)</title><rect x="83.9924%" y="1029" width="1.4338%" height="15" fill="rgb(217,111,7)" fg:x="207377893" fg:w="3540095"/><text x="84.2424%" y="1039.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,540,095 samples, 1.43%)</title><rect x="83.9924%" y="1013" width="1.4338%" height="15" fill="rgb(253,193,51)" fg:x="207377893" fg:w="3540095"/><text x="84.2424%" y="1023.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,540,095 samples, 1.43%)</title><rect x="83.9924%" y="997" width="1.4338%" height="15" fill="rgb(252,70,29)" fg:x="207377893" fg:w="3540095"/><text x="84.2424%" y="1007.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="981" width="1.1158%" height="15" fill="rgb(232,127,12)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="991.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="965" width="1.1158%" height="15" fill="rgb(211,180,21)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="975.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="949" width="1.1158%" height="15" fill="rgb(229,72,13)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="933" width="1.1158%" height="15" fill="rgb(240,211,49)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="943.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="917" width="1.1158%" height="15" fill="rgb(219,149,40)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="901" width="1.1158%" height="15" fill="rgb(210,127,46)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="911.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="885" width="1.1158%" height="15" fill="rgb(220,106,7)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="895.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="869" width="1.1158%" height="15" fill="rgb(249,31,22)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="879.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="853" width="1.1158%" height="15" fill="rgb(253,1,49)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="863.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="837" width="1.1158%" height="15" fill="rgb(227,144,33)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="847.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="821" width="1.1158%" height="15" fill="rgb(249,163,44)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="831.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="805" width="1.1158%" height="15" fill="rgb(234,15,39)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="815.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="789" width="1.1158%" height="15" fill="rgb(207,66,16)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="799.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="773" width="1.1158%" height="15" fill="rgb(233,112,24)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="783.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="757" width="1.1158%" height="15" fill="rgb(230,90,22)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="767.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="741" width="1.1158%" height="15" fill="rgb(229,61,13)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="751.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="725" width="1.1158%" height="15" fill="rgb(225,57,24)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="709" width="1.1158%" height="15" fill="rgb(208,169,48)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="693" width="1.1158%" height="15" fill="rgb(244,218,51)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,755,033 samples, 1.12%)</title><rect x="84.3104%" y="677" width="1.1158%" height="15" fill="rgb(214,148,10)" fg:x="208162955" fg:w="2755033"/><text x="84.5604%" y="687.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (993,744 samples, 0.40%)</title><rect x="85.0237%" y="661" width="0.4025%" height="15" fill="rgb(225,174,27)" fg:x="209924244" fg:w="993744"/><text x="85.2737%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (993,744 samples, 0.40%)</title><rect x="85.0237%" y="645" width="0.4025%" height="15" fill="rgb(230,96,26)" fg:x="209924244" fg:w="993744"/><text x="85.2737%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (993,744 samples, 0.40%)</title><rect x="85.0237%" y="629" width="0.4025%" height="15" fill="rgb(232,10,30)" fg:x="209924244" fg:w="993744"/><text x="85.2737%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (993,744 samples, 0.40%)</title><rect x="85.0237%" y="613" width="0.4025%" height="15" fill="rgb(222,8,50)" fg:x="209924244" fg:w="993744"/><text x="85.2737%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,534,926 samples, 1.84%)</title><rect x="83.9924%" y="1237" width="1.8367%" height="15" fill="rgb(213,81,27)" fg:x="207377893" fg:w="4534926"/><text x="84.2424%" y="1247.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,534,926 samples, 1.84%)</title><rect x="83.9924%" y="1221" width="1.8367%" height="15" fill="rgb(245,50,10)" fg:x="207377893" fg:w="4534926"/><text x="84.2424%" y="1231.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,534,926 samples, 1.84%)</title><rect x="83.9924%" y="1205" width="1.8367%" height="15" fill="rgb(216,100,18)" fg:x="207377893" fg:w="4534926"/><text x="84.2424%" y="1215.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,534,926 samples, 1.84%)</title><rect x="83.9924%" y="1189" width="1.8367%" height="15" fill="rgb(236,147,54)" fg:x="207377893" fg:w="4534926"/><text x="84.2424%" y="1199.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (4,534,926 samples, 1.84%)</title><rect x="83.9924%" y="1173" width="1.8367%" height="15" fill="rgb(205,143,26)" fg:x="207377893" fg:w="4534926"/><text x="84.2424%" y="1183.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,534,926 samples, 1.84%)</title><rect x="83.9924%" y="1157" width="1.8367%" height="15" fill="rgb(236,26,9)" fg:x="207377893" fg:w="4534926"/><text x="84.2424%" y="1167.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,534,926 samples, 1.84%)</title><rect x="83.9924%" y="1141" width="1.8367%" height="15" fill="rgb(221,165,53)" fg:x="207377893" fg:w="4534926"/><text x="84.2424%" y="1151.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,534,926 samples, 1.84%)</title><rect x="83.9924%" y="1125" width="1.8367%" height="15" fill="rgb(214,110,17)" fg:x="207377893" fg:w="4534926"/><text x="84.2424%" y="1135.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,534,926 samples, 1.84%)</title><rect x="83.9924%" y="1109" width="1.8367%" height="15" fill="rgb(237,197,12)" fg:x="207377893" fg:w="4534926"/><text x="84.2424%" y="1119.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,534,926 samples, 1.84%)</title><rect x="83.9924%" y="1093" width="1.8367%" height="15" fill="rgb(205,84,17)" fg:x="207377893" fg:w="4534926"/><text x="84.2424%" y="1103.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_value (994,831 samples, 0.40%)</title><rect x="85.4262%" y="1077" width="0.4029%" height="15" fill="rgb(237,18,45)" fg:x="210917988" fg:w="994831"/><text x="85.6762%" y="1087.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (994,831 samples, 0.40%)</title><rect x="85.4262%" y="1061" width="0.4029%" height="15" fill="rgb(221,87,14)" fg:x="210917988" fg:w="994831"/><text x="85.6762%" y="1071.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (994,831 samples, 0.40%)</title><rect x="85.4262%" y="1045" width="0.4029%" height="15" fill="rgb(238,186,15)" fg:x="210917988" fg:w="994831"/><text x="85.6762%" y="1055.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (994,831 samples, 0.40%)</title><rect x="85.4262%" y="1029" width="0.4029%" height="15" fill="rgb(208,115,11)" fg:x="210917988" fg:w="994831"/><text x="85.6762%" y="1039.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (994,831 samples, 0.40%)</title><rect x="85.4262%" y="1013" width="0.4029%" height="15" fill="rgb(254,175,0)" fg:x="210917988" fg:w="994831"/><text x="85.6762%" y="1023.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (994,831 samples, 0.40%)</title><rect x="85.4262%" y="997" width="0.4029%" height="15" fill="rgb(227,24,42)" fg:x="210917988" fg:w="994831"/><text x="85.6762%" y="1007.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (994,831 samples, 0.40%)</title><rect x="85.4262%" y="981" width="0.4029%" height="15" fill="rgb(223,211,37)" fg:x="210917988" fg:w="994831"/><text x="85.6762%" y="991.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (994,831 samples, 0.40%)</title><rect x="85.4262%" y="965" width="0.4029%" height="15" fill="rgb(235,49,27)" fg:x="210917988" fg:w="994831"/><text x="85.6762%" y="975.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,384,656 samples, 2.99%)</title><rect x="83.1729%" y="1285" width="2.9909%" height="15" fill="rgb(254,97,51)" fg:x="205354675" fg:w="7384656"/><text x="83.4229%" y="1295.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (7,384,656 samples, 2.99%)</title><rect x="83.1729%" y="1269" width="2.9909%" height="15" fill="rgb(249,51,40)" fg:x="205354675" fg:w="7384656"/><text x="83.4229%" y="1279.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,361,438 samples, 2.17%)</title><rect x="83.9924%" y="1253" width="2.1715%" height="15" fill="rgb(210,128,45)" fg:x="207377893" fg:w="5361438"/><text x="84.2424%" y="1263.50">&lt;..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (826,512 samples, 0.33%)</title><rect x="85.8291%" y="1237" width="0.3348%" height="15" fill="rgb(224,137,50)" fg:x="211912819" fg:w="826512"/><text x="86.0791%" y="1247.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (826,512 samples, 0.33%)</title><rect x="85.8291%" y="1221" width="0.3348%" height="15" fill="rgb(242,15,9)" fg:x="211912819" fg:w="826512"/><text x="86.0791%" y="1231.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (826,512 samples, 0.33%)</title><rect x="85.8291%" y="1205" width="0.3348%" height="15" fill="rgb(233,187,41)" fg:x="211912819" fg:w="826512"/><text x="86.0791%" y="1215.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (826,512 samples, 0.33%)</title><rect x="85.8291%" y="1189" width="0.3348%" height="15" fill="rgb(227,2,29)" fg:x="211912819" fg:w="826512"/><text x="86.0791%" y="1199.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (826,512 samples, 0.33%)</title><rect x="85.8291%" y="1173" width="0.3348%" height="15" fill="rgb(222,70,3)" fg:x="211912819" fg:w="826512"/><text x="86.0791%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (724,384 samples, 0.29%)</title><rect x="86.1639%" y="1253" width="0.2934%" height="15" fill="rgb(213,11,42)" fg:x="212739331" fg:w="724384"/><text x="86.4139%" y="1263.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (724,384 samples, 0.29%)</title><rect x="86.1639%" y="1237" width="0.2934%" height="15" fill="rgb(225,150,9)" fg:x="212739331" fg:w="724384"/><text x="86.4139%" y="1247.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (724,384 samples, 0.29%)</title><rect x="86.1639%" y="1221" width="0.2934%" height="15" fill="rgb(230,162,45)" fg:x="212739331" fg:w="724384"/><text x="86.4139%" y="1231.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (724,384 samples, 0.29%)</title><rect x="86.1639%" y="1205" width="0.2934%" height="15" fill="rgb(222,14,52)" fg:x="212739331" fg:w="724384"/><text x="86.4139%" y="1215.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (724,384 samples, 0.29%)</title><rect x="86.1639%" y="1189" width="0.2934%" height="15" fill="rgb(254,198,14)" fg:x="212739331" fg:w="724384"/><text x="86.4139%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (724,384 samples, 0.29%)</title><rect x="86.1639%" y="1173" width="0.2934%" height="15" fill="rgb(220,217,30)" fg:x="212739331" fg:w="724384"/><text x="86.4139%" y="1183.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (724,384 samples, 0.29%)</title><rect x="86.1639%" y="1157" width="0.2934%" height="15" fill="rgb(215,146,41)" fg:x="212739331" fg:w="724384"/><text x="86.4139%" y="1167.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (724,384 samples, 0.29%)</title><rect x="86.1639%" y="1141" width="0.2934%" height="15" fill="rgb(217,27,36)" fg:x="212739331" fg:w="724384"/><text x="86.4139%" y="1151.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (15,993,229 samples, 6.48%)</title><rect x="80.1636%" y="1813" width="6.4776%" height="15" fill="rgb(219,218,39)" fg:x="197924508" fg:w="15993229"/><text x="80.4136%" y="1823.50">&lt;serde_j..</text></g><g><title>serde::de::SeqAccess::next_element (15,993,229 samples, 6.48%)</title><rect x="80.1636%" y="1797" width="6.4776%" height="15" fill="rgb(219,4,42)" fg:x="197924508" fg:w="15993229"/><text x="80.4136%" y="1807.50">serde::d..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (15,993,229 samples, 6.48%)</title><rect x="80.1636%" y="1781" width="6.4776%" height="15" fill="rgb(249,119,36)" fg:x="197924508" fg:w="15993229"/><text x="80.4136%" y="1791.50">&lt;serde_j..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15,993,229 samples, 6.48%)</title><rect x="80.1636%" y="1765" width="6.4776%" height="15" fill="rgb(209,23,33)" fg:x="197924508" fg:w="15993229"/><text x="80.4136%" y="1775.50">&lt;core::m..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,993,229 samples, 6.48%)</title><rect x="80.1636%" y="1749" width="6.4776%" height="15" fill="rgb(211,10,0)" fg:x="197924508" fg:w="15993229"/><text x="80.4136%" y="1759.50">serde_js..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,993,229 samples, 6.48%)</title><rect x="80.1636%" y="1733" width="6.4776%" height="15" fill="rgb(208,99,37)" fg:x="197924508" fg:w="15993229"/><text x="80.4136%" y="1743.50">&lt;&amp;mut se..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15,993,229 samples, 6.48%)</title><rect x="80.1636%" y="1717" width="6.4776%" height="15" fill="rgb(213,132,31)" fg:x="197924508" fg:w="15993229"/><text x="80.4136%" y="1727.50">&lt;serde_j..</text></g><g><title>serde::de::MapAccess::next_entry (15,993,229 samples, 6.48%)</title><rect x="80.1636%" y="1701" width="6.4776%" height="15" fill="rgb(243,129,40)" fg:x="197924508" fg:w="15993229"/><text x="80.4136%" y="1711.50">serde::d..</text></g><g><title>serde::de::MapAccess::next_entry_seed (15,993,229 samples, 6.48%)</title><rect x="80.1636%" y="1685" width="6.4776%" height="15" fill="rgb(210,66,33)" fg:x="197924508" fg:w="15993229"/><text x="80.4136%" y="1695.50">serde::d..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (15,993,229 samples, 6.48%)</title><rect x="80.1636%" y="1669" width="6.4776%" height="15" fill="rgb(209,189,4)" fg:x="197924508" fg:w="15993229"/><text x="80.4136%" y="1679.50">&lt;serde_j..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15,993,229 samples, 6.48%)</title><rect x="80.1636%" y="1653" width="6.4776%" height="15" fill="rgb(214,107,37)" fg:x="197924508" fg:w="15993229"/><text x="80.4136%" y="1663.50">&lt;core::m..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,993,229 samples, 6.48%)</title><rect x="80.1636%" y="1637" width="6.4776%" height="15" fill="rgb(245,88,54)" fg:x="197924508" fg:w="15993229"/><text x="80.4136%" y="1647.50">serde_js..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,993,229 samples, 6.48%)</title><rect x="80.1636%" y="1621" width="6.4776%" height="15" fill="rgb(205,146,20)" fg:x="197924508" fg:w="15993229"/><text x="80.4136%" y="1631.50">&lt;&amp;mut se..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12,420,003 samples, 5.03%)</title><rect x="81.6108%" y="1605" width="5.0304%" height="15" fill="rgb(220,161,25)" fg:x="201497734" fg:w="12420003"/><text x="81.8608%" y="1615.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (12,420,003 samples, 5.03%)</title><rect x="81.6108%" y="1589" width="5.0304%" height="15" fill="rgb(215,152,15)" fg:x="201497734" fg:w="12420003"/><text x="81.8608%" y="1599.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12,420,003 samples, 5.03%)</title><rect x="81.6108%" y="1573" width="5.0304%" height="15" fill="rgb(233,192,44)" fg:x="201497734" fg:w="12420003"/><text x="81.8608%" y="1583.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,420,003 samples, 5.03%)</title><rect x="81.6108%" y="1557" width="5.0304%" height="15" fill="rgb(240,170,46)" fg:x="201497734" fg:w="12420003"/><text x="81.8608%" y="1567.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,420,003 samples, 5.03%)</title><rect x="81.6108%" y="1541" width="5.0304%" height="15" fill="rgb(207,104,33)" fg:x="201497734" fg:w="12420003"/><text x="81.8608%" y="1551.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,420,003 samples, 5.03%)</title><rect x="81.6108%" y="1525" width="5.0304%" height="15" fill="rgb(219,21,39)" fg:x="201497734" fg:w="12420003"/><text x="81.8608%" y="1535.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,420,003 samples, 5.03%)</title><rect x="81.6108%" y="1509" width="5.0304%" height="15" fill="rgb(214,133,29)" fg:x="201497734" fg:w="12420003"/><text x="81.8608%" y="1519.50">&lt;serde..</text></g><g><title>serde::de::MapAccess::next_entry (12,420,003 samples, 5.03%)</title><rect x="81.6108%" y="1493" width="5.0304%" height="15" fill="rgb(226,93,6)" fg:x="201497734" fg:w="12420003"/><text x="81.8608%" y="1503.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,420,003 samples, 5.03%)</title><rect x="81.6108%" y="1477" width="5.0304%" height="15" fill="rgb(252,222,34)" fg:x="201497734" fg:w="12420003"/><text x="81.8608%" y="1487.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,497,642 samples, 4.66%)</title><rect x="81.9844%" y="1461" width="4.6568%" height="15" fill="rgb(252,92,48)" fg:x="202420095" fg:w="11497642"/><text x="82.2344%" y="1471.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,497,642 samples, 4.66%)</title><rect x="81.9844%" y="1445" width="4.6568%" height="15" fill="rgb(245,223,24)" fg:x="202420095" fg:w="11497642"/><text x="82.2344%" y="1455.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,497,642 samples, 4.66%)</title><rect x="81.9844%" y="1429" width="4.6568%" height="15" fill="rgb(205,176,3)" fg:x="202420095" fg:w="11497642"/><text x="82.2344%" y="1439.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,497,642 samples, 4.66%)</title><rect x="81.9844%" y="1413" width="4.6568%" height="15" fill="rgb(235,151,15)" fg:x="202420095" fg:w="11497642"/><text x="82.2344%" y="1423.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (8,563,062 samples, 3.47%)</title><rect x="83.1729%" y="1397" width="3.4682%" height="15" fill="rgb(237,209,11)" fg:x="205354675" fg:w="8563062"/><text x="83.4229%" y="1407.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (8,563,062 samples, 3.47%)</title><rect x="83.1729%" y="1381" width="3.4682%" height="15" fill="rgb(243,227,24)" fg:x="205354675" fg:w="8563062"/><text x="83.4229%" y="1391.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (8,563,062 samples, 3.47%)</title><rect x="83.1729%" y="1365" width="3.4682%" height="15" fill="rgb(239,193,16)" fg:x="205354675" fg:w="8563062"/><text x="83.4229%" y="1375.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8,563,062 samples, 3.47%)</title><rect x="83.1729%" y="1349" width="3.4682%" height="15" fill="rgb(231,27,9)" fg:x="205354675" fg:w="8563062"/><text x="83.4229%" y="1359.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8,563,062 samples, 3.47%)</title><rect x="83.1729%" y="1333" width="3.4682%" height="15" fill="rgb(219,169,10)" fg:x="205354675" fg:w="8563062"/><text x="83.4229%" y="1343.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8,563,062 samples, 3.47%)</title><rect x="83.1729%" y="1317" width="3.4682%" height="15" fill="rgb(244,229,43)" fg:x="205354675" fg:w="8563062"/><text x="83.4229%" y="1327.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8,563,062 samples, 3.47%)</title><rect x="83.1729%" y="1301" width="3.4682%" height="15" fill="rgb(254,38,20)" fg:x="205354675" fg:w="8563062"/><text x="83.4229%" y="1311.50">&lt;se..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,178,406 samples, 0.48%)</title><rect x="86.1639%" y="1285" width="0.4773%" height="15" fill="rgb(250,47,30)" fg:x="212739331" fg:w="1178406"/><text x="86.4139%" y="1295.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,178,406 samples, 0.48%)</title><rect x="86.1639%" y="1269" width="0.4773%" height="15" fill="rgb(224,124,36)" fg:x="212739331" fg:w="1178406"/><text x="86.4139%" y="1279.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (454,022 samples, 0.18%)</title><rect x="86.4573%" y="1253" width="0.1839%" height="15" fill="rgb(246,68,51)" fg:x="213463715" fg:w="454022"/><text x="86.7073%" y="1263.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (454,022 samples, 0.18%)</title><rect x="86.4573%" y="1237" width="0.1839%" height="15" fill="rgb(253,43,49)" fg:x="213463715" fg:w="454022"/><text x="86.7073%" y="1247.50"></text></g><g><title>serde::de::MapAccess::next_entry (20,211,436 samples, 8.19%)</title><rect x="79.2819%" y="1909" width="8.1861%" height="15" fill="rgb(219,54,36)" fg:x="195747607" fg:w="20211436"/><text x="79.5319%" y="1919.50">serde::de::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (20,211,436 samples, 8.19%)</title><rect x="79.2819%" y="1893" width="8.1861%" height="15" fill="rgb(227,133,34)" fg:x="195747607" fg:w="20211436"/><text x="79.5319%" y="1903.50">serde::de::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (19,120,208 samples, 7.74%)</title><rect x="79.7239%" y="1877" width="7.7441%" height="15" fill="rgb(247,227,15)" fg:x="196838835" fg:w="19120208"/><text x="79.9739%" y="1887.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19,120,208 samples, 7.74%)</title><rect x="79.7239%" y="1861" width="7.7441%" height="15" fill="rgb(229,96,14)" fg:x="196838835" fg:w="19120208"/><text x="79.9739%" y="1871.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,120,208 samples, 7.74%)</title><rect x="79.7239%" y="1845" width="7.7441%" height="15" fill="rgb(220,79,17)" fg:x="196838835" fg:w="19120208"/><text x="79.9739%" y="1855.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,120,208 samples, 7.74%)</title><rect x="79.7239%" y="1829" width="7.7441%" height="15" fill="rgb(205,131,53)" fg:x="196838835" fg:w="19120208"/><text x="79.9739%" y="1839.50">&lt;&amp;mut serde..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_any_number (2,041,306 samples, 0.83%)</title><rect x="86.6412%" y="1813" width="0.8268%" height="15" fill="rgb(209,50,29)" fg:x="213917737" fg:w="2041306"/><text x="86.8912%" y="1823.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1,086,627 samples, 0.44%)</title><rect x="87.0278%" y="1797" width="0.4401%" height="15" fill="rgb(245,86,46)" fg:x="214872416" fg:w="1086627"/><text x="87.2778%" y="1807.50"></text></g><g><title>serde::de::MapAccess::next_entry (24,422,616 samples, 9.89%)</title><rect x="79.2819%" y="2021" width="9.8917%" height="15" fill="rgb(235,66,46)" fg:x="195747607" fg:w="24422616"/><text x="79.5319%" y="2031.50">serde::de::Map..</text></g><g><title>serde::de::MapAccess::next_entry_seed (24,422,616 samples, 9.89%)</title><rect x="79.2819%" y="2005" width="9.8917%" height="15" fill="rgb(232,148,31)" fg:x="195747607" fg:w="24422616"/><text x="79.5319%" y="2015.50">serde::de::Map..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (24,422,616 samples, 9.89%)</title><rect x="79.2819%" y="1989" width="9.8917%" height="15" fill="rgb(217,149,8)" fg:x="195747607" fg:w="24422616"/><text x="79.5319%" y="1999.50">&lt;serde_json::d..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (24,422,616 samples, 9.89%)</title><rect x="79.2819%" y="1973" width="9.8917%" height="15" fill="rgb(209,183,11)" fg:x="195747607" fg:w="24422616"/><text x="79.5319%" y="1983.50">&lt;core::marker:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (24,422,616 samples, 9.89%)</title><rect x="79.2819%" y="1957" width="9.8917%" height="15" fill="rgb(208,55,20)" fg:x="195747607" fg:w="24422616"/><text x="79.5319%" y="1967.50">serde_json::va..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (24,422,616 samples, 9.89%)</title><rect x="79.2819%" y="1941" width="9.8917%" height="15" fill="rgb(218,39,14)" fg:x="195747607" fg:w="24422616"/><text x="79.5319%" y="1951.50">&lt;&amp;mut serde_js..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (24,422,616 samples, 9.89%)</title><rect x="79.2819%" y="1925" width="9.8917%" height="15" fill="rgb(216,169,33)" fg:x="195747607" fg:w="24422616"/><text x="79.5319%" y="1935.50">&lt;serde_json::v..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (4,211,180 samples, 1.71%)</title><rect x="87.4679%" y="1909" width="1.7056%" height="15" fill="rgb(233,80,24)" fg:x="215959043" fg:w="4211180"/><text x="87.7179%" y="1919.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3,190,338 samples, 1.29%)</title><rect x="87.8814%" y="1893" width="1.2922%" height="15" fill="rgb(213,179,31)" fg:x="216979885" fg:w="3190338"/><text x="88.1314%" y="1903.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2,089,386 samples, 0.85%)</title><rect x="88.3273%" y="1877" width="0.8462%" height="15" fill="rgb(209,19,5)" fg:x="218080837" fg:w="2089386"/><text x="88.5773%" y="1887.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (2,089,386 samples, 0.85%)</title><rect x="88.3273%" y="1861" width="0.8462%" height="15" fill="rgb(219,18,35)" fg:x="218080837" fg:w="2089386"/><text x="88.5773%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (990,555 samples, 0.40%)</title><rect x="88.7724%" y="1845" width="0.4012%" height="15" fill="rgb(209,169,16)" fg:x="219179668" fg:w="990555"/><text x="89.0224%" y="1855.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (990,555 samples, 0.40%)</title><rect x="88.7724%" y="1829" width="0.4012%" height="15" fill="rgb(245,90,51)" fg:x="219179668" fg:w="990555"/><text x="89.0224%" y="1839.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (990,555 samples, 0.40%)</title><rect x="88.7724%" y="1813" width="0.4012%" height="15" fill="rgb(220,99,45)" fg:x="219179668" fg:w="990555"/><text x="89.0224%" y="1823.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (990,555 samples, 0.40%)</title><rect x="88.7724%" y="1797" width="0.4012%" height="15" fill="rgb(249,89,25)" fg:x="219179668" fg:w="990555"/><text x="89.0224%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (990,555 samples, 0.40%)</title><rect x="88.7724%" y="1781" width="0.4012%" height="15" fill="rgb(239,193,0)" fg:x="219179668" fg:w="990555"/><text x="89.0224%" y="1791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (990,555 samples, 0.40%)</title><rect x="88.7724%" y="1765" width="0.4012%" height="15" fill="rgb(231,126,1)" fg:x="219179668" fg:w="990555"/><text x="89.0224%" y="1775.50"></text></g><g><title>alloc::alloc::alloc (990,555 samples, 0.40%)</title><rect x="88.7724%" y="1749" width="0.4012%" height="15" fill="rgb(243,166,3)" fg:x="219179668" fg:w="990555"/><text x="89.0224%" y="1759.50"></text></g><g><title>malloc (990,555 samples, 0.40%)</title><rect x="88.7724%" y="1733" width="0.4012%" height="15" fill="rgb(223,22,34)" fg:x="219179668" fg:w="990555"/><text x="89.0224%" y="1743.50"></text></g><g><title>benchmark::parse_web_layout_trace (28,468,014 samples, 11.53%)</title><rect x="78.0757%" y="2117" width="11.5301%" height="15" fill="rgb(251,52,51)" fg:x="192769455" fg:w="28468014"/><text x="78.3257%" y="2127.50">benchmark::parse_..</text></g><g><title>serde_json::de::from_str (26,374,248 samples, 10.68%)</title><rect x="78.9237%" y="2101" width="10.6821%" height="15" fill="rgb(221,165,28)" fg:x="194863221" fg:w="26374248"/><text x="79.1737%" y="2111.50">serde_json::de::..</text></g><g><title>serde_json::de::from_trait (26,374,248 samples, 10.68%)</title><rect x="78.9237%" y="2085" width="10.6821%" height="15" fill="rgb(218,121,47)" fg:x="194863221" fg:w="26374248"/><text x="79.1737%" y="2095.50">serde_json::de::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (26,374,248 samples, 10.68%)</title><rect x="78.9237%" y="2069" width="10.6821%" height="15" fill="rgb(209,120,9)" fg:x="194863221" fg:w="26374248"/><text x="79.1737%" y="2079.50">serde_json::valu..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (26,374,248 samples, 10.68%)</title><rect x="78.9237%" y="2053" width="10.6821%" height="15" fill="rgb(236,68,12)" fg:x="194863221" fg:w="26374248"/><text x="79.1737%" y="2063.50">&lt;&amp;mut serde_json..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (26,374,248 samples, 10.68%)</title><rect x="78.9237%" y="2037" width="10.6821%" height="15" fill="rgb(225,194,26)" fg:x="194863221" fg:w="26374248"/><text x="79.1737%" y="2047.50">&lt;serde_json::val..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,067,246 samples, 0.43%)</title><rect x="89.1736%" y="2021" width="0.4323%" height="15" fill="rgb(231,84,39)" fg:x="220170223" fg:w="1067246"/><text x="89.4236%" y="2031.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,067,246 samples, 0.43%)</title><rect x="89.1736%" y="2005" width="0.4323%" height="15" fill="rgb(210,11,45)" fg:x="220170223" fg:w="1067246"/><text x="89.4236%" y="2015.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,067,246 samples, 0.43%)</title><rect x="89.1736%" y="1989" width="0.4323%" height="15" fill="rgb(224,54,52)" fg:x="220170223" fg:w="1067246"/><text x="89.4236%" y="1999.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,067,246 samples, 0.43%)</title><rect x="89.1736%" y="1973" width="0.4323%" height="15" fill="rgb(238,102,14)" fg:x="220170223" fg:w="1067246"/><text x="89.4236%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1,067,246 samples, 0.43%)</title><rect x="89.1736%" y="1957" width="0.4323%" height="15" fill="rgb(243,160,52)" fg:x="220170223" fg:w="1067246"/><text x="89.4236%" y="1967.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1,067,246 samples, 0.43%)</title><rect x="89.1736%" y="1941" width="0.4323%" height="15" fill="rgb(216,114,19)" fg:x="220170223" fg:w="1067246"/><text x="89.4236%" y="1951.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1,067,246 samples, 0.43%)</title><rect x="89.1736%" y="1925" width="0.4323%" height="15" fill="rgb(244,166,37)" fg:x="220170223" fg:w="1067246"/><text x="89.4236%" y="1935.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (1,067,246 samples, 0.43%)</title><rect x="89.1736%" y="1909" width="0.4323%" height="15" fill="rgb(246,29,44)" fg:x="220170223" fg:w="1067246"/><text x="89.4236%" y="1919.50"></text></g><g><title>core::intrinsics::copy (1,067,246 samples, 0.43%)</title><rect x="89.1736%" y="1893" width="0.4323%" height="15" fill="rgb(215,56,53)" fg:x="220170223" fg:w="1067246"/><text x="89.4236%" y="1903.50"></text></g><g><title>[libc.so.6] (1,067,246 samples, 0.43%)</title><rect x="89.1736%" y="1877" width="0.4323%" height="15" fill="rgb(217,60,2)" fg:x="220170223" fg:w="1067246"/><text x="89.4236%" y="1887.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,384,262 samples, 0.56%)</title><rect x="90.1425%" y="325" width="0.5607%" height="15" fill="rgb(207,26,24)" fg:x="222562555" fg:w="1384262"/><text x="90.3925%" y="335.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,384,262 samples, 0.56%)</title><rect x="90.1425%" y="309" width="0.5607%" height="15" fill="rgb(252,210,15)" fg:x="222562555" fg:w="1384262"/><text x="90.3925%" y="319.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,384,262 samples, 0.56%)</title><rect x="90.1425%" y="293" width="0.5607%" height="15" fill="rgb(253,209,26)" fg:x="222562555" fg:w="1384262"/><text x="90.3925%" y="303.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,384,262 samples, 0.56%)</title><rect x="90.1425%" y="277" width="0.5607%" height="15" fill="rgb(238,170,14)" fg:x="222562555" fg:w="1384262"/><text x="90.3925%" y="287.50"></text></g><g><title>core::ptr::write (1,384,262 samples, 0.56%)</title><rect x="90.1425%" y="261" width="0.5607%" height="15" fill="rgb(216,178,15)" fg:x="222562555" fg:w="1384262"/><text x="90.3925%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="2101" width="1.6386%" height="15" fill="rgb(250,197,2)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="2085" width="1.6386%" height="15" fill="rgb(212,70,42)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="2069" width="1.6386%" height="15" fill="rgb(227,213,9)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="2053" width="1.6386%" height="15" fill="rgb(245,99,25)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="2037" width="1.6386%" height="15" fill="rgb(250,82,29)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="2021" width="1.6386%" height="15" fill="rgb(241,226,54)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="2031.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="2005" width="1.6386%" height="15" fill="rgb(221,99,41)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="2015.50"></text></g><g><title>core::mem::drop (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1989" width="1.6386%" height="15" fill="rgb(213,90,21)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1973" width="1.6386%" height="15" fill="rgb(205,208,24)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1957" width="1.6386%" height="15" fill="rgb(246,31,12)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1967.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1941" width="1.6386%" height="15" fill="rgb(213,154,6)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1925" width="1.6386%" height="15" fill="rgb(222,163,29)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1909" width="1.6386%" height="15" fill="rgb(227,201,8)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1919.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1893" width="1.6386%" height="15" fill="rgb(233,9,32)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1877" width="1.6386%" height="15" fill="rgb(217,54,24)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1861" width="1.6386%" height="15" fill="rgb(235,192,0)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1845" width="1.6386%" height="15" fill="rgb(235,45,9)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1829" width="1.6386%" height="15" fill="rgb(246,42,40)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1839.50"></text></g><g><title>core::mem::drop (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1813" width="1.6386%" height="15" fill="rgb(248,111,24)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1797" width="1.6386%" height="15" fill="rgb(249,65,22)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1781" width="1.6386%" height="15" fill="rgb(238,111,51)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1791.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1765" width="1.6386%" height="15" fill="rgb(250,118,22)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1749" width="1.6386%" height="15" fill="rgb(234,84,26)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1759.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1733" width="1.6386%" height="15" fill="rgb(243,172,12)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1743.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1717" width="1.6386%" height="15" fill="rgb(236,150,49)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,045,831 samples, 1.64%)</title><rect x="89.6058%" y="1701" width="1.6386%" height="15" fill="rgb(225,197,26)" fg:x="221237469" fg:w="4045831"/><text x="89.8558%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1685" width="1.1020%" height="15" fill="rgb(214,17,42)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1669" width="1.1020%" height="15" fill="rgb(224,165,40)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1653" width="1.1020%" height="15" fill="rgb(246,100,4)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1637" width="1.1020%" height="15" fill="rgb(222,103,0)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1621" width="1.1020%" height="15" fill="rgb(227,189,26)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1605" width="1.1020%" height="15" fill="rgb(214,202,17)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1589" width="1.1020%" height="15" fill="rgb(229,111,3)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1599.50"></text></g><g><title>core::mem::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1573" width="1.1020%" height="15" fill="rgb(229,172,15)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1557" width="1.1020%" height="15" fill="rgb(230,224,35)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1541" width="1.1020%" height="15" fill="rgb(251,141,6)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1525" width="1.1020%" height="15" fill="rgb(225,208,6)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1509" width="1.1020%" height="15" fill="rgb(246,181,16)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1519.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1493" width="1.1020%" height="15" fill="rgb(227,129,36)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1503.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1477" width="1.1020%" height="15" fill="rgb(248,117,24)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1461" width="1.1020%" height="15" fill="rgb(214,185,35)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1445" width="1.1020%" height="15" fill="rgb(236,150,34)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1429" width="1.1020%" height="15" fill="rgb(243,228,27)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1413" width="1.1020%" height="15" fill="rgb(245,77,44)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1397" width="1.1020%" height="15" fill="rgb(235,214,42)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1381" width="1.1020%" height="15" fill="rgb(221,74,3)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1365" width="1.1020%" height="15" fill="rgb(206,121,29)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1375.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1349" width="1.1020%" height="15" fill="rgb(249,131,53)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1359.50"></text></g><g><title>core::mem::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1333" width="1.1020%" height="15" fill="rgb(236,170,29)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1317" width="1.1020%" height="15" fill="rgb(247,96,15)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1327.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1301" width="1.1020%" height="15" fill="rgb(211,210,7)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1311.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1285" width="1.1020%" height="15" fill="rgb(240,88,50)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1269" width="1.1020%" height="15" fill="rgb(209,229,26)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1279.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1253" width="1.1020%" height="15" fill="rgb(210,68,23)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1263.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1237" width="1.1020%" height="15" fill="rgb(229,180,13)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1221" width="1.1020%" height="15" fill="rgb(236,53,44)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1205" width="1.1020%" height="15" fill="rgb(244,214,29)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1189" width="1.1020%" height="15" fill="rgb(220,75,29)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1173" width="1.1020%" height="15" fill="rgb(214,183,37)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1157" width="1.1020%" height="15" fill="rgb(239,117,29)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1141" width="1.1020%" height="15" fill="rgb(237,171,35)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1125" width="1.1020%" height="15" fill="rgb(229,178,53)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1109" width="1.1020%" height="15" fill="rgb(210,102,19)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1119.50"></text></g><g><title>core::mem::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1093" width="1.1020%" height="15" fill="rgb(235,127,22)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1077" width="1.1020%" height="15" fill="rgb(244,31,31)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1061" width="1.1020%" height="15" fill="rgb(231,43,21)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1045" width="1.1020%" height="15" fill="rgb(217,131,35)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1029" width="1.1020%" height="15" fill="rgb(221,149,4)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="1013" width="1.1020%" height="15" fill="rgb(232,170,28)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1023.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="997" width="1.1020%" height="15" fill="rgb(238,56,10)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="981" width="1.1020%" height="15" fill="rgb(235,196,14)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="965" width="1.1020%" height="15" fill="rgb(216,45,48)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="949" width="1.1020%" height="15" fill="rgb(238,213,17)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="933" width="1.1020%" height="15" fill="rgb(212,13,2)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="917" width="1.1020%" height="15" fill="rgb(240,114,20)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="901" width="1.1020%" height="15" fill="rgb(228,41,40)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="885" width="1.1020%" height="15" fill="rgb(244,132,35)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="869" width="1.1020%" height="15" fill="rgb(253,189,4)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="879.50"></text></g><g><title>core::mem::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="853" width="1.1020%" height="15" fill="rgb(224,37,19)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="837" width="1.1020%" height="15" fill="rgb(235,223,18)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="821" width="1.1020%" height="15" fill="rgb(235,163,25)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="831.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="805" width="1.1020%" height="15" fill="rgb(217,145,28)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="789" width="1.1020%" height="15" fill="rgb(223,223,32)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="773" width="1.1020%" height="15" fill="rgb(227,189,39)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="783.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="757" width="1.1020%" height="15" fill="rgb(248,10,22)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="741" width="1.1020%" height="15" fill="rgb(248,46,39)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="725" width="1.1020%" height="15" fill="rgb(248,113,48)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="709" width="1.1020%" height="15" fill="rgb(245,16,25)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="693" width="1.1020%" height="15" fill="rgb(249,152,16)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="677" width="1.1020%" height="15" fill="rgb(250,16,1)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="661" width="1.1020%" height="15" fill="rgb(249,138,3)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="645" width="1.1020%" height="15" fill="rgb(227,71,41)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="629" width="1.1020%" height="15" fill="rgb(209,184,23)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="639.50"></text></g><g><title>core::mem::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="613" width="1.1020%" height="15" fill="rgb(223,215,31)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="597" width="1.1020%" height="15" fill="rgb(210,146,28)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="581" width="1.1020%" height="15" fill="rgb(209,183,41)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="565" width="1.1020%" height="15" fill="rgb(209,224,45)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="549" width="1.1020%" height="15" fill="rgb(224,209,51)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="533" width="1.1020%" height="15" fill="rgb(223,17,39)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="517" width="1.1020%" height="15" fill="rgb(234,204,37)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="501" width="1.1020%" height="15" fill="rgb(236,120,5)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="485" width="1.1020%" height="15" fill="rgb(248,97,27)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="469" width="1.1020%" height="15" fill="rgb(240,66,17)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="453" width="1.1020%" height="15" fill="rgb(210,79,3)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="437" width="1.1020%" height="15" fill="rgb(214,176,27)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="421" width="1.1020%" height="15" fill="rgb(235,185,3)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="405" width="1.1020%" height="15" fill="rgb(227,24,12)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="389" width="1.1020%" height="15" fill="rgb(252,169,48)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="399.50"></text></g><g><title>core::mem::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="373" width="1.1020%" height="15" fill="rgb(212,65,1)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="357" width="1.1020%" height="15" fill="rgb(242,39,24)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,745 samples, 1.10%)</title><rect x="90.1425%" y="341" width="1.1020%" height="15" fill="rgb(249,32,23)" fg:x="222562555" fg:w="2720745"/><text x="90.3925%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="325" width="0.5413%" height="15" fill="rgb(251,195,23)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="309" width="0.5413%" height="15" fill="rgb(236,174,8)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="293" width="0.5413%" height="15" fill="rgb(220,197,8)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="303.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="277" width="0.5413%" height="15" fill="rgb(240,108,37)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="261" width="0.5413%" height="15" fill="rgb(232,176,24)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="245" width="0.5413%" height="15" fill="rgb(243,35,29)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="229" width="0.5413%" height="15" fill="rgb(210,37,18)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="213" width="0.5413%" height="15" fill="rgb(224,184,40)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="223.50"></text></g><g><title>core::mem::drop (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="197" width="0.5413%" height="15" fill="rgb(236,39,29)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="181" width="0.5413%" height="15" fill="rgb(232,48,39)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="165" width="0.5413%" height="15" fill="rgb(236,34,42)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="149" width="0.5413%" height="15" fill="rgb(243,106,37)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="159.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="133" width="0.5413%" height="15" fill="rgb(218,96,6)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="143.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="117" width="0.5413%" height="15" fill="rgb(235,130,12)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="127.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="101" width="0.5413%" height="15" fill="rgb(231,95,0)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="111.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="85" width="0.5413%" height="15" fill="rgb(228,12,23)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="95.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="69" width="0.5413%" height="15" fill="rgb(216,12,1)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="79.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="53" width="0.5413%" height="15" fill="rgb(219,59,3)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="63.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,336,483 samples, 0.54%)</title><rect x="90.7032%" y="37" width="0.5413%" height="15" fill="rgb(215,208,46)" fg:x="223946817" fg:w="1336483"/><text x="90.9532%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (8,165,223 samples, 3.31%)</title><rect x="89.6058%" y="2117" width="3.3071%" height="15" fill="rgb(254,224,29)" fg:x="221237469" fg:w="8165223"/><text x="89.8558%" y="2127.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (4,119,392 samples, 1.67%)</title><rect x="91.2445%" y="2101" width="1.6684%" height="15" fill="rgb(232,14,29)" fg:x="225283300" fg:w="4119392"/><text x="91.4945%" y="2111.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,119,392 samples, 1.67%)</title><rect x="91.2445%" y="2085" width="1.6684%" height="15" fill="rgb(208,45,52)" fg:x="225283300" fg:w="4119392"/><text x="91.4945%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,119,392 samples, 1.67%)</title><rect x="91.2445%" y="2069" width="1.6684%" height="15" fill="rgb(234,191,28)" fg:x="225283300" fg:w="4119392"/><text x="91.4945%" y="2079.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,119,392 samples, 1.67%)</title><rect x="91.2445%" y="2053" width="1.6684%" height="15" fill="rgb(244,67,43)" fg:x="225283300" fg:w="4119392"/><text x="91.4945%" y="2063.50"></text></g><g><title>alloc::alloc::dealloc (4,119,392 samples, 1.67%)</title><rect x="91.2445%" y="2037" width="1.6684%" height="15" fill="rgb(236,189,24)" fg:x="225283300" fg:w="4119392"/><text x="91.4945%" y="2047.50"></text></g><g><title>cfree (4,119,392 samples, 1.67%)</title><rect x="91.2445%" y="2021" width="1.6684%" height="15" fill="rgb(239,214,33)" fg:x="225283300" fg:w="4119392"/><text x="91.4945%" y="2031.50"></text></g><g><title>[libc.so.6] (4,119,392 samples, 1.67%)</title><rect x="91.2445%" y="2005" width="1.6684%" height="15" fill="rgb(226,176,41)" fg:x="225283300" fg:w="4119392"/><text x="91.4945%" y="2015.50"></text></g><g><title>[libc.so.6] (4,119,392 samples, 1.67%)</title><rect x="91.2445%" y="1989" width="1.6684%" height="15" fill="rgb(248,47,8)" fg:x="225283300" fg:w="4119392"/><text x="91.4945%" y="1999.50"></text></g><g><title>_start (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2405" width="89.3238%" height="15" fill="rgb(218,81,44)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2415.50">_start</text></g><g><title>__libc_start_main (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2389" width="89.3238%" height="15" fill="rgb(213,98,6)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2399.50">__libc_start_main</text></g><g><title>[libc.so.6] (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2373" width="89.3238%" height="15" fill="rgb(222,85,22)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2383.50">[libc.so.6]</text></g><g><title>main (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2357" width="89.3238%" height="15" fill="rgb(239,46,39)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2367.50">main</text></g><g><title>std::rt::lang_start_internal (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2341" width="89.3238%" height="15" fill="rgb(237,12,29)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2351.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2325" width="89.3238%" height="15" fill="rgb(214,77,8)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2335.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2309" width="89.3238%" height="15" fill="rgb(217,168,37)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2319.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2293" width="89.3238%" height="15" fill="rgb(221,217,23)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2303.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2277" width="89.3238%" height="15" fill="rgb(243,229,36)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2287.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2261" width="89.3238%" height="15" fill="rgb(251,163,40)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2271.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2245" width="89.3238%" height="15" fill="rgb(237,222,12)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2255.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2229" width="89.3238%" height="15" fill="rgb(248,132,6)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2239.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2213" width="89.3238%" height="15" fill="rgb(227,167,50)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2223.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2197" width="89.3238%" height="15" fill="rgb(242,84,37)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2207.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2181" width="89.3238%" height="15" fill="rgb(212,4,50)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2191.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2165" width="89.3238%" height="15" fill="rgb(230,228,32)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2175.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2149" width="89.3238%" height="15" fill="rgb(248,217,23)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2159.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (220,541,077 samples, 89.32%)</title><rect x="4.1574%" y="2133" width="89.3238%" height="15" fill="rgb(238,197,32)" fg:x="10264660" fg:w="220541077"/><text x="4.4074%" y="2143.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="2117" width="0.5683%" height="15" fill="rgb(236,106,1)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="2101" width="0.5683%" height="15" fill="rgb(219,228,13)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="2111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="2085" width="0.5683%" height="15" fill="rgb(238,30,35)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="2069" width="0.5683%" height="15" fill="rgb(236,70,23)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="2053" width="0.5683%" height="15" fill="rgb(249,104,48)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="2037" width="0.5683%" height="15" fill="rgb(254,117,50)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="2047.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="2021" width="0.5683%" height="15" fill="rgb(223,152,4)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="2005" width="0.5683%" height="15" fill="rgb(245,6,2)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1989" width="0.5683%" height="15" fill="rgb(249,150,24)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1973" width="0.5683%" height="15" fill="rgb(228,185,42)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1957" width="0.5683%" height="15" fill="rgb(226,39,33)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1941" width="0.5683%" height="15" fill="rgb(221,166,19)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1925" width="0.5683%" height="15" fill="rgb(209,109,2)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1909" width="0.5683%" height="15" fill="rgb(252,216,26)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1893" width="0.5683%" height="15" fill="rgb(227,173,36)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1877" width="0.5683%" height="15" fill="rgb(209,90,7)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1861" width="0.5683%" height="15" fill="rgb(250,194,11)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1845" width="0.5683%" height="15" fill="rgb(220,72,50)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1829" width="0.5683%" height="15" fill="rgb(222,106,48)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1813" width="0.5683%" height="15" fill="rgb(216,220,45)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1797" width="0.5683%" height="15" fill="rgb(234,112,18)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1781" width="0.5683%" height="15" fill="rgb(206,179,9)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1765" width="0.5683%" height="15" fill="rgb(215,115,40)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1749" width="0.5683%" height="15" fill="rgb(222,69,34)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1733" width="0.5683%" height="15" fill="rgb(209,161,10)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1717" width="0.5683%" height="15" fill="rgb(217,6,38)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1701" width="0.5683%" height="15" fill="rgb(229,229,48)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1685" width="0.5683%" height="15" fill="rgb(225,21,28)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1669" width="0.5683%" height="15" fill="rgb(206,33,13)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1653" width="0.5683%" height="15" fill="rgb(242,178,17)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1637" width="0.5683%" height="15" fill="rgb(220,162,5)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1621" width="0.5683%" height="15" fill="rgb(210,33,43)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1605" width="0.5683%" height="15" fill="rgb(216,116,54)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1589" width="0.5683%" height="15" fill="rgb(249,92,24)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1573" width="0.5683%" height="15" fill="rgb(231,189,14)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1557" width="0.5683%" height="15" fill="rgb(230,8,41)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1541" width="0.5683%" height="15" fill="rgb(249,7,27)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1525" width="0.5683%" height="15" fill="rgb(232,86,5)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1509" width="0.5683%" height="15" fill="rgb(224,175,18)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1493" width="0.5683%" height="15" fill="rgb(220,129,12)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1477" width="0.5683%" height="15" fill="rgb(210,19,36)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1461" width="0.5683%" height="15" fill="rgb(219,96,14)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1445" width="0.5683%" height="15" fill="rgb(249,106,1)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1429" width="0.5683%" height="15" fill="rgb(249,155,20)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1413" width="0.5683%" height="15" fill="rgb(244,168,9)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1397" width="0.5683%" height="15" fill="rgb(216,23,50)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1381" width="0.5683%" height="15" fill="rgb(224,219,20)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1365" width="0.5683%" height="15" fill="rgb(222,156,15)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1349" width="0.5683%" height="15" fill="rgb(231,97,17)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1333" width="0.5683%" height="15" fill="rgb(218,70,48)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1317" width="0.5683%" height="15" fill="rgb(212,196,52)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1301" width="0.5683%" height="15" fill="rgb(243,203,18)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1285" width="0.5683%" height="15" fill="rgb(252,125,41)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1269" width="0.5683%" height="15" fill="rgb(223,180,33)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1253" width="0.5683%" height="15" fill="rgb(254,159,46)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1237" width="0.5683%" height="15" fill="rgb(254,38,10)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1221" width="0.5683%" height="15" fill="rgb(208,217,32)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1205" width="0.5683%" height="15" fill="rgb(221,120,13)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1189" width="0.5683%" height="15" fill="rgb(246,54,52)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1173" width="0.5683%" height="15" fill="rgb(242,34,25)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1157" width="0.5683%" height="15" fill="rgb(247,209,9)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1141" width="0.5683%" height="15" fill="rgb(228,71,26)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1125" width="0.5683%" height="15" fill="rgb(222,145,49)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1109" width="0.5683%" height="15" fill="rgb(218,121,17)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1093" width="0.5683%" height="15" fill="rgb(244,50,7)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1077" width="0.5683%" height="15" fill="rgb(246,229,37)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1061" width="0.5683%" height="15" fill="rgb(225,18,5)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1045" width="0.5683%" height="15" fill="rgb(213,204,8)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1029" width="0.5683%" height="15" fill="rgb(238,103,6)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="1013" width="0.5683%" height="15" fill="rgb(222,25,35)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="997" width="0.5683%" height="15" fill="rgb(213,203,35)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="981" width="0.5683%" height="15" fill="rgb(221,79,53)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="965" width="0.5683%" height="15" fill="rgb(243,200,35)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="949" width="0.5683%" height="15" fill="rgb(248,60,25)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="933" width="0.5683%" height="15" fill="rgb(227,53,46)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="917" width="0.5683%" height="15" fill="rgb(216,120,32)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="901" width="0.5683%" height="15" fill="rgb(220,134,1)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="885" width="0.5683%" height="15" fill="rgb(237,168,5)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="869" width="0.5683%" height="15" fill="rgb(231,100,33)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="853" width="0.5683%" height="15" fill="rgb(236,177,47)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="837" width="0.5683%" height="15" fill="rgb(235,7,49)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="847.50"></text></g><g><title>cfree (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="821" width="0.5683%" height="15" fill="rgb(232,119,22)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="831.50"></text></g><g><title>[libc.so.6] (1,403,045 samples, 0.57%)</title><rect x="92.9129%" y="805" width="0.5683%" height="15" fill="rgb(254,73,53)" fg:x="229402692" fg:w="1403045"/><text x="93.1629%" y="815.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,335,553 samples, 0.54%)</title><rect x="93.4812%" y="2405" width="0.5409%" height="15" fill="rgb(251,35,20)" fg:x="230805737" fg:w="1335553"/><text x="93.7312%" y="2415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (908,845 samples, 0.37%)</title><rect x="94.0221%" y="2405" width="0.3681%" height="15" fill="rgb(241,119,20)" fg:x="232141290" fg:w="908845"/><text x="94.2721%" y="2415.50"></text></g><g><title>benchmark::clear_dirty_flags (1,290,421 samples, 0.52%)</title><rect x="94.3902%" y="2405" width="0.5226%" height="15" fill="rgb(207,102,14)" fg:x="233050135" fg:w="1290421"/><text x="94.6402%" y="2415.50"></text></g><g><title>benchmark::count_nodes (1,350,943 samples, 0.55%)</title><rect x="94.9128%" y="2405" width="0.5472%" height="15" fill="rgb(248,201,50)" fg:x="234340556" fg:w="1350943"/><text x="95.1628%" y="2415.50"></text></g><g><title>cfree (2,634,864 samples, 1.07%)</title><rect x="95.4600%" y="2405" width="1.0672%" height="15" fill="rgb(222,185,44)" fg:x="235691499" fg:w="2634864"/><text x="95.7100%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (4,025,347 samples, 1.63%)</title><rect x="96.5272%" y="2405" width="1.6303%" height="15" fill="rgb(218,107,18)" fg:x="238326363" fg:w="4025347"/><text x="96.7772%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,710,946 samples, 1.10%)</title><rect x="97.0595%" y="2389" width="1.0980%" height="15" fill="rgb(237,177,39)" fg:x="239640764" fg:w="2710946"/><text x="97.3095%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,710,946 samples, 1.10%)</title><rect x="97.0595%" y="2373" width="1.0980%" height="15" fill="rgb(246,69,6)" fg:x="239640764" fg:w="2710946"/><text x="97.3095%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,710,946 samples, 1.10%)</title><rect x="97.0595%" y="2357" width="1.0980%" height="15" fill="rgb(234,208,37)" fg:x="239640764" fg:w="2710946"/><text x="97.3095%" y="2367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,710,946 samples, 1.10%)</title><rect x="97.0595%" y="2341" width="1.0980%" height="15" fill="rgb(225,4,6)" fg:x="239640764" fg:w="2710946"/><text x="97.3095%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,710,946 samples, 1.10%)</title><rect x="97.0595%" y="2325" width="1.0980%" height="15" fill="rgb(233,45,0)" fg:x="239640764" fg:w="2710946"/><text x="97.3095%" y="2335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,710,946 samples, 1.10%)</title><rect x="97.0595%" y="2309" width="1.0980%" height="15" fill="rgb(226,136,5)" fg:x="239640764" fg:w="2710946"/><text x="97.3095%" y="2319.50"></text></g><g><title>alloc::alloc::dealloc (2,710,946 samples, 1.10%)</title><rect x="97.0595%" y="2293" width="1.0980%" height="15" fill="rgb(211,91,47)" fg:x="239640764" fg:w="2710946"/><text x="97.3095%" y="2303.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,654,050 samples, 1.07%)</title><rect x="98.1575%" y="2405" width="1.0749%" height="15" fill="rgb(242,88,51)" fg:x="242351710" fg:w="2654050"/><text x="98.4075%" y="2415.50"></text></g><g><title>malloc (1,022,411 samples, 0.41%)</title><rect x="99.2325%" y="2405" width="0.4141%" height="15" fill="rgb(230,91,28)" fg:x="245005760" fg:w="1022411"/><text x="99.4825%" y="2415.50"></text></g><g><title>all (246,900,814 samples, 100%)</title><rect x="0.0000%" y="2437" width="100.0000%" height="15" fill="rgb(254,186,29)" fg:x="0" fg:w="246900814"/><text x="0.2500%" y="2447.50"></text></g><g><title>benchmark (246,900,814 samples, 100.00%)</title><rect x="0.0000%" y="2421" width="100.0000%" height="15" fill="rgb(238,6,4)" fg:x="0" fg:w="246900814"/><text x="0.2500%" y="2431.50">benchmark</text></g><g><title>serde::de::Visitor::visit_borrowed_str (872,643 samples, 0.35%)</title><rect x="99.6466%" y="2405" width="0.3534%" height="15" fill="rgb(221,151,16)" fg:x="246028171" fg:w="872643"/><text x="99.8966%" y="2415.50"></text></g></svg></svg>