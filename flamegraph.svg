<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="3782" onload="init(evt)" viewBox="0 0 1200 3782" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="3782" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="3765.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="3765.00"> </text><svg id="frames" x="10" width="1180" total_samples="249761677"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,289,881 samples, 0.92%)</title><rect x="0.0000%" y="3701" width="0.9168%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2289881"/><text x="0.2500%" y="3711.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (823,532 samples, 0.33%)</title><rect x="0.9168%" y="3701" width="0.3297%" height="15" fill="rgb(217,0,24)" fg:x="2289881" fg:w="823532"/><text x="1.1668%" y="3711.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (987,053 samples, 0.40%)</title><rect x="1.2466%" y="3701" width="0.3952%" height="15" fill="rgb(221,193,54)" fg:x="3113413" fg:w="987053"/><text x="1.4966%" y="3711.50"></text></g><g><title>serde::de::MapAccess::next_entry (987,053 samples, 0.40%)</title><rect x="1.2466%" y="3685" width="0.3952%" height="15" fill="rgb(248,212,6)" fg:x="3113413" fg:w="987053"/><text x="1.4966%" y="3695.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (987,053 samples, 0.40%)</title><rect x="1.2466%" y="3669" width="0.3952%" height="15" fill="rgb(208,68,35)" fg:x="3113413" fg:w="987053"/><text x="1.4966%" y="3679.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.20%)</title><rect x="1.6418%" y="3701" width="0.2008%" height="15" fill="rgb(232,128,0)" fg:x="4100466" fg:w="501504"/><text x="1.8918%" y="3711.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.20%)</title><rect x="1.6418%" y="3685" width="0.2008%" height="15" fill="rgb(207,160,47)" fg:x="4100466" fg:w="501504"/><text x="1.8918%" y="3695.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.20%)</title><rect x="1.6418%" y="3669" width="0.2008%" height="15" fill="rgb(228,23,34)" fg:x="4100466" fg:w="501504"/><text x="1.8918%" y="3679.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.20%)</title><rect x="1.6418%" y="3653" width="0.2008%" height="15" fill="rgb(218,30,26)" fg:x="4100466" fg:w="501504"/><text x="1.8918%" y="3663.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.20%)</title><rect x="1.6418%" y="3637" width="0.2008%" height="15" fill="rgb(220,122,19)" fg:x="4100466" fg:w="501504"/><text x="1.8918%" y="3647.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.20%)</title><rect x="1.6418%" y="3621" width="0.2008%" height="15" fill="rgb(250,228,42)" fg:x="4100466" fg:w="501504"/><text x="1.8918%" y="3631.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.20%)</title><rect x="1.6418%" y="3605" width="0.2008%" height="15" fill="rgb(240,193,28)" fg:x="4100466" fg:w="501504"/><text x="1.8918%" y="3615.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.20%)</title><rect x="1.6418%" y="3589" width="0.2008%" height="15" fill="rgb(216,20,37)" fg:x="4100466" fg:w="501504"/><text x="1.8918%" y="3599.50"></text></g><g><title>[libc.so.6] (3,438,268 samples, 1.38%)</title><rect x="1.8425%" y="3701" width="1.3766%" height="15" fill="rgb(206,188,39)" fg:x="4601970" fg:w="3438268"/><text x="2.0925%" y="3711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,365,190 samples, 0.55%)</title><rect x="3.6416%" y="3669" width="0.5466%" height="15" fill="rgb(217,207,13)" fg:x="9095446" fg:w="1365190"/><text x="3.8916%" y="3679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,365,190 samples, 0.55%)</title><rect x="3.6416%" y="3653" width="0.5466%" height="15" fill="rgb(231,73,38)" fg:x="9095446" fg:w="1365190"/><text x="3.8916%" y="3663.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,251,317 samples, 0.50%)</title><rect x="4.1882%" y="3621" width="0.5010%" height="15" fill="rgb(225,20,46)" fg:x="10460636" fg:w="1251317"/><text x="4.4382%" y="3631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,970,672 samples, 1.59%)</title><rect x="3.6416%" y="3685" width="1.5898%" height="15" fill="rgb(210,31,41)" fg:x="9095446" fg:w="3970672"/><text x="3.8916%" y="3695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,605,482 samples, 1.04%)</title><rect x="4.1882%" y="3669" width="1.0432%" height="15" fill="rgb(221,200,47)" fg:x="10460636" fg:w="2605482"/><text x="4.4382%" y="3679.50"></text></g><g><title>alloc::slice::hack::to_vec (2,605,482 samples, 1.04%)</title><rect x="4.1882%" y="3653" width="1.0432%" height="15" fill="rgb(226,26,5)" fg:x="10460636" fg:w="2605482"/><text x="4.4382%" y="3663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,605,482 samples, 1.04%)</title><rect x="4.1882%" y="3637" width="1.0432%" height="15" fill="rgb(249,33,26)" fg:x="10460636" fg:w="2605482"/><text x="4.4382%" y="3647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,354,165 samples, 0.54%)</title><rect x="4.6893%" y="3621" width="0.5422%" height="15" fill="rgb(235,183,28)" fg:x="11711953" fg:w="1354165"/><text x="4.9393%" y="3631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,354,165 samples, 0.54%)</title><rect x="4.6893%" y="3605" width="0.5422%" height="15" fill="rgb(221,5,38)" fg:x="11711953" fg:w="1354165"/><text x="4.9393%" y="3615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,354,165 samples, 0.54%)</title><rect x="4.6893%" y="3589" width="0.5422%" height="15" fill="rgb(247,18,42)" fg:x="11711953" fg:w="1354165"/><text x="4.9393%" y="3599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,354,165 samples, 0.54%)</title><rect x="4.6893%" y="3573" width="0.5422%" height="15" fill="rgb(241,131,45)" fg:x="11711953" fg:w="1354165"/><text x="4.9393%" y="3583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,354,165 samples, 0.54%)</title><rect x="4.6893%" y="3557" width="0.5422%" height="15" fill="rgb(249,31,29)" fg:x="11711953" fg:w="1354165"/><text x="4.9393%" y="3567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,354,165 samples, 0.54%)</title><rect x="4.6893%" y="3541" width="0.5422%" height="15" fill="rgb(225,111,53)" fg:x="11711953" fg:w="1354165"/><text x="4.9393%" y="3551.50"></text></g><g><title>alloc::alloc::alloc (1,354,165 samples, 0.54%)</title><rect x="4.6893%" y="3525" width="0.5422%" height="15" fill="rgb(238,160,17)" fg:x="11711953" fg:w="1354165"/><text x="4.9393%" y="3535.50"></text></g><g><title>[unknown] (961,366 samples, 0.38%)</title><rect x="5.2314%" y="3685" width="0.3849%" height="15" fill="rgb(214,148,48)" fg:x="13066118" fg:w="961366"/><text x="5.4814%" y="3695.50"></text></g><g><title>[unknown] (961,366 samples, 0.38%)</title><rect x="5.2314%" y="3669" width="0.3849%" height="15" fill="rgb(232,36,49)" fg:x="13066118" fg:w="961366"/><text x="5.4814%" y="3679.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (961,366 samples, 0.38%)</title><rect x="5.2314%" y="3653" width="0.3849%" height="15" fill="rgb(209,103,24)" fg:x="13066118" fg:w="961366"/><text x="5.4814%" y="3663.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (882,842 samples, 0.35%)</title><rect x="5.6163%" y="3685" width="0.3535%" height="15" fill="rgb(229,88,8)" fg:x="14027484" fg:w="882842"/><text x="5.8663%" y="3695.50"></text></g><g><title>[unknown] (7,428,440 samples, 2.97%)</title><rect x="3.2192%" y="3701" width="2.9742%" height="15" fill="rgb(213,181,19)" fg:x="8040238" fg:w="7428440"/><text x="3.4692%" y="3711.50">[un..</text></g><g><title>serde_json::read::parse_escape (558,352 samples, 0.22%)</title><rect x="5.9698%" y="3685" width="0.2236%" height="15" fill="rgb(254,191,54)" fg:x="14910326" fg:w="558352"/><text x="6.2198%" y="3695.50"></text></g><g><title>serde_json::read::next_or_eof (558,352 samples, 0.22%)</title><rect x="5.9698%" y="3669" width="0.2236%" height="15" fill="rgb(241,83,37)" fg:x="14910326" fg:w="558352"/><text x="6.2198%" y="3679.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::next (558,352 samples, 0.22%)</title><rect x="5.9698%" y="3653" width="0.2236%" height="15" fill="rgb(233,36,39)" fg:x="14910326" fg:w="558352"/><text x="6.2198%" y="3663.50"></text></g><g><title>__rdl_dealloc (1,093,382 samples, 0.44%)</title><rect x="6.1934%" y="3701" width="0.4378%" height="15" fill="rgb(226,3,54)" fg:x="15468678" fg:w="1093382"/><text x="6.4434%" y="3711.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,093,382 samples, 0.44%)</title><rect x="6.1934%" y="3685" width="0.4378%" height="15" fill="rgb(245,192,40)" fg:x="15468678" fg:w="1093382"/><text x="6.4434%" y="3695.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (921,418 samples, 0.37%)</title><rect x="6.6311%" y="2965" width="0.3689%" height="15" fill="rgb(238,167,29)" fg:x="16562060" fg:w="921418"/><text x="6.8811%" y="2975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (921,418 samples, 0.37%)</title><rect x="6.6311%" y="2949" width="0.3689%" height="15" fill="rgb(232,182,51)" fg:x="16562060" fg:w="921418"/><text x="6.8811%" y="2959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (921,418 samples, 0.37%)</title><rect x="6.6311%" y="2933" width="0.3689%" height="15" fill="rgb(231,60,39)" fg:x="16562060" fg:w="921418"/><text x="6.8811%" y="2943.50"></text></g><g><title>alloc::slice::hack::to_vec (921,418 samples, 0.37%)</title><rect x="6.6311%" y="2917" width="0.3689%" height="15" fill="rgb(208,69,12)" fg:x="16562060" fg:w="921418"/><text x="6.8811%" y="2927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (921,418 samples, 0.37%)</title><rect x="6.6311%" y="2901" width="0.3689%" height="15" fill="rgb(235,93,37)" fg:x="16562060" fg:w="921418"/><text x="6.8811%" y="2911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (921,418 samples, 0.37%)</title><rect x="6.6311%" y="2885" width="0.3689%" height="15" fill="rgb(213,116,39)" fg:x="16562060" fg:w="921418"/><text x="6.8811%" y="2895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (921,418 samples, 0.37%)</title><rect x="6.6311%" y="2869" width="0.3689%" height="15" fill="rgb(222,207,29)" fg:x="16562060" fg:w="921418"/><text x="6.8811%" y="2879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (921,418 samples, 0.37%)</title><rect x="6.6311%" y="2853" width="0.3689%" height="15" fill="rgb(206,96,30)" fg:x="16562060" fg:w="921418"/><text x="6.8811%" y="2863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (921,418 samples, 0.37%)</title><rect x="6.6311%" y="2837" width="0.3689%" height="15" fill="rgb(218,138,4)" fg:x="16562060" fg:w="921418"/><text x="6.8811%" y="2847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (921,418 samples, 0.37%)</title><rect x="6.6311%" y="2821" width="0.3689%" height="15" fill="rgb(250,191,14)" fg:x="16562060" fg:w="921418"/><text x="6.8811%" y="2831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (921,418 samples, 0.37%)</title><rect x="6.6311%" y="2805" width="0.3689%" height="15" fill="rgb(239,60,40)" fg:x="16562060" fg:w="921418"/><text x="6.8811%" y="2815.50"></text></g><g><title>alloc::alloc::alloc (921,418 samples, 0.37%)</title><rect x="6.6311%" y="2789" width="0.3689%" height="15" fill="rgb(206,27,48)" fg:x="16562060" fg:w="921418"/><text x="6.8811%" y="2799.50"></text></g><g><title>malloc (921,418 samples, 0.37%)</title><rect x="6.6311%" y="2773" width="0.3689%" height="15" fill="rgb(225,35,8)" fg:x="16562060" fg:w="921418"/><text x="6.8811%" y="2783.50"></text></g><g><title>[libc.so.6] (921,418 samples, 0.37%)</title><rect x="6.6311%" y="2757" width="0.3689%" height="15" fill="rgb(250,213,24)" fg:x="16562060" fg:w="921418"/><text x="6.8811%" y="2767.50"></text></g><g><title>[libc.so.6] (921,418 samples, 0.37%)</title><rect x="6.6311%" y="2741" width="0.3689%" height="15" fill="rgb(247,123,22)" fg:x="16562060" fg:w="921418"/><text x="6.8811%" y="2751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,213,432 samples, 0.49%)</title><rect x="7.0001%" y="2533" width="0.4858%" height="15" fill="rgb(231,138,38)" fg:x="17483478" fg:w="1213432"/><text x="7.2501%" y="2543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,213,432 samples, 0.49%)</title><rect x="7.0001%" y="2517" width="0.4858%" height="15" fill="rgb(231,145,46)" fg:x="17483478" fg:w="1213432"/><text x="7.2501%" y="2527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,213,432 samples, 0.49%)</title><rect x="7.0001%" y="2501" width="0.4858%" height="15" fill="rgb(251,118,11)" fg:x="17483478" fg:w="1213432"/><text x="7.2501%" y="2511.50"></text></g><g><title>alloc::slice::hack::to_vec (1,213,432 samples, 0.49%)</title><rect x="7.0001%" y="2485" width="0.4858%" height="15" fill="rgb(217,147,25)" fg:x="17483478" fg:w="1213432"/><text x="7.2501%" y="2495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,213,432 samples, 0.49%)</title><rect x="7.0001%" y="2469" width="0.4858%" height="15" fill="rgb(247,81,37)" fg:x="17483478" fg:w="1213432"/><text x="7.2501%" y="2479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,213,432 samples, 0.49%)</title><rect x="7.0001%" y="2453" width="0.4858%" height="15" fill="rgb(209,12,38)" fg:x="17483478" fg:w="1213432"/><text x="7.2501%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,213,432 samples, 0.49%)</title><rect x="7.0001%" y="2437" width="0.4858%" height="15" fill="rgb(227,1,9)" fg:x="17483478" fg:w="1213432"/><text x="7.2501%" y="2447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,213,432 samples, 0.49%)</title><rect x="7.0001%" y="2421" width="0.4858%" height="15" fill="rgb(248,47,43)" fg:x="17483478" fg:w="1213432"/><text x="7.2501%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,213,432 samples, 0.49%)</title><rect x="7.0001%" y="2405" width="0.4858%" height="15" fill="rgb(221,10,30)" fg:x="17483478" fg:w="1213432"/><text x="7.2501%" y="2415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,213,432 samples, 0.49%)</title><rect x="7.0001%" y="2389" width="0.4858%" height="15" fill="rgb(210,229,1)" fg:x="17483478" fg:w="1213432"/><text x="7.2501%" y="2399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,213,432 samples, 0.49%)</title><rect x="7.0001%" y="2373" width="0.4858%" height="15" fill="rgb(222,148,37)" fg:x="17483478" fg:w="1213432"/><text x="7.2501%" y="2383.50"></text></g><g><title>alloc::alloc::alloc (1,213,432 samples, 0.49%)</title><rect x="7.0001%" y="2357" width="0.4858%" height="15" fill="rgb(234,67,33)" fg:x="17483478" fg:w="1213432"/><text x="7.2501%" y="2367.50"></text></g><g><title>malloc (1,213,432 samples, 0.49%)</title><rect x="7.0001%" y="2341" width="0.4858%" height="15" fill="rgb(247,98,35)" fg:x="17483478" fg:w="1213432"/><text x="7.2501%" y="2351.50"></text></g><g><title>[libc.so.6] (1,213,432 samples, 0.49%)</title><rect x="7.0001%" y="2325" width="0.4858%" height="15" fill="rgb(247,138,52)" fg:x="17483478" fg:w="1213432"/><text x="7.2501%" y="2335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,409,566 samples, 0.96%)</title><rect x="7.0001%" y="2677" width="0.9647%" height="15" fill="rgb(213,79,30)" fg:x="17483478" fg:w="2409566"/><text x="7.2501%" y="2687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,409,566 samples, 0.96%)</title><rect x="7.0001%" y="2661" width="0.9647%" height="15" fill="rgb(246,177,23)" fg:x="17483478" fg:w="2409566"/><text x="7.2501%" y="2671.50"></text></g><g><title>alloc::slice::hack::to_vec (2,409,566 samples, 0.96%)</title><rect x="7.0001%" y="2645" width="0.9647%" height="15" fill="rgb(230,62,27)" fg:x="17483478" fg:w="2409566"/><text x="7.2501%" y="2655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,409,566 samples, 0.96%)</title><rect x="7.0001%" y="2629" width="0.9647%" height="15" fill="rgb(216,154,8)" fg:x="17483478" fg:w="2409566"/><text x="7.2501%" y="2639.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,409,566 samples, 0.96%)</title><rect x="7.0001%" y="2613" width="0.9647%" height="15" fill="rgb(244,35,45)" fg:x="17483478" fg:w="2409566"/><text x="7.2501%" y="2623.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,409,566 samples, 0.96%)</title><rect x="7.0001%" y="2597" width="0.9647%" height="15" fill="rgb(251,115,12)" fg:x="17483478" fg:w="2409566"/><text x="7.2501%" y="2607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,409,566 samples, 0.96%)</title><rect x="7.0001%" y="2581" width="0.9647%" height="15" fill="rgb(240,54,50)" fg:x="17483478" fg:w="2409566"/><text x="7.2501%" y="2591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,409,566 samples, 0.96%)</title><rect x="7.0001%" y="2565" width="0.9647%" height="15" fill="rgb(233,84,52)" fg:x="17483478" fg:w="2409566"/><text x="7.2501%" y="2575.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,409,566 samples, 0.96%)</title><rect x="7.0001%" y="2549" width="0.9647%" height="15" fill="rgb(207,117,47)" fg:x="17483478" fg:w="2409566"/><text x="7.2501%" y="2559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2533" width="0.4789%" height="15" fill="rgb(249,43,39)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2517" width="0.4789%" height="15" fill="rgb(209,38,44)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2527.50"></text></g><g><title>alloc::slice::hack::to_vec (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2501" width="0.4789%" height="15" fill="rgb(236,212,23)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2485" width="0.4789%" height="15" fill="rgb(242,79,21)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2495.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2469" width="0.4789%" height="15" fill="rgb(211,96,35)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2479.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2453" width="0.4789%" height="15" fill="rgb(253,215,40)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2437" width="0.4789%" height="15" fill="rgb(211,81,21)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2421" width="0.4789%" height="15" fill="rgb(208,190,38)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2431.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2405" width="0.4789%" height="15" fill="rgb(235,213,38)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2389" width="0.4789%" height="15" fill="rgb(237,122,38)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2373" width="0.4789%" height="15" fill="rgb(244,218,35)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2383.50"></text></g><g><title>alloc::slice::hack::to_vec (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2357" width="0.4789%" height="15" fill="rgb(240,68,47)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2341" width="0.4789%" height="15" fill="rgb(210,16,53)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2351.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2325" width="0.4789%" height="15" fill="rgb(235,124,12)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2335.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2309" width="0.4789%" height="15" fill="rgb(224,169,11)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2293" width="0.4789%" height="15" fill="rgb(250,166,2)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2277" width="0.4789%" height="15" fill="rgb(242,216,29)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2287.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2261" width="0.4789%" height="15" fill="rgb(230,116,27)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2245" width="0.4789%" height="15" fill="rgb(228,99,48)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2229" width="0.4789%" height="15" fill="rgb(253,11,6)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2239.50"></text></g><g><title>alloc::slice::hack::to_vec (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2213" width="0.4789%" height="15" fill="rgb(247,143,39)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2197" width="0.4789%" height="15" fill="rgb(236,97,10)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2207.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2181" width="0.4789%" height="15" fill="rgb(233,208,19)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2191.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2165" width="0.4789%" height="15" fill="rgb(216,164,2)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2149" width="0.4789%" height="15" fill="rgb(220,129,5)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2133" width="0.4789%" height="15" fill="rgb(242,17,10)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2143.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2117" width="0.4789%" height="15" fill="rgb(242,107,0)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2101" width="0.4789%" height="15" fill="rgb(251,28,31)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2111.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2085" width="0.4789%" height="15" fill="rgb(233,223,10)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2095.50"></text></g><g><title>alloc::slice::hack::to_vec (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2069" width="0.4789%" height="15" fill="rgb(215,21,27)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2079.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2053" width="0.4789%" height="15" fill="rgb(232,23,21)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2063.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2037" width="0.4789%" height="15" fill="rgb(244,5,23)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2047.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2021" width="0.4789%" height="15" fill="rgb(226,81,46)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2031.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="2005" width="0.4789%" height="15" fill="rgb(247,70,30)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="2015.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1989" width="0.4789%" height="15" fill="rgb(212,68,19)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1999.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1973" width="0.4789%" height="15" fill="rgb(240,187,13)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1983.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1957" width="0.4789%" height="15" fill="rgb(223,113,26)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1967.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1941" width="0.4789%" height="15" fill="rgb(206,192,2)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1925" width="0.4789%" height="15" fill="rgb(241,108,4)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1935.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1909" width="0.4789%" height="15" fill="rgb(247,173,49)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1893" width="0.4789%" height="15" fill="rgb(224,114,35)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1877" width="0.4789%" height="15" fill="rgb(245,159,27)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1887.50"></text></g><g><title>alloc::slice::hack::to_vec (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1861" width="0.4789%" height="15" fill="rgb(245,172,44)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1845" width="0.4789%" height="15" fill="rgb(236,23,11)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1829" width="0.4789%" height="15" fill="rgb(205,117,38)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1813" width="0.4789%" height="15" fill="rgb(237,72,25)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1797" width="0.4789%" height="15" fill="rgb(244,70,9)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1781" width="0.4789%" height="15" fill="rgb(217,125,39)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1765" width="0.4789%" height="15" fill="rgb(235,36,10)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1749" width="0.4789%" height="15" fill="rgb(251,123,47)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1733" width="0.4789%" height="15" fill="rgb(221,13,13)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1743.50"></text></g><g><title>malloc (1,196,134 samples, 0.48%)</title><rect x="7.4859%" y="1717" width="0.4789%" height="15" fill="rgb(238,131,9)" fg:x="18696910" fg:w="1196134"/><text x="7.7359%" y="1727.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,588,519 samples, 1.84%)</title><rect x="6.6311%" y="2981" width="1.8372%" height="15" fill="rgb(211,50,8)" fg:x="16562060" fg:w="4588519"/><text x="6.8811%" y="2991.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2965" width="1.4682%" height="15" fill="rgb(245,182,24)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2949" width="1.4682%" height="15" fill="rgb(242,14,37)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2959.50"></text></g><g><title>alloc::slice::hack::to_vec (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2933" width="1.4682%" height="15" fill="rgb(246,228,12)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2917" width="1.4682%" height="15" fill="rgb(213,55,15)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2927.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2901" width="1.4682%" height="15" fill="rgb(209,9,3)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2911.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2885" width="1.4682%" height="15" fill="rgb(230,59,30)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2869" width="1.4682%" height="15" fill="rgb(209,121,21)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2879.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2853" width="1.4682%" height="15" fill="rgb(220,109,13)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2863.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2837" width="1.4682%" height="15" fill="rgb(232,18,1)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2821" width="1.4682%" height="15" fill="rgb(215,41,42)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2805" width="1.4682%" height="15" fill="rgb(224,123,36)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2815.50"></text></g><g><title>alloc::slice::hack::to_vec (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2789" width="1.4682%" height="15" fill="rgb(240,125,3)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2773" width="1.4682%" height="15" fill="rgb(205,98,50)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2783.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2757" width="1.4682%" height="15" fill="rgb(205,185,37)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2767.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2741" width="1.4682%" height="15" fill="rgb(238,207,15)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2725" width="1.4682%" height="15" fill="rgb(213,199,42)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2709" width="1.4682%" height="15" fill="rgb(235,201,11)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2719.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,667,101 samples, 1.47%)</title><rect x="7.0001%" y="2693" width="1.4682%" height="15" fill="rgb(207,46,11)" fg:x="17483478" fg:w="3667101"/><text x="7.2501%" y="2703.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,257,535 samples, 0.50%)</title><rect x="7.9648%" y="2677" width="0.5035%" height="15" fill="rgb(241,35,35)" fg:x="19893044" fg:w="1257535"/><text x="8.2148%" y="2687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,257,535 samples, 0.50%)</title><rect x="7.9648%" y="2661" width="0.5035%" height="15" fill="rgb(243,32,47)" fg:x="19893044" fg:w="1257535"/><text x="8.2148%" y="2671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,257,535 samples, 0.50%)</title><rect x="7.9648%" y="2645" width="0.5035%" height="15" fill="rgb(247,202,23)" fg:x="19893044" fg:w="1257535"/><text x="8.2148%" y="2655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (1,257,535 samples, 0.50%)</title><rect x="7.9648%" y="2629" width="0.5035%" height="15" fill="rgb(219,102,11)" fg:x="19893044" fg:w="1257535"/><text x="8.2148%" y="2639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1,257,535 samples, 0.50%)</title><rect x="7.9648%" y="2613" width="0.5035%" height="15" fill="rgb(243,110,44)" fg:x="19893044" fg:w="1257535"/><text x="8.2148%" y="2623.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1,257,535 samples, 0.50%)</title><rect x="7.9648%" y="2597" width="0.5035%" height="15" fill="rgb(222,74,54)" fg:x="19893044" fg:w="1257535"/><text x="8.2148%" y="2607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,257,535 samples, 0.50%)</title><rect x="7.9648%" y="2581" width="0.5035%" height="15" fill="rgb(216,99,12)" fg:x="19893044" fg:w="1257535"/><text x="8.2148%" y="2591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,257,535 samples, 0.50%)</title><rect x="7.9648%" y="2565" width="0.5035%" height="15" fill="rgb(226,22,26)" fg:x="19893044" fg:w="1257535"/><text x="8.2148%" y="2575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,257,535 samples, 0.50%)</title><rect x="7.9648%" y="2549" width="0.5035%" height="15" fill="rgb(217,163,10)" fg:x="19893044" fg:w="1257535"/><text x="8.2148%" y="2559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,257,535 samples, 0.50%)</title><rect x="7.9648%" y="2533" width="0.5035%" height="15" fill="rgb(213,25,53)" fg:x="19893044" fg:w="1257535"/><text x="8.2148%" y="2543.50"></text></g><g><title>alloc::alloc::alloc (1,257,535 samples, 0.50%)</title><rect x="7.9648%" y="2517" width="0.5035%" height="15" fill="rgb(252,105,26)" fg:x="19893044" fg:w="1257535"/><text x="8.2148%" y="2527.50"></text></g><g><title>malloc (1,257,535 samples, 0.50%)</title><rect x="7.9648%" y="2501" width="0.5035%" height="15" fill="rgb(220,39,43)" fg:x="19893044" fg:w="1257535"/><text x="8.2148%" y="2511.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3413" width="2.3620%" height="15" fill="rgb(229,68,48)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3423.50">&lt;b..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3397" width="2.3620%" height="15" fill="rgb(252,8,32)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3407.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3381" width="2.3620%" height="15" fill="rgb(223,20,43)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3391.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3365" width="2.3620%" height="15" fill="rgb(229,81,49)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3375.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3349" width="2.3620%" height="15" fill="rgb(236,28,36)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3359.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3333" width="2.3620%" height="15" fill="rgb(249,185,26)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3343.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3317" width="2.3620%" height="15" fill="rgb(249,174,33)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3327.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3301" width="2.3620%" height="15" fill="rgb(233,201,37)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3311.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3285" width="2.3620%" height="15" fill="rgb(221,78,26)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3295.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3269" width="2.3620%" height="15" fill="rgb(250,127,30)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3279.50">&lt;s..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3253" width="2.3620%" height="15" fill="rgb(230,49,44)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3263.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3237" width="2.3620%" height="15" fill="rgb(229,67,23)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3247.50">al..</text></g><g><title>alloc::slice::hack::to_vec (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3221" width="2.3620%" height="15" fill="rgb(249,83,47)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3231.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3205" width="2.3620%" height="15" fill="rgb(215,43,3)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3215.50">&lt;T..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3189" width="2.3620%" height="15" fill="rgb(238,154,13)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3199.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3173" width="2.3620%" height="15" fill="rgb(219,56,2)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3183.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3157" width="2.3620%" height="15" fill="rgb(233,0,4)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3167.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3141" width="2.3620%" height="15" fill="rgb(235,30,7)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3151.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3125" width="2.3620%" height="15" fill="rgb(250,79,13)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3135.50">&lt;s..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3109" width="2.3620%" height="15" fill="rgb(211,146,34)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3119.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3093" width="2.3620%" height="15" fill="rgb(228,22,38)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3103.50">al..</text></g><g><title>alloc::slice::hack::to_vec (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3077" width="2.3620%" height="15" fill="rgb(235,168,5)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3087.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3061" width="2.3620%" height="15" fill="rgb(221,155,16)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3071.50">&lt;T..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3045" width="2.3620%" height="15" fill="rgb(215,215,53)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3055.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3029" width="2.3620%" height="15" fill="rgb(223,4,10)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3039.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="3013" width="2.3620%" height="15" fill="rgb(234,103,6)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3023.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,899,261 samples, 2.36%)</title><rect x="6.6311%" y="2997" width="2.3620%" height="15" fill="rgb(227,97,0)" fg:x="16562060" fg:w="5899261"/><text x="6.8811%" y="3007.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (1,310,742 samples, 0.52%)</title><rect x="8.4683%" y="2981" width="0.5248%" height="15" fill="rgb(234,150,53)" fg:x="21150579" fg:w="1310742"/><text x="8.7183%" y="2991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1,310,742 samples, 0.52%)</title><rect x="8.4683%" y="2965" width="0.5248%" height="15" fill="rgb(228,201,54)" fg:x="21150579" fg:w="1310742"/><text x="8.7183%" y="2975.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1,310,742 samples, 0.52%)</title><rect x="8.4683%" y="2949" width="0.5248%" height="15" fill="rgb(222,22,37)" fg:x="21150579" fg:w="1310742"/><text x="8.7183%" y="2959.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,310,742 samples, 0.52%)</title><rect x="8.4683%" y="2933" width="0.5248%" height="15" fill="rgb(237,53,32)" fg:x="21150579" fg:w="1310742"/><text x="8.7183%" y="2943.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,310,742 samples, 0.52%)</title><rect x="8.4683%" y="2917" width="0.5248%" height="15" fill="rgb(233,25,53)" fg:x="21150579" fg:w="1310742"/><text x="8.7183%" y="2927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,310,742 samples, 0.52%)</title><rect x="8.4683%" y="2901" width="0.5248%" height="15" fill="rgb(210,40,34)" fg:x="21150579" fg:w="1310742"/><text x="8.7183%" y="2911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,310,742 samples, 0.52%)</title><rect x="8.4683%" y="2885" width="0.5248%" height="15" fill="rgb(241,220,44)" fg:x="21150579" fg:w="1310742"/><text x="8.7183%" y="2895.50"></text></g><g><title>alloc::alloc::alloc (1,310,742 samples, 0.52%)</title><rect x="8.4683%" y="2869" width="0.5248%" height="15" fill="rgb(235,28,35)" fg:x="21150579" fg:w="1310742"/><text x="8.7183%" y="2879.50"></text></g><g><title>malloc (1,310,742 samples, 0.52%)</title><rect x="8.4683%" y="2853" width="0.5248%" height="15" fill="rgb(210,56,17)" fg:x="21150579" fg:w="1310742"/><text x="8.7183%" y="2863.50"></text></g><g><title>[libc.so.6] (1,310,742 samples, 0.52%)</title><rect x="8.4683%" y="2837" width="0.5248%" height="15" fill="rgb(224,130,29)" fg:x="21150579" fg:w="1310742"/><text x="8.7183%" y="2847.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,326,261 samples, 0.53%)</title><rect x="8.9931%" y="3237" width="0.5310%" height="15" fill="rgb(235,212,8)" fg:x="22461321" fg:w="1326261"/><text x="9.2431%" y="3247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,326,261 samples, 0.53%)</title><rect x="8.9931%" y="3221" width="0.5310%" height="15" fill="rgb(223,33,50)" fg:x="22461321" fg:w="1326261"/><text x="9.2431%" y="3231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,326,261 samples, 0.53%)</title><rect x="8.9931%" y="3205" width="0.5310%" height="15" fill="rgb(219,149,13)" fg:x="22461321" fg:w="1326261"/><text x="9.2431%" y="3215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,326,261 samples, 0.53%)</title><rect x="8.9931%" y="3189" width="0.5310%" height="15" fill="rgb(250,156,29)" fg:x="22461321" fg:w="1326261"/><text x="9.2431%" y="3199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,326,261 samples, 0.53%)</title><rect x="8.9931%" y="3173" width="0.5310%" height="15" fill="rgb(216,193,19)" fg:x="22461321" fg:w="1326261"/><text x="9.2431%" y="3183.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,188,606 samples, 0.48%)</title><rect x="9.5241%" y="2581" width="0.4759%" height="15" fill="rgb(216,135,14)" fg:x="23787582" fg:w="1188606"/><text x="9.7741%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,188,606 samples, 0.48%)</title><rect x="9.5241%" y="2565" width="0.4759%" height="15" fill="rgb(241,47,5)" fg:x="23787582" fg:w="1188606"/><text x="9.7741%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,188,606 samples, 0.48%)</title><rect x="9.5241%" y="2549" width="0.4759%" height="15" fill="rgb(233,42,35)" fg:x="23787582" fg:w="1188606"/><text x="9.7741%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,188,606 samples, 0.48%)</title><rect x="9.5241%" y="2533" width="0.4759%" height="15" fill="rgb(231,13,6)" fg:x="23787582" fg:w="1188606"/><text x="9.7741%" y="2543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,188,606 samples, 0.48%)</title><rect x="9.5241%" y="2517" width="0.4759%" height="15" fill="rgb(207,181,40)" fg:x="23787582" fg:w="1188606"/><text x="9.7741%" y="2527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,188,606 samples, 0.48%)</title><rect x="9.5241%" y="2501" width="0.4759%" height="15" fill="rgb(254,173,49)" fg:x="23787582" fg:w="1188606"/><text x="9.7741%" y="2511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,188,606 samples, 0.48%)</title><rect x="9.5241%" y="2485" width="0.4759%" height="15" fill="rgb(221,1,38)" fg:x="23787582" fg:w="1188606"/><text x="9.7741%" y="2495.50"></text></g><g><title>alloc::alloc::dealloc (1,188,606 samples, 0.48%)</title><rect x="9.5241%" y="2469" width="0.4759%" height="15" fill="rgb(206,124,46)" fg:x="23787582" fg:w="1188606"/><text x="9.7741%" y="2479.50"></text></g><g><title>cfree (1,188,606 samples, 0.48%)</title><rect x="9.5241%" y="2453" width="0.4759%" height="15" fill="rgb(249,21,11)" fg:x="23787582" fg:w="1188606"/><text x="9.7741%" y="2463.50"></text></g><g><title>[libc.so.6] (1,188,606 samples, 0.48%)</title><rect x="9.5241%" y="2437" width="0.4759%" height="15" fill="rgb(222,201,40)" fg:x="23787582" fg:w="1188606"/><text x="9.7741%" y="2447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (3,758,891 samples, 1.50%)</title><rect x="8.9931%" y="3413" width="1.5050%" height="15" fill="rgb(235,61,29)" fg:x="22461321" fg:w="3758891"/><text x="9.2431%" y="3423.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (3,758,891 samples, 1.50%)</title><rect x="8.9931%" y="3397" width="1.5050%" height="15" fill="rgb(219,207,3)" fg:x="22461321" fg:w="3758891"/><text x="9.2431%" y="3407.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (3,758,891 samples, 1.50%)</title><rect x="8.9931%" y="3381" width="1.5050%" height="15" fill="rgb(222,56,46)" fg:x="22461321" fg:w="3758891"/><text x="9.2431%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,758,891 samples, 1.50%)</title><rect x="8.9931%" y="3365" width="1.5050%" height="15" fill="rgb(239,76,54)" fg:x="22461321" fg:w="3758891"/><text x="9.2431%" y="3375.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,758,891 samples, 1.50%)</title><rect x="8.9931%" y="3349" width="1.5050%" height="15" fill="rgb(231,124,27)" fg:x="22461321" fg:w="3758891"/><text x="9.2431%" y="3359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,758,891 samples, 1.50%)</title><rect x="8.9931%" y="3333" width="1.5050%" height="15" fill="rgb(249,195,6)" fg:x="22461321" fg:w="3758891"/><text x="9.2431%" y="3343.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,758,891 samples, 1.50%)</title><rect x="8.9931%" y="3317" width="1.5050%" height="15" fill="rgb(237,174,47)" fg:x="22461321" fg:w="3758891"/><text x="9.2431%" y="3327.50"></text></g><g><title>core::mem::drop (3,758,891 samples, 1.50%)</title><rect x="8.9931%" y="3301" width="1.5050%" height="15" fill="rgb(206,201,31)" fg:x="22461321" fg:w="3758891"/><text x="9.2431%" y="3311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,758,891 samples, 1.50%)</title><rect x="8.9931%" y="3285" width="1.5050%" height="15" fill="rgb(231,57,52)" fg:x="22461321" fg:w="3758891"/><text x="9.2431%" y="3295.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,758,891 samples, 1.50%)</title><rect x="8.9931%" y="3269" width="1.5050%" height="15" fill="rgb(248,177,22)" fg:x="22461321" fg:w="3758891"/><text x="9.2431%" y="3279.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,758,891 samples, 1.50%)</title><rect x="8.9931%" y="3253" width="1.5050%" height="15" fill="rgb(215,211,37)" fg:x="22461321" fg:w="3758891"/><text x="9.2431%" y="3263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="3237" width="0.9740%" height="15" fill="rgb(241,128,51)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3247.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="3221" width="0.9740%" height="15" fill="rgb(227,165,31)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3231.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="3205" width="0.9740%" height="15" fill="rgb(228,167,24)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3215.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="3189" width="0.9740%" height="15" fill="rgb(228,143,12)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="3173" width="0.9740%" height="15" fill="rgb(249,149,8)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="3157" width="0.9740%" height="15" fill="rgb(243,35,44)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3167.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="3141" width="0.9740%" height="15" fill="rgb(246,89,9)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3151.50"></text></g><g><title>core::mem::drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="3125" width="0.9740%" height="15" fill="rgb(233,213,13)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="3109" width="0.9740%" height="15" fill="rgb(233,141,41)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3119.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="3093" width="0.9740%" height="15" fill="rgb(239,167,4)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3103.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="3077" width="0.9740%" height="15" fill="rgb(209,217,16)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="3061" width="0.9740%" height="15" fill="rgb(219,88,35)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3071.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="3045" width="0.9740%" height="15" fill="rgb(220,193,23)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3055.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="3029" width="0.9740%" height="15" fill="rgb(230,90,52)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3039.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="3013" width="0.9740%" height="15" fill="rgb(252,106,19)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2997" width="0.9740%" height="15" fill="rgb(206,74,20)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="3007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2981" width="0.9740%" height="15" fill="rgb(230,138,44)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2965" width="0.9740%" height="15" fill="rgb(235,182,43)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2975.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2949" width="0.9740%" height="15" fill="rgb(242,16,51)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2959.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2933" width="0.9740%" height="15" fill="rgb(248,9,4)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2917" width="0.9740%" height="15" fill="rgb(210,31,22)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2927.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2901" width="0.9740%" height="15" fill="rgb(239,54,39)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2911.50"></text></g><g><title>core::mem::drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2885" width="0.9740%" height="15" fill="rgb(230,99,41)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2869" width="0.9740%" height="15" fill="rgb(253,106,12)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2879.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2853" width="0.9740%" height="15" fill="rgb(213,46,41)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2863.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2837" width="0.9740%" height="15" fill="rgb(215,133,35)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2821" width="0.9740%" height="15" fill="rgb(213,28,5)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2831.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2805" width="0.9740%" height="15" fill="rgb(215,77,49)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2815.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2789" width="0.9740%" height="15" fill="rgb(248,100,22)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2773" width="0.9740%" height="15" fill="rgb(208,67,9)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2757" width="0.9740%" height="15" fill="rgb(219,133,21)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2741" width="0.9740%" height="15" fill="rgb(246,46,29)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2725" width="0.9740%" height="15" fill="rgb(246,185,52)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2709" width="0.9740%" height="15" fill="rgb(252,136,11)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2693" width="0.9740%" height="15" fill="rgb(219,138,53)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2677" width="0.9740%" height="15" fill="rgb(211,51,23)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2661" width="0.9740%" height="15" fill="rgb(247,221,28)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2671.50"></text></g><g><title>core::mem::drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2645" width="0.9740%" height="15" fill="rgb(251,222,45)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2629" width="0.9740%" height="15" fill="rgb(217,162,53)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2639.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2613" width="0.9740%" height="15" fill="rgb(229,93,14)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,432,630 samples, 0.97%)</title><rect x="9.5241%" y="2597" width="0.9740%" height="15" fill="rgb(209,67,49)" fg:x="23787582" fg:w="2432630"/><text x="9.7741%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2581" width="0.4981%" height="15" fill="rgb(213,87,29)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2591.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2565" width="0.4981%" height="15" fill="rgb(205,151,52)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2575.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2549" width="0.4981%" height="15" fill="rgb(253,215,39)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2533" width="0.4981%" height="15" fill="rgb(221,220,41)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2517" width="0.4981%" height="15" fill="rgb(218,133,21)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2501" width="0.4981%" height="15" fill="rgb(221,193,43)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2485" width="0.4981%" height="15" fill="rgb(240,128,52)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2469" width="0.4981%" height="15" fill="rgb(253,114,12)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2453" width="0.4981%" height="15" fill="rgb(215,223,47)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2437" width="0.4981%" height="15" fill="rgb(248,225,23)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2421" width="0.4981%" height="15" fill="rgb(250,108,0)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2431.50"></text></g><g><title>core::mem::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2405" width="0.4981%" height="15" fill="rgb(228,208,7)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2389" width="0.4981%" height="15" fill="rgb(244,45,10)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2373" width="0.4981%" height="15" fill="rgb(207,125,25)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2357" width="0.4981%" height="15" fill="rgb(210,195,18)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2341" width="0.4981%" height="15" fill="rgb(249,80,12)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2351.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2325" width="0.4981%" height="15" fill="rgb(221,65,9)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2335.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2309" width="0.4981%" height="15" fill="rgb(235,49,36)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2293" width="0.4981%" height="15" fill="rgb(225,32,20)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2277" width="0.4981%" height="15" fill="rgb(215,141,46)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2261" width="0.4981%" height="15" fill="rgb(250,160,47)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2245" width="0.4981%" height="15" fill="rgb(216,222,40)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2229" width="0.4981%" height="15" fill="rgb(234,217,39)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2213" width="0.4981%" height="15" fill="rgb(207,178,40)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2197" width="0.4981%" height="15" fill="rgb(221,136,13)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2181" width="0.4981%" height="15" fill="rgb(249,199,10)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2191.50"></text></g><g><title>core::mem::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2165" width="0.4981%" height="15" fill="rgb(249,222,13)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2149" width="0.4981%" height="15" fill="rgb(244,185,38)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2133" width="0.4981%" height="15" fill="rgb(236,202,9)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2143.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2117" width="0.4981%" height="15" fill="rgb(250,229,37)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2101" width="0.4981%" height="15" fill="rgb(206,174,23)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2111.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2085" width="0.4981%" height="15" fill="rgb(211,33,43)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2095.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2069" width="0.4981%" height="15" fill="rgb(245,58,50)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2053" width="0.4981%" height="15" fill="rgb(244,68,36)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2037" width="0.4981%" height="15" fill="rgb(232,229,15)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2047.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2021" width="0.4981%" height="15" fill="rgb(254,30,23)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="2005" width="0.4981%" height="15" fill="rgb(235,160,14)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1989" width="0.4981%" height="15" fill="rgb(212,155,44)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1973" width="0.4981%" height="15" fill="rgb(226,2,50)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1957" width="0.4981%" height="15" fill="rgb(234,177,6)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1967.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1941" width="0.4981%" height="15" fill="rgb(217,24,9)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1951.50"></text></g><g><title>core::mem::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1925" width="0.4981%" height="15" fill="rgb(220,13,46)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1909" width="0.4981%" height="15" fill="rgb(239,221,27)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1893" width="0.4981%" height="15" fill="rgb(222,198,25)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1903.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1877" width="0.4981%" height="15" fill="rgb(211,99,13)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1861" width="0.4981%" height="15" fill="rgb(232,111,31)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1845" width="0.4981%" height="15" fill="rgb(245,82,37)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1855.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1829" width="0.4981%" height="15" fill="rgb(227,149,46)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1813" width="0.4981%" height="15" fill="rgb(218,36,50)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1797" width="0.4981%" height="15" fill="rgb(226,80,48)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1781" width="0.4981%" height="15" fill="rgb(238,224,15)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1765" width="0.4981%" height="15" fill="rgb(241,136,10)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1749" width="0.4981%" height="15" fill="rgb(208,32,45)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1733" width="0.4981%" height="15" fill="rgb(207,135,9)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1717" width="0.4981%" height="15" fill="rgb(206,86,44)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1727.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1701" width="0.4981%" height="15" fill="rgb(245,177,15)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1711.50"></text></g><g><title>core::mem::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1685" width="0.4981%" height="15" fill="rgb(206,64,50)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1669" width="0.4981%" height="15" fill="rgb(234,36,40)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1653" width="0.4981%" height="15" fill="rgb(213,64,8)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1663.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1637" width="0.4981%" height="15" fill="rgb(210,75,36)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1621" width="0.4981%" height="15" fill="rgb(229,88,21)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1605" width="0.4981%" height="15" fill="rgb(252,204,47)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1615.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1589" width="0.4981%" height="15" fill="rgb(208,77,27)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1573" width="0.4981%" height="15" fill="rgb(221,76,26)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1557" width="0.4981%" height="15" fill="rgb(225,139,18)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1541" width="0.4981%" height="15" fill="rgb(230,137,11)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1551.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1525" width="0.4981%" height="15" fill="rgb(212,28,1)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1535.50"></text></g><g><title>core::mem::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1509" width="0.4981%" height="15" fill="rgb(248,164,17)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1493" width="0.4981%" height="15" fill="rgb(222,171,42)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1477" width="0.4981%" height="15" fill="rgb(243,84,45)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1487.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1461" width="0.4981%" height="15" fill="rgb(252,49,23)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1471.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1445" width="0.4981%" height="15" fill="rgb(215,19,7)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1429" width="0.4981%" height="15" fill="rgb(238,81,41)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1413" width="0.4981%" height="15" fill="rgb(210,199,37)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1397" width="0.4981%" height="15" fill="rgb(244,192,49)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1407.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1381" width="0.4981%" height="15" fill="rgb(226,211,11)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1365" width="0.4981%" height="15" fill="rgb(236,162,54)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1349" width="0.4981%" height="15" fill="rgb(220,229,9)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1359.50"></text></g><g><title>alloc::alloc::dealloc (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1333" width="0.4981%" height="15" fill="rgb(250,87,22)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1343.50"></text></g><g><title>cfree (1,244,024 samples, 0.50%)</title><rect x="10.0000%" y="1317" width="0.4981%" height="15" fill="rgb(239,43,17)" fg:x="24976188" fg:w="1244024"/><text x="10.2500%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1,212,584 samples, 0.49%)</title><rect x="10.4981%" y="3397" width="0.4855%" height="15" fill="rgb(231,177,25)" fg:x="26220212" fg:w="1212584"/><text x="10.7481%" y="3407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,212,584 samples, 0.49%)</title><rect x="10.4981%" y="3381" width="0.4855%" height="15" fill="rgb(219,179,1)" fg:x="26220212" fg:w="1212584"/><text x="10.7481%" y="3391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,212,584 samples, 0.49%)</title><rect x="10.4981%" y="3365" width="0.4855%" height="15" fill="rgb(238,219,53)" fg:x="26220212" fg:w="1212584"/><text x="10.7481%" y="3375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,212,584 samples, 0.49%)</title><rect x="10.4981%" y="3349" width="0.4855%" height="15" fill="rgb(232,167,36)" fg:x="26220212" fg:w="1212584"/><text x="10.7481%" y="3359.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,212,584 samples, 0.49%)</title><rect x="10.4981%" y="3333" width="0.4855%" height="15" fill="rgb(244,19,51)" fg:x="26220212" fg:w="1212584"/><text x="10.7481%" y="3343.50"></text></g><g><title>malloc (1,212,584 samples, 0.49%)</title><rect x="10.4981%" y="3317" width="0.4855%" height="15" fill="rgb(224,6,22)" fg:x="26220212" fg:w="1212584"/><text x="10.7481%" y="3327.50"></text></g><g><title>[libc.so.6] (1,212,584 samples, 0.49%)</title><rect x="10.4981%" y="3301" width="0.4855%" height="15" fill="rgb(224,145,5)" fg:x="26220212" fg:w="1212584"/><text x="10.7481%" y="3311.50"></text></g><g><title>[libc.so.6] (1,212,584 samples, 0.49%)</title><rect x="10.4981%" y="3285" width="0.4855%" height="15" fill="rgb(234,130,49)" fg:x="26220212" fg:w="1212584"/><text x="10.7481%" y="3295.50"></text></g><g><title>benchmark::extract_path_from_command (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3397" width="1.0990%" height="15" fill="rgb(254,6,2)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3407.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3381" width="1.0990%" height="15" fill="rgb(208,96,46)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3391.50"></text></g><g><title>benchmark::extract_path_from_command::_{{closure}} (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3365" width="1.0990%" height="15" fill="rgb(239,3,39)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3349" width="1.0990%" height="15" fill="rgb(233,210,1)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3333" width="1.0990%" height="15" fill="rgb(244,137,37)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3317" width="1.0990%" height="15" fill="rgb(240,136,2)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3301" width="1.0990%" height="15" fill="rgb(239,18,37)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3285" width="1.0990%" height="15" fill="rgb(218,185,22)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3269" width="1.0990%" height="15" fill="rgb(225,218,4)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3253" width="1.0990%" height="15" fill="rgb(230,182,32)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3237" width="1.0990%" height="15" fill="rgb(242,56,43)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3221" width="1.0990%" height="15" fill="rgb(233,99,24)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3205" width="1.0990%" height="15" fill="rgb(234,209,42)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3189" width="1.0990%" height="15" fill="rgb(227,7,12)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3199.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3173" width="1.0990%" height="15" fill="rgb(245,203,43)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3157" width="1.0990%" height="15" fill="rgb(238,205,33)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3167.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3141" width="1.0990%" height="15" fill="rgb(231,56,7)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3151.50"></text></g><g><title>alloc::alloc::realloc (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3125" width="1.0990%" height="15" fill="rgb(244,186,29)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3135.50"></text></g><g><title>realloc (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3109" width="1.0990%" height="15" fill="rgb(234,111,31)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3119.50"></text></g><g><title>[libc.so.6] (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3093" width="1.0990%" height="15" fill="rgb(241,149,10)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3103.50"></text></g><g><title>[libc.so.6] (2,745,003 samples, 1.10%)</title><rect x="10.9836%" y="3077" width="1.0990%" height="15" fill="rgb(249,206,44)" fg:x="27432796" fg:w="2745003"/><text x="11.2336%" y="3087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6,314,037 samples, 2.53%)</title><rect x="12.0826%" y="3381" width="2.5280%" height="15" fill="rgb(251,153,30)" fg:x="30177799" fg:w="6314037"/><text x="12.3326%" y="3391.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6,314,037 samples, 2.53%)</title><rect x="12.0826%" y="3365" width="2.5280%" height="15" fill="rgb(239,152,38)" fg:x="30177799" fg:w="6314037"/><text x="12.3326%" y="3375.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (6,314,037 samples, 2.53%)</title><rect x="12.0826%" y="3349" width="2.5280%" height="15" fill="rgb(249,139,47)" fg:x="30177799" fg:w="6314037"/><text x="12.3326%" y="3359.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (6,314,037 samples, 2.53%)</title><rect x="12.0826%" y="3333" width="2.5280%" height="15" fill="rgb(244,64,35)" fg:x="30177799" fg:w="6314037"/><text x="12.3326%" y="3343.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (6,314,037 samples, 2.53%)</title><rect x="12.0826%" y="3317" width="2.5280%" height="15" fill="rgb(216,46,15)" fg:x="30177799" fg:w="6314037"/><text x="12.3326%" y="3327.50">al..</text></g><g><title>malloc (6,314,037 samples, 2.53%)</title><rect x="12.0826%" y="3301" width="2.5280%" height="15" fill="rgb(250,74,19)" fg:x="30177799" fg:w="6314037"/><text x="12.3326%" y="3311.50">ma..</text></g><g><title>[libc.so.6] (6,314,037 samples, 2.53%)</title><rect x="12.0826%" y="3285" width="2.5280%" height="15" fill="rgb(249,42,33)" fg:x="30177799" fg:w="6314037"/><text x="12.3326%" y="3295.50">[l..</text></g><g><title>[libc.so.6] (6,314,037 samples, 2.53%)</title><rect x="12.0826%" y="3269" width="2.5280%" height="15" fill="rgb(242,149,17)" fg:x="30177799" fg:w="6314037"/><text x="12.3326%" y="3279.50">[l..</text></g><g><title>[libc.so.6] (2,748,055 samples, 1.10%)</title><rect x="13.5104%" y="3253" width="1.1003%" height="15" fill="rgb(244,29,21)" fg:x="33743781" fg:w="2748055"/><text x="13.7604%" y="3263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,112,759 samples, 0.45%)</title><rect x="14.6107%" y="3365" width="0.4455%" height="15" fill="rgb(220,130,37)" fg:x="36491836" fg:w="1112759"/><text x="14.8607%" y="3375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,112,759 samples, 0.45%)</title><rect x="14.6107%" y="3349" width="0.4455%" height="15" fill="rgb(211,67,2)" fg:x="36491836" fg:w="1112759"/><text x="14.8607%" y="3359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,112,759 samples, 0.45%)</title><rect x="14.6107%" y="3333" width="0.4455%" height="15" fill="rgb(235,68,52)" fg:x="36491836" fg:w="1112759"/><text x="14.8607%" y="3343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,112,759 samples, 0.45%)</title><rect x="14.6107%" y="3317" width="0.4455%" height="15" fill="rgb(246,142,3)" fg:x="36491836" fg:w="1112759"/><text x="14.8607%" y="3327.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,112,759 samples, 0.45%)</title><rect x="14.6107%" y="3301" width="0.4455%" height="15" fill="rgb(241,25,7)" fg:x="36491836" fg:w="1112759"/><text x="14.8607%" y="3311.50"></text></g><g><title>malloc (1,112,759 samples, 0.45%)</title><rect x="14.6107%" y="3285" width="0.4455%" height="15" fill="rgb(242,119,39)" fg:x="36491836" fg:w="1112759"/><text x="14.8607%" y="3295.50"></text></g><g><title>[libc.so.6] (1,112,759 samples, 0.45%)</title><rect x="14.6107%" y="3269" width="0.4455%" height="15" fill="rgb(241,98,45)" fg:x="36491836" fg:w="1112759"/><text x="14.8607%" y="3279.50"></text></g><g><title>[libc.so.6] (1,112,759 samples, 0.45%)</title><rect x="14.6107%" y="3253" width="0.4455%" height="15" fill="rgb(254,28,30)" fg:x="36491836" fg:w="1112759"/><text x="14.8607%" y="3263.50"></text></g><g><title>[libc.so.6] (1,112,759 samples, 0.45%)</title><rect x="14.6107%" y="3237" width="0.4455%" height="15" fill="rgb(241,142,54)" fg:x="36491836" fg:w="1112759"/><text x="14.8607%" y="3247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,361,248 samples, 0.55%)</title><rect x="15.0562%" y="3349" width="0.5450%" height="15" fill="rgb(222,85,15)" fg:x="37604595" fg:w="1361248"/><text x="15.3062%" y="3359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,361,248 samples, 0.55%)</title><rect x="15.0562%" y="3333" width="0.5450%" height="15" fill="rgb(210,85,47)" fg:x="37604595" fg:w="1361248"/><text x="15.3062%" y="3343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,361,248 samples, 0.55%)</title><rect x="15.0562%" y="3317" width="0.5450%" height="15" fill="rgb(224,206,25)" fg:x="37604595" fg:w="1361248"/><text x="15.3062%" y="3327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,361,248 samples, 0.55%)</title><rect x="15.0562%" y="3301" width="0.5450%" height="15" fill="rgb(243,201,19)" fg:x="37604595" fg:w="1361248"/><text x="15.3062%" y="3311.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,361,248 samples, 0.55%)</title><rect x="15.0562%" y="3285" width="0.5450%" height="15" fill="rgb(236,59,4)" fg:x="37604595" fg:w="1361248"/><text x="15.3062%" y="3295.50"></text></g><g><title>malloc (1,361,248 samples, 0.55%)</title><rect x="15.0562%" y="3269" width="0.5450%" height="15" fill="rgb(254,179,45)" fg:x="37604595" fg:w="1361248"/><text x="15.3062%" y="3279.50"></text></g><g><title>[libc.so.6] (1,361,248 samples, 0.55%)</title><rect x="15.0562%" y="3253" width="0.5450%" height="15" fill="rgb(226,14,10)" fg:x="37604595" fg:w="1361248"/><text x="15.3062%" y="3263.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (846,751 samples, 0.34%)</title><rect x="15.6012%" y="3333" width="0.3390%" height="15" fill="rgb(244,27,41)" fg:x="38965843" fg:w="846751"/><text x="15.8512%" y="3343.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (846,751 samples, 0.34%)</title><rect x="15.6012%" y="3317" width="0.3390%" height="15" fill="rgb(235,35,32)" fg:x="38965843" fg:w="846751"/><text x="15.8512%" y="3327.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (846,751 samples, 0.34%)</title><rect x="15.6012%" y="3301" width="0.3390%" height="15" fill="rgb(218,68,31)" fg:x="38965843" fg:w="846751"/><text x="15.8512%" y="3311.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (846,751 samples, 0.34%)</title><rect x="15.6012%" y="3285" width="0.3390%" height="15" fill="rgb(207,120,37)" fg:x="38965843" fg:w="846751"/><text x="15.8512%" y="3295.50"></text></g><g><title>alloc::string::String::push_str (846,751 samples, 0.34%)</title><rect x="15.6012%" y="3269" width="0.3390%" height="15" fill="rgb(227,98,0)" fg:x="38965843" fg:w="846751"/><text x="15.8512%" y="3279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (846,751 samples, 0.34%)</title><rect x="15.6012%" y="3253" width="0.3390%" height="15" fill="rgb(207,7,3)" fg:x="38965843" fg:w="846751"/><text x="15.8512%" y="3263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (846,751 samples, 0.34%)</title><rect x="15.6012%" y="3237" width="0.3390%" height="15" fill="rgb(206,98,19)" fg:x="38965843" fg:w="846751"/><text x="15.8512%" y="3247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (846,751 samples, 0.34%)</title><rect x="15.6012%" y="3221" width="0.3390%" height="15" fill="rgb(217,5,26)" fg:x="38965843" fg:w="846751"/><text x="15.8512%" y="3231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (846,751 samples, 0.34%)</title><rect x="15.6012%" y="3205" width="0.3390%" height="15" fill="rgb(235,190,38)" fg:x="38965843" fg:w="846751"/><text x="15.8512%" y="3215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (846,751 samples, 0.34%)</title><rect x="15.6012%" y="3189" width="0.3390%" height="15" fill="rgb(247,86,24)" fg:x="38965843" fg:w="846751"/><text x="15.8512%" y="3199.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (846,751 samples, 0.34%)</title><rect x="15.6012%" y="3173" width="0.3390%" height="15" fill="rgb(205,101,16)" fg:x="38965843" fg:w="846751"/><text x="15.8512%" y="3183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (846,751 samples, 0.34%)</title><rect x="15.6012%" y="3157" width="0.3390%" height="15" fill="rgb(246,168,33)" fg:x="38965843" fg:w="846751"/><text x="15.8512%" y="3167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (846,751 samples, 0.34%)</title><rect x="15.6012%" y="3141" width="0.3390%" height="15" fill="rgb(231,114,1)" fg:x="38965843" fg:w="846751"/><text x="15.8512%" y="3151.50"></text></g><g><title>alloc::raw_vec::min_non_zero_cap (846,751 samples, 0.34%)</title><rect x="15.6012%" y="3125" width="0.3390%" height="15" fill="rgb(207,184,53)" fg:x="38965843" fg:w="846751"/><text x="15.8512%" y="3135.50"></text></g><g><title>benchmark::json_to_html_node (2,062,034 samples, 0.83%)</title><rect x="15.6012%" y="3349" width="0.8256%" height="15" fill="rgb(224,95,51)" fg:x="38965843" fg:w="2062034"/><text x="15.8512%" y="3359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,215,283 samples, 0.49%)</title><rect x="15.9402%" y="3333" width="0.4866%" height="15" fill="rgb(212,188,45)" fg:x="39812594" fg:w="1215283"/><text x="16.1902%" y="3343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,215,283 samples, 0.49%)</title><rect x="15.9402%" y="3317" width="0.4866%" height="15" fill="rgb(223,154,38)" fg:x="39812594" fg:w="1215283"/><text x="16.1902%" y="3327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,215,283 samples, 0.49%)</title><rect x="15.9402%" y="3301" width="0.4866%" height="15" fill="rgb(251,22,52)" fg:x="39812594" fg:w="1215283"/><text x="16.1902%" y="3311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,215,283 samples, 0.49%)</title><rect x="15.9402%" y="3285" width="0.4866%" height="15" fill="rgb(229,209,22)" fg:x="39812594" fg:w="1215283"/><text x="16.1902%" y="3295.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,215,283 samples, 0.49%)</title><rect x="15.9402%" y="3269" width="0.4866%" height="15" fill="rgb(234,138,34)" fg:x="39812594" fg:w="1215283"/><text x="16.1902%" y="3279.50"></text></g><g><title>malloc (1,215,283 samples, 0.49%)</title><rect x="15.9402%" y="3253" width="0.4866%" height="15" fill="rgb(212,95,11)" fg:x="39812594" fg:w="1215283"/><text x="16.1902%" y="3263.50"></text></g><g><title>[libc.so.6] (1,215,283 samples, 0.49%)</title><rect x="15.9402%" y="3237" width="0.4866%" height="15" fill="rgb(240,179,47)" fg:x="39812594" fg:w="1215283"/><text x="16.1902%" y="3247.50"></text></g><g><title>[libc.so.6] (1,215,283 samples, 0.49%)</title><rect x="15.9402%" y="3221" width="0.4866%" height="15" fill="rgb(240,163,11)" fg:x="39812594" fg:w="1215283"/><text x="16.1902%" y="3231.50"></text></g><g><title>benchmark::json_to_html_node (4,733,796 samples, 1.90%)</title><rect x="15.0562%" y="3365" width="1.8953%" height="15" fill="rgb(236,37,12)" fg:x="37604595" fg:w="4733796"/><text x="15.3062%" y="3375.50">b..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3349" width="0.5247%" height="15" fill="rgb(232,164,16)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3359.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3333" width="0.5247%" height="15" fill="rgb(244,205,15)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3343.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3317" width="0.5247%" height="15" fill="rgb(223,117,47)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3327.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3301" width="0.5247%" height="15" fill="rgb(244,107,35)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3311.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3285" width="0.5247%" height="15" fill="rgb(205,140,8)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3269" width="0.5247%" height="15" fill="rgb(228,84,46)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3279.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3253" width="0.5247%" height="15" fill="rgb(254,188,9)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3263.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3237" width="0.5247%" height="15" fill="rgb(206,112,54)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3221" width="0.5247%" height="15" fill="rgb(216,84,49)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3231.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3205" width="0.5247%" height="15" fill="rgb(214,194,35)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3215.50"></text></g><g><title>benchmark::json_to_html_node::_{{closure}} (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3189" width="0.5247%" height="15" fill="rgb(249,28,3)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3199.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3173" width="0.5247%" height="15" fill="rgb(222,56,52)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3183.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3157" width="0.5247%" height="15" fill="rgb(245,217,50)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3167.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3141" width="0.5247%" height="15" fill="rgb(213,201,24)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3151.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3125" width="0.5247%" height="15" fill="rgb(248,116,28)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3135.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3109" width="0.5247%" height="15" fill="rgb(219,72,43)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3093" width="0.5247%" height="15" fill="rgb(209,138,14)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3077" width="0.5247%" height="15" fill="rgb(222,18,33)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3087.50"></text></g><g><title>alloc::slice::hack::to_vec (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3061" width="0.5247%" height="15" fill="rgb(213,199,7)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3045" width="0.5247%" height="15" fill="rgb(250,110,10)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3029" width="0.5247%" height="15" fill="rgb(248,123,6)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="3013" width="0.5247%" height="15" fill="rgb(206,91,31)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="2997" width="0.5247%" height="15" fill="rgb(211,154,13)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="3007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="2981" width="0.5247%" height="15" fill="rgb(225,148,7)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="2991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="2965" width="0.5247%" height="15" fill="rgb(220,160,43)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="2975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="2949" width="0.5247%" height="15" fill="rgb(213,52,39)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="2959.50"></text></g><g><title>alloc::alloc::alloc (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="2933" width="0.5247%" height="15" fill="rgb(243,137,7)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="2943.50"></text></g><g><title>malloc (1,310,514 samples, 0.52%)</title><rect x="16.4268%" y="2917" width="0.5247%" height="15" fill="rgb(230,79,13)" fg:x="41027877" fg:w="1310514"/><text x="16.6768%" y="2927.50"></text></g><g><title>benchmark::json_to_html_node (7,285,893 samples, 2.92%)</title><rect x="14.6107%" y="3381" width="2.9171%" height="15" fill="rgb(247,105,23)" fg:x="36491836" fg:w="7285893"/><text x="14.8607%" y="3391.50">be..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3365" width="0.5763%" height="15" fill="rgb(223,179,41)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3375.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3349" width="0.5763%" height="15" fill="rgb(218,9,34)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3359.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3333" width="0.5763%" height="15" fill="rgb(222,106,8)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3343.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3317" width="0.5763%" height="15" fill="rgb(211,220,0)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3327.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3301" width="0.5763%" height="15" fill="rgb(229,52,16)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3285" width="0.5763%" height="15" fill="rgb(212,155,18)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3295.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3269" width="0.5763%" height="15" fill="rgb(242,21,14)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3279.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3253" width="0.5763%" height="15" fill="rgb(222,19,48)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3237" width="0.5763%" height="15" fill="rgb(232,45,27)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3247.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3221" width="0.5763%" height="15" fill="rgb(249,103,42)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3231.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3205" width="0.5763%" height="15" fill="rgb(246,81,33)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3189" width="0.5763%" height="15" fill="rgb(252,33,42)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3199.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3173" width="0.5763%" height="15" fill="rgb(209,212,41)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3157" width="0.5763%" height="15" fill="rgb(207,154,6)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3141" width="0.5763%" height="15" fill="rgb(223,64,47)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3125" width="0.5763%" height="15" fill="rgb(211,161,38)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3135.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3109" width="0.5763%" height="15" fill="rgb(219,138,40)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3119.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3093" width="0.5763%" height="15" fill="rgb(241,228,46)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3103.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,439,338 samples, 0.58%)</title><rect x="16.9515%" y="3077" width="0.5763%" height="15" fill="rgb(223,209,38)" fg:x="42338391" fg:w="1439338"/><text x="17.2015%" y="3087.50"></text></g><g><title>benchmark::json_to_html_node (14,692,182 samples, 5.88%)</title><rect x="12.0826%" y="3397" width="5.8825%" height="15" fill="rgb(236,164,45)" fg:x="30177799" fg:w="14692182"/><text x="12.3326%" y="3407.50">benchma..</text></g><g><title>css_bitvector_compiler::HtmlNode::new (1,092,252 samples, 0.44%)</title><rect x="17.5278%" y="3381" width="0.4373%" height="15" fill="rgb(231,15,5)" fg:x="43777729" fg:w="1092252"/><text x="17.7778%" y="3391.50"></text></g><g><title>css_bitvector_compiler::BitVector::new (1,092,252 samples, 0.44%)</title><rect x="17.5278%" y="3365" width="0.4373%" height="15" fill="rgb(252,35,15)" fg:x="43777729" fg:w="1092252"/><text x="17.7778%" y="3375.50"></text></g><g><title>alloc::vec::from_elem (1,092,252 samples, 0.44%)</title><rect x="17.5278%" y="3349" width="0.4373%" height="15" fill="rgb(248,181,18)" fg:x="43777729" fg:w="1092252"/><text x="17.7778%" y="3359.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,092,252 samples, 0.44%)</title><rect x="17.5278%" y="3333" width="0.4373%" height="15" fill="rgb(233,39,42)" fg:x="43777729" fg:w="1092252"/><text x="17.7778%" y="3343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,092,252 samples, 0.44%)</title><rect x="17.5278%" y="3317" width="0.4373%" height="15" fill="rgb(238,110,33)" fg:x="43777729" fg:w="1092252"/><text x="17.7778%" y="3327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,092,252 samples, 0.44%)</title><rect x="17.5278%" y="3301" width="0.4373%" height="15" fill="rgb(233,195,10)" fg:x="43777729" fg:w="1092252"/><text x="17.7778%" y="3311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,092,252 samples, 0.44%)</title><rect x="17.5278%" y="3285" width="0.4373%" height="15" fill="rgb(254,105,3)" fg:x="43777729" fg:w="1092252"/><text x="17.7778%" y="3295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,092,252 samples, 0.44%)</title><rect x="17.5278%" y="3269" width="0.4373%" height="15" fill="rgb(221,225,9)" fg:x="43777729" fg:w="1092252"/><text x="17.7778%" y="3279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,092,252 samples, 0.44%)</title><rect x="17.5278%" y="3253" width="0.4373%" height="15" fill="rgb(224,227,45)" fg:x="43777729" fg:w="1092252"/><text x="17.7778%" y="3263.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,092,252 samples, 0.44%)</title><rect x="17.5278%" y="3237" width="0.4373%" height="15" fill="rgb(229,198,43)" fg:x="43777729" fg:w="1092252"/><text x="17.7778%" y="3247.50"></text></g><g><title>__libc_calloc (1,092,252 samples, 0.44%)</title><rect x="17.5278%" y="3221" width="0.4373%" height="15" fill="rgb(206,209,35)" fg:x="43777729" fg:w="1092252"/><text x="17.7778%" y="3231.50"></text></g><g><title>[libc.so.6] (1,092,252 samples, 0.44%)</title><rect x="17.5278%" y="3205" width="0.4373%" height="15" fill="rgb(245,195,53)" fg:x="43777729" fg:w="1092252"/><text x="17.7778%" y="3215.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (909,388 samples, 0.36%)</title><rect x="17.9651%" y="3381" width="0.3641%" height="15" fill="rgb(240,92,26)" fg:x="44869981" fg:w="909388"/><text x="18.2151%" y="3391.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (909,388 samples, 0.36%)</title><rect x="17.9651%" y="3365" width="0.3641%" height="15" fill="rgb(207,40,23)" fg:x="44869981" fg:w="909388"/><text x="18.2151%" y="3375.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (909,388 samples, 0.36%)</title><rect x="17.9651%" y="3349" width="0.3641%" height="15" fill="rgb(223,111,35)" fg:x="44869981" fg:w="909388"/><text x="18.2151%" y="3359.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (909,388 samples, 0.36%)</title><rect x="17.9651%" y="3333" width="0.3641%" height="15" fill="rgb(229,147,28)" fg:x="44869981" fg:w="909388"/><text x="18.2151%" y="3343.50"></text></g><g><title>benchmark::apply_frame_modifications (22,176,992 samples, 8.88%)</title><rect x="10.4981%" y="3413" width="8.8793%" height="15" fill="rgb(211,29,28)" fg:x="26220212" fg:w="22176992"/><text x="10.7481%" y="3423.50">benchmark::ap..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,527,223 samples, 1.41%)</title><rect x="17.9651%" y="3397" width="1.4122%" height="15" fill="rgb(228,72,33)" fg:x="44869981" fg:w="3527223"/><text x="18.2151%" y="3407.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,617,835 samples, 1.05%)</title><rect x="18.3292%" y="3381" width="1.0481%" height="15" fill="rgb(205,214,31)" fg:x="45779369" fg:w="2617835"/><text x="18.5792%" y="3391.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,617,835 samples, 1.05%)</title><rect x="18.3292%" y="3365" width="1.0481%" height="15" fill="rgb(224,111,15)" fg:x="45779369" fg:w="2617835"/><text x="18.5792%" y="3375.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,617,835 samples, 1.05%)</title><rect x="18.3292%" y="3349" width="1.0481%" height="15" fill="rgb(253,21,26)" fg:x="45779369" fg:w="2617835"/><text x="18.5792%" y="3359.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,617,835 samples, 1.05%)</title><rect x="18.3292%" y="3333" width="1.0481%" height="15" fill="rgb(245,139,43)" fg:x="45779369" fg:w="2617835"/><text x="18.5792%" y="3343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,355,027 samples, 0.54%)</title><rect x="18.8348%" y="3317" width="0.5425%" height="15" fill="rgb(252,170,7)" fg:x="47042177" fg:w="1355027"/><text x="19.0848%" y="3327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,355,027 samples, 0.54%)</title><rect x="18.8348%" y="3301" width="0.5425%" height="15" fill="rgb(231,118,14)" fg:x="47042177" fg:w="1355027"/><text x="19.0848%" y="3311.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,249,766 samples, 0.50%)</title><rect x="19.3774%" y="3141" width="0.5004%" height="15" fill="rgb(238,83,0)" fg:x="48397204" fg:w="1249766"/><text x="19.6274%" y="3151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,249,766 samples, 0.50%)</title><rect x="19.3774%" y="3125" width="0.5004%" height="15" fill="rgb(221,39,39)" fg:x="48397204" fg:w="1249766"/><text x="19.6274%" y="3135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,249,766 samples, 0.50%)</title><rect x="19.3774%" y="3109" width="0.5004%" height="15" fill="rgb(222,119,46)" fg:x="48397204" fg:w="1249766"/><text x="19.6274%" y="3119.50"></text></g><g><title>alloc::slice::hack::to_vec (1,249,766 samples, 0.50%)</title><rect x="19.3774%" y="3093" width="0.5004%" height="15" fill="rgb(222,165,49)" fg:x="48397204" fg:w="1249766"/><text x="19.6274%" y="3103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,249,766 samples, 0.50%)</title><rect x="19.3774%" y="3077" width="0.5004%" height="15" fill="rgb(219,113,52)" fg:x="48397204" fg:w="1249766"/><text x="19.6274%" y="3087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,249,766 samples, 0.50%)</title><rect x="19.3774%" y="3061" width="0.5004%" height="15" fill="rgb(214,7,15)" fg:x="48397204" fg:w="1249766"/><text x="19.6274%" y="3071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,249,766 samples, 0.50%)</title><rect x="19.3774%" y="3045" width="0.5004%" height="15" fill="rgb(235,32,4)" fg:x="48397204" fg:w="1249766"/><text x="19.6274%" y="3055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,249,766 samples, 0.50%)</title><rect x="19.3774%" y="3029" width="0.5004%" height="15" fill="rgb(238,90,54)" fg:x="48397204" fg:w="1249766"/><text x="19.6274%" y="3039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,249,766 samples, 0.50%)</title><rect x="19.3774%" y="3013" width="0.5004%" height="15" fill="rgb(213,208,19)" fg:x="48397204" fg:w="1249766"/><text x="19.6274%" y="3023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,249,766 samples, 0.50%)</title><rect x="19.3774%" y="2997" width="0.5004%" height="15" fill="rgb(233,156,4)" fg:x="48397204" fg:w="1249766"/><text x="19.6274%" y="3007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,249,766 samples, 0.50%)</title><rect x="19.3774%" y="2981" width="0.5004%" height="15" fill="rgb(207,194,5)" fg:x="48397204" fg:w="1249766"/><text x="19.6274%" y="2991.50"></text></g><g><title>alloc::alloc::alloc (1,249,766 samples, 0.50%)</title><rect x="19.3774%" y="2965" width="0.5004%" height="15" fill="rgb(206,111,30)" fg:x="48397204" fg:w="1249766"/><text x="19.6274%" y="2975.50"></text></g><g><title>malloc (1,249,766 samples, 0.50%)</title><rect x="19.3774%" y="2949" width="0.5004%" height="15" fill="rgb(243,70,54)" fg:x="48397204" fg:w="1249766"/><text x="19.6274%" y="2959.50"></text></g><g><title>[libc.so.6] (1,249,766 samples, 0.50%)</title><rect x="19.3774%" y="2933" width="0.5004%" height="15" fill="rgb(242,28,8)" fg:x="48397204" fg:w="1249766"/><text x="19.6274%" y="2943.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,791,879 samples, 1.12%)</title><rect x="19.8777%" y="3061" width="1.1178%" height="15" fill="rgb(219,106,18)" fg:x="49646970" fg:w="2791879"/><text x="20.1277%" y="3071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,791,879 samples, 1.12%)</title><rect x="19.8777%" y="3045" width="1.1178%" height="15" fill="rgb(244,222,10)" fg:x="49646970" fg:w="2791879"/><text x="20.1277%" y="3055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,791,879 samples, 1.12%)</title><rect x="19.8777%" y="3029" width="1.1178%" height="15" fill="rgb(236,179,52)" fg:x="49646970" fg:w="2791879"/><text x="20.1277%" y="3039.50"></text></g><g><title>alloc::slice::hack::to_vec (2,791,879 samples, 1.12%)</title><rect x="19.8777%" y="3013" width="1.1178%" height="15" fill="rgb(213,23,39)" fg:x="49646970" fg:w="2791879"/><text x="20.1277%" y="3023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,791,879 samples, 1.12%)</title><rect x="19.8777%" y="2997" width="1.1178%" height="15" fill="rgb(238,48,10)" fg:x="49646970" fg:w="2791879"/><text x="20.1277%" y="3007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,791,879 samples, 1.12%)</title><rect x="19.8777%" y="2981" width="1.1178%" height="15" fill="rgb(251,196,23)" fg:x="49646970" fg:w="2791879"/><text x="20.1277%" y="2991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,791,879 samples, 1.12%)</title><rect x="19.8777%" y="2965" width="1.1178%" height="15" fill="rgb(250,152,24)" fg:x="49646970" fg:w="2791879"/><text x="20.1277%" y="2975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,791,879 samples, 1.12%)</title><rect x="19.8777%" y="2949" width="1.1178%" height="15" fill="rgb(209,150,17)" fg:x="49646970" fg:w="2791879"/><text x="20.1277%" y="2959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,791,879 samples, 1.12%)</title><rect x="19.8777%" y="2933" width="1.1178%" height="15" fill="rgb(234,202,34)" fg:x="49646970" fg:w="2791879"/><text x="20.1277%" y="2943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,791,879 samples, 1.12%)</title><rect x="19.8777%" y="2917" width="1.1178%" height="15" fill="rgb(253,148,53)" fg:x="49646970" fg:w="2791879"/><text x="20.1277%" y="2927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,791,879 samples, 1.12%)</title><rect x="19.8777%" y="2901" width="1.1178%" height="15" fill="rgb(218,129,16)" fg:x="49646970" fg:w="2791879"/><text x="20.1277%" y="2911.50"></text></g><g><title>alloc::alloc::alloc (2,791,879 samples, 1.12%)</title><rect x="19.8777%" y="2885" width="1.1178%" height="15" fill="rgb(216,85,19)" fg:x="49646970" fg:w="2791879"/><text x="20.1277%" y="2895.50"></text></g><g><title>malloc (2,791,879 samples, 1.12%)</title><rect x="19.8777%" y="2869" width="1.1178%" height="15" fill="rgb(235,228,7)" fg:x="49646970" fg:w="2791879"/><text x="20.1277%" y="2879.50"></text></g><g><title>[libc.so.6] (1,436,680 samples, 0.58%)</title><rect x="20.4203%" y="2853" width="0.5752%" height="15" fill="rgb(245,175,0)" fg:x="51002169" fg:w="1436680"/><text x="20.6703%" y="2863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,264,428 samples, 0.51%)</title><rect x="20.9956%" y="2901" width="0.5063%" height="15" fill="rgb(208,168,36)" fg:x="52438849" fg:w="1264428"/><text x="21.2456%" y="2911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,264,428 samples, 0.51%)</title><rect x="20.9956%" y="2885" width="0.5063%" height="15" fill="rgb(246,171,24)" fg:x="52438849" fg:w="1264428"/><text x="21.2456%" y="2895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,264,428 samples, 0.51%)</title><rect x="20.9956%" y="2869" width="0.5063%" height="15" fill="rgb(215,142,24)" fg:x="52438849" fg:w="1264428"/><text x="21.2456%" y="2879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,264,428 samples, 0.51%)</title><rect x="20.9956%" y="2853" width="0.5063%" height="15" fill="rgb(250,187,7)" fg:x="52438849" fg:w="1264428"/><text x="21.2456%" y="2863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,264,428 samples, 0.51%)</title><rect x="20.9956%" y="2837" width="0.5063%" height="15" fill="rgb(228,66,33)" fg:x="52438849" fg:w="1264428"/><text x="21.2456%" y="2847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,264,428 samples, 0.51%)</title><rect x="20.9956%" y="2821" width="0.5063%" height="15" fill="rgb(234,215,21)" fg:x="52438849" fg:w="1264428"/><text x="21.2456%" y="2831.50"></text></g><g><title>alloc::alloc::alloc (1,264,428 samples, 0.51%)</title><rect x="20.9956%" y="2805" width="0.5063%" height="15" fill="rgb(222,191,20)" fg:x="52438849" fg:w="1264428"/><text x="21.2456%" y="2815.50"></text></g><g><title>malloc (1,264,428 samples, 0.51%)</title><rect x="20.9956%" y="2789" width="0.5063%" height="15" fill="rgb(245,79,54)" fg:x="52438849" fg:w="1264428"/><text x="21.2456%" y="2799.50"></text></g><g><title>[libc.so.6] (1,264,428 samples, 0.51%)</title><rect x="20.9956%" y="2773" width="0.5063%" height="15" fill="rgb(240,10,37)" fg:x="52438849" fg:w="1264428"/><text x="21.2456%" y="2783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,509,720 samples, 1.00%)</title><rect x="20.9956%" y="2981" width="1.0048%" height="15" fill="rgb(214,192,32)" fg:x="52438849" fg:w="2509720"/><text x="21.2456%" y="2991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,509,720 samples, 1.00%)</title><rect x="20.9956%" y="2965" width="1.0048%" height="15" fill="rgb(209,36,54)" fg:x="52438849" fg:w="2509720"/><text x="21.2456%" y="2975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,509,720 samples, 1.00%)</title><rect x="20.9956%" y="2949" width="1.0048%" height="15" fill="rgb(220,10,11)" fg:x="52438849" fg:w="2509720"/><text x="21.2456%" y="2959.50"></text></g><g><title>alloc::slice::hack::to_vec (2,509,720 samples, 1.00%)</title><rect x="20.9956%" y="2933" width="1.0048%" height="15" fill="rgb(221,106,17)" fg:x="52438849" fg:w="2509720"/><text x="21.2456%" y="2943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,509,720 samples, 1.00%)</title><rect x="20.9956%" y="2917" width="1.0048%" height="15" fill="rgb(251,142,44)" fg:x="52438849" fg:w="2509720"/><text x="21.2456%" y="2927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,245,292 samples, 0.50%)</title><rect x="21.5018%" y="2901" width="0.4986%" height="15" fill="rgb(238,13,15)" fg:x="53703277" fg:w="1245292"/><text x="21.7518%" y="2911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,245,292 samples, 0.50%)</title><rect x="21.5018%" y="2885" width="0.4986%" height="15" fill="rgb(208,107,27)" fg:x="53703277" fg:w="1245292"/><text x="21.7518%" y="2895.50"></text></g><g><title>[libc.so.6] (1,245,292 samples, 0.50%)</title><rect x="21.5018%" y="2869" width="0.4986%" height="15" fill="rgb(205,136,37)" fg:x="53703277" fg:w="1245292"/><text x="21.7518%" y="2879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,390,325 samples, 0.56%)</title><rect x="22.0004%" y="2901" width="0.5567%" height="15" fill="rgb(250,205,27)" fg:x="54948569" fg:w="1390325"/><text x="22.2504%" y="2911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,390,325 samples, 0.56%)</title><rect x="22.0004%" y="2885" width="0.5567%" height="15" fill="rgb(210,80,43)" fg:x="54948569" fg:w="1390325"/><text x="22.2504%" y="2895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,390,325 samples, 0.56%)</title><rect x="22.0004%" y="2869" width="0.5567%" height="15" fill="rgb(247,160,36)" fg:x="54948569" fg:w="1390325"/><text x="22.2504%" y="2879.50"></text></g><g><title>alloc::slice::hack::to_vec (1,390,325 samples, 0.56%)</title><rect x="22.0004%" y="2853" width="0.5567%" height="15" fill="rgb(234,13,49)" fg:x="54948569" fg:w="1390325"/><text x="22.2504%" y="2863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,390,325 samples, 0.56%)</title><rect x="22.0004%" y="2837" width="0.5567%" height="15" fill="rgb(234,122,0)" fg:x="54948569" fg:w="1390325"/><text x="22.2504%" y="2847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,390,325 samples, 0.56%)</title><rect x="22.0004%" y="2821" width="0.5567%" height="15" fill="rgb(207,146,38)" fg:x="54948569" fg:w="1390325"/><text x="22.2504%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,390,325 samples, 0.56%)</title><rect x="22.0004%" y="2805" width="0.5567%" height="15" fill="rgb(207,177,25)" fg:x="54948569" fg:w="1390325"/><text x="22.2504%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,390,325 samples, 0.56%)</title><rect x="22.0004%" y="2789" width="0.5567%" height="15" fill="rgb(211,178,42)" fg:x="54948569" fg:w="1390325"/><text x="22.2504%" y="2799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,390,325 samples, 0.56%)</title><rect x="22.0004%" y="2773" width="0.5567%" height="15" fill="rgb(230,69,54)" fg:x="54948569" fg:w="1390325"/><text x="22.2504%" y="2783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,390,325 samples, 0.56%)</title><rect x="22.0004%" y="2757" width="0.5567%" height="15" fill="rgb(214,135,41)" fg:x="54948569" fg:w="1390325"/><text x="22.2504%" y="2767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,390,325 samples, 0.56%)</title><rect x="22.0004%" y="2741" width="0.5567%" height="15" fill="rgb(237,67,25)" fg:x="54948569" fg:w="1390325"/><text x="22.2504%" y="2751.50"></text></g><g><title>alloc::alloc::alloc (1,390,325 samples, 0.56%)</title><rect x="22.0004%" y="2725" width="0.5567%" height="15" fill="rgb(222,189,50)" fg:x="54948569" fg:w="1390325"/><text x="22.2504%" y="2735.50"></text></g><g><title>malloc (1,390,325 samples, 0.56%)</title><rect x="22.0004%" y="2709" width="0.5567%" height="15" fill="rgb(245,148,34)" fg:x="54948569" fg:w="1390325"/><text x="22.2504%" y="2719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,295,079 samples, 0.52%)</title><rect x="23.1284%" y="2821" width="0.5185%" height="15" fill="rgb(222,29,6)" fg:x="57766002" fg:w="1295079"/><text x="23.3784%" y="2831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,295,079 samples, 0.52%)</title><rect x="23.1284%" y="2805" width="0.5185%" height="15" fill="rgb(221,189,43)" fg:x="57766002" fg:w="1295079"/><text x="23.3784%" y="2815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,295,079 samples, 0.52%)</title><rect x="23.1284%" y="2789" width="0.5185%" height="15" fill="rgb(207,36,27)" fg:x="57766002" fg:w="1295079"/><text x="23.3784%" y="2799.50"></text></g><g><title>alloc::slice::hack::to_vec (1,295,079 samples, 0.52%)</title><rect x="23.1284%" y="2773" width="0.5185%" height="15" fill="rgb(217,90,24)" fg:x="57766002" fg:w="1295079"/><text x="23.3784%" y="2783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,295,079 samples, 0.52%)</title><rect x="23.1284%" y="2757" width="0.5185%" height="15" fill="rgb(224,66,35)" fg:x="57766002" fg:w="1295079"/><text x="23.3784%" y="2767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,295,079 samples, 0.52%)</title><rect x="23.1284%" y="2741" width="0.5185%" height="15" fill="rgb(221,13,50)" fg:x="57766002" fg:w="1295079"/><text x="23.3784%" y="2751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,295,079 samples, 0.52%)</title><rect x="23.1284%" y="2725" width="0.5185%" height="15" fill="rgb(236,68,49)" fg:x="57766002" fg:w="1295079"/><text x="23.3784%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,295,079 samples, 0.52%)</title><rect x="23.1284%" y="2709" width="0.5185%" height="15" fill="rgb(229,146,28)" fg:x="57766002" fg:w="1295079"/><text x="23.3784%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,295,079 samples, 0.52%)</title><rect x="23.1284%" y="2693" width="0.5185%" height="15" fill="rgb(225,31,38)" fg:x="57766002" fg:w="1295079"/><text x="23.3784%" y="2703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,295,079 samples, 0.52%)</title><rect x="23.1284%" y="2677" width="0.5185%" height="15" fill="rgb(250,208,3)" fg:x="57766002" fg:w="1295079"/><text x="23.3784%" y="2687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,295,079 samples, 0.52%)</title><rect x="23.1284%" y="2661" width="0.5185%" height="15" fill="rgb(246,54,23)" fg:x="57766002" fg:w="1295079"/><text x="23.3784%" y="2671.50"></text></g><g><title>alloc::alloc::alloc (1,295,079 samples, 0.52%)</title><rect x="23.1284%" y="2645" width="0.5185%" height="15" fill="rgb(243,76,11)" fg:x="57766002" fg:w="1295079"/><text x="23.3784%" y="2655.50"></text></g><g><title>malloc (1,295,079 samples, 0.52%)</title><rect x="23.1284%" y="2629" width="0.5185%" height="15" fill="rgb(245,21,50)" fg:x="57766002" fg:w="1295079"/><text x="23.3784%" y="2639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,348,839 samples, 0.54%)</title><rect x="23.6470%" y="2741" width="0.5401%" height="15" fill="rgb(228,9,43)" fg:x="59061081" fg:w="1348839"/><text x="23.8970%" y="2751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,348,839 samples, 0.54%)</title><rect x="23.6470%" y="2725" width="0.5401%" height="15" fill="rgb(208,100,47)" fg:x="59061081" fg:w="1348839"/><text x="23.8970%" y="2735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,348,839 samples, 0.54%)</title><rect x="23.6470%" y="2709" width="0.5401%" height="15" fill="rgb(232,26,8)" fg:x="59061081" fg:w="1348839"/><text x="23.8970%" y="2719.50"></text></g><g><title>alloc::slice::hack::to_vec (1,348,839 samples, 0.54%)</title><rect x="23.6470%" y="2693" width="0.5401%" height="15" fill="rgb(216,166,38)" fg:x="59061081" fg:w="1348839"/><text x="23.8970%" y="2703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,348,839 samples, 0.54%)</title><rect x="23.6470%" y="2677" width="0.5401%" height="15" fill="rgb(251,202,51)" fg:x="59061081" fg:w="1348839"/><text x="23.8970%" y="2687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,348,839 samples, 0.54%)</title><rect x="23.6470%" y="2661" width="0.5401%" height="15" fill="rgb(254,216,34)" fg:x="59061081" fg:w="1348839"/><text x="23.8970%" y="2671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,348,839 samples, 0.54%)</title><rect x="23.6470%" y="2645" width="0.5401%" height="15" fill="rgb(251,32,27)" fg:x="59061081" fg:w="1348839"/><text x="23.8970%" y="2655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,348,839 samples, 0.54%)</title><rect x="23.6470%" y="2629" width="0.5401%" height="15" fill="rgb(208,127,28)" fg:x="59061081" fg:w="1348839"/><text x="23.8970%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,348,839 samples, 0.54%)</title><rect x="23.6470%" y="2613" width="0.5401%" height="15" fill="rgb(224,137,22)" fg:x="59061081" fg:w="1348839"/><text x="23.8970%" y="2623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,348,839 samples, 0.54%)</title><rect x="23.6470%" y="2597" width="0.5401%" height="15" fill="rgb(254,70,32)" fg:x="59061081" fg:w="1348839"/><text x="23.8970%" y="2607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,348,839 samples, 0.54%)</title><rect x="23.6470%" y="2581" width="0.5401%" height="15" fill="rgb(229,75,37)" fg:x="59061081" fg:w="1348839"/><text x="23.8970%" y="2591.50"></text></g><g><title>alloc::alloc::alloc (1,348,839 samples, 0.54%)</title><rect x="23.6470%" y="2565" width="0.5401%" height="15" fill="rgb(252,64,23)" fg:x="59061081" fg:w="1348839"/><text x="23.8970%" y="2575.50"></text></g><g><title>malloc (1,348,839 samples, 0.54%)</title><rect x="23.6470%" y="2549" width="0.5401%" height="15" fill="rgb(232,162,48)" fg:x="59061081" fg:w="1348839"/><text x="23.8970%" y="2559.50"></text></g><g><title>[libc.so.6] (1,348,839 samples, 0.54%)</title><rect x="23.6470%" y="2533" width="0.5401%" height="15" fill="rgb(246,160,12)" fg:x="59061081" fg:w="1348839"/><text x="23.8970%" y="2543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,322,973 samples, 0.53%)</title><rect x="24.1870%" y="2661" width="0.5297%" height="15" fill="rgb(247,166,0)" fg:x="60409920" fg:w="1322973"/><text x="24.4370%" y="2671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,322,973 samples, 0.53%)</title><rect x="24.1870%" y="2645" width="0.5297%" height="15" fill="rgb(249,219,21)" fg:x="60409920" fg:w="1322973"/><text x="24.4370%" y="2655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,322,973 samples, 0.53%)</title><rect x="24.1870%" y="2629" width="0.5297%" height="15" fill="rgb(205,209,3)" fg:x="60409920" fg:w="1322973"/><text x="24.4370%" y="2639.50"></text></g><g><title>alloc::slice::hack::to_vec (1,322,973 samples, 0.53%)</title><rect x="24.1870%" y="2613" width="0.5297%" height="15" fill="rgb(243,44,1)" fg:x="60409920" fg:w="1322973"/><text x="24.4370%" y="2623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,322,973 samples, 0.53%)</title><rect x="24.1870%" y="2597" width="0.5297%" height="15" fill="rgb(206,159,16)" fg:x="60409920" fg:w="1322973"/><text x="24.4370%" y="2607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,322,973 samples, 0.53%)</title><rect x="24.1870%" y="2581" width="0.5297%" height="15" fill="rgb(244,77,30)" fg:x="60409920" fg:w="1322973"/><text x="24.4370%" y="2591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,322,973 samples, 0.53%)</title><rect x="24.1870%" y="2565" width="0.5297%" height="15" fill="rgb(218,69,12)" fg:x="60409920" fg:w="1322973"/><text x="24.4370%" y="2575.50"></text></g><g><title>[libc.so.6] (1,322,973 samples, 0.53%)</title><rect x="24.1870%" y="2549" width="0.5297%" height="15" fill="rgb(212,87,7)" fg:x="60409920" fg:w="1322973"/><text x="24.4370%" y="2559.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,403,525 samples, 0.56%)</title><rect x="24.7167%" y="2437" width="0.5619%" height="15" fill="rgb(245,114,25)" fg:x="61732893" fg:w="1403525"/><text x="24.9667%" y="2447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,403,525 samples, 0.56%)</title><rect x="24.7167%" y="2421" width="0.5619%" height="15" fill="rgb(210,61,42)" fg:x="61732893" fg:w="1403525"/><text x="24.9667%" y="2431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,403,525 samples, 0.56%)</title><rect x="24.7167%" y="2405" width="0.5619%" height="15" fill="rgb(211,52,33)" fg:x="61732893" fg:w="1403525"/><text x="24.9667%" y="2415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,403,525 samples, 0.56%)</title><rect x="24.7167%" y="2389" width="0.5619%" height="15" fill="rgb(234,58,33)" fg:x="61732893" fg:w="1403525"/><text x="24.9667%" y="2399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,354,889 samples, 0.54%)</title><rect x="25.2787%" y="2181" width="0.5425%" height="15" fill="rgb(220,115,36)" fg:x="63136418" fg:w="1354889"/><text x="25.5287%" y="2191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,354,889 samples, 0.54%)</title><rect x="25.2787%" y="2165" width="0.5425%" height="15" fill="rgb(243,153,54)" fg:x="63136418" fg:w="1354889"/><text x="25.5287%" y="2175.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,354,889 samples, 0.54%)</title><rect x="25.2787%" y="2149" width="0.5425%" height="15" fill="rgb(251,47,18)" fg:x="63136418" fg:w="1354889"/><text x="25.5287%" y="2159.50"></text></g><g><title>alloc::slice::hack::to_vec (1,354,889 samples, 0.54%)</title><rect x="25.2787%" y="2133" width="0.5425%" height="15" fill="rgb(242,102,42)" fg:x="63136418" fg:w="1354889"/><text x="25.5287%" y="2143.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,354,889 samples, 0.54%)</title><rect x="25.2787%" y="2117" width="0.5425%" height="15" fill="rgb(234,31,38)" fg:x="63136418" fg:w="1354889"/><text x="25.5287%" y="2127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,354,889 samples, 0.54%)</title><rect x="25.2787%" y="2101" width="0.5425%" height="15" fill="rgb(221,117,51)" fg:x="63136418" fg:w="1354889"/><text x="25.5287%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,354,889 samples, 0.54%)</title><rect x="25.2787%" y="2085" width="0.5425%" height="15" fill="rgb(212,20,18)" fg:x="63136418" fg:w="1354889"/><text x="25.5287%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,354,889 samples, 0.54%)</title><rect x="25.2787%" y="2069" width="0.5425%" height="15" fill="rgb(245,133,36)" fg:x="63136418" fg:w="1354889"/><text x="25.5287%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,354,889 samples, 0.54%)</title><rect x="25.2787%" y="2053" width="0.5425%" height="15" fill="rgb(212,6,19)" fg:x="63136418" fg:w="1354889"/><text x="25.5287%" y="2063.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,354,889 samples, 0.54%)</title><rect x="25.2787%" y="2037" width="0.5425%" height="15" fill="rgb(218,1,36)" fg:x="63136418" fg:w="1354889"/><text x="25.5287%" y="2047.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,354,889 samples, 0.54%)</title><rect x="25.2787%" y="2021" width="0.5425%" height="15" fill="rgb(246,84,54)" fg:x="63136418" fg:w="1354889"/><text x="25.5287%" y="2031.50"></text></g><g><title>alloc::alloc::alloc (1,354,889 samples, 0.54%)</title><rect x="25.2787%" y="2005" width="0.5425%" height="15" fill="rgb(242,110,6)" fg:x="63136418" fg:w="1354889"/><text x="25.5287%" y="2015.50"></text></g><g><title>malloc (1,354,889 samples, 0.54%)</title><rect x="25.2787%" y="1989" width="0.5425%" height="15" fill="rgb(214,47,5)" fg:x="63136418" fg:w="1354889"/><text x="25.5287%" y="1999.50"></text></g><g><title>[libc.so.6] (1,354,889 samples, 0.54%)</title><rect x="25.2787%" y="1973" width="0.5425%" height="15" fill="rgb(218,159,25)" fg:x="63136418" fg:w="1354889"/><text x="25.5287%" y="1983.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,425,691 samples, 0.57%)</title><rect x="25.8211%" y="2101" width="0.5708%" height="15" fill="rgb(215,211,28)" fg:x="64491307" fg:w="1425691"/><text x="26.0711%" y="2111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,425,691 samples, 0.57%)</title><rect x="25.8211%" y="2085" width="0.5708%" height="15" fill="rgb(238,59,32)" fg:x="64491307" fg:w="1425691"/><text x="26.0711%" y="2095.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,425,691 samples, 0.57%)</title><rect x="25.8211%" y="2069" width="0.5708%" height="15" fill="rgb(226,82,3)" fg:x="64491307" fg:w="1425691"/><text x="26.0711%" y="2079.50"></text></g><g><title>alloc::slice::hack::to_vec (1,425,691 samples, 0.57%)</title><rect x="25.8211%" y="2053" width="0.5708%" height="15" fill="rgb(240,164,32)" fg:x="64491307" fg:w="1425691"/><text x="26.0711%" y="2063.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,425,691 samples, 0.57%)</title><rect x="25.8211%" y="2037" width="0.5708%" height="15" fill="rgb(232,46,7)" fg:x="64491307" fg:w="1425691"/><text x="26.0711%" y="2047.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,425,691 samples, 0.57%)</title><rect x="25.8211%" y="2021" width="0.5708%" height="15" fill="rgb(229,129,53)" fg:x="64491307" fg:w="1425691"/><text x="26.0711%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,425,691 samples, 0.57%)</title><rect x="25.8211%" y="2005" width="0.5708%" height="15" fill="rgb(234,188,29)" fg:x="64491307" fg:w="1425691"/><text x="26.0711%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,425,691 samples, 0.57%)</title><rect x="25.8211%" y="1989" width="0.5708%" height="15" fill="rgb(246,141,4)" fg:x="64491307" fg:w="1425691"/><text x="26.0711%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,425,691 samples, 0.57%)</title><rect x="25.8211%" y="1973" width="0.5708%" height="15" fill="rgb(229,23,39)" fg:x="64491307" fg:w="1425691"/><text x="26.0711%" y="1983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,425,691 samples, 0.57%)</title><rect x="25.8211%" y="1957" width="0.5708%" height="15" fill="rgb(206,12,3)" fg:x="64491307" fg:w="1425691"/><text x="26.0711%" y="1967.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,425,691 samples, 0.57%)</title><rect x="25.8211%" y="1941" width="0.5708%" height="15" fill="rgb(252,226,20)" fg:x="64491307" fg:w="1425691"/><text x="26.0711%" y="1951.50"></text></g><g><title>alloc::alloc::alloc (1,425,691 samples, 0.57%)</title><rect x="25.8211%" y="1925" width="0.5708%" height="15" fill="rgb(216,123,35)" fg:x="64491307" fg:w="1425691"/><text x="26.0711%" y="1935.50"></text></g><g><title>malloc (1,425,691 samples, 0.57%)</title><rect x="25.8211%" y="1909" width="0.5708%" height="15" fill="rgb(212,68,40)" fg:x="64491307" fg:w="1425691"/><text x="26.0711%" y="1919.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,634,801 samples, 1.05%)</title><rect x="26.3920%" y="2021" width="1.0549%" height="15" fill="rgb(254,125,32)" fg:x="65916998" fg:w="2634801"/><text x="26.6420%" y="2031.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,634,801 samples, 1.05%)</title><rect x="26.3920%" y="2005" width="1.0549%" height="15" fill="rgb(253,97,22)" fg:x="65916998" fg:w="2634801"/><text x="26.6420%" y="2015.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,634,801 samples, 1.05%)</title><rect x="26.3920%" y="1989" width="1.0549%" height="15" fill="rgb(241,101,14)" fg:x="65916998" fg:w="2634801"/><text x="26.6420%" y="1999.50"></text></g><g><title>alloc::slice::hack::to_vec (2,634,801 samples, 1.05%)</title><rect x="26.3920%" y="1973" width="1.0549%" height="15" fill="rgb(238,103,29)" fg:x="65916998" fg:w="2634801"/><text x="26.6420%" y="1983.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,634,801 samples, 1.05%)</title><rect x="26.3920%" y="1957" width="1.0549%" height="15" fill="rgb(233,195,47)" fg:x="65916998" fg:w="2634801"/><text x="26.6420%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,634,801 samples, 1.05%)</title><rect x="26.3920%" y="1941" width="1.0549%" height="15" fill="rgb(246,218,30)" fg:x="65916998" fg:w="2634801"/><text x="26.6420%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,634,801 samples, 1.05%)</title><rect x="26.3920%" y="1925" width="1.0549%" height="15" fill="rgb(219,145,47)" fg:x="65916998" fg:w="2634801"/><text x="26.6420%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,634,801 samples, 1.05%)</title><rect x="26.3920%" y="1909" width="1.0549%" height="15" fill="rgb(243,12,26)" fg:x="65916998" fg:w="2634801"/><text x="26.6420%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,634,801 samples, 1.05%)</title><rect x="26.3920%" y="1893" width="1.0549%" height="15" fill="rgb(214,87,16)" fg:x="65916998" fg:w="2634801"/><text x="26.6420%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,634,801 samples, 1.05%)</title><rect x="26.3920%" y="1877" width="1.0549%" height="15" fill="rgb(208,99,42)" fg:x="65916998" fg:w="2634801"/><text x="26.6420%" y="1887.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,634,801 samples, 1.05%)</title><rect x="26.3920%" y="1861" width="1.0549%" height="15" fill="rgb(253,99,2)" fg:x="65916998" fg:w="2634801"/><text x="26.6420%" y="1871.50"></text></g><g><title>alloc::alloc::alloc (2,634,801 samples, 1.05%)</title><rect x="26.3920%" y="1845" width="1.0549%" height="15" fill="rgb(220,168,23)" fg:x="65916998" fg:w="2634801"/><text x="26.6420%" y="1855.50"></text></g><g><title>malloc (2,634,801 samples, 1.05%)</title><rect x="26.3920%" y="1829" width="1.0549%" height="15" fill="rgb(242,38,24)" fg:x="65916998" fg:w="2634801"/><text x="26.6420%" y="1839.50"></text></g><g><title>[libc.so.6] (2,634,801 samples, 1.05%)</title><rect x="26.3920%" y="1813" width="1.0549%" height="15" fill="rgb(225,182,9)" fg:x="65916998" fg:w="2634801"/><text x="26.6420%" y="1823.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,412,096 samples, 0.57%)</title><rect x="27.4469%" y="1957" width="0.5654%" height="15" fill="rgb(243,178,37)" fg:x="68551799" fg:w="1412096"/><text x="27.6969%" y="1967.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,412,096 samples, 0.57%)</title><rect x="27.4469%" y="1941" width="0.5654%" height="15" fill="rgb(232,139,19)" fg:x="68551799" fg:w="1412096"/><text x="27.6969%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,825,513 samples, 1.13%)</title><rect x="27.4469%" y="2021" width="1.1313%" height="15" fill="rgb(225,201,24)" fg:x="68551799" fg:w="2825513"/><text x="27.6969%" y="2031.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,825,513 samples, 1.13%)</title><rect x="27.4469%" y="2005" width="1.1313%" height="15" fill="rgb(221,47,46)" fg:x="68551799" fg:w="2825513"/><text x="27.6969%" y="2015.50"></text></g><g><title>alloc::slice::hack::to_vec (2,825,513 samples, 1.13%)</title><rect x="27.4469%" y="1989" width="1.1313%" height="15" fill="rgb(249,23,13)" fg:x="68551799" fg:w="2825513"/><text x="27.6969%" y="1999.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,825,513 samples, 1.13%)</title><rect x="27.4469%" y="1973" width="1.1313%" height="15" fill="rgb(219,9,5)" fg:x="68551799" fg:w="2825513"/><text x="27.6969%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,413,417 samples, 0.57%)</title><rect x="28.0123%" y="1957" width="0.5659%" height="15" fill="rgb(254,171,16)" fg:x="69963895" fg:w="1413417"/><text x="28.2623%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,413,417 samples, 0.57%)</title><rect x="28.0123%" y="1941" width="0.5659%" height="15" fill="rgb(230,171,20)" fg:x="69963895" fg:w="1413417"/><text x="28.2623%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,413,417 samples, 0.57%)</title><rect x="28.0123%" y="1925" width="0.5659%" height="15" fill="rgb(210,71,41)" fg:x="69963895" fg:w="1413417"/><text x="28.2623%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,413,417 samples, 0.57%)</title><rect x="28.0123%" y="1909" width="0.5659%" height="15" fill="rgb(206,173,20)" fg:x="69963895" fg:w="1413417"/><text x="28.2623%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,413,417 samples, 0.57%)</title><rect x="28.0123%" y="1893" width="0.5659%" height="15" fill="rgb(233,88,34)" fg:x="69963895" fg:w="1413417"/><text x="28.2623%" y="1903.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,413,417 samples, 0.57%)</title><rect x="28.0123%" y="1877" width="0.5659%" height="15" fill="rgb(223,209,46)" fg:x="69963895" fg:w="1413417"/><text x="28.2623%" y="1887.50"></text></g><g><title>alloc::alloc::alloc (1,413,417 samples, 0.57%)</title><rect x="28.0123%" y="1861" width="0.5659%" height="15" fill="rgb(250,43,18)" fg:x="69963895" fg:w="1413417"/><text x="28.2623%" y="1871.50"></text></g><g><title>__rdl_alloc (1,413,417 samples, 0.57%)</title><rect x="28.0123%" y="1845" width="0.5659%" height="15" fill="rgb(208,13,10)" fg:x="69963895" fg:w="1413417"/><text x="28.2623%" y="1855.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,413,417 samples, 0.57%)</title><rect x="28.0123%" y="1829" width="0.5659%" height="15" fill="rgb(212,200,36)" fg:x="69963895" fg:w="1413417"/><text x="28.2623%" y="1839.50"></text></g><g><title>core::clone::Clone::clone (2,640,050 samples, 1.06%)</title><rect x="28.5782%" y="1925" width="1.0570%" height="15" fill="rgb(225,90,30)" fg:x="71377312" fg:w="2640050"/><text x="28.8282%" y="1935.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,640,050 samples, 1.06%)</title><rect x="28.5782%" y="1909" width="1.0570%" height="15" fill="rgb(236,182,39)" fg:x="71377312" fg:w="2640050"/><text x="28.8282%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,640,050 samples, 1.06%)</title><rect x="28.5782%" y="1893" width="1.0570%" height="15" fill="rgb(212,144,35)" fg:x="71377312" fg:w="2640050"/><text x="28.8282%" y="1903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,640,050 samples, 1.06%)</title><rect x="28.5782%" y="1877" width="1.0570%" height="15" fill="rgb(228,63,44)" fg:x="71377312" fg:w="2640050"/><text x="28.8282%" y="1887.50"></text></g><g><title>alloc::slice::hack::to_vec (2,640,050 samples, 1.06%)</title><rect x="28.5782%" y="1861" width="1.0570%" height="15" fill="rgb(228,109,6)" fg:x="71377312" fg:w="2640050"/><text x="28.8282%" y="1871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,640,050 samples, 1.06%)</title><rect x="28.5782%" y="1845" width="1.0570%" height="15" fill="rgb(238,117,24)" fg:x="71377312" fg:w="2640050"/><text x="28.8282%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,640,050 samples, 1.06%)</title><rect x="28.5782%" y="1829" width="1.0570%" height="15" fill="rgb(242,26,26)" fg:x="71377312" fg:w="2640050"/><text x="28.8282%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,640,050 samples, 1.06%)</title><rect x="28.5782%" y="1813" width="1.0570%" height="15" fill="rgb(221,92,48)" fg:x="71377312" fg:w="2640050"/><text x="28.8282%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,640,050 samples, 1.06%)</title><rect x="28.5782%" y="1797" width="1.0570%" height="15" fill="rgb(209,209,32)" fg:x="71377312" fg:w="2640050"/><text x="28.8282%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,640,050 samples, 1.06%)</title><rect x="28.5782%" y="1781" width="1.0570%" height="15" fill="rgb(221,70,22)" fg:x="71377312" fg:w="2640050"/><text x="28.8282%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,640,050 samples, 1.06%)</title><rect x="28.5782%" y="1765" width="1.0570%" height="15" fill="rgb(248,145,5)" fg:x="71377312" fg:w="2640050"/><text x="28.8282%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,640,050 samples, 1.06%)</title><rect x="28.5782%" y="1749" width="1.0570%" height="15" fill="rgb(226,116,26)" fg:x="71377312" fg:w="2640050"/><text x="28.8282%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (2,640,050 samples, 1.06%)</title><rect x="28.5782%" y="1733" width="1.0570%" height="15" fill="rgb(244,5,17)" fg:x="71377312" fg:w="2640050"/><text x="28.8282%" y="1743.50"></text></g><g><title>malloc (2,640,050 samples, 1.06%)</title><rect x="28.5782%" y="1717" width="1.0570%" height="15" fill="rgb(252,159,33)" fg:x="71377312" fg:w="2640050"/><text x="28.8282%" y="1727.50"></text></g><g><title>[libc.so.6] (1,308,462 samples, 0.52%)</title><rect x="29.1113%" y="1701" width="0.5239%" height="15" fill="rgb(206,71,0)" fg:x="72708900" fg:w="1308462"/><text x="29.3613%" y="1711.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (10,813,610 samples, 4.33%)</title><rect x="25.8211%" y="2117" width="4.3296%" height="15" fill="rgb(233,118,54)" fg:x="64491307" fg:w="10813610"/><text x="26.0711%" y="2127.50">&lt;css_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,387,919 samples, 3.76%)</title><rect x="26.3920%" y="2101" width="3.7588%" height="15" fill="rgb(234,83,48)" fg:x="65916998" fg:w="9387919"/><text x="26.6420%" y="2111.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,387,919 samples, 3.76%)</title><rect x="26.3920%" y="2085" width="3.7588%" height="15" fill="rgb(228,3,54)" fg:x="65916998" fg:w="9387919"/><text x="26.6420%" y="2095.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,387,919 samples, 3.76%)</title><rect x="26.3920%" y="2069" width="3.7588%" height="15" fill="rgb(226,155,13)" fg:x="65916998" fg:w="9387919"/><text x="26.6420%" y="2079.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,387,919 samples, 3.76%)</title><rect x="26.3920%" y="2053" width="3.7588%" height="15" fill="rgb(241,28,37)" fg:x="65916998" fg:w="9387919"/><text x="26.6420%" y="2063.50">&lt;T a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (9,387,919 samples, 3.76%)</title><rect x="26.3920%" y="2037" width="3.7588%" height="15" fill="rgb(233,93,10)" fg:x="65916998" fg:w="9387919"/><text x="26.6420%" y="2047.50">&lt;css..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,927,605 samples, 1.57%)</title><rect x="28.5782%" y="2021" width="1.5725%" height="15" fill="rgb(225,113,19)" fg:x="71377312" fg:w="3927605"/><text x="28.8282%" y="2031.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,927,605 samples, 1.57%)</title><rect x="28.5782%" y="2005" width="1.5725%" height="15" fill="rgb(241,2,18)" fg:x="71377312" fg:w="3927605"/><text x="28.8282%" y="2015.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,927,605 samples, 1.57%)</title><rect x="28.5782%" y="1989" width="1.5725%" height="15" fill="rgb(228,207,21)" fg:x="71377312" fg:w="3927605"/><text x="28.8282%" y="1999.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,927,605 samples, 1.57%)</title><rect x="28.5782%" y="1973" width="1.5725%" height="15" fill="rgb(213,211,35)" fg:x="71377312" fg:w="3927605"/><text x="28.8282%" y="1983.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,927,605 samples, 1.57%)</title><rect x="28.5782%" y="1957" width="1.5725%" height="15" fill="rgb(209,83,10)" fg:x="71377312" fg:w="3927605"/><text x="28.8282%" y="1967.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,927,605 samples, 1.57%)</title><rect x="28.5782%" y="1941" width="1.5725%" height="15" fill="rgb(209,164,1)" fg:x="71377312" fg:w="3927605"/><text x="28.8282%" y="1951.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1,287,555 samples, 0.52%)</title><rect x="29.6352%" y="1925" width="0.5155%" height="15" fill="rgb(213,184,43)" fg:x="74017362" fg:w="1287555"/><text x="29.8852%" y="1935.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,287,555 samples, 0.52%)</title><rect x="29.6352%" y="1909" width="0.5155%" height="15" fill="rgb(231,61,34)" fg:x="74017362" fg:w="1287555"/><text x="29.8852%" y="1919.50"></text></g><g><title>core::ptr::write (1,287,555 samples, 0.52%)</title><rect x="29.6352%" y="1893" width="0.5155%" height="15" fill="rgb(235,75,3)" fg:x="74017362" fg:w="1287555"/><text x="29.8852%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,127,643 samples, 4.86%)</title><rect x="25.8211%" y="2181" width="4.8557%" height="15" fill="rgb(220,106,47)" fg:x="64491307" fg:w="12127643"/><text x="26.0711%" y="2191.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12,127,643 samples, 4.86%)</title><rect x="25.8211%" y="2165" width="4.8557%" height="15" fill="rgb(210,196,33)" fg:x="64491307" fg:w="12127643"/><text x="26.0711%" y="2175.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (12,127,643 samples, 4.86%)</title><rect x="25.8211%" y="2149" width="4.8557%" height="15" fill="rgb(229,154,42)" fg:x="64491307" fg:w="12127643"/><text x="26.0711%" y="2159.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12,127,643 samples, 4.86%)</title><rect x="25.8211%" y="2133" width="4.8557%" height="15" fill="rgb(228,114,26)" fg:x="64491307" fg:w="12127643"/><text x="26.0711%" y="2143.50">&lt;T as ..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,314,033 samples, 0.53%)</title><rect x="30.1507%" y="2117" width="0.5261%" height="15" fill="rgb(208,144,1)" fg:x="75304917" fg:w="1314033"/><text x="30.4007%" y="2127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,343,049 samples, 0.54%)</title><rect x="30.6768%" y="2101" width="0.5377%" height="15" fill="rgb(239,112,37)" fg:x="76618950" fg:w="1343049"/><text x="30.9268%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,343,049 samples, 0.54%)</title><rect x="30.6768%" y="2085" width="0.5377%" height="15" fill="rgb(210,96,50)" fg:x="76618950" fg:w="1343049"/><text x="30.9268%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,343,049 samples, 0.54%)</title><rect x="30.6768%" y="2069" width="0.5377%" height="15" fill="rgb(222,178,2)" fg:x="76618950" fg:w="1343049"/><text x="30.9268%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,343,049 samples, 0.54%)</title><rect x="30.6768%" y="2053" width="0.5377%" height="15" fill="rgb(226,74,18)" fg:x="76618950" fg:w="1343049"/><text x="30.9268%" y="2063.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (16,075,911 samples, 6.44%)</title><rect x="25.2787%" y="2197" width="6.4365%" height="15" fill="rgb(225,67,54)" fg:x="63136418" fg:w="16075911"/><text x="25.5287%" y="2207.50">&lt;css_bit..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,593,379 samples, 1.04%)</title><rect x="30.6768%" y="2181" width="1.0383%" height="15" fill="rgb(251,92,32)" fg:x="76618950" fg:w="2593379"/><text x="30.9268%" y="2191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,593,379 samples, 1.04%)</title><rect x="30.6768%" y="2165" width="1.0383%" height="15" fill="rgb(228,149,22)" fg:x="76618950" fg:w="2593379"/><text x="30.9268%" y="2175.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,593,379 samples, 1.04%)</title><rect x="30.6768%" y="2149" width="1.0383%" height="15" fill="rgb(243,54,13)" fg:x="76618950" fg:w="2593379"/><text x="30.9268%" y="2159.50"></text></g><g><title>alloc::slice::hack::to_vec (2,593,379 samples, 1.04%)</title><rect x="30.6768%" y="2133" width="1.0383%" height="15" fill="rgb(243,180,28)" fg:x="76618950" fg:w="2593379"/><text x="30.9268%" y="2143.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,593,379 samples, 1.04%)</title><rect x="30.6768%" y="2117" width="1.0383%" height="15" fill="rgb(208,167,24)" fg:x="76618950" fg:w="2593379"/><text x="30.9268%" y="2127.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,250,330 samples, 0.50%)</title><rect x="31.2146%" y="2101" width="0.5006%" height="15" fill="rgb(245,73,45)" fg:x="77961999" fg:w="1250330"/><text x="31.4646%" y="2111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,250,330 samples, 0.50%)</title><rect x="31.2146%" y="2085" width="0.5006%" height="15" fill="rgb(237,203,48)" fg:x="77961999" fg:w="1250330"/><text x="31.4646%" y="2095.50"></text></g><g><title>[libc.so.6] (1,250,330 samples, 0.50%)</title><rect x="31.2146%" y="2069" width="0.5006%" height="15" fill="rgb(211,197,16)" fg:x="77961999" fg:w="1250330"/><text x="31.4646%" y="2079.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,325,260 samples, 6.94%)</title><rect x="25.2787%" y="2261" width="6.9367%" height="15" fill="rgb(243,99,51)" fg:x="63136418" fg:w="17325260"/><text x="25.5287%" y="2271.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,325,260 samples, 6.94%)</title><rect x="25.2787%" y="2245" width="6.9367%" height="15" fill="rgb(215,123,29)" fg:x="63136418" fg:w="17325260"/><text x="25.5287%" y="2255.50">alloc::sl..</text></g><g><title>alloc::slice::hack::to_vec (17,325,260 samples, 6.94%)</title><rect x="25.2787%" y="2229" width="6.9367%" height="15" fill="rgb(239,186,37)" fg:x="63136418" fg:w="17325260"/><text x="25.5287%" y="2239.50">alloc::sl..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,325,260 samples, 6.94%)</title><rect x="25.2787%" y="2213" width="6.9367%" height="15" fill="rgb(252,136,39)" fg:x="63136418" fg:w="17325260"/><text x="25.5287%" y="2223.50">&lt;T as all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,249,349 samples, 0.50%)</title><rect x="31.7152%" y="2197" width="0.5002%" height="15" fill="rgb(223,213,32)" fg:x="79212329" fg:w="1249349"/><text x="31.9652%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,249,349 samples, 0.50%)</title><rect x="31.7152%" y="2181" width="0.5002%" height="15" fill="rgb(233,115,5)" fg:x="79212329" fg:w="1249349"/><text x="31.9652%" y="2191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,249,349 samples, 0.50%)</title><rect x="31.7152%" y="2165" width="0.5002%" height="15" fill="rgb(207,226,44)" fg:x="79212329" fg:w="1249349"/><text x="31.9652%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,249,349 samples, 0.50%)</title><rect x="31.7152%" y="2149" width="0.5002%" height="15" fill="rgb(208,126,0)" fg:x="79212329" fg:w="1249349"/><text x="31.9652%" y="2159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,249,349 samples, 0.50%)</title><rect x="31.7152%" y="2133" width="0.5002%" height="15" fill="rgb(244,66,21)" fg:x="79212329" fg:w="1249349"/><text x="31.9652%" y="2143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,249,349 samples, 0.50%)</title><rect x="31.7152%" y="2117" width="0.5002%" height="15" fill="rgb(222,97,12)" fg:x="79212329" fg:w="1249349"/><text x="31.9652%" y="2127.50"></text></g><g><title>alloc::alloc::alloc (1,249,349 samples, 0.50%)</title><rect x="31.7152%" y="2101" width="0.5002%" height="15" fill="rgb(219,213,19)" fg:x="79212329" fg:w="1249349"/><text x="31.9652%" y="2111.50"></text></g><g><title>malloc (1,249,349 samples, 0.50%)</title><rect x="31.7152%" y="2085" width="0.5002%" height="15" fill="rgb(252,169,30)" fg:x="79212329" fg:w="1249349"/><text x="31.9652%" y="2095.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="2197" width="1.6616%" height="15" fill="rgb(206,32,51)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="2207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="2181" width="1.6616%" height="15" fill="rgb(250,172,42)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="2191.50"></text></g><g><title>core::clone::Clone::clone (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="2165" width="1.6616%" height="15" fill="rgb(209,34,43)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="2175.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="2149" width="1.6616%" height="15" fill="rgb(223,11,35)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="2159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="2133" width="1.6616%" height="15" fill="rgb(251,219,26)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="2143.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="2117" width="1.6616%" height="15" fill="rgb(231,119,3)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="2127.50"></text></g><g><title>alloc::slice::hack::to_vec (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="2101" width="1.6616%" height="15" fill="rgb(216,97,11)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="2111.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="2085" width="1.6616%" height="15" fill="rgb(223,59,9)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="2095.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="2069" width="1.6616%" height="15" fill="rgb(233,93,31)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="2053" width="1.6616%" height="15" fill="rgb(239,81,33)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="2037" width="1.6616%" height="15" fill="rgb(213,120,34)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="2021" width="1.6616%" height="15" fill="rgb(243,49,53)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="2031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="2005" width="1.6616%" height="15" fill="rgb(247,216,33)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="2015.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="1989" width="1.6616%" height="15" fill="rgb(226,26,14)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="1999.50"></text></g><g><title>alloc::alloc::alloc (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="1973" width="1.6616%" height="15" fill="rgb(215,49,53)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="1983.50"></text></g><g><title>malloc (4,149,923 samples, 1.66%)</title><rect x="32.2154%" y="1957" width="1.6616%" height="15" fill="rgb(245,162,40)" fg:x="80461678" fg:w="4149923"/><text x="32.4654%" y="1967.50"></text></g><g><title>[libc.so.6] (1,430,447 samples, 0.57%)</title><rect x="33.3042%" y="1941" width="0.5727%" height="15" fill="rgb(229,68,17)" fg:x="83181154" fg:w="1430447"/><text x="33.5542%" y="1951.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (22,782,055 samples, 9.12%)</title><rect x="25.2787%" y="2277" width="9.1215%" height="15" fill="rgb(213,182,10)" fg:x="63136418" fg:w="22782055"/><text x="25.5287%" y="2287.50">&lt;css_bitvecto..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5,456,795 samples, 2.18%)</title><rect x="32.2154%" y="2261" width="2.1848%" height="15" fill="rgb(245,125,30)" fg:x="80461678" fg:w="5456795"/><text x="32.4654%" y="2271.50">&lt;..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5,456,795 samples, 2.18%)</title><rect x="32.2154%" y="2245" width="2.1848%" height="15" fill="rgb(232,202,2)" fg:x="80461678" fg:w="5456795"/><text x="32.4654%" y="2255.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5,456,795 samples, 2.18%)</title><rect x="32.2154%" y="2229" width="2.1848%" height="15" fill="rgb(237,140,51)" fg:x="80461678" fg:w="5456795"/><text x="32.4654%" y="2239.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,456,795 samples, 2.18%)</title><rect x="32.2154%" y="2213" width="2.1848%" height="15" fill="rgb(236,157,25)" fg:x="80461678" fg:w="5456795"/><text x="32.4654%" y="2223.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,306,872 samples, 0.52%)</title><rect x="33.8769%" y="2197" width="0.5232%" height="15" fill="rgb(219,209,0)" fg:x="84611601" fg:w="1306872"/><text x="34.1269%" y="2207.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,306,872 samples, 0.52%)</title><rect x="33.8769%" y="2181" width="0.5232%" height="15" fill="rgb(240,116,54)" fg:x="84611601" fg:w="1306872"/><text x="34.1269%" y="2191.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,306,872 samples, 0.52%)</title><rect x="33.8769%" y="2165" width="0.5232%" height="15" fill="rgb(216,10,36)" fg:x="84611601" fg:w="1306872"/><text x="34.1269%" y="2175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,306,872 samples, 0.52%)</title><rect x="33.8769%" y="2149" width="0.5232%" height="15" fill="rgb(222,72,44)" fg:x="84611601" fg:w="1306872"/><text x="34.1269%" y="2159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,306,872 samples, 0.52%)</title><rect x="33.8769%" y="2133" width="0.5232%" height="15" fill="rgb(232,159,9)" fg:x="84611601" fg:w="1306872"/><text x="34.1269%" y="2143.50"></text></g><g><title>alloc::alloc::alloc (1,306,872 samples, 0.52%)</title><rect x="33.8769%" y="2117" width="0.5232%" height="15" fill="rgb(210,39,32)" fg:x="84611601" fg:w="1306872"/><text x="34.1269%" y="2127.50"></text></g><g><title>malloc (1,306,872 samples, 0.52%)</title><rect x="33.8769%" y="2101" width="0.5232%" height="15" fill="rgb(216,194,45)" fg:x="84611601" fg:w="1306872"/><text x="34.1269%" y="2111.50"></text></g><g><title>[libc.so.6] (1,306,872 samples, 0.52%)</title><rect x="33.8769%" y="2085" width="0.5232%" height="15" fill="rgb(218,18,35)" fg:x="84611601" fg:w="1306872"/><text x="34.1269%" y="2095.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25,627,169 samples, 10.26%)</title><rect x="24.7167%" y="2501" width="10.2606%" height="15" fill="rgb(207,83,51)" fg:x="61732893" fg:w="25627169"/><text x="24.9667%" y="2511.50">&lt;alloc::vec::Ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25,627,169 samples, 10.26%)</title><rect x="24.7167%" y="2485" width="10.2606%" height="15" fill="rgb(225,63,43)" fg:x="61732893" fg:w="25627169"/><text x="24.9667%" y="2495.50">alloc::slice::&lt;..</text></g><g><title>alloc::slice::hack::to_vec (25,627,169 samples, 10.26%)</title><rect x="24.7167%" y="2469" width="10.2606%" height="15" fill="rgb(207,57,36)" fg:x="61732893" fg:w="25627169"/><text x="24.9667%" y="2479.50">alloc::slice::h..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25,627,169 samples, 10.26%)</title><rect x="24.7167%" y="2453" width="10.2606%" height="15" fill="rgb(216,99,33)" fg:x="61732893" fg:w="25627169"/><text x="24.9667%" y="2463.50">&lt;T as alloc::sl..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (24,223,644 samples, 9.70%)</title><rect x="25.2787%" y="2437" width="9.6987%" height="15" fill="rgb(225,42,16)" fg:x="63136418" fg:w="24223644"/><text x="25.5287%" y="2447.50">&lt;css_bitvector..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24,223,644 samples, 9.70%)</title><rect x="25.2787%" y="2421" width="9.6987%" height="15" fill="rgb(220,201,45)" fg:x="63136418" fg:w="24223644"/><text x="25.5287%" y="2431.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24,223,644 samples, 9.70%)</title><rect x="25.2787%" y="2405" width="9.6987%" height="15" fill="rgb(225,33,4)" fg:x="63136418" fg:w="24223644"/><text x="25.5287%" y="2415.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (24,223,644 samples, 9.70%)</title><rect x="25.2787%" y="2389" width="9.6987%" height="15" fill="rgb(224,33,50)" fg:x="63136418" fg:w="24223644"/><text x="25.5287%" y="2399.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24,223,644 samples, 9.70%)</title><rect x="25.2787%" y="2373" width="9.6987%" height="15" fill="rgb(246,198,51)" fg:x="63136418" fg:w="24223644"/><text x="25.5287%" y="2383.50">&lt;T as alloc::s..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (24,223,644 samples, 9.70%)</title><rect x="25.2787%" y="2357" width="9.6987%" height="15" fill="rgb(205,22,4)" fg:x="63136418" fg:w="24223644"/><text x="25.5287%" y="2367.50">&lt;css_bitvector..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24,223,644 samples, 9.70%)</title><rect x="25.2787%" y="2341" width="9.6987%" height="15" fill="rgb(206,3,8)" fg:x="63136418" fg:w="24223644"/><text x="25.5287%" y="2351.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24,223,644 samples, 9.70%)</title><rect x="25.2787%" y="2325" width="9.6987%" height="15" fill="rgb(251,23,15)" fg:x="63136418" fg:w="24223644"/><text x="25.5287%" y="2335.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (24,223,644 samples, 9.70%)</title><rect x="25.2787%" y="2309" width="9.6987%" height="15" fill="rgb(252,88,28)" fg:x="63136418" fg:w="24223644"/><text x="25.5287%" y="2319.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24,223,644 samples, 9.70%)</title><rect x="25.2787%" y="2293" width="9.6987%" height="15" fill="rgb(212,127,14)" fg:x="63136418" fg:w="24223644"/><text x="25.5287%" y="2303.50">&lt;T as alloc::s..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,441,589 samples, 0.58%)</title><rect x="34.4002%" y="2277" width="0.5772%" height="15" fill="rgb(247,145,37)" fg:x="85918473" fg:w="1441589"/><text x="34.6502%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,441,589 samples, 0.58%)</title><rect x="34.4002%" y="2261" width="0.5772%" height="15" fill="rgb(209,117,53)" fg:x="85918473" fg:w="1441589"/><text x="34.6502%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,441,589 samples, 0.58%)</title><rect x="34.4002%" y="2245" width="0.5772%" height="15" fill="rgb(212,90,42)" fg:x="85918473" fg:w="1441589"/><text x="34.6502%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,441,589 samples, 0.58%)</title><rect x="34.4002%" y="2229" width="0.5772%" height="15" fill="rgb(218,164,37)" fg:x="85918473" fg:w="1441589"/><text x="34.6502%" y="2239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,441,589 samples, 0.58%)</title><rect x="34.4002%" y="2213" width="0.5772%" height="15" fill="rgb(246,65,34)" fg:x="85918473" fg:w="1441589"/><text x="34.6502%" y="2223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,441,589 samples, 0.58%)</title><rect x="34.4002%" y="2197" width="0.5772%" height="15" fill="rgb(231,100,33)" fg:x="85918473" fg:w="1441589"/><text x="34.6502%" y="2207.50"></text></g><g><title>alloc::alloc::alloc (1,441,589 samples, 0.58%)</title><rect x="34.4002%" y="2181" width="0.5772%" height="15" fill="rgb(228,126,14)" fg:x="85918473" fg:w="1441589"/><text x="34.6502%" y="2191.50"></text></g><g><title>malloc (1,441,589 samples, 0.58%)</title><rect x="34.4002%" y="2165" width="0.5772%" height="15" fill="rgb(215,173,21)" fg:x="85918473" fg:w="1441589"/><text x="34.6502%" y="2175.50"></text></g><g><title>[libc.so.6] (1,441,589 samples, 0.58%)</title><rect x="34.4002%" y="2149" width="0.5772%" height="15" fill="rgb(210,6,40)" fg:x="85918473" fg:w="1441589"/><text x="34.6502%" y="2159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28,354,005 samples, 11.35%)</title><rect x="24.7167%" y="2581" width="11.3524%" height="15" fill="rgb(212,48,18)" fg:x="61732893" fg:w="28354005"/><text x="24.9667%" y="2591.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28,354,005 samples, 11.35%)</title><rect x="24.7167%" y="2565" width="11.3524%" height="15" fill="rgb(230,214,11)" fg:x="61732893" fg:w="28354005"/><text x="24.9667%" y="2575.50">alloc::slice::&lt;im..</text></g><g><title>alloc::slice::hack::to_vec (28,354,005 samples, 11.35%)</title><rect x="24.7167%" y="2549" width="11.3524%" height="15" fill="rgb(254,105,39)" fg:x="61732893" fg:w="28354005"/><text x="24.9667%" y="2559.50">alloc::slice::hac..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28,354,005 samples, 11.35%)</title><rect x="24.7167%" y="2533" width="11.3524%" height="15" fill="rgb(245,158,5)" fg:x="61732893" fg:w="28354005"/><text x="24.9667%" y="2543.50">&lt;T as alloc::slic..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (28,354,005 samples, 11.35%)</title><rect x="24.7167%" y="2517" width="11.3524%" height="15" fill="rgb(249,208,11)" fg:x="61732893" fg:w="28354005"/><text x="24.9667%" y="2527.50">&lt;css_bitvector_co..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,726,836 samples, 1.09%)</title><rect x="34.9774%" y="2501" width="1.0918%" height="15" fill="rgb(210,39,28)" fg:x="87360062" fg:w="2726836"/><text x="35.2274%" y="2511.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,726,836 samples, 1.09%)</title><rect x="34.9774%" y="2485" width="1.0918%" height="15" fill="rgb(211,56,53)" fg:x="87360062" fg:w="2726836"/><text x="35.2274%" y="2495.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,726,836 samples, 1.09%)</title><rect x="34.9774%" y="2469" width="1.0918%" height="15" fill="rgb(226,201,30)" fg:x="87360062" fg:w="2726836"/><text x="35.2274%" y="2479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,726,836 samples, 1.09%)</title><rect x="34.9774%" y="2453" width="1.0918%" height="15" fill="rgb(239,101,34)" fg:x="87360062" fg:w="2726836"/><text x="35.2274%" y="2463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,726,836 samples, 1.09%)</title><rect x="34.9774%" y="2437" width="1.0918%" height="15" fill="rgb(226,209,5)" fg:x="87360062" fg:w="2726836"/><text x="35.2274%" y="2447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,726,836 samples, 1.09%)</title><rect x="34.9774%" y="2421" width="1.0918%" height="15" fill="rgb(250,105,47)" fg:x="87360062" fg:w="2726836"/><text x="35.2274%" y="2431.50"></text></g><g><title>hashbrown::raw::RawTableInner::ctrl (1,401,728 samples, 0.56%)</title><rect x="35.5079%" y="2405" width="0.5612%" height="15" fill="rgb(230,72,3)" fg:x="88685170" fg:w="1401728"/><text x="35.7579%" y="2415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,218,063 samples, 0.49%)</title><rect x="36.0691%" y="2581" width="0.4877%" height="15" fill="rgb(232,218,39)" fg:x="90086898" fg:w="1218063"/><text x="36.3191%" y="2591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,218,063 samples, 0.49%)</title><rect x="36.0691%" y="2565" width="0.4877%" height="15" fill="rgb(248,166,6)" fg:x="90086898" fg:w="1218063"/><text x="36.3191%" y="2575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,218,063 samples, 0.49%)</title><rect x="36.0691%" y="2549" width="0.4877%" height="15" fill="rgb(247,89,20)" fg:x="90086898" fg:w="1218063"/><text x="36.3191%" y="2559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,218,063 samples, 0.49%)</title><rect x="36.0691%" y="2533" width="0.4877%" height="15" fill="rgb(248,130,54)" fg:x="90086898" fg:w="1218063"/><text x="36.3191%" y="2543.50"></text></g><g><title>alloc::slice::hack::to_vec (1,218,063 samples, 0.49%)</title><rect x="36.0691%" y="2517" width="0.4877%" height="15" fill="rgb(234,196,4)" fg:x="90086898" fg:w="1218063"/><text x="36.3191%" y="2527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,218,063 samples, 0.49%)</title><rect x="36.0691%" y="2501" width="0.4877%" height="15" fill="rgb(250,143,31)" fg:x="90086898" fg:w="1218063"/><text x="36.3191%" y="2511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,218,063 samples, 0.49%)</title><rect x="36.0691%" y="2485" width="0.4877%" height="15" fill="rgb(211,110,34)" fg:x="90086898" fg:w="1218063"/><text x="36.3191%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,218,063 samples, 0.49%)</title><rect x="36.0691%" y="2469" width="0.4877%" height="15" fill="rgb(215,124,48)" fg:x="90086898" fg:w="1218063"/><text x="36.3191%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,218,063 samples, 0.49%)</title><rect x="36.0691%" y="2453" width="0.4877%" height="15" fill="rgb(216,46,13)" fg:x="90086898" fg:w="1218063"/><text x="36.3191%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,218,063 samples, 0.49%)</title><rect x="36.0691%" y="2437" width="0.4877%" height="15" fill="rgb(205,184,25)" fg:x="90086898" fg:w="1218063"/><text x="36.3191%" y="2447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,218,063 samples, 0.49%)</title><rect x="36.0691%" y="2421" width="0.4877%" height="15" fill="rgb(228,1,10)" fg:x="90086898" fg:w="1218063"/><text x="36.3191%" y="2431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,218,063 samples, 0.49%)</title><rect x="36.0691%" y="2405" width="0.4877%" height="15" fill="rgb(213,116,27)" fg:x="90086898" fg:w="1218063"/><text x="36.3191%" y="2415.50"></text></g><g><title>alloc::alloc::alloc (1,218,063 samples, 0.49%)</title><rect x="36.0691%" y="2389" width="0.4877%" height="15" fill="rgb(241,95,50)" fg:x="90086898" fg:w="1218063"/><text x="36.3191%" y="2399.50"></text></g><g><title>malloc (1,218,063 samples, 0.49%)</title><rect x="36.0691%" y="2373" width="0.4877%" height="15" fill="rgb(238,48,32)" fg:x="90086898" fg:w="1218063"/><text x="36.3191%" y="2383.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,358,023 samples, 0.54%)</title><rect x="36.5568%" y="2581" width="0.5437%" height="15" fill="rgb(235,113,49)" fg:x="91304961" fg:w="1358023"/><text x="36.8068%" y="2591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,358,023 samples, 0.54%)</title><rect x="36.5568%" y="2565" width="0.5437%" height="15" fill="rgb(205,127,43)" fg:x="91304961" fg:w="1358023"/><text x="36.8068%" y="2575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,358,023 samples, 0.54%)</title><rect x="36.5568%" y="2549" width="0.5437%" height="15" fill="rgb(250,162,2)" fg:x="91304961" fg:w="1358023"/><text x="36.8068%" y="2559.50"></text></g><g><title>alloc::slice::hack::to_vec (1,358,023 samples, 0.54%)</title><rect x="36.5568%" y="2533" width="0.5437%" height="15" fill="rgb(220,13,41)" fg:x="91304961" fg:w="1358023"/><text x="36.8068%" y="2543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,358,023 samples, 0.54%)</title><rect x="36.5568%" y="2517" width="0.5437%" height="15" fill="rgb(249,221,25)" fg:x="91304961" fg:w="1358023"/><text x="36.8068%" y="2527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,358,023 samples, 0.54%)</title><rect x="36.5568%" y="2501" width="0.5437%" height="15" fill="rgb(215,208,19)" fg:x="91304961" fg:w="1358023"/><text x="36.8068%" y="2511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,358,023 samples, 0.54%)</title><rect x="36.5568%" y="2485" width="0.5437%" height="15" fill="rgb(236,175,2)" fg:x="91304961" fg:w="1358023"/><text x="36.8068%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,358,023 samples, 0.54%)</title><rect x="36.5568%" y="2469" width="0.5437%" height="15" fill="rgb(241,52,2)" fg:x="91304961" fg:w="1358023"/><text x="36.8068%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,358,023 samples, 0.54%)</title><rect x="36.5568%" y="2453" width="0.5437%" height="15" fill="rgb(248,140,14)" fg:x="91304961" fg:w="1358023"/><text x="36.8068%" y="2463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,358,023 samples, 0.54%)</title><rect x="36.5568%" y="2437" width="0.5437%" height="15" fill="rgb(253,22,42)" fg:x="91304961" fg:w="1358023"/><text x="36.8068%" y="2447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,358,023 samples, 0.54%)</title><rect x="36.5568%" y="2421" width="0.5437%" height="15" fill="rgb(234,61,47)" fg:x="91304961" fg:w="1358023"/><text x="36.8068%" y="2431.50"></text></g><g><title>alloc::alloc::alloc (1,358,023 samples, 0.54%)</title><rect x="36.5568%" y="2405" width="0.5437%" height="15" fill="rgb(208,226,15)" fg:x="91304961" fg:w="1358023"/><text x="36.8068%" y="2415.50"></text></g><g><title>malloc (1,358,023 samples, 0.54%)</title><rect x="36.5568%" y="2389" width="0.5437%" height="15" fill="rgb(217,221,4)" fg:x="91304961" fg:w="1358023"/><text x="36.8068%" y="2399.50"></text></g><g><title>[libc.so.6] (1,358,023 samples, 0.54%)</title><rect x="36.5568%" y="2373" width="0.5437%" height="15" fill="rgb(212,174,34)" fg:x="91304961" fg:w="1358023"/><text x="36.8068%" y="2383.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (33,684,262 samples, 13.49%)</title><rect x="24.7167%" y="2597" width="13.4866%" height="15" fill="rgb(253,83,4)" fg:x="61732893" fg:w="33684262"/><text x="24.9667%" y="2607.50">&lt;css_bitvector_compi..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2581" width="1.1027%" height="15" fill="rgb(250,195,49)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2591.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2565" width="1.1027%" height="15" fill="rgb(241,192,25)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2549" width="1.1027%" height="15" fill="rgb(208,124,10)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2533" width="1.1027%" height="15" fill="rgb(222,33,0)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2517" width="1.1027%" height="15" fill="rgb(234,209,28)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2501" width="1.1027%" height="15" fill="rgb(224,11,23)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2511.50"></text></g><g><title>core::clone::Clone::clone (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2485" width="1.1027%" height="15" fill="rgb(232,99,1)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2469" width="1.1027%" height="15" fill="rgb(237,95,45)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2453" width="1.1027%" height="15" fill="rgb(208,109,11)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2437" width="1.1027%" height="15" fill="rgb(216,190,48)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2447.50"></text></g><g><title>alloc::slice::hack::to_vec (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2421" width="1.1027%" height="15" fill="rgb(251,171,36)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2405" width="1.1027%" height="15" fill="rgb(230,62,22)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2389" width="1.1027%" height="15" fill="rgb(225,114,35)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2373" width="1.1027%" height="15" fill="rgb(215,118,42)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2357" width="1.1027%" height="15" fill="rgb(243,119,21)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2341" width="1.1027%" height="15" fill="rgb(252,177,53)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2325" width="1.1027%" height="15" fill="rgb(237,209,29)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2309" width="1.1027%" height="15" fill="rgb(212,65,23)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2319.50"></text></g><g><title>alloc::alloc::alloc (2,754,171 samples, 1.10%)</title><rect x="37.1006%" y="2293" width="1.1027%" height="15" fill="rgb(230,222,46)" fg:x="92662984" fg:w="2754171"/><text x="37.3506%" y="2303.50"></text></g><g><title>malloc (1,392,649 samples, 0.56%)</title><rect x="37.6457%" y="2277" width="0.5576%" height="15" fill="rgb(215,135,32)" fg:x="94024506" fg:w="1392649"/><text x="37.8957%" y="2287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (35,028,782 samples, 14.02%)</title><rect x="24.7167%" y="2661" width="14.0249%" height="15" fill="rgb(246,101,22)" fg:x="61732893" fg:w="35028782"/><text x="24.9667%" y="2671.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (35,028,782 samples, 14.02%)</title><rect x="24.7167%" y="2645" width="14.0249%" height="15" fill="rgb(206,107,13)" fg:x="61732893" fg:w="35028782"/><text x="24.9667%" y="2655.50">alloc::slice::&lt;impl [..</text></g><g><title>alloc::slice::hack::to_vec (35,028,782 samples, 14.02%)</title><rect x="24.7167%" y="2629" width="14.0249%" height="15" fill="rgb(250,100,44)" fg:x="61732893" fg:w="35028782"/><text x="24.9667%" y="2639.50">alloc::slice::hack::t..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (35,028,782 samples, 14.02%)</title><rect x="24.7167%" y="2613" width="14.0249%" height="15" fill="rgb(231,147,38)" fg:x="61732893" fg:w="35028782"/><text x="24.9667%" y="2623.50">&lt;T as alloc::slice::h..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,344,520 samples, 0.54%)</title><rect x="38.2033%" y="2597" width="0.5383%" height="15" fill="rgb(229,8,40)" fg:x="95417155" fg:w="1344520"/><text x="38.4533%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,344,520 samples, 0.54%)</title><rect x="38.2033%" y="2581" width="0.5383%" height="15" fill="rgb(221,135,30)" fg:x="95417155" fg:w="1344520"/><text x="38.4533%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,344,520 samples, 0.54%)</title><rect x="38.2033%" y="2565" width="0.5383%" height="15" fill="rgb(249,193,18)" fg:x="95417155" fg:w="1344520"/><text x="38.4533%" y="2575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,344,520 samples, 0.54%)</title><rect x="38.2033%" y="2549" width="0.5383%" height="15" fill="rgb(209,133,39)" fg:x="95417155" fg:w="1344520"/><text x="38.4533%" y="2559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,344,520 samples, 0.54%)</title><rect x="38.2033%" y="2533" width="0.5383%" height="15" fill="rgb(232,100,14)" fg:x="95417155" fg:w="1344520"/><text x="38.4533%" y="2543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,344,520 samples, 0.54%)</title><rect x="38.2033%" y="2517" width="0.5383%" height="15" fill="rgb(224,185,1)" fg:x="95417155" fg:w="1344520"/><text x="38.4533%" y="2527.50"></text></g><g><title>alloc::alloc::alloc (1,344,520 samples, 0.54%)</title><rect x="38.2033%" y="2501" width="0.5383%" height="15" fill="rgb(223,139,8)" fg:x="95417155" fg:w="1344520"/><text x="38.4533%" y="2511.50"></text></g><g><title>malloc (1,344,520 samples, 0.54%)</title><rect x="38.2033%" y="2485" width="0.5383%" height="15" fill="rgb(232,213,38)" fg:x="95417155" fg:w="1344520"/><text x="38.4533%" y="2495.50"></text></g><g><title>[libc.so.6] (1,344,520 samples, 0.54%)</title><rect x="38.2033%" y="2469" width="0.5383%" height="15" fill="rgb(207,94,22)" fg:x="95417155" fg:w="1344520"/><text x="38.4533%" y="2479.50"></text></g><g><title>[libc.so.6] (1,344,520 samples, 0.54%)</title><rect x="38.2033%" y="2453" width="0.5383%" height="15" fill="rgb(219,183,54)" fg:x="95417155" fg:w="1344520"/><text x="38.4533%" y="2463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,262,066 samples, 0.51%)</title><rect x="38.7416%" y="2661" width="0.5053%" height="15" fill="rgb(216,185,54)" fg:x="96761675" fg:w="1262066"/><text x="38.9916%" y="2671.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,363,671 samples, 0.55%)</title><rect x="39.2469%" y="2661" width="0.5460%" height="15" fill="rgb(254,217,39)" fg:x="98023741" fg:w="1363671"/><text x="39.4969%" y="2671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,363,671 samples, 0.55%)</title><rect x="39.2469%" y="2645" width="0.5460%" height="15" fill="rgb(240,178,23)" fg:x="98023741" fg:w="1363671"/><text x="39.4969%" y="2655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,363,671 samples, 0.55%)</title><rect x="39.2469%" y="2629" width="0.5460%" height="15" fill="rgb(218,11,47)" fg:x="98023741" fg:w="1363671"/><text x="39.4969%" y="2639.50"></text></g><g><title>alloc::slice::hack::to_vec (1,363,671 samples, 0.55%)</title><rect x="39.2469%" y="2613" width="0.5460%" height="15" fill="rgb(218,51,51)" fg:x="98023741" fg:w="1363671"/><text x="39.4969%" y="2623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,363,671 samples, 0.55%)</title><rect x="39.2469%" y="2597" width="0.5460%" height="15" fill="rgb(238,126,27)" fg:x="98023741" fg:w="1363671"/><text x="39.4969%" y="2607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,363,671 samples, 0.55%)</title><rect x="39.2469%" y="2581" width="0.5460%" height="15" fill="rgb(249,202,22)" fg:x="98023741" fg:w="1363671"/><text x="39.4969%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,363,671 samples, 0.55%)</title><rect x="39.2469%" y="2565" width="0.5460%" height="15" fill="rgb(254,195,49)" fg:x="98023741" fg:w="1363671"/><text x="39.4969%" y="2575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,363,671 samples, 0.55%)</title><rect x="39.2469%" y="2549" width="0.5460%" height="15" fill="rgb(208,123,14)" fg:x="98023741" fg:w="1363671"/><text x="39.4969%" y="2559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,363,671 samples, 0.55%)</title><rect x="39.2469%" y="2533" width="0.5460%" height="15" fill="rgb(224,200,8)" fg:x="98023741" fg:w="1363671"/><text x="39.4969%" y="2543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,363,671 samples, 0.55%)</title><rect x="39.2469%" y="2517" width="0.5460%" height="15" fill="rgb(217,61,36)" fg:x="98023741" fg:w="1363671"/><text x="39.4969%" y="2527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,363,671 samples, 0.55%)</title><rect x="39.2469%" y="2501" width="0.5460%" height="15" fill="rgb(206,35,45)" fg:x="98023741" fg:w="1363671"/><text x="39.4969%" y="2511.50"></text></g><g><title>alloc::alloc::alloc (1,363,671 samples, 0.55%)</title><rect x="39.2469%" y="2485" width="0.5460%" height="15" fill="rgb(217,65,33)" fg:x="98023741" fg:w="1363671"/><text x="39.4969%" y="2495.50"></text></g><g><title>malloc (1,363,671 samples, 0.55%)</title><rect x="39.2469%" y="2469" width="0.5460%" height="15" fill="rgb(222,158,48)" fg:x="98023741" fg:w="1363671"/><text x="39.4969%" y="2479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42,882,650 samples, 17.17%)</title><rect x="24.1870%" y="2741" width="17.1694%" height="15" fill="rgb(254,2,54)" fg:x="60409920" fg:w="42882650"/><text x="24.4370%" y="2751.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (42,882,650 samples, 17.17%)</title><rect x="24.1870%" y="2725" width="17.1694%" height="15" fill="rgb(250,143,38)" fg:x="60409920" fg:w="42882650"/><text x="24.4370%" y="2735.50">alloc::slice::&lt;impl [T]&gt;::t..</text></g><g><title>alloc::slice::hack::to_vec (42,882,650 samples, 17.17%)</title><rect x="24.1870%" y="2709" width="17.1694%" height="15" fill="rgb(248,25,0)" fg:x="60409920" fg:w="42882650"/><text x="24.4370%" y="2719.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42,882,650 samples, 17.17%)</title><rect x="24.1870%" y="2693" width="17.1694%" height="15" fill="rgb(206,152,27)" fg:x="60409920" fg:w="42882650"/><text x="24.4370%" y="2703.50">&lt;T as alloc::slice::hack::C..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (42,882,650 samples, 17.17%)</title><rect x="24.1870%" y="2677" width="17.1694%" height="15" fill="rgb(240,77,30)" fg:x="60409920" fg:w="42882650"/><text x="24.4370%" y="2687.50">&lt;css_bitvector_compiler::Ht..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,905,158 samples, 1.56%)</title><rect x="39.7929%" y="2661" width="1.5636%" height="15" fill="rgb(231,5,3)" fg:x="99387412" fg:w="3905158"/><text x="40.0429%" y="2671.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,905,158 samples, 1.56%)</title><rect x="39.7929%" y="2645" width="1.5636%" height="15" fill="rgb(207,226,32)" fg:x="99387412" fg:w="3905158"/><text x="40.0429%" y="2655.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2629" width="0.5075%" height="15" fill="rgb(222,207,47)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2613" width="0.5075%" height="15" fill="rgb(229,115,45)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2597" width="0.5075%" height="15" fill="rgb(224,191,6)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2581" width="0.5075%" height="15" fill="rgb(230,227,24)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2591.50"></text></g><g><title>core::clone::Clone::clone (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2565" width="0.5075%" height="15" fill="rgb(228,80,19)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2549" width="0.5075%" height="15" fill="rgb(247,229,0)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2533" width="0.5075%" height="15" fill="rgb(237,194,15)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2517" width="0.5075%" height="15" fill="rgb(219,203,20)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2527.50"></text></g><g><title>alloc::slice::hack::to_vec (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2501" width="0.5075%" height="15" fill="rgb(234,128,8)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2485" width="0.5075%" height="15" fill="rgb(248,202,8)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2469" width="0.5075%" height="15" fill="rgb(206,104,37)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2453" width="0.5075%" height="15" fill="rgb(223,8,27)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2437" width="0.5075%" height="15" fill="rgb(216,217,28)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2421" width="0.5075%" height="15" fill="rgb(249,199,1)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2405" width="0.5075%" height="15" fill="rgb(240,85,17)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2389" width="0.5075%" height="15" fill="rgb(206,108,45)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2399.50"></text></g><g><title>alloc::alloc::alloc (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2373" width="0.5075%" height="15" fill="rgb(245,210,41)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2383.50"></text></g><g><title>malloc (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2357" width="0.5075%" height="15" fill="rgb(206,13,37)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2367.50"></text></g><g><title>[libc.so.6] (1,267,627 samples, 0.51%)</title><rect x="40.8489%" y="2341" width="0.5075%" height="15" fill="rgb(250,61,18)" fg:x="102024943" fg:w="1267627"/><text x="41.0989%" y="2351.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,352,870 samples, 0.54%)</title><rect x="41.3565%" y="2741" width="0.5417%" height="15" fill="rgb(235,172,48)" fg:x="103292570" fg:w="1352870"/><text x="41.6065%" y="2751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (988,386 samples, 0.40%)</title><rect x="41.8981%" y="2677" width="0.3957%" height="15" fill="rgb(249,201,17)" fg:x="104645440" fg:w="988386"/><text x="42.1481%" y="2687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (988,386 samples, 0.40%)</title><rect x="41.8981%" y="2661" width="0.3957%" height="15" fill="rgb(219,208,6)" fg:x="104645440" fg:w="988386"/><text x="42.1481%" y="2671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (988,386 samples, 0.40%)</title><rect x="41.8981%" y="2645" width="0.3957%" height="15" fill="rgb(248,31,23)" fg:x="104645440" fg:w="988386"/><text x="42.1481%" y="2655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (988,386 samples, 0.40%)</title><rect x="41.8981%" y="2629" width="0.3957%" height="15" fill="rgb(245,15,42)" fg:x="104645440" fg:w="988386"/><text x="42.1481%" y="2639.50"></text></g><g><title>core::ptr::write (988,386 samples, 0.40%)</title><rect x="41.8981%" y="2613" width="0.3957%" height="15" fill="rgb(222,217,39)" fg:x="104645440" fg:w="988386"/><text x="42.1481%" y="2623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (47,830,721 samples, 19.15%)</title><rect x="23.6470%" y="2821" width="19.1505%" height="15" fill="rgb(210,219,27)" fg:x="59061081" fg:w="47830721"/><text x="23.8970%" y="2831.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (47,830,721 samples, 19.15%)</title><rect x="23.6470%" y="2805" width="19.1505%" height="15" fill="rgb(252,166,36)" fg:x="59061081" fg:w="47830721"/><text x="23.8970%" y="2815.50">alloc::slice::&lt;impl [T]&gt;::to_v..</text></g><g><title>alloc::slice::hack::to_vec (47,830,721 samples, 19.15%)</title><rect x="23.6470%" y="2789" width="19.1505%" height="15" fill="rgb(245,132,34)" fg:x="59061081" fg:w="47830721"/><text x="23.8970%" y="2799.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (47,830,721 samples, 19.15%)</title><rect x="23.6470%" y="2773" width="19.1505%" height="15" fill="rgb(236,54,3)" fg:x="59061081" fg:w="47830721"/><text x="23.8970%" y="2783.50">&lt;T as alloc::slice::hack::Conv..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (47,830,721 samples, 19.15%)</title><rect x="23.6470%" y="2757" width="19.1505%" height="15" fill="rgb(241,173,43)" fg:x="59061081" fg:w="47830721"/><text x="23.8970%" y="2767.50">&lt;css_bitvector_compiler::HtmlN..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,246,362 samples, 0.90%)</title><rect x="41.8981%" y="2741" width="0.8994%" height="15" fill="rgb(215,190,9)" fg:x="104645440" fg:w="2246362"/><text x="42.1481%" y="2751.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,246,362 samples, 0.90%)</title><rect x="41.8981%" y="2725" width="0.8994%" height="15" fill="rgb(242,101,16)" fg:x="104645440" fg:w="2246362"/><text x="42.1481%" y="2735.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,246,362 samples, 0.90%)</title><rect x="41.8981%" y="2709" width="0.8994%" height="15" fill="rgb(223,190,21)" fg:x="104645440" fg:w="2246362"/><text x="42.1481%" y="2719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,246,362 samples, 0.90%)</title><rect x="41.8981%" y="2693" width="0.8994%" height="15" fill="rgb(215,228,25)" fg:x="104645440" fg:w="2246362"/><text x="42.1481%" y="2703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,257,976 samples, 0.50%)</title><rect x="42.2938%" y="2677" width="0.5037%" height="15" fill="rgb(225,36,22)" fg:x="105633826" fg:w="1257976"/><text x="42.5438%" y="2687.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,257,976 samples, 0.50%)</title><rect x="42.2938%" y="2661" width="0.5037%" height="15" fill="rgb(251,106,46)" fg:x="105633826" fg:w="1257976"/><text x="42.5438%" y="2671.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,257,976 samples, 0.50%)</title><rect x="42.2938%" y="2645" width="0.5037%" height="15" fill="rgb(208,90,1)" fg:x="105633826" fg:w="1257976"/><text x="42.5438%" y="2655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,257,976 samples, 0.50%)</title><rect x="42.2938%" y="2629" width="0.5037%" height="15" fill="rgb(243,10,4)" fg:x="105633826" fg:w="1257976"/><text x="42.5438%" y="2639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,257,976 samples, 0.50%)</title><rect x="42.2938%" y="2613" width="0.5037%" height="15" fill="rgb(212,137,27)" fg:x="105633826" fg:w="1257976"/><text x="42.5438%" y="2623.50"></text></g><g><title>alloc::alloc::alloc (1,257,976 samples, 0.50%)</title><rect x="42.2938%" y="2597" width="0.5037%" height="15" fill="rgb(231,220,49)" fg:x="105633826" fg:w="1257976"/><text x="42.5438%" y="2607.50"></text></g><g><title>malloc (1,257,976 samples, 0.50%)</title><rect x="42.2938%" y="2581" width="0.5037%" height="15" fill="rgb(237,96,20)" fg:x="105633826" fg:w="1257976"/><text x="42.5438%" y="2591.50"></text></g><g><title>[libc.so.6] (1,257,976 samples, 0.50%)</title><rect x="42.2938%" y="2565" width="0.5037%" height="15" fill="rgb(239,229,30)" fg:x="105633826" fg:w="1257976"/><text x="42.5438%" y="2575.50"></text></g><g><title>[libc.so.6] (4,041,583 samples, 1.62%)</title><rect x="42.7975%" y="2597" width="1.6182%" height="15" fill="rgb(219,65,33)" fg:x="106891802" fg:w="4041583"/><text x="43.0475%" y="2607.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5,282,157 samples, 2.11%)</title><rect x="42.7975%" y="2821" width="2.1149%" height="15" fill="rgb(243,134,7)" fg:x="106891802" fg:w="5282157"/><text x="43.0475%" y="2831.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,282,157 samples, 2.11%)</title><rect x="42.7975%" y="2805" width="2.1149%" height="15" fill="rgb(216,177,54)" fg:x="106891802" fg:w="5282157"/><text x="43.0475%" y="2815.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,282,157 samples, 2.11%)</title><rect x="42.7975%" y="2789" width="2.1149%" height="15" fill="rgb(211,160,20)" fg:x="106891802" fg:w="5282157"/><text x="43.0475%" y="2799.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,282,157 samples, 2.11%)</title><rect x="42.7975%" y="2773" width="2.1149%" height="15" fill="rgb(239,85,39)" fg:x="106891802" fg:w="5282157"/><text x="43.0475%" y="2783.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,282,157 samples, 2.11%)</title><rect x="42.7975%" y="2757" width="2.1149%" height="15" fill="rgb(232,125,22)" fg:x="106891802" fg:w="5282157"/><text x="43.0475%" y="2767.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,282,157 samples, 2.11%)</title><rect x="42.7975%" y="2741" width="2.1149%" height="15" fill="rgb(244,57,34)" fg:x="106891802" fg:w="5282157"/><text x="43.0475%" y="2751.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,282,157 samples, 2.11%)</title><rect x="42.7975%" y="2725" width="2.1149%" height="15" fill="rgb(214,203,32)" fg:x="106891802" fg:w="5282157"/><text x="43.0475%" y="2735.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,282,157 samples, 2.11%)</title><rect x="42.7975%" y="2709" width="2.1149%" height="15" fill="rgb(207,58,43)" fg:x="106891802" fg:w="5282157"/><text x="43.0475%" y="2719.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,282,157 samples, 2.11%)</title><rect x="42.7975%" y="2693" width="2.1149%" height="15" fill="rgb(215,193,15)" fg:x="106891802" fg:w="5282157"/><text x="43.0475%" y="2703.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,282,157 samples, 2.11%)</title><rect x="42.7975%" y="2677" width="2.1149%" height="15" fill="rgb(232,15,44)" fg:x="106891802" fg:w="5282157"/><text x="43.0475%" y="2687.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,282,157 samples, 2.11%)</title><rect x="42.7975%" y="2661" width="2.1149%" height="15" fill="rgb(212,3,48)" fg:x="106891802" fg:w="5282157"/><text x="43.0475%" y="2671.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,282,157 samples, 2.11%)</title><rect x="42.7975%" y="2645" width="2.1149%" height="15" fill="rgb(218,128,7)" fg:x="106891802" fg:w="5282157"/><text x="43.0475%" y="2655.50">a..</text></g><g><title>alloc::alloc::alloc (5,282,157 samples, 2.11%)</title><rect x="42.7975%" y="2629" width="2.1149%" height="15" fill="rgb(226,216,39)" fg:x="106891802" fg:w="5282157"/><text x="43.0475%" y="2639.50">a..</text></g><g><title>malloc (5,282,157 samples, 2.11%)</title><rect x="42.7975%" y="2613" width="2.1149%" height="15" fill="rgb(243,47,51)" fg:x="106891802" fg:w="5282157"/><text x="43.0475%" y="2623.50">m..</text></g><g><title>[unknown] (1,240,574 samples, 0.50%)</title><rect x="44.4157%" y="2597" width="0.4967%" height="15" fill="rgb(241,183,40)" fg:x="110933385" fg:w="1240574"/><text x="44.6657%" y="2607.50"></text></g><g><title>[libc.so.6] (1,240,574 samples, 0.50%)</title><rect x="44.4157%" y="2581" width="0.4967%" height="15" fill="rgb(231,217,32)" fg:x="110933385" fg:w="1240574"/><text x="44.6657%" y="2591.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,740,219 samples, 1.50%)</title><rect x="44.9124%" y="2821" width="1.4975%" height="15" fill="rgb(229,61,38)" fg:x="112173959" fg:w="3740219"/><text x="45.1624%" y="2831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,740,219 samples, 1.50%)</title><rect x="44.9124%" y="2805" width="1.4975%" height="15" fill="rgb(225,210,5)" fg:x="112173959" fg:w="3740219"/><text x="45.1624%" y="2815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,740,219 samples, 1.50%)</title><rect x="44.9124%" y="2789" width="1.4975%" height="15" fill="rgb(231,79,45)" fg:x="112173959" fg:w="3740219"/><text x="45.1624%" y="2799.50"></text></g><g><title>alloc::slice::hack::to_vec (3,740,219 samples, 1.50%)</title><rect x="44.9124%" y="2773" width="1.4975%" height="15" fill="rgb(224,100,7)" fg:x="112173959" fg:w="3740219"/><text x="45.1624%" y="2783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,740,219 samples, 1.50%)</title><rect x="44.9124%" y="2757" width="1.4975%" height="15" fill="rgb(241,198,18)" fg:x="112173959" fg:w="3740219"/><text x="45.1624%" y="2767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,740,219 samples, 1.50%)</title><rect x="44.9124%" y="2741" width="1.4975%" height="15" fill="rgb(252,97,53)" fg:x="112173959" fg:w="3740219"/><text x="45.1624%" y="2751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,740,219 samples, 1.50%)</title><rect x="44.9124%" y="2725" width="1.4975%" height="15" fill="rgb(220,88,7)" fg:x="112173959" fg:w="3740219"/><text x="45.1624%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,740,219 samples, 1.50%)</title><rect x="44.9124%" y="2709" width="1.4975%" height="15" fill="rgb(213,176,14)" fg:x="112173959" fg:w="3740219"/><text x="45.1624%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,740,219 samples, 1.50%)</title><rect x="44.9124%" y="2693" width="1.4975%" height="15" fill="rgb(246,73,7)" fg:x="112173959" fg:w="3740219"/><text x="45.1624%" y="2703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,740,219 samples, 1.50%)</title><rect x="44.9124%" y="2677" width="1.4975%" height="15" fill="rgb(245,64,36)" fg:x="112173959" fg:w="3740219"/><text x="45.1624%" y="2687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,740,219 samples, 1.50%)</title><rect x="44.9124%" y="2661" width="1.4975%" height="15" fill="rgb(245,80,10)" fg:x="112173959" fg:w="3740219"/><text x="45.1624%" y="2671.50"></text></g><g><title>alloc::alloc::alloc (3,740,219 samples, 1.50%)</title><rect x="44.9124%" y="2645" width="1.4975%" height="15" fill="rgb(232,107,50)" fg:x="112173959" fg:w="3740219"/><text x="45.1624%" y="2655.50"></text></g><g><title>malloc (3,740,219 samples, 1.50%)</title><rect x="44.9124%" y="2629" width="1.4975%" height="15" fill="rgb(253,3,0)" fg:x="112173959" fg:w="3740219"/><text x="45.1624%" y="2639.50"></text></g><g><title>[libc.so.6] (3,740,219 samples, 1.50%)</title><rect x="44.9124%" y="2613" width="1.4975%" height="15" fill="rgb(212,99,53)" fg:x="112173959" fg:w="3740219"/><text x="45.1624%" y="2623.50"></text></g><g><title>[libc.so.6] (1,226,121 samples, 0.49%)</title><rect x="45.9190%" y="2597" width="0.4909%" height="15" fill="rgb(249,111,54)" fg:x="114688057" fg:w="1226121"/><text x="46.1690%" y="2607.50"></text></g><g><title>core::clone::Clone::clone (1,273,140 samples, 0.51%)</title><rect x="46.4099%" y="2725" width="0.5097%" height="15" fill="rgb(249,55,30)" fg:x="115914178" fg:w="1273140"/><text x="46.6599%" y="2735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,273,140 samples, 0.51%)</title><rect x="46.4099%" y="2709" width="0.5097%" height="15" fill="rgb(237,47,42)" fg:x="115914178" fg:w="1273140"/><text x="46.6599%" y="2719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,273,140 samples, 0.51%)</title><rect x="46.4099%" y="2693" width="0.5097%" height="15" fill="rgb(211,20,18)" fg:x="115914178" fg:w="1273140"/><text x="46.6599%" y="2703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,273,140 samples, 0.51%)</title><rect x="46.4099%" y="2677" width="0.5097%" height="15" fill="rgb(231,203,46)" fg:x="115914178" fg:w="1273140"/><text x="46.6599%" y="2687.50"></text></g><g><title>alloc::slice::hack::to_vec (1,273,140 samples, 0.51%)</title><rect x="46.4099%" y="2661" width="0.5097%" height="15" fill="rgb(237,142,3)" fg:x="115914178" fg:w="1273140"/><text x="46.6599%" y="2671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,273,140 samples, 0.51%)</title><rect x="46.4099%" y="2645" width="0.5097%" height="15" fill="rgb(241,107,1)" fg:x="115914178" fg:w="1273140"/><text x="46.6599%" y="2655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,273,140 samples, 0.51%)</title><rect x="46.4099%" y="2629" width="0.5097%" height="15" fill="rgb(229,83,13)" fg:x="115914178" fg:w="1273140"/><text x="46.6599%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,273,140 samples, 0.51%)</title><rect x="46.4099%" y="2613" width="0.5097%" height="15" fill="rgb(241,91,40)" fg:x="115914178" fg:w="1273140"/><text x="46.6599%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,273,140 samples, 0.51%)</title><rect x="46.4099%" y="2597" width="0.5097%" height="15" fill="rgb(225,3,45)" fg:x="115914178" fg:w="1273140"/><text x="46.6599%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,273,140 samples, 0.51%)</title><rect x="46.4099%" y="2581" width="0.5097%" height="15" fill="rgb(244,223,14)" fg:x="115914178" fg:w="1273140"/><text x="46.6599%" y="2591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,273,140 samples, 0.51%)</title><rect x="46.4099%" y="2565" width="0.5097%" height="15" fill="rgb(224,124,37)" fg:x="115914178" fg:w="1273140"/><text x="46.6599%" y="2575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,273,140 samples, 0.51%)</title><rect x="46.4099%" y="2549" width="0.5097%" height="15" fill="rgb(251,171,30)" fg:x="115914178" fg:w="1273140"/><text x="46.6599%" y="2559.50"></text></g><g><title>alloc::alloc::alloc (1,273,140 samples, 0.51%)</title><rect x="46.4099%" y="2533" width="0.5097%" height="15" fill="rgb(236,46,54)" fg:x="115914178" fg:w="1273140"/><text x="46.6599%" y="2543.50"></text></g><g><title>malloc (1,273,140 samples, 0.51%)</title><rect x="46.4099%" y="2517" width="0.5097%" height="15" fill="rgb(245,213,5)" fg:x="115914178" fg:w="1273140"/><text x="46.6599%" y="2527.50"></text></g><g><title>[libc.so.6] (1,273,140 samples, 0.51%)</title><rect x="46.4099%" y="2501" width="0.5097%" height="15" fill="rgb(230,144,27)" fg:x="115914178" fg:w="1273140"/><text x="46.6599%" y="2511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,611,734 samples, 1.05%)</title><rect x="46.4099%" y="2757" width="1.0457%" height="15" fill="rgb(220,86,6)" fg:x="115914178" fg:w="2611734"/><text x="46.6599%" y="2767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,611,734 samples, 1.05%)</title><rect x="46.4099%" y="2741" width="1.0457%" height="15" fill="rgb(240,20,13)" fg:x="115914178" fg:w="2611734"/><text x="46.6599%" y="2751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1,338,594 samples, 0.54%)</title><rect x="46.9197%" y="2725" width="0.5359%" height="15" fill="rgb(217,89,34)" fg:x="117187318" fg:w="1338594"/><text x="47.1697%" y="2735.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,338,594 samples, 0.54%)</title><rect x="46.9197%" y="2709" width="0.5359%" height="15" fill="rgb(229,13,5)" fg:x="117187318" fg:w="1338594"/><text x="47.1697%" y="2719.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,338,594 samples, 0.54%)</title><rect x="46.9197%" y="2693" width="0.5359%" height="15" fill="rgb(244,67,35)" fg:x="117187318" fg:w="1338594"/><text x="47.1697%" y="2703.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_full (1,338,594 samples, 0.54%)</title><rect x="46.9197%" y="2677" width="0.5359%" height="15" fill="rgb(221,40,2)" fg:x="117187318" fg:w="1338594"/><text x="47.1697%" y="2687.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty_or_deleted (1,338,594 samples, 0.54%)</title><rect x="46.9197%" y="2661" width="0.5359%" height="15" fill="rgb(237,157,21)" fg:x="117187318" fg:w="1338594"/><text x="47.1697%" y="2671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,338,594 samples, 0.54%)</title><rect x="46.9197%" y="2645" width="0.5359%" height="15" fill="rgb(222,94,11)" fg:x="117187318" fg:w="1338594"/><text x="47.1697%" y="2655.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (63,144,809 samples, 25.28%)</title><rect x="22.5571%" y="2837" width="25.2820%" height="15" fill="rgb(249,113,6)" fg:x="56338894" fg:w="63144809"/><text x="22.8071%" y="2847.50">&lt;css_bitvector_compiler::HtmlNode as cor..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,569,525 samples, 1.43%)</title><rect x="46.4099%" y="2821" width="1.4292%" height="15" fill="rgb(238,137,36)" fg:x="115914178" fg:w="3569525"/><text x="46.6599%" y="2831.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,569,525 samples, 1.43%)</title><rect x="46.4099%" y="2805" width="1.4292%" height="15" fill="rgb(210,102,26)" fg:x="115914178" fg:w="3569525"/><text x="46.6599%" y="2815.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,569,525 samples, 1.43%)</title><rect x="46.4099%" y="2789" width="1.4292%" height="15" fill="rgb(218,30,30)" fg:x="115914178" fg:w="3569525"/><text x="46.6599%" y="2799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,569,525 samples, 1.43%)</title><rect x="46.4099%" y="2773" width="1.4292%" height="15" fill="rgb(214,67,26)" fg:x="115914178" fg:w="3569525"/><text x="46.6599%" y="2783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (957,791 samples, 0.38%)</title><rect x="47.4556%" y="2757" width="0.3835%" height="15" fill="rgb(251,9,53)" fg:x="118525912" fg:w="957791"/><text x="47.7056%" y="2767.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (957,791 samples, 0.38%)</title><rect x="47.4556%" y="2741" width="0.3835%" height="15" fill="rgb(228,204,25)" fg:x="118525912" fg:w="957791"/><text x="47.7056%" y="2751.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (957,791 samples, 0.38%)</title><rect x="47.4556%" y="2725" width="0.3835%" height="15" fill="rgb(207,153,8)" fg:x="118525912" fg:w="957791"/><text x="47.7056%" y="2735.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (957,791 samples, 0.38%)</title><rect x="47.4556%" y="2709" width="0.3835%" height="15" fill="rgb(242,9,16)" fg:x="118525912" fg:w="957791"/><text x="47.7056%" y="2719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,415,856 samples, 0.97%)</title><rect x="47.8391%" y="2837" width="0.9673%" height="15" fill="rgb(217,211,10)" fg:x="119483703" fg:w="2415856"/><text x="48.0891%" y="2847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,415,856 samples, 0.97%)</title><rect x="47.8391%" y="2821" width="0.9673%" height="15" fill="rgb(219,228,52)" fg:x="119483703" fg:w="2415856"/><text x="48.0891%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,415,856 samples, 0.97%)</title><rect x="47.8391%" y="2805" width="0.9673%" height="15" fill="rgb(231,92,29)" fg:x="119483703" fg:w="2415856"/><text x="48.0891%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,415,856 samples, 0.97%)</title><rect x="47.8391%" y="2789" width="0.9673%" height="15" fill="rgb(232,8,23)" fg:x="119483703" fg:w="2415856"/><text x="48.0891%" y="2799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,415,856 samples, 0.97%)</title><rect x="47.8391%" y="2773" width="0.9673%" height="15" fill="rgb(216,211,34)" fg:x="119483703" fg:w="2415856"/><text x="48.0891%" y="2783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,415,856 samples, 0.97%)</title><rect x="47.8391%" y="2757" width="0.9673%" height="15" fill="rgb(236,151,0)" fg:x="119483703" fg:w="2415856"/><text x="48.0891%" y="2767.50"></text></g><g><title>alloc::alloc::alloc (2,415,856 samples, 0.97%)</title><rect x="47.8391%" y="2741" width="0.9673%" height="15" fill="rgb(209,168,3)" fg:x="119483703" fg:w="2415856"/><text x="48.0891%" y="2751.50"></text></g><g><title>malloc (2,415,856 samples, 0.97%)</title><rect x="47.8391%" y="2725" width="0.9673%" height="15" fill="rgb(208,129,28)" fg:x="119483703" fg:w="2415856"/><text x="48.0891%" y="2735.50"></text></g><g><title>[libc.so.6] (2,415,856 samples, 0.97%)</title><rect x="47.8391%" y="2709" width="0.9673%" height="15" fill="rgb(229,78,22)" fg:x="119483703" fg:w="2415856"/><text x="48.0891%" y="2719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (66,897,362 samples, 26.78%)</title><rect x="22.5571%" y="2901" width="26.7845%" height="15" fill="rgb(228,187,13)" fg:x="56338894" fg:w="66897362"/><text x="22.8071%" y="2911.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (66,897,362 samples, 26.78%)</title><rect x="22.5571%" y="2885" width="26.7845%" height="15" fill="rgb(240,119,24)" fg:x="56338894" fg:w="66897362"/><text x="22.8071%" y="2895.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (66,897,362 samples, 26.78%)</title><rect x="22.5571%" y="2869" width="26.7845%" height="15" fill="rgb(209,194,42)" fg:x="56338894" fg:w="66897362"/><text x="22.8071%" y="2879.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (66,897,362 samples, 26.78%)</title><rect x="22.5571%" y="2853" width="26.7845%" height="15" fill="rgb(247,200,46)" fg:x="56338894" fg:w="66897362"/><text x="22.8071%" y="2863.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_v..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,336,697 samples, 0.54%)</title><rect x="48.8064%" y="2837" width="0.5352%" height="15" fill="rgb(218,76,16)" fg:x="121899559" fg:w="1336697"/><text x="49.0564%" y="2847.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,407,292 samples, 0.56%)</title><rect x="49.3415%" y="2901" width="0.5635%" height="15" fill="rgb(225,21,48)" fg:x="123236256" fg:w="1407292"/><text x="49.5915%" y="2911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,407,292 samples, 0.56%)</title><rect x="49.3415%" y="2885" width="0.5635%" height="15" fill="rgb(239,223,50)" fg:x="123236256" fg:w="1407292"/><text x="49.5915%" y="2895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,407,292 samples, 0.56%)</title><rect x="49.3415%" y="2869" width="0.5635%" height="15" fill="rgb(244,45,21)" fg:x="123236256" fg:w="1407292"/><text x="49.5915%" y="2879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,407,292 samples, 0.56%)</title><rect x="49.3415%" y="2853" width="0.5635%" height="15" fill="rgb(232,33,43)" fg:x="123236256" fg:w="1407292"/><text x="49.5915%" y="2863.50"></text></g><g><title>alloc::slice::hack::to_vec (1,407,292 samples, 0.56%)</title><rect x="49.3415%" y="2837" width="0.5635%" height="15" fill="rgb(209,8,3)" fg:x="123236256" fg:w="1407292"/><text x="49.5915%" y="2847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,407,292 samples, 0.56%)</title><rect x="49.3415%" y="2821" width="0.5635%" height="15" fill="rgb(214,25,53)" fg:x="123236256" fg:w="1407292"/><text x="49.5915%" y="2831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,407,292 samples, 0.56%)</title><rect x="49.3415%" y="2805" width="0.5635%" height="15" fill="rgb(254,186,54)" fg:x="123236256" fg:w="1407292"/><text x="49.5915%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,407,292 samples, 0.56%)</title><rect x="49.3415%" y="2789" width="0.5635%" height="15" fill="rgb(208,174,49)" fg:x="123236256" fg:w="1407292"/><text x="49.5915%" y="2799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,407,292 samples, 0.56%)</title><rect x="49.3415%" y="2773" width="0.5635%" height="15" fill="rgb(233,191,51)" fg:x="123236256" fg:w="1407292"/><text x="49.5915%" y="2783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,407,292 samples, 0.56%)</title><rect x="49.3415%" y="2757" width="0.5635%" height="15" fill="rgb(222,134,10)" fg:x="123236256" fg:w="1407292"/><text x="49.5915%" y="2767.50"></text></g><g><title>alloc::raw_vec::layout_array (1,407,292 samples, 0.56%)</title><rect x="49.3415%" y="2741" width="0.5635%" height="15" fill="rgb(230,226,20)" fg:x="123236256" fg:w="1407292"/><text x="49.5915%" y="2751.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1,407,292 samples, 0.56%)</title><rect x="49.3415%" y="2725" width="0.5635%" height="15" fill="rgb(251,111,25)" fg:x="123236256" fg:w="1407292"/><text x="49.5915%" y="2735.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (1,407,292 samples, 0.56%)</title><rect x="49.3415%" y="2709" width="0.5635%" height="15" fill="rgb(224,40,46)" fg:x="123236256" fg:w="1407292"/><text x="49.5915%" y="2719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1,407,292 samples, 0.56%)</title><rect x="49.3415%" y="2693" width="0.5635%" height="15" fill="rgb(236,108,47)" fg:x="123236256" fg:w="1407292"/><text x="49.5915%" y="2703.50"></text></g><g><title>core::intrinsics::unlikely (1,407,292 samples, 0.56%)</title><rect x="49.3415%" y="2677" width="0.5635%" height="15" fill="rgb(234,93,0)" fg:x="123236256" fg:w="1407292"/><text x="49.5915%" y="2687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,411,980 samples, 0.57%)</title><rect x="49.9050%" y="2821" width="0.5653%" height="15" fill="rgb(224,213,32)" fg:x="124643548" fg:w="1411980"/><text x="50.1550%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,411,980 samples, 0.57%)</title><rect x="49.9050%" y="2805" width="0.5653%" height="15" fill="rgb(251,11,48)" fg:x="124643548" fg:w="1411980"/><text x="50.1550%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,411,980 samples, 0.57%)</title><rect x="49.9050%" y="2789" width="0.5653%" height="15" fill="rgb(236,173,5)" fg:x="124643548" fg:w="1411980"/><text x="50.1550%" y="2799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,411,980 samples, 0.57%)</title><rect x="49.9050%" y="2773" width="0.5653%" height="15" fill="rgb(230,95,12)" fg:x="124643548" fg:w="1411980"/><text x="50.1550%" y="2783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,411,980 samples, 0.57%)</title><rect x="49.9050%" y="2757" width="0.5653%" height="15" fill="rgb(232,209,1)" fg:x="124643548" fg:w="1411980"/><text x="50.1550%" y="2767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,411,980 samples, 0.57%)</title><rect x="49.9050%" y="2741" width="0.5653%" height="15" fill="rgb(232,6,1)" fg:x="124643548" fg:w="1411980"/><text x="50.1550%" y="2751.50"></text></g><g><title>alloc::alloc::alloc (1,411,980 samples, 0.57%)</title><rect x="49.9050%" y="2725" width="0.5653%" height="15" fill="rgb(210,224,50)" fg:x="124643548" fg:w="1411980"/><text x="50.1550%" y="2735.50"></text></g><g><title>malloc (1,411,980 samples, 0.57%)</title><rect x="49.9050%" y="2709" width="0.5653%" height="15" fill="rgb(228,127,35)" fg:x="124643548" fg:w="1411980"/><text x="50.1550%" y="2719.50"></text></g><g><title>[libc.so.6] (1,411,980 samples, 0.57%)</title><rect x="49.9050%" y="2693" width="0.5653%" height="15" fill="rgb(245,102,45)" fg:x="124643548" fg:w="1411980"/><text x="50.1550%" y="2703.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,632,555 samples, 1.05%)</title><rect x="49.9050%" y="2901" width="1.0540%" height="15" fill="rgb(214,1,49)" fg:x="124643548" fg:w="2632555"/><text x="50.1550%" y="2911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,632,555 samples, 1.05%)</title><rect x="49.9050%" y="2885" width="1.0540%" height="15" fill="rgb(226,163,40)" fg:x="124643548" fg:w="2632555"/><text x="50.1550%" y="2895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,632,555 samples, 1.05%)</title><rect x="49.9050%" y="2869" width="1.0540%" height="15" fill="rgb(239,212,28)" fg:x="124643548" fg:w="2632555"/><text x="50.1550%" y="2879.50"></text></g><g><title>alloc::slice::hack::to_vec (2,632,555 samples, 1.05%)</title><rect x="49.9050%" y="2853" width="1.0540%" height="15" fill="rgb(220,20,13)" fg:x="124643548" fg:w="2632555"/><text x="50.1550%" y="2863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,632,555 samples, 1.05%)</title><rect x="49.9050%" y="2837" width="1.0540%" height="15" fill="rgb(210,164,35)" fg:x="124643548" fg:w="2632555"/><text x="50.1550%" y="2847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,220,575 samples, 0.49%)</title><rect x="50.4703%" y="2821" width="0.4887%" height="15" fill="rgb(248,109,41)" fg:x="126055528" fg:w="1220575"/><text x="50.7203%" y="2831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,220,575 samples, 0.49%)</title><rect x="50.4703%" y="2805" width="0.4887%" height="15" fill="rgb(238,23,50)" fg:x="126055528" fg:w="1220575"/><text x="50.7203%" y="2815.50"></text></g><g><title>[unknown] (1,291,800 samples, 0.52%)</title><rect x="50.9590%" y="2901" width="0.5172%" height="15" fill="rgb(211,48,49)" fg:x="127276103" fg:w="1291800"/><text x="51.2090%" y="2911.50"></text></g><g><title>[libc.so.6] (1,291,800 samples, 0.52%)</title><rect x="50.9590%" y="2885" width="0.5172%" height="15" fill="rgb(223,36,21)" fg:x="127276103" fg:w="1291800"/><text x="51.2090%" y="2895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (75,042,046 samples, 30.05%)</title><rect x="22.0004%" y="2981" width="30.0455%" height="15" fill="rgb(207,123,46)" fg:x="54948569" fg:w="75042046"/><text x="22.2504%" y="2991.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (75,042,046 samples, 30.05%)</title><rect x="22.0004%" y="2965" width="30.0455%" height="15" fill="rgb(240,218,32)" fg:x="54948569" fg:w="75042046"/><text x="22.2504%" y="2975.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (75,042,046 samples, 30.05%)</title><rect x="22.0004%" y="2949" width="30.0455%" height="15" fill="rgb(252,5,43)" fg:x="54948569" fg:w="75042046"/><text x="22.2504%" y="2959.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (75,042,046 samples, 30.05%)</title><rect x="22.0004%" y="2933" width="30.0455%" height="15" fill="rgb(252,84,19)" fg:x="54948569" fg:w="75042046"/><text x="22.2504%" y="2943.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (75,042,046 samples, 30.05%)</title><rect x="22.0004%" y="2917" width="30.0455%" height="15" fill="rgb(243,152,39)" fg:x="54948569" fg:w="75042046"/><text x="22.2504%" y="2927.50">&lt;css_bitvector_compiler::HtmlNode as core::clone..</text></g><g><title>malloc (1,422,712 samples, 0.57%)</title><rect x="51.4762%" y="2901" width="0.5696%" height="15" fill="rgb(234,160,15)" fg:x="128567903" fg:w="1422712"/><text x="51.7262%" y="2911.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (78,726,079 samples, 31.52%)</title><rect x="20.9956%" y="2997" width="31.5205%" height="15" fill="rgb(237,34,20)" fg:x="52438849" fg:w="78726079"/><text x="21.2456%" y="3007.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::C..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,174,313 samples, 0.47%)</title><rect x="52.0459%" y="2981" width="0.4702%" height="15" fill="rgb(229,97,13)" fg:x="129990615" fg:w="1174313"/><text x="52.2959%" y="2991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,174,313 samples, 0.47%)</title><rect x="52.0459%" y="2965" width="0.4702%" height="15" fill="rgb(234,71,50)" fg:x="129990615" fg:w="1174313"/><text x="52.2959%" y="2975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,174,313 samples, 0.47%)</title><rect x="52.0459%" y="2949" width="0.4702%" height="15" fill="rgb(253,155,4)" fg:x="129990615" fg:w="1174313"/><text x="52.2959%" y="2959.50"></text></g><g><title>alloc::slice::hack::to_vec (1,174,313 samples, 0.47%)</title><rect x="52.0459%" y="2933" width="0.4702%" height="15" fill="rgb(222,185,37)" fg:x="129990615" fg:w="1174313"/><text x="52.2959%" y="2943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,174,313 samples, 0.47%)</title><rect x="52.0459%" y="2917" width="0.4702%" height="15" fill="rgb(251,177,13)" fg:x="129990615" fg:w="1174313"/><text x="52.2959%" y="2927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,174,313 samples, 0.47%)</title><rect x="52.0459%" y="2901" width="0.4702%" height="15" fill="rgb(250,179,40)" fg:x="129990615" fg:w="1174313"/><text x="52.2959%" y="2911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,174,313 samples, 0.47%)</title><rect x="52.0459%" y="2885" width="0.4702%" height="15" fill="rgb(242,44,2)" fg:x="129990615" fg:w="1174313"/><text x="52.2959%" y="2895.50"></text></g><g><title>[libc.so.6] (1,174,313 samples, 0.47%)</title><rect x="52.0459%" y="2869" width="0.4702%" height="15" fill="rgb(216,177,13)" fg:x="129990615" fg:w="1174313"/><text x="52.2959%" y="2879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (82,763,819 samples, 33.14%)</title><rect x="19.8777%" y="3141" width="33.1371%" height="15" fill="rgb(216,106,43)" fg:x="49646970" fg:w="82763819"/><text x="20.1277%" y="3151.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (82,763,819 samples, 33.14%)</title><rect x="19.8777%" y="3125" width="33.1371%" height="15" fill="rgb(216,183,2)" fg:x="49646970" fg:w="82763819"/><text x="20.1277%" y="3135.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (82,763,819 samples, 33.14%)</title><rect x="19.8777%" y="3109" width="33.1371%" height="15" fill="rgb(249,75,3)" fg:x="49646970" fg:w="82763819"/><text x="20.1277%" y="3119.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (82,763,819 samples, 33.14%)</title><rect x="19.8777%" y="3093" width="33.1371%" height="15" fill="rgb(219,67,39)" fg:x="49646970" fg:w="82763819"/><text x="20.1277%" y="3103.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (82,763,819 samples, 33.14%)</title><rect x="19.8777%" y="3077" width="33.1371%" height="15" fill="rgb(253,228,2)" fg:x="49646970" fg:w="82763819"/><text x="20.1277%" y="3087.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clon..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (79,971,940 samples, 32.02%)</title><rect x="20.9956%" y="3061" width="32.0193%" height="15" fill="rgb(235,138,27)" fg:x="52438849" fg:w="79971940"/><text x="21.2456%" y="3071.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (79,971,940 samples, 32.02%)</title><rect x="20.9956%" y="3045" width="32.0193%" height="15" fill="rgb(236,97,51)" fg:x="52438849" fg:w="79971940"/><text x="21.2456%" y="3055.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (79,971,940 samples, 32.02%)</title><rect x="20.9956%" y="3029" width="32.0193%" height="15" fill="rgb(240,80,30)" fg:x="52438849" fg:w="79971940"/><text x="21.2456%" y="3039.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (79,971,940 samples, 32.02%)</title><rect x="20.9956%" y="3013" width="32.0193%" height="15" fill="rgb(230,178,19)" fg:x="52438849" fg:w="79971940"/><text x="21.2456%" y="3023.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,245,861 samples, 0.50%)</title><rect x="52.5160%" y="2997" width="0.4988%" height="15" fill="rgb(210,190,27)" fg:x="131164928" fg:w="1245861"/><text x="52.7660%" y="3007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,245,861 samples, 0.50%)</title><rect x="52.5160%" y="2981" width="0.4988%" height="15" fill="rgb(222,107,31)" fg:x="131164928" fg:w="1245861"/><text x="52.7660%" y="2991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,245,861 samples, 0.50%)</title><rect x="52.5160%" y="2965" width="0.4988%" height="15" fill="rgb(216,127,34)" fg:x="131164928" fg:w="1245861"/><text x="52.7660%" y="2975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,245,861 samples, 0.50%)</title><rect x="52.5160%" y="2949" width="0.4988%" height="15" fill="rgb(234,116,52)" fg:x="131164928" fg:w="1245861"/><text x="52.7660%" y="2959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,245,861 samples, 0.50%)</title><rect x="52.5160%" y="2933" width="0.4988%" height="15" fill="rgb(222,124,15)" fg:x="131164928" fg:w="1245861"/><text x="52.7660%" y="2943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,245,861 samples, 0.50%)</title><rect x="52.5160%" y="2917" width="0.4988%" height="15" fill="rgb(231,179,28)" fg:x="131164928" fg:w="1245861"/><text x="52.7660%" y="2927.50"></text></g><g><title>alloc::alloc::alloc (1,245,861 samples, 0.50%)</title><rect x="52.5160%" y="2901" width="0.4988%" height="15" fill="rgb(226,93,45)" fg:x="131164928" fg:w="1245861"/><text x="52.7660%" y="2911.50"></text></g><g><title>malloc (1,245,861 samples, 0.50%)</title><rect x="52.5160%" y="2885" width="0.4988%" height="15" fill="rgb(215,8,51)" fg:x="131164928" fg:w="1245861"/><text x="52.7660%" y="2895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,248,470 samples, 0.50%)</title><rect x="53.0149%" y="3141" width="0.4999%" height="15" fill="rgb(223,106,5)" fg:x="132410789" fg:w="1248470"/><text x="53.2649%" y="3151.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,248,470 samples, 0.50%)</title><rect x="53.0149%" y="3125" width="0.4999%" height="15" fill="rgb(250,191,5)" fg:x="132410789" fg:w="1248470"/><text x="53.2649%" y="3135.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3397" width="34.6402%" height="15" fill="rgb(242,132,44)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3407.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3381" width="34.6402%" height="15" fill="rgb(251,152,29)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3391.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3365" width="34.6402%" height="15" fill="rgb(218,179,5)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3375.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3349" width="34.6402%" height="15" fill="rgb(227,67,19)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3359.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3333" width="34.6402%" height="15" fill="rgb(233,119,31)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3343.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3317" width="34.6402%" height="15" fill="rgb(241,120,22)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3327.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3301" width="34.6402%" height="15" fill="rgb(224,102,30)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3311.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3285" width="34.6402%" height="15" fill="rgb(210,164,37)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3295.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3269" width="34.6402%" height="15" fill="rgb(226,191,16)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3279.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3253" width="34.6402%" height="15" fill="rgb(214,40,45)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3263.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3237" width="34.6402%" height="15" fill="rgb(244,29,26)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3247.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3221" width="34.6402%" height="15" fill="rgb(216,16,5)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3231.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3205" width="34.6402%" height="15" fill="rgb(249,76,35)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3215.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3189" width="34.6402%" height="15" fill="rgb(207,11,44)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3199.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3173" width="34.6402%" height="15" fill="rgb(228,190,49)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3183.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (86,518,000 samples, 34.64%)</title><rect x="19.3774%" y="3157" width="34.6402%" height="15" fill="rgb(214,173,12)" fg:x="48397204" fg:w="86518000"/><text x="19.6274%" y="3167.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,255,945 samples, 0.50%)</title><rect x="53.5147%" y="3141" width="0.5029%" height="15" fill="rgb(218,26,35)" fg:x="133659259" fg:w="1255945"/><text x="53.7647%" y="3151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,255,945 samples, 0.50%)</title><rect x="53.5147%" y="3125" width="0.5029%" height="15" fill="rgb(220,200,19)" fg:x="133659259" fg:w="1255945"/><text x="53.7647%" y="3135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,255,945 samples, 0.50%)</title><rect x="53.5147%" y="3109" width="0.5029%" height="15" fill="rgb(239,95,49)" fg:x="133659259" fg:w="1255945"/><text x="53.7647%" y="3119.50"></text></g><g><title>alloc::slice::hack::to_vec (1,255,945 samples, 0.50%)</title><rect x="53.5147%" y="3093" width="0.5029%" height="15" fill="rgb(235,85,53)" fg:x="133659259" fg:w="1255945"/><text x="53.7647%" y="3103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,255,945 samples, 0.50%)</title><rect x="53.5147%" y="3077" width="0.5029%" height="15" fill="rgb(233,133,31)" fg:x="133659259" fg:w="1255945"/><text x="53.7647%" y="3087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,255,945 samples, 0.50%)</title><rect x="53.5147%" y="3061" width="0.5029%" height="15" fill="rgb(218,25,20)" fg:x="133659259" fg:w="1255945"/><text x="53.7647%" y="3071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,255,945 samples, 0.50%)</title><rect x="53.5147%" y="3045" width="0.5029%" height="15" fill="rgb(252,210,38)" fg:x="133659259" fg:w="1255945"/><text x="53.7647%" y="3055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,255,945 samples, 0.50%)</title><rect x="53.5147%" y="3029" width="0.5029%" height="15" fill="rgb(242,134,21)" fg:x="133659259" fg:w="1255945"/><text x="53.7647%" y="3039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,255,945 samples, 0.50%)</title><rect x="53.5147%" y="3013" width="0.5029%" height="15" fill="rgb(213,28,48)" fg:x="133659259" fg:w="1255945"/><text x="53.7647%" y="3023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,255,945 samples, 0.50%)</title><rect x="53.5147%" y="2997" width="0.5029%" height="15" fill="rgb(250,196,2)" fg:x="133659259" fg:w="1255945"/><text x="53.7647%" y="3007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,255,945 samples, 0.50%)</title><rect x="53.5147%" y="2981" width="0.5029%" height="15" fill="rgb(227,5,17)" fg:x="133659259" fg:w="1255945"/><text x="53.7647%" y="2991.50"></text></g><g><title>alloc::alloc::alloc (1,255,945 samples, 0.50%)</title><rect x="53.5147%" y="2965" width="0.5029%" height="15" fill="rgb(221,226,24)" fg:x="133659259" fg:w="1255945"/><text x="53.7647%" y="2975.50"></text></g><g><title>malloc (1,255,945 samples, 0.50%)</title><rect x="53.5147%" y="2949" width="0.5029%" height="15" fill="rgb(211,5,48)" fg:x="133659259" fg:w="1255945"/><text x="53.7647%" y="2959.50"></text></g><g><title>benchmark::extract_path_from_command (1,314,810 samples, 0.53%)</title><rect x="54.0176%" y="3381" width="0.5264%" height="15" fill="rgb(219,150,6)" fg:x="134915204" fg:w="1314810"/><text x="54.2676%" y="3391.50"></text></g><g><title>serde_json::value::Value::get (1,314,810 samples, 0.53%)</title><rect x="54.0176%" y="3365" width="0.5264%" height="15" fill="rgb(251,46,16)" fg:x="134915204" fg:w="1314810"/><text x="54.2676%" y="3375.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,314,810 samples, 0.53%)</title><rect x="54.0176%" y="3349" width="0.5264%" height="15" fill="rgb(220,204,40)" fg:x="134915204" fg:w="1314810"/><text x="54.2676%" y="3359.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,314,810 samples, 0.53%)</title><rect x="54.0176%" y="3333" width="0.5264%" height="15" fill="rgb(211,85,2)" fg:x="134915204" fg:w="1314810"/><text x="54.2676%" y="3343.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,314,810 samples, 0.53%)</title><rect x="54.0176%" y="3317" width="0.5264%" height="15" fill="rgb(229,17,7)" fg:x="134915204" fg:w="1314810"/><text x="54.2676%" y="3327.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,314,810 samples, 0.53%)</title><rect x="54.0176%" y="3301" width="0.5264%" height="15" fill="rgb(239,72,28)" fg:x="134915204" fg:w="1314810"/><text x="54.2676%" y="3311.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,314,810 samples, 0.53%)</title><rect x="54.0176%" y="3285" width="0.5264%" height="15" fill="rgb(230,47,54)" fg:x="134915204" fg:w="1314810"/><text x="54.2676%" y="3295.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,314,810 samples, 0.53%)</title><rect x="54.0176%" y="3269" width="0.5264%" height="15" fill="rgb(214,50,8)" fg:x="134915204" fg:w="1314810"/><text x="54.2676%" y="3279.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,314,810 samples, 0.53%)</title><rect x="54.0176%" y="3253" width="0.5264%" height="15" fill="rgb(216,198,43)" fg:x="134915204" fg:w="1314810"/><text x="54.2676%" y="3263.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,314,810 samples, 0.53%)</title><rect x="54.0176%" y="3237" width="0.5264%" height="15" fill="rgb(234,20,35)" fg:x="134915204" fg:w="1314810"/><text x="54.2676%" y="3247.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,314,810 samples, 0.53%)</title><rect x="54.0176%" y="3221" width="0.5264%" height="15" fill="rgb(254,45,19)" fg:x="134915204" fg:w="1314810"/><text x="54.2676%" y="3231.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,314,810 samples, 0.53%)</title><rect x="54.0176%" y="3205" width="0.5264%" height="15" fill="rgb(219,14,44)" fg:x="134915204" fg:w="1314810"/><text x="54.2676%" y="3215.50"></text></g><g><title>[libc.so.6] (1,314,810 samples, 0.53%)</title><rect x="54.0176%" y="3189" width="0.5264%" height="15" fill="rgb(217,220,26)" fg:x="134915204" fg:w="1314810"/><text x="54.2676%" y="3199.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,266,751 samples, 0.51%)</title><rect x="54.5440%" y="3333" width="0.5072%" height="15" fill="rgb(213,158,28)" fg:x="136230014" fg:w="1266751"/><text x="54.7940%" y="3343.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (1,266,751 samples, 0.51%)</title><rect x="54.5440%" y="3317" width="0.5072%" height="15" fill="rgb(252,51,52)" fg:x="136230014" fg:w="1266751"/><text x="54.7940%" y="3327.50"></text></g><g><title>[unknown] (1,266,751 samples, 0.51%)</title><rect x="54.5440%" y="3301" width="0.5072%" height="15" fill="rgb(246,89,16)" fg:x="136230014" fg:w="1266751"/><text x="54.7940%" y="3311.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,266,751 samples, 0.51%)</title><rect x="54.5440%" y="3285" width="0.5072%" height="15" fill="rgb(216,158,49)" fg:x="136230014" fg:w="1266751"/><text x="54.7940%" y="3295.50"></text></g><g><title>alloc::string::String::push_str (1,266,751 samples, 0.51%)</title><rect x="54.5440%" y="3269" width="0.5072%" height="15" fill="rgb(236,107,19)" fg:x="136230014" fg:w="1266751"/><text x="54.7940%" y="3279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,266,751 samples, 0.51%)</title><rect x="54.5440%" y="3253" width="0.5072%" height="15" fill="rgb(228,185,30)" fg:x="136230014" fg:w="1266751"/><text x="54.7940%" y="3263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,266,751 samples, 0.51%)</title><rect x="54.5440%" y="3237" width="0.5072%" height="15" fill="rgb(246,134,8)" fg:x="136230014" fg:w="1266751"/><text x="54.7940%" y="3247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,266,751 samples, 0.51%)</title><rect x="54.5440%" y="3221" width="0.5072%" height="15" fill="rgb(214,143,50)" fg:x="136230014" fg:w="1266751"/><text x="54.7940%" y="3231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,266,751 samples, 0.51%)</title><rect x="54.5440%" y="3205" width="0.5072%" height="15" fill="rgb(228,75,8)" fg:x="136230014" fg:w="1266751"/><text x="54.7940%" y="3215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,266,751 samples, 0.51%)</title><rect x="54.5440%" y="3189" width="0.5072%" height="15" fill="rgb(207,175,4)" fg:x="136230014" fg:w="1266751"/><text x="54.7940%" y="3199.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,266,751 samples, 0.51%)</title><rect x="54.5440%" y="3173" width="0.5072%" height="15" fill="rgb(205,108,24)" fg:x="136230014" fg:w="1266751"/><text x="54.7940%" y="3183.50"></text></g><g><title>[libc.so.6] (1,293,508 samples, 0.52%)</title><rect x="55.0512%" y="3317" width="0.5179%" height="15" fill="rgb(244,120,49)" fg:x="137496765" fg:w="1293508"/><text x="55.3012%" y="3327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (876,917 samples, 0.35%)</title><rect x="55.5691%" y="3253" width="0.3511%" height="15" fill="rgb(223,47,38)" fg:x="138790273" fg:w="876917"/><text x="55.8191%" y="3263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,737,889 samples, 0.70%)</title><rect x="55.5691%" y="3317" width="0.6958%" height="15" fill="rgb(229,179,11)" fg:x="138790273" fg:w="1737889"/><text x="55.8191%" y="3327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,737,889 samples, 0.70%)</title><rect x="55.5691%" y="3301" width="0.6958%" height="15" fill="rgb(231,122,1)" fg:x="138790273" fg:w="1737889"/><text x="55.8191%" y="3311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,737,889 samples, 0.70%)</title><rect x="55.5691%" y="3285" width="0.6958%" height="15" fill="rgb(245,119,9)" fg:x="138790273" fg:w="1737889"/><text x="55.8191%" y="3295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,737,889 samples, 0.70%)</title><rect x="55.5691%" y="3269" width="0.6958%" height="15" fill="rgb(241,163,25)" fg:x="138790273" fg:w="1737889"/><text x="55.8191%" y="3279.50"></text></g><g><title>alloc::raw_vec::finish_grow (860,972 samples, 0.34%)</title><rect x="55.9202%" y="3253" width="0.3447%" height="15" fill="rgb(217,214,3)" fg:x="139667190" fg:w="860972"/><text x="56.1702%" y="3263.50"></text></g><g><title>benchmark::json_to_html_node (2,042,769 samples, 0.82%)</title><rect x="56.2649%" y="3317" width="0.8179%" height="15" fill="rgb(240,86,28)" fg:x="140528162" fg:w="2042769"/><text x="56.5149%" y="3327.50"></text></g><g><title>benchmark::json_to_html_node (2,042,769 samples, 0.82%)</title><rect x="56.2649%" y="3301" width="0.8179%" height="15" fill="rgb(215,47,9)" fg:x="140528162" fg:w="2042769"/><text x="56.5149%" y="3311.50"></text></g><g><title>benchmark::json_to_html_node (2,042,769 samples, 0.82%)</title><rect x="56.2649%" y="3285" width="0.8179%" height="15" fill="rgb(252,25,45)" fg:x="140528162" fg:w="2042769"/><text x="56.5149%" y="3295.50"></text></g><g><title>benchmark::json_to_html_node (2,042,769 samples, 0.82%)</title><rect x="56.2649%" y="3269" width="0.8179%" height="15" fill="rgb(251,164,9)" fg:x="140528162" fg:w="2042769"/><text x="56.5149%" y="3279.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2,042,769 samples, 0.82%)</title><rect x="56.2649%" y="3253" width="0.8179%" height="15" fill="rgb(233,194,0)" fg:x="140528162" fg:w="2042769"/><text x="56.5149%" y="3263.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (2,042,769 samples, 0.82%)</title><rect x="56.2649%" y="3237" width="0.8179%" height="15" fill="rgb(249,111,24)" fg:x="140528162" fg:w="2042769"/><text x="56.5149%" y="3247.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (2,042,769 samples, 0.82%)</title><rect x="56.2649%" y="3221" width="0.8179%" height="15" fill="rgb(250,223,3)" fg:x="140528162" fg:w="2042769"/><text x="56.5149%" y="3231.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (846,631 samples, 0.34%)</title><rect x="56.7438%" y="3205" width="0.3390%" height="15" fill="rgb(236,178,37)" fg:x="141724300" fg:w="846631"/><text x="56.9938%" y="3215.50"></text></g><g><title>alloc::string::String::push_str (846,631 samples, 0.34%)</title><rect x="56.7438%" y="3189" width="0.3390%" height="15" fill="rgb(241,158,50)" fg:x="141724300" fg:w="846631"/><text x="56.9938%" y="3199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (846,631 samples, 0.34%)</title><rect x="56.7438%" y="3173" width="0.3390%" height="15" fill="rgb(213,121,41)" fg:x="141724300" fg:w="846631"/><text x="56.9938%" y="3183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (846,631 samples, 0.34%)</title><rect x="56.7438%" y="3157" width="0.3390%" height="15" fill="rgb(240,92,3)" fg:x="141724300" fg:w="846631"/><text x="56.9938%" y="3167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (846,631 samples, 0.34%)</title><rect x="56.7438%" y="3141" width="0.3390%" height="15" fill="rgb(205,123,3)" fg:x="141724300" fg:w="846631"/><text x="56.9938%" y="3151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (846,631 samples, 0.34%)</title><rect x="56.7438%" y="3125" width="0.3390%" height="15" fill="rgb(205,97,47)" fg:x="141724300" fg:w="846631"/><text x="56.9938%" y="3135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (846,631 samples, 0.34%)</title><rect x="56.7438%" y="3109" width="0.3390%" height="15" fill="rgb(247,152,14)" fg:x="141724300" fg:w="846631"/><text x="56.9938%" y="3119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (846,631 samples, 0.34%)</title><rect x="56.7438%" y="3093" width="0.3390%" height="15" fill="rgb(248,195,53)" fg:x="141724300" fg:w="846631"/><text x="56.9938%" y="3103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (846,631 samples, 0.34%)</title><rect x="56.7438%" y="3077" width="0.3390%" height="15" fill="rgb(226,201,16)" fg:x="141724300" fg:w="846631"/><text x="56.9938%" y="3087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (846,631 samples, 0.34%)</title><rect x="56.7438%" y="3061" width="0.3390%" height="15" fill="rgb(205,98,0)" fg:x="141724300" fg:w="846631"/><text x="56.9938%" y="3071.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (846,631 samples, 0.34%)</title><rect x="56.7438%" y="3045" width="0.3390%" height="15" fill="rgb(214,191,48)" fg:x="141724300" fg:w="846631"/><text x="56.9938%" y="3055.50"></text></g><g><title>benchmark::json_to_html_node (7,553,483 samples, 3.02%)</title><rect x="54.5440%" y="3381" width="3.0243%" height="15" fill="rgb(237,112,39)" fg:x="136230014" fg:w="7553483"/><text x="54.7940%" y="3391.50">ben..</text></g><g><title>benchmark::json_to_html_node (7,553,483 samples, 3.02%)</title><rect x="54.5440%" y="3365" width="3.0243%" height="15" fill="rgb(247,203,27)" fg:x="136230014" fg:w="7553483"/><text x="54.7940%" y="3375.50">ben..</text></g><g><title>benchmark::json_to_html_node (7,553,483 samples, 3.02%)</title><rect x="54.5440%" y="3349" width="3.0243%" height="15" fill="rgb(235,124,28)" fg:x="136230014" fg:w="7553483"/><text x="54.7940%" y="3359.50">ben..</text></g><g><title>benchmark::json_to_html_node (6,286,732 samples, 2.52%)</title><rect x="55.0512%" y="3333" width="2.5171%" height="15" fill="rgb(208,207,46)" fg:x="137496765" fg:w="6286732"/><text x="55.3012%" y="3343.50">be..</text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,212,566 samples, 0.49%)</title><rect x="57.0828%" y="3317" width="0.4855%" height="15" fill="rgb(234,176,4)" fg:x="142570931" fg:w="1212566"/><text x="57.3328%" y="3327.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,212,566 samples, 0.49%)</title><rect x="57.0828%" y="3301" width="0.4855%" height="15" fill="rgb(230,133,28)" fg:x="142570931" fg:w="1212566"/><text x="57.3328%" y="3311.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,212,566 samples, 0.49%)</title><rect x="57.0828%" y="3285" width="0.4855%" height="15" fill="rgb(211,137,40)" fg:x="142570931" fg:w="1212566"/><text x="57.3328%" y="3295.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,212,566 samples, 0.49%)</title><rect x="57.0828%" y="3269" width="0.4855%" height="15" fill="rgb(254,35,13)" fg:x="142570931" fg:w="1212566"/><text x="57.3328%" y="3279.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,212,566 samples, 0.49%)</title><rect x="57.0828%" y="3253" width="0.4855%" height="15" fill="rgb(225,49,51)" fg:x="142570931" fg:w="1212566"/><text x="57.3328%" y="3263.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,212,566 samples, 0.49%)</title><rect x="57.0828%" y="3237" width="0.4855%" height="15" fill="rgb(251,10,15)" fg:x="142570931" fg:w="1212566"/><text x="57.3328%" y="3247.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,212,566 samples, 0.49%)</title><rect x="57.0828%" y="3221" width="0.4855%" height="15" fill="rgb(228,207,15)" fg:x="142570931" fg:w="1212566"/><text x="57.3328%" y="3231.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,212,566 samples, 0.49%)</title><rect x="57.0828%" y="3205" width="0.4855%" height="15" fill="rgb(241,99,19)" fg:x="142570931" fg:w="1212566"/><text x="57.3328%" y="3215.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,212,566 samples, 0.49%)</title><rect x="57.0828%" y="3189" width="0.4855%" height="15" fill="rgb(207,104,49)" fg:x="142570931" fg:w="1212566"/><text x="57.3328%" y="3199.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,212,566 samples, 0.49%)</title><rect x="57.0828%" y="3173" width="0.4855%" height="15" fill="rgb(234,99,18)" fg:x="142570931" fg:w="1212566"/><text x="57.3328%" y="3183.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,212,566 samples, 0.49%)</title><rect x="57.0828%" y="3157" width="0.4855%" height="15" fill="rgb(213,191,49)" fg:x="142570931" fg:w="1212566"/><text x="57.3328%" y="3167.50"></text></g><g><title>[libc.so.6] (1,212,566 samples, 0.49%)</title><rect x="57.0828%" y="3141" width="0.4855%" height="15" fill="rgb(210,226,19)" fg:x="142570931" fg:w="1212566"/><text x="57.3328%" y="3151.50"></text></g><g><title>benchmark::apply_frame_modifications (10,122,708 samples, 4.05%)</title><rect x="54.0176%" y="3397" width="4.0529%" height="15" fill="rgb(229,97,18)" fg:x="134915204" fg:w="10122708"/><text x="54.2676%" y="3407.50">benc..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,254,415 samples, 0.50%)</title><rect x="57.5683%" y="3381" width="0.5022%" height="15" fill="rgb(211,167,15)" fg:x="143783497" fg:w="1254415"/><text x="57.8183%" y="3391.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,254,415 samples, 0.50%)</title><rect x="57.5683%" y="3365" width="0.5022%" height="15" fill="rgb(210,169,34)" fg:x="143783497" fg:w="1254415"/><text x="57.8183%" y="3375.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,254,415 samples, 0.50%)</title><rect x="57.5683%" y="3349" width="0.5022%" height="15" fill="rgb(241,121,31)" fg:x="143783497" fg:w="1254415"/><text x="57.8183%" y="3359.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,254,415 samples, 0.50%)</title><rect x="57.5683%" y="3333" width="0.5022%" height="15" fill="rgb(232,40,11)" fg:x="143783497" fg:w="1254415"/><text x="57.8183%" y="3343.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,254,415 samples, 0.50%)</title><rect x="57.5683%" y="3317" width="0.5022%" height="15" fill="rgb(205,86,26)" fg:x="143783497" fg:w="1254415"/><text x="57.8183%" y="3327.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,254,415 samples, 0.50%)</title><rect x="57.5683%" y="3301" width="0.5022%" height="15" fill="rgb(231,126,28)" fg:x="143783497" fg:w="1254415"/><text x="57.8183%" y="3311.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,254,415 samples, 0.50%)</title><rect x="57.5683%" y="3285" width="0.5022%" height="15" fill="rgb(219,221,18)" fg:x="143783497" fg:w="1254415"/><text x="57.8183%" y="3295.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,254,415 samples, 0.50%)</title><rect x="57.5683%" y="3269" width="0.5022%" height="15" fill="rgb(211,40,0)" fg:x="143783497" fg:w="1254415"/><text x="57.8183%" y="3279.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,254,415 samples, 0.50%)</title><rect x="57.5683%" y="3253" width="0.5022%" height="15" fill="rgb(239,85,43)" fg:x="143783497" fg:w="1254415"/><text x="57.8183%" y="3263.50"></text></g><g><title>benchmark::count_nodes (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3397" width="1.0369%" height="15" fill="rgb(231,55,21)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3381" width="1.0369%" height="15" fill="rgb(225,184,43)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3391.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3365" width="1.0369%" height="15" fill="rgb(251,158,41)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3375.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3349" width="1.0369%" height="15" fill="rgb(234,159,37)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3333" width="1.0369%" height="15" fill="rgb(216,204,22)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3343.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3317" width="1.0369%" height="15" fill="rgb(214,17,3)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3327.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3301" width="1.0369%" height="15" fill="rgb(212,111,17)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3311.50"></text></g><g><title>benchmark::count_nodes (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3285" width="1.0369%" height="15" fill="rgb(221,157,24)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3269" width="1.0369%" height="15" fill="rgb(252,16,13)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3279.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3253" width="1.0369%" height="15" fill="rgb(221,62,2)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3263.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3237" width="1.0369%" height="15" fill="rgb(247,87,22)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3247.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3221" width="1.0369%" height="15" fill="rgb(215,73,9)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3231.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3205" width="1.0369%" height="15" fill="rgb(207,175,33)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3215.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3189" width="1.0369%" height="15" fill="rgb(243,129,54)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3199.50"></text></g><g><title>benchmark::count_nodes (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3173" width="1.0369%" height="15" fill="rgb(227,119,45)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3157" width="1.0369%" height="15" fill="rgb(205,109,36)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3167.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3141" width="1.0369%" height="15" fill="rgb(205,6,39)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3125" width="1.0369%" height="15" fill="rgb(221,32,16)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3109" width="1.0369%" height="15" fill="rgb(228,144,50)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3119.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3093" width="1.0369%" height="15" fill="rgb(229,201,53)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3103.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3077" width="1.0369%" height="15" fill="rgb(249,153,27)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3087.50"></text></g><g><title>benchmark::count_nodes (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3061" width="1.0369%" height="15" fill="rgb(227,106,25)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3045" width="1.0369%" height="15" fill="rgb(230,65,29)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3055.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3029" width="1.0369%" height="15" fill="rgb(221,57,46)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="3013" width="1.0369%" height="15" fill="rgb(229,161,17)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2997" width="1.0369%" height="15" fill="rgb(222,213,11)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="3007.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2981" width="1.0369%" height="15" fill="rgb(235,35,13)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2991.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2965" width="1.0369%" height="15" fill="rgb(233,158,34)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2975.50"></text></g><g><title>benchmark::count_nodes (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2949" width="1.0369%" height="15" fill="rgb(215,151,48)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2933" width="1.0369%" height="15" fill="rgb(229,84,14)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2943.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2917" width="1.0369%" height="15" fill="rgb(229,68,14)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2901" width="1.0369%" height="15" fill="rgb(243,106,26)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2885" width="1.0369%" height="15" fill="rgb(206,45,38)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2895.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2869" width="1.0369%" height="15" fill="rgb(226,6,15)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2879.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2853" width="1.0369%" height="15" fill="rgb(232,22,54)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2863.50"></text></g><g><title>benchmark::count_nodes (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2837" width="1.0369%" height="15" fill="rgb(229,222,32)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2821" width="1.0369%" height="15" fill="rgb(228,62,29)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2831.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2805" width="1.0369%" height="15" fill="rgb(251,103,34)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2789" width="1.0369%" height="15" fill="rgb(233,12,30)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2773" width="1.0369%" height="15" fill="rgb(238,52,0)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2783.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2757" width="1.0369%" height="15" fill="rgb(223,98,5)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2767.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2741" width="1.0369%" height="15" fill="rgb(228,75,37)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2751.50"></text></g><g><title>benchmark::count_nodes (2,589,746 samples, 1.04%)</title><rect x="58.0705%" y="2725" width="1.0369%" height="15" fill="rgb(205,115,49)" fg:x="145037912" fg:w="2589746"/><text x="58.3205%" y="2735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,238,667 samples, 0.50%)</title><rect x="58.6115%" y="2709" width="0.4959%" height="15" fill="rgb(250,154,43)" fg:x="146388991" fg:w="1238667"/><text x="58.8615%" y="2719.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,238,667 samples, 0.50%)</title><rect x="58.6115%" y="2693" width="0.4959%" height="15" fill="rgb(226,43,29)" fg:x="146388991" fg:w="1238667"/><text x="58.8615%" y="2703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,238,667 samples, 0.50%)</title><rect x="58.6115%" y="2677" width="0.4959%" height="15" fill="rgb(249,228,39)" fg:x="146388991" fg:w="1238667"/><text x="58.8615%" y="2687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,238,667 samples, 0.50%)</title><rect x="58.6115%" y="2661" width="0.4959%" height="15" fill="rgb(216,79,43)" fg:x="146388991" fg:w="1238667"/><text x="58.8615%" y="2671.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,238,667 samples, 0.50%)</title><rect x="58.6115%" y="2645" width="0.4959%" height="15" fill="rgb(228,95,12)" fg:x="146388991" fg:w="1238667"/><text x="58.8615%" y="2655.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,238,667 samples, 0.50%)</title><rect x="58.6115%" y="2629" width="0.4959%" height="15" fill="rgb(249,221,15)" fg:x="146388991" fg:w="1238667"/><text x="58.8615%" y="2639.50"></text></g><g><title>benchmark::count_nodes (1,238,667 samples, 0.50%)</title><rect x="58.6115%" y="2613" width="0.4959%" height="15" fill="rgb(233,34,13)" fg:x="146388991" fg:w="1238667"/><text x="58.8615%" y="2623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,238,667 samples, 0.50%)</title><rect x="58.6115%" y="2597" width="0.4959%" height="15" fill="rgb(214,103,39)" fg:x="146388991" fg:w="1238667"/><text x="58.8615%" y="2607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,238,667 samples, 0.50%)</title><rect x="58.6115%" y="2581" width="0.4959%" height="15" fill="rgb(251,126,39)" fg:x="146388991" fg:w="1238667"/><text x="58.8615%" y="2591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,233,914 samples, 0.49%)</title><rect x="59.1074%" y="3397" width="0.4940%" height="15" fill="rgb(214,216,36)" fg:x="147627658" fg:w="1233914"/><text x="59.3574%" y="3407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,233,914 samples, 0.49%)</title><rect x="59.1074%" y="3381" width="0.4940%" height="15" fill="rgb(220,221,8)" fg:x="147627658" fg:w="1233914"/><text x="59.3574%" y="3391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,233,914 samples, 0.49%)</title><rect x="59.1074%" y="3365" width="0.4940%" height="15" fill="rgb(240,216,3)" fg:x="147627658" fg:w="1233914"/><text x="59.3574%" y="3375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,233,914 samples, 0.49%)</title><rect x="59.1074%" y="3349" width="0.4940%" height="15" fill="rgb(232,218,17)" fg:x="147627658" fg:w="1233914"/><text x="59.3574%" y="3359.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,233,914 samples, 0.49%)</title><rect x="59.1074%" y="3333" width="0.4940%" height="15" fill="rgb(229,163,45)" fg:x="147627658" fg:w="1233914"/><text x="59.3574%" y="3343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,233,914 samples, 0.49%)</title><rect x="59.1074%" y="3317" width="0.4940%" height="15" fill="rgb(231,110,42)" fg:x="147627658" fg:w="1233914"/><text x="59.3574%" y="3327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,233,914 samples, 0.49%)</title><rect x="59.1074%" y="3301" width="0.4940%" height="15" fill="rgb(208,170,48)" fg:x="147627658" fg:w="1233914"/><text x="59.3574%" y="3311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,233,914 samples, 0.49%)</title><rect x="59.1074%" y="3285" width="0.4940%" height="15" fill="rgb(239,116,25)" fg:x="147627658" fg:w="1233914"/><text x="59.3574%" y="3295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,233,914 samples, 0.49%)</title><rect x="59.1074%" y="3269" width="0.4940%" height="15" fill="rgb(219,200,50)" fg:x="147627658" fg:w="1233914"/><text x="59.3574%" y="3279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,233,914 samples, 0.49%)</title><rect x="59.1074%" y="3253" width="0.4940%" height="15" fill="rgb(245,200,0)" fg:x="147627658" fg:w="1233914"/><text x="59.3574%" y="3263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,233,914 samples, 0.49%)</title><rect x="59.1074%" y="3237" width="0.4940%" height="15" fill="rgb(245,119,33)" fg:x="147627658" fg:w="1233914"/><text x="59.3574%" y="3247.50"></text></g><g><title>alloc::alloc::alloc (1,233,914 samples, 0.49%)</title><rect x="59.1074%" y="3221" width="0.4940%" height="15" fill="rgb(231,125,12)" fg:x="147627658" fg:w="1233914"/><text x="59.3574%" y="3231.50"></text></g><g><title>malloc (1,233,914 samples, 0.49%)</title><rect x="59.1074%" y="3205" width="0.4940%" height="15" fill="rgb(216,96,41)" fg:x="147627658" fg:w="1233914"/><text x="59.3574%" y="3215.50"></text></g><g><title>[libc.so.6] (1,233,914 samples, 0.49%)</title><rect x="59.1074%" y="3189" width="0.4940%" height="15" fill="rgb(248,43,45)" fg:x="147627658" fg:w="1233914"/><text x="59.3574%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,259,493 samples, 0.50%)</title><rect x="59.6014%" y="3189" width="0.5043%" height="15" fill="rgb(217,222,7)" fg:x="148861572" fg:w="1259493"/><text x="59.8514%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,259,493 samples, 0.50%)</title><rect x="59.6014%" y="3173" width="0.5043%" height="15" fill="rgb(233,28,6)" fg:x="148861572" fg:w="1259493"/><text x="59.8514%" y="3183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,259,493 samples, 0.50%)</title><rect x="59.6014%" y="3157" width="0.5043%" height="15" fill="rgb(231,218,15)" fg:x="148861572" fg:w="1259493"/><text x="59.8514%" y="3167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,259,493 samples, 0.50%)</title><rect x="59.6014%" y="3141" width="0.5043%" height="15" fill="rgb(226,171,48)" fg:x="148861572" fg:w="1259493"/><text x="59.8514%" y="3151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,259,493 samples, 0.50%)</title><rect x="59.6014%" y="3125" width="0.5043%" height="15" fill="rgb(235,201,9)" fg:x="148861572" fg:w="1259493"/><text x="59.8514%" y="3135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,259,493 samples, 0.50%)</title><rect x="59.6014%" y="3109" width="0.5043%" height="15" fill="rgb(217,80,15)" fg:x="148861572" fg:w="1259493"/><text x="59.8514%" y="3119.50"></text></g><g><title>alloc::alloc::dealloc (1,259,493 samples, 0.50%)</title><rect x="59.6014%" y="3093" width="0.5043%" height="15" fill="rgb(219,152,8)" fg:x="148861572" fg:w="1259493"/><text x="59.8514%" y="3103.50"></text></g><g><title>cfree (1,259,493 samples, 0.50%)</title><rect x="59.6014%" y="3077" width="0.5043%" height="15" fill="rgb(243,107,38)" fg:x="148861572" fg:w="1259493"/><text x="59.8514%" y="3087.50"></text></g><g><title>[libc.so.6] (1,259,493 samples, 0.50%)</title><rect x="59.6014%" y="3061" width="0.5043%" height="15" fill="rgb(231,17,5)" fg:x="148861572" fg:w="1259493"/><text x="59.8514%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,585,635 samples, 1.04%)</title><rect x="60.1057%" y="2997" width="1.0352%" height="15" fill="rgb(209,25,54)" fg:x="150121065" fg:w="2585635"/><text x="60.3557%" y="3007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,585,635 samples, 1.04%)</title><rect x="60.1057%" y="2981" width="1.0352%" height="15" fill="rgb(219,0,2)" fg:x="150121065" fg:w="2585635"/><text x="60.3557%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,585,635 samples, 1.04%)</title><rect x="60.1057%" y="2965" width="1.0352%" height="15" fill="rgb(246,9,5)" fg:x="150121065" fg:w="2585635"/><text x="60.3557%" y="2975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,585,635 samples, 1.04%)</title><rect x="60.1057%" y="2949" width="1.0352%" height="15" fill="rgb(226,159,4)" fg:x="150121065" fg:w="2585635"/><text x="60.3557%" y="2959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,585,635 samples, 1.04%)</title><rect x="60.1057%" y="2933" width="1.0352%" height="15" fill="rgb(219,175,34)" fg:x="150121065" fg:w="2585635"/><text x="60.3557%" y="2943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,585,635 samples, 1.04%)</title><rect x="60.1057%" y="2917" width="1.0352%" height="15" fill="rgb(236,10,46)" fg:x="150121065" fg:w="2585635"/><text x="60.3557%" y="2927.50"></text></g><g><title>alloc::alloc::dealloc (2,585,635 samples, 1.04%)</title><rect x="60.1057%" y="2901" width="1.0352%" height="15" fill="rgb(240,211,16)" fg:x="150121065" fg:w="2585635"/><text x="60.3557%" y="2911.50"></text></g><g><title>cfree (2,585,635 samples, 1.04%)</title><rect x="60.1057%" y="2885" width="1.0352%" height="15" fill="rgb(205,3,43)" fg:x="150121065" fg:w="2585635"/><text x="60.3557%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,317,896 samples, 0.53%)</title><rect x="61.1410%" y="2741" width="0.5277%" height="15" fill="rgb(245,7,22)" fg:x="152706700" fg:w="1317896"/><text x="61.3910%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,317,896 samples, 0.53%)</title><rect x="61.1410%" y="2725" width="0.5277%" height="15" fill="rgb(239,132,32)" fg:x="152706700" fg:w="1317896"/><text x="61.3910%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,317,896 samples, 0.53%)</title><rect x="61.1410%" y="2709" width="0.5277%" height="15" fill="rgb(228,202,34)" fg:x="152706700" fg:w="1317896"/><text x="61.3910%" y="2719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,896 samples, 0.53%)</title><rect x="61.1410%" y="2693" width="0.5277%" height="15" fill="rgb(254,200,22)" fg:x="152706700" fg:w="1317896"/><text x="61.3910%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,317,896 samples, 0.53%)</title><rect x="61.1410%" y="2677" width="0.5277%" height="15" fill="rgb(219,10,39)" fg:x="152706700" fg:w="1317896"/><text x="61.3910%" y="2687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,317,896 samples, 0.53%)</title><rect x="61.1410%" y="2661" width="0.5277%" height="15" fill="rgb(226,210,39)" fg:x="152706700" fg:w="1317896"/><text x="61.3910%" y="2671.50"></text></g><g><title>alloc::alloc::dealloc (1,317,896 samples, 0.53%)</title><rect x="61.1410%" y="2645" width="0.5277%" height="15" fill="rgb(208,219,16)" fg:x="152706700" fg:w="1317896"/><text x="61.3910%" y="2655.50"></text></g><g><title>cfree (1,317,896 samples, 0.53%)</title><rect x="61.1410%" y="2629" width="0.5277%" height="15" fill="rgb(216,158,51)" fg:x="152706700" fg:w="1317896"/><text x="61.3910%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,335,842 samples, 0.53%)</title><rect x="61.6686%" y="2421" width="0.5348%" height="15" fill="rgb(233,14,44)" fg:x="154024596" fg:w="1335842"/><text x="61.9186%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,335,842 samples, 0.53%)</title><rect x="61.6686%" y="2405" width="0.5348%" height="15" fill="rgb(237,97,39)" fg:x="154024596" fg:w="1335842"/><text x="61.9186%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,335,842 samples, 0.53%)</title><rect x="61.6686%" y="2389" width="0.5348%" height="15" fill="rgb(218,198,43)" fg:x="154024596" fg:w="1335842"/><text x="61.9186%" y="2399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,335,842 samples, 0.53%)</title><rect x="61.6686%" y="2373" width="0.5348%" height="15" fill="rgb(231,104,20)" fg:x="154024596" fg:w="1335842"/><text x="61.9186%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,335,842 samples, 0.53%)</title><rect x="61.6686%" y="2357" width="0.5348%" height="15" fill="rgb(254,36,13)" fg:x="154024596" fg:w="1335842"/><text x="61.9186%" y="2367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,335,842 samples, 0.53%)</title><rect x="61.6686%" y="2341" width="0.5348%" height="15" fill="rgb(248,14,50)" fg:x="154024596" fg:w="1335842"/><text x="61.9186%" y="2351.50"></text></g><g><title>alloc::alloc::dealloc (1,335,842 samples, 0.53%)</title><rect x="61.6686%" y="2325" width="0.5348%" height="15" fill="rgb(217,107,29)" fg:x="154024596" fg:w="1335842"/><text x="61.9186%" y="2335.50"></text></g><g><title>cfree (1,335,842 samples, 0.53%)</title><rect x="61.6686%" y="2309" width="0.5348%" height="15" fill="rgb(251,169,33)" fg:x="154024596" fg:w="1335842"/><text x="61.9186%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,381,845 samples, 0.55%)</title><rect x="62.2035%" y="2229" width="0.5533%" height="15" fill="rgb(217,108,32)" fg:x="155360438" fg:w="1381845"/><text x="62.4535%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,381,845 samples, 0.55%)</title><rect x="62.2035%" y="2213" width="0.5533%" height="15" fill="rgb(219,66,42)" fg:x="155360438" fg:w="1381845"/><text x="62.4535%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,381,845 samples, 0.55%)</title><rect x="62.2035%" y="2197" width="0.5533%" height="15" fill="rgb(206,180,7)" fg:x="155360438" fg:w="1381845"/><text x="62.4535%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,381,845 samples, 0.55%)</title><rect x="62.2035%" y="2181" width="0.5533%" height="15" fill="rgb(208,226,31)" fg:x="155360438" fg:w="1381845"/><text x="62.4535%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,381,845 samples, 0.55%)</title><rect x="62.2035%" y="2165" width="0.5533%" height="15" fill="rgb(218,26,49)" fg:x="155360438" fg:w="1381845"/><text x="62.4535%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,381,845 samples, 0.55%)</title><rect x="62.2035%" y="2149" width="0.5533%" height="15" fill="rgb(233,197,48)" fg:x="155360438" fg:w="1381845"/><text x="62.4535%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,381,845 samples, 0.55%)</title><rect x="62.2035%" y="2133" width="0.5533%" height="15" fill="rgb(252,181,51)" fg:x="155360438" fg:w="1381845"/><text x="62.4535%" y="2143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,381,845 samples, 0.55%)</title><rect x="62.2035%" y="2117" width="0.5533%" height="15" fill="rgb(253,90,19)" fg:x="155360438" fg:w="1381845"/><text x="62.4535%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,381,845 samples, 0.55%)</title><rect x="62.2035%" y="2101" width="0.5533%" height="15" fill="rgb(215,171,30)" fg:x="155360438" fg:w="1381845"/><text x="62.4535%" y="2111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,381,845 samples, 0.55%)</title><rect x="62.2035%" y="2085" width="0.5533%" height="15" fill="rgb(214,222,9)" fg:x="155360438" fg:w="1381845"/><text x="62.4535%" y="2095.50"></text></g><g><title>alloc::alloc::dealloc (1,381,845 samples, 0.55%)</title><rect x="62.2035%" y="2069" width="0.5533%" height="15" fill="rgb(223,3,22)" fg:x="155360438" fg:w="1381845"/><text x="62.4535%" y="2079.50"></text></g><g><title>cfree (1,381,845 samples, 0.55%)</title><rect x="62.2035%" y="2053" width="0.5533%" height="15" fill="rgb(225,196,46)" fg:x="155360438" fg:w="1381845"/><text x="62.4535%" y="2063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,816,629 samples, 1.13%)</title><rect x="62.2035%" y="2277" width="1.1277%" height="15" fill="rgb(209,110,37)" fg:x="155360438" fg:w="2816629"/><text x="62.4535%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,816,629 samples, 1.13%)</title><rect x="62.2035%" y="2261" width="1.1277%" height="15" fill="rgb(249,89,12)" fg:x="155360438" fg:w="2816629"/><text x="62.4535%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,816,629 samples, 1.13%)</title><rect x="62.2035%" y="2245" width="1.1277%" height="15" fill="rgb(226,27,33)" fg:x="155360438" fg:w="2816629"/><text x="62.4535%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,434,784 samples, 0.57%)</title><rect x="62.7567%" y="2229" width="0.5745%" height="15" fill="rgb(213,82,22)" fg:x="156742283" fg:w="1434784"/><text x="63.0067%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,434,784 samples, 0.57%)</title><rect x="62.7567%" y="2213" width="0.5745%" height="15" fill="rgb(248,140,0)" fg:x="156742283" fg:w="1434784"/><text x="63.0067%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,434,784 samples, 0.57%)</title><rect x="62.7567%" y="2197" width="0.5745%" height="15" fill="rgb(228,106,3)" fg:x="156742283" fg:w="1434784"/><text x="63.0067%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,434,784 samples, 0.57%)</title><rect x="62.7567%" y="2181" width="0.5745%" height="15" fill="rgb(209,23,37)" fg:x="156742283" fg:w="1434784"/><text x="63.0067%" y="2191.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,434,784 samples, 0.57%)</title><rect x="62.7567%" y="2165" width="0.5745%" height="15" fill="rgb(241,93,50)" fg:x="156742283" fg:w="1434784"/><text x="63.0067%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,434,784 samples, 0.57%)</title><rect x="62.7567%" y="2149" width="0.5745%" height="15" fill="rgb(253,46,43)" fg:x="156742283" fg:w="1434784"/><text x="63.0067%" y="2159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,434,784 samples, 0.57%)</title><rect x="62.7567%" y="2133" width="0.5745%" height="15" fill="rgb(226,206,43)" fg:x="156742283" fg:w="1434784"/><text x="63.0067%" y="2143.50"></text></g><g><title>alloc::alloc::dealloc (1,434,784 samples, 0.57%)</title><rect x="62.7567%" y="2117" width="0.5745%" height="15" fill="rgb(217,54,7)" fg:x="156742283" fg:w="1434784"/><text x="63.0067%" y="2127.50"></text></g><g><title>__rdl_dealloc (1,434,784 samples, 0.57%)</title><rect x="62.7567%" y="2101" width="0.5745%" height="15" fill="rgb(223,5,52)" fg:x="156742283" fg:w="1434784"/><text x="63.0067%" y="2111.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,434,784 samples, 0.57%)</title><rect x="62.7567%" y="2085" width="0.5745%" height="15" fill="rgb(206,52,46)" fg:x="156742283" fg:w="1434784"/><text x="63.0067%" y="2095.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,148,954 samples, 1.66%)</title><rect x="62.2035%" y="2341" width="1.6612%" height="15" fill="rgb(253,136,11)" fg:x="155360438" fg:w="4148954"/><text x="62.4535%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (4,148,954 samples, 1.66%)</title><rect x="62.2035%" y="2325" width="1.6612%" height="15" fill="rgb(208,106,33)" fg:x="155360438" fg:w="4148954"/><text x="62.4535%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (4,148,954 samples, 1.66%)</title><rect x="62.2035%" y="2309" width="1.6612%" height="15" fill="rgb(206,54,4)" fg:x="155360438" fg:w="4148954"/><text x="62.4535%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (4,148,954 samples, 1.66%)</title><rect x="62.2035%" y="2293" width="1.6612%" height="15" fill="rgb(213,3,15)" fg:x="155360438" fg:w="4148954"/><text x="62.4535%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,332,325 samples, 0.53%)</title><rect x="63.3312%" y="2277" width="0.5334%" height="15" fill="rgb(252,211,39)" fg:x="158177067" fg:w="1332325"/><text x="63.5812%" y="2287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,332,325 samples, 0.53%)</title><rect x="63.3312%" y="2261" width="0.5334%" height="15" fill="rgb(223,6,36)" fg:x="158177067" fg:w="1332325"/><text x="63.5812%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,332,325 samples, 0.53%)</title><rect x="63.3312%" y="2245" width="0.5334%" height="15" fill="rgb(252,169,45)" fg:x="158177067" fg:w="1332325"/><text x="63.5812%" y="2255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,332,325 samples, 0.53%)</title><rect x="63.3312%" y="2229" width="0.5334%" height="15" fill="rgb(212,48,26)" fg:x="158177067" fg:w="1332325"/><text x="63.5812%" y="2239.50"></text></g><g><title>alloc::alloc::dealloc (1,332,325 samples, 0.53%)</title><rect x="63.3312%" y="2213" width="0.5334%" height="15" fill="rgb(251,102,48)" fg:x="158177067" fg:w="1332325"/><text x="63.5812%" y="2223.50"></text></g><g><title>cfree (1,332,325 samples, 0.53%)</title><rect x="63.3312%" y="2197" width="0.5334%" height="15" fill="rgb(243,208,16)" fg:x="158177067" fg:w="1332325"/><text x="63.5812%" y="2207.50"></text></g><g><title>[libc.so.6] (1,332,325 samples, 0.53%)</title><rect x="63.3312%" y="2181" width="0.5334%" height="15" fill="rgb(219,96,24)" fg:x="158177067" fg:w="1332325"/><text x="63.5812%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,863,617 samples, 2.75%)</title><rect x="61.6686%" y="2485" width="2.7481%" height="15" fill="rgb(219,33,29)" fg:x="154024596" fg:w="6863617"/><text x="61.9186%" y="2495.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,863,617 samples, 2.75%)</title><rect x="61.6686%" y="2469" width="2.7481%" height="15" fill="rgb(223,176,5)" fg:x="154024596" fg:w="6863617"/><text x="61.9186%" y="2479.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,863,617 samples, 2.75%)</title><rect x="61.6686%" y="2453" width="2.7481%" height="15" fill="rgb(228,140,14)" fg:x="154024596" fg:w="6863617"/><text x="61.9186%" y="2463.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,863,617 samples, 2.75%)</title><rect x="61.6686%" y="2437" width="2.7481%" height="15" fill="rgb(217,179,31)" fg:x="154024596" fg:w="6863617"/><text x="61.9186%" y="2447.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,527,775 samples, 2.21%)</title><rect x="62.2035%" y="2421" width="2.2132%" height="15" fill="rgb(230,9,30)" fg:x="155360438" fg:w="5527775"/><text x="62.4535%" y="2431.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,527,775 samples, 2.21%)</title><rect x="62.2035%" y="2405" width="2.2132%" height="15" fill="rgb(230,136,20)" fg:x="155360438" fg:w="5527775"/><text x="62.4535%" y="2415.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,527,775 samples, 2.21%)</title><rect x="62.2035%" y="2389" width="2.2132%" height="15" fill="rgb(215,210,22)" fg:x="155360438" fg:w="5527775"/><text x="62.4535%" y="2399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,527,775 samples, 2.21%)</title><rect x="62.2035%" y="2373" width="2.2132%" height="15" fill="rgb(218,43,5)" fg:x="155360438" fg:w="5527775"/><text x="62.4535%" y="2383.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,527,775 samples, 2.21%)</title><rect x="62.2035%" y="2357" width="2.2132%" height="15" fill="rgb(216,11,5)" fg:x="155360438" fg:w="5527775"/><text x="62.4535%" y="2367.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,378,821 samples, 0.55%)</title><rect x="63.8646%" y="2341" width="0.5521%" height="15" fill="rgb(209,82,29)" fg:x="159509392" fg:w="1378821"/><text x="64.1146%" y="2351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,378,821 samples, 0.55%)</title><rect x="63.8646%" y="2325" width="0.5521%" height="15" fill="rgb(244,115,12)" fg:x="159509392" fg:w="1378821"/><text x="64.1146%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,378,821 samples, 0.55%)</title><rect x="63.8646%" y="2309" width="0.5521%" height="15" fill="rgb(222,82,18)" fg:x="159509392" fg:w="1378821"/><text x="64.1146%" y="2319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,378,821 samples, 0.55%)</title><rect x="63.8646%" y="2293" width="0.5521%" height="15" fill="rgb(249,227,8)" fg:x="159509392" fg:w="1378821"/><text x="64.1146%" y="2303.50"></text></g><g><title>alloc::alloc::dealloc (1,378,821 samples, 0.55%)</title><rect x="63.8646%" y="2277" width="0.5521%" height="15" fill="rgb(253,141,45)" fg:x="159509392" fg:w="1378821"/><text x="64.1146%" y="2287.50"></text></g><g><title>cfree (1,378,821 samples, 0.55%)</title><rect x="63.8646%" y="2261" width="0.5521%" height="15" fill="rgb(234,184,4)" fg:x="159509392" fg:w="1378821"/><text x="64.1146%" y="2271.50"></text></g><g><title>[libc.so.6] (1,378,821 samples, 0.55%)</title><rect x="63.8646%" y="2245" width="0.5521%" height="15" fill="rgb(218,194,23)" fg:x="159509392" fg:w="1378821"/><text x="64.1146%" y="2255.50"></text></g><g><title>[libc.so.6] (1,378,821 samples, 0.55%)</title><rect x="63.8646%" y="2229" width="0.5521%" height="15" fill="rgb(235,66,41)" fg:x="159509392" fg:w="1378821"/><text x="64.1146%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (8,227,618 samples, 3.29%)</title><rect x="61.6686%" y="2677" width="3.2942%" height="15" fill="rgb(245,217,1)" fg:x="154024596" fg:w="8227618"/><text x="61.9186%" y="2687.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,227,618 samples, 3.29%)</title><rect x="61.6686%" y="2661" width="3.2942%" height="15" fill="rgb(229,91,1)" fg:x="154024596" fg:w="8227618"/><text x="61.9186%" y="2671.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (8,227,618 samples, 3.29%)</title><rect x="61.6686%" y="2645" width="3.2942%" height="15" fill="rgb(207,101,30)" fg:x="154024596" fg:w="8227618"/><text x="61.9186%" y="2655.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (8,227,618 samples, 3.29%)</title><rect x="61.6686%" y="2629" width="3.2942%" height="15" fill="rgb(223,82,49)" fg:x="154024596" fg:w="8227618"/><text x="61.9186%" y="2639.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (8,227,618 samples, 3.29%)</title><rect x="61.6686%" y="2613" width="3.2942%" height="15" fill="rgb(218,167,17)" fg:x="154024596" fg:w="8227618"/><text x="61.9186%" y="2623.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,227,618 samples, 3.29%)</title><rect x="61.6686%" y="2597" width="3.2942%" height="15" fill="rgb(208,103,14)" fg:x="154024596" fg:w="8227618"/><text x="61.9186%" y="2607.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (8,227,618 samples, 3.29%)</title><rect x="61.6686%" y="2581" width="3.2942%" height="15" fill="rgb(238,20,8)" fg:x="154024596" fg:w="8227618"/><text x="61.9186%" y="2591.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (8,227,618 samples, 3.29%)</title><rect x="61.6686%" y="2565" width="3.2942%" height="15" fill="rgb(218,80,54)" fg:x="154024596" fg:w="8227618"/><text x="61.9186%" y="2575.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (8,227,618 samples, 3.29%)</title><rect x="61.6686%" y="2549" width="3.2942%" height="15" fill="rgb(240,144,17)" fg:x="154024596" fg:w="8227618"/><text x="61.9186%" y="2559.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,227,618 samples, 3.29%)</title><rect x="61.6686%" y="2533" width="3.2942%" height="15" fill="rgb(245,27,50)" fg:x="154024596" fg:w="8227618"/><text x="61.9186%" y="2543.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (8,227,618 samples, 3.29%)</title><rect x="61.6686%" y="2517" width="3.2942%" height="15" fill="rgb(251,51,7)" fg:x="154024596" fg:w="8227618"/><text x="61.9186%" y="2527.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (8,227,618 samples, 3.29%)</title><rect x="61.6686%" y="2501" width="3.2942%" height="15" fill="rgb(245,217,29)" fg:x="154024596" fg:w="8227618"/><text x="61.9186%" y="2511.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2485" width="0.5461%" height="15" fill="rgb(221,176,29)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2469" width="0.5461%" height="15" fill="rgb(212,180,24)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2453" width="0.5461%" height="15" fill="rgb(254,24,2)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2437" width="0.5461%" height="15" fill="rgb(230,100,2)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2421" width="0.5461%" height="15" fill="rgb(219,142,25)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2431.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2405" width="0.5461%" height="15" fill="rgb(240,73,43)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2415.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2389" width="0.5461%" height="15" fill="rgb(214,114,15)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2373" width="0.5461%" height="15" fill="rgb(207,130,4)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2357" width="0.5461%" height="15" fill="rgb(221,25,40)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2341" width="0.5461%" height="15" fill="rgb(241,184,7)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2325" width="0.5461%" height="15" fill="rgb(235,159,4)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2309" width="0.5461%" height="15" fill="rgb(214,87,48)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2293" width="0.5461%" height="15" fill="rgb(246,198,24)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2277" width="0.5461%" height="15" fill="rgb(209,66,40)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2261" width="0.5461%" height="15" fill="rgb(233,147,39)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2245" width="0.5461%" height="15" fill="rgb(231,145,52)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2255.50"></text></g><g><title>alloc::alloc::dealloc (1,364,001 samples, 0.55%)</title><rect x="64.4167%" y="2229" width="0.5461%" height="15" fill="rgb(206,20,26)" fg:x="160888213" fg:w="1364001"/><text x="64.6667%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (10,818,179 samples, 4.33%)</title><rect x="61.1410%" y="2805" width="4.3314%" height="15" fill="rgb(238,220,4)" fg:x="152706700" fg:w="10818179"/><text x="61.3910%" y="2815.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,818,179 samples, 4.33%)</title><rect x="61.1410%" y="2789" width="4.3314%" height="15" fill="rgb(252,195,42)" fg:x="152706700" fg:w="10818179"/><text x="61.3910%" y="2799.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (10,818,179 samples, 4.33%)</title><rect x="61.1410%" y="2773" width="4.3314%" height="15" fill="rgb(209,10,6)" fg:x="152706700" fg:w="10818179"/><text x="61.3910%" y="2783.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (10,818,179 samples, 4.33%)</title><rect x="61.1410%" y="2757" width="4.3314%" height="15" fill="rgb(229,3,52)" fg:x="152706700" fg:w="10818179"/><text x="61.3910%" y="2767.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,500,283 samples, 3.80%)</title><rect x="61.6686%" y="2741" width="3.8037%" height="15" fill="rgb(253,49,37)" fg:x="154024596" fg:w="9500283"/><text x="61.9186%" y="2751.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,500,283 samples, 3.80%)</title><rect x="61.6686%" y="2725" width="3.8037%" height="15" fill="rgb(240,103,49)" fg:x="154024596" fg:w="9500283"/><text x="61.9186%" y="2735.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,500,283 samples, 3.80%)</title><rect x="61.6686%" y="2709" width="3.8037%" height="15" fill="rgb(250,182,30)" fg:x="154024596" fg:w="9500283"/><text x="61.9186%" y="2719.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,500,283 samples, 3.80%)</title><rect x="61.6686%" y="2693" width="3.8037%" height="15" fill="rgb(248,8,30)" fg:x="154024596" fg:w="9500283"/><text x="61.9186%" y="2703.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2677" width="0.5096%" height="15" fill="rgb(237,120,30)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2661" width="0.5096%" height="15" fill="rgb(221,146,34)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2645" width="0.5096%" height="15" fill="rgb(242,55,13)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2629" width="0.5096%" height="15" fill="rgb(242,112,31)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2613" width="0.5096%" height="15" fill="rgb(249,192,27)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2623.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2597" width="0.5096%" height="15" fill="rgb(208,204,44)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2607.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2581" width="0.5096%" height="15" fill="rgb(208,93,54)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2565" width="0.5096%" height="15" fill="rgb(242,1,31)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2549" width="0.5096%" height="15" fill="rgb(241,83,25)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2533" width="0.5096%" height="15" fill="rgb(205,169,50)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2517" width="0.5096%" height="15" fill="rgb(239,186,37)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2501" width="0.5096%" height="15" fill="rgb(205,221,10)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2485" width="0.5096%" height="15" fill="rgb(218,196,15)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2469" width="0.5096%" height="15" fill="rgb(218,196,35)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2453" width="0.5096%" height="15" fill="rgb(233,63,24)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2437" width="0.5096%" height="15" fill="rgb(225,8,4)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2447.50"></text></g><g><title>alloc::alloc::dealloc (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2421" width="0.5096%" height="15" fill="rgb(234,105,35)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2431.50"></text></g><g><title>cfree (1,272,665 samples, 0.51%)</title><rect x="64.9628%" y="2405" width="0.5096%" height="15" fill="rgb(236,21,32)" fg:x="162252214" fg:w="1272665"/><text x="65.2128%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,051,835 samples, 4.83%)</title><rect x="61.1410%" y="2853" width="4.8253%" height="15" fill="rgb(228,109,6)" fg:x="152706700" fg:w="12051835"/><text x="61.3910%" y="2863.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (12,051,835 samples, 4.83%)</title><rect x="61.1410%" y="2837" width="4.8253%" height="15" fill="rgb(229,215,31)" fg:x="152706700" fg:w="12051835"/><text x="61.3910%" y="2847.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (12,051,835 samples, 4.83%)</title><rect x="61.1410%" y="2821" width="4.8253%" height="15" fill="rgb(221,52,54)" fg:x="152706700" fg:w="12051835"/><text x="61.3910%" y="2831.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,233,656 samples, 0.49%)</title><rect x="65.4724%" y="2805" width="0.4939%" height="15" fill="rgb(252,129,43)" fg:x="163524879" fg:w="1233656"/><text x="65.7224%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,233,656 samples, 0.49%)</title><rect x="65.4724%" y="2789" width="0.4939%" height="15" fill="rgb(248,183,27)" fg:x="163524879" fg:w="1233656"/><text x="65.7224%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,233,656 samples, 0.49%)</title><rect x="65.4724%" y="2773" width="0.4939%" height="15" fill="rgb(250,0,22)" fg:x="163524879" fg:w="1233656"/><text x="65.7224%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,233,656 samples, 0.49%)</title><rect x="65.4724%" y="2757" width="0.4939%" height="15" fill="rgb(213,166,10)" fg:x="163524879" fg:w="1233656"/><text x="65.7224%" y="2767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,233,656 samples, 0.49%)</title><rect x="65.4724%" y="2741" width="0.4939%" height="15" fill="rgb(207,163,36)" fg:x="163524879" fg:w="1233656"/><text x="65.7224%" y="2751.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,233,656 samples, 0.49%)</title><rect x="65.4724%" y="2725" width="0.4939%" height="15" fill="rgb(208,122,22)" fg:x="163524879" fg:w="1233656"/><text x="65.7224%" y="2735.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,233,656 samples, 0.49%)</title><rect x="65.4724%" y="2709" width="0.4939%" height="15" fill="rgb(207,104,49)" fg:x="163524879" fg:w="1233656"/><text x="65.7224%" y="2719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,233,656 samples, 0.49%)</title><rect x="65.4724%" y="2693" width="0.4939%" height="15" fill="rgb(248,211,50)" fg:x="163524879" fg:w="1233656"/><text x="65.7224%" y="2703.50"></text></g><g><title>alloc::alloc::dealloc (1,233,656 samples, 0.49%)</title><rect x="65.4724%" y="2677" width="0.4939%" height="15" fill="rgb(217,13,45)" fg:x="163524879" fg:w="1233656"/><text x="65.7224%" y="2687.50"></text></g><g><title>cfree (1,233,656 samples, 0.49%)</title><rect x="65.4724%" y="2661" width="0.4939%" height="15" fill="rgb(211,216,49)" fg:x="163524879" fg:w="1233656"/><text x="65.7224%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,279,024 samples, 5.32%)</title><rect x="61.1410%" y="2869" width="5.3167%" height="15" fill="rgb(221,58,53)" fg:x="152706700" fg:w="13279024"/><text x="61.3910%" y="2879.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,227,189 samples, 0.49%)</title><rect x="65.9663%" y="2853" width="0.4913%" height="15" fill="rgb(220,112,41)" fg:x="164758535" fg:w="1227189"/><text x="66.2163%" y="2863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,227,189 samples, 0.49%)</title><rect x="65.9663%" y="2837" width="0.4913%" height="15" fill="rgb(236,38,28)" fg:x="164758535" fg:w="1227189"/><text x="66.2163%" y="2847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,227,189 samples, 0.49%)</title><rect x="65.9663%" y="2821" width="0.4913%" height="15" fill="rgb(227,195,22)" fg:x="164758535" fg:w="1227189"/><text x="66.2163%" y="2831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,227,189 samples, 0.49%)</title><rect x="65.9663%" y="2805" width="0.4913%" height="15" fill="rgb(214,55,33)" fg:x="164758535" fg:w="1227189"/><text x="66.2163%" y="2815.50"></text></g><g><title>alloc::alloc::dealloc (1,227,189 samples, 0.49%)</title><rect x="65.9663%" y="2789" width="0.4913%" height="15" fill="rgb(248,80,13)" fg:x="164758535" fg:w="1227189"/><text x="66.2163%" y="2799.50"></text></g><g><title>cfree (1,227,189 samples, 0.49%)</title><rect x="65.9663%" y="2773" width="0.4913%" height="15" fill="rgb(238,52,6)" fg:x="164758535" fg:w="1227189"/><text x="66.2163%" y="2783.50"></text></g><g><title>[libc.so.6] (1,227,189 samples, 0.49%)</title><rect x="65.9663%" y="2757" width="0.4913%" height="15" fill="rgb(224,198,47)" fg:x="164758535" fg:w="1227189"/><text x="66.2163%" y="2767.50"></text></g><g><title>[libc.so.6] (1,227,189 samples, 0.49%)</title><rect x="65.9663%" y="2741" width="0.4913%" height="15" fill="rgb(233,171,20)" fg:x="164758535" fg:w="1227189"/><text x="66.2163%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (14,698,706 samples, 5.89%)</title><rect x="61.1410%" y="2933" width="5.8851%" height="15" fill="rgb(241,30,25)" fg:x="152706700" fg:w="14698706"/><text x="61.3910%" y="2943.50">core::p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,698,706 samples, 5.89%)</title><rect x="61.1410%" y="2917" width="5.8851%" height="15" fill="rgb(207,171,38)" fg:x="152706700" fg:w="14698706"/><text x="61.3910%" y="2927.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (14,698,706 samples, 5.89%)</title><rect x="61.1410%" y="2901" width="5.8851%" height="15" fill="rgb(234,70,1)" fg:x="152706700" fg:w="14698706"/><text x="61.3910%" y="2911.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (14,698,706 samples, 5.89%)</title><rect x="61.1410%" y="2885" width="5.8851%" height="15" fill="rgb(232,178,18)" fg:x="152706700" fg:w="14698706"/><text x="61.3910%" y="2895.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,419,682 samples, 0.57%)</title><rect x="66.4576%" y="2869" width="0.5684%" height="15" fill="rgb(241,78,40)" fg:x="165985724" fg:w="1419682"/><text x="66.7076%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,419,682 samples, 0.57%)</title><rect x="66.4576%" y="2853" width="0.5684%" height="15" fill="rgb(222,35,25)" fg:x="165985724" fg:w="1419682"/><text x="66.7076%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,419,682 samples, 0.57%)</title><rect x="66.4576%" y="2837" width="0.5684%" height="15" fill="rgb(207,92,16)" fg:x="165985724" fg:w="1419682"/><text x="66.7076%" y="2847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,419,682 samples, 0.57%)</title><rect x="66.4576%" y="2821" width="0.5684%" height="15" fill="rgb(216,59,51)" fg:x="165985724" fg:w="1419682"/><text x="66.7076%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,419,682 samples, 0.57%)</title><rect x="66.4576%" y="2805" width="0.5684%" height="15" fill="rgb(213,80,28)" fg:x="165985724" fg:w="1419682"/><text x="66.7076%" y="2815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,419,682 samples, 0.57%)</title><rect x="66.4576%" y="2789" width="0.5684%" height="15" fill="rgb(220,93,7)" fg:x="165985724" fg:w="1419682"/><text x="66.7076%" y="2799.50"></text></g><g><title>alloc::alloc::dealloc (1,419,682 samples, 0.57%)</title><rect x="66.4576%" y="2773" width="0.5684%" height="15" fill="rgb(225,24,44)" fg:x="165985724" fg:w="1419682"/><text x="66.7076%" y="2783.50"></text></g><g><title>cfree (1,419,682 samples, 0.57%)</title><rect x="66.4576%" y="2757" width="0.5684%" height="15" fill="rgb(243,74,40)" fg:x="165985724" fg:w="1419682"/><text x="66.7076%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,071,801 samples, 0.83%)</title><rect x="67.0261%" y="2933" width="0.8295%" height="15" fill="rgb(228,39,7)" fg:x="167405406" fg:w="2071801"/><text x="67.2761%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,071,801 samples, 0.83%)</title><rect x="67.0261%" y="2917" width="0.8295%" height="15" fill="rgb(227,79,8)" fg:x="167405406" fg:w="2071801"/><text x="67.2761%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,071,801 samples, 0.83%)</title><rect x="67.0261%" y="2901" width="0.8295%" height="15" fill="rgb(236,58,11)" fg:x="167405406" fg:w="2071801"/><text x="67.2761%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,071,801 samples, 0.83%)</title><rect x="67.0261%" y="2885" width="0.8295%" height="15" fill="rgb(249,63,35)" fg:x="167405406" fg:w="2071801"/><text x="67.2761%" y="2895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,071,801 samples, 0.83%)</title><rect x="67.0261%" y="2869" width="0.8295%" height="15" fill="rgb(252,114,16)" fg:x="167405406" fg:w="2071801"/><text x="67.2761%" y="2879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,071,801 samples, 0.83%)</title><rect x="67.0261%" y="2853" width="0.8295%" height="15" fill="rgb(254,151,24)" fg:x="167405406" fg:w="2071801"/><text x="67.2761%" y="2863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,071,801 samples, 0.83%)</title><rect x="67.0261%" y="2837" width="0.8295%" height="15" fill="rgb(253,54,39)" fg:x="167405406" fg:w="2071801"/><text x="67.2761%" y="2847.50"></text></g><g><title>alloc::alloc::dealloc (2,071,801 samples, 0.83%)</title><rect x="67.0261%" y="2821" width="0.8295%" height="15" fill="rgb(243,25,45)" fg:x="167405406" fg:w="2071801"/><text x="67.2761%" y="2831.50"></text></g><g><title>cfree (2,071,801 samples, 0.83%)</title><rect x="67.0261%" y="2805" width="0.8295%" height="15" fill="rgb(234,134,9)" fg:x="167405406" fg:w="2071801"/><text x="67.2761%" y="2815.50"></text></g><g><title>[libc.so.6] (2,071,801 samples, 0.83%)</title><rect x="67.0261%" y="2789" width="0.8295%" height="15" fill="rgb(227,166,31)" fg:x="167405406" fg:w="2071801"/><text x="67.2761%" y="2799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,995,662 samples, 7.21%)</title><rect x="61.1410%" y="2981" width="7.2051%" height="15" fill="rgb(245,143,41)" fg:x="152706700" fg:w="17995662"/><text x="61.3910%" y="2991.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (17,995,662 samples, 7.21%)</title><rect x="61.1410%" y="2965" width="7.2051%" height="15" fill="rgb(238,181,32)" fg:x="152706700" fg:w="17995662"/><text x="61.3910%" y="2975.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (17,995,662 samples, 7.21%)</title><rect x="61.1410%" y="2949" width="7.2051%" height="15" fill="rgb(224,113,18)" fg:x="152706700" fg:w="17995662"/><text x="61.3910%" y="2959.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2933" width="0.4905%" height="15" fill="rgb(240,229,28)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2917" width="0.4905%" height="15" fill="rgb(250,185,3)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2901" width="0.4905%" height="15" fill="rgb(212,59,25)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2885" width="0.4905%" height="15" fill="rgb(221,87,20)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2895.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2869" width="0.4905%" height="15" fill="rgb(213,74,28)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2879.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2853" width="0.4905%" height="15" fill="rgb(224,132,34)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2863.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2837" width="0.4905%" height="15" fill="rgb(222,101,24)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2821" width="0.4905%" height="15" fill="rgb(254,142,4)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2805" width="0.4905%" height="15" fill="rgb(230,229,49)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2789" width="0.4905%" height="15" fill="rgb(238,70,47)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2773" width="0.4905%" height="15" fill="rgb(231,160,17)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2757" width="0.4905%" height="15" fill="rgb(218,68,53)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2741" width="0.4905%" height="15" fill="rgb(236,111,10)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2725" width="0.4905%" height="15" fill="rgb(224,34,41)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2709" width="0.4905%" height="15" fill="rgb(241,118,19)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2693" width="0.4905%" height="15" fill="rgb(238,129,25)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2703.50"></text></g><g><title>alloc::alloc::dealloc (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2677" width="0.4905%" height="15" fill="rgb(238,22,31)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2687.50"></text></g><g><title>cfree (1,225,155 samples, 0.49%)</title><rect x="67.8556%" y="2661" width="0.4905%" height="15" fill="rgb(222,174,48)" fg:x="169477207" fg:w="1225155"/><text x="68.1056%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (19,411,842 samples, 7.77%)</title><rect x="61.1410%" y="2997" width="7.7721%" height="15" fill="rgb(206,152,40)" fg:x="152706700" fg:w="19411842"/><text x="61.3910%" y="3007.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,416,180 samples, 0.57%)</title><rect x="68.3461%" y="2981" width="0.5670%" height="15" fill="rgb(218,99,54)" fg:x="170702362" fg:w="1416180"/><text x="68.5961%" y="2991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,416,180 samples, 0.57%)</title><rect x="68.3461%" y="2965" width="0.5670%" height="15" fill="rgb(220,174,26)" fg:x="170702362" fg:w="1416180"/><text x="68.5961%" y="2975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,416,180 samples, 0.57%)</title><rect x="68.3461%" y="2949" width="0.5670%" height="15" fill="rgb(245,116,9)" fg:x="170702362" fg:w="1416180"/><text x="68.5961%" y="2959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,416,180 samples, 0.57%)</title><rect x="68.3461%" y="2933" width="0.5670%" height="15" fill="rgb(209,72,35)" fg:x="170702362" fg:w="1416180"/><text x="68.5961%" y="2943.50"></text></g><g><title>alloc::alloc::dealloc (1,416,180 samples, 0.57%)</title><rect x="68.3461%" y="2917" width="0.5670%" height="15" fill="rgb(226,126,21)" fg:x="170702362" fg:w="1416180"/><text x="68.5961%" y="2927.50"></text></g><g><title>cfree (1,416,180 samples, 0.57%)</title><rect x="68.3461%" y="2901" width="0.5670%" height="15" fill="rgb(227,192,1)" fg:x="170702362" fg:w="1416180"/><text x="68.5961%" y="2911.50"></text></g><g><title>[libc.so.6] (1,416,180 samples, 0.57%)</title><rect x="68.3461%" y="2885" width="0.5670%" height="15" fill="rgb(237,180,29)" fg:x="170702362" fg:w="1416180"/><text x="68.5961%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,378,644 samples, 0.55%)</title><rect x="68.9131%" y="2997" width="0.5520%" height="15" fill="rgb(230,197,35)" fg:x="172118542" fg:w="1378644"/><text x="69.1631%" y="3007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,378,644 samples, 0.55%)</title><rect x="68.9131%" y="2981" width="0.5520%" height="15" fill="rgb(246,193,31)" fg:x="172118542" fg:w="1378644"/><text x="69.1631%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,378,644 samples, 0.55%)</title><rect x="68.9131%" y="2965" width="0.5520%" height="15" fill="rgb(241,36,4)" fg:x="172118542" fg:w="1378644"/><text x="69.1631%" y="2975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,378,644 samples, 0.55%)</title><rect x="68.9131%" y="2949" width="0.5520%" height="15" fill="rgb(241,130,17)" fg:x="172118542" fg:w="1378644"/><text x="69.1631%" y="2959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,378,644 samples, 0.55%)</title><rect x="68.9131%" y="2933" width="0.5520%" height="15" fill="rgb(206,137,32)" fg:x="172118542" fg:w="1378644"/><text x="69.1631%" y="2943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,378,644 samples, 0.55%)</title><rect x="68.9131%" y="2917" width="0.5520%" height="15" fill="rgb(237,228,51)" fg:x="172118542" fg:w="1378644"/><text x="69.1631%" y="2927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,378,644 samples, 0.55%)</title><rect x="68.9131%" y="2901" width="0.5520%" height="15" fill="rgb(243,6,42)" fg:x="172118542" fg:w="1378644"/><text x="69.1631%" y="2911.50"></text></g><g><title>alloc::alloc::dealloc (1,378,644 samples, 0.55%)</title><rect x="68.9131%" y="2885" width="0.5520%" height="15" fill="rgb(251,74,28)" fg:x="172118542" fg:w="1378644"/><text x="69.1631%" y="2895.50"></text></g><g><title>cfree (1,378,644 samples, 0.55%)</title><rect x="68.9131%" y="2869" width="0.5520%" height="15" fill="rgb(218,20,49)" fg:x="172118542" fg:w="1378644"/><text x="69.1631%" y="2879.50"></text></g><g><title>[libc.so.6] (1,378,644 samples, 0.55%)</title><rect x="68.9131%" y="2853" width="0.5520%" height="15" fill="rgb(238,28,14)" fg:x="172118542" fg:w="1378644"/><text x="69.1631%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,426,808 samples, 0.57%)</title><rect x="69.4651%" y="2997" width="0.5713%" height="15" fill="rgb(229,40,46)" fg:x="173497186" fg:w="1426808"/><text x="69.7151%" y="3007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,426,808 samples, 0.57%)</title><rect x="69.4651%" y="2981" width="0.5713%" height="15" fill="rgb(244,195,20)" fg:x="173497186" fg:w="1426808"/><text x="69.7151%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,426,808 samples, 0.57%)</title><rect x="69.4651%" y="2965" width="0.5713%" height="15" fill="rgb(253,56,35)" fg:x="173497186" fg:w="1426808"/><text x="69.7151%" y="2975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,426,808 samples, 0.57%)</title><rect x="69.4651%" y="2949" width="0.5713%" height="15" fill="rgb(210,149,44)" fg:x="173497186" fg:w="1426808"/><text x="69.7151%" y="2959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,426,808 samples, 0.57%)</title><rect x="69.4651%" y="2933" width="0.5713%" height="15" fill="rgb(240,135,12)" fg:x="173497186" fg:w="1426808"/><text x="69.7151%" y="2943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,426,808 samples, 0.57%)</title><rect x="69.4651%" y="2917" width="0.5713%" height="15" fill="rgb(251,24,50)" fg:x="173497186" fg:w="1426808"/><text x="69.7151%" y="2927.50"></text></g><g><title>alloc::alloc::dealloc (1,426,808 samples, 0.57%)</title><rect x="69.4651%" y="2901" width="0.5713%" height="15" fill="rgb(243,200,47)" fg:x="173497186" fg:w="1426808"/><text x="69.7151%" y="2911.50"></text></g><g><title>cfree (1,426,808 samples, 0.57%)</title><rect x="69.4651%" y="2885" width="0.5713%" height="15" fill="rgb(224,166,26)" fg:x="173497186" fg:w="1426808"/><text x="69.7151%" y="2895.50"></text></g><g><title>[libc.so.6] (1,426,808 samples, 0.57%)</title><rect x="69.4651%" y="2869" width="0.5713%" height="15" fill="rgb(233,0,47)" fg:x="173497186" fg:w="1426808"/><text x="69.7151%" y="2879.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,331,231 samples, 0.53%)</title><rect x="70.0364%" y="2901" width="0.5330%" height="15" fill="rgb(253,80,5)" fg:x="174923994" fg:w="1331231"/><text x="70.2864%" y="2911.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,331,231 samples, 0.53%)</title><rect x="70.0364%" y="2885" width="0.5330%" height="15" fill="rgb(214,133,25)" fg:x="174923994" fg:w="1331231"/><text x="70.2864%" y="2895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27,282,586 samples, 10.92%)</title><rect x="60.1057%" y="3045" width="10.9234%" height="15" fill="rgb(209,27,14)" fg:x="150121065" fg:w="27282586"/><text x="60.3557%" y="3055.50">&lt;alloc::vec::Vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (27,282,586 samples, 10.92%)</title><rect x="60.1057%" y="3029" width="10.9234%" height="15" fill="rgb(219,102,51)" fg:x="150121065" fg:w="27282586"/><text x="60.3557%" y="3039.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (27,282,586 samples, 10.92%)</title><rect x="60.1057%" y="3013" width="10.9234%" height="15" fill="rgb(237,18,16)" fg:x="150121065" fg:w="27282586"/><text x="60.3557%" y="3023.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,479,657 samples, 0.99%)</title><rect x="70.0364%" y="2997" width="0.9928%" height="15" fill="rgb(241,85,17)" fg:x="174923994" fg:w="2479657"/><text x="70.2864%" y="3007.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,479,657 samples, 0.99%)</title><rect x="70.0364%" y="2981" width="0.9928%" height="15" fill="rgb(236,90,42)" fg:x="174923994" fg:w="2479657"/><text x="70.2864%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,479,657 samples, 0.99%)</title><rect x="70.0364%" y="2965" width="0.9928%" height="15" fill="rgb(249,57,21)" fg:x="174923994" fg:w="2479657"/><text x="70.2864%" y="2975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,479,657 samples, 0.99%)</title><rect x="70.0364%" y="2949" width="0.9928%" height="15" fill="rgb(243,12,36)" fg:x="174923994" fg:w="2479657"/><text x="70.2864%" y="2959.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,479,657 samples, 0.99%)</title><rect x="70.0364%" y="2933" width="0.9928%" height="15" fill="rgb(253,128,47)" fg:x="174923994" fg:w="2479657"/><text x="70.2864%" y="2943.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,479,657 samples, 0.99%)</title><rect x="70.0364%" y="2917" width="0.9928%" height="15" fill="rgb(207,33,20)" fg:x="174923994" fg:w="2479657"/><text x="70.2864%" y="2927.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,148,426 samples, 0.46%)</title><rect x="70.5694%" y="2901" width="0.4598%" height="15" fill="rgb(233,215,35)" fg:x="176255225" fg:w="1148426"/><text x="70.8194%" y="2911.50"></text></g><g><title>hashbrown::raw::RawTableInner::allocation_info (1,148,426 samples, 0.46%)</title><rect x="70.5694%" y="2885" width="0.4598%" height="15" fill="rgb(249,188,52)" fg:x="176255225" fg:w="1148426"/><text x="70.8194%" y="2895.50"></text></g><g><title>hashbrown::raw::RawTableInner::buckets (1,148,426 samples, 0.46%)</title><rect x="70.5694%" y="2869" width="0.4598%" height="15" fill="rgb(225,12,32)" fg:x="176255225" fg:w="1148426"/><text x="70.8194%" y="2879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40,489,963 samples, 16.21%)</title><rect x="60.1057%" y="3173" width="16.2114%" height="15" fill="rgb(247,98,14)" fg:x="150121065" fg:w="40489963"/><text x="60.3557%" y="3183.50">&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (40,489,963 samples, 16.21%)</title><rect x="60.1057%" y="3157" width="16.2114%" height="15" fill="rgb(247,219,48)" fg:x="150121065" fg:w="40489963"/><text x="60.3557%" y="3167.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (40,489,963 samples, 16.21%)</title><rect x="60.1057%" y="3141" width="16.2114%" height="15" fill="rgb(253,60,48)" fg:x="150121065" fg:w="40489963"/><text x="60.3557%" y="3151.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (40,489,963 samples, 16.21%)</title><rect x="60.1057%" y="3125" width="16.2114%" height="15" fill="rgb(245,15,52)" fg:x="150121065" fg:w="40489963"/><text x="60.3557%" y="3135.50">core::ptr::drop_in_place&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40,489,963 samples, 16.21%)</title><rect x="60.1057%" y="3109" width="16.2114%" height="15" fill="rgb(220,133,28)" fg:x="150121065" fg:w="40489963"/><text x="60.3557%" y="3119.50">&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (40,489,963 samples, 16.21%)</title><rect x="60.1057%" y="3093" width="16.2114%" height="15" fill="rgb(217,180,4)" fg:x="150121065" fg:w="40489963"/><text x="60.3557%" y="3103.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (40,489,963 samples, 16.21%)</title><rect x="60.1057%" y="3077" width="16.2114%" height="15" fill="rgb(251,24,1)" fg:x="150121065" fg:w="40489963"/><text x="60.3557%" y="3087.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (40,489,963 samples, 16.21%)</title><rect x="60.1057%" y="3061" width="16.2114%" height="15" fill="rgb(212,185,49)" fg:x="150121065" fg:w="40489963"/><text x="60.3557%" y="3071.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,207,377 samples, 5.29%)</title><rect x="71.0292%" y="3045" width="5.2880%" height="15" fill="rgb(215,175,22)" fg:x="177403651" fg:w="13207377"/><text x="71.2792%" y="3055.50">core::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,207,377 samples, 5.29%)</title><rect x="71.0292%" y="3029" width="5.2880%" height="15" fill="rgb(250,205,14)" fg:x="177403651" fg:w="13207377"/><text x="71.2792%" y="3039.50">&lt;alloc..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (13,207,377 samples, 5.29%)</title><rect x="71.0292%" y="3013" width="5.2880%" height="15" fill="rgb(225,211,22)" fg:x="177403651" fg:w="13207377"/><text x="71.2792%" y="3023.50">alloc:..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13,207,377 samples, 5.29%)</title><rect x="71.0292%" y="2997" width="5.2880%" height="15" fill="rgb(251,179,42)" fg:x="177403651" fg:w="13207377"/><text x="71.2792%" y="3007.50">&lt;alloc..</text></g><g><title>alloc::alloc::dealloc (13,207,377 samples, 5.29%)</title><rect x="71.0292%" y="2981" width="5.2880%" height="15" fill="rgb(208,216,51)" fg:x="177403651" fg:w="13207377"/><text x="71.2792%" y="2991.50">alloc:..</text></g><g><title>cfree (13,207,377 samples, 5.29%)</title><rect x="71.0292%" y="2965" width="5.2880%" height="15" fill="rgb(235,36,11)" fg:x="177403651" fg:w="13207377"/><text x="71.2792%" y="2975.50">cfree</text></g><g><title>[libc.so.6] (13,207,377 samples, 5.29%)</title><rect x="71.0292%" y="2949" width="5.2880%" height="15" fill="rgb(213,189,28)" fg:x="177403651" fg:w="13207377"/><text x="71.2792%" y="2959.50">[libc...</text></g><g><title>[libc.so.6] (13,207,377 samples, 5.29%)</title><rect x="71.0292%" y="2933" width="5.2880%" height="15" fill="rgb(227,203,42)" fg:x="177403651" fg:w="13207377"/><text x="71.2792%" y="2943.50">[libc...</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (44,398,254 samples, 17.78%)</title><rect x="59.6014%" y="3397" width="17.7762%" height="15" fill="rgb(244,72,36)" fg:x="148861572" fg:w="44398254"/><text x="59.8514%" y="3407.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (44,398,254 samples, 17.78%)</title><rect x="59.6014%" y="3381" width="17.7762%" height="15" fill="rgb(213,53,17)" fg:x="148861572" fg:w="44398254"/><text x="59.8514%" y="3391.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44,398,254 samples, 17.78%)</title><rect x="59.6014%" y="3365" width="17.7762%" height="15" fill="rgb(207,167,3)" fg:x="148861572" fg:w="44398254"/><text x="59.8514%" y="3375.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (44,398,254 samples, 17.78%)</title><rect x="59.6014%" y="3349" width="17.7762%" height="15" fill="rgb(216,98,30)" fg:x="148861572" fg:w="44398254"/><text x="59.8514%" y="3359.50">core::ptr::drop_in_place&lt;[cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (44,398,254 samples, 17.78%)</title><rect x="59.6014%" y="3333" width="17.7762%" height="15" fill="rgb(236,123,15)" fg:x="148861572" fg:w="44398254"/><text x="59.8514%" y="3343.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (44,398,254 samples, 17.78%)</title><rect x="59.6014%" y="3317" width="17.7762%" height="15" fill="rgb(248,81,50)" fg:x="148861572" fg:w="44398254"/><text x="59.8514%" y="3327.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44,398,254 samples, 17.78%)</title><rect x="59.6014%" y="3301" width="17.7762%" height="15" fill="rgb(214,120,4)" fg:x="148861572" fg:w="44398254"/><text x="59.8514%" y="3311.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (44,398,254 samples, 17.78%)</title><rect x="59.6014%" y="3285" width="17.7762%" height="15" fill="rgb(208,179,34)" fg:x="148861572" fg:w="44398254"/><text x="59.8514%" y="3295.50">core::ptr::drop_in_place&lt;[cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (44,398,254 samples, 17.78%)</title><rect x="59.6014%" y="3269" width="17.7762%" height="15" fill="rgb(227,140,7)" fg:x="148861572" fg:w="44398254"/><text x="59.8514%" y="3279.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (44,398,254 samples, 17.78%)</title><rect x="59.6014%" y="3253" width="17.7762%" height="15" fill="rgb(214,22,6)" fg:x="148861572" fg:w="44398254"/><text x="59.8514%" y="3263.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44,398,254 samples, 17.78%)</title><rect x="59.6014%" y="3237" width="17.7762%" height="15" fill="rgb(207,137,27)" fg:x="148861572" fg:w="44398254"/><text x="59.8514%" y="3247.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (44,398,254 samples, 17.78%)</title><rect x="59.6014%" y="3221" width="17.7762%" height="15" fill="rgb(210,8,46)" fg:x="148861572" fg:w="44398254"/><text x="59.8514%" y="3231.50">core::ptr::drop_in_place&lt;[cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (44,398,254 samples, 17.78%)</title><rect x="59.6014%" y="3205" width="17.7762%" height="15" fill="rgb(240,16,54)" fg:x="148861572" fg:w="44398254"/><text x="59.8514%" y="3215.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (43,138,761 samples, 17.27%)</title><rect x="60.1057%" y="3189" width="17.2720%" height="15" fill="rgb(211,209,29)" fg:x="150121065" fg:w="43138761"/><text x="60.3557%" y="3199.50">core::ptr::drop_in_place&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,648,798 samples, 1.06%)</title><rect x="76.3172%" y="3173" width="1.0605%" height="15" fill="rgb(226,228,24)" fg:x="190611028" fg:w="2648798"/><text x="76.5672%" y="3183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,648,798 samples, 1.06%)</title><rect x="76.3172%" y="3157" width="1.0605%" height="15" fill="rgb(222,84,9)" fg:x="190611028" fg:w="2648798"/><text x="76.5672%" y="3167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,648,798 samples, 1.06%)</title><rect x="76.3172%" y="3141" width="1.0605%" height="15" fill="rgb(234,203,30)" fg:x="190611028" fg:w="2648798"/><text x="76.5672%" y="3151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,648,798 samples, 1.06%)</title><rect x="76.3172%" y="3125" width="1.0605%" height="15" fill="rgb(238,109,14)" fg:x="190611028" fg:w="2648798"/><text x="76.5672%" y="3135.50"></text></g><g><title>alloc::alloc::dealloc (2,648,798 samples, 1.06%)</title><rect x="76.3172%" y="3109" width="1.0605%" height="15" fill="rgb(233,206,34)" fg:x="190611028" fg:w="2648798"/><text x="76.5672%" y="3119.50"></text></g><g><title>cfree (2,648,798 samples, 1.06%)</title><rect x="76.3172%" y="3093" width="1.0605%" height="15" fill="rgb(220,167,47)" fg:x="190611028" fg:w="2648798"/><text x="76.5672%" y="3103.50"></text></g><g><title>[libc.so.6] (2,648,798 samples, 1.06%)</title><rect x="76.3172%" y="3077" width="1.0605%" height="15" fill="rgb(238,105,10)" fg:x="190611028" fg:w="2648798"/><text x="76.5672%" y="3087.50"></text></g><g><title>[libc.so.6] (2,648,798 samples, 1.06%)</title><rect x="76.3172%" y="3061" width="1.0605%" height="15" fill="rgb(213,227,17)" fg:x="190611028" fg:w="2648798"/><text x="76.5672%" y="3071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,328,867 samples, 0.53%)</title><rect x="77.3777%" y="3349" width="0.5321%" height="15" fill="rgb(217,132,38)" fg:x="193259826" fg:w="1328867"/><text x="77.6277%" y="3359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,328,867 samples, 0.53%)</title><rect x="77.3777%" y="3333" width="0.5321%" height="15" fill="rgb(242,146,4)" fg:x="193259826" fg:w="1328867"/><text x="77.6277%" y="3343.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,304,997 samples, 0.52%)</title><rect x="77.9097%" y="3349" width="0.5225%" height="15" fill="rgb(212,61,9)" fg:x="194588693" fg:w="1304997"/><text x="78.1597%" y="3359.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1,304,997 samples, 0.52%)</title><rect x="77.9097%" y="3333" width="0.5225%" height="15" fill="rgb(247,126,22)" fg:x="194588693" fg:w="1304997"/><text x="78.1597%" y="3343.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1,304,997 samples, 0.52%)</title><rect x="77.9097%" y="3317" width="0.5225%" height="15" fill="rgb(220,196,2)" fg:x="194588693" fg:w="1304997"/><text x="78.1597%" y="3327.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1,304,997 samples, 0.52%)</title><rect x="77.9097%" y="3301" width="0.5225%" height="15" fill="rgb(208,46,4)" fg:x="194588693" fg:w="1304997"/><text x="78.1597%" y="3311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,289,436 samples, 0.52%)</title><rect x="78.9335%" y="3269" width="0.5163%" height="15" fill="rgb(252,104,46)" fg:x="197145581" fg:w="1289436"/><text x="79.1835%" y="3279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,289,436 samples, 0.52%)</title><rect x="78.9335%" y="3253" width="0.5163%" height="15" fill="rgb(237,152,48)" fg:x="197145581" fg:w="1289436"/><text x="79.1835%" y="3263.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,290,332 samples, 0.52%)</title><rect x="79.4497%" y="3237" width="0.5166%" height="15" fill="rgb(221,59,37)" fg:x="198435017" fg:w="1290332"/><text x="79.6997%" y="3247.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,265,692 samples, 0.51%)</title><rect x="79.9664%" y="3189" width="0.5068%" height="15" fill="rgb(209,202,51)" fg:x="199725349" fg:w="1265692"/><text x="80.2164%" y="3199.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,265,692 samples, 0.51%)</title><rect x="79.9664%" y="3173" width="0.5068%" height="15" fill="rgb(228,81,30)" fg:x="199725349" fg:w="1265692"/><text x="80.2164%" y="3183.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (153,884,163 samples, 61.61%)</title><rect x="19.3774%" y="3413" width="61.6124%" height="15" fill="rgb(227,42,39)" fg:x="48397204" fg:w="153884163"/><text x="19.6274%" y="3423.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (9,021,541 samples, 3.61%)</title><rect x="77.3777%" y="3397" width="3.6121%" height="15" fill="rgb(221,26,2)" fg:x="193259826" fg:w="9021541"/><text x="77.6277%" y="3407.50">css_..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (9,021,541 samples, 3.61%)</title><rect x="77.3777%" y="3381" width="3.6121%" height="15" fill="rgb(254,61,31)" fg:x="193259826" fg:w="9021541"/><text x="77.6277%" y="3391.50">css_..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (9,021,541 samples, 3.61%)</title><rect x="77.3777%" y="3365" width="3.6121%" height="15" fill="rgb(222,173,38)" fg:x="193259826" fg:w="9021541"/><text x="77.6277%" y="3375.50">css_..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,387,677 samples, 2.56%)</title><rect x="78.4322%" y="3349" width="2.5575%" height="15" fill="rgb(218,50,12)" fg:x="195893690" fg:w="6387677"/><text x="78.6822%" y="3359.50">cs..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,387,677 samples, 2.56%)</title><rect x="78.4322%" y="3333" width="2.5575%" height="15" fill="rgb(223,88,40)" fg:x="195893690" fg:w="6387677"/><text x="78.6822%" y="3343.50">cs..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,387,677 samples, 2.56%)</title><rect x="78.4322%" y="3317" width="2.5575%" height="15" fill="rgb(237,54,19)" fg:x="195893690" fg:w="6387677"/><text x="78.6822%" y="3327.50">cs..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (5,135,786 samples, 2.06%)</title><rect x="78.9335%" y="3301" width="2.0563%" height="15" fill="rgb(251,129,25)" fg:x="197145581" fg:w="5135786"/><text x="79.1835%" y="3311.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (5,135,786 samples, 2.06%)</title><rect x="78.9335%" y="3285" width="2.0563%" height="15" fill="rgb(238,97,19)" fg:x="197145581" fg:w="5135786"/><text x="79.1835%" y="3295.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,846,350 samples, 1.54%)</title><rect x="79.4497%" y="3269" width="1.5400%" height="15" fill="rgb(240,169,18)" fg:x="198435017" fg:w="3846350"/><text x="79.6997%" y="3279.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,846,350 samples, 1.54%)</title><rect x="79.4497%" y="3253" width="1.5400%" height="15" fill="rgb(230,187,49)" fg:x="198435017" fg:w="3846350"/><text x="79.6997%" y="3263.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,556,018 samples, 1.02%)</title><rect x="79.9664%" y="3237" width="1.0234%" height="15" fill="rgb(209,44,26)" fg:x="199725349" fg:w="2556018"/><text x="80.2164%" y="3247.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,556,018 samples, 1.02%)</title><rect x="79.9664%" y="3221" width="1.0234%" height="15" fill="rgb(244,0,6)" fg:x="199725349" fg:w="2556018"/><text x="80.2164%" y="3231.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,556,018 samples, 1.02%)</title><rect x="79.9664%" y="3205" width="1.0234%" height="15" fill="rgb(248,18,21)" fg:x="199725349" fg:w="2556018"/><text x="80.2164%" y="3215.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,290,326 samples, 0.52%)</title><rect x="80.4731%" y="3189" width="0.5166%" height="15" fill="rgb(245,180,19)" fg:x="200991041" fg:w="1290326"/><text x="80.7231%" y="3199.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,290,326 samples, 0.52%)</title><rect x="80.4731%" y="3173" width="0.5166%" height="15" fill="rgb(252,118,36)" fg:x="200991041" fg:w="1290326"/><text x="80.7231%" y="3183.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,290,326 samples, 0.52%)</title><rect x="80.4731%" y="3157" width="0.5166%" height="15" fill="rgb(210,224,19)" fg:x="200991041" fg:w="1290326"/><text x="80.7231%" y="3167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,290,326 samples, 0.52%)</title><rect x="80.4731%" y="3141" width="0.5166%" height="15" fill="rgb(218,30,24)" fg:x="200991041" fg:w="1290326"/><text x="80.7231%" y="3151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,290,326 samples, 0.52%)</title><rect x="80.4731%" y="3125" width="0.5166%" height="15" fill="rgb(219,75,50)" fg:x="200991041" fg:w="1290326"/><text x="80.7231%" y="3135.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3397" width="0.4232%" height="15" fill="rgb(234,72,50)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3407.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3381" width="0.4232%" height="15" fill="rgb(219,100,48)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3365" width="0.4232%" height="15" fill="rgb(253,5,41)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3375.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3349" width="0.4232%" height="15" fill="rgb(247,181,11)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3359.50"></text></g><g><title>core::mem::drop (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3333" width="0.4232%" height="15" fill="rgb(222,223,25)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3317" width="0.4232%" height="15" fill="rgb(214,198,28)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3327.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3301" width="0.4232%" height="15" fill="rgb(230,46,43)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3311.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3285" width="0.4232%" height="15" fill="rgb(233,65,53)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3269" width="0.4232%" height="15" fill="rgb(221,121,27)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3279.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3253" width="0.4232%" height="15" fill="rgb(247,70,47)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3263.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3237" width="0.4232%" height="15" fill="rgb(228,85,35)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3221" width="0.4232%" height="15" fill="rgb(209,50,18)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3231.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3205" width="0.4232%" height="15" fill="rgb(250,19,35)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3189" width="0.4232%" height="15" fill="rgb(253,107,29)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3199.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3173" width="0.4232%" height="15" fill="rgb(252,179,29)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3183.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,056,991 samples, 0.42%)</title><rect x="80.9898%" y="3157" width="0.4232%" height="15" fill="rgb(238,194,6)" fg:x="202281367" fg:w="1056991"/><text x="81.2398%" y="3167.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="3173" width="0.4007%" height="15" fill="rgb(238,164,29)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="3183.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="3157" width="0.4007%" height="15" fill="rgb(224,25,9)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="3167.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="3141" width="0.4007%" height="15" fill="rgb(244,153,23)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="3151.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="3125" width="0.4007%" height="15" fill="rgb(212,203,14)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="3135.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="3109" width="0.4007%" height="15" fill="rgb(220,164,20)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="3119.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="3093" width="0.4007%" height="15" fill="rgb(222,203,48)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="3103.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="3077" width="0.4007%" height="15" fill="rgb(215,159,22)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="3087.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="3061" width="0.4007%" height="15" fill="rgb(216,183,47)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="3071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="3045" width="0.4007%" height="15" fill="rgb(229,195,25)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="3055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="3029" width="0.4007%" height="15" fill="rgb(224,132,51)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="3039.50"></text></g><g><title>alloc::slice::hack::to_vec (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="3013" width="0.4007%" height="15" fill="rgb(240,63,7)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="3023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="2997" width="0.4007%" height="15" fill="rgb(249,182,41)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="3007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="2981" width="0.4007%" height="15" fill="rgb(243,47,26)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="2991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="2965" width="0.4007%" height="15" fill="rgb(233,48,2)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="2975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="2949" width="0.4007%" height="15" fill="rgb(244,165,34)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="2959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="2933" width="0.4007%" height="15" fill="rgb(207,89,7)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="2943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="2917" width="0.4007%" height="15" fill="rgb(244,117,36)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="2927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="2901" width="0.4007%" height="15" fill="rgb(226,144,34)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="2911.50"></text></g><g><title>alloc::alloc::alloc (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="2885" width="0.4007%" height="15" fill="rgb(213,23,19)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="2895.50"></text></g><g><title>malloc (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="2869" width="0.4007%" height="15" fill="rgb(217,75,12)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="2879.50"></text></g><g><title>[libc.so.6] (1,000,717 samples, 0.40%)</title><rect x="81.8053%" y="2853" width="0.4007%" height="15" fill="rgb(224,159,17)" fg:x="204318404" fg:w="1000717"/><text x="82.0553%" y="2863.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (873,146 samples, 0.35%)</title><rect x="82.2060%" y="3109" width="0.3496%" height="15" fill="rgb(217,118,1)" fg:x="205319121" fg:w="873146"/><text x="82.4560%" y="3119.50"></text></g><g><title>serde::de::MapAccess::next_entry (873,146 samples, 0.35%)</title><rect x="82.2060%" y="3093" width="0.3496%" height="15" fill="rgb(232,180,48)" fg:x="205319121" fg:w="873146"/><text x="82.4560%" y="3103.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (873,146 samples, 0.35%)</title><rect x="82.2060%" y="3077" width="0.3496%" height="15" fill="rgb(230,27,33)" fg:x="205319121" fg:w="873146"/><text x="82.4560%" y="3087.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (873,146 samples, 0.35%)</title><rect x="82.2060%" y="3061" width="0.3496%" height="15" fill="rgb(205,31,21)" fg:x="205319121" fg:w="873146"/><text x="82.4560%" y="3071.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (873,146 samples, 0.35%)</title><rect x="82.2060%" y="3045" width="0.3496%" height="15" fill="rgb(253,59,4)" fg:x="205319121" fg:w="873146"/><text x="82.4560%" y="3055.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (873,146 samples, 0.35%)</title><rect x="82.2060%" y="3029" width="0.3496%" height="15" fill="rgb(224,201,9)" fg:x="205319121" fg:w="873146"/><text x="82.4560%" y="3039.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (873,146 samples, 0.35%)</title><rect x="82.2060%" y="3013" width="0.3496%" height="15" fill="rgb(229,206,30)" fg:x="205319121" fg:w="873146"/><text x="82.4560%" y="3023.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (916,850 samples, 0.37%)</title><rect x="82.8121%" y="2901" width="0.3671%" height="15" fill="rgb(212,67,47)" fg:x="206832836" fg:w="916850"/><text x="83.0621%" y="2911.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (916,850 samples, 0.37%)</title><rect x="82.8121%" y="2885" width="0.3671%" height="15" fill="rgb(211,96,50)" fg:x="206832836" fg:w="916850"/><text x="83.0621%" y="2895.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (404,313 samples, 0.16%)</title><rect x="83.0173%" y="2869" width="0.1619%" height="15" fill="rgb(252,114,18)" fg:x="207345373" fg:w="404313"/><text x="83.2673%" y="2879.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (943,669 samples, 0.38%)</title><rect x="83.1792%" y="2901" width="0.3778%" height="15" fill="rgb(223,58,37)" fg:x="207749686" fg:w="943669"/><text x="83.4292%" y="2911.50"></text></g><g><title>serde::de::MapAccess::next_entry (943,669 samples, 0.38%)</title><rect x="83.1792%" y="2885" width="0.3778%" height="15" fill="rgb(237,70,4)" fg:x="207749686" fg:w="943669"/><text x="83.4292%" y="2895.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (943,669 samples, 0.38%)</title><rect x="83.1792%" y="2869" width="0.3778%" height="15" fill="rgb(244,85,46)" fg:x="207749686" fg:w="943669"/><text x="83.4292%" y="2879.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (943,669 samples, 0.38%)</title><rect x="83.1792%" y="2853" width="0.3778%" height="15" fill="rgb(223,39,52)" fg:x="207749686" fg:w="943669"/><text x="83.4292%" y="2863.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (943,669 samples, 0.38%)</title><rect x="83.1792%" y="2837" width="0.3778%" height="15" fill="rgb(218,200,14)" fg:x="207749686" fg:w="943669"/><text x="83.4292%" y="2847.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (943,669 samples, 0.38%)</title><rect x="83.1792%" y="2821" width="0.3778%" height="15" fill="rgb(208,171,16)" fg:x="207749686" fg:w="943669"/><text x="83.4292%" y="2831.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (943,669 samples, 0.38%)</title><rect x="83.1792%" y="2805" width="0.3778%" height="15" fill="rgb(234,200,18)" fg:x="207749686" fg:w="943669"/><text x="83.4292%" y="2815.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (943,669 samples, 0.38%)</title><rect x="83.1792%" y="2789" width="0.3778%" height="15" fill="rgb(228,45,11)" fg:x="207749686" fg:w="943669"/><text x="83.4292%" y="2799.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (943,669 samples, 0.38%)</title><rect x="83.1792%" y="2773" width="0.3778%" height="15" fill="rgb(237,182,11)" fg:x="207749686" fg:w="943669"/><text x="83.4292%" y="2783.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (943,669 samples, 0.38%)</title><rect x="83.1792%" y="2757" width="0.3778%" height="15" fill="rgb(241,175,49)" fg:x="207749686" fg:w="943669"/><text x="83.4292%" y="2767.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (943,669 samples, 0.38%)</title><rect x="83.1792%" y="2741" width="0.3778%" height="15" fill="rgb(247,38,35)" fg:x="207749686" fg:w="943669"/><text x="83.4292%" y="2751.50"></text></g><g><title>serde_json::read::is_escape (943,669 samples, 0.38%)</title><rect x="83.1792%" y="2725" width="0.3778%" height="15" fill="rgb(228,39,49)" fg:x="207749686" fg:w="943669"/><text x="83.4292%" y="2735.50"></text></g><g><title>serde::de::MapAccess::next_entry (752,174 samples, 0.30%)</title><rect x="84.2569%" y="2165" width="0.3012%" height="15" fill="rgb(226,101,26)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="2175.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (752,174 samples, 0.30%)</title><rect x="84.2569%" y="2149" width="0.3012%" height="15" fill="rgb(206,141,19)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="2159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (752,174 samples, 0.30%)</title><rect x="84.2569%" y="2133" width="0.3012%" height="15" fill="rgb(211,200,13)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="2143.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (752,174 samples, 0.30%)</title><rect x="84.2569%" y="2117" width="0.3012%" height="15" fill="rgb(241,121,6)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="2127.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (752,174 samples, 0.30%)</title><rect x="84.2569%" y="2101" width="0.3012%" height="15" fill="rgb(234,221,29)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="2111.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (752,174 samples, 0.30%)</title><rect x="84.2569%" y="2085" width="0.3012%" height="15" fill="rgb(229,136,5)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="2095.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (752,174 samples, 0.30%)</title><rect x="84.2569%" y="2069" width="0.3012%" height="15" fill="rgb(238,36,11)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="2079.50"></text></g><g><title>serde::de::SeqAccess::next_element (752,174 samples, 0.30%)</title><rect x="84.2569%" y="2053" width="0.3012%" height="15" fill="rgb(251,55,41)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="2063.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (752,174 samples, 0.30%)</title><rect x="84.2569%" y="2037" width="0.3012%" height="15" fill="rgb(242,34,40)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="2047.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (752,174 samples, 0.30%)</title><rect x="84.2569%" y="2021" width="0.3012%" height="15" fill="rgb(215,42,17)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="2031.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (752,174 samples, 0.30%)</title><rect x="84.2569%" y="2005" width="0.3012%" height="15" fill="rgb(207,44,46)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="2015.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (752,174 samples, 0.30%)</title><rect x="84.2569%" y="1989" width="0.3012%" height="15" fill="rgb(211,206,28)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="1999.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (752,174 samples, 0.30%)</title><rect x="84.2569%" y="1973" width="0.3012%" height="15" fill="rgb(237,167,16)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="1983.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (752,174 samples, 0.30%)</title><rect x="84.2569%" y="1957" width="0.3012%" height="15" fill="rgb(233,66,6)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="1967.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (752,174 samples, 0.30%)</title><rect x="84.2569%" y="1941" width="0.3012%" height="15" fill="rgb(246,123,29)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="1951.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (752,174 samples, 0.30%)</title><rect x="84.2569%" y="1925" width="0.3012%" height="15" fill="rgb(209,62,40)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="1935.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (752,174 samples, 0.30%)</title><rect x="84.2569%" y="1909" width="0.3012%" height="15" fill="rgb(218,4,25)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="1919.50"></text></g><g><title>malloc (752,174 samples, 0.30%)</title><rect x="84.2569%" y="1893" width="0.3012%" height="15" fill="rgb(253,91,49)" fg:x="210441379" fg:w="752174"/><text x="84.5069%" y="1903.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,025,974 samples, 0.41%)</title><rect x="84.5580%" y="2133" width="0.4108%" height="15" fill="rgb(228,155,29)" fg:x="211193553" fg:w="1025974"/><text x="84.8080%" y="2143.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,025,974 samples, 0.41%)</title><rect x="84.5580%" y="2117" width="0.4108%" height="15" fill="rgb(243,57,37)" fg:x="211193553" fg:w="1025974"/><text x="84.8080%" y="2127.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,025,974 samples, 0.41%)</title><rect x="84.5580%" y="2101" width="0.4108%" height="15" fill="rgb(244,167,17)" fg:x="211193553" fg:w="1025974"/><text x="84.8080%" y="2111.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,025,974 samples, 0.41%)</title><rect x="84.5580%" y="2085" width="0.4108%" height="15" fill="rgb(207,181,38)" fg:x="211193553" fg:w="1025974"/><text x="84.8080%" y="2095.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (1,025,974 samples, 0.41%)</title><rect x="84.5580%" y="2069" width="0.4108%" height="15" fill="rgb(211,8,23)" fg:x="211193553" fg:w="1025974"/><text x="84.8080%" y="2079.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (1,025,974 samples, 0.41%)</title><rect x="84.5580%" y="2053" width="0.4108%" height="15" fill="rgb(235,11,44)" fg:x="211193553" fg:w="1025974"/><text x="84.8080%" y="2063.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,025,974 samples, 0.41%)</title><rect x="84.5580%" y="2037" width="0.4108%" height="15" fill="rgb(248,18,52)" fg:x="211193553" fg:w="1025974"/><text x="84.8080%" y="2047.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,025,974 samples, 0.41%)</title><rect x="84.5580%" y="2021" width="0.4108%" height="15" fill="rgb(208,4,7)" fg:x="211193553" fg:w="1025974"/><text x="84.8080%" y="2031.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,300,302 samples, 1.72%)</title><rect x="84.2569%" y="2325" width="1.7218%" height="15" fill="rgb(240,17,39)" fg:x="210441379" fg:w="4300302"/><text x="84.5069%" y="2335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,300,302 samples, 1.72%)</title><rect x="84.2569%" y="2309" width="1.7218%" height="15" fill="rgb(207,170,3)" fg:x="210441379" fg:w="4300302"/><text x="84.5069%" y="2319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,300,302 samples, 1.72%)</title><rect x="84.2569%" y="2293" width="1.7218%" height="15" fill="rgb(236,100,52)" fg:x="210441379" fg:w="4300302"/><text x="84.5069%" y="2303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,300,302 samples, 1.72%)</title><rect x="84.2569%" y="2277" width="1.7218%" height="15" fill="rgb(246,78,51)" fg:x="210441379" fg:w="4300302"/><text x="84.5069%" y="2287.50"></text></g><g><title>serde::de::SeqAccess::next_element (4,300,302 samples, 1.72%)</title><rect x="84.2569%" y="2261" width="1.7218%" height="15" fill="rgb(211,17,15)" fg:x="210441379" fg:w="4300302"/><text x="84.5069%" y="2271.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,300,302 samples, 1.72%)</title><rect x="84.2569%" y="2245" width="1.7218%" height="15" fill="rgb(209,59,46)" fg:x="210441379" fg:w="4300302"/><text x="84.5069%" y="2255.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,300,302 samples, 1.72%)</title><rect x="84.2569%" y="2229" width="1.7218%" height="15" fill="rgb(210,92,25)" fg:x="210441379" fg:w="4300302"/><text x="84.5069%" y="2239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,300,302 samples, 1.72%)</title><rect x="84.2569%" y="2213" width="1.7218%" height="15" fill="rgb(238,174,52)" fg:x="210441379" fg:w="4300302"/><text x="84.5069%" y="2223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,300,302 samples, 1.72%)</title><rect x="84.2569%" y="2197" width="1.7218%" height="15" fill="rgb(230,73,7)" fg:x="210441379" fg:w="4300302"/><text x="84.5069%" y="2207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,300,302 samples, 1.72%)</title><rect x="84.2569%" y="2181" width="1.7218%" height="15" fill="rgb(243,124,40)" fg:x="210441379" fg:w="4300302"/><text x="84.5069%" y="2191.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (3,548,128 samples, 1.42%)</title><rect x="84.5580%" y="2165" width="1.4206%" height="15" fill="rgb(244,170,11)" fg:x="211193553" fg:w="3548128"/><text x="84.8080%" y="2175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3,548,128 samples, 1.42%)</title><rect x="84.5580%" y="2149" width="1.4206%" height="15" fill="rgb(207,114,54)" fg:x="211193553" fg:w="3548128"/><text x="84.8080%" y="2159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2,522,154 samples, 1.01%)</title><rect x="84.9688%" y="2133" width="1.0098%" height="15" fill="rgb(205,42,20)" fg:x="212219527" fg:w="2522154"/><text x="85.2188%" y="2143.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (2,522,154 samples, 1.01%)</title><rect x="84.9688%" y="2117" width="1.0098%" height="15" fill="rgb(230,30,28)" fg:x="212219527" fg:w="2522154"/><text x="85.2188%" y="2127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,112,183 samples, 2.45%)</title><rect x="83.9105%" y="2485" width="2.4472%" height="15" fill="rgb(205,73,54)" fg:x="209576388" fg:w="6112183"/><text x="84.1605%" y="2495.50">&lt;s..</text></g><g><title>serde::de::SeqAccess::next_element (5,247,192 samples, 2.10%)</title><rect x="84.2569%" y="2469" width="2.1009%" height="15" fill="rgb(254,227,23)" fg:x="210441379" fg:w="5247192"/><text x="84.5069%" y="2479.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,247,192 samples, 2.10%)</title><rect x="84.2569%" y="2453" width="2.1009%" height="15" fill="rgb(228,202,34)" fg:x="210441379" fg:w="5247192"/><text x="84.5069%" y="2463.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,247,192 samples, 2.10%)</title><rect x="84.2569%" y="2437" width="2.1009%" height="15" fill="rgb(222,225,37)" fg:x="210441379" fg:w="5247192"/><text x="84.5069%" y="2447.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,247,192 samples, 2.10%)</title><rect x="84.2569%" y="2421" width="2.1009%" height="15" fill="rgb(221,14,54)" fg:x="210441379" fg:w="5247192"/><text x="84.5069%" y="2431.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,247,192 samples, 2.10%)</title><rect x="84.2569%" y="2405" width="2.1009%" height="15" fill="rgb(254,102,2)" fg:x="210441379" fg:w="5247192"/><text x="84.5069%" y="2415.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,247,192 samples, 2.10%)</title><rect x="84.2569%" y="2389" width="2.1009%" height="15" fill="rgb(232,104,17)" fg:x="210441379" fg:w="5247192"/><text x="84.5069%" y="2399.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (5,247,192 samples, 2.10%)</title><rect x="84.2569%" y="2373" width="2.1009%" height="15" fill="rgb(250,220,14)" fg:x="210441379" fg:w="5247192"/><text x="84.5069%" y="2383.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (5,247,192 samples, 2.10%)</title><rect x="84.2569%" y="2357" width="2.1009%" height="15" fill="rgb(241,158,9)" fg:x="210441379" fg:w="5247192"/><text x="84.5069%" y="2367.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,247,192 samples, 2.10%)</title><rect x="84.2569%" y="2341" width="2.1009%" height="15" fill="rgb(246,9,43)" fg:x="210441379" fg:w="5247192"/><text x="84.5069%" y="2351.50">&lt;..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (946,890 samples, 0.38%)</title><rect x="85.9786%" y="2325" width="0.3791%" height="15" fill="rgb(206,73,33)" fg:x="214741681" fg:w="946890"/><text x="86.2286%" y="2335.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (946,890 samples, 0.38%)</title><rect x="85.9786%" y="2309" width="0.3791%" height="15" fill="rgb(222,79,8)" fg:x="214741681" fg:w="946890"/><text x="86.2286%" y="2319.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (946,890 samples, 0.38%)</title><rect x="85.9786%" y="2293" width="0.3791%" height="15" fill="rgb(234,8,54)" fg:x="214741681" fg:w="946890"/><text x="86.2286%" y="2303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (946,890 samples, 0.38%)</title><rect x="85.9786%" y="2277" width="0.3791%" height="15" fill="rgb(209,134,38)" fg:x="214741681" fg:w="946890"/><text x="86.2286%" y="2287.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (946,890 samples, 0.38%)</title><rect x="85.9786%" y="2261" width="0.3791%" height="15" fill="rgb(230,127,29)" fg:x="214741681" fg:w="946890"/><text x="86.2286%" y="2271.50"></text></g><g><title>serde::de::MapAccess::next_entry (6,756,638 samples, 2.71%)</title><rect x="83.9105%" y="2581" width="2.7052%" height="15" fill="rgb(242,44,41)" fg:x="209576388" fg:w="6756638"/><text x="84.1605%" y="2591.50">se..</text></g><g><title>serde::de::MapAccess::next_entry_seed (6,756,638 samples, 2.71%)</title><rect x="83.9105%" y="2565" width="2.7052%" height="15" fill="rgb(222,56,43)" fg:x="209576388" fg:w="6756638"/><text x="84.1605%" y="2575.50">se..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,756,638 samples, 2.71%)</title><rect x="83.9105%" y="2549" width="2.7052%" height="15" fill="rgb(238,39,47)" fg:x="209576388" fg:w="6756638"/><text x="84.1605%" y="2559.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,756,638 samples, 2.71%)</title><rect x="83.9105%" y="2533" width="2.7052%" height="15" fill="rgb(226,79,43)" fg:x="209576388" fg:w="6756638"/><text x="84.1605%" y="2543.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,756,638 samples, 2.71%)</title><rect x="83.9105%" y="2517" width="2.7052%" height="15" fill="rgb(242,105,53)" fg:x="209576388" fg:w="6756638"/><text x="84.1605%" y="2527.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,756,638 samples, 2.71%)</title><rect x="83.9105%" y="2501" width="2.7052%" height="15" fill="rgb(251,132,46)" fg:x="209576388" fg:w="6756638"/><text x="84.1605%" y="2511.50">&lt;&amp;..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2485" width="0.2580%" height="15" fill="rgb(231,77,14)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2469" width="0.2580%" height="15" fill="rgb(240,135,9)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2479.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2453" width="0.2580%" height="15" fill="rgb(248,109,14)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2463.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2437" width="0.2580%" height="15" fill="rgb(227,146,52)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2447.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2421" width="0.2580%" height="15" fill="rgb(232,54,3)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2405" width="0.2580%" height="15" fill="rgb(229,201,43)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2389" width="0.2580%" height="15" fill="rgb(252,161,33)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2399.50"></text></g><g><title>alloc::slice::hack::to_vec (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2373" width="0.2580%" height="15" fill="rgb(226,146,40)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2357" width="0.2580%" height="15" fill="rgb(219,47,25)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2341" width="0.2580%" height="15" fill="rgb(250,135,13)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2325" width="0.2580%" height="15" fill="rgb(219,229,18)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2309" width="0.2580%" height="15" fill="rgb(217,152,27)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2293" width="0.2580%" height="15" fill="rgb(225,71,47)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2277" width="0.2580%" height="15" fill="rgb(220,139,14)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2261" width="0.2580%" height="15" fill="rgb(247,54,32)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2271.50"></text></g><g><title>alloc::alloc::alloc (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2245" width="0.2580%" height="15" fill="rgb(252,131,39)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2255.50"></text></g><g><title>malloc (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2229" width="0.2580%" height="15" fill="rgb(210,108,39)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2239.50"></text></g><g><title>[libc.so.6] (644,455 samples, 0.26%)</title><rect x="86.3578%" y="2213" width="0.2580%" height="15" fill="rgb(205,23,29)" fg:x="215688571" fg:w="644455"/><text x="86.6078%" y="2223.50"></text></g><g><title>serde::de::MapAccess::next_entry (8,427,450 samples, 3.37%)</title><rect x="83.5570%" y="2789" width="3.3742%" height="15" fill="rgb(246,139,46)" fg:x="208693355" fg:w="8427450"/><text x="83.8070%" y="2799.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (8,427,450 samples, 3.37%)</title><rect x="83.5570%" y="2773" width="3.3742%" height="15" fill="rgb(250,81,26)" fg:x="208693355" fg:w="8427450"/><text x="83.8070%" y="2783.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (8,427,450 samples, 3.37%)</title><rect x="83.5570%" y="2757" width="3.3742%" height="15" fill="rgb(214,104,7)" fg:x="208693355" fg:w="8427450"/><text x="83.8070%" y="2767.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8,427,450 samples, 3.37%)</title><rect x="83.5570%" y="2741" width="3.3742%" height="15" fill="rgb(233,189,8)" fg:x="208693355" fg:w="8427450"/><text x="83.8070%" y="2751.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8,427,450 samples, 3.37%)</title><rect x="83.5570%" y="2725" width="3.3742%" height="15" fill="rgb(228,141,17)" fg:x="208693355" fg:w="8427450"/><text x="83.8070%" y="2735.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8,427,450 samples, 3.37%)</title><rect x="83.5570%" y="2709" width="3.3742%" height="15" fill="rgb(247,157,1)" fg:x="208693355" fg:w="8427450"/><text x="83.8070%" y="2719.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,544,417 samples, 3.02%)</title><rect x="83.9105%" y="2693" width="3.0206%" height="15" fill="rgb(249,225,5)" fg:x="209576388" fg:w="7544417"/><text x="84.1605%" y="2703.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (7,544,417 samples, 3.02%)</title><rect x="83.9105%" y="2677" width="3.0206%" height="15" fill="rgb(242,55,13)" fg:x="209576388" fg:w="7544417"/><text x="84.1605%" y="2687.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,544,417 samples, 3.02%)</title><rect x="83.9105%" y="2661" width="3.0206%" height="15" fill="rgb(230,49,50)" fg:x="209576388" fg:w="7544417"/><text x="84.1605%" y="2671.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,544,417 samples, 3.02%)</title><rect x="83.9105%" y="2645" width="3.0206%" height="15" fill="rgb(241,111,38)" fg:x="209576388" fg:w="7544417"/><text x="84.1605%" y="2655.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,544,417 samples, 3.02%)</title><rect x="83.9105%" y="2629" width="3.0206%" height="15" fill="rgb(252,155,4)" fg:x="209576388" fg:w="7544417"/><text x="84.1605%" y="2639.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,544,417 samples, 3.02%)</title><rect x="83.9105%" y="2613" width="3.0206%" height="15" fill="rgb(212,69,32)" fg:x="209576388" fg:w="7544417"/><text x="84.1605%" y="2623.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,544,417 samples, 3.02%)</title><rect x="83.9105%" y="2597" width="3.0206%" height="15" fill="rgb(243,107,47)" fg:x="209576388" fg:w="7544417"/><text x="84.1605%" y="2607.50">&lt;se..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (787,779 samples, 0.32%)</title><rect x="86.6158%" y="2581" width="0.3154%" height="15" fill="rgb(247,130,12)" fg:x="216333026" fg:w="787779"/><text x="86.8658%" y="2591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (787,779 samples, 0.32%)</title><rect x="86.6158%" y="2565" width="0.3154%" height="15" fill="rgb(233,74,16)" fg:x="216333026" fg:w="787779"/><text x="86.8658%" y="2575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (787,779 samples, 0.32%)</title><rect x="86.6158%" y="2549" width="0.3154%" height="15" fill="rgb(208,58,18)" fg:x="216333026" fg:w="787779"/><text x="86.8658%" y="2559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (787,779 samples, 0.32%)</title><rect x="86.6158%" y="2533" width="0.3154%" height="15" fill="rgb(242,225,1)" fg:x="216333026" fg:w="787779"/><text x="86.8658%" y="2543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (787,779 samples, 0.32%)</title><rect x="86.6158%" y="2517" width="0.3154%" height="15" fill="rgb(249,39,40)" fg:x="216333026" fg:w="787779"/><text x="86.8658%" y="2527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (787,779 samples, 0.32%)</title><rect x="86.6158%" y="2501" width="0.3154%" height="15" fill="rgb(207,72,44)" fg:x="216333026" fg:w="787779"/><text x="86.8658%" y="2511.50"></text></g><g><title>serde::de::MapAccess::next_entry (11,844,583 samples, 4.74%)</title><rect x="82.5556%" y="2997" width="4.7424%" height="15" fill="rgb(215,193,12)" fg:x="206192267" fg:w="11844583"/><text x="82.8056%" y="3007.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,844,583 samples, 4.74%)</title><rect x="82.5556%" y="2981" width="4.7424%" height="15" fill="rgb(248,41,39)" fg:x="206192267" fg:w="11844583"/><text x="82.8056%" y="2991.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,204,014 samples, 4.49%)</title><rect x="82.8121%" y="2965" width="4.4859%" height="15" fill="rgb(253,85,4)" fg:x="206832836" fg:w="11204014"/><text x="83.0621%" y="2975.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,204,014 samples, 4.49%)</title><rect x="82.8121%" y="2949" width="4.4859%" height="15" fill="rgb(243,70,31)" fg:x="206832836" fg:w="11204014"/><text x="83.0621%" y="2959.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,204,014 samples, 4.49%)</title><rect x="82.8121%" y="2933" width="4.4859%" height="15" fill="rgb(253,195,26)" fg:x="206832836" fg:w="11204014"/><text x="83.0621%" y="2943.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,204,014 samples, 4.49%)</title><rect x="82.8121%" y="2917" width="4.4859%" height="15" fill="rgb(243,42,11)" fg:x="206832836" fg:w="11204014"/><text x="83.0621%" y="2927.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (9,343,495 samples, 3.74%)</title><rect x="83.5570%" y="2901" width="3.7410%" height="15" fill="rgb(239,66,17)" fg:x="208693355" fg:w="9343495"/><text x="83.8070%" y="2911.50">&lt;ser..</text></g><g><title>serde::de::SeqAccess::next_element (9,343,495 samples, 3.74%)</title><rect x="83.5570%" y="2885" width="3.7410%" height="15" fill="rgb(217,132,21)" fg:x="208693355" fg:w="9343495"/><text x="83.8070%" y="2895.50">serd..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,343,495 samples, 3.74%)</title><rect x="83.5570%" y="2869" width="3.7410%" height="15" fill="rgb(252,202,21)" fg:x="208693355" fg:w="9343495"/><text x="83.8070%" y="2879.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,343,495 samples, 3.74%)</title><rect x="83.5570%" y="2853" width="3.7410%" height="15" fill="rgb(233,98,36)" fg:x="208693355" fg:w="9343495"/><text x="83.8070%" y="2863.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,343,495 samples, 3.74%)</title><rect x="83.5570%" y="2837" width="3.7410%" height="15" fill="rgb(216,153,54)" fg:x="208693355" fg:w="9343495"/><text x="83.8070%" y="2847.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,343,495 samples, 3.74%)</title><rect x="83.5570%" y="2821" width="3.7410%" height="15" fill="rgb(250,99,7)" fg:x="208693355" fg:w="9343495"/><text x="83.8070%" y="2831.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,343,495 samples, 3.74%)</title><rect x="83.5570%" y="2805" width="3.7410%" height="15" fill="rgb(207,56,50)" fg:x="208693355" fg:w="9343495"/><text x="83.8070%" y="2815.50">&lt;ser..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (916,045 samples, 0.37%)</title><rect x="86.9312%" y="2789" width="0.3668%" height="15" fill="rgb(244,61,34)" fg:x="217120805" fg:w="916045"/><text x="87.1812%" y="2799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (916,045 samples, 0.37%)</title><rect x="86.9312%" y="2773" width="0.3668%" height="15" fill="rgb(241,50,38)" fg:x="217120805" fg:w="916045"/><text x="87.1812%" y="2783.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (916,045 samples, 0.37%)</title><rect x="86.9312%" y="2757" width="0.3668%" height="15" fill="rgb(212,166,30)" fg:x="217120805" fg:w="916045"/><text x="87.1812%" y="2767.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (916,045 samples, 0.37%)</title><rect x="86.9312%" y="2741" width="0.3668%" height="15" fill="rgb(249,127,32)" fg:x="217120805" fg:w="916045"/><text x="87.1812%" y="2751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (916,045 samples, 0.37%)</title><rect x="86.9312%" y="2725" width="0.3668%" height="15" fill="rgb(209,103,0)" fg:x="217120805" fg:w="916045"/><text x="87.1812%" y="2735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (916,045 samples, 0.37%)</title><rect x="86.9312%" y="2709" width="0.3668%" height="15" fill="rgb(238,209,51)" fg:x="217120805" fg:w="916045"/><text x="87.1812%" y="2719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (916,045 samples, 0.37%)</title><rect x="86.9312%" y="2693" width="0.3668%" height="15" fill="rgb(237,56,23)" fg:x="217120805" fg:w="916045"/><text x="87.1812%" y="2703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12,843,091 samples, 5.14%)</title><rect x="82.5556%" y="3109" width="5.1421%" height="15" fill="rgb(215,153,46)" fg:x="206192267" fg:w="12843091"/><text x="82.8056%" y="3119.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (12,843,091 samples, 5.14%)</title><rect x="82.5556%" y="3093" width="5.1421%" height="15" fill="rgb(224,49,31)" fg:x="206192267" fg:w="12843091"/><text x="82.8056%" y="3103.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12,843,091 samples, 5.14%)</title><rect x="82.5556%" y="3077" width="5.1421%" height="15" fill="rgb(250,18,42)" fg:x="206192267" fg:w="12843091"/><text x="82.8056%" y="3087.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,843,091 samples, 5.14%)</title><rect x="82.5556%" y="3061" width="5.1421%" height="15" fill="rgb(215,176,39)" fg:x="206192267" fg:w="12843091"/><text x="82.8056%" y="3071.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,843,091 samples, 5.14%)</title><rect x="82.5556%" y="3045" width="5.1421%" height="15" fill="rgb(223,77,29)" fg:x="206192267" fg:w="12843091"/><text x="82.8056%" y="3055.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,843,091 samples, 5.14%)</title><rect x="82.5556%" y="3029" width="5.1421%" height="15" fill="rgb(234,94,52)" fg:x="206192267" fg:w="12843091"/><text x="82.8056%" y="3039.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,843,091 samples, 5.14%)</title><rect x="82.5556%" y="3013" width="5.1421%" height="15" fill="rgb(220,154,50)" fg:x="206192267" fg:w="12843091"/><text x="82.8056%" y="3023.50">&lt;serde..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (998,508 samples, 0.40%)</title><rect x="87.2980%" y="2997" width="0.3998%" height="15" fill="rgb(212,11,10)" fg:x="218036850" fg:w="998508"/><text x="87.5480%" y="3007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (998,508 samples, 0.40%)</title><rect x="87.2980%" y="2981" width="0.3998%" height="15" fill="rgb(205,166,19)" fg:x="218036850" fg:w="998508"/><text x="87.5480%" y="2991.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (998,508 samples, 0.40%)</title><rect x="87.2980%" y="2965" width="0.3998%" height="15" fill="rgb(244,198,16)" fg:x="218036850" fg:w="998508"/><text x="87.5480%" y="2975.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (998,508 samples, 0.40%)</title><rect x="87.2980%" y="2949" width="0.3998%" height="15" fill="rgb(219,69,12)" fg:x="218036850" fg:w="998508"/><text x="87.5480%" y="2959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (998,508 samples, 0.40%)</title><rect x="87.2980%" y="2933" width="0.3998%" height="15" fill="rgb(245,30,7)" fg:x="218036850" fg:w="998508"/><text x="87.5480%" y="2943.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (998,508 samples, 0.40%)</title><rect x="87.2980%" y="2917" width="0.3998%" height="15" fill="rgb(218,221,48)" fg:x="218036850" fg:w="998508"/><text x="87.5480%" y="2927.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (998,508 samples, 0.40%)</title><rect x="87.2980%" y="2901" width="0.3998%" height="15" fill="rgb(216,66,15)" fg:x="218036850" fg:w="998508"/><text x="87.5480%" y="2911.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (998,508 samples, 0.40%)</title><rect x="87.2980%" y="2885" width="0.3998%" height="15" fill="rgb(226,122,50)" fg:x="218036850" fg:w="998508"/><text x="87.5480%" y="2895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (998,508 samples, 0.40%)</title><rect x="87.2980%" y="2869" width="0.3998%" height="15" fill="rgb(239,156,16)" fg:x="218036850" fg:w="998508"/><text x="87.5480%" y="2879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (998,508 samples, 0.40%)</title><rect x="87.2980%" y="2853" width="0.3998%" height="15" fill="rgb(224,27,38)" fg:x="218036850" fg:w="998508"/><text x="87.5480%" y="2863.50"></text></g><g><title>alloc::alloc::alloc (998,508 samples, 0.40%)</title><rect x="87.2980%" y="2837" width="0.3998%" height="15" fill="rgb(224,39,27)" fg:x="218036850" fg:w="998508"/><text x="87.5480%" y="2847.50"></text></g><g><title>malloc (998,508 samples, 0.40%)</title><rect x="87.2980%" y="2821" width="0.3998%" height="15" fill="rgb(215,92,29)" fg:x="218036850" fg:w="998508"/><text x="87.5480%" y="2831.50"></text></g><g><title>[libc.so.6] (998,508 samples, 0.40%)</title><rect x="87.2980%" y="2805" width="0.3998%" height="15" fill="rgb(207,159,16)" fg:x="218036850" fg:w="998508"/><text x="87.5480%" y="2815.50"></text></g><g><title>[libc.so.6] (998,508 samples, 0.40%)</title><rect x="87.2980%" y="2789" width="0.3998%" height="15" fill="rgb(238,163,47)" fg:x="218036850" fg:w="998508"/><text x="87.5480%" y="2799.50"></text></g><g><title>serde::de::MapAccess::next_entry (16,157,647 samples, 6.47%)</title><rect x="81.4130%" y="3205" width="6.4692%" height="15" fill="rgb(219,91,49)" fg:x="203338358" fg:w="16157647"/><text x="81.6630%" y="3215.50">serde::d..</text></g><g><title>serde::de::MapAccess::next_entry_seed (16,157,647 samples, 6.47%)</title><rect x="81.4130%" y="3189" width="6.4692%" height="15" fill="rgb(227,167,31)" fg:x="203338358" fg:w="16157647"/><text x="81.6630%" y="3199.50">serde::d..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (14,176,884 samples, 5.68%)</title><rect x="82.2060%" y="3173" width="5.6762%" height="15" fill="rgb(234,80,54)" fg:x="205319121" fg:w="14176884"/><text x="82.4560%" y="3183.50">&lt;serde_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14,176,884 samples, 5.68%)</title><rect x="82.2060%" y="3157" width="5.6762%" height="15" fill="rgb(212,114,2)" fg:x="205319121" fg:w="14176884"/><text x="82.4560%" y="3167.50">&lt;core::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,176,884 samples, 5.68%)</title><rect x="82.2060%" y="3141" width="5.6762%" height="15" fill="rgb(234,50,24)" fg:x="205319121" fg:w="14176884"/><text x="82.4560%" y="3151.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,176,884 samples, 5.68%)</title><rect x="82.2060%" y="3125" width="5.6762%" height="15" fill="rgb(221,68,8)" fg:x="205319121" fg:w="14176884"/><text x="82.4560%" y="3135.50">&lt;&amp;mut s..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (460,647 samples, 0.18%)</title><rect x="87.6977%" y="3109" width="0.1844%" height="15" fill="rgb(254,180,31)" fg:x="219035358" fg:w="460647"/><text x="87.9477%" y="3119.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (460,647 samples, 0.18%)</title><rect x="87.6977%" y="3093" width="0.1844%" height="15" fill="rgb(247,130,50)" fg:x="219035358" fg:w="460647"/><text x="87.9477%" y="3103.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (460,647 samples, 0.18%)</title><rect x="87.6977%" y="3077" width="0.1844%" height="15" fill="rgb(211,109,4)" fg:x="219035358" fg:w="460647"/><text x="87.9477%" y="3087.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17,154,845 samples, 6.87%)</title><rect x="81.4130%" y="3221" width="6.8685%" height="15" fill="rgb(238,50,21)" fg:x="203338358" fg:w="17154845"/><text x="81.6630%" y="3231.50">&lt;serde_js..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (997,198 samples, 0.40%)</title><rect x="87.8822%" y="3205" width="0.3993%" height="15" fill="rgb(225,57,45)" fg:x="219496005" fg:w="997198"/><text x="88.1322%" y="3215.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (997,198 samples, 0.40%)</title><rect x="87.8822%" y="3189" width="0.3993%" height="15" fill="rgb(209,196,50)" fg:x="219496005" fg:w="997198"/><text x="88.1322%" y="3199.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (997,198 samples, 0.40%)</title><rect x="87.8822%" y="3173" width="0.3993%" height="15" fill="rgb(242,140,13)" fg:x="219496005" fg:w="997198"/><text x="88.1322%" y="3183.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (997,198 samples, 0.40%)</title><rect x="87.8822%" y="3157" width="0.3993%" height="15" fill="rgb(217,111,7)" fg:x="219496005" fg:w="997198"/><text x="88.1322%" y="3167.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (997,198 samples, 0.40%)</title><rect x="87.8822%" y="3141" width="0.3993%" height="15" fill="rgb(253,193,51)" fg:x="219496005" fg:w="997198"/><text x="88.1322%" y="3151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (997,198 samples, 0.40%)</title><rect x="87.8822%" y="3125" width="0.3993%" height="15" fill="rgb(252,70,29)" fg:x="219496005" fg:w="997198"/><text x="88.1322%" y="3135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (960,006 samples, 0.38%)</title><rect x="88.2814%" y="3205" width="0.3844%" height="15" fill="rgb(232,127,12)" fg:x="220493203" fg:w="960006"/><text x="88.5314%" y="3215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (960,006 samples, 0.38%)</title><rect x="88.2814%" y="3189" width="0.3844%" height="15" fill="rgb(211,180,21)" fg:x="220493203" fg:w="960006"/><text x="88.5314%" y="3199.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (960,006 samples, 0.38%)</title><rect x="88.2814%" y="3173" width="0.3844%" height="15" fill="rgb(229,72,13)" fg:x="220493203" fg:w="960006"/><text x="88.5314%" y="3183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (960,006 samples, 0.38%)</title><rect x="88.2814%" y="3157" width="0.3844%" height="15" fill="rgb(240,211,49)" fg:x="220493203" fg:w="960006"/><text x="88.5314%" y="3167.50"></text></g><g><title>alloc::raw_vec::finish_grow (960,006 samples, 0.38%)</title><rect x="88.2814%" y="3141" width="0.3844%" height="15" fill="rgb(219,149,40)" fg:x="220493203" fg:w="960006"/><text x="88.5314%" y="3151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (960,006 samples, 0.38%)</title><rect x="88.2814%" y="3125" width="0.3844%" height="15" fill="rgb(210,127,46)" fg:x="220493203" fg:w="960006"/><text x="88.5314%" y="3135.50"></text></g><g><title>alloc::alloc::Global::grow_impl (960,006 samples, 0.38%)</title><rect x="88.2814%" y="3109" width="0.3844%" height="15" fill="rgb(220,106,7)" fg:x="220493203" fg:w="960006"/><text x="88.5314%" y="3119.50"></text></g><g><title>alloc::alloc::realloc (960,006 samples, 0.38%)</title><rect x="88.2814%" y="3093" width="0.3844%" height="15" fill="rgb(249,31,22)" fg:x="220493203" fg:w="960006"/><text x="88.5314%" y="3103.50"></text></g><g><title>realloc (960,006 samples, 0.38%)</title><rect x="88.2814%" y="3077" width="0.3844%" height="15" fill="rgb(253,1,49)" fg:x="220493203" fg:w="960006"/><text x="88.5314%" y="3087.50"></text></g><g><title>[libc.so.6] (960,006 samples, 0.38%)</title><rect x="88.2814%" y="3061" width="0.3844%" height="15" fill="rgb(227,144,33)" fg:x="220493203" fg:w="960006"/><text x="88.5314%" y="3071.50"></text></g><g><title>serde::de::MapAccess::next_entry (22,312,143 samples, 8.93%)</title><rect x="81.4130%" y="3317" width="8.9334%" height="15" fill="rgb(249,163,44)" fg:x="203338358" fg:w="22312143"/><text x="81.6630%" y="3327.50">serde::de::Ma..</text></g><g><title>serde::de::MapAccess::next_entry_seed (22,312,143 samples, 8.93%)</title><rect x="81.4130%" y="3301" width="8.9334%" height="15" fill="rgb(234,15,39)" fg:x="203338358" fg:w="22312143"/><text x="81.6630%" y="3311.50">serde::de::Ma..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (22,312,143 samples, 8.93%)</title><rect x="81.4130%" y="3285" width="8.9334%" height="15" fill="rgb(207,66,16)" fg:x="203338358" fg:w="22312143"/><text x="81.6630%" y="3295.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (22,312,143 samples, 8.93%)</title><rect x="81.4130%" y="3269" width="8.9334%" height="15" fill="rgb(233,112,24)" fg:x="203338358" fg:w="22312143"/><text x="81.6630%" y="3279.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (22,312,143 samples, 8.93%)</title><rect x="81.4130%" y="3253" width="8.9334%" height="15" fill="rgb(230,90,22)" fg:x="203338358" fg:w="22312143"/><text x="81.6630%" y="3263.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22,312,143 samples, 8.93%)</title><rect x="81.4130%" y="3237" width="8.9334%" height="15" fill="rgb(229,61,13)" fg:x="203338358" fg:w="22312143"/><text x="81.6630%" y="3247.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,157,298 samples, 2.06%)</title><rect x="88.2814%" y="3221" width="2.0649%" height="15" fill="rgb(225,57,24)" fg:x="220493203" fg:w="5157298"/><text x="88.5314%" y="3231.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (4,197,292 samples, 1.68%)</title><rect x="88.6658%" y="3205" width="1.6805%" height="15" fill="rgb(208,169,48)" fg:x="221453209" fg:w="4197292"/><text x="88.9158%" y="3215.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,197,292 samples, 1.68%)</title><rect x="88.6658%" y="3189" width="1.6805%" height="15" fill="rgb(244,218,51)" fg:x="221453209" fg:w="4197292"/><text x="88.9158%" y="3199.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,118,468 samples, 1.25%)</title><rect x="89.0977%" y="3173" width="1.2486%" height="15" fill="rgb(214,148,10)" fg:x="222532033" fg:w="3118468"/><text x="89.3477%" y="3183.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,118,468 samples, 1.25%)</title><rect x="89.0977%" y="3157" width="1.2486%" height="15" fill="rgb(225,174,27)" fg:x="222532033" fg:w="3118468"/><text x="89.3477%" y="3167.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,118,468 samples, 1.25%)</title><rect x="89.0977%" y="3141" width="1.2486%" height="15" fill="rgb(230,96,26)" fg:x="222532033" fg:w="3118468"/><text x="89.3477%" y="3151.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_any_number (2,107,352 samples, 0.84%)</title><rect x="89.5026%" y="3125" width="0.8437%" height="15" fill="rgb(232,10,30)" fg:x="223543149" fg:w="2107352"/><text x="89.7526%" y="3135.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (2,107,352 samples, 0.84%)</title><rect x="89.5026%" y="3109" width="0.8437%" height="15" fill="rgb(222,8,50)" fg:x="223543149" fg:w="2107352"/><text x="89.7526%" y="3119.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::next_char (2,107,352 samples, 0.84%)</title><rect x="89.5026%" y="3093" width="0.8437%" height="15" fill="rgb(213,81,27)" fg:x="223543149" fg:w="2107352"/><text x="89.7526%" y="3103.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::next (2,107,352 samples, 0.84%)</title><rect x="89.5026%" y="3077" width="0.8437%" height="15" fill="rgb(245,50,10)" fg:x="223543149" fg:w="2107352"/><text x="89.7526%" y="3087.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::next (2,107,352 samples, 0.84%)</title><rect x="89.5026%" y="3061" width="0.8437%" height="15" fill="rgb(216,100,18)" fg:x="223543149" fg:w="2107352"/><text x="89.7526%" y="3071.50"></text></g><g><title>benchmark::parse_web_layout_trace (24,345,180 samples, 9.75%)</title><rect x="80.9898%" y="3413" width="9.7474%" height="15" fill="rgb(236,147,54)" fg:x="202281367" fg:w="24345180"/><text x="81.2398%" y="3423.50">benchmark::par..</text></g><g><title>serde_json::de::from_str (23,288,189 samples, 9.32%)</title><rect x="81.4130%" y="3397" width="9.3242%" height="15" fill="rgb(205,143,26)" fg:x="203338358" fg:w="23288189"/><text x="81.6630%" y="3407.50">serde_json::d..</text></g><g><title>serde_json::de::from_trait (23,288,189 samples, 9.32%)</title><rect x="81.4130%" y="3381" width="9.3242%" height="15" fill="rgb(236,26,9)" fg:x="203338358" fg:w="23288189"/><text x="81.6630%" y="3391.50">serde_json::d..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (23,288,189 samples, 9.32%)</title><rect x="81.4130%" y="3365" width="9.3242%" height="15" fill="rgb(221,165,53)" fg:x="203338358" fg:w="23288189"/><text x="81.6630%" y="3375.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23,288,189 samples, 9.32%)</title><rect x="81.4130%" y="3349" width="9.3242%" height="15" fill="rgb(214,110,17)" fg:x="203338358" fg:w="23288189"/><text x="81.6630%" y="3359.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23,288,189 samples, 9.32%)</title><rect x="81.4130%" y="3333" width="9.3242%" height="15" fill="rgb(237,197,12)" fg:x="203338358" fg:w="23288189"/><text x="81.6630%" y="3343.50">&lt;serde_json::..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (976,046 samples, 0.39%)</title><rect x="90.3463%" y="3317" width="0.3908%" height="15" fill="rgb(205,84,17)" fg:x="225650501" fg:w="976046"/><text x="90.5963%" y="3327.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (976,046 samples, 0.39%)</title><rect x="90.3463%" y="3301" width="0.3908%" height="15" fill="rgb(237,18,45)" fg:x="225650501" fg:w="976046"/><text x="90.5963%" y="3311.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (976,046 samples, 0.39%)</title><rect x="90.3463%" y="3285" width="0.3908%" height="15" fill="rgb(221,87,14)" fg:x="225650501" fg:w="976046"/><text x="90.5963%" y="3295.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (976,046 samples, 0.39%)</title><rect x="90.3463%" y="3269" width="0.3908%" height="15" fill="rgb(238,186,15)" fg:x="225650501" fg:w="976046"/><text x="90.5963%" y="3279.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (976,046 samples, 0.39%)</title><rect x="90.3463%" y="3253" width="0.3908%" height="15" fill="rgb(208,115,11)" fg:x="225650501" fg:w="976046"/><text x="90.5963%" y="3263.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (976,046 samples, 0.39%)</title><rect x="90.3463%" y="3237" width="0.3908%" height="15" fill="rgb(254,175,0)" fg:x="225650501" fg:w="976046"/><text x="90.5963%" y="3247.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (976,046 samples, 0.39%)</title><rect x="90.3463%" y="3221" width="0.3908%" height="15" fill="rgb(227,24,42)" fg:x="225650501" fg:w="976046"/><text x="90.5963%" y="3231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (976,046 samples, 0.39%)</title><rect x="90.3463%" y="3205" width="0.3908%" height="15" fill="rgb(223,211,37)" fg:x="225650501" fg:w="976046"/><text x="90.5963%" y="3215.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (976,046 samples, 0.39%)</title><rect x="90.3463%" y="3189" width="0.3908%" height="15" fill="rgb(235,49,27)" fg:x="225650501" fg:w="976046"/><text x="90.5963%" y="3199.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (976,046 samples, 0.39%)</title><rect x="90.3463%" y="3173" width="0.3908%" height="15" fill="rgb(254,97,51)" fg:x="225650501" fg:w="976046"/><text x="90.5963%" y="3183.50"></text></g><g><title>[libc.so.6] (976,046 samples, 0.39%)</title><rect x="90.3463%" y="3157" width="0.3908%" height="15" fill="rgb(249,51,40)" fg:x="225650501" fg:w="976046"/><text x="90.5963%" y="3167.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,345,534 samples, 0.54%)</title><rect x="90.7371%" y="2565" width="0.5387%" height="15" fill="rgb(210,128,45)" fg:x="226626547" fg:w="1345534"/><text x="90.9871%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,345,534 samples, 0.54%)</title><rect x="90.7371%" y="2549" width="0.5387%" height="15" fill="rgb(224,137,50)" fg:x="226626547" fg:w="1345534"/><text x="90.9871%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,345,534 samples, 0.54%)</title><rect x="90.7371%" y="2533" width="0.5387%" height="15" fill="rgb(242,15,9)" fg:x="226626547" fg:w="1345534"/><text x="90.9871%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,345,534 samples, 0.54%)</title><rect x="90.7371%" y="2517" width="0.5387%" height="15" fill="rgb(233,187,41)" fg:x="226626547" fg:w="1345534"/><text x="90.9871%" y="2527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,345,534 samples, 0.54%)</title><rect x="90.7371%" y="2501" width="0.5387%" height="15" fill="rgb(227,2,29)" fg:x="226626547" fg:w="1345534"/><text x="90.9871%" y="2511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,345,534 samples, 0.54%)</title><rect x="90.7371%" y="2485" width="0.5387%" height="15" fill="rgb(222,70,3)" fg:x="226626547" fg:w="1345534"/><text x="90.9871%" y="2495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,345,534 samples, 0.54%)</title><rect x="90.7371%" y="2469" width="0.5387%" height="15" fill="rgb(213,11,42)" fg:x="226626547" fg:w="1345534"/><text x="90.9871%" y="2479.50"></text></g><g><title>alloc::alloc::dealloc (1,345,534 samples, 0.54%)</title><rect x="90.7371%" y="2453" width="0.5387%" height="15" fill="rgb(225,150,9)" fg:x="226626547" fg:w="1345534"/><text x="90.9871%" y="2463.50"></text></g><g><title>cfree (1,345,534 samples, 0.54%)</title><rect x="90.7371%" y="2437" width="0.5387%" height="15" fill="rgb(230,162,45)" fg:x="226626547" fg:w="1345534"/><text x="90.9871%" y="2447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,292,332 samples, 0.52%)</title><rect x="91.2758%" y="2101" width="0.5174%" height="15" fill="rgb(222,14,52)" fg:x="227972081" fg:w="1292332"/><text x="91.5258%" y="2111.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,292,332 samples, 0.52%)</title><rect x="91.2758%" y="2085" width="0.5174%" height="15" fill="rgb(254,198,14)" fg:x="227972081" fg:w="1292332"/><text x="91.5258%" y="2095.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,292,332 samples, 0.52%)</title><rect x="91.2758%" y="2069" width="0.5174%" height="15" fill="rgb(220,217,30)" fg:x="227972081" fg:w="1292332"/><text x="91.5258%" y="2079.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,292,332 samples, 0.52%)</title><rect x="91.2758%" y="2053" width="0.5174%" height="15" fill="rgb(215,146,41)" fg:x="227972081" fg:w="1292332"/><text x="91.5258%" y="2063.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,292,332 samples, 0.52%)</title><rect x="91.2758%" y="2037" width="0.5174%" height="15" fill="rgb(217,27,36)" fg:x="227972081" fg:w="1292332"/><text x="91.5258%" y="2047.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,292,332 samples, 0.52%)</title><rect x="91.2758%" y="2021" width="0.5174%" height="15" fill="rgb(219,218,39)" fg:x="227972081" fg:w="1292332"/><text x="91.5258%" y="2031.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,292,332 samples, 0.52%)</title><rect x="91.2758%" y="2005" width="0.5174%" height="15" fill="rgb(219,4,42)" fg:x="227972081" fg:w="1292332"/><text x="91.5258%" y="2015.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,292,332 samples, 0.52%)</title><rect x="91.2758%" y="1989" width="0.5174%" height="15" fill="rgb(249,119,36)" fg:x="227972081" fg:w="1292332"/><text x="91.5258%" y="1999.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,276,720 samples, 0.51%)</title><rect x="91.7933%" y="1381" width="0.5112%" height="15" fill="rgb(209,23,33)" fg:x="229264413" fg:w="1276720"/><text x="92.0433%" y="1391.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,276,720 samples, 0.51%)</title><rect x="91.7933%" y="1365" width="0.5112%" height="15" fill="rgb(211,10,0)" fg:x="229264413" fg:w="1276720"/><text x="92.0433%" y="1375.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,276,720 samples, 0.51%)</title><rect x="91.7933%" y="1349" width="0.5112%" height="15" fill="rgb(208,99,37)" fg:x="229264413" fg:w="1276720"/><text x="92.0433%" y="1359.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,276,720 samples, 0.51%)</title><rect x="91.7933%" y="1333" width="0.5112%" height="15" fill="rgb(213,132,31)" fg:x="229264413" fg:w="1276720"/><text x="92.0433%" y="1343.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,276,720 samples, 0.51%)</title><rect x="91.7933%" y="1317" width="0.5112%" height="15" fill="rgb(243,129,40)" fg:x="229264413" fg:w="1276720"/><text x="92.0433%" y="1327.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,276,720 samples, 0.51%)</title><rect x="91.7933%" y="1301" width="0.5112%" height="15" fill="rgb(210,66,33)" fg:x="229264413" fg:w="1276720"/><text x="92.0433%" y="1311.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,276,720 samples, 0.51%)</title><rect x="91.7933%" y="1285" width="0.5112%" height="15" fill="rgb(209,189,4)" fg:x="229264413" fg:w="1276720"/><text x="92.0433%" y="1295.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,276,720 samples, 0.51%)</title><rect x="91.7933%" y="1269" width="0.5112%" height="15" fill="rgb(214,107,37)" fg:x="229264413" fg:w="1276720"/><text x="92.0433%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3397" width="2.0903%" height="15" fill="rgb(245,88,54)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3407.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3381" width="2.0903%" height="15" fill="rgb(205,146,20)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3391.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3365" width="2.0903%" height="15" fill="rgb(220,161,25)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3375.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3349" width="2.0903%" height="15" fill="rgb(215,152,15)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3359.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3333" width="2.0903%" height="15" fill="rgb(233,192,44)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3343.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3317" width="2.0903%" height="15" fill="rgb(240,170,46)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3327.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3301" width="2.0903%" height="15" fill="rgb(207,104,33)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3311.50">&lt;..</text></g><g><title>core::mem::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3285" width="2.0903%" height="15" fill="rgb(219,21,39)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3295.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3269" width="2.0903%" height="15" fill="rgb(214,133,29)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3279.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3253" width="2.0903%" height="15" fill="rgb(226,93,6)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3263.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3237" width="2.0903%" height="15" fill="rgb(252,222,34)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3247.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3221" width="2.0903%" height="15" fill="rgb(252,92,48)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3231.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3205" width="2.0903%" height="15" fill="rgb(245,223,24)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3215.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3189" width="2.0903%" height="15" fill="rgb(205,176,3)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3199.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3173" width="2.0903%" height="15" fill="rgb(235,151,15)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3183.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3157" width="2.0903%" height="15" fill="rgb(237,209,11)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3167.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3141" width="2.0903%" height="15" fill="rgb(243,227,24)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3151.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3125" width="2.0903%" height="15" fill="rgb(239,193,16)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3135.50">&lt;..</text></g><g><title>core::mem::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3109" width="2.0903%" height="15" fill="rgb(231,27,9)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3119.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3093" width="2.0903%" height="15" fill="rgb(219,169,10)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3103.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3077" width="2.0903%" height="15" fill="rgb(244,229,43)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3087.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3061" width="2.0903%" height="15" fill="rgb(254,38,20)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3071.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3045" width="2.0903%" height="15" fill="rgb(250,47,30)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3055.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3029" width="2.0903%" height="15" fill="rgb(224,124,36)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3039.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="3013" width="2.0903%" height="15" fill="rgb(246,68,51)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3023.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2997" width="2.0903%" height="15" fill="rgb(253,43,49)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="3007.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2981" width="2.0903%" height="15" fill="rgb(219,54,36)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2991.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2965" width="2.0903%" height="15" fill="rgb(227,133,34)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2975.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2949" width="2.0903%" height="15" fill="rgb(247,227,15)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2959.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2933" width="2.0903%" height="15" fill="rgb(229,96,14)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2943.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2917" width="2.0903%" height="15" fill="rgb(220,79,17)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2927.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2901" width="2.0903%" height="15" fill="rgb(205,131,53)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2911.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2885" width="2.0903%" height="15" fill="rgb(209,50,29)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2895.50">&lt;..</text></g><g><title>core::mem::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2869" width="2.0903%" height="15" fill="rgb(245,86,46)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2879.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2853" width="2.0903%" height="15" fill="rgb(235,66,46)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2863.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2837" width="2.0903%" height="15" fill="rgb(232,148,31)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2847.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2821" width="2.0903%" height="15" fill="rgb(217,149,8)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2831.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2805" width="2.0903%" height="15" fill="rgb(209,183,11)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2815.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2789" width="2.0903%" height="15" fill="rgb(208,55,20)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2799.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2773" width="2.0903%" height="15" fill="rgb(218,39,14)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2783.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2757" width="2.0903%" height="15" fill="rgb(216,169,33)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2767.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2741" width="2.0903%" height="15" fill="rgb(233,80,24)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2751.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2725" width="2.0903%" height="15" fill="rgb(213,179,31)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2735.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2709" width="2.0903%" height="15" fill="rgb(209,19,5)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2693" width="2.0903%" height="15" fill="rgb(219,18,35)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2703.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2677" width="2.0903%" height="15" fill="rgb(209,169,16)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2687.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2661" width="2.0903%" height="15" fill="rgb(245,90,51)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2671.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2645" width="2.0903%" height="15" fill="rgb(220,99,45)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2655.50">&lt;..</text></g><g><title>core::mem::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2629" width="2.0903%" height="15" fill="rgb(249,89,25)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2639.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2613" width="2.0903%" height="15" fill="rgb(239,193,0)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2623.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2597" width="2.0903%" height="15" fill="rgb(231,126,1)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2607.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,220,847 samples, 2.09%)</title><rect x="90.7371%" y="2581" width="2.0903%" height="15" fill="rgb(243,166,3)" fg:x="226626547" fg:w="5220847"/><text x="90.9871%" y="2591.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2565" width="1.5516%" height="15" fill="rgb(223,22,34)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2575.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2549" width="1.5516%" height="15" fill="rgb(251,52,51)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2533" width="1.5516%" height="15" fill="rgb(221,165,28)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2517" width="1.5516%" height="15" fill="rgb(218,121,47)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2501" width="1.5516%" height="15" fill="rgb(209,120,9)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2485" width="1.5516%" height="15" fill="rgb(236,68,12)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2469" width="1.5516%" height="15" fill="rgb(225,194,26)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2453" width="1.5516%" height="15" fill="rgb(231,84,39)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2437" width="1.5516%" height="15" fill="rgb(210,11,45)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2421" width="1.5516%" height="15" fill="rgb(224,54,52)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2405" width="1.5516%" height="15" fill="rgb(238,102,14)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2415.50"></text></g><g><title>core::mem::drop (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2389" width="1.5516%" height="15" fill="rgb(243,160,52)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2373" width="1.5516%" height="15" fill="rgb(216,114,19)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2357" width="1.5516%" height="15" fill="rgb(244,166,37)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2341" width="1.5516%" height="15" fill="rgb(246,29,44)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2325" width="1.5516%" height="15" fill="rgb(215,56,53)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2335.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2309" width="1.5516%" height="15" fill="rgb(217,60,2)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2319.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2293" width="1.5516%" height="15" fill="rgb(207,26,24)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2277" width="1.5516%" height="15" fill="rgb(252,210,15)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2261" width="1.5516%" height="15" fill="rgb(253,209,26)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2245" width="1.5516%" height="15" fill="rgb(238,170,14)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2229" width="1.5516%" height="15" fill="rgb(216,178,15)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2213" width="1.5516%" height="15" fill="rgb(250,197,2)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2197" width="1.5516%" height="15" fill="rgb(212,70,42)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2181" width="1.5516%" height="15" fill="rgb(227,213,9)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2165" width="1.5516%" height="15" fill="rgb(245,99,25)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2175.50"></text></g><g><title>core::mem::drop (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2149" width="1.5516%" height="15" fill="rgb(250,82,29)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2133" width="1.5516%" height="15" fill="rgb(241,226,54)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2143.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,875,313 samples, 1.55%)</title><rect x="91.2758%" y="2117" width="1.5516%" height="15" fill="rgb(221,99,41)" fg:x="227972081" fg:w="3875313"/><text x="91.5258%" y="2127.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="2101" width="1.0342%" height="15" fill="rgb(213,90,21)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="2085" width="1.0342%" height="15" fill="rgb(205,208,24)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="2095.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="2069" width="1.0342%" height="15" fill="rgb(246,31,12)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="2079.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="2053" width="1.0342%" height="15" fill="rgb(213,154,6)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="2037" width="1.0342%" height="15" fill="rgb(222,163,29)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="2021" width="1.0342%" height="15" fill="rgb(227,201,8)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="2031.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="2005" width="1.0342%" height="15" fill="rgb(233,9,32)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1989" width="1.0342%" height="15" fill="rgb(217,54,24)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1973" width="1.0342%" height="15" fill="rgb(235,192,0)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1957" width="1.0342%" height="15" fill="rgb(235,45,9)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1941" width="1.0342%" height="15" fill="rgb(246,42,40)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1925" width="1.0342%" height="15" fill="rgb(248,111,24)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1935.50"></text></g><g><title>core::mem::drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1909" width="1.0342%" height="15" fill="rgb(249,65,22)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1893" width="1.0342%" height="15" fill="rgb(238,111,51)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1903.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1877" width="1.0342%" height="15" fill="rgb(250,118,22)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1887.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1861" width="1.0342%" height="15" fill="rgb(234,84,26)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1845" width="1.0342%" height="15" fill="rgb(243,172,12)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1829" width="1.0342%" height="15" fill="rgb(236,150,49)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1839.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1813" width="1.0342%" height="15" fill="rgb(225,197,26)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1797" width="1.0342%" height="15" fill="rgb(214,17,42)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1781" width="1.0342%" height="15" fill="rgb(224,165,40)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1765" width="1.0342%" height="15" fill="rgb(246,100,4)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1749" width="1.0342%" height="15" fill="rgb(222,103,0)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1733" width="1.0342%" height="15" fill="rgb(227,189,26)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1717" width="1.0342%" height="15" fill="rgb(214,202,17)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1701" width="1.0342%" height="15" fill="rgb(229,111,3)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1685" width="1.0342%" height="15" fill="rgb(229,172,15)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1695.50"></text></g><g><title>core::mem::drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1669" width="1.0342%" height="15" fill="rgb(230,224,35)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1653" width="1.0342%" height="15" fill="rgb(251,141,6)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1637" width="1.0342%" height="15" fill="rgb(225,208,6)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1647.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1621" width="1.0342%" height="15" fill="rgb(246,181,16)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1605" width="1.0342%" height="15" fill="rgb(227,129,36)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1589" width="1.0342%" height="15" fill="rgb(248,117,24)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1599.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1573" width="1.0342%" height="15" fill="rgb(214,185,35)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1557" width="1.0342%" height="15" fill="rgb(236,150,34)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1541" width="1.0342%" height="15" fill="rgb(243,228,27)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1525" width="1.0342%" height="15" fill="rgb(245,77,44)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1509" width="1.0342%" height="15" fill="rgb(235,214,42)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1493" width="1.0342%" height="15" fill="rgb(221,74,3)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1477" width="1.0342%" height="15" fill="rgb(206,121,29)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1461" width="1.0342%" height="15" fill="rgb(249,131,53)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1471.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1445" width="1.0342%" height="15" fill="rgb(236,170,29)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1455.50"></text></g><g><title>core::mem::drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1429" width="1.0342%" height="15" fill="rgb(247,96,15)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1413" width="1.0342%" height="15" fill="rgb(211,210,7)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1423.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,582,981 samples, 1.03%)</title><rect x="91.7933%" y="1397" width="1.0342%" height="15" fill="rgb(240,88,50)" fg:x="229264413" fg:w="2582981"/><text x="92.0433%" y="1407.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1381" width="0.5230%" height="15" fill="rgb(209,229,26)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1365" width="0.5230%" height="15" fill="rgb(210,68,23)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1375.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1349" width="0.5230%" height="15" fill="rgb(229,180,13)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1359.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1333" width="0.5230%" height="15" fill="rgb(236,53,44)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1317" width="0.5230%" height="15" fill="rgb(244,214,29)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1301" width="0.5230%" height="15" fill="rgb(220,75,29)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1285" width="0.5230%" height="15" fill="rgb(214,183,37)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1269" width="0.5230%" height="15" fill="rgb(239,117,29)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1253" width="0.5230%" height="15" fill="rgb(237,171,35)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1237" width="0.5230%" height="15" fill="rgb(229,178,53)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1221" width="0.5230%" height="15" fill="rgb(210,102,19)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1231.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1205" width="0.5230%" height="15" fill="rgb(235,127,22)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1215.50"></text></g><g><title>core::mem::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1189" width="0.5230%" height="15" fill="rgb(244,31,31)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1173" width="0.5230%" height="15" fill="rgb(231,43,21)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1157" width="0.5230%" height="15" fill="rgb(217,131,35)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1141" width="0.5230%" height="15" fill="rgb(221,149,4)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1125" width="0.5230%" height="15" fill="rgb(232,170,28)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1109" width="0.5230%" height="15" fill="rgb(238,56,10)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1119.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1093" width="0.5230%" height="15" fill="rgb(235,196,14)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1077" width="0.5230%" height="15" fill="rgb(216,45,48)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1061" width="0.5230%" height="15" fill="rgb(238,213,17)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1045" width="0.5230%" height="15" fill="rgb(212,13,2)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1029" width="0.5230%" height="15" fill="rgb(240,114,20)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="1013" width="0.5230%" height="15" fill="rgb(228,41,40)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="997" width="0.5230%" height="15" fill="rgb(244,132,35)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="981" width="0.5230%" height="15" fill="rgb(253,189,4)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="965" width="0.5230%" height="15" fill="rgb(224,37,19)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="975.50"></text></g><g><title>core::mem::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="949" width="0.5230%" height="15" fill="rgb(235,223,18)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="933" width="0.5230%" height="15" fill="rgb(235,163,25)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="917" width="0.5230%" height="15" fill="rgb(217,145,28)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="901" width="0.5230%" height="15" fill="rgb(223,223,32)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="885" width="0.5230%" height="15" fill="rgb(227,189,39)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="869" width="0.5230%" height="15" fill="rgb(248,10,22)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="853" width="0.5230%" height="15" fill="rgb(248,46,39)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="837" width="0.5230%" height="15" fill="rgb(248,113,48)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="821" width="0.5230%" height="15" fill="rgb(245,16,25)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="805" width="0.5230%" height="15" fill="rgb(249,152,16)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="789" width="0.5230%" height="15" fill="rgb(250,16,1)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="773" width="0.5230%" height="15" fill="rgb(249,138,3)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="757" width="0.5230%" height="15" fill="rgb(227,71,41)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="741" width="0.5230%" height="15" fill="rgb(209,184,23)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="725" width="0.5230%" height="15" fill="rgb(223,215,31)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="735.50"></text></g><g><title>core::mem::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="709" width="0.5230%" height="15" fill="rgb(210,146,28)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="693" width="0.5230%" height="15" fill="rgb(209,183,41)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="677" width="0.5230%" height="15" fill="rgb(209,224,45)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="661" width="0.5230%" height="15" fill="rgb(224,209,51)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="645" width="0.5230%" height="15" fill="rgb(223,17,39)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="629" width="0.5230%" height="15" fill="rgb(234,204,37)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="639.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="613" width="0.5230%" height="15" fill="rgb(236,120,5)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="597" width="0.5230%" height="15" fill="rgb(248,97,27)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="581" width="0.5230%" height="15" fill="rgb(240,66,17)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="565" width="0.5230%" height="15" fill="rgb(210,79,3)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="549" width="0.5230%" height="15" fill="rgb(214,176,27)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="533" width="0.5230%" height="15" fill="rgb(235,185,3)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="517" width="0.5230%" height="15" fill="rgb(227,24,12)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="501" width="0.5230%" height="15" fill="rgb(252,169,48)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="485" width="0.5230%" height="15" fill="rgb(212,65,1)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="495.50"></text></g><g><title>core::mem::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="469" width="0.5230%" height="15" fill="rgb(242,39,24)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="453" width="0.5230%" height="15" fill="rgb(249,32,23)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="437" width="0.5230%" height="15" fill="rgb(251,195,23)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="421" width="0.5230%" height="15" fill="rgb(236,174,8)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="405" width="0.5230%" height="15" fill="rgb(220,197,8)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="389" width="0.5230%" height="15" fill="rgb(240,108,37)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="399.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="373" width="0.5230%" height="15" fill="rgb(232,176,24)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="357" width="0.5230%" height="15" fill="rgb(243,35,29)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="341" width="0.5230%" height="15" fill="rgb(210,37,18)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="325" width="0.5230%" height="15" fill="rgb(224,184,40)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="309" width="0.5230%" height="15" fill="rgb(236,39,29)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="293" width="0.5230%" height="15" fill="rgb(232,48,39)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="277" width="0.5230%" height="15" fill="rgb(236,34,42)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="261" width="0.5230%" height="15" fill="rgb(243,106,37)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="245" width="0.5230%" height="15" fill="rgb(218,96,6)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="255.50"></text></g><g><title>core::mem::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="229" width="0.5230%" height="15" fill="rgb(235,130,12)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="213" width="0.5230%" height="15" fill="rgb(231,95,0)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="197" width="0.5230%" height="15" fill="rgb(228,12,23)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="207.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="181" width="0.5230%" height="15" fill="rgb(216,12,1)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="191.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="165" width="0.5230%" height="15" fill="rgb(219,59,3)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="149" width="0.5230%" height="15" fill="rgb(215,208,46)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="133" width="0.5230%" height="15" fill="rgb(254,224,29)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="117" width="0.5230%" height="15" fill="rgb(232,14,29)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="101" width="0.5230%" height="15" fill="rgb(208,45,52)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="85" width="0.5230%" height="15" fill="rgb(234,191,28)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="69" width="0.5230%" height="15" fill="rgb(244,67,43)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="79.50"></text></g><g><title>alloc::alloc::dealloc (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="53" width="0.5230%" height="15" fill="rgb(236,189,24)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="63.50"></text></g><g><title>cfree (1,306,261 samples, 0.52%)</title><rect x="92.3044%" y="37" width="0.5230%" height="15" fill="rgb(239,214,33)" fg:x="230541133" fg:w="1306261"/><text x="92.5544%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (9,333,162 samples, 3.74%)</title><rect x="90.7371%" y="3413" width="3.7368%" height="15" fill="rgb(226,176,41)" fg:x="226626547" fg:w="9333162"/><text x="90.9871%" y="3423.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (4,112,315 samples, 1.65%)</title><rect x="92.8274%" y="3397" width="1.6465%" height="15" fill="rgb(248,47,8)" fg:x="231847394" fg:w="4112315"/><text x="93.0774%" y="3407.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,112,315 samples, 1.65%)</title><rect x="92.8274%" y="3381" width="1.6465%" height="15" fill="rgb(218,81,44)" fg:x="231847394" fg:w="4112315"/><text x="93.0774%" y="3391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,112,315 samples, 1.65%)</title><rect x="92.8274%" y="3365" width="1.6465%" height="15" fill="rgb(213,98,6)" fg:x="231847394" fg:w="4112315"/><text x="93.0774%" y="3375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,112,315 samples, 1.65%)</title><rect x="92.8274%" y="3349" width="1.6465%" height="15" fill="rgb(222,85,22)" fg:x="231847394" fg:w="4112315"/><text x="93.0774%" y="3359.50"></text></g><g><title>alloc::alloc::dealloc (4,112,315 samples, 1.65%)</title><rect x="92.8274%" y="3333" width="1.6465%" height="15" fill="rgb(239,46,39)" fg:x="231847394" fg:w="4112315"/><text x="93.0774%" y="3343.50"></text></g><g><title>cfree (4,112,315 samples, 1.65%)</title><rect x="92.8274%" y="3317" width="1.6465%" height="15" fill="rgb(237,12,29)" fg:x="231847394" fg:w="4112315"/><text x="93.0774%" y="3327.50"></text></g><g><title>[libc.so.6] (4,112,315 samples, 1.65%)</title><rect x="92.8274%" y="3301" width="1.6465%" height="15" fill="rgb(214,77,8)" fg:x="231847394" fg:w="4112315"/><text x="93.0774%" y="3311.50"></text></g><g><title>[libc.so.6] (4,112,315 samples, 1.65%)</title><rect x="92.8274%" y="3285" width="1.6465%" height="15" fill="rgb(217,168,37)" fg:x="231847394" fg:w="4112315"/><text x="93.0774%" y="3295.50"></text></g><g><title>_start (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3701" width="88.3819%" height="15" fill="rgb(221,217,23)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3711.50">_start</text></g><g><title>__libc_start_main (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3685" width="88.3819%" height="15" fill="rgb(243,229,36)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3695.50">__libc_start_main</text></g><g><title>[libc.so.6] (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3669" width="88.3819%" height="15" fill="rgb(251,163,40)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3679.50">[libc.so.6]</text></g><g><title>main (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3653" width="88.3819%" height="15" fill="rgb(237,222,12)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3663.50">main</text></g><g><title>std::rt::lang_start_internal (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3637" width="88.3819%" height="15" fill="rgb(248,132,6)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3647.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3621" width="88.3819%" height="15" fill="rgb(227,167,50)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3631.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3605" width="88.3819%" height="15" fill="rgb(242,84,37)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3615.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3589" width="88.3819%" height="15" fill="rgb(212,4,50)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3599.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3573" width="88.3819%" height="15" fill="rgb(230,228,32)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3583.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3557" width="88.3819%" height="15" fill="rgb(248,217,23)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3567.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3541" width="88.3819%" height="15" fill="rgb(238,197,32)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3551.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3525" width="88.3819%" height="15" fill="rgb(236,106,1)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3535.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3509" width="88.3819%" height="15" fill="rgb(219,228,13)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3519.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3493" width="88.3819%" height="15" fill="rgb(238,30,35)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3503.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3477" width="88.3819%" height="15" fill="rgb(236,70,23)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3487.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3461" width="88.3819%" height="15" fill="rgb(249,104,48)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3471.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3445" width="88.3819%" height="15" fill="rgb(254,117,50)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3455.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (220,744,106 samples, 88.38%)</title><rect x="6.6311%" y="3429" width="88.3819%" height="15" fill="rgb(223,152,4)" fg:x="16562060" fg:w="220744106"/><text x="6.8811%" y="3439.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3413" width="0.5391%" height="15" fill="rgb(245,6,2)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3397" width="0.5391%" height="15" fill="rgb(249,150,24)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3381" width="0.5391%" height="15" fill="rgb(228,185,42)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3365" width="0.5391%" height="15" fill="rgb(226,39,33)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3375.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3349" width="0.5391%" height="15" fill="rgb(221,166,19)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3333" width="0.5391%" height="15" fill="rgb(209,109,2)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3317" width="0.5391%" height="15" fill="rgb(252,216,26)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3301" width="0.5391%" height="15" fill="rgb(227,173,36)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3311.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3285" width="0.5391%" height="15" fill="rgb(209,90,7)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3269" width="0.5391%" height="15" fill="rgb(250,194,11)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3253" width="0.5391%" height="15" fill="rgb(220,72,50)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3263.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3237" width="0.5391%" height="15" fill="rgb(222,106,48)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3247.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3221" width="0.5391%" height="15" fill="rgb(216,220,45)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3205" width="0.5391%" height="15" fill="rgb(234,112,18)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3189" width="0.5391%" height="15" fill="rgb(206,179,9)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3173" width="0.5391%" height="15" fill="rgb(215,115,40)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3183.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3157" width="0.5391%" height="15" fill="rgb(222,69,34)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3141" width="0.5391%" height="15" fill="rgb(209,161,10)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3125" width="0.5391%" height="15" fill="rgb(217,6,38)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3109" width="0.5391%" height="15" fill="rgb(229,229,48)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3119.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3093" width="0.5391%" height="15" fill="rgb(225,21,28)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3077" width="0.5391%" height="15" fill="rgb(206,33,13)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3061" width="0.5391%" height="15" fill="rgb(242,178,17)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3045" width="0.5391%" height="15" fill="rgb(220,162,5)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3055.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3029" width="0.5391%" height="15" fill="rgb(210,33,43)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="3013" width="0.5391%" height="15" fill="rgb(216,116,54)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2997" width="0.5391%" height="15" fill="rgb(249,92,24)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="3007.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2981" width="0.5391%" height="15" fill="rgb(231,189,14)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2965" width="0.5391%" height="15" fill="rgb(230,8,41)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2949" width="0.5391%" height="15" fill="rgb(249,7,27)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2933" width="0.5391%" height="15" fill="rgb(232,86,5)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2917" width="0.5391%" height="15" fill="rgb(224,175,18)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2901" width="0.5391%" height="15" fill="rgb(220,129,12)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2885" width="0.5391%" height="15" fill="rgb(210,19,36)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2869" width="0.5391%" height="15" fill="rgb(219,96,14)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2853" width="0.5391%" height="15" fill="rgb(249,106,1)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2837" width="0.5391%" height="15" fill="rgb(249,155,20)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2821" width="0.5391%" height="15" fill="rgb(244,168,9)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2805" width="0.5391%" height="15" fill="rgb(216,23,50)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2789" width="0.5391%" height="15" fill="rgb(224,219,20)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2773" width="0.5391%" height="15" fill="rgb(222,156,15)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2757" width="0.5391%" height="15" fill="rgb(231,97,17)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2741" width="0.5391%" height="15" fill="rgb(218,70,48)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2725" width="0.5391%" height="15" fill="rgb(212,196,52)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2709" width="0.5391%" height="15" fill="rgb(243,203,18)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2693" width="0.5391%" height="15" fill="rgb(252,125,41)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2677" width="0.5391%" height="15" fill="rgb(223,180,33)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2661" width="0.5391%" height="15" fill="rgb(254,159,46)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2645" width="0.5391%" height="15" fill="rgb(254,38,10)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2629" width="0.5391%" height="15" fill="rgb(208,217,32)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2613" width="0.5391%" height="15" fill="rgb(221,120,13)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2597" width="0.5391%" height="15" fill="rgb(246,54,52)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2581" width="0.5391%" height="15" fill="rgb(242,34,25)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2565" width="0.5391%" height="15" fill="rgb(247,209,9)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2549" width="0.5391%" height="15" fill="rgb(228,71,26)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2533" width="0.5391%" height="15" fill="rgb(222,145,49)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2517" width="0.5391%" height="15" fill="rgb(218,121,17)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2501" width="0.5391%" height="15" fill="rgb(244,50,7)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2485" width="0.5391%" height="15" fill="rgb(246,229,37)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2469" width="0.5391%" height="15" fill="rgb(225,18,5)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2453" width="0.5391%" height="15" fill="rgb(213,204,8)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2437" width="0.5391%" height="15" fill="rgb(238,103,6)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2421" width="0.5391%" height="15" fill="rgb(222,25,35)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2405" width="0.5391%" height="15" fill="rgb(213,203,35)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2389" width="0.5391%" height="15" fill="rgb(221,79,53)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2373" width="0.5391%" height="15" fill="rgb(243,200,35)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2357" width="0.5391%" height="15" fill="rgb(248,60,25)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2341" width="0.5391%" height="15" fill="rgb(227,53,46)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2325" width="0.5391%" height="15" fill="rgb(216,120,32)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2309" width="0.5391%" height="15" fill="rgb(220,134,1)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2293" width="0.5391%" height="15" fill="rgb(237,168,5)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2277" width="0.5391%" height="15" fill="rgb(231,100,33)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2261" width="0.5391%" height="15" fill="rgb(236,177,47)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2245" width="0.5391%" height="15" fill="rgb(235,7,49)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2229" width="0.5391%" height="15" fill="rgb(232,119,22)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2213" width="0.5391%" height="15" fill="rgb(254,73,53)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2197" width="0.5391%" height="15" fill="rgb(251,35,20)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2181" width="0.5391%" height="15" fill="rgb(241,119,20)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2191.50"></text></g><g><title>alloc::alloc::dealloc (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2165" width="0.5391%" height="15" fill="rgb(207,102,14)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2175.50"></text></g><g><title>cfree (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2149" width="0.5391%" height="15" fill="rgb(248,201,50)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2159.50"></text></g><g><title>[libc.so.6] (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2133" width="0.5391%" height="15" fill="rgb(222,185,44)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2143.50"></text></g><g><title>[libc.so.6] (1,346,457 samples, 0.54%)</title><rect x="94.4739%" y="2117" width="0.5391%" height="15" fill="rgb(218,107,18)" fg:x="235959709" fg:w="1346457"/><text x="94.7239%" y="2127.50"></text></g><g><title>cfree (3,598,602 samples, 1.44%)</title><rect x="95.0130%" y="3701" width="1.4408%" height="15" fill="rgb(237,177,39)" fg:x="237306166" fg:w="3598602"/><text x="95.2630%" y="3711.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,268,989 samples, 0.51%)</title><rect x="96.4539%" y="3701" width="0.5081%" height="15" fill="rgb(246,69,6)" fg:x="240904768" fg:w="1268989"/><text x="96.7039%" y="3711.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,268,989 samples, 0.51%)</title><rect x="96.4539%" y="3685" width="0.5081%" height="15" fill="rgb(234,208,37)" fg:x="240904768" fg:w="1268989"/><text x="96.7039%" y="3695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,268,989 samples, 0.51%)</title><rect x="96.4539%" y="3669" width="0.5081%" height="15" fill="rgb(225,4,6)" fg:x="240904768" fg:w="1268989"/><text x="96.7039%" y="3679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,268,989 samples, 0.51%)</title><rect x="96.4539%" y="3653" width="0.5081%" height="15" fill="rgb(233,45,0)" fg:x="240904768" fg:w="1268989"/><text x="96.7039%" y="3663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,268,989 samples, 0.51%)</title><rect x="96.4539%" y="3637" width="0.5081%" height="15" fill="rgb(226,136,5)" fg:x="240904768" fg:w="1268989"/><text x="96.7039%" y="3647.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,268,989 samples, 0.51%)</title><rect x="96.4539%" y="3621" width="0.5081%" height="15" fill="rgb(211,91,47)" fg:x="240904768" fg:w="1268989"/><text x="96.7039%" y="3631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,268,989 samples, 0.51%)</title><rect x="96.4539%" y="3605" width="0.5081%" height="15" fill="rgb(242,88,51)" fg:x="240904768" fg:w="1268989"/><text x="96.7039%" y="3615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,268,989 samples, 0.51%)</title><rect x="96.4539%" y="3589" width="0.5081%" height="15" fill="rgb(230,91,28)" fg:x="240904768" fg:w="1268989"/><text x="96.7039%" y="3599.50"></text></g><g><title>alloc::alloc::dealloc (1,268,989 samples, 0.51%)</title><rect x="96.4539%" y="3573" width="0.5081%" height="15" fill="rgb(254,186,29)" fg:x="240904768" fg:w="1268989"/><text x="96.7039%" y="3583.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,613,033 samples, 2.65%)</title><rect x="96.9619%" y="3701" width="2.6477%" height="15" fill="rgb(238,6,4)" fg:x="242173757" fg:w="6613033"/><text x="97.2119%" y="3711.50">cs..</text></g><g><title>all (249,761,677 samples, 100%)</title><rect x="0.0000%" y="3733" width="100.0000%" height="15" fill="rgb(221,151,16)" fg:x="0" fg:w="249761677"/><text x="0.2500%" y="3743.50"></text></g><g><title>benchmark (249,761,677 samples, 100.00%)</title><rect x="0.0000%" y="3717" width="100.0000%" height="15" fill="rgb(251,143,52)" fg:x="0" fg:w="249761677"/><text x="0.2500%" y="3727.50">benchmark</text></g><g><title>malloc (974,887 samples, 0.39%)</title><rect x="99.6097%" y="3701" width="0.3903%" height="15" fill="rgb(206,90,15)" fg:x="248786790" fg:w="974887"/><text x="99.8597%" y="3711.50"></text></g></svg></svg>