<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2454" onload="init(evt)" viewBox="0 0 1200 2454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2454" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2437.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2437.00"> </text><svg id="frames" x="10" width="1180" total_samples="266993383"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,238,237 samples, 0.46%)</title><rect x="0.0000%" y="2373" width="0.4638%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1238237"/><text x="0.2500%" y="2383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,254,825 samples, 0.47%)</title><rect x="0.4638%" y="2373" width="0.4700%" height="15" fill="rgb(217,0,24)" fg:x="1238237" fg:w="1254825"/><text x="0.7138%" y="2383.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,254,825 samples, 0.47%)</title><rect x="0.4638%" y="2357" width="0.4700%" height="15" fill="rgb(221,193,54)" fg:x="1238237" fg:w="1254825"/><text x="0.7138%" y="2367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (864,966 samples, 0.32%)</title><rect x="0.9338%" y="2373" width="0.3240%" height="15" fill="rgb(248,212,6)" fg:x="2493062" fg:w="864966"/><text x="1.1838%" y="2383.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (864,966 samples, 0.32%)</title><rect x="0.9338%" y="2357" width="0.3240%" height="15" fill="rgb(208,68,35)" fg:x="2493062" fg:w="864966"/><text x="1.1838%" y="2367.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (864,966 samples, 0.32%)</title><rect x="0.9338%" y="2341" width="0.3240%" height="15" fill="rgb(232,128,0)" fg:x="2493062" fg:w="864966"/><text x="1.1838%" y="2351.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (864,966 samples, 0.32%)</title><rect x="0.9338%" y="2325" width="0.3240%" height="15" fill="rgb(207,160,47)" fg:x="2493062" fg:w="864966"/><text x="1.1838%" y="2335.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (864,966 samples, 0.32%)</title><rect x="0.9338%" y="2309" width="0.3240%" height="15" fill="rgb(228,23,34)" fg:x="2493062" fg:w="864966"/><text x="1.1838%" y="2319.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (983,744 samples, 0.37%)</title><rect x="1.2577%" y="2373" width="0.3685%" height="15" fill="rgb(218,30,26)" fg:x="3358028" fg:w="983744"/><text x="1.5077%" y="2383.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (983,744 samples, 0.37%)</title><rect x="1.2577%" y="2357" width="0.3685%" height="15" fill="rgb(220,122,19)" fg:x="3358028" fg:w="983744"/><text x="1.5077%" y="2367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (983,744 samples, 0.37%)</title><rect x="1.2577%" y="2341" width="0.3685%" height="15" fill="rgb(250,228,42)" fg:x="3358028" fg:w="983744"/><text x="1.5077%" y="2351.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (983,744 samples, 0.37%)</title><rect x="1.2577%" y="2325" width="0.3685%" height="15" fill="rgb(240,193,28)" fg:x="3358028" fg:w="983744"/><text x="1.5077%" y="2335.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (983,744 samples, 0.37%)</title><rect x="1.2577%" y="2309" width="0.3685%" height="15" fill="rgb(216,20,37)" fg:x="3358028" fg:w="983744"/><text x="1.5077%" y="2319.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (983,744 samples, 0.37%)</title><rect x="1.2577%" y="2293" width="0.3685%" height="15" fill="rgb(206,188,39)" fg:x="3358028" fg:w="983744"/><text x="1.5077%" y="2303.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (983,744 samples, 0.37%)</title><rect x="1.2577%" y="2277" width="0.3685%" height="15" fill="rgb(217,207,13)" fg:x="3358028" fg:w="983744"/><text x="1.5077%" y="2287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (983,744 samples, 0.37%)</title><rect x="1.2577%" y="2261" width="0.3685%" height="15" fill="rgb(231,73,38)" fg:x="3358028" fg:w="983744"/><text x="1.5077%" y="2271.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (983,744 samples, 0.37%)</title><rect x="1.2577%" y="2245" width="0.3685%" height="15" fill="rgb(225,20,46)" fg:x="3358028" fg:w="983744"/><text x="1.5077%" y="2255.50"></text></g><g><title>[libc.so.6] (1,745,982 samples, 0.65%)</title><rect x="1.6262%" y="2373" width="0.6539%" height="15" fill="rgb(210,31,41)" fg:x="4341772" fg:w="1745982"/><text x="1.8762%" y="2383.50"></text></g><g><title>[benchmark] (1,244,478 samples, 0.47%)</title><rect x="1.8140%" y="2357" width="0.4661%" height="15" fill="rgb(221,200,47)" fg:x="4843276" fg:w="1244478"/><text x="2.0640%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,244,478 samples, 0.47%)</title><rect x="1.8140%" y="2341" width="0.4661%" height="15" fill="rgb(226,26,5)" fg:x="4843276" fg:w="1244478"/><text x="2.0640%" y="2351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,473,004 samples, 0.93%)</title><rect x="2.8482%" y="2357" width="0.9262%" height="15" fill="rgb(249,33,26)" fg:x="7604544" fg:w="2473004"/><text x="3.0982%" y="2367.50"></text></g><g><title>[unknown] (5,312,688 samples, 1.99%)</title><rect x="2.2801%" y="2373" width="1.9898%" height="15" fill="rgb(235,183,28)" fg:x="6087754" fg:w="5312688"/><text x="2.5301%" y="2383.50">[..</text></g><g><title>benchmark::count_nodes (1,322,894 samples, 0.50%)</title><rect x="3.7745%" y="2357" width="0.4955%" height="15" fill="rgb(221,5,38)" fg:x="10077548" fg:w="1322894"/><text x="4.0245%" y="2367.50"></text></g><g><title>_fini (1,241,643 samples, 0.47%)</title><rect x="4.2699%" y="2373" width="0.4650%" height="15" fill="rgb(247,18,42)" fg:x="11400442" fg:w="1241643"/><text x="4.5199%" y="2383.50"></text></g><g><title>[libc.so.6] (1,241,643 samples, 0.47%)</title><rect x="4.2699%" y="2357" width="0.4650%" height="15" fill="rgb(241,131,45)" fg:x="11400442" fg:w="1241643"/><text x="4.5199%" y="2367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,230,646 samples, 0.46%)</title><rect x="4.7350%" y="2069" width="0.4609%" height="15" fill="rgb(249,31,29)" fg:x="12642085" fg:w="1230646"/><text x="4.9850%" y="2079.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,230,646 samples, 0.46%)</title><rect x="4.7350%" y="2053" width="0.4609%" height="15" fill="rgb(225,111,53)" fg:x="12642085" fg:w="1230646"/><text x="4.9850%" y="2063.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,230,646 samples, 0.46%)</title><rect x="4.7350%" y="2037" width="0.4609%" height="15" fill="rgb(238,160,17)" fg:x="12642085" fg:w="1230646"/><text x="4.9850%" y="2047.50"></text></g><g><title>alloc::slice::hack::to_vec (1,230,646 samples, 0.46%)</title><rect x="4.7350%" y="2021" width="0.4609%" height="15" fill="rgb(214,148,48)" fg:x="12642085" fg:w="1230646"/><text x="4.9850%" y="2031.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,230,646 samples, 0.46%)</title><rect x="4.7350%" y="2005" width="0.4609%" height="15" fill="rgb(232,36,49)" fg:x="12642085" fg:w="1230646"/><text x="4.9850%" y="2015.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,230,646 samples, 0.46%)</title><rect x="4.7350%" y="1989" width="0.4609%" height="15" fill="rgb(209,103,24)" fg:x="12642085" fg:w="1230646"/><text x="4.9850%" y="1999.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,230,646 samples, 0.46%)</title><rect x="4.7350%" y="1973" width="0.4609%" height="15" fill="rgb(229,88,8)" fg:x="12642085" fg:w="1230646"/><text x="4.9850%" y="1983.50"></text></g><g><title>[libc.so.6] (1,230,646 samples, 0.46%)</title><rect x="4.7350%" y="1957" width="0.4609%" height="15" fill="rgb(213,181,19)" fg:x="12642085" fg:w="1230646"/><text x="4.9850%" y="1967.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,235,490 samples, 0.46%)</title><rect x="5.1959%" y="1941" width="0.4627%" height="15" fill="rgb(254,191,54)" fg:x="13872731" fg:w="1235490"/><text x="5.4459%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,235,490 samples, 0.46%)</title><rect x="5.1959%" y="1925" width="0.4627%" height="15" fill="rgb(241,83,37)" fg:x="13872731" fg:w="1235490"/><text x="5.4459%" y="1935.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,235,490 samples, 0.46%)</title><rect x="5.1959%" y="1909" width="0.4627%" height="15" fill="rgb(233,36,39)" fg:x="13872731" fg:w="1235490"/><text x="5.4459%" y="1919.50"></text></g><g><title>alloc::slice::hack::to_vec (1,235,490 samples, 0.46%)</title><rect x="5.1959%" y="1893" width="0.4627%" height="15" fill="rgb(226,3,54)" fg:x="13872731" fg:w="1235490"/><text x="5.4459%" y="1903.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,235,490 samples, 0.46%)</title><rect x="5.1959%" y="1877" width="0.4627%" height="15" fill="rgb(245,192,40)" fg:x="13872731" fg:w="1235490"/><text x="5.4459%" y="1887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,235,490 samples, 0.46%)</title><rect x="5.1959%" y="1861" width="0.4627%" height="15" fill="rgb(238,167,29)" fg:x="13872731" fg:w="1235490"/><text x="5.4459%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,235,490 samples, 0.46%)</title><rect x="5.1959%" y="1845" width="0.4627%" height="15" fill="rgb(232,182,51)" fg:x="13872731" fg:w="1235490"/><text x="5.4459%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,235,490 samples, 0.46%)</title><rect x="5.1959%" y="1829" width="0.4627%" height="15" fill="rgb(231,60,39)" fg:x="13872731" fg:w="1235490"/><text x="5.4459%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,235,490 samples, 0.46%)</title><rect x="5.1959%" y="1813" width="0.4627%" height="15" fill="rgb(208,69,12)" fg:x="13872731" fg:w="1235490"/><text x="5.4459%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,235,490 samples, 0.46%)</title><rect x="5.1959%" y="1797" width="0.4627%" height="15" fill="rgb(235,93,37)" fg:x="13872731" fg:w="1235490"/><text x="5.4459%" y="1807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,235,490 samples, 0.46%)</title><rect x="5.1959%" y="1781" width="0.4627%" height="15" fill="rgb(213,116,39)" fg:x="13872731" fg:w="1235490"/><text x="5.4459%" y="1791.50"></text></g><g><title>alloc::alloc::alloc (1,235,490 samples, 0.46%)</title><rect x="5.1959%" y="1765" width="0.4627%" height="15" fill="rgb(222,207,29)" fg:x="13872731" fg:w="1235490"/><text x="5.4459%" y="1775.50"></text></g><g><title>__rdl_alloc (1,235,490 samples, 0.46%)</title><rect x="5.1959%" y="1749" width="0.4627%" height="15" fill="rgb(206,96,30)" fg:x="13872731" fg:w="1235490"/><text x="5.4459%" y="1759.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,235,490 samples, 0.46%)</title><rect x="5.1959%" y="1733" width="0.4627%" height="15" fill="rgb(218,138,4)" fg:x="13872731" fg:w="1235490"/><text x="5.4459%" y="1743.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,278,480 samples, 0.48%)</title><rect x="6.0256%" y="1365" width="0.4788%" height="15" fill="rgb(250,191,14)" fg:x="16087873" fg:w="1278480"/><text x="6.2756%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,278,480 samples, 0.48%)</title><rect x="6.0256%" y="1349" width="0.4788%" height="15" fill="rgb(239,60,40)" fg:x="16087873" fg:w="1278480"/><text x="6.2756%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,278,480 samples, 0.48%)</title><rect x="6.0256%" y="1333" width="0.4788%" height="15" fill="rgb(206,27,48)" fg:x="16087873" fg:w="1278480"/><text x="6.2756%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (1,278,480 samples, 0.48%)</title><rect x="6.0256%" y="1317" width="0.4788%" height="15" fill="rgb(225,35,8)" fg:x="16087873" fg:w="1278480"/><text x="6.2756%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,278,480 samples, 0.48%)</title><rect x="6.0256%" y="1301" width="0.4788%" height="15" fill="rgb(250,213,24)" fg:x="16087873" fg:w="1278480"/><text x="6.2756%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,278,480 samples, 0.48%)</title><rect x="6.0256%" y="1285" width="0.4788%" height="15" fill="rgb(247,123,22)" fg:x="16087873" fg:w="1278480"/><text x="6.2756%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,278,480 samples, 0.48%)</title><rect x="6.0256%" y="1269" width="0.4788%" height="15" fill="rgb(231,138,38)" fg:x="16087873" fg:w="1278480"/><text x="6.2756%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,278,480 samples, 0.48%)</title><rect x="6.0256%" y="1253" width="0.4788%" height="15" fill="rgb(231,145,46)" fg:x="16087873" fg:w="1278480"/><text x="6.2756%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,278,480 samples, 0.48%)</title><rect x="6.0256%" y="1237" width="0.4788%" height="15" fill="rgb(251,118,11)" fg:x="16087873" fg:w="1278480"/><text x="6.2756%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,278,480 samples, 0.48%)</title><rect x="6.0256%" y="1221" width="0.4788%" height="15" fill="rgb(217,147,25)" fg:x="16087873" fg:w="1278480"/><text x="6.2756%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,278,480 samples, 0.48%)</title><rect x="6.0256%" y="1205" width="0.4788%" height="15" fill="rgb(247,81,37)" fg:x="16087873" fg:w="1278480"/><text x="6.2756%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (1,278,480 samples, 0.48%)</title><rect x="6.0256%" y="1189" width="0.4788%" height="15" fill="rgb(209,12,38)" fg:x="16087873" fg:w="1278480"/><text x="6.2756%" y="1199.50"></text></g><g><title>malloc (1,278,480 samples, 0.48%)</title><rect x="6.0256%" y="1173" width="0.4788%" height="15" fill="rgb(227,1,9)" fg:x="16087873" fg:w="1278480"/><text x="6.2756%" y="1183.50"></text></g><g><title>[libc.so.6] (1,278,480 samples, 0.48%)</title><rect x="6.0256%" y="1157" width="0.4788%" height="15" fill="rgb(248,47,43)" fg:x="16087873" fg:w="1278480"/><text x="6.2756%" y="1167.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,301,144 samples, 0.49%)</title><rect x="6.5044%" y="1221" width="0.4873%" height="15" fill="rgb(221,10,30)" fg:x="17366353" fg:w="1301144"/><text x="6.7544%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,301,144 samples, 0.49%)</title><rect x="6.5044%" y="1205" width="0.4873%" height="15" fill="rgb(210,229,1)" fg:x="17366353" fg:w="1301144"/><text x="6.7544%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,301,144 samples, 0.49%)</title><rect x="6.5044%" y="1189" width="0.4873%" height="15" fill="rgb(222,148,37)" fg:x="17366353" fg:w="1301144"/><text x="6.7544%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (1,301,144 samples, 0.49%)</title><rect x="6.5044%" y="1173" width="0.4873%" height="15" fill="rgb(234,67,33)" fg:x="17366353" fg:w="1301144"/><text x="6.7544%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,301,144 samples, 0.49%)</title><rect x="6.5044%" y="1157" width="0.4873%" height="15" fill="rgb(247,98,35)" fg:x="17366353" fg:w="1301144"/><text x="6.7544%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,301,144 samples, 0.49%)</title><rect x="6.5044%" y="1141" width="0.4873%" height="15" fill="rgb(247,138,52)" fg:x="17366353" fg:w="1301144"/><text x="6.7544%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,301,144 samples, 0.49%)</title><rect x="6.5044%" y="1125" width="0.4873%" height="15" fill="rgb(213,79,30)" fg:x="17366353" fg:w="1301144"/><text x="6.7544%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,301,144 samples, 0.49%)</title><rect x="6.5044%" y="1109" width="0.4873%" height="15" fill="rgb(246,177,23)" fg:x="17366353" fg:w="1301144"/><text x="6.7544%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,301,144 samples, 0.49%)</title><rect x="6.5044%" y="1093" width="0.4873%" height="15" fill="rgb(230,62,27)" fg:x="17366353" fg:w="1301144"/><text x="6.7544%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,301,144 samples, 0.49%)</title><rect x="6.5044%" y="1077" width="0.4873%" height="15" fill="rgb(216,154,8)" fg:x="17366353" fg:w="1301144"/><text x="6.7544%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,301,144 samples, 0.49%)</title><rect x="6.5044%" y="1061" width="0.4873%" height="15" fill="rgb(244,35,45)" fg:x="17366353" fg:w="1301144"/><text x="6.7544%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (1,301,144 samples, 0.49%)</title><rect x="6.5044%" y="1045" width="0.4873%" height="15" fill="rgb(251,115,12)" fg:x="17366353" fg:w="1301144"/><text x="6.7544%" y="1055.50"></text></g><g><title>malloc (1,301,144 samples, 0.49%)</title><rect x="6.5044%" y="1029" width="0.4873%" height="15" fill="rgb(240,54,50)" fg:x="17366353" fg:w="1301144"/><text x="6.7544%" y="1039.50"></text></g><g><title>[libc.so.6] (1,301,144 samples, 0.49%)</title><rect x="6.5044%" y="1013" width="0.4873%" height="15" fill="rgb(233,84,52)" fg:x="17366353" fg:w="1301144"/><text x="6.7544%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,490,002 samples, 0.93%)</title><rect x="6.5044%" y="1349" width="0.9326%" height="15" fill="rgb(207,117,47)" fg:x="17366353" fg:w="2490002"/><text x="6.7544%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,490,002 samples, 0.93%)</title><rect x="6.5044%" y="1333" width="0.9326%" height="15" fill="rgb(249,43,39)" fg:x="17366353" fg:w="2490002"/><text x="6.7544%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (2,490,002 samples, 0.93%)</title><rect x="6.5044%" y="1317" width="0.9326%" height="15" fill="rgb(209,38,44)" fg:x="17366353" fg:w="2490002"/><text x="6.7544%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,490,002 samples, 0.93%)</title><rect x="6.5044%" y="1301" width="0.9326%" height="15" fill="rgb(236,212,23)" fg:x="17366353" fg:w="2490002"/><text x="6.7544%" y="1311.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,490,002 samples, 0.93%)</title><rect x="6.5044%" y="1285" width="0.9326%" height="15" fill="rgb(242,79,21)" fg:x="17366353" fg:w="2490002"/><text x="6.7544%" y="1295.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,490,002 samples, 0.93%)</title><rect x="6.5044%" y="1269" width="0.9326%" height="15" fill="rgb(211,96,35)" fg:x="17366353" fg:w="2490002"/><text x="6.7544%" y="1279.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,490,002 samples, 0.93%)</title><rect x="6.5044%" y="1253" width="0.9326%" height="15" fill="rgb(253,215,40)" fg:x="17366353" fg:w="2490002"/><text x="6.7544%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,490,002 samples, 0.93%)</title><rect x="6.5044%" y="1237" width="0.9326%" height="15" fill="rgb(211,81,21)" fg:x="17366353" fg:w="2490002"/><text x="6.7544%" y="1247.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="1221" width="0.4453%" height="15" fill="rgb(208,190,38)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="1205" width="0.4453%" height="15" fill="rgb(235,213,38)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="1189" width="0.4453%" height="15" fill="rgb(237,122,38)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="1173" width="0.4453%" height="15" fill="rgb(244,218,35)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="1157" width="0.4453%" height="15" fill="rgb(240,68,47)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="1167.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="1141" width="0.4453%" height="15" fill="rgb(210,16,53)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="1151.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="1125" width="0.4453%" height="15" fill="rgb(235,124,12)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="1109" width="0.4453%" height="15" fill="rgb(224,169,11)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="1093" width="0.4453%" height="15" fill="rgb(250,166,2)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="1103.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="1077" width="0.4453%" height="15" fill="rgb(242,216,29)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="1061" width="0.4453%" height="15" fill="rgb(230,116,27)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="1045" width="0.4453%" height="15" fill="rgb(228,99,48)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="1029" width="0.4453%" height="15" fill="rgb(253,11,6)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="1013" width="0.4453%" height="15" fill="rgb(247,143,39)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="1023.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="997" width="0.4453%" height="15" fill="rgb(236,97,10)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="1007.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="981" width="0.4453%" height="15" fill="rgb(233,208,19)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="965" width="0.4453%" height="15" fill="rgb(216,164,2)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="949" width="0.4453%" height="15" fill="rgb(220,129,5)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="933" width="0.4453%" height="15" fill="rgb(242,17,10)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="917" width="0.4453%" height="15" fill="rgb(242,107,0)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="901" width="0.4453%" height="15" fill="rgb(251,28,31)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="885" width="0.4453%" height="15" fill="rgb(233,223,10)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="869" width="0.4453%" height="15" fill="rgb(215,21,27)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="853" width="0.4453%" height="15" fill="rgb(232,23,21)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="837" width="0.4453%" height="15" fill="rgb(244,5,23)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="821" width="0.4453%" height="15" fill="rgb(226,81,46)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="805" width="0.4453%" height="15" fill="rgb(247,70,30)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="789" width="0.4453%" height="15" fill="rgb(212,68,19)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="773" width="0.4453%" height="15" fill="rgb(240,187,13)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="783.50"></text></g><g><title>alloc::alloc::alloc (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="757" width="0.4453%" height="15" fill="rgb(223,113,26)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="767.50"></text></g><g><title>malloc (1,188,858 samples, 0.45%)</title><rect x="6.9917%" y="741" width="0.4453%" height="15" fill="rgb(206,192,2)" fg:x="18667497" fg:w="1188858"/><text x="7.2417%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,834,887 samples, 2.19%)</title><rect x="5.6586%" y="1637" width="2.1854%" height="15" fill="rgb(241,108,4)" fg:x="15108221" fg:w="5834887"/><text x="5.9086%" y="1647.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,834,887 samples, 2.19%)</title><rect x="5.6586%" y="1621" width="2.1854%" height="15" fill="rgb(247,173,49)" fg:x="15108221" fg:w="5834887"/><text x="5.9086%" y="1631.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,834,887 samples, 2.19%)</title><rect x="5.6586%" y="1605" width="2.1854%" height="15" fill="rgb(224,114,35)" fg:x="15108221" fg:w="5834887"/><text x="5.9086%" y="1615.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,834,887 samples, 2.19%)</title><rect x="5.6586%" y="1589" width="2.1854%" height="15" fill="rgb(245,159,27)" fg:x="15108221" fg:w="5834887"/><text x="5.9086%" y="1599.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,834,887 samples, 2.19%)</title><rect x="5.6586%" y="1573" width="2.1854%" height="15" fill="rgb(245,172,44)" fg:x="15108221" fg:w="5834887"/><text x="5.9086%" y="1583.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,834,887 samples, 2.19%)</title><rect x="5.6586%" y="1557" width="2.1854%" height="15" fill="rgb(236,23,11)" fg:x="15108221" fg:w="5834887"/><text x="5.9086%" y="1567.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,834,887 samples, 2.19%)</title><rect x="5.6586%" y="1541" width="2.1854%" height="15" fill="rgb(205,117,38)" fg:x="15108221" fg:w="5834887"/><text x="5.9086%" y="1551.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,834,887 samples, 2.19%)</title><rect x="5.6586%" y="1525" width="2.1854%" height="15" fill="rgb(237,72,25)" fg:x="15108221" fg:w="5834887"/><text x="5.9086%" y="1535.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,834,887 samples, 2.19%)</title><rect x="5.6586%" y="1509" width="2.1854%" height="15" fill="rgb(244,70,9)" fg:x="15108221" fg:w="5834887"/><text x="5.9086%" y="1519.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,834,887 samples, 2.19%)</title><rect x="5.6586%" y="1493" width="2.1854%" height="15" fill="rgb(217,125,39)" fg:x="15108221" fg:w="5834887"/><text x="5.9086%" y="1503.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,834,887 samples, 2.19%)</title><rect x="5.6586%" y="1477" width="2.1854%" height="15" fill="rgb(235,36,10)" fg:x="15108221" fg:w="5834887"/><text x="5.9086%" y="1487.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,834,887 samples, 2.19%)</title><rect x="5.6586%" y="1461" width="2.1854%" height="15" fill="rgb(251,123,47)" fg:x="15108221" fg:w="5834887"/><text x="5.9086%" y="1471.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,834,887 samples, 2.19%)</title><rect x="5.6586%" y="1445" width="2.1854%" height="15" fill="rgb(221,13,13)" fg:x="15108221" fg:w="5834887"/><text x="5.9086%" y="1455.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,834,887 samples, 2.19%)</title><rect x="5.6586%" y="1429" width="2.1854%" height="15" fill="rgb(238,131,9)" fg:x="15108221" fg:w="5834887"/><text x="5.9086%" y="1439.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,855,235 samples, 1.82%)</title><rect x="6.0256%" y="1413" width="1.8185%" height="15" fill="rgb(211,50,8)" fg:x="16087873" fg:w="4855235"/><text x="6.2756%" y="1423.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,855,235 samples, 1.82%)</title><rect x="6.0256%" y="1397" width="1.8185%" height="15" fill="rgb(245,182,24)" fg:x="16087873" fg:w="4855235"/><text x="6.2756%" y="1407.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,855,235 samples, 1.82%)</title><rect x="6.0256%" y="1381" width="1.8185%" height="15" fill="rgb(242,14,37)" fg:x="16087873" fg:w="4855235"/><text x="6.2756%" y="1391.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,576,755 samples, 1.34%)</title><rect x="6.5044%" y="1365" width="1.3396%" height="15" fill="rgb(246,228,12)" fg:x="17366353" fg:w="3576755"/><text x="6.7544%" y="1375.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1349" width="0.4070%" height="15" fill="rgb(213,55,15)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1359.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1333" width="0.4070%" height="15" fill="rgb(209,9,3)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1317" width="0.4070%" height="15" fill="rgb(230,59,30)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1327.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1301" width="0.4070%" height="15" fill="rgb(209,121,21)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1311.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1285" width="0.4070%" height="15" fill="rgb(220,109,13)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1269" width="0.4070%" height="15" fill="rgb(232,18,1)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1253" width="0.4070%" height="15" fill="rgb(215,41,42)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1263.50"></text></g><g><title>alloc::slice::hack::to_vec (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1237" width="0.4070%" height="15" fill="rgb(224,123,36)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1247.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1221" width="0.4070%" height="15" fill="rgb(240,125,3)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1205" width="0.4070%" height="15" fill="rgb(205,98,50)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1189" width="0.4070%" height="15" fill="rgb(205,185,37)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1173" width="0.4070%" height="15" fill="rgb(238,207,15)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1157" width="0.4070%" height="15" fill="rgb(213,199,42)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1141" width="0.4070%" height="15" fill="rgb(235,201,11)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1125" width="0.4070%" height="15" fill="rgb(207,46,11)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1109" width="0.4070%" height="15" fill="rgb(241,35,35)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1119.50"></text></g><g><title>malloc (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1093" width="0.4070%" height="15" fill="rgb(243,32,47)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1103.50"></text></g><g><title>[libc.so.6] (1,086,753 samples, 0.41%)</title><rect x="7.4370%" y="1077" width="0.4070%" height="15" fill="rgb(247,202,23)" fg:x="19856355" fg:w="1086753"/><text x="7.6870%" y="1087.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (9,464,975 samples, 3.55%)</title><rect x="4.7350%" y="2085" width="3.5450%" height="15" fill="rgb(219,102,11)" fg:x="12642085" fg:w="9464975"/><text x="4.9850%" y="2095.50">&lt;ben..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,234,329 samples, 3.08%)</title><rect x="5.1959%" y="2069" width="3.0841%" height="15" fill="rgb(243,110,44)" fg:x="13872731" fg:w="8234329"/><text x="5.4459%" y="2079.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,234,329 samples, 3.08%)</title><rect x="5.1959%" y="2053" width="3.0841%" height="15" fill="rgb(222,74,54)" fg:x="13872731" fg:w="8234329"/><text x="5.4459%" y="2063.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,234,329 samples, 3.08%)</title><rect x="5.1959%" y="2037" width="3.0841%" height="15" fill="rgb(216,99,12)" fg:x="13872731" fg:w="8234329"/><text x="5.4459%" y="2047.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,234,329 samples, 3.08%)</title><rect x="5.1959%" y="2021" width="3.0841%" height="15" fill="rgb(226,22,26)" fg:x="13872731" fg:w="8234329"/><text x="5.4459%" y="2031.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,234,329 samples, 3.08%)</title><rect x="5.1959%" y="2005" width="3.0841%" height="15" fill="rgb(217,163,10)" fg:x="13872731" fg:w="8234329"/><text x="5.4459%" y="2015.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,234,329 samples, 3.08%)</title><rect x="5.1959%" y="1989" width="3.0841%" height="15" fill="rgb(213,25,53)" fg:x="13872731" fg:w="8234329"/><text x="5.4459%" y="1999.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,234,329 samples, 3.08%)</title><rect x="5.1959%" y="1973" width="3.0841%" height="15" fill="rgb(252,105,26)" fg:x="13872731" fg:w="8234329"/><text x="5.4459%" y="1983.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,234,329 samples, 3.08%)</title><rect x="5.1959%" y="1957" width="3.0841%" height="15" fill="rgb(220,39,43)" fg:x="13872731" fg:w="8234329"/><text x="5.4459%" y="1967.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1941" width="2.6214%" height="15" fill="rgb(229,68,48)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1951.50">&lt;s..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1925" width="2.6214%" height="15" fill="rgb(252,8,32)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1935.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1909" width="2.6214%" height="15" fill="rgb(223,20,43)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1919.50">al..</text></g><g><title>alloc::slice::hack::to_vec (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1893" width="2.6214%" height="15" fill="rgb(229,81,49)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1903.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1877" width="2.6214%" height="15" fill="rgb(236,28,36)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1887.50">&lt;T..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1861" width="2.6214%" height="15" fill="rgb(249,185,26)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1871.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1845" width="2.6214%" height="15" fill="rgb(249,174,33)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1855.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1829" width="2.6214%" height="15" fill="rgb(233,201,37)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1839.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1813" width="2.6214%" height="15" fill="rgb(221,78,26)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1823.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1797" width="2.6214%" height="15" fill="rgb(250,127,30)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1807.50">&lt;s..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1781" width="2.6214%" height="15" fill="rgb(230,49,44)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1791.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1765" width="2.6214%" height="15" fill="rgb(229,67,23)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1775.50">al..</text></g><g><title>alloc::slice::hack::to_vec (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1749" width="2.6214%" height="15" fill="rgb(249,83,47)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1759.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1733" width="2.6214%" height="15" fill="rgb(215,43,3)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1743.50">&lt;T..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1717" width="2.6214%" height="15" fill="rgb(238,154,13)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1727.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1701" width="2.6214%" height="15" fill="rgb(219,56,2)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1711.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1685" width="2.6214%" height="15" fill="rgb(233,0,4)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1695.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1669" width="2.6214%" height="15" fill="rgb(235,30,7)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1679.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,998,839 samples, 2.62%)</title><rect x="5.6586%" y="1653" width="2.6214%" height="15" fill="rgb(250,79,13)" fg:x="15108221" fg:w="6998839"/><text x="5.9086%" y="1663.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1637" width="0.4359%" height="15" fill="rgb(211,146,34)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1647.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1621" width="0.4359%" height="15" fill="rgb(228,22,38)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1605" width="0.4359%" height="15" fill="rgb(235,168,5)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1615.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1589" width="0.4359%" height="15" fill="rgb(221,155,16)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1599.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1573" width="0.4359%" height="15" fill="rgb(215,215,53)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1557" width="0.4359%" height="15" fill="rgb(223,4,10)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1567.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1541" width="0.4359%" height="15" fill="rgb(234,103,6)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1551.50"></text></g><g><title>alloc::slice::hack::to_vec (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1525" width="0.4359%" height="15" fill="rgb(227,97,0)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1535.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1509" width="0.4359%" height="15" fill="rgb(234,150,53)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1493" width="0.4359%" height="15" fill="rgb(228,201,54)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1477" width="0.4359%" height="15" fill="rgb(222,22,37)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1461" width="0.4359%" height="15" fill="rgb(237,53,32)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1445" width="0.4359%" height="15" fill="rgb(233,25,53)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1429" width="0.4359%" height="15" fill="rgb(210,40,34)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1413" width="0.4359%" height="15" fill="rgb(241,220,44)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1397" width="0.4359%" height="15" fill="rgb(235,28,35)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1407.50"></text></g><g><title>malloc (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1381" width="0.4359%" height="15" fill="rgb(210,56,17)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1391.50"></text></g><g><title>[libc.so.6] (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1365" width="0.4359%" height="15" fill="rgb(224,130,29)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1375.50"></text></g><g><title>[libc.so.6] (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1349" width="0.4359%" height="15" fill="rgb(235,212,8)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1359.50"></text></g><g><title>[libc.so.6] (1,163,952 samples, 0.44%)</title><rect x="7.8441%" y="1333" width="0.4359%" height="15" fill="rgb(223,33,50)" fg:x="20943108" fg:w="1163952"/><text x="8.0941%" y="1343.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (931,181 samples, 0.35%)</title><rect x="8.2800%" y="1013" width="0.3488%" height="15" fill="rgb(219,149,13)" fg:x="22107060" fg:w="931181"/><text x="8.5300%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (931,181 samples, 0.35%)</title><rect x="8.2800%" y="997" width="0.3488%" height="15" fill="rgb(250,156,29)" fg:x="22107060" fg:w="931181"/><text x="8.5300%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (931,181 samples, 0.35%)</title><rect x="8.2800%" y="981" width="0.3488%" height="15" fill="rgb(216,193,19)" fg:x="22107060" fg:w="931181"/><text x="8.5300%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (931,181 samples, 0.35%)</title><rect x="8.2800%" y="965" width="0.3488%" height="15" fill="rgb(216,135,14)" fg:x="22107060" fg:w="931181"/><text x="8.5300%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (931,181 samples, 0.35%)</title><rect x="8.2800%" y="949" width="0.3488%" height="15" fill="rgb(241,47,5)" fg:x="22107060" fg:w="931181"/><text x="8.5300%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (931,181 samples, 0.35%)</title><rect x="8.2800%" y="933" width="0.3488%" height="15" fill="rgb(233,42,35)" fg:x="22107060" fg:w="931181"/><text x="8.5300%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (931,181 samples, 0.35%)</title><rect x="8.2800%" y="917" width="0.3488%" height="15" fill="rgb(231,13,6)" fg:x="22107060" fg:w="931181"/><text x="8.5300%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (931,181 samples, 0.35%)</title><rect x="8.2800%" y="901" width="0.3488%" height="15" fill="rgb(207,181,40)" fg:x="22107060" fg:w="931181"/><text x="8.5300%" y="911.50"></text></g><g><title>cfree (931,181 samples, 0.35%)</title><rect x="8.2800%" y="885" width="0.3488%" height="15" fill="rgb(254,173,49)" fg:x="22107060" fg:w="931181"/><text x="8.5300%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="2085" width="0.8297%" height="15" fill="rgb(221,1,38)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="2069" width="0.8297%" height="15" fill="rgb(206,124,46)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="2053" width="0.8297%" height="15" fill="rgb(249,21,11)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="2037" width="0.8297%" height="15" fill="rgb(222,201,40)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="2021" width="0.8297%" height="15" fill="rgb(235,61,29)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="2005" width="0.8297%" height="15" fill="rgb(219,207,3)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="2015.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1989" width="0.8297%" height="15" fill="rgb(222,56,46)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1999.50"></text></g><g><title>core::mem::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1973" width="0.8297%" height="15" fill="rgb(239,76,54)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1957" width="0.8297%" height="15" fill="rgb(231,124,27)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1967.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1941" width="0.8297%" height="15" fill="rgb(249,195,6)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1951.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1925" width="0.8297%" height="15" fill="rgb(237,174,47)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1909" width="0.8297%" height="15" fill="rgb(206,201,31)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1893" width="0.8297%" height="15" fill="rgb(231,57,52)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1903.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1877" width="0.8297%" height="15" fill="rgb(248,177,22)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1861" width="0.8297%" height="15" fill="rgb(215,211,37)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1845" width="0.8297%" height="15" fill="rgb(241,128,51)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1829" width="0.8297%" height="15" fill="rgb(227,165,31)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1813" width="0.8297%" height="15" fill="rgb(228,167,24)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1823.50"></text></g><g><title>core::mem::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1797" width="0.8297%" height="15" fill="rgb(228,143,12)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1781" width="0.8297%" height="15" fill="rgb(249,149,8)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1791.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1765" width="0.8297%" height="15" fill="rgb(243,35,44)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1775.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1749" width="0.8297%" height="15" fill="rgb(246,89,9)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1733" width="0.8297%" height="15" fill="rgb(233,213,13)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1743.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1717" width="0.8297%" height="15" fill="rgb(233,141,41)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1727.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1701" width="0.8297%" height="15" fill="rgb(239,167,4)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1685" width="0.8297%" height="15" fill="rgb(209,217,16)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1669" width="0.8297%" height="15" fill="rgb(219,88,35)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1653" width="0.8297%" height="15" fill="rgb(220,193,23)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1637" width="0.8297%" height="15" fill="rgb(230,90,52)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1621" width="0.8297%" height="15" fill="rgb(252,106,19)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1605" width="0.8297%" height="15" fill="rgb(206,74,20)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1589" width="0.8297%" height="15" fill="rgb(230,138,44)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1599.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1573" width="0.8297%" height="15" fill="rgb(235,182,43)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1583.50"></text></g><g><title>core::mem::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1557" width="0.8297%" height="15" fill="rgb(242,16,51)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1541" width="0.8297%" height="15" fill="rgb(248,9,4)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1551.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1525" width="0.8297%" height="15" fill="rgb(210,31,22)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1535.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1509" width="0.8297%" height="15" fill="rgb(239,54,39)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1493" width="0.8297%" height="15" fill="rgb(230,99,41)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1477" width="0.8297%" height="15" fill="rgb(253,106,12)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1487.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1461" width="0.8297%" height="15" fill="rgb(213,46,41)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1445" width="0.8297%" height="15" fill="rgb(215,133,35)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1429" width="0.8297%" height="15" fill="rgb(213,28,5)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1413" width="0.8297%" height="15" fill="rgb(215,77,49)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1397" width="0.8297%" height="15" fill="rgb(248,100,22)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1381" width="0.8297%" height="15" fill="rgb(208,67,9)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1365" width="0.8297%" height="15" fill="rgb(219,133,21)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1349" width="0.8297%" height="15" fill="rgb(246,46,29)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1359.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1333" width="0.8297%" height="15" fill="rgb(246,185,52)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1343.50"></text></g><g><title>core::mem::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1317" width="0.8297%" height="15" fill="rgb(252,136,11)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1301" width="0.8297%" height="15" fill="rgb(219,138,53)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1311.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1285" width="0.8297%" height="15" fill="rgb(211,51,23)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1295.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1269" width="0.8297%" height="15" fill="rgb(247,221,28)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1253" width="0.8297%" height="15" fill="rgb(251,222,45)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1237" width="0.8297%" height="15" fill="rgb(217,162,53)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1247.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1221" width="0.8297%" height="15" fill="rgb(229,93,14)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1205" width="0.8297%" height="15" fill="rgb(209,67,49)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1189" width="0.8297%" height="15" fill="rgb(213,87,29)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1173" width="0.8297%" height="15" fill="rgb(205,151,52)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1157" width="0.8297%" height="15" fill="rgb(253,215,39)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1141" width="0.8297%" height="15" fill="rgb(221,220,41)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1125" width="0.8297%" height="15" fill="rgb(218,133,21)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1109" width="0.8297%" height="15" fill="rgb(221,193,43)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1093" width="0.8297%" height="15" fill="rgb(240,128,52)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1103.50"></text></g><g><title>core::mem::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1077" width="0.8297%" height="15" fill="rgb(253,114,12)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1061" width="0.8297%" height="15" fill="rgb(215,223,47)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1045" width="0.8297%" height="15" fill="rgb(248,225,23)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,215,152 samples, 0.83%)</title><rect x="8.2800%" y="1029" width="0.8297%" height="15" fill="rgb(250,108,0)" fg:x="22107060" fg:w="2215152"/><text x="8.5300%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="1013" width="0.4809%" height="15" fill="rgb(228,208,7)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="997" width="0.4809%" height="15" fill="rgb(244,45,10)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="1007.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="981" width="0.4809%" height="15" fill="rgb(207,125,25)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="965" width="0.4809%" height="15" fill="rgb(210,195,18)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="949" width="0.4809%" height="15" fill="rgb(249,80,12)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="933" width="0.4809%" height="15" fill="rgb(221,65,9)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="917" width="0.4809%" height="15" fill="rgb(235,49,36)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="901" width="0.4809%" height="15" fill="rgb(225,32,20)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="885" width="0.4809%" height="15" fill="rgb(215,141,46)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="869" width="0.4809%" height="15" fill="rgb(250,160,47)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="853" width="0.4809%" height="15" fill="rgb(216,222,40)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="863.50"></text></g><g><title>core::mem::drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="837" width="0.4809%" height="15" fill="rgb(234,217,39)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="821" width="0.4809%" height="15" fill="rgb(207,178,40)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="831.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="805" width="0.4809%" height="15" fill="rgb(221,136,13)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="789" width="0.4809%" height="15" fill="rgb(249,199,10)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="773" width="0.4809%" height="15" fill="rgb(249,222,13)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="757" width="0.4809%" height="15" fill="rgb(244,185,38)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="767.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="741" width="0.4809%" height="15" fill="rgb(236,202,9)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="725" width="0.4809%" height="15" fill="rgb(250,229,37)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="709" width="0.4809%" height="15" fill="rgb(206,174,23)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="693" width="0.4809%" height="15" fill="rgb(211,33,43)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="677" width="0.4809%" height="15" fill="rgb(245,58,50)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="661" width="0.4809%" height="15" fill="rgb(244,68,36)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="645" width="0.4809%" height="15" fill="rgb(232,229,15)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="629" width="0.4809%" height="15" fill="rgb(254,30,23)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="613" width="0.4809%" height="15" fill="rgb(235,160,14)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="623.50"></text></g><g><title>core::mem::drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="597" width="0.4809%" height="15" fill="rgb(212,155,44)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="581" width="0.4809%" height="15" fill="rgb(226,2,50)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="565" width="0.4809%" height="15" fill="rgb(234,177,6)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="549" width="0.4809%" height="15" fill="rgb(217,24,9)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="533" width="0.4809%" height="15" fill="rgb(220,13,46)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="517" width="0.4809%" height="15" fill="rgb(239,221,27)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="527.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="501" width="0.4809%" height="15" fill="rgb(222,198,25)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="485" width="0.4809%" height="15" fill="rgb(211,99,13)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="469" width="0.4809%" height="15" fill="rgb(232,111,31)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="453" width="0.4809%" height="15" fill="rgb(245,82,37)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="437" width="0.4809%" height="15" fill="rgb(227,149,46)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="421" width="0.4809%" height="15" fill="rgb(218,36,50)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="405" width="0.4809%" height="15" fill="rgb(226,80,48)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="389" width="0.4809%" height="15" fill="rgb(238,224,15)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="373" width="0.4809%" height="15" fill="rgb(241,136,10)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="383.50"></text></g><g><title>core::mem::drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="357" width="0.4809%" height="15" fill="rgb(208,32,45)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="341" width="0.4809%" height="15" fill="rgb(207,135,9)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="325" width="0.4809%" height="15" fill="rgb(206,86,44)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="309" width="0.4809%" height="15" fill="rgb(245,177,15)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="319.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="293" width="0.4809%" height="15" fill="rgb(206,64,50)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="303.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="277" width="0.4809%" height="15" fill="rgb(234,36,40)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="287.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="261" width="0.4809%" height="15" fill="rgb(213,64,8)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="271.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="245" width="0.4809%" height="15" fill="rgb(210,75,36)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="255.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="229" width="0.4809%" height="15" fill="rgb(229,88,21)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="213" width="0.4809%" height="15" fill="rgb(252,204,47)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="223.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,283,971 samples, 0.48%)</title><rect x="8.6288%" y="197" width="0.4809%" height="15" fill="rgb(208,77,27)" fg:x="23038241" fg:w="1283971"/><text x="8.8788%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (2,509,588 samples, 0.94%)</title><rect x="9.1097%" y="2069" width="0.9399%" height="15" fill="rgb(221,76,26)" fg:x="24322212" fg:w="2509588"/><text x="9.3597%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,509,588 samples, 0.94%)</title><rect x="9.1097%" y="2053" width="0.9399%" height="15" fill="rgb(225,139,18)" fg:x="24322212" fg:w="2509588"/><text x="9.3597%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,509,588 samples, 0.94%)</title><rect x="9.1097%" y="2037" width="0.9399%" height="15" fill="rgb(230,137,11)" fg:x="24322212" fg:w="2509588"/><text x="9.3597%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,509,588 samples, 0.94%)</title><rect x="9.1097%" y="2021" width="0.9399%" height="15" fill="rgb(212,28,1)" fg:x="24322212" fg:w="2509588"/><text x="9.3597%" y="2031.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,509,588 samples, 0.94%)</title><rect x="9.1097%" y="2005" width="0.9399%" height="15" fill="rgb(248,164,17)" fg:x="24322212" fg:w="2509588"/><text x="9.3597%" y="2015.50"></text></g><g><title>malloc (2,509,588 samples, 0.94%)</title><rect x="9.1097%" y="1989" width="0.9399%" height="15" fill="rgb(222,171,42)" fg:x="24322212" fg:w="2509588"/><text x="9.3597%" y="1999.50"></text></g><g><title>[libc.so.6] (2,509,588 samples, 0.94%)</title><rect x="9.1097%" y="1973" width="0.9399%" height="15" fill="rgb(243,84,45)" fg:x="24322212" fg:w="2509588"/><text x="9.3597%" y="1983.50"></text></g><g><title>[libc.so.6] (2,509,588 samples, 0.94%)</title><rect x="9.1097%" y="1957" width="0.9399%" height="15" fill="rgb(252,49,23)" fg:x="24322212" fg:w="2509588"/><text x="9.3597%" y="1967.50"></text></g><g><title>[libc.so.6] (1,242,158 samples, 0.47%)</title><rect x="9.5844%" y="1941" width="0.4652%" height="15" fill="rgb(215,19,7)" fg:x="25589642" fg:w="1242158"/><text x="9.8344%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,498,440 samples, 0.94%)</title><rect x="10.0496%" y="2053" width="0.9358%" height="15" fill="rgb(238,81,41)" fg:x="26831800" fg:w="2498440"/><text x="10.2996%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,498,440 samples, 0.94%)</title><rect x="10.0496%" y="2037" width="0.9358%" height="15" fill="rgb(210,199,37)" fg:x="26831800" fg:w="2498440"/><text x="10.2996%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,498,440 samples, 0.94%)</title><rect x="10.0496%" y="2021" width="0.9358%" height="15" fill="rgb(244,192,49)" fg:x="26831800" fg:w="2498440"/><text x="10.2996%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,498,440 samples, 0.94%)</title><rect x="10.0496%" y="2005" width="0.9358%" height="15" fill="rgb(226,211,11)" fg:x="26831800" fg:w="2498440"/><text x="10.2996%" y="2015.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,498,440 samples, 0.94%)</title><rect x="10.0496%" y="1989" width="0.9358%" height="15" fill="rgb(236,162,54)" fg:x="26831800" fg:w="2498440"/><text x="10.2996%" y="1999.50"></text></g><g><title>malloc (2,498,440 samples, 0.94%)</title><rect x="10.0496%" y="1973" width="0.9358%" height="15" fill="rgb(220,229,9)" fg:x="26831800" fg:w="2498440"/><text x="10.2996%" y="1983.50"></text></g><g><title>[libc.so.6] (2,498,440 samples, 0.94%)</title><rect x="10.0496%" y="1957" width="0.9358%" height="15" fill="rgb(250,87,22)" fg:x="26831800" fg:w="2498440"/><text x="10.2996%" y="1967.50"></text></g><g><title>[libc.so.6] (1,255,482 samples, 0.47%)</title><rect x="10.5152%" y="1941" width="0.4702%" height="15" fill="rgb(239,43,17)" fg:x="28074758" fg:w="1255482"/><text x="10.7652%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,339,542 samples, 0.88%)</title><rect x="10.9854%" y="2037" width="0.8763%" height="15" fill="rgb(231,177,25)" fg:x="29330240" fg:w="2339542"/><text x="11.2354%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,339,542 samples, 0.88%)</title><rect x="10.9854%" y="2021" width="0.8763%" height="15" fill="rgb(219,179,1)" fg:x="29330240" fg:w="2339542"/><text x="11.2354%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,339,542 samples, 0.88%)</title><rect x="10.9854%" y="2005" width="0.8763%" height="15" fill="rgb(238,219,53)" fg:x="29330240" fg:w="2339542"/><text x="11.2354%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,339,542 samples, 0.88%)</title><rect x="10.9854%" y="1989" width="0.8763%" height="15" fill="rgb(232,167,36)" fg:x="29330240" fg:w="2339542"/><text x="11.2354%" y="1999.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,339,542 samples, 0.88%)</title><rect x="10.9854%" y="1973" width="0.8763%" height="15" fill="rgb(244,19,51)" fg:x="29330240" fg:w="2339542"/><text x="11.2354%" y="1983.50"></text></g><g><title>malloc (2,339,542 samples, 0.88%)</title><rect x="10.9854%" y="1957" width="0.8763%" height="15" fill="rgb(224,6,22)" fg:x="29330240" fg:w="2339542"/><text x="11.2354%" y="1967.50"></text></g><g><title>[libc.so.6] (2,339,542 samples, 0.88%)</title><rect x="10.9854%" y="1941" width="0.8763%" height="15" fill="rgb(224,145,5)" fg:x="29330240" fg:w="2339542"/><text x="11.2354%" y="1951.50"></text></g><g><title>[libc.so.6] (2,339,542 samples, 0.88%)</title><rect x="10.9854%" y="1925" width="0.8763%" height="15" fill="rgb(234,130,49)" fg:x="29330240" fg:w="2339542"/><text x="11.2354%" y="1935.50"></text></g><g><title>[libc.so.6] (2,339,542 samples, 0.88%)</title><rect x="10.9854%" y="1909" width="0.8763%" height="15" fill="rgb(254,6,2)" fg:x="29330240" fg:w="2339542"/><text x="11.2354%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,260,942 samples, 0.47%)</title><rect x="11.8616%" y="2005" width="0.4723%" height="15" fill="rgb(208,96,46)" fg:x="31669782" fg:w="1260942"/><text x="12.1116%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,260,942 samples, 0.47%)</title><rect x="11.8616%" y="1989" width="0.4723%" height="15" fill="rgb(239,3,39)" fg:x="31669782" fg:w="1260942"/><text x="12.1116%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,260,942 samples, 0.47%)</title><rect x="11.8616%" y="1973" width="0.4723%" height="15" fill="rgb(233,210,1)" fg:x="31669782" fg:w="1260942"/><text x="12.1116%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,260,942 samples, 0.47%)</title><rect x="11.8616%" y="1957" width="0.4723%" height="15" fill="rgb(244,137,37)" fg:x="31669782" fg:w="1260942"/><text x="12.1116%" y="1967.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,260,942 samples, 0.47%)</title><rect x="11.8616%" y="1941" width="0.4723%" height="15" fill="rgb(240,136,2)" fg:x="31669782" fg:w="1260942"/><text x="12.1116%" y="1951.50"></text></g><g><title>malloc (1,260,942 samples, 0.47%)</title><rect x="11.8616%" y="1925" width="0.4723%" height="15" fill="rgb(239,18,37)" fg:x="31669782" fg:w="1260942"/><text x="12.1116%" y="1935.50"></text></g><g><title>[libc.so.6] (1,260,942 samples, 0.47%)</title><rect x="11.8616%" y="1909" width="0.4723%" height="15" fill="rgb(218,185,22)" fg:x="31669782" fg:w="1260942"/><text x="12.1116%" y="1919.50"></text></g><g><title>benchmark::json_to_html_node (1,146,706 samples, 0.43%)</title><rect x="12.3339%" y="1989" width="0.4295%" height="15" fill="rgb(225,218,4)" fg:x="32930724" fg:w="1146706"/><text x="12.5839%" y="1999.50"></text></g><g><title>benchmark::json_to_html_node (1,146,706 samples, 0.43%)</title><rect x="12.3339%" y="1973" width="0.4295%" height="15" fill="rgb(230,182,32)" fg:x="32930724" fg:w="1146706"/><text x="12.5839%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,146,706 samples, 0.43%)</title><rect x="12.3339%" y="1957" width="0.4295%" height="15" fill="rgb(242,56,43)" fg:x="32930724" fg:w="1146706"/><text x="12.5839%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,146,706 samples, 0.43%)</title><rect x="12.3339%" y="1941" width="0.4295%" height="15" fill="rgb(233,99,24)" fg:x="32930724" fg:w="1146706"/><text x="12.5839%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,146,706 samples, 0.43%)</title><rect x="12.3339%" y="1925" width="0.4295%" height="15" fill="rgb(234,209,42)" fg:x="32930724" fg:w="1146706"/><text x="12.5839%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,146,706 samples, 0.43%)</title><rect x="12.3339%" y="1909" width="0.4295%" height="15" fill="rgb(227,7,12)" fg:x="32930724" fg:w="1146706"/><text x="12.5839%" y="1919.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,146,706 samples, 0.43%)</title><rect x="12.3339%" y="1893" width="0.4295%" height="15" fill="rgb(245,203,43)" fg:x="32930724" fg:w="1146706"/><text x="12.5839%" y="1903.50"></text></g><g><title>malloc (1,146,706 samples, 0.43%)</title><rect x="12.3339%" y="1877" width="0.4295%" height="15" fill="rgb(238,205,33)" fg:x="32930724" fg:w="1146706"/><text x="12.5839%" y="1887.50"></text></g><g><title>[libc.so.6] (1,146,706 samples, 0.43%)</title><rect x="12.3339%" y="1861" width="0.4295%" height="15" fill="rgb(231,56,7)" fg:x="32930724" fg:w="1146706"/><text x="12.5839%" y="1871.50"></text></g><g><title>benchmark::json_to_html_node (2,039,796 samples, 0.76%)</title><rect x="12.3339%" y="2005" width="0.7640%" height="15" fill="rgb(244,186,29)" fg:x="32930724" fg:w="2039796"/><text x="12.5839%" y="2015.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (893,090 samples, 0.33%)</title><rect x="12.7634%" y="1989" width="0.3345%" height="15" fill="rgb(234,111,31)" fg:x="34077430" fg:w="893090"/><text x="13.0134%" y="1999.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (893,090 samples, 0.33%)</title><rect x="12.7634%" y="1973" width="0.3345%" height="15" fill="rgb(241,149,10)" fg:x="34077430" fg:w="893090"/><text x="13.0134%" y="1983.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (893,090 samples, 0.33%)</title><rect x="12.7634%" y="1957" width="0.3345%" height="15" fill="rgb(249,206,44)" fg:x="34077430" fg:w="893090"/><text x="13.0134%" y="1967.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (893,090 samples, 0.33%)</title><rect x="12.7634%" y="1941" width="0.3345%" height="15" fill="rgb(251,153,30)" fg:x="34077430" fg:w="893090"/><text x="13.0134%" y="1951.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (893,090 samples, 0.33%)</title><rect x="12.7634%" y="1925" width="0.3345%" height="15" fill="rgb(239,152,38)" fg:x="34077430" fg:w="893090"/><text x="13.0134%" y="1935.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (893,090 samples, 0.33%)</title><rect x="12.7634%" y="1909" width="0.3345%" height="15" fill="rgb(249,139,47)" fg:x="34077430" fg:w="893090"/><text x="13.0134%" y="1919.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (893,090 samples, 0.33%)</title><rect x="12.7634%" y="1893" width="0.3345%" height="15" fill="rgb(244,64,35)" fg:x="34077430" fg:w="893090"/><text x="13.0134%" y="1903.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (893,090 samples, 0.33%)</title><rect x="12.7634%" y="1877" width="0.3345%" height="15" fill="rgb(216,46,15)" fg:x="34077430" fg:w="893090"/><text x="13.0134%" y="1887.50"></text></g><g><title>benchmark::json_to_html_node (9,075,579 samples, 3.40%)</title><rect x="10.0496%" y="2069" width="3.3992%" height="15" fill="rgb(250,74,19)" fg:x="26831800" fg:w="9075579"/><text x="10.2996%" y="2079.50">ben..</text></g><g><title>benchmark::json_to_html_node (6,577,139 samples, 2.46%)</title><rect x="10.9854%" y="2053" width="2.4634%" height="15" fill="rgb(249,42,33)" fg:x="29330240" fg:w="6577139"/><text x="11.2354%" y="2063.50">be..</text></g><g><title>benchmark::json_to_html_node (4,237,597 samples, 1.59%)</title><rect x="11.8616%" y="2037" width="1.5872%" height="15" fill="rgb(242,149,17)" fg:x="31669782" fg:w="4237597"/><text x="12.1116%" y="2047.50"></text></g><g><title>benchmark::json_to_html_node (4,237,597 samples, 1.59%)</title><rect x="11.8616%" y="2021" width="1.5872%" height="15" fill="rgb(244,29,21)" fg:x="31669782" fg:w="4237597"/><text x="12.1116%" y="2031.50"></text></g><g><title>serde_json::value::Value::as_u64 (936,859 samples, 0.35%)</title><rect x="13.0979%" y="2005" width="0.3509%" height="15" fill="rgb(220,130,37)" fg:x="34970520" fg:w="936859"/><text x="13.3479%" y="2015.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,245,547 samples, 0.47%)</title><rect x="13.4488%" y="2069" width="0.4665%" height="15" fill="rgb(211,67,2)" fg:x="35907379" fg:w="1245547"/><text x="13.6988%" y="2079.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,245,547 samples, 0.47%)</title><rect x="13.4488%" y="2053" width="0.4665%" height="15" fill="rgb(235,68,52)" fg:x="35907379" fg:w="1245547"/><text x="13.6988%" y="2063.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,245,547 samples, 0.47%)</title><rect x="13.4488%" y="2037" width="0.4665%" height="15" fill="rgb(246,142,3)" fg:x="35907379" fg:w="1245547"/><text x="13.6988%" y="2047.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,245,547 samples, 0.47%)</title><rect x="13.4488%" y="2021" width="0.4665%" height="15" fill="rgb(241,25,7)" fg:x="35907379" fg:w="1245547"/><text x="13.6988%" y="2031.50"></text></g><g><title>benchmark::apply_frame_modifications (14,072,716 samples, 5.27%)</title><rect x="9.1097%" y="2085" width="5.2708%" height="15" fill="rgb(242,119,39)" fg:x="24322212" fg:w="14072716"/><text x="9.3597%" y="2095.50">benchm..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="2069" width="0.4652%" height="15" fill="rgb(241,98,45)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="2079.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="2053" width="0.4652%" height="15" fill="rgb(254,28,30)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="2063.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="2037" width="0.4652%" height="15" fill="rgb(241,142,54)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="2047.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="2021" width="0.4652%" height="15" fill="rgb(222,85,15)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="2031.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="2005" width="0.4652%" height="15" fill="rgb(210,85,47)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="2015.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="1989" width="0.4652%" height="15" fill="rgb(224,206,25)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="1999.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="1973" width="0.4652%" height="15" fill="rgb(243,201,19)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="1983.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="1957" width="0.4652%" height="15" fill="rgb(236,59,4)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="1967.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="1941" width="0.4652%" height="15" fill="rgb(254,179,45)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="1951.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="1925" width="0.4652%" height="15" fill="rgb(226,14,10)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="1935.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="1909" width="0.4652%" height="15" fill="rgb(244,27,41)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="1919.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="1893" width="0.4652%" height="15" fill="rgb(235,35,32)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="1903.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="1877" width="0.4652%" height="15" fill="rgb(218,68,31)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="1861" width="0.4652%" height="15" fill="rgb(207,120,37)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="1845" width="0.4652%" height="15" fill="rgb(227,98,0)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="1829" width="0.4652%" height="15" fill="rgb(207,7,3)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="1839.50"></text></g><g><title>malloc (1,242,002 samples, 0.47%)</title><rect x="13.9153%" y="1813" width="0.4652%" height="15" fill="rgb(206,98,19)" fg:x="37152926" fg:w="1242002"/><text x="14.1653%" y="1823.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,237,632 samples, 0.46%)</title><rect x="14.8748%" y="1733" width="0.4635%" height="15" fill="rgb(217,5,26)" fg:x="39714641" fg:w="1237632"/><text x="15.1248%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,237,632 samples, 0.46%)</title><rect x="14.8748%" y="1717" width="0.4635%" height="15" fill="rgb(235,190,38)" fg:x="39714641" fg:w="1237632"/><text x="15.1248%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,237,632 samples, 0.46%)</title><rect x="14.8748%" y="1701" width="0.4635%" height="15" fill="rgb(247,86,24)" fg:x="39714641" fg:w="1237632"/><text x="15.1248%" y="1711.50"></text></g><g><title>alloc::slice::hack::to_vec (1,237,632 samples, 0.46%)</title><rect x="14.8748%" y="1685" width="0.4635%" height="15" fill="rgb(205,101,16)" fg:x="39714641" fg:w="1237632"/><text x="15.1248%" y="1695.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,237,632 samples, 0.46%)</title><rect x="14.8748%" y="1669" width="0.4635%" height="15" fill="rgb(246,168,33)" fg:x="39714641" fg:w="1237632"/><text x="15.1248%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,237,632 samples, 0.46%)</title><rect x="14.8748%" y="1653" width="0.4635%" height="15" fill="rgb(231,114,1)" fg:x="39714641" fg:w="1237632"/><text x="15.1248%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,237,632 samples, 0.46%)</title><rect x="14.8748%" y="1637" width="0.4635%" height="15" fill="rgb(207,184,53)" fg:x="39714641" fg:w="1237632"/><text x="15.1248%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,237,632 samples, 0.46%)</title><rect x="14.8748%" y="1621" width="0.4635%" height="15" fill="rgb(224,95,51)" fg:x="39714641" fg:w="1237632"/><text x="15.1248%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,237,632 samples, 0.46%)</title><rect x="14.8748%" y="1605" width="0.4635%" height="15" fill="rgb(212,188,45)" fg:x="39714641" fg:w="1237632"/><text x="15.1248%" y="1615.50"></text></g><g><title>alloc::raw_vec::layout_array (1,237,632 samples, 0.46%)</title><rect x="14.8748%" y="1589" width="0.4635%" height="15" fill="rgb(223,154,38)" fg:x="39714641" fg:w="1237632"/><text x="15.1248%" y="1599.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1,237,632 samples, 0.46%)</title><rect x="14.8748%" y="1573" width="0.4635%" height="15" fill="rgb(251,22,52)" fg:x="39714641" fg:w="1237632"/><text x="15.1248%" y="1583.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (1,237,632 samples, 0.46%)</title><rect x="14.8748%" y="1557" width="0.4635%" height="15" fill="rgb(229,209,22)" fg:x="39714641" fg:w="1237632"/><text x="15.1248%" y="1567.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1,237,632 samples, 0.46%)</title><rect x="14.8748%" y="1541" width="0.4635%" height="15" fill="rgb(234,138,34)" fg:x="39714641" fg:w="1237632"/><text x="15.1248%" y="1551.50"></text></g><g><title>core::intrinsics::unlikely (1,237,632 samples, 0.46%)</title><rect x="14.8748%" y="1525" width="0.4635%" height="15" fill="rgb(212,95,11)" fg:x="39714641" fg:w="1237632"/><text x="15.1248%" y="1535.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,540,712 samples, 0.95%)</title><rect x="16.2855%" y="1573" width="0.9516%" height="15" fill="rgb(240,179,47)" fg:x="43481127" fg:w="2540712"/><text x="16.5355%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,540,712 samples, 0.95%)</title><rect x="16.2855%" y="1557" width="0.9516%" height="15" fill="rgb(240,163,11)" fg:x="43481127" fg:w="2540712"/><text x="16.5355%" y="1567.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,540,712 samples, 0.95%)</title><rect x="16.2855%" y="1541" width="0.9516%" height="15" fill="rgb(236,37,12)" fg:x="43481127" fg:w="2540712"/><text x="16.5355%" y="1551.50"></text></g><g><title>alloc::slice::hack::to_vec (2,540,712 samples, 0.95%)</title><rect x="16.2855%" y="1525" width="0.9516%" height="15" fill="rgb(232,164,16)" fg:x="43481127" fg:w="2540712"/><text x="16.5355%" y="1535.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,540,712 samples, 0.95%)</title><rect x="16.2855%" y="1509" width="0.9516%" height="15" fill="rgb(244,205,15)" fg:x="43481127" fg:w="2540712"/><text x="16.5355%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,540,712 samples, 0.95%)</title><rect x="16.2855%" y="1493" width="0.9516%" height="15" fill="rgb(223,117,47)" fg:x="43481127" fg:w="2540712"/><text x="16.5355%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,540,712 samples, 0.95%)</title><rect x="16.2855%" y="1477" width="0.9516%" height="15" fill="rgb(244,107,35)" fg:x="43481127" fg:w="2540712"/><text x="16.5355%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,540,712 samples, 0.95%)</title><rect x="16.2855%" y="1461" width="0.9516%" height="15" fill="rgb(205,140,8)" fg:x="43481127" fg:w="2540712"/><text x="16.5355%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,540,712 samples, 0.95%)</title><rect x="16.2855%" y="1445" width="0.9516%" height="15" fill="rgb(228,84,46)" fg:x="43481127" fg:w="2540712"/><text x="16.5355%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,540,712 samples, 0.95%)</title><rect x="16.2855%" y="1429" width="0.9516%" height="15" fill="rgb(254,188,9)" fg:x="43481127" fg:w="2540712"/><text x="16.5355%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,540,712 samples, 0.95%)</title><rect x="16.2855%" y="1413" width="0.9516%" height="15" fill="rgb(206,112,54)" fg:x="43481127" fg:w="2540712"/><text x="16.5355%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (2,540,712 samples, 0.95%)</title><rect x="16.2855%" y="1397" width="0.9516%" height="15" fill="rgb(216,84,49)" fg:x="43481127" fg:w="2540712"/><text x="16.5355%" y="1407.50"></text></g><g><title>malloc (2,540,712 samples, 0.95%)</title><rect x="16.2855%" y="1381" width="0.9516%" height="15" fill="rgb(214,194,35)" fg:x="43481127" fg:w="2540712"/><text x="16.5355%" y="1391.50"></text></g><g><title>[libc.so.6] (1,305,137 samples, 0.49%)</title><rect x="16.7482%" y="1365" width="0.4888%" height="15" fill="rgb(249,28,3)" fg:x="44716702" fg:w="1305137"/><text x="16.9982%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,685,276 samples, 1.01%)</title><rect x="17.2371%" y="1413" width="1.0057%" height="15" fill="rgb(222,56,52)" fg:x="46021839" fg:w="2685276"/><text x="17.4871%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,685,276 samples, 1.01%)</title><rect x="17.2371%" y="1397" width="1.0057%" height="15" fill="rgb(245,217,50)" fg:x="46021839" fg:w="2685276"/><text x="17.4871%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,685,276 samples, 1.01%)</title><rect x="17.2371%" y="1381" width="1.0057%" height="15" fill="rgb(213,201,24)" fg:x="46021839" fg:w="2685276"/><text x="17.4871%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,685,276 samples, 1.01%)</title><rect x="17.2371%" y="1365" width="1.0057%" height="15" fill="rgb(248,116,28)" fg:x="46021839" fg:w="2685276"/><text x="17.4871%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,685,276 samples, 1.01%)</title><rect x="17.2371%" y="1349" width="1.0057%" height="15" fill="rgb(219,72,43)" fg:x="46021839" fg:w="2685276"/><text x="17.4871%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,685,276 samples, 1.01%)</title><rect x="17.2371%" y="1333" width="1.0057%" height="15" fill="rgb(209,138,14)" fg:x="46021839" fg:w="2685276"/><text x="17.4871%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (2,685,276 samples, 1.01%)</title><rect x="17.2371%" y="1317" width="1.0057%" height="15" fill="rgb(222,18,33)" fg:x="46021839" fg:w="2685276"/><text x="17.4871%" y="1327.50"></text></g><g><title>malloc (2,685,276 samples, 1.01%)</title><rect x="17.2371%" y="1301" width="1.0057%" height="15" fill="rgb(213,199,7)" fg:x="46021839" fg:w="2685276"/><text x="17.4871%" y="1311.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,926,151 samples, 1.47%)</title><rect x="17.2371%" y="1493" width="1.4705%" height="15" fill="rgb(250,110,10)" fg:x="46021839" fg:w="3926151"/><text x="17.4871%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,926,151 samples, 1.47%)</title><rect x="17.2371%" y="1477" width="1.4705%" height="15" fill="rgb(248,123,6)" fg:x="46021839" fg:w="3926151"/><text x="17.4871%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,926,151 samples, 1.47%)</title><rect x="17.2371%" y="1461" width="1.4705%" height="15" fill="rgb(206,91,31)" fg:x="46021839" fg:w="3926151"/><text x="17.4871%" y="1471.50"></text></g><g><title>alloc::slice::hack::to_vec (3,926,151 samples, 1.47%)</title><rect x="17.2371%" y="1445" width="1.4705%" height="15" fill="rgb(211,154,13)" fg:x="46021839" fg:w="3926151"/><text x="17.4871%" y="1455.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,926,151 samples, 1.47%)</title><rect x="17.2371%" y="1429" width="1.4705%" height="15" fill="rgb(225,148,7)" fg:x="46021839" fg:w="3926151"/><text x="17.4871%" y="1439.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,240,875 samples, 0.46%)</title><rect x="18.2428%" y="1413" width="0.4648%" height="15" fill="rgb(220,160,43)" fg:x="48707115" fg:w="1240875"/><text x="18.4928%" y="1423.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,240,875 samples, 0.46%)</title><rect x="18.2428%" y="1397" width="0.4648%" height="15" fill="rgb(213,52,39)" fg:x="48707115" fg:w="1240875"/><text x="18.4928%" y="1407.50"></text></g><g><title>[libc.so.6] (1,240,875 samples, 0.46%)</title><rect x="18.2428%" y="1381" width="0.4648%" height="15" fill="rgb(243,137,7)" fg:x="48707115" fg:w="1240875"/><text x="18.4928%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,272,321 samples, 0.48%)</title><rect x="18.7076%" y="1477" width="0.4765%" height="15" fill="rgb(230,79,13)" fg:x="49947990" fg:w="1272321"/><text x="18.9576%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,272,321 samples, 0.48%)</title><rect x="18.7076%" y="1461" width="0.4765%" height="15" fill="rgb(247,105,23)" fg:x="49947990" fg:w="1272321"/><text x="18.9576%" y="1471.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,243,155 samples, 0.47%)</title><rect x="20.1409%" y="933" width="0.4656%" height="15" fill="rgb(223,179,41)" fg:x="53774910" fg:w="1243155"/><text x="20.3909%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,243,155 samples, 0.47%)</title><rect x="20.1409%" y="917" width="0.4656%" height="15" fill="rgb(218,9,34)" fg:x="53774910" fg:w="1243155"/><text x="20.3909%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,243,155 samples, 0.47%)</title><rect x="20.1409%" y="901" width="0.4656%" height="15" fill="rgb(222,106,8)" fg:x="53774910" fg:w="1243155"/><text x="20.3909%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (1,243,155 samples, 0.47%)</title><rect x="20.1409%" y="885" width="0.4656%" height="15" fill="rgb(211,220,0)" fg:x="53774910" fg:w="1243155"/><text x="20.3909%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,243,155 samples, 0.47%)</title><rect x="20.1409%" y="869" width="0.4656%" height="15" fill="rgb(229,52,16)" fg:x="53774910" fg:w="1243155"/><text x="20.3909%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,243,155 samples, 0.47%)</title><rect x="20.1409%" y="853" width="0.4656%" height="15" fill="rgb(212,155,18)" fg:x="53774910" fg:w="1243155"/><text x="20.3909%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,243,155 samples, 0.47%)</title><rect x="20.1409%" y="837" width="0.4656%" height="15" fill="rgb(242,21,14)" fg:x="53774910" fg:w="1243155"/><text x="20.3909%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,241,494 samples, 0.46%)</title><rect x="20.6065%" y="629" width="0.4650%" height="15" fill="rgb(222,19,48)" fg:x="55018065" fg:w="1241494"/><text x="20.8565%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,241,494 samples, 0.46%)</title><rect x="20.6065%" y="613" width="0.4650%" height="15" fill="rgb(232,45,27)" fg:x="55018065" fg:w="1241494"/><text x="20.8565%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,241,494 samples, 0.46%)</title><rect x="20.6065%" y="597" width="0.4650%" height="15" fill="rgb(249,103,42)" fg:x="55018065" fg:w="1241494"/><text x="20.8565%" y="607.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,241,494 samples, 0.46%)</title><rect x="20.6065%" y="581" width="0.4650%" height="15" fill="rgb(246,81,33)" fg:x="55018065" fg:w="1241494"/><text x="20.8565%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,274,384 samples, 0.48%)</title><rect x="21.0715%" y="613" width="0.4773%" height="15" fill="rgb(252,33,42)" fg:x="56259559" fg:w="1274384"/><text x="21.3215%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,274,384 samples, 0.48%)</title><rect x="21.0715%" y="597" width="0.4773%" height="15" fill="rgb(209,212,41)" fg:x="56259559" fg:w="1274384"/><text x="21.3215%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,274,384 samples, 0.48%)</title><rect x="21.0715%" y="581" width="0.4773%" height="15" fill="rgb(207,154,6)" fg:x="56259559" fg:w="1274384"/><text x="21.3215%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1,274,384 samples, 0.48%)</title><rect x="21.0715%" y="565" width="0.4773%" height="15" fill="rgb(223,64,47)" fg:x="56259559" fg:w="1274384"/><text x="21.3215%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,274,384 samples, 0.48%)</title><rect x="21.0715%" y="549" width="0.4773%" height="15" fill="rgb(211,161,38)" fg:x="56259559" fg:w="1274384"/><text x="21.3215%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,274,384 samples, 0.48%)</title><rect x="21.0715%" y="533" width="0.4773%" height="15" fill="rgb(219,138,40)" fg:x="56259559" fg:w="1274384"/><text x="21.3215%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,274,384 samples, 0.48%)</title><rect x="21.0715%" y="517" width="0.4773%" height="15" fill="rgb(241,228,46)" fg:x="56259559" fg:w="1274384"/><text x="21.3215%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="533" width="0.4591%" height="15" fill="rgb(223,209,38)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="517" width="0.4591%" height="15" fill="rgb(236,164,45)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="501" width="0.4591%" height="15" fill="rgb(231,15,5)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="485" width="0.4591%" height="15" fill="rgb(252,35,15)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="495.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="469" width="0.4591%" height="15" fill="rgb(248,181,18)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="453" width="0.4591%" height="15" fill="rgb(233,39,42)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="437" width="0.4591%" height="15" fill="rgb(238,110,33)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="421" width="0.4591%" height="15" fill="rgb(233,195,10)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="405" width="0.4591%" height="15" fill="rgb(254,105,3)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="415.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="389" width="0.4591%" height="15" fill="rgb(221,225,9)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="373" width="0.4591%" height="15" fill="rgb(224,227,45)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="357" width="0.4591%" height="15" fill="rgb(229,198,43)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="341" width="0.4591%" height="15" fill="rgb(206,209,35)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="325" width="0.4591%" height="15" fill="rgb(245,195,53)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="335.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="309" width="0.4591%" height="15" fill="rgb(240,92,26)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="293" width="0.4591%" height="15" fill="rgb(207,40,23)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="277" width="0.4591%" height="15" fill="rgb(223,111,35)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="261" width="0.4591%" height="15" fill="rgb(229,147,28)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="245" width="0.4591%" height="15" fill="rgb(211,29,28)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="255.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="229" width="0.4591%" height="15" fill="rgb(228,72,33)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="239.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="213" width="0.4591%" height="15" fill="rgb(205,214,31)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="223.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="197" width="0.4591%" height="15" fill="rgb(224,111,15)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="207.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="181" width="0.4591%" height="15" fill="rgb(253,21,26)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="191.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="165" width="0.4591%" height="15" fill="rgb(245,139,43)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="149" width="0.4591%" height="15" fill="rgb(252,170,7)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="159.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="133" width="0.4591%" height="15" fill="rgb(231,118,14)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="143.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="117" width="0.4591%" height="15" fill="rgb(238,83,0)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="101" width="0.4591%" height="15" fill="rgb(221,39,39)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="85" width="0.4591%" height="15" fill="rgb(222,119,46)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="69" width="0.4591%" height="15" fill="rgb(222,165,49)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="79.50"></text></g><g><title>malloc (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="53" width="0.4591%" height="15" fill="rgb(219,113,52)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="63.50"></text></g><g><title>[libc.so.6] (1,225,716 samples, 0.46%)</title><rect x="21.5488%" y="37" width="0.4591%" height="15" fill="rgb(214,7,15)" fg:x="57533943" fg:w="1225716"/><text x="21.7988%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,464,577 samples, 0.92%)</title><rect x="21.5488%" y="613" width="0.9231%" height="15" fill="rgb(235,32,4)" fg:x="57533943" fg:w="2464577"/><text x="21.7988%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,464,577 samples, 0.92%)</title><rect x="21.5488%" y="597" width="0.9231%" height="15" fill="rgb(238,90,54)" fg:x="57533943" fg:w="2464577"/><text x="21.7988%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2,464,577 samples, 0.92%)</title><rect x="21.5488%" y="581" width="0.9231%" height="15" fill="rgb(213,208,19)" fg:x="57533943" fg:w="2464577"/><text x="21.7988%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,464,577 samples, 0.92%)</title><rect x="21.5488%" y="565" width="0.9231%" height="15" fill="rgb(233,156,4)" fg:x="57533943" fg:w="2464577"/><text x="21.7988%" y="575.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,464,577 samples, 0.92%)</title><rect x="21.5488%" y="549" width="0.9231%" height="15" fill="rgb(207,194,5)" fg:x="57533943" fg:w="2464577"/><text x="21.7988%" y="559.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,238,861 samples, 0.46%)</title><rect x="22.0079%" y="533" width="0.4640%" height="15" fill="rgb(206,111,30)" fg:x="58759659" fg:w="1238861"/><text x="22.2579%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,238,861 samples, 0.46%)</title><rect x="22.0079%" y="517" width="0.4640%" height="15" fill="rgb(243,70,54)" fg:x="58759659" fg:w="1238861"/><text x="22.2579%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,238,861 samples, 0.46%)</title><rect x="22.0079%" y="501" width="0.4640%" height="15" fill="rgb(242,28,8)" fg:x="58759659" fg:w="1238861"/><text x="22.2579%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,238,861 samples, 0.46%)</title><rect x="22.0079%" y="485" width="0.4640%" height="15" fill="rgb(219,106,18)" fg:x="58759659" fg:w="1238861"/><text x="22.2579%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1,238,861 samples, 0.46%)</title><rect x="22.0079%" y="469" width="0.4640%" height="15" fill="rgb(244,222,10)" fg:x="58759659" fg:w="1238861"/><text x="22.2579%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,238,861 samples, 0.46%)</title><rect x="22.0079%" y="453" width="0.4640%" height="15" fill="rgb(236,179,52)" fg:x="58759659" fg:w="1238861"/><text x="22.2579%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,238,861 samples, 0.46%)</title><rect x="22.0079%" y="437" width="0.4640%" height="15" fill="rgb(213,23,39)" fg:x="58759659" fg:w="1238861"/><text x="22.2579%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,238,861 samples, 0.46%)</title><rect x="22.0079%" y="421" width="0.4640%" height="15" fill="rgb(238,48,10)" fg:x="58759659" fg:w="1238861"/><text x="22.2579%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,238,861 samples, 0.46%)</title><rect x="22.0079%" y="405" width="0.4640%" height="15" fill="rgb(251,196,23)" fg:x="58759659" fg:w="1238861"/><text x="22.2579%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,238,861 samples, 0.46%)</title><rect x="22.0079%" y="389" width="0.4640%" height="15" fill="rgb(250,152,24)" fg:x="58759659" fg:w="1238861"/><text x="22.2579%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,238,861 samples, 0.46%)</title><rect x="22.0079%" y="373" width="0.4640%" height="15" fill="rgb(209,150,17)" fg:x="58759659" fg:w="1238861"/><text x="22.2579%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,238,861 samples, 0.46%)</title><rect x="22.0079%" y="357" width="0.4640%" height="15" fill="rgb(234,202,34)" fg:x="58759659" fg:w="1238861"/><text x="22.2579%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1,238,861 samples, 0.46%)</title><rect x="22.0079%" y="341" width="0.4640%" height="15" fill="rgb(253,148,53)" fg:x="58759659" fg:w="1238861"/><text x="22.2579%" y="351.50"></text></g><g><title>malloc (1,238,861 samples, 0.46%)</title><rect x="22.0079%" y="325" width="0.4640%" height="15" fill="rgb(218,129,16)" fg:x="58759659" fg:w="1238861"/><text x="22.2579%" y="335.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (5,018,276 samples, 1.88%)</title><rect x="21.0715%" y="629" width="1.8796%" height="15" fill="rgb(216,85,19)" fg:x="56259559" fg:w="5018276"/><text x="21.3215%" y="639.50">&lt;..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,279,315 samples, 0.48%)</title><rect x="22.4719%" y="613" width="0.4792%" height="15" fill="rgb(235,228,7)" fg:x="59998520" fg:w="1279315"/><text x="22.7219%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,279,315 samples, 0.48%)</title><rect x="22.4719%" y="597" width="0.4792%" height="15" fill="rgb(245,175,0)" fg:x="59998520" fg:w="1279315"/><text x="22.7219%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,279,315 samples, 0.48%)</title><rect x="22.4719%" y="581" width="0.4792%" height="15" fill="rgb(208,168,36)" fg:x="59998520" fg:w="1279315"/><text x="22.7219%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1,279,315 samples, 0.48%)</title><rect x="22.4719%" y="565" width="0.4792%" height="15" fill="rgb(246,171,24)" fg:x="59998520" fg:w="1279315"/><text x="22.7219%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,279,315 samples, 0.48%)</title><rect x="22.4719%" y="549" width="0.4792%" height="15" fill="rgb(215,142,24)" fg:x="59998520" fg:w="1279315"/><text x="22.7219%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,279,315 samples, 0.48%)</title><rect x="22.4719%" y="533" width="0.4792%" height="15" fill="rgb(250,187,7)" fg:x="59998520" fg:w="1279315"/><text x="22.7219%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,279,315 samples, 0.48%)</title><rect x="22.4719%" y="517" width="0.4792%" height="15" fill="rgb(228,66,33)" fg:x="59998520" fg:w="1279315"/><text x="22.7219%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,279,315 samples, 0.48%)</title><rect x="22.4719%" y="501" width="0.4792%" height="15" fill="rgb(234,215,21)" fg:x="59998520" fg:w="1279315"/><text x="22.7219%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,279,315 samples, 0.48%)</title><rect x="22.4719%" y="485" width="0.4792%" height="15" fill="rgb(222,191,20)" fg:x="59998520" fg:w="1279315"/><text x="22.7219%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,279,315 samples, 0.48%)</title><rect x="22.4719%" y="469" width="0.4792%" height="15" fill="rgb(245,79,54)" fg:x="59998520" fg:w="1279315"/><text x="22.7219%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,279,315 samples, 0.48%)</title><rect x="22.4719%" y="453" width="0.4792%" height="15" fill="rgb(240,10,37)" fg:x="59998520" fg:w="1279315"/><text x="22.7219%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1,279,315 samples, 0.48%)</title><rect x="22.4719%" y="437" width="0.4792%" height="15" fill="rgb(214,192,32)" fg:x="59998520" fg:w="1279315"/><text x="22.7219%" y="447.50"></text></g><g><title>malloc (1,279,315 samples, 0.48%)</title><rect x="22.4719%" y="421" width="0.4792%" height="15" fill="rgb(209,36,54)" fg:x="59998520" fg:w="1279315"/><text x="22.7219%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,597,820 samples, 2.85%)</title><rect x="20.6065%" y="693" width="2.8457%" height="15" fill="rgb(220,10,11)" fg:x="55018065" fg:w="7597820"/><text x="20.8565%" y="703.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,597,820 samples, 2.85%)</title><rect x="20.6065%" y="677" width="2.8457%" height="15" fill="rgb(221,106,17)" fg:x="55018065" fg:w="7597820"/><text x="20.8565%" y="687.50">al..</text></g><g><title>alloc::slice::hack::to_vec (7,597,820 samples, 2.85%)</title><rect x="20.6065%" y="661" width="2.8457%" height="15" fill="rgb(251,142,44)" fg:x="55018065" fg:w="7597820"/><text x="20.8565%" y="671.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,597,820 samples, 2.85%)</title><rect x="20.6065%" y="645" width="2.8457%" height="15" fill="rgb(238,13,15)" fg:x="55018065" fg:w="7597820"/><text x="20.8565%" y="655.50">&lt;T..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,338,050 samples, 0.50%)</title><rect x="22.9511%" y="629" width="0.5012%" height="15" fill="rgb(208,107,27)" fg:x="61277835" fg:w="1338050"/><text x="23.2011%" y="639.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,316,877 samples, 0.49%)</title><rect x="23.4522%" y="693" width="0.4932%" height="15" fill="rgb(205,136,37)" fg:x="62615885" fg:w="1316877"/><text x="23.7022%" y="703.50"></text></g><g><title>core::clone::Clone::clone (1,313,367 samples, 0.49%)</title><rect x="23.9454%" y="597" width="0.4919%" height="15" fill="rgb(250,205,27)" fg:x="63932762" fg:w="1313367"/><text x="24.1954%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,313,367 samples, 0.49%)</title><rect x="23.9454%" y="581" width="0.4919%" height="15" fill="rgb(210,80,43)" fg:x="63932762" fg:w="1313367"/><text x="24.1954%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,313,367 samples, 0.49%)</title><rect x="23.9454%" y="565" width="0.4919%" height="15" fill="rgb(247,160,36)" fg:x="63932762" fg:w="1313367"/><text x="24.1954%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,313,367 samples, 0.49%)</title><rect x="23.9454%" y="549" width="0.4919%" height="15" fill="rgb(234,13,49)" fg:x="63932762" fg:w="1313367"/><text x="24.1954%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1,313,367 samples, 0.49%)</title><rect x="23.9454%" y="533" width="0.4919%" height="15" fill="rgb(234,122,0)" fg:x="63932762" fg:w="1313367"/><text x="24.1954%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,313,367 samples, 0.49%)</title><rect x="23.9454%" y="517" width="0.4919%" height="15" fill="rgb(207,146,38)" fg:x="63932762" fg:w="1313367"/><text x="24.1954%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,313,367 samples, 0.49%)</title><rect x="23.9454%" y="501" width="0.4919%" height="15" fill="rgb(207,177,25)" fg:x="63932762" fg:w="1313367"/><text x="24.1954%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,313,367 samples, 0.49%)</title><rect x="23.9454%" y="485" width="0.4919%" height="15" fill="rgb(211,178,42)" fg:x="63932762" fg:w="1313367"/><text x="24.1954%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,313,367 samples, 0.49%)</title><rect x="23.9454%" y="469" width="0.4919%" height="15" fill="rgb(230,69,54)" fg:x="63932762" fg:w="1313367"/><text x="24.1954%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,313,367 samples, 0.49%)</title><rect x="23.9454%" y="453" width="0.4919%" height="15" fill="rgb(214,135,41)" fg:x="63932762" fg:w="1313367"/><text x="24.1954%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,313,367 samples, 0.49%)</title><rect x="23.9454%" y="437" width="0.4919%" height="15" fill="rgb(237,67,25)" fg:x="63932762" fg:w="1313367"/><text x="24.1954%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,313,367 samples, 0.49%)</title><rect x="23.9454%" y="421" width="0.4919%" height="15" fill="rgb(222,189,50)" fg:x="63932762" fg:w="1313367"/><text x="24.1954%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1,313,367 samples, 0.49%)</title><rect x="23.9454%" y="405" width="0.4919%" height="15" fill="rgb(245,148,34)" fg:x="63932762" fg:w="1313367"/><text x="24.1954%" y="415.50"></text></g><g><title>malloc (1,313,367 samples, 0.49%)</title><rect x="23.9454%" y="389" width="0.4919%" height="15" fill="rgb(222,29,6)" fg:x="63932762" fg:w="1313367"/><text x="24.1954%" y="399.50"></text></g><g><title>[libc.so.6] (1,313,367 samples, 0.49%)</title><rect x="23.9454%" y="373" width="0.4919%" height="15" fill="rgb(221,189,43)" fg:x="63932762" fg:w="1313367"/><text x="24.1954%" y="383.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (11,524,860 samples, 4.32%)</title><rect x="20.6065%" y="709" width="4.3165%" height="15" fill="rgb(207,36,27)" fg:x="55018065" fg:w="11524860"/><text x="20.8565%" y="719.50">&lt;css_..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,610,163 samples, 0.98%)</title><rect x="23.9454%" y="693" width="0.9776%" height="15" fill="rgb(217,90,24)" fg:x="63932762" fg:w="2610163"/><text x="24.1954%" y="703.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,610,163 samples, 0.98%)</title><rect x="23.9454%" y="677" width="0.9776%" height="15" fill="rgb(224,66,35)" fg:x="63932762" fg:w="2610163"/><text x="24.1954%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,610,163 samples, 0.98%)</title><rect x="23.9454%" y="661" width="0.9776%" height="15" fill="rgb(221,13,50)" fg:x="63932762" fg:w="2610163"/><text x="24.1954%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,610,163 samples, 0.98%)</title><rect x="23.9454%" y="645" width="0.9776%" height="15" fill="rgb(236,68,49)" fg:x="63932762" fg:w="2610163"/><text x="24.1954%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,610,163 samples, 0.98%)</title><rect x="23.9454%" y="629" width="0.9776%" height="15" fill="rgb(229,146,28)" fg:x="63932762" fg:w="2610163"/><text x="24.1954%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,610,163 samples, 0.98%)</title><rect x="23.9454%" y="613" width="0.9776%" height="15" fill="rgb(225,31,38)" fg:x="63932762" fg:w="2610163"/><text x="24.1954%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1,296,796 samples, 0.49%)</title><rect x="24.4374%" y="597" width="0.4857%" height="15" fill="rgb(250,208,3)" fg:x="65246129" fg:w="1296796"/><text x="24.6874%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,296,796 samples, 0.49%)</title><rect x="24.4374%" y="581" width="0.4857%" height="15" fill="rgb(246,54,23)" fg:x="65246129" fg:w="1296796"/><text x="24.6874%" y="591.50"></text></g><g><title>[libc.so.6] (1,296,796 samples, 0.49%)</title><rect x="24.4374%" y="565" width="0.4857%" height="15" fill="rgb(243,76,11)" fg:x="65246129" fg:w="1296796"/><text x="24.6874%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,776,120 samples, 4.79%)</title><rect x="20.6065%" y="853" width="4.7852%" height="15" fill="rgb(245,21,50)" fg:x="55018065" fg:w="12776120"/><text x="20.8565%" y="863.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12,776,120 samples, 4.79%)</title><rect x="20.6065%" y="837" width="4.7852%" height="15" fill="rgb(228,9,43)" fg:x="55018065" fg:w="12776120"/><text x="20.8565%" y="847.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (12,776,120 samples, 4.79%)</title><rect x="20.6065%" y="821" width="4.7852%" height="15" fill="rgb(208,100,47)" fg:x="55018065" fg:w="12776120"/><text x="20.8565%" y="831.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12,776,120 samples, 4.79%)</title><rect x="20.6065%" y="805" width="4.7852%" height="15" fill="rgb(232,26,8)" fg:x="55018065" fg:w="12776120"/><text x="20.8565%" y="815.50">&lt;T as ..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (12,776,120 samples, 4.79%)</title><rect x="20.6065%" y="789" width="4.7852%" height="15" fill="rgb(216,166,38)" fg:x="55018065" fg:w="12776120"/><text x="20.8565%" y="799.50">&lt;css_b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,776,120 samples, 4.79%)</title><rect x="20.6065%" y="773" width="4.7852%" height="15" fill="rgb(251,202,51)" fg:x="55018065" fg:w="12776120"/><text x="20.8565%" y="783.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12,776,120 samples, 4.79%)</title><rect x="20.6065%" y="757" width="4.7852%" height="15" fill="rgb(254,216,34)" fg:x="55018065" fg:w="12776120"/><text x="20.8565%" y="767.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (12,776,120 samples, 4.79%)</title><rect x="20.6065%" y="741" width="4.7852%" height="15" fill="rgb(251,32,27)" fg:x="55018065" fg:w="12776120"/><text x="20.8565%" y="751.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12,776,120 samples, 4.79%)</title><rect x="20.6065%" y="725" width="4.7852%" height="15" fill="rgb(208,127,28)" fg:x="55018065" fg:w="12776120"/><text x="20.8565%" y="735.50">&lt;T as ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,251,260 samples, 0.47%)</title><rect x="24.9231%" y="709" width="0.4686%" height="15" fill="rgb(224,137,22)" fg:x="66542925" fg:w="1251260"/><text x="25.1731%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,251,260 samples, 0.47%)</title><rect x="24.9231%" y="693" width="0.4686%" height="15" fill="rgb(254,70,32)" fg:x="66542925" fg:w="1251260"/><text x="25.1731%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,251,260 samples, 0.47%)</title><rect x="24.9231%" y="677" width="0.4686%" height="15" fill="rgb(229,75,37)" fg:x="66542925" fg:w="1251260"/><text x="25.1731%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,251,260 samples, 0.47%)</title><rect x="24.9231%" y="661" width="0.4686%" height="15" fill="rgb(252,64,23)" fg:x="66542925" fg:w="1251260"/><text x="25.1731%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,251,260 samples, 0.47%)</title><rect x="24.9231%" y="645" width="0.4686%" height="15" fill="rgb(232,162,48)" fg:x="66542925" fg:w="1251260"/><text x="25.1731%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,251,260 samples, 0.47%)</title><rect x="24.9231%" y="629" width="0.4686%" height="15" fill="rgb(246,160,12)" fg:x="66542925" fg:w="1251260"/><text x="25.1731%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1,251,260 samples, 0.47%)</title><rect x="24.9231%" y="613" width="0.4686%" height="15" fill="rgb(247,166,0)" fg:x="66542925" fg:w="1251260"/><text x="25.1731%" y="623.50"></text></g><g><title>malloc (1,251,260 samples, 0.47%)</title><rect x="24.9231%" y="597" width="0.4686%" height="15" fill="rgb(249,219,21)" fg:x="66542925" fg:w="1251260"/><text x="25.1731%" y="607.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,259,588 samples, 0.47%)</title><rect x="25.3917%" y="853" width="0.4718%" height="15" fill="rgb(205,209,3)" fg:x="67794185" fg:w="1259588"/><text x="25.6417%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,259,588 samples, 0.47%)</title><rect x="25.3917%" y="837" width="0.4718%" height="15" fill="rgb(243,44,1)" fg:x="67794185" fg:w="1259588"/><text x="25.6417%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,259,588 samples, 0.47%)</title><rect x="25.3917%" y="821" width="0.4718%" height="15" fill="rgb(206,159,16)" fg:x="67794185" fg:w="1259588"/><text x="25.6417%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,259,588 samples, 0.47%)</title><rect x="25.3917%" y="805" width="0.4718%" height="15" fill="rgb(244,77,30)" fg:x="67794185" fg:w="1259588"/><text x="25.6417%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (1,259,588 samples, 0.47%)</title><rect x="25.3917%" y="789" width="0.4718%" height="15" fill="rgb(218,69,12)" fg:x="67794185" fg:w="1259588"/><text x="25.6417%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,259,588 samples, 0.47%)</title><rect x="25.3917%" y="773" width="0.4718%" height="15" fill="rgb(212,87,7)" fg:x="67794185" fg:w="1259588"/><text x="25.6417%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,259,588 samples, 0.47%)</title><rect x="25.3917%" y="757" width="0.4718%" height="15" fill="rgb(245,114,25)" fg:x="67794185" fg:w="1259588"/><text x="25.6417%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,259,588 samples, 0.47%)</title><rect x="25.3917%" y="741" width="0.4718%" height="15" fill="rgb(210,61,42)" fg:x="67794185" fg:w="1259588"/><text x="25.6417%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,259,588 samples, 0.47%)</title><rect x="25.3917%" y="725" width="0.4718%" height="15" fill="rgb(211,52,33)" fg:x="67794185" fg:w="1259588"/><text x="25.6417%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,259,588 samples, 0.47%)</title><rect x="25.3917%" y="709" width="0.4718%" height="15" fill="rgb(234,58,33)" fg:x="67794185" fg:w="1259588"/><text x="25.6417%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,259,588 samples, 0.47%)</title><rect x="25.3917%" y="693" width="0.4718%" height="15" fill="rgb(220,115,36)" fg:x="67794185" fg:w="1259588"/><text x="25.6417%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,259,588 samples, 0.47%)</title><rect x="25.3917%" y="677" width="0.4718%" height="15" fill="rgb(243,153,54)" fg:x="67794185" fg:w="1259588"/><text x="25.6417%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1,259,588 samples, 0.47%)</title><rect x="25.3917%" y="661" width="0.4718%" height="15" fill="rgb(251,47,18)" fg:x="67794185" fg:w="1259588"/><text x="25.6417%" y="671.50"></text></g><g><title>malloc (1,259,588 samples, 0.47%)</title><rect x="25.3917%" y="645" width="0.4718%" height="15" fill="rgb(242,102,42)" fg:x="67794185" fg:w="1259588"/><text x="25.6417%" y="655.50"></text></g><g><title>[libc.so.6] (1,259,588 samples, 0.47%)</title><rect x="25.3917%" y="629" width="0.4718%" height="15" fill="rgb(234,31,38)" fg:x="67794185" fg:w="1259588"/><text x="25.6417%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="789" width="0.4608%" height="15" fill="rgb(221,117,51)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="773" width="0.4608%" height="15" fill="rgb(212,20,18)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="783.50"></text></g><g><title>core::clone::Clone::clone (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="757" width="0.4608%" height="15" fill="rgb(245,133,36)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="741" width="0.4608%" height="15" fill="rgb(212,6,19)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="725" width="0.4608%" height="15" fill="rgb(218,1,36)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="709" width="0.4608%" height="15" fill="rgb(246,84,54)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="693" width="0.4608%" height="15" fill="rgb(242,110,6)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="677" width="0.4608%" height="15" fill="rgb(214,47,5)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="661" width="0.4608%" height="15" fill="rgb(218,159,25)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="645" width="0.4608%" height="15" fill="rgb(215,211,28)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="629" width="0.4608%" height="15" fill="rgb(238,59,32)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="613" width="0.4608%" height="15" fill="rgb(226,82,3)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="597" width="0.4608%" height="15" fill="rgb(240,164,32)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="581" width="0.4608%" height="15" fill="rgb(232,46,7)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="565" width="0.4608%" height="15" fill="rgb(229,129,53)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="575.50"></text></g><g><title>__rdl_alloc (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="549" width="0.4608%" height="15" fill="rgb(234,188,29)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="559.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,230,212 samples, 0.46%)</title><rect x="26.3240%" y="533" width="0.4608%" height="15" fill="rgb(246,141,4)" fg:x="70283235" fg:w="1230212"/><text x="26.5740%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,733,181 samples, 6.64%)</title><rect x="20.6065%" y="933" width="6.6418%" height="15" fill="rgb(229,23,39)" fg:x="55018065" fg:w="17733181"/><text x="20.8565%" y="943.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,733,181 samples, 6.64%)</title><rect x="20.6065%" y="917" width="6.6418%" height="15" fill="rgb(206,12,3)" fg:x="55018065" fg:w="17733181"/><text x="20.8565%" y="927.50">alloc::sl..</text></g><g><title>alloc::slice::hack::to_vec (17,733,181 samples, 6.64%)</title><rect x="20.6065%" y="901" width="6.6418%" height="15" fill="rgb(252,226,20)" fg:x="55018065" fg:w="17733181"/><text x="20.8565%" y="911.50">alloc::sl..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,733,181 samples, 6.64%)</title><rect x="20.6065%" y="885" width="6.6418%" height="15" fill="rgb(216,123,35)" fg:x="55018065" fg:w="17733181"/><text x="20.8565%" y="895.50">&lt;T as all..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (17,733,181 samples, 6.64%)</title><rect x="20.6065%" y="869" width="6.6418%" height="15" fill="rgb(212,68,40)" fg:x="55018065" fg:w="17733181"/><text x="20.8565%" y="879.50">&lt;css_bitv..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,697,473 samples, 1.38%)</title><rect x="25.8635%" y="853" width="1.3849%" height="15" fill="rgb(254,125,32)" fg:x="69053773" fg:w="3697473"/><text x="26.1135%" y="863.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,697,473 samples, 1.38%)</title><rect x="25.8635%" y="837" width="1.3849%" height="15" fill="rgb(253,97,22)" fg:x="69053773" fg:w="3697473"/><text x="26.1135%" y="847.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,697,473 samples, 1.38%)</title><rect x="25.8635%" y="821" width="1.3849%" height="15" fill="rgb(241,101,14)" fg:x="69053773" fg:w="3697473"/><text x="26.1135%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,697,473 samples, 1.38%)</title><rect x="25.8635%" y="805" width="1.3849%" height="15" fill="rgb(238,103,29)" fg:x="69053773" fg:w="3697473"/><text x="26.1135%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,237,799 samples, 0.46%)</title><rect x="26.7847%" y="789" width="0.4636%" height="15" fill="rgb(233,195,47)" fg:x="71513447" fg:w="1237799"/><text x="27.0347%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,237,799 samples, 0.46%)</title><rect x="26.7847%" y="773" width="0.4636%" height="15" fill="rgb(246,218,30)" fg:x="71513447" fg:w="1237799"/><text x="27.0347%" y="783.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,237,799 samples, 0.46%)</title><rect x="26.7847%" y="757" width="0.4636%" height="15" fill="rgb(219,145,47)" fg:x="71513447" fg:w="1237799"/><text x="27.0347%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,237,799 samples, 0.46%)</title><rect x="26.7847%" y="741" width="0.4636%" height="15" fill="rgb(243,12,26)" fg:x="71513447" fg:w="1237799"/><text x="27.0347%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,237,799 samples, 0.46%)</title><rect x="26.7847%" y="725" width="0.4636%" height="15" fill="rgb(214,87,16)" fg:x="71513447" fg:w="1237799"/><text x="27.0347%" y="735.50"></text></g><g><title>alloc::alloc::alloc (1,237,799 samples, 0.46%)</title><rect x="26.7847%" y="709" width="0.4636%" height="15" fill="rgb(208,99,42)" fg:x="71513447" fg:w="1237799"/><text x="27.0347%" y="719.50"></text></g><g><title>malloc (1,237,799 samples, 0.46%)</title><rect x="26.7847%" y="693" width="0.4636%" height="15" fill="rgb(253,99,2)" fg:x="71513447" fg:w="1237799"/><text x="27.0347%" y="703.50"></text></g><g><title>core::clone::Clone::clone (1,344,542 samples, 0.50%)</title><rect x="27.2483%" y="837" width="0.5036%" height="15" fill="rgb(220,168,23)" fg:x="72751246" fg:w="1344542"/><text x="27.4983%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,344,542 samples, 0.50%)</title><rect x="27.2483%" y="821" width="0.5036%" height="15" fill="rgb(242,38,24)" fg:x="72751246" fg:w="1344542"/><text x="27.4983%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21,517,280 samples, 8.06%)</title><rect x="20.1409%" y="1013" width="8.0591%" height="15" fill="rgb(225,182,9)" fg:x="53774910" fg:w="21517280"/><text x="20.3909%" y="1023.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21,517,280 samples, 8.06%)</title><rect x="20.1409%" y="997" width="8.0591%" height="15" fill="rgb(243,178,37)" fg:x="53774910" fg:w="21517280"/><text x="20.3909%" y="1007.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (21,517,280 samples, 8.06%)</title><rect x="20.1409%" y="981" width="8.0591%" height="15" fill="rgb(232,139,19)" fg:x="53774910" fg:w="21517280"/><text x="20.3909%" y="991.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21,517,280 samples, 8.06%)</title><rect x="20.1409%" y="965" width="8.0591%" height="15" fill="rgb(225,201,24)" fg:x="53774910" fg:w="21517280"/><text x="20.3909%" y="975.50">&lt;T as alloc..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (21,517,280 samples, 8.06%)</title><rect x="20.1409%" y="949" width="8.0591%" height="15" fill="rgb(221,47,46)" fg:x="53774910" fg:w="21517280"/><text x="20.3909%" y="959.50">&lt;css_bitvec..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,540,944 samples, 0.95%)</title><rect x="27.2483%" y="933" width="0.9517%" height="15" fill="rgb(249,23,13)" fg:x="72751246" fg:w="2540944"/><text x="27.4983%" y="943.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,540,944 samples, 0.95%)</title><rect x="27.2483%" y="917" width="0.9517%" height="15" fill="rgb(219,9,5)" fg:x="72751246" fg:w="2540944"/><text x="27.4983%" y="927.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,540,944 samples, 0.95%)</title><rect x="27.2483%" y="901" width="0.9517%" height="15" fill="rgb(254,171,16)" fg:x="72751246" fg:w="2540944"/><text x="27.4983%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,540,944 samples, 0.95%)</title><rect x="27.2483%" y="885" width="0.9517%" height="15" fill="rgb(230,171,20)" fg:x="72751246" fg:w="2540944"/><text x="27.4983%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,540,944 samples, 0.95%)</title><rect x="27.2483%" y="869" width="0.9517%" height="15" fill="rgb(210,71,41)" fg:x="72751246" fg:w="2540944"/><text x="27.4983%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,540,944 samples, 0.95%)</title><rect x="27.2483%" y="853" width="0.9517%" height="15" fill="rgb(206,173,20)" fg:x="72751246" fg:w="2540944"/><text x="27.4983%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1,196,402 samples, 0.45%)</title><rect x="27.7519%" y="837" width="0.4481%" height="15" fill="rgb(233,88,34)" fg:x="74095788" fg:w="1196402"/><text x="28.0019%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,196,402 samples, 0.45%)</title><rect x="27.7519%" y="821" width="0.4481%" height="15" fill="rgb(223,209,46)" fg:x="74095788" fg:w="1196402"/><text x="28.0019%" y="831.50"></text></g><g><title>core::ptr::write (1,196,402 samples, 0.45%)</title><rect x="27.7519%" y="805" width="0.4481%" height="15" fill="rgb(250,43,18)" fg:x="74095788" fg:w="1196402"/><text x="28.0019%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,247,804 samples, 0.47%)</title><rect x="28.2000%" y="1013" width="0.4674%" height="15" fill="rgb(208,13,10)" fg:x="75292190" fg:w="1247804"/><text x="28.4500%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24,011,657 samples, 8.99%)</title><rect x="20.1409%" y="1093" width="8.9934%" height="15" fill="rgb(212,200,36)" fg:x="53774910" fg:w="24011657"/><text x="20.3909%" y="1103.50">&lt;alloc::vec::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24,011,657 samples, 8.99%)</title><rect x="20.1409%" y="1077" width="8.9934%" height="15" fill="rgb(225,90,30)" fg:x="53774910" fg:w="24011657"/><text x="20.3909%" y="1087.50">alloc::slice:..</text></g><g><title>alloc::slice::hack::to_vec (24,011,657 samples, 8.99%)</title><rect x="20.1409%" y="1061" width="8.9934%" height="15" fill="rgb(236,182,39)" fg:x="53774910" fg:w="24011657"/><text x="20.3909%" y="1071.50">alloc::slice:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24,011,657 samples, 8.99%)</title><rect x="20.1409%" y="1045" width="8.9934%" height="15" fill="rgb(212,144,35)" fg:x="53774910" fg:w="24011657"/><text x="20.3909%" y="1055.50">&lt;T as alloc::..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (24,011,657 samples, 8.99%)</title><rect x="20.1409%" y="1029" width="8.9934%" height="15" fill="rgb(228,63,44)" fg:x="53774910" fg:w="24011657"/><text x="20.3909%" y="1039.50">&lt;css_bitvecto..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="1013" width="0.4669%" height="15" fill="rgb(228,109,6)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="1023.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="997" width="0.4669%" height="15" fill="rgb(238,117,24)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="1007.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="981" width="0.4669%" height="15" fill="rgb(242,26,26)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="965" width="0.4669%" height="15" fill="rgb(221,92,48)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="949" width="0.4669%" height="15" fill="rgb(209,209,32)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="933" width="0.4669%" height="15" fill="rgb(221,70,22)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="943.50"></text></g><g><title>core::clone::Clone::clone (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="917" width="0.4669%" height="15" fill="rgb(248,145,5)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="901" width="0.4669%" height="15" fill="rgb(226,116,26)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="885" width="0.4669%" height="15" fill="rgb(244,5,17)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="869" width="0.4669%" height="15" fill="rgb(252,159,33)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="853" width="0.4669%" height="15" fill="rgb(206,71,0)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="837" width="0.4669%" height="15" fill="rgb(233,118,54)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="821" width="0.4669%" height="15" fill="rgb(234,83,48)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="805" width="0.4669%" height="15" fill="rgb(228,3,54)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="789" width="0.4669%" height="15" fill="rgb(226,155,13)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="773" width="0.4669%" height="15" fill="rgb(241,28,37)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="783.50"></text></g><g><title>alloc::raw_vec::layout_array (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="757" width="0.4669%" height="15" fill="rgb(233,93,10)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="767.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="741" width="0.4669%" height="15" fill="rgb(225,113,19)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="751.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="725" width="0.4669%" height="15" fill="rgb(241,2,18)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="735.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="709" width="0.4669%" height="15" fill="rgb(228,207,21)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="719.50"></text></g><g><title>core::intrinsics::unlikely (1,246,573 samples, 0.47%)</title><rect x="28.6674%" y="693" width="0.4669%" height="15" fill="rgb(213,211,35)" fg:x="76539994" fg:w="1246573"/><text x="28.9174%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26,560,107 samples, 9.95%)</title><rect x="20.1409%" y="1173" width="9.9479%" height="15" fill="rgb(209,83,10)" fg:x="53774910" fg:w="26560107"/><text x="20.3909%" y="1183.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26,560,107 samples, 9.95%)</title><rect x="20.1409%" y="1157" width="9.9479%" height="15" fill="rgb(209,164,1)" fg:x="53774910" fg:w="26560107"/><text x="20.3909%" y="1167.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (26,560,107 samples, 9.95%)</title><rect x="20.1409%" y="1141" width="9.9479%" height="15" fill="rgb(213,184,43)" fg:x="53774910" fg:w="26560107"/><text x="20.3909%" y="1151.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26,560,107 samples, 9.95%)</title><rect x="20.1409%" y="1125" width="9.9479%" height="15" fill="rgb(231,61,34)" fg:x="53774910" fg:w="26560107"/><text x="20.3909%" y="1135.50">&lt;T as alloc::s..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (26,560,107 samples, 9.95%)</title><rect x="20.1409%" y="1109" width="9.9479%" height="15" fill="rgb(235,75,3)" fg:x="53774910" fg:w="26560107"/><text x="20.3909%" y="1119.50">&lt;css_bitvector..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="1093" width="0.9545%" height="15" fill="rgb(220,106,47)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="1103.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="1077" width="0.9545%" height="15" fill="rgb(210,196,33)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="1087.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="1061" width="0.9545%" height="15" fill="rgb(229,154,42)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="1045" width="0.9545%" height="15" fill="rgb(228,114,26)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="1029" width="0.9545%" height="15" fill="rgb(208,144,1)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="1013" width="0.9545%" height="15" fill="rgb(239,112,37)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="1023.50"></text></g><g><title>core::clone::Clone::clone (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="997" width="0.9545%" height="15" fill="rgb(210,96,50)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="981" width="0.9545%" height="15" fill="rgb(222,178,2)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="965" width="0.9545%" height="15" fill="rgb(226,74,18)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="949" width="0.9545%" height="15" fill="rgb(225,67,54)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="933" width="0.9545%" height="15" fill="rgb(251,92,32)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="917" width="0.9545%" height="15" fill="rgb(228,149,22)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="901" width="0.9545%" height="15" fill="rgb(243,54,13)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="885" width="0.9545%" height="15" fill="rgb(243,180,28)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="869" width="0.9545%" height="15" fill="rgb(208,167,24)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="853" width="0.9545%" height="15" fill="rgb(245,73,45)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="837" width="0.9545%" height="15" fill="rgb(237,203,48)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="821" width="0.9545%" height="15" fill="rgb(211,197,16)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="831.50"></text></g><g><title>alloc::alloc::alloc (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="805" width="0.9545%" height="15" fill="rgb(243,99,51)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="815.50"></text></g><g><title>malloc (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="789" width="0.9545%" height="15" fill="rgb(215,123,29)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="799.50"></text></g><g><title>[libc.so.6] (2,548,450 samples, 0.95%)</title><rect x="29.1343%" y="773" width="0.9545%" height="15" fill="rgb(239,186,37)" fg:x="77786567" fg:w="2548450"/><text x="29.3843%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,240,175 samples, 0.46%)</title><rect x="30.0888%" y="1173" width="0.4645%" height="15" fill="rgb(252,136,39)" fg:x="80335017" fg:w="1240175"/><text x="30.3388%" y="1183.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,240,175 samples, 0.46%)</title><rect x="30.0888%" y="1157" width="0.4645%" height="15" fill="rgb(223,213,32)" fg:x="80335017" fg:w="1240175"/><text x="30.3388%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,240,175 samples, 0.46%)</title><rect x="30.0888%" y="1141" width="0.4645%" height="15" fill="rgb(233,115,5)" fg:x="80335017" fg:w="1240175"/><text x="30.3388%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,240,175 samples, 0.46%)</title><rect x="30.0888%" y="1125" width="0.4645%" height="15" fill="rgb(207,226,44)" fg:x="80335017" fg:w="1240175"/><text x="30.3388%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (1,240,175 samples, 0.46%)</title><rect x="30.0888%" y="1109" width="0.4645%" height="15" fill="rgb(208,126,0)" fg:x="80335017" fg:w="1240175"/><text x="30.3388%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,240,175 samples, 0.46%)</title><rect x="30.0888%" y="1093" width="0.4645%" height="15" fill="rgb(244,66,21)" fg:x="80335017" fg:w="1240175"/><text x="30.3388%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,240,175 samples, 0.46%)</title><rect x="30.0888%" y="1077" width="0.4645%" height="15" fill="rgb(222,97,12)" fg:x="80335017" fg:w="1240175"/><text x="30.3388%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,240,175 samples, 0.46%)</title><rect x="30.0888%" y="1061" width="0.4645%" height="15" fill="rgb(219,213,19)" fg:x="80335017" fg:w="1240175"/><text x="30.3388%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,240,175 samples, 0.46%)</title><rect x="30.0888%" y="1045" width="0.4645%" height="15" fill="rgb(252,169,30)" fg:x="80335017" fg:w="1240175"/><text x="30.3388%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,240,175 samples, 0.46%)</title><rect x="30.0888%" y="1029" width="0.4645%" height="15" fill="rgb(206,32,51)" fg:x="80335017" fg:w="1240175"/><text x="30.3388%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,240,175 samples, 0.46%)</title><rect x="30.0888%" y="1013" width="0.4645%" height="15" fill="rgb(250,172,42)" fg:x="80335017" fg:w="1240175"/><text x="30.3388%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,240,175 samples, 0.46%)</title><rect x="30.0888%" y="997" width="0.4645%" height="15" fill="rgb(209,34,43)" fg:x="80335017" fg:w="1240175"/><text x="30.3388%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1,240,175 samples, 0.46%)</title><rect x="30.0888%" y="981" width="0.4645%" height="15" fill="rgb(223,11,35)" fg:x="80335017" fg:w="1240175"/><text x="30.3388%" y="991.50"></text></g><g><title>malloc (1,240,175 samples, 0.46%)</title><rect x="30.0888%" y="965" width="0.4645%" height="15" fill="rgb(251,219,26)" fg:x="80335017" fg:w="1240175"/><text x="30.3388%" y="975.50"></text></g><g><title>[libc.so.6] (1,240,175 samples, 0.46%)</title><rect x="30.0888%" y="949" width="0.4645%" height="15" fill="rgb(231,119,3)" fg:x="80335017" fg:w="1240175"/><text x="30.3388%" y="959.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,263,148 samples, 0.47%)</title><rect x="30.5533%" y="1173" width="0.4731%" height="15" fill="rgb(216,97,11)" fg:x="81575192" fg:w="1263148"/><text x="30.8033%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,263,148 samples, 0.47%)</title><rect x="30.5533%" y="1157" width="0.4731%" height="15" fill="rgb(223,59,9)" fg:x="81575192" fg:w="1263148"/><text x="30.8033%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,263,148 samples, 0.47%)</title><rect x="30.5533%" y="1141" width="0.4731%" height="15" fill="rgb(233,93,31)" fg:x="81575192" fg:w="1263148"/><text x="30.8033%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (1,263,148 samples, 0.47%)</title><rect x="30.5533%" y="1125" width="0.4731%" height="15" fill="rgb(239,81,33)" fg:x="81575192" fg:w="1263148"/><text x="30.8033%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,263,148 samples, 0.47%)</title><rect x="30.5533%" y="1109" width="0.4731%" height="15" fill="rgb(213,120,34)" fg:x="81575192" fg:w="1263148"/><text x="30.8033%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,263,148 samples, 0.47%)</title><rect x="30.5533%" y="1093" width="0.4731%" height="15" fill="rgb(243,49,53)" fg:x="81575192" fg:w="1263148"/><text x="30.8033%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,263,148 samples, 0.47%)</title><rect x="30.5533%" y="1077" width="0.4731%" height="15" fill="rgb(247,216,33)" fg:x="81575192" fg:w="1263148"/><text x="30.8033%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,263,148 samples, 0.47%)</title><rect x="30.5533%" y="1061" width="0.4731%" height="15" fill="rgb(226,26,14)" fg:x="81575192" fg:w="1263148"/><text x="30.8033%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,263,148 samples, 0.47%)</title><rect x="30.5533%" y="1045" width="0.4731%" height="15" fill="rgb(215,49,53)" fg:x="81575192" fg:w="1263148"/><text x="30.8033%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,263,148 samples, 0.47%)</title><rect x="30.5533%" y="1029" width="0.4731%" height="15" fill="rgb(245,162,40)" fg:x="81575192" fg:w="1263148"/><text x="30.8033%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,263,148 samples, 0.47%)</title><rect x="30.5533%" y="1013" width="0.4731%" height="15" fill="rgb(229,68,17)" fg:x="81575192" fg:w="1263148"/><text x="30.8033%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (1,263,148 samples, 0.47%)</title><rect x="30.5533%" y="997" width="0.4731%" height="15" fill="rgb(213,182,10)" fg:x="81575192" fg:w="1263148"/><text x="30.8033%" y="1007.50"></text></g><g><title>__rdl_alloc (1,263,148 samples, 0.47%)</title><rect x="30.5533%" y="981" width="0.4731%" height="15" fill="rgb(245,125,30)" fg:x="81575192" fg:w="1263148"/><text x="30.8033%" y="991.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,263,148 samples, 0.47%)</title><rect x="30.5533%" y="965" width="0.4731%" height="15" fill="rgb(232,202,2)" fg:x="81575192" fg:w="1263148"/><text x="30.8033%" y="975.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (31,668,892 samples, 11.86%)</title><rect x="20.1409%" y="1189" width="11.8613%" height="15" fill="rgb(237,140,51)" fg:x="53774910" fg:w="31668892"/><text x="20.3909%" y="1199.50">&lt;css_bitvector_com..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,605,462 samples, 0.98%)</title><rect x="31.0264%" y="1173" width="0.9759%" height="15" fill="rgb(236,157,25)" fg:x="82838340" fg:w="2605462"/><text x="31.2764%" y="1183.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,605,462 samples, 0.98%)</title><rect x="31.0264%" y="1157" width="0.9759%" height="15" fill="rgb(219,209,0)" fg:x="82838340" fg:w="2605462"/><text x="31.2764%" y="1167.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,310,648 samples, 0.49%)</title><rect x="31.5113%" y="1141" width="0.4909%" height="15" fill="rgb(240,116,54)" fg:x="84133154" fg:w="1310648"/><text x="31.7613%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,310,648 samples, 0.49%)</title><rect x="31.5113%" y="1125" width="0.4909%" height="15" fill="rgb(216,10,36)" fg:x="84133154" fg:w="1310648"/><text x="31.7613%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,310,648 samples, 0.49%)</title><rect x="31.5113%" y="1109" width="0.4909%" height="15" fill="rgb(222,72,44)" fg:x="84133154" fg:w="1310648"/><text x="31.7613%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,310,648 samples, 0.49%)</title><rect x="31.5113%" y="1093" width="0.4909%" height="15" fill="rgb(232,159,9)" fg:x="84133154" fg:w="1310648"/><text x="31.7613%" y="1103.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,310,648 samples, 0.49%)</title><rect x="31.5113%" y="1077" width="0.4909%" height="15" fill="rgb(210,39,32)" fg:x="84133154" fg:w="1310648"/><text x="31.7613%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,310,648 samples, 0.49%)</title><rect x="31.5113%" y="1061" width="0.4909%" height="15" fill="rgb(216,194,45)" fg:x="84133154" fg:w="1310648"/><text x="31.7613%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,310,648 samples, 0.49%)</title><rect x="31.5113%" y="1045" width="0.4909%" height="15" fill="rgb(218,18,35)" fg:x="84133154" fg:w="1310648"/><text x="31.7613%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1,310,648 samples, 0.49%)</title><rect x="31.5113%" y="1029" width="0.4909%" height="15" fill="rgb(207,83,51)" fg:x="84133154" fg:w="1310648"/><text x="31.7613%" y="1039.50"></text></g><g><title>malloc (1,310,648 samples, 0.49%)</title><rect x="31.5113%" y="1013" width="0.4909%" height="15" fill="rgb(225,63,43)" fg:x="84133154" fg:w="1310648"/><text x="31.7613%" y="1023.50"></text></g><g><title>[libc.so.6] (1,310,648 samples, 0.49%)</title><rect x="31.5113%" y="997" width="0.4909%" height="15" fill="rgb(207,57,36)" fg:x="84133154" fg:w="1310648"/><text x="31.7613%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32,909,006 samples, 12.33%)</title><rect x="20.1409%" y="1253" width="12.3258%" height="15" fill="rgb(216,99,33)" fg:x="53774910" fg:w="32909006"/><text x="20.3909%" y="1263.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32,909,006 samples, 12.33%)</title><rect x="20.1409%" y="1237" width="12.3258%" height="15" fill="rgb(225,42,16)" fg:x="53774910" fg:w="32909006"/><text x="20.3909%" y="1247.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (32,909,006 samples, 12.33%)</title><rect x="20.1409%" y="1221" width="12.3258%" height="15" fill="rgb(220,201,45)" fg:x="53774910" fg:w="32909006"/><text x="20.3909%" y="1231.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32,909,006 samples, 12.33%)</title><rect x="20.1409%" y="1205" width="12.3258%" height="15" fill="rgb(225,33,4)" fg:x="53774910" fg:w="32909006"/><text x="20.3909%" y="1215.50">&lt;T as alloc::slice..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,240,114 samples, 0.46%)</title><rect x="32.0022%" y="1189" width="0.4645%" height="15" fill="rgb(224,33,50)" fg:x="85443802" fg:w="1240114"/><text x="32.2522%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,240,114 samples, 0.46%)</title><rect x="32.0022%" y="1173" width="0.4645%" height="15" fill="rgb(246,198,51)" fg:x="85443802" fg:w="1240114"/><text x="32.2522%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,240,114 samples, 0.46%)</title><rect x="32.0022%" y="1157" width="0.4645%" height="15" fill="rgb(205,22,4)" fg:x="85443802" fg:w="1240114"/><text x="32.2522%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,240,114 samples, 0.46%)</title><rect x="32.0022%" y="1141" width="0.4645%" height="15" fill="rgb(206,3,8)" fg:x="85443802" fg:w="1240114"/><text x="32.2522%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,240,114 samples, 0.46%)</title><rect x="32.0022%" y="1125" width="0.4645%" height="15" fill="rgb(251,23,15)" fg:x="85443802" fg:w="1240114"/><text x="32.2522%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,240,114 samples, 0.46%)</title><rect x="32.0022%" y="1109" width="0.4645%" height="15" fill="rgb(252,88,28)" fg:x="85443802" fg:w="1240114"/><text x="32.2522%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (1,240,114 samples, 0.46%)</title><rect x="32.0022%" y="1093" width="0.4645%" height="15" fill="rgb(212,127,14)" fg:x="85443802" fg:w="1240114"/><text x="32.2522%" y="1103.50"></text></g><g><title>malloc (1,240,114 samples, 0.46%)</title><rect x="32.0022%" y="1077" width="0.4645%" height="15" fill="rgb(247,145,37)" fg:x="85443802" fg:w="1240114"/><text x="32.2522%" y="1087.50"></text></g><g><title>[libc.so.6] (1,240,114 samples, 0.46%)</title><rect x="32.0022%" y="1061" width="0.4645%" height="15" fill="rgb(209,117,53)" fg:x="85443802" fg:w="1240114"/><text x="32.2522%" y="1071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,039,449 samples, 0.39%)</title><rect x="32.4667%" y="1253" width="0.3893%" height="15" fill="rgb(212,90,42)" fg:x="86683916" fg:w="1039449"/><text x="32.7167%" y="1263.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,039,449 samples, 0.39%)</title><rect x="32.4667%" y="1237" width="0.3893%" height="15" fill="rgb(218,164,37)" fg:x="86683916" fg:w="1039449"/><text x="32.7167%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,039,449 samples, 0.39%)</title><rect x="32.4667%" y="1221" width="0.3893%" height="15" fill="rgb(246,65,34)" fg:x="86683916" fg:w="1039449"/><text x="32.7167%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,039,449 samples, 0.39%)</title><rect x="32.4667%" y="1205" width="0.3893%" height="15" fill="rgb(231,100,33)" fg:x="86683916" fg:w="1039449"/><text x="32.7167%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (1,039,449 samples, 0.39%)</title><rect x="32.4667%" y="1189" width="0.3893%" height="15" fill="rgb(228,126,14)" fg:x="86683916" fg:w="1039449"/><text x="32.7167%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,039,449 samples, 0.39%)</title><rect x="32.4667%" y="1173" width="0.3893%" height="15" fill="rgb(215,173,21)" fg:x="86683916" fg:w="1039449"/><text x="32.7167%" y="1183.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,039,449 samples, 0.39%)</title><rect x="32.4667%" y="1157" width="0.3893%" height="15" fill="rgb(210,6,40)" fg:x="86683916" fg:w="1039449"/><text x="32.7167%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,039,449 samples, 0.39%)</title><rect x="32.4667%" y="1141" width="0.3893%" height="15" fill="rgb(212,48,18)" fg:x="86683916" fg:w="1039449"/><text x="32.7167%" y="1151.50"></text></g><g><title>[libc.so.6] (1,039,449 samples, 0.39%)</title><rect x="32.4667%" y="1125" width="0.3893%" height="15" fill="rgb(230,214,11)" fg:x="86683916" fg:w="1039449"/><text x="32.7167%" y="1135.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,236,610 samples, 0.46%)</title><rect x="32.8560%" y="1253" width="0.4632%" height="15" fill="rgb(254,105,39)" fg:x="87723365" fg:w="1236610"/><text x="33.1060%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,236,610 samples, 0.46%)</title><rect x="32.8560%" y="1237" width="0.4632%" height="15" fill="rgb(245,158,5)" fg:x="87723365" fg:w="1236610"/><text x="33.1060%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,236,610 samples, 0.46%)</title><rect x="32.8560%" y="1221" width="0.4632%" height="15" fill="rgb(249,208,11)" fg:x="87723365" fg:w="1236610"/><text x="33.1060%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (1,236,610 samples, 0.46%)</title><rect x="32.8560%" y="1205" width="0.4632%" height="15" fill="rgb(210,39,28)" fg:x="87723365" fg:w="1236610"/><text x="33.1060%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,236,610 samples, 0.46%)</title><rect x="32.8560%" y="1189" width="0.4632%" height="15" fill="rgb(211,56,53)" fg:x="87723365" fg:w="1236610"/><text x="33.1060%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,236,610 samples, 0.46%)</title><rect x="32.8560%" y="1173" width="0.4632%" height="15" fill="rgb(226,201,30)" fg:x="87723365" fg:w="1236610"/><text x="33.1060%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,236,610 samples, 0.46%)</title><rect x="32.8560%" y="1157" width="0.4632%" height="15" fill="rgb(239,101,34)" fg:x="87723365" fg:w="1236610"/><text x="33.1060%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,236,610 samples, 0.46%)</title><rect x="32.8560%" y="1141" width="0.4632%" height="15" fill="rgb(226,209,5)" fg:x="87723365" fg:w="1236610"/><text x="33.1060%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,236,610 samples, 0.46%)</title><rect x="32.8560%" y="1125" width="0.4632%" height="15" fill="rgb(250,105,47)" fg:x="87723365" fg:w="1236610"/><text x="33.1060%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,236,610 samples, 0.46%)</title><rect x="32.8560%" y="1109" width="0.4632%" height="15" fill="rgb(230,72,3)" fg:x="87723365" fg:w="1236610"/><text x="33.1060%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,236,610 samples, 0.46%)</title><rect x="32.8560%" y="1093" width="0.4632%" height="15" fill="rgb(232,218,39)" fg:x="87723365" fg:w="1236610"/><text x="33.1060%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (1,236,610 samples, 0.46%)</title><rect x="32.8560%" y="1077" width="0.4632%" height="15" fill="rgb(248,166,6)" fg:x="87723365" fg:w="1236610"/><text x="33.1060%" y="1087.50"></text></g><g><title>malloc (1,236,610 samples, 0.46%)</title><rect x="32.8560%" y="1061" width="0.4632%" height="15" fill="rgb(247,89,20)" fg:x="87723365" fg:w="1236610"/><text x="33.1060%" y="1071.50"></text></g><g><title>[libc.so.6] (1,236,610 samples, 0.46%)</title><rect x="32.8560%" y="1045" width="0.4632%" height="15" fill="rgb(248,130,54)" fg:x="87723365" fg:w="1236610"/><text x="33.1060%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="1189" width="1.4066%" height="15" fill="rgb(234,196,4)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="1173" width="1.4066%" height="15" fill="rgb(250,143,31)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="1183.50"></text></g><g><title>core::clone::Clone::clone (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="1157" width="1.4066%" height="15" fill="rgb(211,110,34)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="1167.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="1141" width="1.4066%" height="15" fill="rgb(215,124,48)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="1125" width="1.4066%" height="15" fill="rgb(216,46,13)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="1109" width="1.4066%" height="15" fill="rgb(205,184,25)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="1093" width="1.4066%" height="15" fill="rgb(228,1,10)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="1077" width="1.4066%" height="15" fill="rgb(213,116,27)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="1061" width="1.4066%" height="15" fill="rgb(241,95,50)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="1045" width="1.4066%" height="15" fill="rgb(238,48,32)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="1029" width="1.4066%" height="15" fill="rgb(235,113,49)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="1013" width="1.4066%" height="15" fill="rgb(205,127,43)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="997" width="1.4066%" height="15" fill="rgb(250,162,2)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="981" width="1.4066%" height="15" fill="rgb(220,13,41)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="991.50"></text></g><g><title>alloc::alloc::alloc (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="965" width="1.4066%" height="15" fill="rgb(249,221,25)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="975.50"></text></g><g><title>malloc (3,755,489 samples, 1.41%)</title><rect x="33.3192%" y="949" width="1.4066%" height="15" fill="rgb(215,208,19)" fg:x="88959975" fg:w="3755489"/><text x="33.5692%" y="959.50"></text></g><g><title>[libc.so.6] (2,479,645 samples, 0.93%)</title><rect x="33.7970%" y="933" width="0.9287%" height="15" fill="rgb(236,175,2)" fg:x="90235819" fg:w="2479645"/><text x="34.0470%" y="943.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (40,175,643 samples, 15.05%)</title><rect x="20.1409%" y="1269" width="15.0474%" height="15" fill="rgb(241,52,2)" fg:x="53774910" fg:w="40175643"/><text x="20.3909%" y="1279.50">&lt;css_bitvector_compiler..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4,990,578 samples, 1.87%)</title><rect x="33.3192%" y="1253" width="1.8692%" height="15" fill="rgb(248,140,14)" fg:x="88959975" fg:w="4990578"/><text x="33.5692%" y="1263.50">&lt;..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4,990,578 samples, 1.87%)</title><rect x="33.3192%" y="1237" width="1.8692%" height="15" fill="rgb(253,22,42)" fg:x="88959975" fg:w="4990578"/><text x="33.5692%" y="1247.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4,990,578 samples, 1.87%)</title><rect x="33.3192%" y="1221" width="1.8692%" height="15" fill="rgb(234,61,47)" fg:x="88959975" fg:w="4990578"/><text x="33.5692%" y="1231.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,990,578 samples, 1.87%)</title><rect x="33.3192%" y="1205" width="1.8692%" height="15" fill="rgb(208,226,15)" fg:x="88959975" fg:w="4990578"/><text x="33.5692%" y="1215.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,235,089 samples, 0.46%)</title><rect x="34.7258%" y="1189" width="0.4626%" height="15" fill="rgb(217,221,4)" fg:x="92715464" fg:w="1235089"/><text x="34.9758%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,235,089 samples, 0.46%)</title><rect x="34.7258%" y="1173" width="0.4626%" height="15" fill="rgb(212,174,34)" fg:x="92715464" fg:w="1235089"/><text x="34.9758%" y="1183.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,235,089 samples, 0.46%)</title><rect x="34.7258%" y="1157" width="0.4626%" height="15" fill="rgb(253,83,4)" fg:x="92715464" fg:w="1235089"/><text x="34.9758%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,235,089 samples, 0.46%)</title><rect x="34.7258%" y="1141" width="0.4626%" height="15" fill="rgb(250,195,49)" fg:x="92715464" fg:w="1235089"/><text x="34.9758%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,235,089 samples, 0.46%)</title><rect x="34.7258%" y="1125" width="0.4626%" height="15" fill="rgb(241,192,25)" fg:x="92715464" fg:w="1235089"/><text x="34.9758%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (1,235,089 samples, 0.46%)</title><rect x="34.7258%" y="1109" width="0.4626%" height="15" fill="rgb(208,124,10)" fg:x="92715464" fg:w="1235089"/><text x="34.9758%" y="1119.50"></text></g><g><title>malloc (1,235,089 samples, 0.46%)</title><rect x="34.7258%" y="1093" width="0.4626%" height="15" fill="rgb(222,33,0)" fg:x="92715464" fg:w="1235089"/><text x="34.9758%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (41,349,190 samples, 15.49%)</title><rect x="20.1409%" y="1333" width="15.4870%" height="15" fill="rgb(234,209,28)" fg:x="53774910" fg:w="41349190"/><text x="20.3909%" y="1343.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (41,349,190 samples, 15.49%)</title><rect x="20.1409%" y="1317" width="15.4870%" height="15" fill="rgb(224,11,23)" fg:x="53774910" fg:w="41349190"/><text x="20.3909%" y="1327.50">alloc::slice::&lt;impl [T]&gt;..</text></g><g><title>alloc::slice::hack::to_vec (41,349,190 samples, 15.49%)</title><rect x="20.1409%" y="1301" width="15.4870%" height="15" fill="rgb(232,99,1)" fg:x="53774910" fg:w="41349190"/><text x="20.3909%" y="1311.50">alloc::slice::hack::to_v..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (41,349,190 samples, 15.49%)</title><rect x="20.1409%" y="1285" width="15.4870%" height="15" fill="rgb(237,95,45)" fg:x="53774910" fg:w="41349190"/><text x="20.3909%" y="1295.50">&lt;T as alloc::slice::hack..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,173,547 samples, 0.44%)</title><rect x="35.1883%" y="1269" width="0.4395%" height="15" fill="rgb(208,109,11)" fg:x="93950553" fg:w="1173547"/><text x="35.4383%" y="1279.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,254,057 samples, 0.47%)</title><rect x="35.6279%" y="1333" width="0.4697%" height="15" fill="rgb(216,190,48)" fg:x="95124100" fg:w="1254057"/><text x="35.8779%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,254,057 samples, 0.47%)</title><rect x="35.6279%" y="1317" width="0.4697%" height="15" fill="rgb(251,171,36)" fg:x="95124100" fg:w="1254057"/><text x="35.8779%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,254,057 samples, 0.47%)</title><rect x="35.6279%" y="1301" width="0.4697%" height="15" fill="rgb(230,62,22)" fg:x="95124100" fg:w="1254057"/><text x="35.8779%" y="1311.50"></text></g><g><title>alloc::slice::hack::to_vec (1,254,057 samples, 0.47%)</title><rect x="35.6279%" y="1285" width="0.4697%" height="15" fill="rgb(225,114,35)" fg:x="95124100" fg:w="1254057"/><text x="35.8779%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,254,057 samples, 0.47%)</title><rect x="35.6279%" y="1269" width="0.4697%" height="15" fill="rgb(215,118,42)" fg:x="95124100" fg:w="1254057"/><text x="35.8779%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,254,057 samples, 0.47%)</title><rect x="35.6279%" y="1253" width="0.4697%" height="15" fill="rgb(243,119,21)" fg:x="95124100" fg:w="1254057"/><text x="35.8779%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,254,057 samples, 0.47%)</title><rect x="35.6279%" y="1237" width="0.4697%" height="15" fill="rgb(252,177,53)" fg:x="95124100" fg:w="1254057"/><text x="35.8779%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,254,057 samples, 0.47%)</title><rect x="35.6279%" y="1221" width="0.4697%" height="15" fill="rgb(237,209,29)" fg:x="95124100" fg:w="1254057"/><text x="35.8779%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,254,057 samples, 0.47%)</title><rect x="35.6279%" y="1205" width="0.4697%" height="15" fill="rgb(212,65,23)" fg:x="95124100" fg:w="1254057"/><text x="35.8779%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,254,057 samples, 0.47%)</title><rect x="35.6279%" y="1189" width="0.4697%" height="15" fill="rgb(230,222,46)" fg:x="95124100" fg:w="1254057"/><text x="35.8779%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,254,057 samples, 0.47%)</title><rect x="35.6279%" y="1173" width="0.4697%" height="15" fill="rgb(215,135,32)" fg:x="95124100" fg:w="1254057"/><text x="35.8779%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (1,254,057 samples, 0.47%)</title><rect x="35.6279%" y="1157" width="0.4697%" height="15" fill="rgb(246,101,22)" fg:x="95124100" fg:w="1254057"/><text x="35.8779%" y="1167.50"></text></g><g><title>malloc (1,254,057 samples, 0.47%)</title><rect x="35.6279%" y="1141" width="0.4697%" height="15" fill="rgb(206,107,13)" fg:x="95124100" fg:w="1254057"/><text x="35.8779%" y="1151.50"></text></g><g><title>[libc.so.6] (1,254,057 samples, 0.47%)</title><rect x="35.6279%" y="1125" width="0.4697%" height="15" fill="rgb(250,100,44)" fg:x="95124100" fg:w="1254057"/><text x="35.8779%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,542,429 samples, 0.95%)</title><rect x="36.0976%" y="1269" width="0.9522%" height="15" fill="rgb(231,147,38)" fg:x="96378157" fg:w="2542429"/><text x="36.3476%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,542,429 samples, 0.95%)</title><rect x="36.0976%" y="1253" width="0.9522%" height="15" fill="rgb(229,8,40)" fg:x="96378157" fg:w="2542429"/><text x="36.3476%" y="1263.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2,542,429 samples, 0.95%)</title><rect x="36.0976%" y="1237" width="0.9522%" height="15" fill="rgb(221,135,30)" fg:x="96378157" fg:w="2542429"/><text x="36.3476%" y="1247.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2,542,429 samples, 0.95%)</title><rect x="36.0976%" y="1221" width="0.9522%" height="15" fill="rgb(249,193,18)" fg:x="96378157" fg:w="2542429"/><text x="36.3476%" y="1231.50"></text></g><g><title>core::ptr::write (2,542,429 samples, 0.95%)</title><rect x="36.0976%" y="1205" width="0.9522%" height="15" fill="rgb(209,133,39)" fg:x="96378157" fg:w="2542429"/><text x="36.3476%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (47,692,189 samples, 17.86%)</title><rect x="19.6511%" y="1413" width="17.8627%" height="15" fill="rgb(232,100,14)" fg:x="52467014" fg:w="47692189"/><text x="19.9011%" y="1423.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (47,692,189 samples, 17.86%)</title><rect x="19.6511%" y="1397" width="17.8627%" height="15" fill="rgb(224,185,1)" fg:x="52467014" fg:w="47692189"/><text x="19.9011%" y="1407.50">alloc::slice::&lt;impl [T]&gt;::to..</text></g><g><title>alloc::slice::hack::to_vec (47,692,189 samples, 17.86%)</title><rect x="19.6511%" y="1381" width="17.8627%" height="15" fill="rgb(223,139,8)" fg:x="52467014" fg:w="47692189"/><text x="19.9011%" y="1391.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (47,692,189 samples, 17.86%)</title><rect x="19.6511%" y="1365" width="17.8627%" height="15" fill="rgb(232,213,38)" fg:x="52467014" fg:w="47692189"/><text x="19.9011%" y="1375.50">&lt;T as alloc::slice::hack::Co..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (47,692,189 samples, 17.86%)</title><rect x="19.6511%" y="1349" width="17.8627%" height="15" fill="rgb(207,94,22)" fg:x="52467014" fg:w="47692189"/><text x="19.9011%" y="1359.50">&lt;css_bitvector_compiler::Htm..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,781,046 samples, 1.42%)</title><rect x="36.0976%" y="1333" width="1.4162%" height="15" fill="rgb(219,183,54)" fg:x="96378157" fg:w="3781046"/><text x="36.3476%" y="1343.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,781,046 samples, 1.42%)</title><rect x="36.0976%" y="1317" width="1.4162%" height="15" fill="rgb(216,185,54)" fg:x="96378157" fg:w="3781046"/><text x="36.3476%" y="1327.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,781,046 samples, 1.42%)</title><rect x="36.0976%" y="1301" width="1.4162%" height="15" fill="rgb(254,217,39)" fg:x="96378157" fg:w="3781046"/><text x="36.3476%" y="1311.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,781,046 samples, 1.42%)</title><rect x="36.0976%" y="1285" width="1.4162%" height="15" fill="rgb(240,178,23)" fg:x="96378157" fg:w="3781046"/><text x="36.3476%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,238,617 samples, 0.46%)</title><rect x="37.0498%" y="1269" width="0.4639%" height="15" fill="rgb(218,11,47)" fg:x="98920586" fg:w="1238617"/><text x="37.2998%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,238,617 samples, 0.46%)</title><rect x="37.0498%" y="1253" width="0.4639%" height="15" fill="rgb(218,51,51)" fg:x="98920586" fg:w="1238617"/><text x="37.2998%" y="1263.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,238,617 samples, 0.46%)</title><rect x="37.0498%" y="1237" width="0.4639%" height="15" fill="rgb(238,126,27)" fg:x="98920586" fg:w="1238617"/><text x="37.2998%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,238,617 samples, 0.46%)</title><rect x="37.0498%" y="1221" width="0.4639%" height="15" fill="rgb(249,202,22)" fg:x="98920586" fg:w="1238617"/><text x="37.2998%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,238,617 samples, 0.46%)</title><rect x="37.0498%" y="1205" width="0.4639%" height="15" fill="rgb(254,195,49)" fg:x="98920586" fg:w="1238617"/><text x="37.2998%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (1,238,617 samples, 0.46%)</title><rect x="37.0498%" y="1189" width="0.4639%" height="15" fill="rgb(208,123,14)" fg:x="98920586" fg:w="1238617"/><text x="37.2998%" y="1199.50"></text></g><g><title>malloc (1,238,617 samples, 0.46%)</title><rect x="37.0498%" y="1173" width="0.4639%" height="15" fill="rgb(224,200,8)" fg:x="98920586" fg:w="1238617"/><text x="37.2998%" y="1183.50"></text></g><g><title>[libc.so.6] (1,238,617 samples, 0.46%)</title><rect x="37.0498%" y="1157" width="0.4639%" height="15" fill="rgb(217,61,36)" fg:x="98920586" fg:w="1238617"/><text x="37.2998%" y="1167.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (2,464,548 samples, 0.92%)</title><rect x="37.5137%" y="1317" width="0.9231%" height="15" fill="rgb(206,35,45)" fg:x="100159203" fg:w="2464548"/><text x="37.7637%" y="1327.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (2,464,548 samples, 0.92%)</title><rect x="37.5137%" y="1301" width="0.9231%" height="15" fill="rgb(217,65,33)" fg:x="100159203" fg:w="2464548"/><text x="37.7637%" y="1311.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (2,464,548 samples, 0.92%)</title><rect x="37.5137%" y="1285" width="0.9231%" height="15" fill="rgb(222,158,48)" fg:x="100159203" fg:w="2464548"/><text x="37.7637%" y="1295.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (51,430,175 samples, 19.26%)</title><rect x="19.6511%" y="1429" width="19.2627%" height="15" fill="rgb(254,2,54)" fg:x="52467014" fg:w="51430175"/><text x="19.9011%" y="1439.50">&lt;css_bitvector_compiler::HtmlN..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,737,986 samples, 1.40%)</title><rect x="37.5137%" y="1413" width="1.4000%" height="15" fill="rgb(250,143,38)" fg:x="100159203" fg:w="3737986"/><text x="37.7637%" y="1423.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,737,986 samples, 1.40%)</title><rect x="37.5137%" y="1397" width="1.4000%" height="15" fill="rgb(248,25,0)" fg:x="100159203" fg:w="3737986"/><text x="37.7637%" y="1407.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,737,986 samples, 1.40%)</title><rect x="37.5137%" y="1381" width="1.4000%" height="15" fill="rgb(206,152,27)" fg:x="100159203" fg:w="3737986"/><text x="37.7637%" y="1391.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,737,986 samples, 1.40%)</title><rect x="37.5137%" y="1365" width="1.4000%" height="15" fill="rgb(240,77,30)" fg:x="100159203" fg:w="3737986"/><text x="37.7637%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3,737,986 samples, 1.40%)</title><rect x="37.5137%" y="1349" width="1.4000%" height="15" fill="rgb(231,5,3)" fg:x="100159203" fg:w="3737986"/><text x="37.7637%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,737,986 samples, 1.40%)</title><rect x="37.5137%" y="1333" width="1.4000%" height="15" fill="rgb(207,226,32)" fg:x="100159203" fg:w="3737986"/><text x="37.7637%" y="1343.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,273,438 samples, 0.48%)</title><rect x="38.4368%" y="1317" width="0.4770%" height="15" fill="rgb(222,207,47)" fg:x="102623751" fg:w="1273438"/><text x="38.6868%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,273,438 samples, 0.48%)</title><rect x="38.4368%" y="1301" width="0.4770%" height="15" fill="rgb(229,115,45)" fg:x="102623751" fg:w="1273438"/><text x="38.6868%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,273,438 samples, 0.48%)</title><rect x="38.4368%" y="1285" width="0.4770%" height="15" fill="rgb(224,191,6)" fg:x="102623751" fg:w="1273438"/><text x="38.6868%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (1,273,438 samples, 0.48%)</title><rect x="38.4368%" y="1269" width="0.4770%" height="15" fill="rgb(230,227,24)" fg:x="102623751" fg:w="1273438"/><text x="38.6868%" y="1279.50"></text></g><g><title>malloc (1,273,438 samples, 0.48%)</title><rect x="38.4368%" y="1253" width="0.4770%" height="15" fill="rgb(228,80,19)" fg:x="102623751" fg:w="1273438"/><text x="38.6868%" y="1263.50"></text></g><g><title>[libc.so.6] (1,273,438 samples, 0.48%)</title><rect x="38.4368%" y="1237" width="0.4770%" height="15" fill="rgb(247,229,0)" fg:x="102623751" fg:w="1273438"/><text x="38.6868%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (56,521,605 samples, 21.17%)</title><rect x="18.7076%" y="1493" width="21.1697%" height="15" fill="rgb(237,194,15)" fg:x="49947990" fg:w="56521605"/><text x="18.9576%" y="1503.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (55,249,284 samples, 20.69%)</title><rect x="19.1841%" y="1477" width="20.6931%" height="15" fill="rgb(219,203,20)" fg:x="51220311" fg:w="55249284"/><text x="19.4341%" y="1487.50">alloc::slice::&lt;impl [T]&gt;::to_vec_..</text></g><g><title>alloc::slice::hack::to_vec (55,249,284 samples, 20.69%)</title><rect x="19.1841%" y="1461" width="20.6931%" height="15" fill="rgb(234,128,8)" fg:x="51220311" fg:w="55249284"/><text x="19.4341%" y="1471.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (55,249,284 samples, 20.69%)</title><rect x="19.1841%" y="1445" width="20.6931%" height="15" fill="rgb(248,202,8)" fg:x="51220311" fg:w="55249284"/><text x="19.4341%" y="1455.50">&lt;T as alloc::slice::hack::Convert..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,572,406 samples, 0.96%)</title><rect x="38.9138%" y="1429" width="0.9635%" height="15" fill="rgb(206,104,37)" fg:x="103897189" fg:w="2572406"/><text x="39.1638%" y="1439.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,259,552 samples, 0.47%)</title><rect x="39.8772%" y="1493" width="0.4718%" height="15" fill="rgb(223,8,27)" fg:x="106469595" fg:w="1259552"/><text x="40.1272%" y="1503.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,259,552 samples, 0.47%)</title><rect x="39.8772%" y="1477" width="0.4718%" height="15" fill="rgb(216,217,28)" fg:x="106469595" fg:w="1259552"/><text x="40.1272%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,259,552 samples, 0.47%)</title><rect x="39.8772%" y="1461" width="0.4718%" height="15" fill="rgb(249,199,1)" fg:x="106469595" fg:w="1259552"/><text x="40.1272%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,259,552 samples, 0.47%)</title><rect x="39.8772%" y="1445" width="0.4718%" height="15" fill="rgb(240,85,17)" fg:x="106469595" fg:w="1259552"/><text x="40.1272%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (1,259,552 samples, 0.47%)</title><rect x="39.8772%" y="1429" width="0.4718%" height="15" fill="rgb(206,108,45)" fg:x="106469595" fg:w="1259552"/><text x="40.1272%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,259,552 samples, 0.47%)</title><rect x="39.8772%" y="1413" width="0.4718%" height="15" fill="rgb(245,210,41)" fg:x="106469595" fg:w="1259552"/><text x="40.1272%" y="1423.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,259,552 samples, 0.47%)</title><rect x="39.8772%" y="1397" width="0.4718%" height="15" fill="rgb(206,13,37)" fg:x="106469595" fg:w="1259552"/><text x="40.1272%" y="1407.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,259,552 samples, 0.47%)</title><rect x="39.8772%" y="1381" width="0.4718%" height="15" fill="rgb(250,61,18)" fg:x="106469595" fg:w="1259552"/><text x="40.1272%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (65,464,738 samples, 24.52%)</title><rect x="17.2371%" y="1573" width="24.5192%" height="15" fill="rgb(235,172,48)" fg:x="46021839" fg:w="65464738"/><text x="17.4871%" y="1583.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::C..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (65,464,738 samples, 24.52%)</title><rect x="17.2371%" y="1557" width="24.5192%" height="15" fill="rgb(249,201,17)" fg:x="46021839" fg:w="65464738"/><text x="17.4871%" y="1567.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (65,464,738 samples, 24.52%)</title><rect x="17.2371%" y="1541" width="24.5192%" height="15" fill="rgb(219,208,6)" fg:x="46021839" fg:w="65464738"/><text x="17.4871%" y="1551.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (65,464,738 samples, 24.52%)</title><rect x="17.2371%" y="1525" width="24.5192%" height="15" fill="rgb(248,31,23)" fg:x="46021839" fg:w="65464738"/><text x="17.4871%" y="1535.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (65,464,738 samples, 24.52%)</title><rect x="17.2371%" y="1509" width="24.5192%" height="15" fill="rgb(245,15,42)" fg:x="46021839" fg:w="65464738"/><text x="17.4871%" y="1519.50">&lt;css_bitvector_compiler::HtmlNode as co..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,757,430 samples, 1.41%)</title><rect x="40.3490%" y="1493" width="1.4073%" height="15" fill="rgb(222,217,39)" fg:x="107729147" fg:w="3757430"/><text x="40.5990%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,757,430 samples, 1.41%)</title><rect x="40.3490%" y="1477" width="1.4073%" height="15" fill="rgb(210,219,27)" fg:x="107729147" fg:w="3757430"/><text x="40.5990%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,757,430 samples, 1.41%)</title><rect x="40.3490%" y="1461" width="1.4073%" height="15" fill="rgb(252,166,36)" fg:x="107729147" fg:w="3757430"/><text x="40.5990%" y="1471.50"></text></g><g><title>alloc::slice::hack::to_vec (3,757,430 samples, 1.41%)</title><rect x="40.3490%" y="1445" width="1.4073%" height="15" fill="rgb(245,132,34)" fg:x="107729147" fg:w="3757430"/><text x="40.5990%" y="1455.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,757,430 samples, 1.41%)</title><rect x="40.3490%" y="1429" width="1.4073%" height="15" fill="rgb(236,54,3)" fg:x="107729147" fg:w="3757430"/><text x="40.5990%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,757,430 samples, 1.41%)</title><rect x="40.3490%" y="1413" width="1.4073%" height="15" fill="rgb(241,173,43)" fg:x="107729147" fg:w="3757430"/><text x="40.5990%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,757,430 samples, 1.41%)</title><rect x="40.3490%" y="1397" width="1.4073%" height="15" fill="rgb(215,190,9)" fg:x="107729147" fg:w="3757430"/><text x="40.5990%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,757,430 samples, 1.41%)</title><rect x="40.3490%" y="1381" width="1.4073%" height="15" fill="rgb(242,101,16)" fg:x="107729147" fg:w="3757430"/><text x="40.5990%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,757,430 samples, 1.41%)</title><rect x="40.3490%" y="1365" width="1.4073%" height="15" fill="rgb(223,190,21)" fg:x="107729147" fg:w="3757430"/><text x="40.5990%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,757,430 samples, 1.41%)</title><rect x="40.3490%" y="1349" width="1.4073%" height="15" fill="rgb(215,228,25)" fg:x="107729147" fg:w="3757430"/><text x="40.5990%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,757,430 samples, 1.41%)</title><rect x="40.3490%" y="1333" width="1.4073%" height="15" fill="rgb(225,36,22)" fg:x="107729147" fg:w="3757430"/><text x="40.5990%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (3,757,430 samples, 1.41%)</title><rect x="40.3490%" y="1317" width="1.4073%" height="15" fill="rgb(251,106,46)" fg:x="107729147" fg:w="3757430"/><text x="40.5990%" y="1327.50"></text></g><g><title>malloc (3,757,430 samples, 1.41%)</title><rect x="40.3490%" y="1301" width="1.4073%" height="15" fill="rgb(208,90,1)" fg:x="107729147" fg:w="3757430"/><text x="40.5990%" y="1311.50"></text></g><g><title>[libc.so.6] (2,514,781 samples, 0.94%)</title><rect x="40.8144%" y="1285" width="0.9419%" height="15" fill="rgb(243,10,4)" fg:x="108971796" fg:w="2514781"/><text x="41.0644%" y="1295.50"></text></g><g><title>[libc.so.6] (1,228,952 samples, 0.46%)</title><rect x="41.7563%" y="1365" width="0.4603%" height="15" fill="rgb(212,137,27)" fg:x="111486577" fg:w="1228952"/><text x="42.0063%" y="1375.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,474,018 samples, 0.93%)</title><rect x="41.7563%" y="1557" width="0.9266%" height="15" fill="rgb(231,220,49)" fg:x="111486577" fg:w="2474018"/><text x="42.0063%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,474,018 samples, 0.93%)</title><rect x="41.7563%" y="1541" width="0.9266%" height="15" fill="rgb(237,96,20)" fg:x="111486577" fg:w="2474018"/><text x="42.0063%" y="1551.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,474,018 samples, 0.93%)</title><rect x="41.7563%" y="1525" width="0.9266%" height="15" fill="rgb(239,229,30)" fg:x="111486577" fg:w="2474018"/><text x="42.0063%" y="1535.50"></text></g><g><title>alloc::slice::hack::to_vec (2,474,018 samples, 0.93%)</title><rect x="41.7563%" y="1509" width="0.9266%" height="15" fill="rgb(219,65,33)" fg:x="111486577" fg:w="2474018"/><text x="42.0063%" y="1519.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,474,018 samples, 0.93%)</title><rect x="41.7563%" y="1493" width="0.9266%" height="15" fill="rgb(243,134,7)" fg:x="111486577" fg:w="2474018"/><text x="42.0063%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,474,018 samples, 0.93%)</title><rect x="41.7563%" y="1477" width="0.9266%" height="15" fill="rgb(216,177,54)" fg:x="111486577" fg:w="2474018"/><text x="42.0063%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,474,018 samples, 0.93%)</title><rect x="41.7563%" y="1461" width="0.9266%" height="15" fill="rgb(211,160,20)" fg:x="111486577" fg:w="2474018"/><text x="42.0063%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,474,018 samples, 0.93%)</title><rect x="41.7563%" y="1445" width="0.9266%" height="15" fill="rgb(239,85,39)" fg:x="111486577" fg:w="2474018"/><text x="42.0063%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,474,018 samples, 0.93%)</title><rect x="41.7563%" y="1429" width="0.9266%" height="15" fill="rgb(232,125,22)" fg:x="111486577" fg:w="2474018"/><text x="42.0063%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,474,018 samples, 0.93%)</title><rect x="41.7563%" y="1413" width="0.9266%" height="15" fill="rgb(244,57,34)" fg:x="111486577" fg:w="2474018"/><text x="42.0063%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,474,018 samples, 0.93%)</title><rect x="41.7563%" y="1397" width="0.9266%" height="15" fill="rgb(214,203,32)" fg:x="111486577" fg:w="2474018"/><text x="42.0063%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (2,474,018 samples, 0.93%)</title><rect x="41.7563%" y="1381" width="0.9266%" height="15" fill="rgb(207,58,43)" fg:x="111486577" fg:w="2474018"/><text x="42.0063%" y="1391.50"></text></g><g><title>malloc (1,245,066 samples, 0.47%)</title><rect x="42.2166%" y="1365" width="0.4663%" height="15" fill="rgb(215,193,15)" fg:x="112715529" fg:w="1245066"/><text x="42.4666%" y="1375.50"></text></g><g><title>[libc.so.6] (1,245,066 samples, 0.47%)</title><rect x="42.2166%" y="1349" width="0.4663%" height="15" fill="rgb(232,15,44)" fg:x="112715529" fg:w="1245066"/><text x="42.4666%" y="1359.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,723,271 samples, 1.39%)</title><rect x="41.7563%" y="1573" width="1.3945%" height="15" fill="rgb(212,3,48)" fg:x="111486577" fg:w="3723271"/><text x="42.0063%" y="1583.50"></text></g><g><title>[unknown] (1,249,253 samples, 0.47%)</title><rect x="42.6829%" y="1557" width="0.4679%" height="15" fill="rgb(218,128,7)" fg:x="113960595" fg:w="1249253"/><text x="42.9329%" y="1567.50"></text></g><g><title>[libc.so.6] (1,249,253 samples, 0.47%)</title><rect x="42.6829%" y="1541" width="0.4679%" height="15" fill="rgb(226,216,39)" fg:x="113960595" fg:w="1249253"/><text x="42.9329%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,245,835 samples, 0.47%)</title><rect x="43.1508%" y="1493" width="0.4666%" height="15" fill="rgb(243,47,51)" fg:x="115209848" fg:w="1245835"/><text x="43.4008%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,245,835 samples, 0.47%)</title><rect x="43.1508%" y="1477" width="0.4666%" height="15" fill="rgb(241,183,40)" fg:x="115209848" fg:w="1245835"/><text x="43.4008%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,245,835 samples, 0.47%)</title><rect x="43.1508%" y="1461" width="0.4666%" height="15" fill="rgb(231,217,32)" fg:x="115209848" fg:w="1245835"/><text x="43.4008%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,245,835 samples, 0.47%)</title><rect x="43.1508%" y="1445" width="0.4666%" height="15" fill="rgb(229,61,38)" fg:x="115209848" fg:w="1245835"/><text x="43.4008%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,245,835 samples, 0.47%)</title><rect x="43.1508%" y="1429" width="0.4666%" height="15" fill="rgb(225,210,5)" fg:x="115209848" fg:w="1245835"/><text x="43.4008%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,245,835 samples, 0.47%)</title><rect x="43.1508%" y="1413" width="0.4666%" height="15" fill="rgb(231,79,45)" fg:x="115209848" fg:w="1245835"/><text x="43.4008%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (1,245,835 samples, 0.47%)</title><rect x="43.1508%" y="1397" width="0.4666%" height="15" fill="rgb(224,100,7)" fg:x="115209848" fg:w="1245835"/><text x="43.4008%" y="1407.50"></text></g><g><title>malloc (1,245,835 samples, 0.47%)</title><rect x="43.1508%" y="1381" width="0.4666%" height="15" fill="rgb(241,198,18)" fg:x="115209848" fg:w="1245835"/><text x="43.4008%" y="1391.50"></text></g><g><title>[libc.so.6] (1,245,835 samples, 0.47%)</title><rect x="43.1508%" y="1365" width="0.4666%" height="15" fill="rgb(252,97,53)" fg:x="115209848" fg:w="1245835"/><text x="43.4008%" y="1375.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,492,226 samples, 0.93%)</title><rect x="43.1508%" y="1573" width="0.9334%" height="15" fill="rgb(220,88,7)" fg:x="115209848" fg:w="2492226"/><text x="43.4008%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,492,226 samples, 0.93%)</title><rect x="43.1508%" y="1557" width="0.9334%" height="15" fill="rgb(213,176,14)" fg:x="115209848" fg:w="2492226"/><text x="43.4008%" y="1567.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,492,226 samples, 0.93%)</title><rect x="43.1508%" y="1541" width="0.9334%" height="15" fill="rgb(246,73,7)" fg:x="115209848" fg:w="2492226"/><text x="43.4008%" y="1551.50"></text></g><g><title>alloc::slice::hack::to_vec (2,492,226 samples, 0.93%)</title><rect x="43.1508%" y="1525" width="0.9334%" height="15" fill="rgb(245,64,36)" fg:x="115209848" fg:w="2492226"/><text x="43.4008%" y="1535.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,492,226 samples, 0.93%)</title><rect x="43.1508%" y="1509" width="0.9334%" height="15" fill="rgb(245,80,10)" fg:x="115209848" fg:w="2492226"/><text x="43.4008%" y="1519.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,246,391 samples, 0.47%)</title><rect x="43.6174%" y="1493" width="0.4668%" height="15" fill="rgb(232,107,50)" fg:x="116455683" fg:w="1246391"/><text x="43.8674%" y="1503.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,246,391 samples, 0.47%)</title><rect x="43.6174%" y="1477" width="0.4668%" height="15" fill="rgb(253,3,0)" fg:x="116455683" fg:w="1246391"/><text x="43.8674%" y="1487.50"></text></g><g><title>[libc.so.6] (1,246,391 samples, 0.47%)</title><rect x="43.6174%" y="1461" width="0.4668%" height="15" fill="rgb(212,99,53)" fg:x="116455683" fg:w="1246391"/><text x="43.8674%" y="1471.50"></text></g><g><title>core::clone::Clone::clone (1,242,952 samples, 0.47%)</title><rect x="44.5501%" y="1477" width="0.4655%" height="15" fill="rgb(249,111,54)" fg:x="118945699" fg:w="1242952"/><text x="44.8001%" y="1487.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,242,952 samples, 0.47%)</title><rect x="44.5501%" y="1461" width="0.4655%" height="15" fill="rgb(249,55,30)" fg:x="118945699" fg:w="1242952"/><text x="44.8001%" y="1471.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (80,478,022 samples, 30.14%)</title><rect x="15.3383%" y="1589" width="30.1423%" height="15" fill="rgb(237,47,42)" fg:x="40952273" fg:w="80478022"/><text x="15.5883%" y="1599.50">&lt;css_bitvector_compiler::HtmlNode as core::clone:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,728,221 samples, 1.40%)</title><rect x="44.0843%" y="1573" width="1.3964%" height="15" fill="rgb(211,20,18)" fg:x="117702074" fg:w="3728221"/><text x="44.3343%" y="1583.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,728,221 samples, 1.40%)</title><rect x="44.0843%" y="1557" width="1.3964%" height="15" fill="rgb(231,203,46)" fg:x="117702074" fg:w="3728221"/><text x="44.3343%" y="1567.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,484,596 samples, 0.93%)</title><rect x="44.5501%" y="1541" width="0.9306%" height="15" fill="rgb(237,142,3)" fg:x="118945699" fg:w="2484596"/><text x="44.8001%" y="1551.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,484,596 samples, 0.93%)</title><rect x="44.5501%" y="1525" width="0.9306%" height="15" fill="rgb(241,107,1)" fg:x="118945699" fg:w="2484596"/><text x="44.8001%" y="1535.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,484,596 samples, 0.93%)</title><rect x="44.5501%" y="1509" width="0.9306%" height="15" fill="rgb(229,83,13)" fg:x="118945699" fg:w="2484596"/><text x="44.8001%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,484,596 samples, 0.93%)</title><rect x="44.5501%" y="1493" width="0.9306%" height="15" fill="rgb(241,91,40)" fg:x="118945699" fg:w="2484596"/><text x="44.8001%" y="1503.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1,241,644 samples, 0.47%)</title><rect x="45.0156%" y="1477" width="0.4650%" height="15" fill="rgb(225,3,45)" fg:x="120188651" fg:w="1241644"/><text x="45.2656%" y="1487.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,241,644 samples, 0.47%)</title><rect x="45.0156%" y="1461" width="0.4650%" height="15" fill="rgb(244,223,14)" fg:x="120188651" fg:w="1241644"/><text x="45.2656%" y="1471.50"></text></g><g><title>[libc.so.6] (1,241,644 samples, 0.47%)</title><rect x="45.0156%" y="1445" width="0.4650%" height="15" fill="rgb(224,124,37)" fg:x="120188651" fg:w="1241644"/><text x="45.2656%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (81,778,207 samples, 30.63%)</title><rect x="15.3383%" y="1653" width="30.6293%" height="15" fill="rgb(251,171,30)" fg:x="40952273" fg:w="81778207"/><text x="15.5883%" y="1663.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (81,778,207 samples, 30.63%)</title><rect x="15.3383%" y="1637" width="30.6293%" height="15" fill="rgb(236,46,54)" fg:x="40952273" fg:w="81778207"/><text x="15.5883%" y="1647.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (81,778,207 samples, 30.63%)</title><rect x="15.3383%" y="1621" width="30.6293%" height="15" fill="rgb(245,213,5)" fg:x="40952273" fg:w="81778207"/><text x="15.5883%" y="1631.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (81,778,207 samples, 30.63%)</title><rect x="15.3383%" y="1605" width="30.6293%" height="15" fill="rgb(230,144,27)" fg:x="40952273" fg:w="81778207"/><text x="15.5883%" y="1615.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,300,185 samples, 0.49%)</title><rect x="45.4806%" y="1589" width="0.4870%" height="15" fill="rgb(220,86,6)" fg:x="121430295" fg:w="1300185"/><text x="45.7306%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,300,185 samples, 0.49%)</title><rect x="45.4806%" y="1573" width="0.4870%" height="15" fill="rgb(240,20,13)" fg:x="121430295" fg:w="1300185"/><text x="45.7306%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,300,185 samples, 0.49%)</title><rect x="45.4806%" y="1557" width="0.4870%" height="15" fill="rgb(217,89,34)" fg:x="121430295" fg:w="1300185"/><text x="45.7306%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,300,185 samples, 0.49%)</title><rect x="45.4806%" y="1541" width="0.4870%" height="15" fill="rgb(229,13,5)" fg:x="121430295" fg:w="1300185"/><text x="45.7306%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,300,185 samples, 0.49%)</title><rect x="45.4806%" y="1525" width="0.4870%" height="15" fill="rgb(244,67,35)" fg:x="121430295" fg:w="1300185"/><text x="45.7306%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,300,185 samples, 0.49%)</title><rect x="45.4806%" y="1509" width="0.4870%" height="15" fill="rgb(221,40,2)" fg:x="121430295" fg:w="1300185"/><text x="45.7306%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (1,300,185 samples, 0.49%)</title><rect x="45.4806%" y="1493" width="0.4870%" height="15" fill="rgb(237,157,21)" fg:x="121430295" fg:w="1300185"/><text x="45.7306%" y="1503.50"></text></g><g><title>malloc (1,300,185 samples, 0.49%)</title><rect x="45.4806%" y="1477" width="0.4870%" height="15" fill="rgb(222,94,11)" fg:x="121430295" fg:w="1300185"/><text x="45.7306%" y="1487.50"></text></g><g><title>[libc.so.6] (1,300,185 samples, 0.49%)</title><rect x="45.4806%" y="1461" width="0.4870%" height="15" fill="rgb(249,113,6)" fg:x="121430295" fg:w="1300185"/><text x="45.7306%" y="1471.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (84,137,814 samples, 31.51%)</title><rect x="15.3383%" y="1669" width="31.5131%" height="15" fill="rgb(238,137,36)" fg:x="40952273" fg:w="84137814"/><text x="15.5883%" y="1679.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::C..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,359,607 samples, 0.88%)</title><rect x="45.9676%" y="1653" width="0.8838%" height="15" fill="rgb(210,102,26)" fg:x="122730480" fg:w="2359607"/><text x="46.2176%" y="1663.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,359,607 samples, 0.88%)</title><rect x="45.9676%" y="1637" width="0.8838%" height="15" fill="rgb(218,30,30)" fg:x="122730480" fg:w="2359607"/><text x="46.2176%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,359,607 samples, 0.88%)</title><rect x="45.9676%" y="1621" width="0.8838%" height="15" fill="rgb(214,67,26)" fg:x="122730480" fg:w="2359607"/><text x="46.2176%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,359,607 samples, 0.88%)</title><rect x="45.9676%" y="1605" width="0.8838%" height="15" fill="rgb(251,9,53)" fg:x="122730480" fg:w="2359607"/><text x="46.2176%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (2,359,607 samples, 0.88%)</title><rect x="45.9676%" y="1589" width="0.8838%" height="15" fill="rgb(228,204,25)" fg:x="122730480" fg:w="2359607"/><text x="46.2176%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,359,607 samples, 0.88%)</title><rect x="45.9676%" y="1573" width="0.8838%" height="15" fill="rgb(207,153,8)" fg:x="122730480" fg:w="2359607"/><text x="46.2176%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,359,607 samples, 0.88%)</title><rect x="45.9676%" y="1557" width="0.8838%" height="15" fill="rgb(242,9,16)" fg:x="122730480" fg:w="2359607"/><text x="46.2176%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,359,607 samples, 0.88%)</title><rect x="45.9676%" y="1541" width="0.8838%" height="15" fill="rgb(217,211,10)" fg:x="122730480" fg:w="2359607"/><text x="46.2176%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,359,607 samples, 0.88%)</title><rect x="45.9676%" y="1525" width="0.8838%" height="15" fill="rgb(219,228,52)" fg:x="122730480" fg:w="2359607"/><text x="46.2176%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,359,607 samples, 0.88%)</title><rect x="45.9676%" y="1509" width="0.8838%" height="15" fill="rgb(231,92,29)" fg:x="122730480" fg:w="2359607"/><text x="46.2176%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,359,607 samples, 0.88%)</title><rect x="45.9676%" y="1493" width="0.8838%" height="15" fill="rgb(232,8,23)" fg:x="122730480" fg:w="2359607"/><text x="46.2176%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,359,607 samples, 0.88%)</title><rect x="45.9676%" y="1477" width="0.8838%" height="15" fill="rgb(216,211,34)" fg:x="122730480" fg:w="2359607"/><text x="46.2176%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (2,359,607 samples, 0.88%)</title><rect x="45.9676%" y="1461" width="0.8838%" height="15" fill="rgb(236,151,0)" fg:x="122730480" fg:w="2359607"/><text x="46.2176%" y="1471.50"></text></g><g><title>malloc (1,038,013 samples, 0.39%)</title><rect x="46.4626%" y="1445" width="0.3888%" height="15" fill="rgb(209,168,3)" fg:x="124052074" fg:w="1038013"/><text x="46.7126%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (85,369,657 samples, 31.97%)</title><rect x="15.3383%" y="1733" width="31.9744%" height="15" fill="rgb(208,129,28)" fg:x="40952273" fg:w="85369657"/><text x="15.5883%" y="1743.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (85,369,657 samples, 31.97%)</title><rect x="15.3383%" y="1717" width="31.9744%" height="15" fill="rgb(229,78,22)" fg:x="40952273" fg:w="85369657"/><text x="15.5883%" y="1727.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (85,369,657 samples, 31.97%)</title><rect x="15.3383%" y="1701" width="31.9744%" height="15" fill="rgb(228,187,13)" fg:x="40952273" fg:w="85369657"/><text x="15.5883%" y="1711.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (85,369,657 samples, 31.97%)</title><rect x="15.3383%" y="1685" width="31.9744%" height="15" fill="rgb(240,119,24)" fg:x="40952273" fg:w="85369657"/><text x="15.5883%" y="1695.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,231,843 samples, 0.46%)</title><rect x="46.8514%" y="1669" width="0.4614%" height="15" fill="rgb(209,194,42)" fg:x="125090087" fg:w="1231843"/><text x="47.1014%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,231,843 samples, 0.46%)</title><rect x="46.8514%" y="1653" width="0.4614%" height="15" fill="rgb(247,200,46)" fg:x="125090087" fg:w="1231843"/><text x="47.1014%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,231,843 samples, 0.46%)</title><rect x="46.8514%" y="1637" width="0.4614%" height="15" fill="rgb(218,76,16)" fg:x="125090087" fg:w="1231843"/><text x="47.1014%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,231,843 samples, 0.46%)</title><rect x="46.8514%" y="1621" width="0.4614%" height="15" fill="rgb(225,21,48)" fg:x="125090087" fg:w="1231843"/><text x="47.1014%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,231,843 samples, 0.46%)</title><rect x="46.8514%" y="1605" width="0.4614%" height="15" fill="rgb(239,223,50)" fg:x="125090087" fg:w="1231843"/><text x="47.1014%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,231,843 samples, 0.46%)</title><rect x="46.8514%" y="1589" width="0.4614%" height="15" fill="rgb(244,45,21)" fg:x="125090087" fg:w="1231843"/><text x="47.1014%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (1,231,843 samples, 0.46%)</title><rect x="46.8514%" y="1573" width="0.4614%" height="15" fill="rgb(232,33,43)" fg:x="125090087" fg:w="1231843"/><text x="47.1014%" y="1583.50"></text></g><g><title>__rdl_alloc (1,231,843 samples, 0.46%)</title><rect x="46.8514%" y="1557" width="0.4614%" height="15" fill="rgb(209,8,3)" fg:x="125090087" fg:w="1231843"/><text x="47.1014%" y="1567.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,231,843 samples, 0.46%)</title><rect x="46.8514%" y="1541" width="0.4614%" height="15" fill="rgb(214,25,53)" fg:x="125090087" fg:w="1231843"/><text x="47.1014%" y="1551.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,253,557 samples, 0.47%)</title><rect x="47.3128%" y="1733" width="0.4695%" height="15" fill="rgb(254,186,54)" fg:x="126321930" fg:w="1253557"/><text x="47.5628%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,253,557 samples, 0.47%)</title><rect x="47.3128%" y="1717" width="0.4695%" height="15" fill="rgb(208,174,49)" fg:x="126321930" fg:w="1253557"/><text x="47.5628%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,253,557 samples, 0.47%)</title><rect x="47.3128%" y="1701" width="0.4695%" height="15" fill="rgb(233,191,51)" fg:x="126321930" fg:w="1253557"/><text x="47.5628%" y="1711.50"></text></g><g><title>alloc::slice::hack::to_vec (1,253,557 samples, 0.47%)</title><rect x="47.3128%" y="1685" width="0.4695%" height="15" fill="rgb(222,134,10)" fg:x="126321930" fg:w="1253557"/><text x="47.5628%" y="1695.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,253,557 samples, 0.47%)</title><rect x="47.3128%" y="1669" width="0.4695%" height="15" fill="rgb(230,226,20)" fg:x="126321930" fg:w="1253557"/><text x="47.5628%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,253,557 samples, 0.47%)</title><rect x="47.3128%" y="1653" width="0.4695%" height="15" fill="rgb(251,111,25)" fg:x="126321930" fg:w="1253557"/><text x="47.5628%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,253,557 samples, 0.47%)</title><rect x="47.3128%" y="1637" width="0.4695%" height="15" fill="rgb(224,40,46)" fg:x="126321930" fg:w="1253557"/><text x="47.5628%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,253,557 samples, 0.47%)</title><rect x="47.3128%" y="1621" width="0.4695%" height="15" fill="rgb(236,108,47)" fg:x="126321930" fg:w="1253557"/><text x="47.5628%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,253,557 samples, 0.47%)</title><rect x="47.3128%" y="1605" width="0.4695%" height="15" fill="rgb(234,93,0)" fg:x="126321930" fg:w="1253557"/><text x="47.5628%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,253,557 samples, 0.47%)</title><rect x="47.3128%" y="1589" width="0.4695%" height="15" fill="rgb(224,213,32)" fg:x="126321930" fg:w="1253557"/><text x="47.5628%" y="1599.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,253,557 samples, 0.47%)</title><rect x="47.3128%" y="1573" width="0.4695%" height="15" fill="rgb(251,11,48)" fg:x="126321930" fg:w="1253557"/><text x="47.5628%" y="1583.50"></text></g><g><title>alloc::alloc::alloc (1,253,557 samples, 0.47%)</title><rect x="47.3128%" y="1557" width="0.4695%" height="15" fill="rgb(236,173,5)" fg:x="126321930" fg:w="1253557"/><text x="47.5628%" y="1567.50"></text></g><g><title>__rust_alloc (1,253,557 samples, 0.47%)</title><rect x="47.3128%" y="1541" width="0.4695%" height="15" fill="rgb(230,95,12)" fg:x="126321930" fg:w="1253557"/><text x="47.5628%" y="1551.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1669" width="0.4882%" height="15" fill="rgb(232,209,1)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1653" width="0.4882%" height="15" fill="rgb(232,6,1)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1663.50"></text></g><g><title>core::clone::Clone::clone (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1637" width="0.4882%" height="15" fill="rgb(210,224,50)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1647.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1621" width="0.4882%" height="15" fill="rgb(228,127,35)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1605" width="0.4882%" height="15" fill="rgb(245,102,45)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1589" width="0.4882%" height="15" fill="rgb(214,1,49)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1599.50"></text></g><g><title>alloc::slice::hack::to_vec (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1573" width="0.4882%" height="15" fill="rgb(226,163,40)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1583.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1557" width="0.4882%" height="15" fill="rgb(239,212,28)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1541" width="0.4882%" height="15" fill="rgb(220,20,13)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1525" width="0.4882%" height="15" fill="rgb(210,164,35)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1509" width="0.4882%" height="15" fill="rgb(248,109,41)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1493" width="0.4882%" height="15" fill="rgb(238,23,50)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1477" width="0.4882%" height="15" fill="rgb(211,48,49)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1461" width="0.4882%" height="15" fill="rgb(223,36,21)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1445" width="0.4882%" height="15" fill="rgb(207,123,46)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1455.50"></text></g><g><title>malloc (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1429" width="0.4882%" height="15" fill="rgb(240,218,32)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1439.50"></text></g><g><title>[libc.so.6] (1,303,418 samples, 0.49%)</title><rect x="47.7823%" y="1413" width="0.4882%" height="15" fill="rgb(252,5,43)" fg:x="127575487" fg:w="1303418"/><text x="48.0323%" y="1423.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (91,728,770 samples, 34.36%)</title><rect x="14.3805%" y="1749" width="34.3562%" height="15" fill="rgb(252,84,19)" fg:x="38394928" fg:w="91728770"/><text x="14.6305%" y="1759.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,548,211 samples, 0.95%)</title><rect x="47.7823%" y="1733" width="0.9544%" height="15" fill="rgb(243,152,39)" fg:x="127575487" fg:w="2548211"/><text x="48.0323%" y="1743.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,548,211 samples, 0.95%)</title><rect x="47.7823%" y="1717" width="0.9544%" height="15" fill="rgb(234,160,15)" fg:x="127575487" fg:w="2548211"/><text x="48.0323%" y="1727.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,548,211 samples, 0.95%)</title><rect x="47.7823%" y="1701" width="0.9544%" height="15" fill="rgb(237,34,20)" fg:x="127575487" fg:w="2548211"/><text x="48.0323%" y="1711.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,548,211 samples, 0.95%)</title><rect x="47.7823%" y="1685" width="0.9544%" height="15" fill="rgb(229,97,13)" fg:x="127575487" fg:w="2548211"/><text x="48.0323%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,244,793 samples, 0.47%)</title><rect x="48.2704%" y="1669" width="0.4662%" height="15" fill="rgb(234,71,50)" fg:x="128878905" fg:w="1244793"/><text x="48.5204%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,244,793 samples, 0.47%)</title><rect x="48.2704%" y="1653" width="0.4662%" height="15" fill="rgb(253,155,4)" fg:x="128878905" fg:w="1244793"/><text x="48.5204%" y="1663.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,244,793 samples, 0.47%)</title><rect x="48.2704%" y="1637" width="0.4662%" height="15" fill="rgb(222,185,37)" fg:x="128878905" fg:w="1244793"/><text x="48.5204%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,244,793 samples, 0.47%)</title><rect x="48.2704%" y="1621" width="0.4662%" height="15" fill="rgb(251,177,13)" fg:x="128878905" fg:w="1244793"/><text x="48.5204%" y="1631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,244,793 samples, 0.47%)</title><rect x="48.2704%" y="1605" width="0.4662%" height="15" fill="rgb(250,179,40)" fg:x="128878905" fg:w="1244793"/><text x="48.5204%" y="1615.50"></text></g><g><title>alloc::alloc::alloc (1,244,793 samples, 0.47%)</title><rect x="48.2704%" y="1589" width="0.4662%" height="15" fill="rgb(242,44,2)" fg:x="128878905" fg:w="1244793"/><text x="48.5204%" y="1599.50"></text></g><g><title>malloc (1,244,793 samples, 0.47%)</title><rect x="48.2704%" y="1573" width="0.4662%" height="15" fill="rgb(216,177,13)" fg:x="128878905" fg:w="1244793"/><text x="48.5204%" y="1583.50"></text></g><g><title>[libc.so.6] (1,244,793 samples, 0.47%)</title><rect x="48.2704%" y="1557" width="0.4662%" height="15" fill="rgb(216,106,43)" fg:x="128878905" fg:w="1244793"/><text x="48.5204%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (92,938,863 samples, 34.81%)</title><rect x="14.3805%" y="1813" width="34.8094%" height="15" fill="rgb(216,183,2)" fg:x="38394928" fg:w="92938863"/><text x="14.6305%" y="1823.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (92,938,863 samples, 34.81%)</title><rect x="14.3805%" y="1797" width="34.8094%" height="15" fill="rgb(249,75,3)" fg:x="38394928" fg:w="92938863"/><text x="14.6305%" y="1807.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (92,938,863 samples, 34.81%)</title><rect x="14.3805%" y="1781" width="34.8094%" height="15" fill="rgb(219,67,39)" fg:x="38394928" fg:w="92938863"/><text x="14.6305%" y="1791.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (92,938,863 samples, 34.81%)</title><rect x="14.3805%" y="1765" width="34.8094%" height="15" fill="rgb(253,228,2)" fg:x="38394928" fg:w="92938863"/><text x="14.6305%" y="1775.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,210,093 samples, 0.45%)</title><rect x="48.7367%" y="1749" width="0.4532%" height="15" fill="rgb(235,138,27)" fg:x="130123698" fg:w="1210093"/><text x="48.9867%" y="1759.50"></text></g><g><title>__rust_alloc (1,237,122 samples, 0.46%)</title><rect x="49.1899%" y="1605" width="0.4634%" height="15" fill="rgb(236,97,51)" fg:x="131333791" fg:w="1237122"/><text x="49.4399%" y="1615.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,489,543 samples, 0.93%)</title><rect x="49.1899%" y="1797" width="0.9324%" height="15" fill="rgb(240,80,30)" fg:x="131333791" fg:w="2489543"/><text x="49.4399%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,489,543 samples, 0.93%)</title><rect x="49.1899%" y="1781" width="0.9324%" height="15" fill="rgb(230,178,19)" fg:x="131333791" fg:w="2489543"/><text x="49.4399%" y="1791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,489,543 samples, 0.93%)</title><rect x="49.1899%" y="1765" width="0.9324%" height="15" fill="rgb(210,190,27)" fg:x="131333791" fg:w="2489543"/><text x="49.4399%" y="1775.50"></text></g><g><title>alloc::slice::hack::to_vec (2,489,543 samples, 0.93%)</title><rect x="49.1899%" y="1749" width="0.9324%" height="15" fill="rgb(222,107,31)" fg:x="131333791" fg:w="2489543"/><text x="49.4399%" y="1759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,489,543 samples, 0.93%)</title><rect x="49.1899%" y="1733" width="0.9324%" height="15" fill="rgb(216,127,34)" fg:x="131333791" fg:w="2489543"/><text x="49.4399%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,489,543 samples, 0.93%)</title><rect x="49.1899%" y="1717" width="0.9324%" height="15" fill="rgb(234,116,52)" fg:x="131333791" fg:w="2489543"/><text x="49.4399%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,489,543 samples, 0.93%)</title><rect x="49.1899%" y="1701" width="0.9324%" height="15" fill="rgb(222,124,15)" fg:x="131333791" fg:w="2489543"/><text x="49.4399%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,489,543 samples, 0.93%)</title><rect x="49.1899%" y="1685" width="0.9324%" height="15" fill="rgb(231,179,28)" fg:x="131333791" fg:w="2489543"/><text x="49.4399%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,489,543 samples, 0.93%)</title><rect x="49.1899%" y="1669" width="0.9324%" height="15" fill="rgb(226,93,45)" fg:x="131333791" fg:w="2489543"/><text x="49.4399%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,489,543 samples, 0.93%)</title><rect x="49.1899%" y="1653" width="0.9324%" height="15" fill="rgb(215,8,51)" fg:x="131333791" fg:w="2489543"/><text x="49.4399%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,489,543 samples, 0.93%)</title><rect x="49.1899%" y="1637" width="0.9324%" height="15" fill="rgb(223,106,5)" fg:x="131333791" fg:w="2489543"/><text x="49.4399%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (2,489,543 samples, 0.93%)</title><rect x="49.1899%" y="1621" width="0.9324%" height="15" fill="rgb(250,191,5)" fg:x="131333791" fg:w="2489543"/><text x="49.4399%" y="1631.50"></text></g><g><title>malloc (1,252,421 samples, 0.47%)</title><rect x="49.6533%" y="1605" width="0.4691%" height="15" fill="rgb(242,132,44)" fg:x="132570913" fg:w="1252421"/><text x="49.9033%" y="1615.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,601,059 samples, 1.35%)</title><rect x="49.1899%" y="1813" width="1.3487%" height="15" fill="rgb(251,152,29)" fg:x="131333791" fg:w="3601059"/><text x="49.4399%" y="1823.50"></text></g><g><title>[unknown] (1,111,516 samples, 0.42%)</title><rect x="50.1223%" y="1797" width="0.4163%" height="15" fill="rgb(218,179,5)" fg:x="133823334" fg:w="1111516"/><text x="50.3723%" y="1807.50"></text></g><g><title>[libc.so.6] (1,111,516 samples, 0.42%)</title><rect x="50.1223%" y="1781" width="0.4163%" height="15" fill="rgb(227,67,19)" fg:x="133823334" fg:w="1111516"/><text x="50.3723%" y="1791.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,234,417 samples, 0.46%)</title><rect x="50.5386%" y="1813" width="0.4623%" height="15" fill="rgb(233,119,31)" fg:x="134934850" fg:w="1234417"/><text x="50.7886%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,234,417 samples, 0.46%)</title><rect x="50.5386%" y="1797" width="0.4623%" height="15" fill="rgb(241,120,22)" fg:x="134934850" fg:w="1234417"/><text x="50.7886%" y="1807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,234,417 samples, 0.46%)</title><rect x="50.5386%" y="1781" width="0.4623%" height="15" fill="rgb(224,102,30)" fg:x="134934850" fg:w="1234417"/><text x="50.7886%" y="1791.50"></text></g><g><title>alloc::slice::hack::to_vec (1,234,417 samples, 0.46%)</title><rect x="50.5386%" y="1765" width="0.4623%" height="15" fill="rgb(210,164,37)" fg:x="134934850" fg:w="1234417"/><text x="50.7886%" y="1775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,234,417 samples, 0.46%)</title><rect x="50.5386%" y="1749" width="0.4623%" height="15" fill="rgb(226,191,16)" fg:x="134934850" fg:w="1234417"/><text x="50.7886%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,234,417 samples, 0.46%)</title><rect x="50.5386%" y="1733" width="0.4623%" height="15" fill="rgb(214,40,45)" fg:x="134934850" fg:w="1234417"/><text x="50.7886%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,234,417 samples, 0.46%)</title><rect x="50.5386%" y="1717" width="0.4623%" height="15" fill="rgb(244,29,26)" fg:x="134934850" fg:w="1234417"/><text x="50.7886%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,234,417 samples, 0.46%)</title><rect x="50.5386%" y="1701" width="0.4623%" height="15" fill="rgb(216,16,5)" fg:x="134934850" fg:w="1234417"/><text x="50.7886%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,234,417 samples, 0.46%)</title><rect x="50.5386%" y="1685" width="0.4623%" height="15" fill="rgb(249,76,35)" fg:x="134934850" fg:w="1234417"/><text x="50.7886%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,234,417 samples, 0.46%)</title><rect x="50.5386%" y="1669" width="0.4623%" height="15" fill="rgb(207,11,44)" fg:x="134934850" fg:w="1234417"/><text x="50.7886%" y="1679.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,234,417 samples, 0.46%)</title><rect x="50.5386%" y="1653" width="0.4623%" height="15" fill="rgb(228,190,49)" fg:x="134934850" fg:w="1234417"/><text x="50.7886%" y="1663.50"></text></g><g><title>alloc::alloc::alloc (1,234,417 samples, 0.46%)</title><rect x="50.5386%" y="1637" width="0.4623%" height="15" fill="rgb(214,173,12)" fg:x="134934850" fg:w="1234417"/><text x="50.7886%" y="1647.50"></text></g><g><title>malloc (1,234,417 samples, 0.46%)</title><rect x="50.5386%" y="1621" width="0.4623%" height="15" fill="rgb(218,26,35)" fg:x="134934850" fg:w="1234417"/><text x="50.7886%" y="1631.50"></text></g><g><title>[libc.so.6] (1,234,417 samples, 0.46%)</title><rect x="50.5386%" y="1605" width="0.4623%" height="15" fill="rgb(220,200,19)" fg:x="134934850" fg:w="1234417"/><text x="50.7886%" y="1615.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (99,019,616 samples, 37.09%)</title><rect x="14.3805%" y="1829" width="37.0869%" height="15" fill="rgb(239,95,49)" fg:x="38394928" fg:w="99019616"/><text x="14.6305%" y="1839.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::cl..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,245,277 samples, 0.47%)</title><rect x="51.0010%" y="1813" width="0.4664%" height="15" fill="rgb(235,85,53)" fg:x="136169267" fg:w="1245277"/><text x="51.2510%" y="1823.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,245,277 samples, 0.47%)</title><rect x="51.0010%" y="1797" width="0.4664%" height="15" fill="rgb(233,133,31)" fg:x="136169267" fg:w="1245277"/><text x="51.2510%" y="1807.50"></text></g><g><title>__rdl_alloc (1,370,481 samples, 0.51%)</title><rect x="51.4674%" y="1717" width="0.5133%" height="15" fill="rgb(218,25,20)" fg:x="137414544" fg:w="1370481"/><text x="51.7174%" y="1727.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,370,481 samples, 0.51%)</title><rect x="51.4674%" y="1701" width="0.5133%" height="15" fill="rgb(252,210,38)" fg:x="137414544" fg:w="1370481"/><text x="51.7174%" y="1711.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (103,836,219 samples, 38.89%)</title><rect x="14.3805%" y="2069" width="38.8909%" height="15" fill="rgb(242,134,21)" fg:x="38394928" fg:w="103836219"/><text x="14.6305%" y="2079.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (103,836,219 samples, 38.89%)</title><rect x="14.3805%" y="2053" width="38.8909%" height="15" fill="rgb(213,28,48)" fg:x="38394928" fg:w="103836219"/><text x="14.6305%" y="2063.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (103,836,219 samples, 38.89%)</title><rect x="14.3805%" y="2037" width="38.8909%" height="15" fill="rgb(250,196,2)" fg:x="38394928" fg:w="103836219"/><text x="14.6305%" y="2047.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (103,836,219 samples, 38.89%)</title><rect x="14.3805%" y="2021" width="38.8909%" height="15" fill="rgb(227,5,17)" fg:x="38394928" fg:w="103836219"/><text x="14.6305%" y="2031.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (103,836,219 samples, 38.89%)</title><rect x="14.3805%" y="2005" width="38.8909%" height="15" fill="rgb(221,226,24)" fg:x="38394928" fg:w="103836219"/><text x="14.6305%" y="2015.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (103,836,219 samples, 38.89%)</title><rect x="14.3805%" y="1989" width="38.8909%" height="15" fill="rgb(211,5,48)" fg:x="38394928" fg:w="103836219"/><text x="14.6305%" y="1999.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (103,836,219 samples, 38.89%)</title><rect x="14.3805%" y="1973" width="38.8909%" height="15" fill="rgb(219,150,6)" fg:x="38394928" fg:w="103836219"/><text x="14.6305%" y="1983.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (103,836,219 samples, 38.89%)</title><rect x="14.3805%" y="1957" width="38.8909%" height="15" fill="rgb(251,46,16)" fg:x="38394928" fg:w="103836219"/><text x="14.6305%" y="1967.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (103,836,219 samples, 38.89%)</title><rect x="14.3805%" y="1941" width="38.8909%" height="15" fill="rgb(220,204,40)" fg:x="38394928" fg:w="103836219"/><text x="14.6305%" y="1951.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (103,836,219 samples, 38.89%)</title><rect x="14.3805%" y="1925" width="38.8909%" height="15" fill="rgb(211,85,2)" fg:x="38394928" fg:w="103836219"/><text x="14.6305%" y="1935.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (103,836,219 samples, 38.89%)</title><rect x="14.3805%" y="1909" width="38.8909%" height="15" fill="rgb(229,17,7)" fg:x="38394928" fg:w="103836219"/><text x="14.6305%" y="1919.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (103,836,219 samples, 38.89%)</title><rect x="14.3805%" y="1893" width="38.8909%" height="15" fill="rgb(239,72,28)" fg:x="38394928" fg:w="103836219"/><text x="14.6305%" y="1903.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (103,836,219 samples, 38.89%)</title><rect x="14.3805%" y="1877" width="38.8909%" height="15" fill="rgb(230,47,54)" fg:x="38394928" fg:w="103836219"/><text x="14.6305%" y="1887.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (103,836,219 samples, 38.89%)</title><rect x="14.3805%" y="1861" width="38.8909%" height="15" fill="rgb(214,50,8)" fg:x="38394928" fg:w="103836219"/><text x="14.6305%" y="1871.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (103,836,219 samples, 38.89%)</title><rect x="14.3805%" y="1845" width="38.8909%" height="15" fill="rgb(216,198,43)" fg:x="38394928" fg:w="103836219"/><text x="14.6305%" y="1855.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,816,603 samples, 1.80%)</title><rect x="51.4674%" y="1829" width="1.8040%" height="15" fill="rgb(234,20,35)" fg:x="137414544" fg:w="4816603"/><text x="51.7174%" y="1839.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,816,603 samples, 1.80%)</title><rect x="51.4674%" y="1813" width="1.8040%" height="15" fill="rgb(254,45,19)" fg:x="137414544" fg:w="4816603"/><text x="51.7174%" y="1823.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,816,603 samples, 1.80%)</title><rect x="51.4674%" y="1797" width="1.8040%" height="15" fill="rgb(219,14,44)" fg:x="137414544" fg:w="4816603"/><text x="51.7174%" y="1807.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,816,603 samples, 1.80%)</title><rect x="51.4674%" y="1781" width="1.8040%" height="15" fill="rgb(217,220,26)" fg:x="137414544" fg:w="4816603"/><text x="51.7174%" y="1791.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,816,603 samples, 1.80%)</title><rect x="51.4674%" y="1765" width="1.8040%" height="15" fill="rgb(213,158,28)" fg:x="137414544" fg:w="4816603"/><text x="51.7174%" y="1775.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (4,816,603 samples, 1.80%)</title><rect x="51.4674%" y="1749" width="1.8040%" height="15" fill="rgb(252,51,52)" fg:x="137414544" fg:w="4816603"/><text x="51.7174%" y="1759.50">a..</text></g><g><title>alloc::alloc::alloc (4,816,603 samples, 1.80%)</title><rect x="51.4674%" y="1733" width="1.8040%" height="15" fill="rgb(246,89,16)" fg:x="137414544" fg:w="4816603"/><text x="51.7174%" y="1743.50">a..</text></g><g><title>malloc (3,446,122 samples, 1.29%)</title><rect x="51.9807%" y="1717" width="1.2907%" height="15" fill="rgb(216,158,49)" fg:x="138785025" fg:w="3446122"/><text x="52.2307%" y="1727.50"></text></g><g><title>[libc.so.6] (2,208,017 samples, 0.83%)</title><rect x="52.4444%" y="1701" width="0.8270%" height="15" fill="rgb(236,107,19)" fg:x="140023130" fg:w="2208017"/><text x="52.6944%" y="1711.50"></text></g><g><title>[libc.so.6] (2,208,017 samples, 0.83%)</title><rect x="52.4444%" y="1685" width="0.8270%" height="15" fill="rgb(228,185,30)" fg:x="140023130" fg:w="2208017"/><text x="52.6944%" y="1695.50"></text></g><g><title>[libc.so.6] (991,679 samples, 0.37%)</title><rect x="52.9000%" y="1669" width="0.3714%" height="15" fill="rgb(246,134,8)" fg:x="141239468" fg:w="991679"/><text x="53.1500%" y="1679.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1989" width="0.3744%" height="15" fill="rgb(214,143,50)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1999.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1973" width="0.3744%" height="15" fill="rgb(228,75,8)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1983.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1957" width="0.3744%" height="15" fill="rgb(207,175,4)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1967.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1941" width="0.3744%" height="15" fill="rgb(205,108,24)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1951.50"></text></g><g><title>alloc::string::String::push_str (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1925" width="0.3744%" height="15" fill="rgb(244,120,49)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1909" width="0.3744%" height="15" fill="rgb(223,47,38)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1893" width="0.3744%" height="15" fill="rgb(229,179,11)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1877" width="0.3744%" height="15" fill="rgb(231,122,1)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1861" width="0.3744%" height="15" fill="rgb(245,119,9)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1845" width="0.3744%" height="15" fill="rgb(241,163,25)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1829" width="0.3744%" height="15" fill="rgb(217,214,3)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1813" width="0.3744%" height="15" fill="rgb(240,86,28)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1797" width="0.3744%" height="15" fill="rgb(215,47,9)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1807.50"></text></g><g><title>alloc::raw_vec::finish_grow (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1781" width="0.3744%" height="15" fill="rgb(252,25,45)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1791.50"></text></g><g><title>malloc (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1765" width="0.3744%" height="15" fill="rgb(251,164,9)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1775.50"></text></g><g><title>[libc.so.6] (999,534 samples, 0.37%)</title><rect x="53.2714%" y="1749" width="0.3744%" height="15" fill="rgb(233,194,0)" fg:x="142231147" fg:w="999534"/><text x="53.5214%" y="1759.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (867,749 samples, 0.33%)</title><rect x="53.6458%" y="1925" width="0.3250%" height="15" fill="rgb(249,111,24)" fg:x="143230681" fg:w="867749"/><text x="53.8958%" y="1935.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (867,749 samples, 0.33%)</title><rect x="53.6458%" y="1909" width="0.3250%" height="15" fill="rgb(250,223,3)" fg:x="143230681" fg:w="867749"/><text x="53.8958%" y="1919.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (867,749 samples, 0.33%)</title><rect x="53.6458%" y="1893" width="0.3250%" height="15" fill="rgb(236,178,37)" fg:x="143230681" fg:w="867749"/><text x="53.8958%" y="1903.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (867,749 samples, 0.33%)</title><rect x="53.6458%" y="1877" width="0.3250%" height="15" fill="rgb(241,158,50)" fg:x="143230681" fg:w="867749"/><text x="53.8958%" y="1887.50"></text></g><g><title>alloc::string::String::push_str (867,749 samples, 0.33%)</title><rect x="53.6458%" y="1861" width="0.3250%" height="15" fill="rgb(213,121,41)" fg:x="143230681" fg:w="867749"/><text x="53.8958%" y="1871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (867,749 samples, 0.33%)</title><rect x="53.6458%" y="1845" width="0.3250%" height="15" fill="rgb(240,92,3)" fg:x="143230681" fg:w="867749"/><text x="53.8958%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (867,749 samples, 0.33%)</title><rect x="53.6458%" y="1829" width="0.3250%" height="15" fill="rgb(205,123,3)" fg:x="143230681" fg:w="867749"/><text x="53.8958%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (867,749 samples, 0.33%)</title><rect x="53.6458%" y="1813" width="0.3250%" height="15" fill="rgb(205,97,47)" fg:x="143230681" fg:w="867749"/><text x="53.8958%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (867,749 samples, 0.33%)</title><rect x="53.6458%" y="1797" width="0.3250%" height="15" fill="rgb(247,152,14)" fg:x="143230681" fg:w="867749"/><text x="53.8958%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (867,749 samples, 0.33%)</title><rect x="53.6458%" y="1781" width="0.3250%" height="15" fill="rgb(248,195,53)" fg:x="143230681" fg:w="867749"/><text x="53.8958%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (867,749 samples, 0.33%)</title><rect x="53.6458%" y="1765" width="0.3250%" height="15" fill="rgb(226,201,16)" fg:x="143230681" fg:w="867749"/><text x="53.8958%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (867,749 samples, 0.33%)</title><rect x="53.6458%" y="1749" width="0.3250%" height="15" fill="rgb(205,98,0)" fg:x="143230681" fg:w="867749"/><text x="53.8958%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (867,749 samples, 0.33%)</title><rect x="53.6458%" y="1733" width="0.3250%" height="15" fill="rgb(214,191,48)" fg:x="143230681" fg:w="867749"/><text x="53.8958%" y="1743.50"></text></g><g><title>alloc::raw_vec::finish_grow (867,749 samples, 0.33%)</title><rect x="53.6458%" y="1717" width="0.3250%" height="15" fill="rgb(237,112,39)" fg:x="143230681" fg:w="867749"/><text x="53.8958%" y="1727.50"></text></g><g><title>benchmark::json_to_html_node (2,068,412 samples, 0.77%)</title><rect x="53.6458%" y="1973" width="0.7747%" height="15" fill="rgb(247,203,27)" fg:x="143230681" fg:w="2068412"/><text x="53.8958%" y="1983.50"></text></g><g><title>benchmark::json_to_html_node (2,068,412 samples, 0.77%)</title><rect x="53.6458%" y="1957" width="0.7747%" height="15" fill="rgb(235,124,28)" fg:x="143230681" fg:w="2068412"/><text x="53.8958%" y="1967.50"></text></g><g><title>benchmark::json_to_html_node (2,068,412 samples, 0.77%)</title><rect x="53.6458%" y="1941" width="0.7747%" height="15" fill="rgb(208,207,46)" fg:x="143230681" fg:w="2068412"/><text x="53.8958%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,200,663 samples, 0.45%)</title><rect x="53.9708%" y="1925" width="0.4497%" height="15" fill="rgb(234,176,4)" fg:x="144098430" fg:w="1200663"/><text x="54.2208%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,200,663 samples, 0.45%)</title><rect x="53.9708%" y="1909" width="0.4497%" height="15" fill="rgb(230,133,28)" fg:x="144098430" fg:w="1200663"/><text x="54.2208%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,200,663 samples, 0.45%)</title><rect x="53.9708%" y="1893" width="0.4497%" height="15" fill="rgb(211,137,40)" fg:x="144098430" fg:w="1200663"/><text x="54.2208%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,200,663 samples, 0.45%)</title><rect x="53.9708%" y="1877" width="0.4497%" height="15" fill="rgb(254,35,13)" fg:x="144098430" fg:w="1200663"/><text x="54.2208%" y="1887.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,200,663 samples, 0.45%)</title><rect x="53.9708%" y="1861" width="0.4497%" height="15" fill="rgb(225,49,51)" fg:x="144098430" fg:w="1200663"/><text x="54.2208%" y="1871.50"></text></g><g><title>malloc (1,200,663 samples, 0.45%)</title><rect x="53.9708%" y="1845" width="0.4497%" height="15" fill="rgb(251,10,15)" fg:x="144098430" fg:w="1200663"/><text x="54.2208%" y="1855.50"></text></g><g><title>[libc.so.6] (1,200,663 samples, 0.45%)</title><rect x="53.9708%" y="1829" width="0.4497%" height="15" fill="rgb(228,207,15)" fg:x="144098430" fg:w="1200663"/><text x="54.2208%" y="1839.50"></text></g><g><title>benchmark::json_to_html_node (3,396,333 samples, 1.27%)</title><rect x="53.6458%" y="1989" width="1.2721%" height="15" fill="rgb(241,99,19)" fg:x="143230681" fg:w="3396333"/><text x="53.8958%" y="1999.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (1,327,921 samples, 0.50%)</title><rect x="54.4205%" y="1973" width="0.4974%" height="15" fill="rgb(207,104,49)" fg:x="145299093" fg:w="1327921"/><text x="54.6705%" y="1983.50"></text></g><g><title>css_bitvector_compiler::BitVector::new (1,327,921 samples, 0.50%)</title><rect x="54.4205%" y="1957" width="0.4974%" height="15" fill="rgb(234,99,18)" fg:x="145299093" fg:w="1327921"/><text x="54.6705%" y="1967.50"></text></g><g><title>alloc::vec::from_elem (1,327,921 samples, 0.50%)</title><rect x="54.4205%" y="1941" width="0.4974%" height="15" fill="rgb(213,191,49)" fg:x="145299093" fg:w="1327921"/><text x="54.6705%" y="1951.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,327,921 samples, 0.50%)</title><rect x="54.4205%" y="1925" width="0.4974%" height="15" fill="rgb(210,226,19)" fg:x="145299093" fg:w="1327921"/><text x="54.6705%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,327,921 samples, 0.50%)</title><rect x="54.4205%" y="1909" width="0.4974%" height="15" fill="rgb(229,97,18)" fg:x="145299093" fg:w="1327921"/><text x="54.6705%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,327,921 samples, 0.50%)</title><rect x="54.4205%" y="1893" width="0.4974%" height="15" fill="rgb(211,167,15)" fg:x="145299093" fg:w="1327921"/><text x="54.6705%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,327,921 samples, 0.50%)</title><rect x="54.4205%" y="1877" width="0.4974%" height="15" fill="rgb(210,169,34)" fg:x="145299093" fg:w="1327921"/><text x="54.6705%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,327,921 samples, 0.50%)</title><rect x="54.4205%" y="1861" width="0.4974%" height="15" fill="rgb(241,121,31)" fg:x="145299093" fg:w="1327921"/><text x="54.6705%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,327,921 samples, 0.50%)</title><rect x="54.4205%" y="1845" width="0.4974%" height="15" fill="rgb(232,40,11)" fg:x="145299093" fg:w="1327921"/><text x="54.6705%" y="1855.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,327,921 samples, 0.50%)</title><rect x="54.4205%" y="1829" width="0.4974%" height="15" fill="rgb(205,86,26)" fg:x="145299093" fg:w="1327921"/><text x="54.6705%" y="1839.50"></text></g><g><title>__libc_calloc (1,327,921 samples, 0.50%)</title><rect x="54.4205%" y="1813" width="0.4974%" height="15" fill="rgb(231,126,28)" fg:x="145299093" fg:w="1327921"/><text x="54.6705%" y="1823.50"></text></g><g><title>[libc.so.6] (1,327,921 samples, 0.50%)</title><rect x="54.4205%" y="1797" width="0.4974%" height="15" fill="rgb(219,221,18)" fg:x="145299093" fg:w="1327921"/><text x="54.6705%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1989" width="0.4963%" height="15" fill="rgb(211,40,0)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1999.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1973" width="0.4963%" height="15" fill="rgb(239,85,43)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1983.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1957" width="0.4963%" height="15" fill="rgb(231,55,21)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1967.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1941" width="0.4963%" height="15" fill="rgb(225,184,43)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1951.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1925" width="0.4963%" height="15" fill="rgb(251,158,41)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1935.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1909" width="0.4963%" height="15" fill="rgb(234,159,37)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1893" width="0.4963%" height="15" fill="rgb(216,204,22)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1903.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1877" width="0.4963%" height="15" fill="rgb(214,17,3)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1861" width="0.4963%" height="15" fill="rgb(212,111,17)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1871.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1845" width="0.4963%" height="15" fill="rgb(221,157,24)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1855.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1829" width="0.4963%" height="15" fill="rgb(252,16,13)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1813" width="0.4963%" height="15" fill="rgb(221,62,2)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1823.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1797" width="0.4963%" height="15" fill="rgb(247,87,22)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1781" width="0.4963%" height="15" fill="rgb(215,73,9)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1765" width="0.4963%" height="15" fill="rgb(207,175,33)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1749" width="0.4963%" height="15" fill="rgb(243,129,54)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1733" width="0.4963%" height="15" fill="rgb(227,119,45)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1717" width="0.4963%" height="15" fill="rgb(205,109,36)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1701" width="0.4963%" height="15" fill="rgb(205,6,39)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1711.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (1,325,110 samples, 0.50%)</title><rect x="54.9178%" y="1685" width="0.4963%" height="15" fill="rgb(221,32,16)" fg:x="146627014" fg:w="1325110"/><text x="55.1678%" y="1695.50"></text></g><g><title>benchmark::json_to_html_node (6,671,981 samples, 2.50%)</title><rect x="53.2714%" y="2021" width="2.4989%" height="15" fill="rgb(228,144,50)" fg:x="142231147" fg:w="6671981"/><text x="53.5214%" y="2031.50">be..</text></g><g><title>benchmark::json_to_html_node (6,671,981 samples, 2.50%)</title><rect x="53.2714%" y="2005" width="2.4989%" height="15" fill="rgb(229,201,53)" fg:x="142231147" fg:w="6671981"/><text x="53.5214%" y="2015.50">be..</text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (951,004 samples, 0.36%)</title><rect x="55.4142%" y="1989" width="0.3562%" height="15" fill="rgb(249,153,27)" fg:x="147952124" fg:w="951004"/><text x="55.6642%" y="1999.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (951,004 samples, 0.36%)</title><rect x="55.4142%" y="1973" width="0.3562%" height="15" fill="rgb(227,106,25)" fg:x="147952124" fg:w="951004"/><text x="55.6642%" y="1983.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (951,004 samples, 0.36%)</title><rect x="55.4142%" y="1957" width="0.3562%" height="15" fill="rgb(230,65,29)" fg:x="147952124" fg:w="951004"/><text x="55.6642%" y="1967.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (951,004 samples, 0.36%)</title><rect x="55.4142%" y="1941" width="0.3562%" height="15" fill="rgb(221,57,46)" fg:x="147952124" fg:w="951004"/><text x="55.6642%" y="1951.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (951,004 samples, 0.36%)</title><rect x="55.4142%" y="1925" width="0.3562%" height="15" fill="rgb(229,161,17)" fg:x="147952124" fg:w="951004"/><text x="55.6642%" y="1935.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (951,004 samples, 0.36%)</title><rect x="55.4142%" y="1909" width="0.3562%" height="15" fill="rgb(222,213,11)" fg:x="147952124" fg:w="951004"/><text x="55.6642%" y="1919.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (951,004 samples, 0.36%)</title><rect x="55.4142%" y="1893" width="0.3562%" height="15" fill="rgb(235,35,13)" fg:x="147952124" fg:w="951004"/><text x="55.6642%" y="1903.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (951,004 samples, 0.36%)</title><rect x="55.4142%" y="1877" width="0.3562%" height="15" fill="rgb(233,158,34)" fg:x="147952124" fg:w="951004"/><text x="55.6642%" y="1887.50"></text></g><g><title>benchmark::json_to_html_node (7,906,714 samples, 2.96%)</title><rect x="53.2714%" y="2053" width="2.9614%" height="15" fill="rgb(215,151,48)" fg:x="142231147" fg:w="7906714"/><text x="53.5214%" y="2063.50">ben..</text></g><g><title>benchmark::json_to_html_node (7,906,714 samples, 2.96%)</title><rect x="53.2714%" y="2037" width="2.9614%" height="15" fill="rgb(229,84,14)" fg:x="142231147" fg:w="7906714"/><text x="53.5214%" y="2047.50">ben..</text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,234,733 samples, 0.46%)</title><rect x="55.7703%" y="2021" width="0.4625%" height="15" fill="rgb(229,68,14)" fg:x="148903128" fg:w="1234733"/><text x="56.0203%" y="2031.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,234,733 samples, 0.46%)</title><rect x="55.7703%" y="2005" width="0.4625%" height="15" fill="rgb(243,106,26)" fg:x="148903128" fg:w="1234733"/><text x="56.0203%" y="2015.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,234,733 samples, 0.46%)</title><rect x="55.7703%" y="1989" width="0.4625%" height="15" fill="rgb(206,45,38)" fg:x="148903128" fg:w="1234733"/><text x="56.0203%" y="1999.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,234,733 samples, 0.46%)</title><rect x="55.7703%" y="1973" width="0.4625%" height="15" fill="rgb(226,6,15)" fg:x="148903128" fg:w="1234733"/><text x="56.0203%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,234,733 samples, 0.46%)</title><rect x="55.7703%" y="1957" width="0.4625%" height="15" fill="rgb(232,22,54)" fg:x="148903128" fg:w="1234733"/><text x="56.0203%" y="1967.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,234,733 samples, 0.46%)</title><rect x="55.7703%" y="1941" width="0.4625%" height="15" fill="rgb(229,222,32)" fg:x="148903128" fg:w="1234733"/><text x="56.0203%" y="1951.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,234,733 samples, 0.46%)</title><rect x="55.7703%" y="1925" width="0.4625%" height="15" fill="rgb(228,62,29)" fg:x="148903128" fg:w="1234733"/><text x="56.0203%" y="1935.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,234,733 samples, 0.46%)</title><rect x="55.7703%" y="1909" width="0.4625%" height="15" fill="rgb(251,103,34)" fg:x="148903128" fg:w="1234733"/><text x="56.0203%" y="1919.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,234,733 samples, 0.46%)</title><rect x="55.7703%" y="1893" width="0.4625%" height="15" fill="rgb(233,12,30)" fg:x="148903128" fg:w="1234733"/><text x="56.0203%" y="1903.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,234,733 samples, 0.46%)</title><rect x="55.7703%" y="1877" width="0.4625%" height="15" fill="rgb(238,52,0)" fg:x="148903128" fg:w="1234733"/><text x="56.0203%" y="1887.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,234,733 samples, 0.46%)</title><rect x="55.7703%" y="1861" width="0.4625%" height="15" fill="rgb(223,98,5)" fg:x="148903128" fg:w="1234733"/><text x="56.0203%" y="1871.50"></text></g><g><title>benchmark::apply_frame_modifications (9,212,075 samples, 3.45%)</title><rect x="53.2714%" y="2069" width="3.4503%" height="15" fill="rgb(228,75,37)" fg:x="142231147" fg:w="9212075"/><text x="53.5214%" y="2079.50">ben..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (1,305,361 samples, 0.49%)</title><rect x="56.2328%" y="2053" width="0.4889%" height="15" fill="rgb(205,115,49)" fg:x="150137861" fg:w="1305361"/><text x="56.4828%" y="2063.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (1,305,361 samples, 0.49%)</title><rect x="56.2328%" y="2037" width="0.4889%" height="15" fill="rgb(250,154,43)" fg:x="150137861" fg:w="1305361"/><text x="56.4828%" y="2047.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1,305,361 samples, 0.49%)</title><rect x="56.2328%" y="2021" width="0.4889%" height="15" fill="rgb(226,43,29)" fg:x="150137861" fg:w="1305361"/><text x="56.4828%" y="2031.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1,305,361 samples, 0.49%)</title><rect x="56.2328%" y="2005" width="0.4889%" height="15" fill="rgb(249,228,39)" fg:x="150137861" fg:w="1305361"/><text x="56.4828%" y="2015.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,305,361 samples, 0.49%)</title><rect x="56.2328%" y="1989" width="0.4889%" height="15" fill="rgb(216,79,43)" fg:x="150137861" fg:w="1305361"/><text x="56.4828%" y="1999.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,305,361 samples, 0.49%)</title><rect x="56.2328%" y="1973" width="0.4889%" height="15" fill="rgb(228,95,12)" fg:x="150137861" fg:w="1305361"/><text x="56.4828%" y="1983.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,305,361 samples, 0.49%)</title><rect x="56.2328%" y="1957" width="0.4889%" height="15" fill="rgb(249,221,15)" fg:x="150137861" fg:w="1305361"/><text x="56.4828%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,305,361 samples, 0.49%)</title><rect x="56.2328%" y="1941" width="0.4889%" height="15" fill="rgb(233,34,13)" fg:x="150137861" fg:w="1305361"/><text x="56.4828%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,305,361 samples, 0.49%)</title><rect x="56.2328%" y="1925" width="0.4889%" height="15" fill="rgb(214,103,39)" fg:x="150137861" fg:w="1305361"/><text x="56.4828%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,305,361 samples, 0.49%)</title><rect x="56.2328%" y="1909" width="0.4889%" height="15" fill="rgb(251,126,39)" fg:x="150137861" fg:w="1305361"/><text x="56.4828%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,305,361 samples, 0.49%)</title><rect x="56.2328%" y="1893" width="0.4889%" height="15" fill="rgb(214,216,36)" fg:x="150137861" fg:w="1305361"/><text x="56.4828%" y="1903.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,305,361 samples, 0.49%)</title><rect x="56.2328%" y="1877" width="0.4889%" height="15" fill="rgb(220,221,8)" fg:x="150137861" fg:w="1305361"/><text x="56.4828%" y="1887.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="2069" width="0.4979%" height="15" fill="rgb(240,216,3)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="2079.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="2053" width="0.4979%" height="15" fill="rgb(232,218,17)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="2063.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="2037" width="0.4979%" height="15" fill="rgb(229,163,45)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="2047.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="2021" width="0.4979%" height="15" fill="rgb(231,110,42)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="2031.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="2005" width="0.4979%" height="15" fill="rgb(208,170,48)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="2015.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="1989" width="0.4979%" height="15" fill="rgb(239,116,25)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="1999.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="1973" width="0.4979%" height="15" fill="rgb(219,200,50)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="1983.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="1957" width="0.4979%" height="15" fill="rgb(245,200,0)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="1967.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="1941" width="0.4979%" height="15" fill="rgb(245,119,33)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="1951.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="1925" width="0.4979%" height="15" fill="rgb(231,125,12)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="1935.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="1909" width="0.4979%" height="15" fill="rgb(216,96,41)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="1919.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="1893" width="0.4979%" height="15" fill="rgb(248,43,45)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="1903.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="1877" width="0.4979%" height="15" fill="rgb(217,222,7)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="1887.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="1861" width="0.4979%" height="15" fill="rgb(233,28,6)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="1871.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="1845" width="0.4979%" height="15" fill="rgb(231,218,15)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="1855.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="1829" width="0.4979%" height="15" fill="rgb(226,171,48)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="1839.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="1813" width="0.4979%" height="15" fill="rgb(235,201,9)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="1823.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="1797" width="0.4979%" height="15" fill="rgb(217,80,15)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="1807.50"></text></g><g><title>benchmark::clear_dirty_flags (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="1781" width="0.4979%" height="15" fill="rgb(219,152,8)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="1791.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,329,363 samples, 0.50%)</title><rect x="56.7217%" y="1765" width="0.4979%" height="15" fill="rgb(243,107,38)" fg:x="151443222" fg:w="1329363"/><text x="56.9717%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (926,009 samples, 0.35%)</title><rect x="57.6853%" y="933" width="0.3468%" height="15" fill="rgb(231,17,5)" fg:x="154016007" fg:w="926009"/><text x="57.9353%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (926,009 samples, 0.35%)</title><rect x="57.6853%" y="917" width="0.3468%" height="15" fill="rgb(209,25,54)" fg:x="154016007" fg:w="926009"/><text x="57.9353%" y="927.50"></text></g><g><title>benchmark::count_nodes (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="2069" width="1.2770%" height="15" fill="rgb(219,0,2)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="2079.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="2053" width="1.2770%" height="15" fill="rgb(246,9,5)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="2063.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="2037" width="1.2770%" height="15" fill="rgb(226,159,4)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="2047.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="2021" width="1.2770%" height="15" fill="rgb(219,175,34)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="2031.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="2005" width="1.2770%" height="15" fill="rgb(236,10,46)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="2015.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1989" width="1.2770%" height="15" fill="rgb(240,211,16)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1999.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1973" width="1.2770%" height="15" fill="rgb(205,3,43)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1983.50"></text></g><g><title>benchmark::count_nodes (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1957" width="1.2770%" height="15" fill="rgb(245,7,22)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1941" width="1.2770%" height="15" fill="rgb(239,132,32)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1951.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1925" width="1.2770%" height="15" fill="rgb(228,202,34)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1935.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1909" width="1.2770%" height="15" fill="rgb(254,200,22)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1919.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1893" width="1.2770%" height="15" fill="rgb(219,10,39)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1903.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1877" width="1.2770%" height="15" fill="rgb(226,210,39)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1887.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1861" width="1.2770%" height="15" fill="rgb(208,219,16)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1871.50"></text></g><g><title>benchmark::count_nodes (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1845" width="1.2770%" height="15" fill="rgb(216,158,51)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1829" width="1.2770%" height="15" fill="rgb(233,14,44)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1839.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1813" width="1.2770%" height="15" fill="rgb(237,97,39)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1797" width="1.2770%" height="15" fill="rgb(218,198,43)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1807.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1781" width="1.2770%" height="15" fill="rgb(231,104,20)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1791.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1765" width="1.2770%" height="15" fill="rgb(254,36,13)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1775.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1749" width="1.2770%" height="15" fill="rgb(248,14,50)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1759.50"></text></g><g><title>benchmark::count_nodes (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1733" width="1.2770%" height="15" fill="rgb(217,107,29)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1717" width="1.2770%" height="15" fill="rgb(251,169,33)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1727.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1701" width="1.2770%" height="15" fill="rgb(217,108,32)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1685" width="1.2770%" height="15" fill="rgb(219,66,42)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1695.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1669" width="1.2770%" height="15" fill="rgb(206,180,7)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1679.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1653" width="1.2770%" height="15" fill="rgb(208,226,31)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1663.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1637" width="1.2770%" height="15" fill="rgb(218,26,49)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1647.50"></text></g><g><title>benchmark::count_nodes (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1621" width="1.2770%" height="15" fill="rgb(233,197,48)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1605" width="1.2770%" height="15" fill="rgb(252,181,51)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1615.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1589" width="1.2770%" height="15" fill="rgb(253,90,19)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1573" width="1.2770%" height="15" fill="rgb(215,171,30)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1583.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1557" width="1.2770%" height="15" fill="rgb(214,222,9)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1567.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1541" width="1.2770%" height="15" fill="rgb(223,3,22)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1551.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1525" width="1.2770%" height="15" fill="rgb(225,196,46)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1535.50"></text></g><g><title>benchmark::count_nodes (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1509" width="1.2770%" height="15" fill="rgb(209,110,37)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1493" width="1.2770%" height="15" fill="rgb(249,89,12)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1503.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1477" width="1.2770%" height="15" fill="rgb(226,27,33)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1461" width="1.2770%" height="15" fill="rgb(213,82,22)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1471.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1445" width="1.2770%" height="15" fill="rgb(248,140,0)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1455.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1429" width="1.2770%" height="15" fill="rgb(228,106,3)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1439.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1413" width="1.2770%" height="15" fill="rgb(209,23,37)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1423.50"></text></g><g><title>benchmark::count_nodes (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1397" width="1.2770%" height="15" fill="rgb(241,93,50)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1381" width="1.2770%" height="15" fill="rgb(253,46,43)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1391.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1365" width="1.2770%" height="15" fill="rgb(226,206,43)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1349" width="1.2770%" height="15" fill="rgb(217,54,7)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1333" width="1.2770%" height="15" fill="rgb(223,5,52)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1343.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1317" width="1.2770%" height="15" fill="rgb(206,52,46)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1327.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1301" width="1.2770%" height="15" fill="rgb(253,136,11)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1311.50"></text></g><g><title>benchmark::count_nodes (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1285" width="1.2770%" height="15" fill="rgb(208,106,33)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1269" width="1.2770%" height="15" fill="rgb(206,54,4)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1279.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1253" width="1.2770%" height="15" fill="rgb(213,3,15)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1237" width="1.2770%" height="15" fill="rgb(252,211,39)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1247.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1221" width="1.2770%" height="15" fill="rgb(223,6,36)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1231.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1205" width="1.2770%" height="15" fill="rgb(252,169,45)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1215.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1189" width="1.2770%" height="15" fill="rgb(212,48,26)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1199.50"></text></g><g><title>benchmark::count_nodes (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1173" width="1.2770%" height="15" fill="rgb(251,102,48)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1157" width="1.2770%" height="15" fill="rgb(243,208,16)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1167.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1141" width="1.2770%" height="15" fill="rgb(219,96,24)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1125" width="1.2770%" height="15" fill="rgb(219,33,29)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1109" width="1.2770%" height="15" fill="rgb(223,176,5)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1119.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1093" width="1.2770%" height="15" fill="rgb(228,140,14)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1103.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,409,540 samples, 1.28%)</title><rect x="57.2196%" y="1077" width="1.2770%" height="15" fill="rgb(217,179,31)" fg:x="152772585" fg:w="3409540"/><text x="57.4696%" y="1087.50"></text></g><g><title>benchmark::count_nodes (2,166,118 samples, 0.81%)</title><rect x="57.6853%" y="1061" width="0.8113%" height="15" fill="rgb(230,9,30)" fg:x="154016007" fg:w="2166118"/><text x="57.9353%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,166,118 samples, 0.81%)</title><rect x="57.6853%" y="1045" width="0.8113%" height="15" fill="rgb(230,136,20)" fg:x="154016007" fg:w="2166118"/><text x="57.9353%" y="1055.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,166,118 samples, 0.81%)</title><rect x="57.6853%" y="1029" width="0.8113%" height="15" fill="rgb(215,210,22)" fg:x="154016007" fg:w="2166118"/><text x="57.9353%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,166,118 samples, 0.81%)</title><rect x="57.6853%" y="1013" width="0.8113%" height="15" fill="rgb(218,43,5)" fg:x="154016007" fg:w="2166118"/><text x="57.9353%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,166,118 samples, 0.81%)</title><rect x="57.6853%" y="997" width="0.8113%" height="15" fill="rgb(216,11,5)" fg:x="154016007" fg:w="2166118"/><text x="57.9353%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,166,118 samples, 0.81%)</title><rect x="57.6853%" y="981" width="0.8113%" height="15" fill="rgb(209,82,29)" fg:x="154016007" fg:w="2166118"/><text x="57.9353%" y="991.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,166,118 samples, 0.81%)</title><rect x="57.6853%" y="965" width="0.8113%" height="15" fill="rgb(244,115,12)" fg:x="154016007" fg:w="2166118"/><text x="57.9353%" y="975.50"></text></g><g><title>benchmark::count_nodes (2,166,118 samples, 0.81%)</title><rect x="57.6853%" y="949" width="0.8113%" height="15" fill="rgb(222,82,18)" fg:x="154016007" fg:w="2166118"/><text x="57.9353%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="933" width="0.4645%" height="15" fill="rgb(249,227,8)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="943.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="917" width="0.4645%" height="15" fill="rgb(253,141,45)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="901" width="0.4645%" height="15" fill="rgb(234,184,4)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="885" width="0.4645%" height="15" fill="rgb(218,194,23)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="869" width="0.4645%" height="15" fill="rgb(235,66,41)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="879.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="853" width="0.4645%" height="15" fill="rgb(245,217,1)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="863.50"></text></g><g><title>benchmark::count_nodes (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="837" width="0.4645%" height="15" fill="rgb(229,91,1)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="821" width="0.4645%" height="15" fill="rgb(207,101,30)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="831.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="805" width="0.4645%" height="15" fill="rgb(223,82,49)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="789" width="0.4645%" height="15" fill="rgb(218,167,17)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="773" width="0.4645%" height="15" fill="rgb(208,103,14)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="757" width="0.4645%" height="15" fill="rgb(238,20,8)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="767.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="741" width="0.4645%" height="15" fill="rgb(218,80,54)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="751.50"></text></g><g><title>benchmark::count_nodes (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="725" width="0.4645%" height="15" fill="rgb(240,144,17)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="709" width="0.4645%" height="15" fill="rgb(245,27,50)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="719.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="693" width="0.4645%" height="15" fill="rgb(251,51,7)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="677" width="0.4645%" height="15" fill="rgb(245,217,29)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="661" width="0.4645%" height="15" fill="rgb(221,176,29)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="645" width="0.4645%" height="15" fill="rgb(212,180,24)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="655.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="629" width="0.4645%" height="15" fill="rgb(254,24,2)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="639.50"></text></g><g><title>benchmark::count_nodes (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="613" width="0.4645%" height="15" fill="rgb(230,100,2)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="597" width="0.4645%" height="15" fill="rgb(219,142,25)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="607.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="581" width="0.4645%" height="15" fill="rgb(240,73,43)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="565" width="0.4645%" height="15" fill="rgb(214,114,15)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="549" width="0.4645%" height="15" fill="rgb(207,130,4)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="533" width="0.4645%" height="15" fill="rgb(221,25,40)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="517" width="0.4645%" height="15" fill="rgb(241,184,7)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="527.50"></text></g><g><title>benchmark::count_nodes (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="501" width="0.4645%" height="15" fill="rgb(235,159,4)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="485" width="0.4645%" height="15" fill="rgb(214,87,48)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,240,109 samples, 0.46%)</title><rect x="58.0322%" y="469" width="0.4645%" height="15" fill="rgb(246,198,24)" fg:x="154942016" fg:w="1240109"/><text x="58.2822%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,282,081 samples, 0.48%)</title><rect x="58.4966%" y="1989" width="0.4802%" height="15" fill="rgb(209,66,40)" fg:x="156182125" fg:w="1282081"/><text x="58.7466%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,282,081 samples, 0.48%)</title><rect x="58.4966%" y="1973" width="0.4802%" height="15" fill="rgb(233,147,39)" fg:x="156182125" fg:w="1282081"/><text x="58.7466%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,282,081 samples, 0.48%)</title><rect x="58.4966%" y="1957" width="0.4802%" height="15" fill="rgb(231,145,52)" fg:x="156182125" fg:w="1282081"/><text x="58.7466%" y="1967.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,282,081 samples, 0.48%)</title><rect x="58.4966%" y="1941" width="0.4802%" height="15" fill="rgb(206,20,26)" fg:x="156182125" fg:w="1282081"/><text x="58.7466%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,835,716 samples, 1.44%)</title><rect x="58.9768%" y="1605" width="1.4366%" height="15" fill="rgb(238,220,4)" fg:x="157464206" fg:w="3835716"/><text x="59.2268%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,835,716 samples, 1.44%)</title><rect x="58.9768%" y="1589" width="1.4366%" height="15" fill="rgb(252,195,42)" fg:x="157464206" fg:w="3835716"/><text x="59.2268%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,835,716 samples, 1.44%)</title><rect x="58.9768%" y="1573" width="1.4366%" height="15" fill="rgb(209,10,6)" fg:x="157464206" fg:w="3835716"/><text x="59.2268%" y="1583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,835,716 samples, 1.44%)</title><rect x="58.9768%" y="1557" width="1.4366%" height="15" fill="rgb(229,3,52)" fg:x="157464206" fg:w="3835716"/><text x="59.2268%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,250,115 samples, 0.47%)</title><rect x="59.9452%" y="1541" width="0.4682%" height="15" fill="rgb(253,49,37)" fg:x="160049807" fg:w="1250115"/><text x="60.1952%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,250,115 samples, 0.47%)</title><rect x="59.9452%" y="1525" width="0.4682%" height="15" fill="rgb(240,103,49)" fg:x="160049807" fg:w="1250115"/><text x="60.1952%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (1,250,115 samples, 0.47%)</title><rect x="59.9452%" y="1509" width="0.4682%" height="15" fill="rgb(250,182,30)" fg:x="160049807" fg:w="1250115"/><text x="60.1952%" y="1519.50"></text></g><g><title>cfree (1,250,115 samples, 0.47%)</title><rect x="59.9452%" y="1493" width="0.4682%" height="15" fill="rgb(248,8,30)" fg:x="160049807" fg:w="1250115"/><text x="60.1952%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,485,101 samples, 0.93%)</title><rect x="60.4135%" y="1093" width="0.9308%" height="15" fill="rgb(237,120,30)" fg:x="161299922" fg:w="2485101"/><text x="60.6635%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,485,101 samples, 0.93%)</title><rect x="60.4135%" y="1077" width="0.9308%" height="15" fill="rgb(221,146,34)" fg:x="161299922" fg:w="2485101"/><text x="60.6635%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,485,101 samples, 0.93%)</title><rect x="60.4135%" y="1061" width="0.9308%" height="15" fill="rgb(242,55,13)" fg:x="161299922" fg:w="2485101"/><text x="60.6635%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,485,101 samples, 0.93%)</title><rect x="60.4135%" y="1045" width="0.9308%" height="15" fill="rgb(242,112,31)" fg:x="161299922" fg:w="2485101"/><text x="60.6635%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,485,101 samples, 0.93%)</title><rect x="60.4135%" y="1029" width="0.9308%" height="15" fill="rgb(249,192,27)" fg:x="161299922" fg:w="2485101"/><text x="60.6635%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,485,101 samples, 0.93%)</title><rect x="60.4135%" y="1013" width="0.9308%" height="15" fill="rgb(208,204,44)" fg:x="161299922" fg:w="2485101"/><text x="60.6635%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,485,101 samples, 0.93%)</title><rect x="60.4135%" y="997" width="0.9308%" height="15" fill="rgb(208,93,54)" fg:x="161299922" fg:w="2485101"/><text x="60.6635%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (2,485,101 samples, 0.93%)</title><rect x="60.4135%" y="981" width="0.9308%" height="15" fill="rgb(242,1,31)" fg:x="161299922" fg:w="2485101"/><text x="60.6635%" y="991.50"></text></g><g><title>cfree (2,485,101 samples, 0.93%)</title><rect x="60.4135%" y="965" width="0.9308%" height="15" fill="rgb(241,83,25)" fg:x="161299922" fg:w="2485101"/><text x="60.6635%" y="975.50"></text></g><g><title>[libc.so.6] (2,485,101 samples, 0.93%)</title><rect x="60.4135%" y="949" width="0.9308%" height="15" fill="rgb(205,169,50)" fg:x="161299922" fg:w="2485101"/><text x="60.6635%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,260,781 samples, 0.47%)</title><rect x="61.3442%" y="1093" width="0.4722%" height="15" fill="rgb(239,186,37)" fg:x="163785023" fg:w="1260781"/><text x="61.5942%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,260,781 samples, 0.47%)</title><rect x="61.3442%" y="1077" width="0.4722%" height="15" fill="rgb(205,221,10)" fg:x="163785023" fg:w="1260781"/><text x="61.5942%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,260,781 samples, 0.47%)</title><rect x="61.3442%" y="1061" width="0.4722%" height="15" fill="rgb(218,196,15)" fg:x="163785023" fg:w="1260781"/><text x="61.5942%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,781 samples, 0.47%)</title><rect x="61.3442%" y="1045" width="0.4722%" height="15" fill="rgb(218,196,35)" fg:x="163785023" fg:w="1260781"/><text x="61.5942%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,260,781 samples, 0.47%)</title><rect x="61.3442%" y="1029" width="0.4722%" height="15" fill="rgb(233,63,24)" fg:x="163785023" fg:w="1260781"/><text x="61.5942%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,260,781 samples, 0.47%)</title><rect x="61.3442%" y="1013" width="0.4722%" height="15" fill="rgb(225,8,4)" fg:x="163785023" fg:w="1260781"/><text x="61.5942%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (1,260,781 samples, 0.47%)</title><rect x="61.3442%" y="997" width="0.4722%" height="15" fill="rgb(234,105,35)" fg:x="163785023" fg:w="1260781"/><text x="61.5942%" y="1007.50"></text></g><g><title>cfree (1,260,781 samples, 0.47%)</title><rect x="61.3442%" y="981" width="0.4722%" height="15" fill="rgb(236,21,32)" fg:x="163785023" fg:w="1260781"/><text x="61.5942%" y="991.50"></text></g><g><title>[libc.so.6] (1,260,781 samples, 0.47%)</title><rect x="61.3442%" y="965" width="0.4722%" height="15" fill="rgb(228,109,6)" fg:x="163785023" fg:w="1260781"/><text x="61.5942%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (4,992,910 samples, 1.87%)</title><rect x="60.4135%" y="1157" width="1.8701%" height="15" fill="rgb(229,215,31)" fg:x="161299922" fg:w="4992910"/><text x="60.6635%" y="1167.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,992,910 samples, 1.87%)</title><rect x="60.4135%" y="1141" width="1.8701%" height="15" fill="rgb(221,52,54)" fg:x="161299922" fg:w="4992910"/><text x="60.6635%" y="1151.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (4,992,910 samples, 1.87%)</title><rect x="60.4135%" y="1125" width="1.8701%" height="15" fill="rgb(252,129,43)" fg:x="161299922" fg:w="4992910"/><text x="60.6635%" y="1135.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (4,992,910 samples, 1.87%)</title><rect x="60.4135%" y="1109" width="1.8701%" height="15" fill="rgb(248,183,27)" fg:x="161299922" fg:w="4992910"/><text x="60.6635%" y="1119.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,247,028 samples, 0.47%)</title><rect x="61.8164%" y="1093" width="0.4671%" height="15" fill="rgb(250,0,22)" fg:x="165045804" fg:w="1247028"/><text x="62.0664%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,247,028 samples, 0.47%)</title><rect x="61.8164%" y="1077" width="0.4671%" height="15" fill="rgb(213,166,10)" fg:x="165045804" fg:w="1247028"/><text x="62.0664%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,247,028 samples, 0.47%)</title><rect x="61.8164%" y="1061" width="0.4671%" height="15" fill="rgb(207,163,36)" fg:x="165045804" fg:w="1247028"/><text x="62.0664%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,247,028 samples, 0.47%)</title><rect x="61.8164%" y="1045" width="0.4671%" height="15" fill="rgb(208,122,22)" fg:x="165045804" fg:w="1247028"/><text x="62.0664%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,247,028 samples, 0.47%)</title><rect x="61.8164%" y="1029" width="0.4671%" height="15" fill="rgb(207,104,49)" fg:x="165045804" fg:w="1247028"/><text x="62.0664%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,247,028 samples, 0.47%)</title><rect x="61.8164%" y="1013" width="0.4671%" height="15" fill="rgb(248,211,50)" fg:x="165045804" fg:w="1247028"/><text x="62.0664%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,247,028 samples, 0.47%)</title><rect x="61.8164%" y="997" width="0.4671%" height="15" fill="rgb(217,13,45)" fg:x="165045804" fg:w="1247028"/><text x="62.0664%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,247,028 samples, 0.47%)</title><rect x="61.8164%" y="981" width="0.4671%" height="15" fill="rgb(211,216,49)" fg:x="165045804" fg:w="1247028"/><text x="62.0664%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1,247,028 samples, 0.47%)</title><rect x="61.8164%" y="965" width="0.4671%" height="15" fill="rgb(221,58,53)" fg:x="165045804" fg:w="1247028"/><text x="62.0664%" y="975.50"></text></g><g><title>__rust_dealloc (1,247,028 samples, 0.47%)</title><rect x="61.8164%" y="949" width="0.4671%" height="15" fill="rgb(220,112,41)" fg:x="165045804" fg:w="1247028"/><text x="62.0664%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,234,189 samples, 2.33%)</title><rect x="60.4135%" y="1205" width="2.3350%" height="15" fill="rgb(236,38,28)" fg:x="161299922" fg:w="6234189"/><text x="60.6635%" y="1215.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,234,189 samples, 2.33%)</title><rect x="60.4135%" y="1189" width="2.3350%" height="15" fill="rgb(227,195,22)" fg:x="161299922" fg:w="6234189"/><text x="60.6635%" y="1199.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,234,189 samples, 2.33%)</title><rect x="60.4135%" y="1173" width="2.3350%" height="15" fill="rgb(214,55,33)" fg:x="161299922" fg:w="6234189"/><text x="60.6635%" y="1183.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="1157" width="0.4649%" height="15" fill="rgb(248,80,13)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="1141" width="0.4649%" height="15" fill="rgb(238,52,6)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="1125" width="0.4649%" height="15" fill="rgb(224,198,47)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="1109" width="0.4649%" height="15" fill="rgb(233,171,20)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="1093" width="0.4649%" height="15" fill="rgb(241,30,25)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="1077" width="0.4649%" height="15" fill="rgb(207,171,38)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="1061" width="0.4649%" height="15" fill="rgb(234,70,1)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="1071.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="1045" width="0.4649%" height="15" fill="rgb(232,178,18)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="1029" width="0.4649%" height="15" fill="rgb(241,78,40)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="1013" width="0.4649%" height="15" fill="rgb(222,35,25)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="997" width="0.4649%" height="15" fill="rgb(207,92,16)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="981" width="0.4649%" height="15" fill="rgb(216,59,51)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="965" width="0.4649%" height="15" fill="rgb(213,80,28)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="949" width="0.4649%" height="15" fill="rgb(220,93,7)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="933" width="0.4649%" height="15" fill="rgb(225,24,44)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="917" width="0.4649%" height="15" fill="rgb(243,74,40)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="901" width="0.4649%" height="15" fill="rgb(228,39,7)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="911.50"></text></g><g><title>cfree (1,241,279 samples, 0.46%)</title><rect x="62.2835%" y="885" width="0.4649%" height="15" fill="rgb(227,79,8)" fg:x="166292832" fg:w="1241279"/><text x="62.5335%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,480,231 samples, 2.80%)</title><rect x="60.4135%" y="1285" width="2.8017%" height="15" fill="rgb(236,58,11)" fg:x="161299922" fg:w="7480231"/><text x="60.6635%" y="1295.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,480,231 samples, 2.80%)</title><rect x="60.4135%" y="1269" width="2.8017%" height="15" fill="rgb(249,63,35)" fg:x="161299922" fg:w="7480231"/><text x="60.6635%" y="1279.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,480,231 samples, 2.80%)</title><rect x="60.4135%" y="1253" width="2.8017%" height="15" fill="rgb(252,114,16)" fg:x="161299922" fg:w="7480231"/><text x="60.6635%" y="1263.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,480,231 samples, 2.80%)</title><rect x="60.4135%" y="1237" width="2.8017%" height="15" fill="rgb(254,151,24)" fg:x="161299922" fg:w="7480231"/><text x="60.6635%" y="1247.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,480,231 samples, 2.80%)</title><rect x="60.4135%" y="1221" width="2.8017%" height="15" fill="rgb(253,54,39)" fg:x="161299922" fg:w="7480231"/><text x="60.6635%" y="1231.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,246,042 samples, 0.47%)</title><rect x="62.7484%" y="1205" width="0.4667%" height="15" fill="rgb(243,25,45)" fg:x="167534111" fg:w="1246042"/><text x="62.9984%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,246,042 samples, 0.47%)</title><rect x="62.7484%" y="1189" width="0.4667%" height="15" fill="rgb(234,134,9)" fg:x="167534111" fg:w="1246042"/><text x="62.9984%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,246,042 samples, 0.47%)</title><rect x="62.7484%" y="1173" width="0.4667%" height="15" fill="rgb(227,166,31)" fg:x="167534111" fg:w="1246042"/><text x="62.9984%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,246,042 samples, 0.47%)</title><rect x="62.7484%" y="1157" width="0.4667%" height="15" fill="rgb(245,143,41)" fg:x="167534111" fg:w="1246042"/><text x="62.9984%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (1,246,042 samples, 0.47%)</title><rect x="62.7484%" y="1141" width="0.4667%" height="15" fill="rgb(238,181,32)" fg:x="167534111" fg:w="1246042"/><text x="62.9984%" y="1151.50"></text></g><g><title>cfree (1,246,042 samples, 0.47%)</title><rect x="62.7484%" y="1125" width="0.4667%" height="15" fill="rgb(224,113,18)" fg:x="167534111" fg:w="1246042"/><text x="62.9984%" y="1135.50"></text></g><g><title>[libc.so.6] (1,246,042 samples, 0.47%)</title><rect x="62.7484%" y="1109" width="0.4667%" height="15" fill="rgb(240,229,28)" fg:x="167534111" fg:w="1246042"/><text x="62.9984%" y="1119.50"></text></g><g><title>[libc.so.6] (1,246,042 samples, 0.47%)</title><rect x="62.7484%" y="1093" width="0.4667%" height="15" fill="rgb(250,185,3)" fg:x="167534111" fg:w="1246042"/><text x="62.9984%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,728,245 samples, 3.27%)</title><rect x="60.4135%" y="1397" width="3.2691%" height="15" fill="rgb(212,59,25)" fg:x="161299922" fg:w="8728245"/><text x="60.6635%" y="1407.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (8,728,245 samples, 3.27%)</title><rect x="60.4135%" y="1381" width="3.2691%" height="15" fill="rgb(221,87,20)" fg:x="161299922" fg:w="8728245"/><text x="60.6635%" y="1391.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (8,728,245 samples, 3.27%)</title><rect x="60.4135%" y="1365" width="3.2691%" height="15" fill="rgb(213,74,28)" fg:x="161299922" fg:w="8728245"/><text x="60.6635%" y="1375.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (8,728,245 samples, 3.27%)</title><rect x="60.4135%" y="1349" width="3.2691%" height="15" fill="rgb(224,132,34)" fg:x="161299922" fg:w="8728245"/><text x="60.6635%" y="1359.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,728,245 samples, 3.27%)</title><rect x="60.4135%" y="1333" width="3.2691%" height="15" fill="rgb(222,101,24)" fg:x="161299922" fg:w="8728245"/><text x="60.6635%" y="1343.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (8,728,245 samples, 3.27%)</title><rect x="60.4135%" y="1317" width="3.2691%" height="15" fill="rgb(254,142,4)" fg:x="161299922" fg:w="8728245"/><text x="60.6635%" y="1327.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (8,728,245 samples, 3.27%)</title><rect x="60.4135%" y="1301" width="3.2691%" height="15" fill="rgb(230,229,49)" fg:x="161299922" fg:w="8728245"/><text x="60.6635%" y="1311.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,248,014 samples, 0.47%)</title><rect x="63.2151%" y="1285" width="0.4674%" height="15" fill="rgb(238,70,47)" fg:x="168780153" fg:w="1248014"/><text x="63.4651%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,248,014 samples, 0.47%)</title><rect x="63.2151%" y="1269" width="0.4674%" height="15" fill="rgb(231,160,17)" fg:x="168780153" fg:w="1248014"/><text x="63.4651%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,248,014 samples, 0.47%)</title><rect x="63.2151%" y="1253" width="0.4674%" height="15" fill="rgb(218,68,53)" fg:x="168780153" fg:w="1248014"/><text x="63.4651%" y="1263.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,248,014 samples, 0.47%)</title><rect x="63.2151%" y="1237" width="0.4674%" height="15" fill="rgb(236,111,10)" fg:x="168780153" fg:w="1248014"/><text x="63.4651%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,248,014 samples, 0.47%)</title><rect x="63.2151%" y="1221" width="0.4674%" height="15" fill="rgb(224,34,41)" fg:x="168780153" fg:w="1248014"/><text x="63.4651%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,248,014 samples, 0.47%)</title><rect x="63.2151%" y="1205" width="0.4674%" height="15" fill="rgb(241,118,19)" fg:x="168780153" fg:w="1248014"/><text x="63.4651%" y="1215.50"></text></g><g><title>alloc::alloc::dealloc (1,248,014 samples, 0.47%)</title><rect x="63.2151%" y="1189" width="0.4674%" height="15" fill="rgb(238,129,25)" fg:x="168780153" fg:w="1248014"/><text x="63.4651%" y="1199.50"></text></g><g><title>cfree (1,248,014 samples, 0.47%)</title><rect x="63.2151%" y="1173" width="0.4674%" height="15" fill="rgb(238,22,31)" fg:x="168780153" fg:w="1248014"/><text x="63.4651%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,097,905 samples, 4.16%)</title><rect x="60.4135%" y="1461" width="4.1566%" height="15" fill="rgb(222,174,48)" fg:x="161299922" fg:w="11097905"/><text x="60.6635%" y="1471.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (11,097,905 samples, 4.16%)</title><rect x="60.4135%" y="1445" width="4.1566%" height="15" fill="rgb(206,152,40)" fg:x="161299922" fg:w="11097905"/><text x="60.6635%" y="1455.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (11,097,905 samples, 4.16%)</title><rect x="60.4135%" y="1429" width="4.1566%" height="15" fill="rgb(218,99,54)" fg:x="161299922" fg:w="11097905"/><text x="60.6635%" y="1439.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (11,097,905 samples, 4.16%)</title><rect x="60.4135%" y="1413" width="4.1566%" height="15" fill="rgb(220,174,26)" fg:x="161299922" fg:w="11097905"/><text x="60.6635%" y="1423.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,369,660 samples, 0.89%)</title><rect x="63.6825%" y="1397" width="0.8875%" height="15" fill="rgb(245,116,9)" fg:x="170028167" fg:w="2369660"/><text x="63.9325%" y="1407.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,369,660 samples, 0.89%)</title><rect x="63.6825%" y="1381" width="0.8875%" height="15" fill="rgb(209,72,35)" fg:x="170028167" fg:w="2369660"/><text x="63.9325%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,369,660 samples, 0.89%)</title><rect x="63.6825%" y="1365" width="0.8875%" height="15" fill="rgb(226,126,21)" fg:x="170028167" fg:w="2369660"/><text x="63.9325%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,369,660 samples, 0.89%)</title><rect x="63.6825%" y="1349" width="0.8875%" height="15" fill="rgb(227,192,1)" fg:x="170028167" fg:w="2369660"/><text x="63.9325%" y="1359.50"></text></g><g><title>alloc::alloc::dealloc (2,369,660 samples, 0.89%)</title><rect x="63.6825%" y="1333" width="0.8875%" height="15" fill="rgb(237,180,29)" fg:x="170028167" fg:w="2369660"/><text x="63.9325%" y="1343.50"></text></g><g><title>cfree (2,369,660 samples, 0.89%)</title><rect x="63.6825%" y="1317" width="0.8875%" height="15" fill="rgb(230,197,35)" fg:x="170028167" fg:w="2369660"/><text x="63.9325%" y="1327.50"></text></g><g><title>[libc.so.6] (2,369,660 samples, 0.89%)</title><rect x="63.6825%" y="1301" width="0.8875%" height="15" fill="rgb(246,193,31)" fg:x="170028167" fg:w="2369660"/><text x="63.9325%" y="1311.50"></text></g><g><title>[libc.so.6] (1,246,519 samples, 0.47%)</title><rect x="64.1032%" y="1285" width="0.4669%" height="15" fill="rgb(241,36,4)" fg:x="171151308" fg:w="1246519"/><text x="64.3532%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,665,102 samples, 5.12%)</title><rect x="60.4135%" y="1477" width="5.1181%" height="15" fill="rgb(241,130,17)" fg:x="161299922" fg:w="13665102"/><text x="60.6635%" y="1487.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,567,197 samples, 0.96%)</title><rect x="64.5701%" y="1461" width="0.9615%" height="15" fill="rgb(206,137,32)" fg:x="172397827" fg:w="2567197"/><text x="64.8201%" y="1471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,567,197 samples, 0.96%)</title><rect x="64.5701%" y="1445" width="0.9615%" height="15" fill="rgb(237,228,51)" fg:x="172397827" fg:w="2567197"/><text x="64.8201%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,567,197 samples, 0.96%)</title><rect x="64.5701%" y="1429" width="0.9615%" height="15" fill="rgb(243,6,42)" fg:x="172397827" fg:w="2567197"/><text x="64.8201%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,567,197 samples, 0.96%)</title><rect x="64.5701%" y="1413" width="0.9615%" height="15" fill="rgb(251,74,28)" fg:x="172397827" fg:w="2567197"/><text x="64.8201%" y="1423.50"></text></g><g><title>alloc::alloc::dealloc (2,567,197 samples, 0.96%)</title><rect x="64.5701%" y="1397" width="0.9615%" height="15" fill="rgb(218,20,49)" fg:x="172397827" fg:w="2567197"/><text x="64.8201%" y="1407.50"></text></g><g><title>cfree (2,567,197 samples, 0.96%)</title><rect x="64.5701%" y="1381" width="0.9615%" height="15" fill="rgb(238,28,14)" fg:x="172397827" fg:w="2567197"/><text x="64.8201%" y="1391.50"></text></g><g><title>[libc.so.6] (2,567,197 samples, 0.96%)</title><rect x="64.5701%" y="1365" width="0.9615%" height="15" fill="rgb(229,40,46)" fg:x="172397827" fg:w="2567197"/><text x="64.8201%" y="1375.50"></text></g><g><title>[libc.so.6] (2,567,197 samples, 0.96%)</title><rect x="64.5701%" y="1349" width="0.9615%" height="15" fill="rgb(244,195,20)" fg:x="172397827" fg:w="2567197"/><text x="64.8201%" y="1359.50"></text></g><g><title>[libc.so.6] (1,329,114 samples, 0.50%)</title><rect x="65.0338%" y="1333" width="0.4978%" height="15" fill="rgb(253,56,35)" fg:x="173635910" fg:w="1329114"/><text x="65.2838%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,897,708 samples, 5.58%)</title><rect x="60.4135%" y="1525" width="5.5798%" height="15" fill="rgb(210,149,44)" fg:x="161299922" fg:w="14897708"/><text x="60.6635%" y="1535.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (14,897,708 samples, 5.58%)</title><rect x="60.4135%" y="1509" width="5.5798%" height="15" fill="rgb(240,135,12)" fg:x="161299922" fg:w="14897708"/><text x="60.6635%" y="1519.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (14,897,708 samples, 5.58%)</title><rect x="60.4135%" y="1493" width="5.5798%" height="15" fill="rgb(251,24,50)" fg:x="161299922" fg:w="14897708"/><text x="60.6635%" y="1503.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,232,606 samples, 0.46%)</title><rect x="65.5316%" y="1477" width="0.4617%" height="15" fill="rgb(243,200,47)" fg:x="174965024" fg:w="1232606"/><text x="65.7816%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,232,606 samples, 0.46%)</title><rect x="65.5316%" y="1461" width="0.4617%" height="15" fill="rgb(224,166,26)" fg:x="174965024" fg:w="1232606"/><text x="65.7816%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,232,606 samples, 0.46%)</title><rect x="65.5316%" y="1445" width="0.4617%" height="15" fill="rgb(233,0,47)" fg:x="174965024" fg:w="1232606"/><text x="65.7816%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,232,606 samples, 0.46%)</title><rect x="65.5316%" y="1429" width="0.4617%" height="15" fill="rgb(253,80,5)" fg:x="174965024" fg:w="1232606"/><text x="65.7816%" y="1439.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,232,606 samples, 0.46%)</title><rect x="65.5316%" y="1413" width="0.4617%" height="15" fill="rgb(214,133,25)" fg:x="174965024" fg:w="1232606"/><text x="65.7816%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,232,606 samples, 0.46%)</title><rect x="65.5316%" y="1397" width="0.4617%" height="15" fill="rgb(209,27,14)" fg:x="174965024" fg:w="1232606"/><text x="65.7816%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,232,606 samples, 0.46%)</title><rect x="65.5316%" y="1381" width="0.4617%" height="15" fill="rgb(219,102,51)" fg:x="174965024" fg:w="1232606"/><text x="65.7816%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (16,137,418 samples, 6.04%)</title><rect x="60.4135%" y="1541" width="6.0441%" height="15" fill="rgb(237,18,16)" fg:x="161299922" fg:w="16137418"/><text x="60.6635%" y="1551.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,239,710 samples, 0.46%)</title><rect x="65.9933%" y="1525" width="0.4643%" height="15" fill="rgb(241,85,17)" fg:x="176197630" fg:w="1239710"/><text x="66.2433%" y="1535.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,239,710 samples, 0.46%)</title><rect x="65.9933%" y="1509" width="0.4643%" height="15" fill="rgb(236,90,42)" fg:x="176197630" fg:w="1239710"/><text x="66.2433%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,239,710 samples, 0.46%)</title><rect x="65.9933%" y="1493" width="0.4643%" height="15" fill="rgb(249,57,21)" fg:x="176197630" fg:w="1239710"/><text x="66.2433%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,239,710 samples, 0.46%)</title><rect x="65.9933%" y="1477" width="0.4643%" height="15" fill="rgb(243,12,36)" fg:x="176197630" fg:w="1239710"/><text x="66.2433%" y="1487.50"></text></g><g><title>alloc::alloc::dealloc (1,239,710 samples, 0.46%)</title><rect x="65.9933%" y="1461" width="0.4643%" height="15" fill="rgb(253,128,47)" fg:x="176197630" fg:w="1239710"/><text x="66.2433%" y="1471.50"></text></g><g><title>cfree (1,239,710 samples, 0.46%)</title><rect x="65.9933%" y="1445" width="0.4643%" height="15" fill="rgb(207,33,20)" fg:x="176197630" fg:w="1239710"/><text x="66.2433%" y="1455.50"></text></g><g><title>[libc.so.6] (1,239,710 samples, 0.46%)</title><rect x="65.9933%" y="1429" width="0.4643%" height="15" fill="rgb(233,215,35)" fg:x="176197630" fg:w="1239710"/><text x="66.2433%" y="1439.50"></text></g><g><title>[libc.so.6] (1,239,710 samples, 0.46%)</title><rect x="65.9933%" y="1413" width="0.4643%" height="15" fill="rgb(249,188,52)" fg:x="176197630" fg:w="1239710"/><text x="66.2433%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,239,860 samples, 0.46%)</title><rect x="66.4576%" y="1541" width="0.4644%" height="15" fill="rgb(225,12,32)" fg:x="177437340" fg:w="1239860"/><text x="66.7076%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,239,860 samples, 0.46%)</title><rect x="66.4576%" y="1525" width="0.4644%" height="15" fill="rgb(247,98,14)" fg:x="177437340" fg:w="1239860"/><text x="66.7076%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,239,860 samples, 0.46%)</title><rect x="66.4576%" y="1509" width="0.4644%" height="15" fill="rgb(247,219,48)" fg:x="177437340" fg:w="1239860"/><text x="66.7076%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,239,860 samples, 0.46%)</title><rect x="66.4576%" y="1493" width="0.4644%" height="15" fill="rgb(253,60,48)" fg:x="177437340" fg:w="1239860"/><text x="66.7076%" y="1503.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,239,860 samples, 0.46%)</title><rect x="66.4576%" y="1477" width="0.4644%" height="15" fill="rgb(245,15,52)" fg:x="177437340" fg:w="1239860"/><text x="66.7076%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,239,860 samples, 0.46%)</title><rect x="66.4576%" y="1461" width="0.4644%" height="15" fill="rgb(220,133,28)" fg:x="177437340" fg:w="1239860"/><text x="66.7076%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,239,860 samples, 0.46%)</title><rect x="66.4576%" y="1445" width="0.4644%" height="15" fill="rgb(217,180,4)" fg:x="177437340" fg:w="1239860"/><text x="66.7076%" y="1455.50"></text></g><g><title>alloc::alloc::dealloc (1,239,860 samples, 0.46%)</title><rect x="66.4576%" y="1429" width="0.4644%" height="15" fill="rgb(251,24,1)" fg:x="177437340" fg:w="1239860"/><text x="66.7076%" y="1439.50"></text></g><g><title>cfree (1,239,860 samples, 0.46%)</title><rect x="66.4576%" y="1413" width="0.4644%" height="15" fill="rgb(212,185,49)" fg:x="177437340" fg:w="1239860"/><text x="66.7076%" y="1423.50"></text></g><g><title>[libc.so.6] (1,239,860 samples, 0.46%)</title><rect x="66.4576%" y="1397" width="0.4644%" height="15" fill="rgb(215,175,22)" fg:x="177437340" fg:w="1239860"/><text x="66.7076%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (18,621,318 samples, 6.97%)</title><rect x="60.4135%" y="1605" width="6.9744%" height="15" fill="rgb(250,205,14)" fg:x="161299922" fg:w="18621318"/><text x="60.6635%" y="1615.50">core::ptr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,621,318 samples, 6.97%)</title><rect x="60.4135%" y="1589" width="6.9744%" height="15" fill="rgb(225,211,22)" fg:x="161299922" fg:w="18621318"/><text x="60.6635%" y="1599.50">&lt;alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (18,621,318 samples, 6.97%)</title><rect x="60.4135%" y="1573" width="6.9744%" height="15" fill="rgb(251,179,42)" fg:x="161299922" fg:w="18621318"/><text x="60.6635%" y="1583.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (18,621,318 samples, 6.97%)</title><rect x="60.4135%" y="1557" width="6.9744%" height="15" fill="rgb(208,216,51)" fg:x="161299922" fg:w="18621318"/><text x="60.6635%" y="1567.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,244,040 samples, 0.47%)</title><rect x="66.9220%" y="1541" width="0.4659%" height="15" fill="rgb(235,36,11)" fg:x="178677200" fg:w="1244040"/><text x="67.1720%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,244,040 samples, 0.47%)</title><rect x="66.9220%" y="1525" width="0.4659%" height="15" fill="rgb(213,189,28)" fg:x="178677200" fg:w="1244040"/><text x="67.1720%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,244,040 samples, 0.47%)</title><rect x="66.9220%" y="1509" width="0.4659%" height="15" fill="rgb(227,203,42)" fg:x="178677200" fg:w="1244040"/><text x="67.1720%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,244,040 samples, 0.47%)</title><rect x="66.9220%" y="1493" width="0.4659%" height="15" fill="rgb(244,72,36)" fg:x="178677200" fg:w="1244040"/><text x="67.1720%" y="1503.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,040 samples, 0.47%)</title><rect x="66.9220%" y="1477" width="0.4659%" height="15" fill="rgb(213,53,17)" fg:x="178677200" fg:w="1244040"/><text x="67.1720%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,244,040 samples, 0.47%)</title><rect x="66.9220%" y="1461" width="0.4659%" height="15" fill="rgb(207,167,3)" fg:x="178677200" fg:w="1244040"/><text x="67.1720%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,244,040 samples, 0.47%)</title><rect x="66.9220%" y="1445" width="0.4659%" height="15" fill="rgb(216,98,30)" fg:x="178677200" fg:w="1244040"/><text x="67.1720%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,244,040 samples, 0.47%)</title><rect x="66.9220%" y="1429" width="0.4659%" height="15" fill="rgb(236,123,15)" fg:x="178677200" fg:w="1244040"/><text x="67.1720%" y="1439.50"></text></g><g><title>alloc::alloc::dealloc (1,244,040 samples, 0.47%)</title><rect x="66.9220%" y="1413" width="0.4659%" height="15" fill="rgb(248,81,50)" fg:x="178677200" fg:w="1244040"/><text x="67.1720%" y="1423.50"></text></g><g><title>cfree (1,244,040 samples, 0.47%)</title><rect x="66.9220%" y="1397" width="0.4659%" height="15" fill="rgb(214,120,4)" fg:x="178677200" fg:w="1244040"/><text x="67.1720%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,237,626 samples, 0.46%)</title><rect x="67.3879%" y="1605" width="0.4635%" height="15" fill="rgb(208,179,34)" fg:x="179921240" fg:w="1237626"/><text x="67.6379%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,237,626 samples, 0.46%)</title><rect x="67.3879%" y="1589" width="0.4635%" height="15" fill="rgb(227,140,7)" fg:x="179921240" fg:w="1237626"/><text x="67.6379%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,237,626 samples, 0.46%)</title><rect x="67.3879%" y="1573" width="0.4635%" height="15" fill="rgb(214,22,6)" fg:x="179921240" fg:w="1237626"/><text x="67.6379%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,237,626 samples, 0.46%)</title><rect x="67.3879%" y="1557" width="0.4635%" height="15" fill="rgb(207,137,27)" fg:x="179921240" fg:w="1237626"/><text x="67.6379%" y="1567.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,237,626 samples, 0.46%)</title><rect x="67.3879%" y="1541" width="0.4635%" height="15" fill="rgb(210,8,46)" fg:x="179921240" fg:w="1237626"/><text x="67.6379%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,237,626 samples, 0.46%)</title><rect x="67.3879%" y="1525" width="0.4635%" height="15" fill="rgb(240,16,54)" fg:x="179921240" fg:w="1237626"/><text x="67.6379%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,237,626 samples, 0.46%)</title><rect x="67.3879%" y="1509" width="0.4635%" height="15" fill="rgb(211,209,29)" fg:x="179921240" fg:w="1237626"/><text x="67.6379%" y="1519.50"></text></g><g><title>alloc::alloc::dealloc (1,237,626 samples, 0.46%)</title><rect x="67.3879%" y="1493" width="0.4635%" height="15" fill="rgb(226,228,24)" fg:x="179921240" fg:w="1237626"/><text x="67.6379%" y="1503.50"></text></g><g><title>cfree (1,237,626 samples, 0.46%)</title><rect x="67.3879%" y="1477" width="0.4635%" height="15" fill="rgb(222,84,9)" fg:x="179921240" fg:w="1237626"/><text x="67.6379%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;css_bitvector_compiler::IState&gt;&gt;&gt; (1,081,340 samples, 0.41%)</title><rect x="67.8514%" y="1605" width="0.4050%" height="15" fill="rgb(234,203,30)" fg:x="181158866" fg:w="1081340"/><text x="68.1014%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;css_bitvector_compiler::BitVector&gt;&gt; (1,238,713 samples, 0.46%)</title><rect x="68.2565%" y="1605" width="0.4639%" height="15" fill="rgb(238,109,14)" fg:x="182240206" fg:w="1238713"/><text x="68.5065%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,296,733 samples, 0.49%)</title><rect x="68.7204%" y="1605" width="0.4857%" height="15" fill="rgb(233,206,34)" fg:x="183478919" fg:w="1296733"/><text x="68.9704%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,296,733 samples, 0.49%)</title><rect x="68.7204%" y="1589" width="0.4857%" height="15" fill="rgb(220,167,47)" fg:x="183478919" fg:w="1296733"/><text x="68.9704%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,296,733 samples, 0.49%)</title><rect x="68.7204%" y="1573" width="0.4857%" height="15" fill="rgb(238,105,10)" fg:x="183478919" fg:w="1296733"/><text x="68.9704%" y="1583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,296,733 samples, 0.49%)</title><rect x="68.7204%" y="1557" width="0.4857%" height="15" fill="rgb(213,227,17)" fg:x="183478919" fg:w="1296733"/><text x="68.9704%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,296,733 samples, 0.49%)</title><rect x="68.7204%" y="1541" width="0.4857%" height="15" fill="rgb(217,132,38)" fg:x="183478919" fg:w="1296733"/><text x="68.9704%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,296,733 samples, 0.49%)</title><rect x="68.7204%" y="1525" width="0.4857%" height="15" fill="rgb(242,146,4)" fg:x="183478919" fg:w="1296733"/><text x="68.9704%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (1,296,733 samples, 0.49%)</title><rect x="68.7204%" y="1509" width="0.4857%" height="15" fill="rgb(212,61,9)" fg:x="183478919" fg:w="1296733"/><text x="68.9704%" y="1519.50"></text></g><g><title>cfree (1,296,733 samples, 0.49%)</title><rect x="68.7204%" y="1493" width="0.4857%" height="15" fill="rgb(247,126,22)" fg:x="183478919" fg:w="1296733"/><text x="68.9704%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28,226,171 samples, 10.57%)</title><rect x="58.9768%" y="1653" width="10.5719%" height="15" fill="rgb(220,196,2)" fg:x="157464206" fg:w="28226171"/><text x="59.2268%" y="1663.50">&lt;alloc::vec::Ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (28,226,171 samples, 10.57%)</title><rect x="58.9768%" y="1637" width="10.5719%" height="15" fill="rgb(208,46,4)" fg:x="157464206" fg:w="28226171"/><text x="59.2268%" y="1647.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (28,226,171 samples, 10.57%)</title><rect x="58.9768%" y="1621" width="10.5719%" height="15" fill="rgb(252,104,46)" fg:x="157464206" fg:w="28226171"/><text x="59.2268%" y="1631.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1605" width="0.3426%" height="15" fill="rgb(237,152,48)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1589" width="0.3426%" height="15" fill="rgb(221,59,37)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1573" width="0.3426%" height="15" fill="rgb(209,202,51)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1557" width="0.3426%" height="15" fill="rgb(228,81,30)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1567.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1541" width="0.3426%" height="15" fill="rgb(227,42,39)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1525" width="0.3426%" height="15" fill="rgb(221,26,2)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1509" width="0.3426%" height="15" fill="rgb(254,61,31)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1519.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1493" width="0.3426%" height="15" fill="rgb(222,173,38)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1503.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1477" width="0.3426%" height="15" fill="rgb(218,50,12)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1461" width="0.3426%" height="15" fill="rgb(223,88,40)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1445" width="0.3426%" height="15" fill="rgb(237,54,19)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1429" width="0.3426%" height="15" fill="rgb(251,129,25)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1413" width="0.3426%" height="15" fill="rgb(238,97,19)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1423.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1397" width="0.3426%" height="15" fill="rgb(240,169,18)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1381" width="0.3426%" height="15" fill="rgb(230,187,49)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1365" width="0.3426%" height="15" fill="rgb(209,44,26)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1375.50"></text></g><g><title>alloc::alloc::dealloc (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1349" width="0.3426%" height="15" fill="rgb(244,0,6)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1359.50"></text></g><g><title>cfree (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1333" width="0.3426%" height="15" fill="rgb(248,18,21)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1343.50"></text></g><g><title>[libc.so.6] (914,725 samples, 0.34%)</title><rect x="69.2061%" y="1317" width="0.3426%" height="15" fill="rgb(245,180,19)" fg:x="184775652" fg:w="914725"/><text x="69.4561%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (29,469,127 samples, 11.04%)</title><rect x="58.9768%" y="1669" width="11.0374%" height="15" fill="rgb(252,118,36)" fg:x="157464206" fg:w="29469127"/><text x="59.2268%" y="1679.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,242,956 samples, 0.47%)</title><rect x="69.5487%" y="1653" width="0.4655%" height="15" fill="rgb(210,224,19)" fg:x="185690377" fg:w="1242956"/><text x="69.7987%" y="1663.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,242,956 samples, 0.47%)</title><rect x="69.5487%" y="1637" width="0.4655%" height="15" fill="rgb(218,30,24)" fg:x="185690377" fg:w="1242956"/><text x="69.7987%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,242,956 samples, 0.47%)</title><rect x="69.5487%" y="1621" width="0.4655%" height="15" fill="rgb(219,75,50)" fg:x="185690377" fg:w="1242956"/><text x="69.7987%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,242,956 samples, 0.47%)</title><rect x="69.5487%" y="1605" width="0.4655%" height="15" fill="rgb(234,72,50)" fg:x="185690377" fg:w="1242956"/><text x="69.7987%" y="1615.50"></text></g><g><title>alloc::alloc::dealloc (1,242,956 samples, 0.47%)</title><rect x="69.5487%" y="1589" width="0.4655%" height="15" fill="rgb(219,100,48)" fg:x="185690377" fg:w="1242956"/><text x="69.7987%" y="1599.50"></text></g><g><title>cfree (1,242,956 samples, 0.47%)</title><rect x="69.5487%" y="1573" width="0.4655%" height="15" fill="rgb(253,5,41)" fg:x="185690377" fg:w="1242956"/><text x="69.7987%" y="1583.50"></text></g><g><title>[libc.so.6] (1,242,956 samples, 0.47%)</title><rect x="69.5487%" y="1557" width="0.4655%" height="15" fill="rgb(247,181,11)" fg:x="185690377" fg:w="1242956"/><text x="69.7987%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,298,839 samples, 0.49%)</title><rect x="70.0142%" y="1669" width="0.4865%" height="15" fill="rgb(222,223,25)" fg:x="186933333" fg:w="1298839"/><text x="70.2642%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,298,839 samples, 0.49%)</title><rect x="70.0142%" y="1653" width="0.4865%" height="15" fill="rgb(214,198,28)" fg:x="186933333" fg:w="1298839"/><text x="70.2642%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,298,839 samples, 0.49%)</title><rect x="70.0142%" y="1637" width="0.4865%" height="15" fill="rgb(230,46,43)" fg:x="186933333" fg:w="1298839"/><text x="70.2642%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,298,839 samples, 0.49%)</title><rect x="70.0142%" y="1621" width="0.4865%" height="15" fill="rgb(233,65,53)" fg:x="186933333" fg:w="1298839"/><text x="70.2642%" y="1631.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,298,839 samples, 0.49%)</title><rect x="70.0142%" y="1605" width="0.4865%" height="15" fill="rgb(221,121,27)" fg:x="186933333" fg:w="1298839"/><text x="70.2642%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,298,839 samples, 0.49%)</title><rect x="70.0142%" y="1589" width="0.4865%" height="15" fill="rgb(247,70,47)" fg:x="186933333" fg:w="1298839"/><text x="70.2642%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,298,839 samples, 0.49%)</title><rect x="70.0142%" y="1573" width="0.4865%" height="15" fill="rgb(228,85,35)" fg:x="186933333" fg:w="1298839"/><text x="70.2642%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (1,298,839 samples, 0.49%)</title><rect x="70.0142%" y="1557" width="0.4865%" height="15" fill="rgb(209,50,18)" fg:x="186933333" fg:w="1298839"/><text x="70.2642%" y="1567.50"></text></g><g><title>cfree (1,298,839 samples, 0.49%)</title><rect x="70.0142%" y="1541" width="0.4865%" height="15" fill="rgb(250,19,35)" fg:x="186933333" fg:w="1298839"/><text x="70.2642%" y="1551.50"></text></g><g><title>[libc.so.6] (1,298,839 samples, 0.49%)</title><rect x="70.0142%" y="1525" width="0.4865%" height="15" fill="rgb(253,107,29)" fg:x="186933333" fg:w="1298839"/><text x="70.2642%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;css_bitvector_compiler::IState&gt;&gt;&gt; (1,298,695 samples, 0.49%)</title><rect x="70.5007%" y="1669" width="0.4864%" height="15" fill="rgb(252,179,29)" fg:x="188232172" fg:w="1298695"/><text x="70.7507%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,599,499 samples, 0.97%)</title><rect x="70.9871%" y="1669" width="0.9736%" height="15" fill="rgb(238,194,6)" fg:x="189530867" fg:w="2599499"/><text x="71.2371%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,599,499 samples, 0.97%)</title><rect x="70.9871%" y="1653" width="0.9736%" height="15" fill="rgb(238,164,29)" fg:x="189530867" fg:w="2599499"/><text x="71.2371%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,599,499 samples, 0.97%)</title><rect x="70.9871%" y="1637" width="0.9736%" height="15" fill="rgb(224,25,9)" fg:x="189530867" fg:w="2599499"/><text x="71.2371%" y="1647.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,599,499 samples, 0.97%)</title><rect x="70.9871%" y="1621" width="0.9736%" height="15" fill="rgb(244,153,23)" fg:x="189530867" fg:w="2599499"/><text x="71.2371%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,599,499 samples, 0.97%)</title><rect x="70.9871%" y="1605" width="0.9736%" height="15" fill="rgb(212,203,14)" fg:x="189530867" fg:w="2599499"/><text x="71.2371%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,599,499 samples, 0.97%)</title><rect x="70.9871%" y="1589" width="0.9736%" height="15" fill="rgb(220,164,20)" fg:x="189530867" fg:w="2599499"/><text x="71.2371%" y="1599.50"></text></g><g><title>alloc::alloc::dealloc (2,599,499 samples, 0.97%)</title><rect x="70.9871%" y="1573" width="0.9736%" height="15" fill="rgb(222,203,48)" fg:x="189530867" fg:w="2599499"/><text x="71.2371%" y="1583.50"></text></g><g><title>cfree (1,235,994 samples, 0.46%)</title><rect x="71.4978%" y="1557" width="0.4629%" height="15" fill="rgb(215,159,22)" fg:x="190894372" fg:w="1235994"/><text x="71.7478%" y="1567.50"></text></g><g><title>[libc.so.6] (1,235,994 samples, 0.46%)</title><rect x="71.4978%" y="1541" width="0.4629%" height="15" fill="rgb(216,183,47)" fg:x="190894372" fg:w="1235994"/><text x="71.7478%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35,893,852 samples, 13.44%)</title><rect x="58.9768%" y="1717" width="13.4437%" height="15" fill="rgb(229,195,25)" fg:x="157464206" fg:w="35893852"/><text x="59.2268%" y="1727.50">&lt;alloc::vec::Vec&lt;T,A..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (35,893,852 samples, 13.44%)</title><rect x="58.9768%" y="1701" width="13.4437%" height="15" fill="rgb(224,132,51)" fg:x="157464206" fg:w="35893852"/><text x="59.2268%" y="1711.50">core::ptr::drop_in_p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (35,893,852 samples, 13.44%)</title><rect x="58.9768%" y="1685" width="13.4437%" height="15" fill="rgb(240,63,7)" fg:x="157464206" fg:w="35893852"/><text x="59.2268%" y="1695.50">core::ptr::drop_in_p..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1669" width="0.4598%" height="15" fill="rgb(249,182,41)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1653" width="0.4598%" height="15" fill="rgb(243,47,26)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1637" width="0.4598%" height="15" fill="rgb(233,48,2)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1621" width="0.4598%" height="15" fill="rgb(244,165,34)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1631.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1605" width="0.4598%" height="15" fill="rgb(207,89,7)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1589" width="0.4598%" height="15" fill="rgb(244,117,36)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1573" width="0.4598%" height="15" fill="rgb(226,144,34)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1583.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1557" width="0.4598%" height="15" fill="rgb(213,23,19)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1567.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1541" width="0.4598%" height="15" fill="rgb(217,75,12)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1525" width="0.4598%" height="15" fill="rgb(224,159,17)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1509" width="0.4598%" height="15" fill="rgb(217,118,1)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1493" width="0.4598%" height="15" fill="rgb(232,180,48)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1477" width="0.4598%" height="15" fill="rgb(230,27,33)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1487.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1461" width="0.4598%" height="15" fill="rgb(205,31,21)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1445" width="0.4598%" height="15" fill="rgb(253,59,4)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1429" width="0.4598%" height="15" fill="rgb(224,201,9)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1439.50"></text></g><g><title>alloc::alloc::dealloc (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1413" width="0.4598%" height="15" fill="rgb(229,206,30)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1423.50"></text></g><g><title>cfree (1,227,692 samples, 0.46%)</title><rect x="71.9607%" y="1397" width="0.4598%" height="15" fill="rgb(212,67,47)" fg:x="192130366" fg:w="1227692"/><text x="72.2107%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53,643,261 samples, 20.09%)</title><rect x="58.9768%" y="1781" width="20.0916%" height="15" fill="rgb(211,96,50)" fg:x="157464206" fg:w="53643261"/><text x="59.2268%" y="1791.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (53,643,261 samples, 20.09%)</title><rect x="58.9768%" y="1765" width="20.0916%" height="15" fill="rgb(252,114,18)" fg:x="157464206" fg:w="53643261"/><text x="59.2268%" y="1775.50">core::ptr::drop_in_place&lt;[css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (53,643,261 samples, 20.09%)</title><rect x="58.9768%" y="1749" width="20.0916%" height="15" fill="rgb(223,58,37)" fg:x="157464206" fg:w="53643261"/><text x="59.2268%" y="1759.50">core::ptr::drop_in_place&lt;css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (53,643,261 samples, 20.09%)</title><rect x="58.9768%" y="1733" width="20.0916%" height="15" fill="rgb(237,70,4)" fg:x="157464206" fg:w="53643261"/><text x="59.2268%" y="1743.50">core::ptr::drop_in_place&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (17,749,409 samples, 6.65%)</title><rect x="72.4205%" y="1717" width="6.6479%" height="15" fill="rgb(244,85,46)" fg:x="193358058" fg:w="17749409"/><text x="72.6705%" y="1727.50">core::ptr..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,749,409 samples, 6.65%)</title><rect x="72.4205%" y="1701" width="6.6479%" height="15" fill="rgb(223,39,52)" fg:x="193358058" fg:w="17749409"/><text x="72.6705%" y="1711.50">&lt;alloc::r..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (17,749,409 samples, 6.65%)</title><rect x="72.4205%" y="1685" width="6.6479%" height="15" fill="rgb(218,200,14)" fg:x="193358058" fg:w="17749409"/><text x="72.6705%" y="1695.50">alloc::ra..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17,749,409 samples, 6.65%)</title><rect x="72.4205%" y="1669" width="6.6479%" height="15" fill="rgb(208,171,16)" fg:x="193358058" fg:w="17749409"/><text x="72.6705%" y="1679.50">&lt;alloc::a..</text></g><g><title>alloc::alloc::dealloc (17,749,409 samples, 6.65%)</title><rect x="72.4205%" y="1653" width="6.6479%" height="15" fill="rgb(234,200,18)" fg:x="193358058" fg:w="17749409"/><text x="72.6705%" y="1663.50">alloc::al..</text></g><g><title>cfree (17,749,409 samples, 6.65%)</title><rect x="72.4205%" y="1637" width="6.6479%" height="15" fill="rgb(228,45,11)" fg:x="193358058" fg:w="17749409"/><text x="72.6705%" y="1647.50">cfree</text></g><g><title>[libc.so.6] (17,749,409 samples, 6.65%)</title><rect x="72.4205%" y="1621" width="6.6479%" height="15" fill="rgb(237,182,11)" fg:x="193358058" fg:w="17749409"/><text x="72.6705%" y="1631.50">[libc.so...</text></g><g><title>[libc.so.6] (17,749,409 samples, 6.65%)</title><rect x="72.4205%" y="1605" width="6.6479%" height="15" fill="rgb(241,175,49)" fg:x="193358058" fg:w="17749409"/><text x="72.6705%" y="1615.50">[libc.so...</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (54,885,195 samples, 20.56%)</title><rect x="58.9768%" y="1797" width="20.5568%" height="15" fill="rgb(247,38,35)" fg:x="157464206" fg:w="54885195"/><text x="59.2268%" y="1807.50">core::ptr::drop_in_place&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,241,934 samples, 0.47%)</title><rect x="79.0684%" y="1781" width="0.4652%" height="15" fill="rgb(228,39,49)" fg:x="211107467" fg:w="1241934"/><text x="79.3184%" y="1791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,241,934 samples, 0.47%)</title><rect x="79.0684%" y="1765" width="0.4652%" height="15" fill="rgb(226,101,26)" fg:x="211107467" fg:w="1241934"/><text x="79.3184%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,241,934 samples, 0.47%)</title><rect x="79.0684%" y="1749" width="0.4652%" height="15" fill="rgb(206,141,19)" fg:x="211107467" fg:w="1241934"/><text x="79.3184%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,241,934 samples, 0.47%)</title><rect x="79.0684%" y="1733" width="0.4652%" height="15" fill="rgb(211,200,13)" fg:x="211107467" fg:w="1241934"/><text x="79.3184%" y="1743.50"></text></g><g><title>alloc::alloc::dealloc (1,241,934 samples, 0.47%)</title><rect x="79.0684%" y="1717" width="0.4652%" height="15" fill="rgb(241,121,6)" fg:x="211107467" fg:w="1241934"/><text x="79.3184%" y="1727.50"></text></g><g><title>cfree (1,241,934 samples, 0.47%)</title><rect x="79.0684%" y="1701" width="0.4652%" height="15" fill="rgb(234,221,29)" fg:x="211107467" fg:w="1241934"/><text x="79.3184%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55,851,028 samples, 20.92%)</title><rect x="58.9768%" y="1845" width="20.9185%" height="15" fill="rgb(229,136,5)" fg:x="157464206" fg:w="55851028"/><text x="59.2268%" y="1855.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (55,851,028 samples, 20.92%)</title><rect x="58.9768%" y="1829" width="20.9185%" height="15" fill="rgb(238,36,11)" fg:x="157464206" fg:w="55851028"/><text x="59.2268%" y="1839.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (55,851,028 samples, 20.92%)</title><rect x="58.9768%" y="1813" width="20.9185%" height="15" fill="rgb(251,55,41)" fg:x="157464206" fg:w="55851028"/><text x="59.2268%" y="1823.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (965,833 samples, 0.36%)</title><rect x="79.5336%" y="1797" width="0.3617%" height="15" fill="rgb(242,34,40)" fg:x="212349401" fg:w="965833"/><text x="79.7836%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (62,124,387 samples, 23.27%)</title><rect x="58.4966%" y="2069" width="23.2681%" height="15" fill="rgb(215,42,17)" fg:x="156182125" fg:w="62124387"/><text x="58.7466%" y="2079.50">core::ptr::drop_in_place&lt;css_bitvecto..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (62,124,387 samples, 23.27%)</title><rect x="58.4966%" y="2053" width="23.2681%" height="15" fill="rgb(207,44,46)" fg:x="156182125" fg:w="62124387"/><text x="58.7466%" y="2063.50">core::ptr::drop_in_place&lt;alloc::vec::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (62,124,387 samples, 23.27%)</title><rect x="58.4966%" y="2037" width="23.2681%" height="15" fill="rgb(211,206,28)" fg:x="156182125" fg:w="62124387"/><text x="58.7466%" y="2047.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::d..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (62,124,387 samples, 23.27%)</title><rect x="58.4966%" y="2021" width="23.2681%" height="15" fill="rgb(237,167,16)" fg:x="156182125" fg:w="62124387"/><text x="58.7466%" y="2031.50">core::ptr::drop_in_place&lt;[css_bitvect..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (62,124,387 samples, 23.27%)</title><rect x="58.4966%" y="2005" width="23.2681%" height="15" fill="rgb(233,66,6)" fg:x="156182125" fg:w="62124387"/><text x="58.7466%" y="2015.50">core::ptr::drop_in_place&lt;css_bitvecto..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (60,842,306 samples, 22.79%)</title><rect x="58.9768%" y="1989" width="22.7879%" height="15" fill="rgb(246,123,29)" fg:x="157464206" fg:w="60842306"/><text x="59.2268%" y="1999.50">core::ptr::drop_in_place&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60,842,306 samples, 22.79%)</title><rect x="58.9768%" y="1973" width="22.7879%" height="15" fill="rgb(209,62,40)" fg:x="157464206" fg:w="60842306"/><text x="59.2268%" y="1983.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (60,842,306 samples, 22.79%)</title><rect x="58.9768%" y="1957" width="22.7879%" height="15" fill="rgb(218,4,25)" fg:x="157464206" fg:w="60842306"/><text x="59.2268%" y="1967.50">core::ptr::drop_in_place&lt;[css_bitvec..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (60,842,306 samples, 22.79%)</title><rect x="58.9768%" y="1941" width="22.7879%" height="15" fill="rgb(253,91,49)" fg:x="157464206" fg:w="60842306"/><text x="59.2268%" y="1951.50">core::ptr::drop_in_place&lt;css_bitvect..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (60,842,306 samples, 22.79%)</title><rect x="58.9768%" y="1925" width="22.7879%" height="15" fill="rgb(228,155,29)" fg:x="157464206" fg:w="60842306"/><text x="59.2268%" y="1935.50">core::ptr::drop_in_place&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60,842,306 samples, 22.79%)</title><rect x="58.9768%" y="1909" width="22.7879%" height="15" fill="rgb(243,57,37)" fg:x="157464206" fg:w="60842306"/><text x="59.2268%" y="1919.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (60,842,306 samples, 22.79%)</title><rect x="58.9768%" y="1893" width="22.7879%" height="15" fill="rgb(244,167,17)" fg:x="157464206" fg:w="60842306"/><text x="59.2268%" y="1903.50">core::ptr::drop_in_place&lt;[css_bitvec..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (60,842,306 samples, 22.79%)</title><rect x="58.9768%" y="1877" width="22.7879%" height="15" fill="rgb(207,181,38)" fg:x="157464206" fg:w="60842306"/><text x="59.2268%" y="1887.50">core::ptr::drop_in_place&lt;css_bitvect..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (60,842,306 samples, 22.79%)</title><rect x="58.9768%" y="1861" width="22.7879%" height="15" fill="rgb(211,8,23)" fg:x="157464206" fg:w="60842306"/><text x="59.2268%" y="1871.50">core::ptr::drop_in_place&lt;alloc::vec:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (4,991,278 samples, 1.87%)</title><rect x="79.8953%" y="1845" width="1.8694%" height="15" fill="rgb(235,11,44)" fg:x="213315234" fg:w="4991278"/><text x="80.1453%" y="1855.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,991,278 samples, 1.87%)</title><rect x="79.8953%" y="1829" width="1.8694%" height="15" fill="rgb(248,18,52)" fg:x="213315234" fg:w="4991278"/><text x="80.1453%" y="1839.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,991,278 samples, 1.87%)</title><rect x="79.8953%" y="1813" width="1.8694%" height="15" fill="rgb(208,4,7)" fg:x="213315234" fg:w="4991278"/><text x="80.1453%" y="1823.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,991,278 samples, 1.87%)</title><rect x="79.8953%" y="1797" width="1.8694%" height="15" fill="rgb(240,17,39)" fg:x="213315234" fg:w="4991278"/><text x="80.1453%" y="1807.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (4,991,278 samples, 1.87%)</title><rect x="79.8953%" y="1781" width="1.8694%" height="15" fill="rgb(207,170,3)" fg:x="213315234" fg:w="4991278"/><text x="80.1453%" y="1791.50">a..</text></g><g><title>cfree (4,991,278 samples, 1.87%)</title><rect x="79.8953%" y="1765" width="1.8694%" height="15" fill="rgb(236,100,52)" fg:x="213315234" fg:w="4991278"/><text x="80.1453%" y="1775.50">c..</text></g><g><title>[libc.so.6] (2,486,627 samples, 0.93%)</title><rect x="80.8334%" y="1749" width="0.9313%" height="15" fill="rgb(246,78,51)" fg:x="215819885" fg:w="2486627"/><text x="81.0834%" y="1759.50"></text></g><g><title>[libc.so.6] (2,486,627 samples, 0.93%)</title><rect x="80.8334%" y="1733" width="0.9313%" height="15" fill="rgb(211,17,15)" fg:x="215819885" fg:w="2486627"/><text x="81.0834%" y="1743.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,242,931 samples, 0.47%)</title><rect x="81.7648%" y="2069" width="0.4655%" height="15" fill="rgb(209,59,46)" fg:x="218306512" fg:w="1242931"/><text x="82.0148%" y="2079.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,242,931 samples, 0.47%)</title><rect x="81.7648%" y="2053" width="0.4655%" height="15" fill="rgb(210,92,25)" fg:x="218306512" fg:w="1242931"/><text x="82.0148%" y="2063.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,242,931 samples, 0.47%)</title><rect x="81.7648%" y="2037" width="0.4655%" height="15" fill="rgb(238,174,52)" fg:x="218306512" fg:w="1242931"/><text x="82.0148%" y="2047.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,242,931 samples, 0.47%)</title><rect x="81.7648%" y="2021" width="0.4655%" height="15" fill="rgb(230,73,7)" fg:x="218306512" fg:w="1242931"/><text x="82.0148%" y="2031.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,242,931 samples, 0.47%)</title><rect x="81.7648%" y="2005" width="0.4655%" height="15" fill="rgb(243,124,40)" fg:x="218306512" fg:w="1242931"/><text x="82.0148%" y="2015.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,242,931 samples, 0.47%)</title><rect x="81.7648%" y="1989" width="0.4655%" height="15" fill="rgb(244,170,11)" fg:x="218306512" fg:w="1242931"/><text x="82.0148%" y="1999.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,242,931 samples, 0.47%)</title><rect x="81.7648%" y="1973" width="0.4655%" height="15" fill="rgb(207,114,54)" fg:x="218306512" fg:w="1242931"/><text x="82.0148%" y="1983.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,242,931 samples, 0.47%)</title><rect x="81.7648%" y="1957" width="0.4655%" height="15" fill="rgb(205,42,20)" fg:x="218306512" fg:w="1242931"/><text x="82.0148%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,242,931 samples, 0.47%)</title><rect x="81.7648%" y="1941" width="0.4655%" height="15" fill="rgb(230,30,28)" fg:x="218306512" fg:w="1242931"/><text x="82.0148%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,242,931 samples, 0.47%)</title><rect x="81.7648%" y="1925" width="0.4655%" height="15" fill="rgb(205,73,54)" fg:x="218306512" fg:w="1242931"/><text x="82.0148%" y="1935.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (182,399,273 samples, 68.32%)</title><rect x="14.3805%" y="2085" width="68.3160%" height="15" fill="rgb(254,227,23)" fg:x="38394928" fg:w="182399273"/><text x="14.6305%" y="2095.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_bitvector (1,244,758 samples, 0.47%)</title><rect x="82.2303%" y="2069" width="0.4662%" height="15" fill="rgb(228,202,34)" fg:x="219549443" fg:w="1244758"/><text x="82.4803%" y="2079.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_recursive_bitvector_incremental (1,244,758 samples, 0.47%)</title><rect x="82.2303%" y="2053" width="0.4662%" height="15" fill="rgb(222,225,37)" fg:x="219549443" fg:w="1244758"/><text x="82.4803%" y="2063.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_node_generated_bitvector_incremental (1,244,758 samples, 0.47%)</title><rect x="82.2303%" y="2037" width="0.4662%" height="15" fill="rgb(221,14,54)" fg:x="219549443" fg:w="1244758"/><text x="82.4803%" y="2047.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::get_node_tag_id (1,244,758 samples, 0.47%)</title><rect x="82.2303%" y="2021" width="0.4662%" height="15" fill="rgb(254,102,2)" fg:x="219549443" fg:w="1244758"/><text x="82.4803%" y="2031.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,244,758 samples, 0.47%)</title><rect x="82.2303%" y="2005" width="0.4662%" height="15" fill="rgb(232,104,17)" fg:x="219549443" fg:w="1244758"/><text x="82.4803%" y="2015.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,244,758 samples, 0.47%)</title><rect x="82.2303%" y="1989" width="0.4662%" height="15" fill="rgb(250,220,14)" fg:x="219549443" fg:w="1244758"/><text x="82.4803%" y="1999.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,244,758 samples, 0.47%)</title><rect x="82.2303%" y="1973" width="0.4662%" height="15" fill="rgb(241,158,9)" fg:x="219549443" fg:w="1244758"/><text x="82.4803%" y="1983.50"></text></g><g><title>hashbrown::map::make_hash (1,244,758 samples, 0.47%)</title><rect x="82.2303%" y="1957" width="0.4662%" height="15" fill="rgb(246,9,43)" fg:x="219549443" fg:w="1244758"/><text x="82.4803%" y="1967.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,244,758 samples, 0.47%)</title><rect x="82.2303%" y="1941" width="0.4662%" height="15" fill="rgb(206,73,33)" fg:x="219549443" fg:w="1244758"/><text x="82.4803%" y="1951.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1,244,758 samples, 0.47%)</title><rect x="82.2303%" y="1925" width="0.4662%" height="15" fill="rgb(222,79,8)" fg:x="219549443" fg:w="1244758"/><text x="82.4803%" y="1935.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1,244,758 samples, 0.47%)</title><rect x="82.2303%" y="1909" width="0.4662%" height="15" fill="rgb(234,8,54)" fg:x="219549443" fg:w="1244758"/><text x="82.4803%" y="1919.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1,244,758 samples, 0.47%)</title><rect x="82.2303%" y="1893" width="0.4662%" height="15" fill="rgb(209,134,38)" fg:x="219549443" fg:w="1244758"/><text x="82.4803%" y="1903.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1,244,758 samples, 0.47%)</title><rect x="82.2303%" y="1877" width="0.4662%" height="15" fill="rgb(230,127,29)" fg:x="219549443" fg:w="1244758"/><text x="82.4803%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (948,720 samples, 0.36%)</title><rect x="82.6965%" y="2069" width="0.3553%" height="15" fill="rgb(242,44,41)" fg:x="220794201" fg:w="948720"/><text x="82.9465%" y="2079.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (948,720 samples, 0.36%)</title><rect x="82.6965%" y="2053" width="0.3553%" height="15" fill="rgb(222,56,43)" fg:x="220794201" fg:w="948720"/><text x="82.9465%" y="2063.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (948,720 samples, 0.36%)</title><rect x="82.6965%" y="2037" width="0.3553%" height="15" fill="rgb(238,39,47)" fg:x="220794201" fg:w="948720"/><text x="82.9465%" y="2047.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (948,720 samples, 0.36%)</title><rect x="82.6965%" y="2021" width="0.3553%" height="15" fill="rgb(226,79,43)" fg:x="220794201" fg:w="948720"/><text x="82.9465%" y="2031.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (948,720 samples, 0.36%)</title><rect x="82.6965%" y="2005" width="0.3553%" height="15" fill="rgb(242,105,53)" fg:x="220794201" fg:w="948720"/><text x="82.9465%" y="2015.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,034,380 samples, 0.39%)</title><rect x="83.0518%" y="1781" width="0.3874%" height="15" fill="rgb(251,132,46)" fg:x="221742921" fg:w="1034380"/><text x="83.3018%" y="1791.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1,034,380 samples, 0.39%)</title><rect x="83.0518%" y="1765" width="0.3874%" height="15" fill="rgb(231,77,14)" fg:x="221742921" fg:w="1034380"/><text x="83.3018%" y="1775.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,034,380 samples, 0.39%)</title><rect x="83.0518%" y="1749" width="0.3874%" height="15" fill="rgb(240,135,9)" fg:x="221742921" fg:w="1034380"/><text x="83.3018%" y="1759.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,034,380 samples, 0.39%)</title><rect x="83.0518%" y="1733" width="0.3874%" height="15" fill="rgb(248,109,14)" fg:x="221742921" fg:w="1034380"/><text x="83.3018%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,034,380 samples, 0.39%)</title><rect x="83.0518%" y="1717" width="0.3874%" height="15" fill="rgb(227,146,52)" fg:x="221742921" fg:w="1034380"/><text x="83.3018%" y="1727.50"></text></g><g><title>alloc::alloc::dealloc (1,034,380 samples, 0.39%)</title><rect x="83.0518%" y="1701" width="0.3874%" height="15" fill="rgb(232,54,3)" fg:x="221742921" fg:w="1034380"/><text x="83.3018%" y="1711.50"></text></g><g><title>cfree (1,034,380 samples, 0.39%)</title><rect x="83.0518%" y="1685" width="0.3874%" height="15" fill="rgb(229,201,43)" fg:x="221742921" fg:w="1034380"/><text x="83.3018%" y="1695.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,091,660 samples, 0.41%)</title><rect x="83.4393%" y="1765" width="0.4089%" height="15" fill="rgb(252,161,33)" fg:x="222777301" fg:w="1091660"/><text x="83.6893%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,091,660 samples, 0.41%)</title><rect x="83.4393%" y="1749" width="0.4089%" height="15" fill="rgb(226,146,40)" fg:x="222777301" fg:w="1091660"/><text x="83.6893%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,091,660 samples, 0.41%)</title><rect x="83.4393%" y="1733" width="0.4089%" height="15" fill="rgb(219,47,25)" fg:x="222777301" fg:w="1091660"/><text x="83.6893%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,091,660 samples, 0.41%)</title><rect x="83.4393%" y="1717" width="0.4089%" height="15" fill="rgb(250,135,13)" fg:x="222777301" fg:w="1091660"/><text x="83.6893%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,660 samples, 0.41%)</title><rect x="83.4393%" y="1701" width="0.4089%" height="15" fill="rgb(219,229,18)" fg:x="222777301" fg:w="1091660"/><text x="83.6893%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,091,660 samples, 0.41%)</title><rect x="83.4393%" y="1685" width="0.4089%" height="15" fill="rgb(217,152,27)" fg:x="222777301" fg:w="1091660"/><text x="83.6893%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,091,660 samples, 0.41%)</title><rect x="83.4393%" y="1669" width="0.4089%" height="15" fill="rgb(225,71,47)" fg:x="222777301" fg:w="1091660"/><text x="83.6893%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (1,091,660 samples, 0.41%)</title><rect x="83.4393%" y="1653" width="0.4089%" height="15" fill="rgb(220,139,14)" fg:x="222777301" fg:w="1091660"/><text x="83.6893%" y="1663.50"></text></g><g><title>cfree (1,091,660 samples, 0.41%)</title><rect x="83.4393%" y="1637" width="0.4089%" height="15" fill="rgb(247,54,32)" fg:x="222777301" fg:w="1091660"/><text x="83.6893%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="2069" width="1.1263%" height="15" fill="rgb(252,131,39)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="2053" width="1.1263%" height="15" fill="rgb(210,108,39)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="2037" width="1.1263%" height="15" fill="rgb(205,23,29)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="2047.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="2021" width="1.1263%" height="15" fill="rgb(246,139,46)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="2031.50"></text></g><g><title>core::mem::drop (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="2005" width="1.1263%" height="15" fill="rgb(250,81,26)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="1989" width="1.1263%" height="15" fill="rgb(214,104,7)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="1999.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="1973" width="1.1263%" height="15" fill="rgb(233,189,8)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="1957" width="1.1263%" height="15" fill="rgb(228,141,17)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="1941" width="1.1263%" height="15" fill="rgb(247,157,1)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="1925" width="1.1263%" height="15" fill="rgb(249,225,5)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="1935.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="1909" width="1.1263%" height="15" fill="rgb(242,55,13)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="1893" width="1.1263%" height="15" fill="rgb(230,49,50)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="1877" width="1.1263%" height="15" fill="rgb(241,111,38)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="1861" width="1.1263%" height="15" fill="rgb(252,155,4)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="1845" width="1.1263%" height="15" fill="rgb(212,69,32)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="1855.50"></text></g><g><title>core::mem::drop (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="1829" width="1.1263%" height="15" fill="rgb(243,107,47)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="1813" width="1.1263%" height="15" fill="rgb(247,130,12)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,007,166 samples, 1.13%)</title><rect x="83.0518%" y="1797" width="1.1263%" height="15" fill="rgb(233,74,16)" fg:x="221742921" fg:w="3007166"/><text x="83.3018%" y="1807.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,972,786 samples, 0.74%)</title><rect x="83.4393%" y="1781" width="0.7389%" height="15" fill="rgb(208,58,18)" fg:x="222777301" fg:w="1972786"/><text x="83.6893%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1765" width="0.3300%" height="15" fill="rgb(242,225,1)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1775.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1749" width="0.3300%" height="15" fill="rgb(249,39,40)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1759.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1733" width="0.3300%" height="15" fill="rgb(207,72,44)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1717" width="0.3300%" height="15" fill="rgb(215,193,12)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1701" width="0.3300%" height="15" fill="rgb(248,41,39)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1685" width="0.3300%" height="15" fill="rgb(253,85,4)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1669" width="0.3300%" height="15" fill="rgb(243,70,31)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1653" width="0.3300%" height="15" fill="rgb(253,195,26)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1637" width="0.3300%" height="15" fill="rgb(243,42,11)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1621" width="0.3300%" height="15" fill="rgb(239,66,17)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1605" width="0.3300%" height="15" fill="rgb(217,132,21)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1615.50"></text></g><g><title>core::mem::drop (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1589" width="0.3300%" height="15" fill="rgb(252,202,21)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1573" width="0.3300%" height="15" fill="rgb(233,98,36)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1557" width="0.3300%" height="15" fill="rgb(216,153,54)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1541" width="0.3300%" height="15" fill="rgb(250,99,7)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1525" width="0.3300%" height="15" fill="rgb(207,56,50)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1535.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1509" width="0.3300%" height="15" fill="rgb(244,61,34)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1519.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1493" width="0.3300%" height="15" fill="rgb(241,50,38)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1477" width="0.3300%" height="15" fill="rgb(212,166,30)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1461" width="0.3300%" height="15" fill="rgb(249,127,32)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1445" width="0.3300%" height="15" fill="rgb(209,103,0)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1429" width="0.3300%" height="15" fill="rgb(238,209,51)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1413" width="0.3300%" height="15" fill="rgb(237,56,23)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1397" width="0.3300%" height="15" fill="rgb(215,153,46)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1381" width="0.3300%" height="15" fill="rgb(224,49,31)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1365" width="0.3300%" height="15" fill="rgb(250,18,42)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1375.50"></text></g><g><title>core::mem::drop (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1349" width="0.3300%" height="15" fill="rgb(215,176,39)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1333" width="0.3300%" height="15" fill="rgb(223,77,29)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1317" width="0.3300%" height="15" fill="rgb(234,94,52)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1327.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1301" width="0.3300%" height="15" fill="rgb(220,154,50)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1311.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1285" width="0.3300%" height="15" fill="rgb(212,11,10)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1269" width="0.3300%" height="15" fill="rgb(205,166,19)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1253" width="0.3300%" height="15" fill="rgb(244,198,16)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1237" width="0.3300%" height="15" fill="rgb(219,69,12)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1221" width="0.3300%" height="15" fill="rgb(245,30,7)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1205" width="0.3300%" height="15" fill="rgb(218,221,48)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1189" width="0.3300%" height="15" fill="rgb(216,66,15)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1173" width="0.3300%" height="15" fill="rgb(226,122,50)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1183.50"></text></g><g><title>cfree (881,126 samples, 0.33%)</title><rect x="83.8481%" y="1157" width="0.3300%" height="15" fill="rgb(239,156,16)" fg:x="223868961" fg:w="881126"/><text x="84.0981%" y="1167.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1957" width="0.4060%" height="15" fill="rgb(224,27,38)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1967.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1941" width="0.4060%" height="15" fill="rgb(224,39,27)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1951.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1925" width="0.4060%" height="15" fill="rgb(215,92,29)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1935.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1909" width="0.4060%" height="15" fill="rgb(207,159,16)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1919.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1893" width="0.4060%" height="15" fill="rgb(238,163,47)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1903.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1877" width="0.4060%" height="15" fill="rgb(219,91,49)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1887.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1861" width="0.4060%" height="15" fill="rgb(227,167,31)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1871.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1845" width="0.4060%" height="15" fill="rgb(234,80,54)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1855.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1829" width="0.4060%" height="15" fill="rgb(212,114,2)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1813" width="0.4060%" height="15" fill="rgb(234,50,24)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1823.50"></text></g><g><title>alloc::slice::hack::to_vec (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1797" width="0.4060%" height="15" fill="rgb(221,68,8)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1781" width="0.4060%" height="15" fill="rgb(254,180,31)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1765" width="0.4060%" height="15" fill="rgb(247,130,50)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1749" width="0.4060%" height="15" fill="rgb(211,109,4)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1733" width="0.4060%" height="15" fill="rgb(238,50,21)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1717" width="0.4060%" height="15" fill="rgb(225,57,45)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1701" width="0.4060%" height="15" fill="rgb(209,196,50)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1685" width="0.4060%" height="15" fill="rgb(242,140,13)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1669" width="0.4060%" height="15" fill="rgb(217,111,7)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1679.50"></text></g><g><title>malloc (1,083,902 samples, 0.41%)</title><rect x="84.1781%" y="1653" width="0.4060%" height="15" fill="rgb(253,193,51)" fg:x="224750087" fg:w="1083902"/><text x="84.4281%" y="1663.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (901,765 samples, 0.34%)</title><rect x="84.5841%" y="1845" width="0.3377%" height="15" fill="rgb(252,70,29)" fg:x="225833989" fg:w="901765"/><text x="84.8341%" y="1855.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (901,765 samples, 0.34%)</title><rect x="84.5841%" y="1829" width="0.3377%" height="15" fill="rgb(232,127,12)" fg:x="225833989" fg:w="901765"/><text x="84.8341%" y="1839.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (901,765 samples, 0.34%)</title><rect x="84.5841%" y="1813" width="0.3377%" height="15" fill="rgb(211,180,21)" fg:x="225833989" fg:w="901765"/><text x="84.8341%" y="1823.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (901,765 samples, 0.34%)</title><rect x="84.5841%" y="1797" width="0.3377%" height="15" fill="rgb(229,72,13)" fg:x="225833989" fg:w="901765"/><text x="84.8341%" y="1807.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (901,765 samples, 0.34%)</title><rect x="84.5841%" y="1781" width="0.3377%" height="15" fill="rgb(240,211,49)" fg:x="225833989" fg:w="901765"/><text x="84.8341%" y="1791.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (901,765 samples, 0.34%)</title><rect x="84.5841%" y="1765" width="0.3377%" height="15" fill="rgb(219,149,40)" fg:x="225833989" fg:w="901765"/><text x="84.8341%" y="1775.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (901,765 samples, 0.34%)</title><rect x="84.5841%" y="1749" width="0.3377%" height="15" fill="rgb(210,127,46)" fg:x="225833989" fg:w="901765"/><text x="84.8341%" y="1759.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (736,451 samples, 0.28%)</title><rect x="85.3137%" y="1781" width="0.2758%" height="15" fill="rgb(220,106,7)" fg:x="227781937" fg:w="736451"/><text x="85.5637%" y="1791.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (736,451 samples, 0.28%)</title><rect x="85.3137%" y="1765" width="0.2758%" height="15" fill="rgb(249,31,22)" fg:x="227781937" fg:w="736451"/><text x="85.5637%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (736,451 samples, 0.28%)</title><rect x="85.3137%" y="1749" width="0.2758%" height="15" fill="rgb(253,1,49)" fg:x="227781937" fg:w="736451"/><text x="85.5637%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (736,451 samples, 0.28%)</title><rect x="85.3137%" y="1733" width="0.2758%" height="15" fill="rgb(227,144,33)" fg:x="227781937" fg:w="736451"/><text x="85.5637%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (736,451 samples, 0.28%)</title><rect x="85.3137%" y="1717" width="0.2758%" height="15" fill="rgb(249,163,44)" fg:x="227781937" fg:w="736451"/><text x="85.5637%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (736,451 samples, 0.28%)</title><rect x="85.3137%" y="1701" width="0.2758%" height="15" fill="rgb(234,15,39)" fg:x="227781937" fg:w="736451"/><text x="85.5637%" y="1711.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (736,451 samples, 0.28%)</title><rect x="85.3137%" y="1685" width="0.2758%" height="15" fill="rgb(207,66,16)" fg:x="227781937" fg:w="736451"/><text x="85.5637%" y="1695.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (736,451 samples, 0.28%)</title><rect x="85.3137%" y="1669" width="0.2758%" height="15" fill="rgb(233,112,24)" fg:x="227781937" fg:w="736451"/><text x="85.5637%" y="1679.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (736,451 samples, 0.28%)</title><rect x="85.3137%" y="1653" width="0.2758%" height="15" fill="rgb(230,90,22)" fg:x="227781937" fg:w="736451"/><text x="85.5637%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (736,451 samples, 0.28%)</title><rect x="85.3137%" y="1637" width="0.2758%" height="15" fill="rgb(229,61,13)" fg:x="227781937" fg:w="736451"/><text x="85.5637%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (736,451 samples, 0.28%)</title><rect x="85.3137%" y="1621" width="0.2758%" height="15" fill="rgb(225,57,24)" fg:x="227781937" fg:w="736451"/><text x="85.5637%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (736,451 samples, 0.28%)</title><rect x="85.3137%" y="1605" width="0.2758%" height="15" fill="rgb(208,169,48)" fg:x="227781937" fg:w="736451"/><text x="85.5637%" y="1615.50"></text></g><g><title>malloc (736,451 samples, 0.28%)</title><rect x="85.3137%" y="1589" width="0.2758%" height="15" fill="rgb(244,218,51)" fg:x="227781937" fg:w="736451"/><text x="85.5637%" y="1599.50"></text></g><g><title>[libc.so.6] (736,451 samples, 0.28%)</title><rect x="85.3137%" y="1573" width="0.2758%" height="15" fill="rgb(214,148,10)" fg:x="227781937" fg:w="736451"/><text x="85.5637%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (890,874 samples, 0.33%)</title><rect x="86.2043%" y="1541" width="0.3337%" height="15" fill="rgb(225,174,27)" fg:x="230159799" fg:w="890874"/><text x="86.4543%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (890,874 samples, 0.33%)</title><rect x="86.2043%" y="1525" width="0.3337%" height="15" fill="rgb(230,96,26)" fg:x="230159799" fg:w="890874"/><text x="86.4543%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (890,874 samples, 0.33%)</title><rect x="86.2043%" y="1509" width="0.3337%" height="15" fill="rgb(232,10,30)" fg:x="230159799" fg:w="890874"/><text x="86.4543%" y="1519.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (890,874 samples, 0.33%)</title><rect x="86.2043%" y="1493" width="0.3337%" height="15" fill="rgb(222,8,50)" fg:x="230159799" fg:w="890874"/><text x="86.4543%" y="1503.50"></text></g><g><title>[libc.so.6] (890,874 samples, 0.33%)</title><rect x="86.2043%" y="1477" width="0.3337%" height="15" fill="rgb(213,81,27)" fg:x="230159799" fg:w="890874"/><text x="86.4543%" y="1487.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (649,829 samples, 0.24%)</title><rect x="86.5380%" y="1541" width="0.2434%" height="15" fill="rgb(245,50,10)" fg:x="231050673" fg:w="649829"/><text x="86.7880%" y="1551.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2,626,084 samples, 0.98%)</title><rect x="85.9926%" y="1573" width="0.9836%" height="15" fill="rgb(216,100,18)" fg:x="229594459" fg:w="2626084"/><text x="86.2426%" y="1583.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (2,626,084 samples, 0.98%)</title><rect x="85.9926%" y="1557" width="0.9836%" height="15" fill="rgb(236,147,54)" fg:x="229594459" fg:w="2626084"/><text x="86.2426%" y="1567.50"></text></g><g><title>serde_json::read::parse_escape (520,041 samples, 0.19%)</title><rect x="86.7814%" y="1541" width="0.1948%" height="15" fill="rgb(205,143,26)" fg:x="231700502" fg:w="520041"/><text x="87.0314%" y="1551.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,007,149 samples, 0.38%)</title><rect x="86.9761%" y="1573" width="0.3772%" height="15" fill="rgb(236,26,9)" fg:x="232220543" fg:w="1007149"/><text x="87.2261%" y="1583.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,007,149 samples, 0.38%)</title><rect x="86.9761%" y="1557" width="0.3772%" height="15" fill="rgb(221,165,53)" fg:x="232220543" fg:w="1007149"/><text x="87.2261%" y="1567.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,007,149 samples, 0.38%)</title><rect x="86.9761%" y="1541" width="0.3772%" height="15" fill="rgb(214,110,17)" fg:x="232220543" fg:w="1007149"/><text x="87.2261%" y="1551.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,007,149 samples, 0.38%)</title><rect x="86.9761%" y="1525" width="0.3772%" height="15" fill="rgb(237,197,12)" fg:x="232220543" fg:w="1007149"/><text x="87.2261%" y="1535.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,007,149 samples, 0.38%)</title><rect x="86.9761%" y="1509" width="0.3772%" height="15" fill="rgb(205,84,17)" fg:x="232220543" fg:w="1007149"/><text x="87.2261%" y="1519.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,007,149 samples, 0.38%)</title><rect x="86.9761%" y="1493" width="0.3772%" height="15" fill="rgb(237,18,45)" fg:x="232220543" fg:w="1007149"/><text x="87.2261%" y="1503.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,007,149 samples, 0.38%)</title><rect x="86.9761%" y="1477" width="0.3772%" height="15" fill="rgb(221,87,14)" fg:x="232220543" fg:w="1007149"/><text x="87.2261%" y="1487.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,007,149 samples, 0.38%)</title><rect x="86.9761%" y="1461" width="0.3772%" height="15" fill="rgb(238,186,15)" fg:x="232220543" fg:w="1007149"/><text x="87.2261%" y="1471.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,007,149 samples, 0.38%)</title><rect x="86.9761%" y="1445" width="0.3772%" height="15" fill="rgb(208,115,11)" fg:x="232220543" fg:w="1007149"/><text x="87.2261%" y="1455.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,007,149 samples, 0.38%)</title><rect x="86.9761%" y="1429" width="0.3772%" height="15" fill="rgb(254,175,0)" fg:x="232220543" fg:w="1007149"/><text x="87.2261%" y="1439.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1413" width="0.3634%" height="15" fill="rgb(227,24,42)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1423.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1397" width="0.3634%" height="15" fill="rgb(223,211,37)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1407.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1381" width="0.3634%" height="15" fill="rgb(235,49,27)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1391.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1365" width="0.3634%" height="15" fill="rgb(254,97,51)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1375.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1349" width="0.3634%" height="15" fill="rgb(249,51,40)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1359.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1333" width="0.3634%" height="15" fill="rgb(210,128,45)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1317" width="0.3634%" height="15" fill="rgb(224,137,50)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1301" width="0.3634%" height="15" fill="rgb(242,15,9)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1285" width="0.3634%" height="15" fill="rgb(233,187,41)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1295.50"></text></g><g><title>alloc::slice::hack::to_vec (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1269" width="0.3634%" height="15" fill="rgb(227,2,29)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1279.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1253" width="0.3634%" height="15" fill="rgb(222,70,3)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1237" width="0.3634%" height="15" fill="rgb(213,11,42)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1221" width="0.3634%" height="15" fill="rgb(225,150,9)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1205" width="0.3634%" height="15" fill="rgb(230,162,45)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1189" width="0.3634%" height="15" fill="rgb(222,14,52)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1173" width="0.3634%" height="15" fill="rgb(254,198,14)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1157" width="0.3634%" height="15" fill="rgb(220,217,30)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1141" width="0.3634%" height="15" fill="rgb(215,146,41)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1151.50"></text></g><g><title>malloc (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1125" width="0.3634%" height="15" fill="rgb(217,27,36)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1135.50"></text></g><g><title>[libc.so.6] (970,296 samples, 0.36%)</title><rect x="87.3534%" y="1109" width="0.3634%" height="15" fill="rgb(219,218,39)" fg:x="233227692" fg:w="970296"/><text x="87.6034%" y="1119.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,024,393 samples, 0.76%)</title><rect x="87.3534%" y="1429" width="0.7582%" height="15" fill="rgb(219,4,42)" fg:x="233227692" fg:w="2024393"/><text x="87.6034%" y="1439.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (1,054,097 samples, 0.39%)</title><rect x="87.7168%" y="1413" width="0.3948%" height="15" fill="rgb(249,119,36)" fg:x="234197988" fg:w="1054097"/><text x="87.9668%" y="1423.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1,054,097 samples, 0.39%)</title><rect x="87.7168%" y="1397" width="0.3948%" height="15" fill="rgb(209,23,33)" fg:x="234197988" fg:w="1054097"/><text x="87.9668%" y="1407.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (1,054,097 samples, 0.39%)</title><rect x="87.7168%" y="1381" width="0.3948%" height="15" fill="rgb(211,10,0)" fg:x="234197988" fg:w="1054097"/><text x="87.9668%" y="1391.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1,054,097 samples, 0.39%)</title><rect x="87.7168%" y="1365" width="0.3948%" height="15" fill="rgb(208,99,37)" fg:x="234197988" fg:w="1054097"/><text x="87.9668%" y="1375.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1,054,097 samples, 0.39%)</title><rect x="87.7168%" y="1349" width="0.3948%" height="15" fill="rgb(213,132,31)" fg:x="234197988" fg:w="1054097"/><text x="87.9668%" y="1359.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (997,720 samples, 0.37%)</title><rect x="88.1116%" y="1221" width="0.3737%" height="15" fill="rgb(243,129,40)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="1231.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (997,720 samples, 0.37%)</title><rect x="88.1116%" y="1205" width="0.3737%" height="15" fill="rgb(210,66,33)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="1215.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (997,720 samples, 0.37%)</title><rect x="88.1116%" y="1189" width="0.3737%" height="15" fill="rgb(209,189,4)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="1199.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (997,720 samples, 0.37%)</title><rect x="88.1116%" y="1173" width="0.3737%" height="15" fill="rgb(214,107,37)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="1183.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (997,720 samples, 0.37%)</title><rect x="88.1116%" y="1157" width="0.3737%" height="15" fill="rgb(245,88,54)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="1167.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (997,720 samples, 0.37%)</title><rect x="88.1116%" y="1141" width="0.3737%" height="15" fill="rgb(205,146,20)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="1151.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (997,720 samples, 0.37%)</title><rect x="88.1116%" y="1125" width="0.3737%" height="15" fill="rgb(220,161,25)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (997,720 samples, 0.37%)</title><rect x="88.1116%" y="1109" width="0.3737%" height="15" fill="rgb(215,152,15)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (997,720 samples, 0.37%)</title><rect x="88.1116%" y="1093" width="0.3737%" height="15" fill="rgb(233,192,44)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (997,720 samples, 0.37%)</title><rect x="88.1116%" y="1077" width="0.3737%" height="15" fill="rgb(240,170,46)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (997,720 samples, 0.37%)</title><rect x="88.1116%" y="1061" width="0.3737%" height="15" fill="rgb(207,104,33)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (997,720 samples, 0.37%)</title><rect x="88.1116%" y="1045" width="0.3737%" height="15" fill="rgb(219,21,39)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (997,720 samples, 0.37%)</title><rect x="88.1116%" y="1029" width="0.3737%" height="15" fill="rgb(214,133,29)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (997,720 samples, 0.37%)</title><rect x="88.1116%" y="1013" width="0.3737%" height="15" fill="rgb(226,93,6)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (997,720 samples, 0.37%)</title><rect x="88.1116%" y="997" width="0.3737%" height="15" fill="rgb(252,222,34)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (997,720 samples, 0.37%)</title><rect x="88.1116%" y="981" width="0.3737%" height="15" fill="rgb(252,92,48)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (997,720 samples, 0.37%)</title><rect x="88.1116%" y="965" width="0.3737%" height="15" fill="rgb(245,223,24)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (997,720 samples, 0.37%)</title><rect x="88.1116%" y="949" width="0.3737%" height="15" fill="rgb(205,176,3)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="959.50"></text></g><g><title>alloc::alloc::alloc (997,720 samples, 0.37%)</title><rect x="88.1116%" y="933" width="0.3737%" height="15" fill="rgb(235,151,15)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="943.50"></text></g><g><title>malloc (997,720 samples, 0.37%)</title><rect x="88.1116%" y="917" width="0.3737%" height="15" fill="rgb(237,209,11)" fg:x="235252085" fg:w="997720"/><text x="88.3616%" y="927.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (480,211 samples, 0.18%)</title><rect x="88.4853%" y="1157" width="0.1799%" height="15" fill="rgb(243,227,24)" fg:x="236249805" fg:w="480211"/><text x="88.7353%" y="1167.50"></text></g><g><title>serde::de::MapAccess::next_entry (480,211 samples, 0.18%)</title><rect x="88.4853%" y="1141" width="0.1799%" height="15" fill="rgb(239,193,16)" fg:x="236249805" fg:w="480211"/><text x="88.7353%" y="1151.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (480,211 samples, 0.18%)</title><rect x="88.4853%" y="1125" width="0.1799%" height="15" fill="rgb(231,27,9)" fg:x="236249805" fg:w="480211"/><text x="88.7353%" y="1135.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (480,211 samples, 0.18%)</title><rect x="88.4853%" y="1109" width="0.1799%" height="15" fill="rgb(219,169,10)" fg:x="236249805" fg:w="480211"/><text x="88.7353%" y="1119.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (480,211 samples, 0.18%)</title><rect x="88.4853%" y="1093" width="0.1799%" height="15" fill="rgb(244,229,43)" fg:x="236249805" fg:w="480211"/><text x="88.7353%" y="1103.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (480,211 samples, 0.18%)</title><rect x="88.4853%" y="1077" width="0.1799%" height="15" fill="rgb(254,38,20)" fg:x="236249805" fg:w="480211"/><text x="88.7353%" y="1087.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (480,211 samples, 0.18%)</title><rect x="88.4853%" y="1061" width="0.1799%" height="15" fill="rgb(250,47,30)" fg:x="236249805" fg:w="480211"/><text x="88.7353%" y="1071.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (480,211 samples, 0.18%)</title><rect x="88.4853%" y="1045" width="0.1799%" height="15" fill="rgb(224,124,36)" fg:x="236249805" fg:w="480211"/><text x="88.7353%" y="1055.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (480,211 samples, 0.18%)</title><rect x="88.4853%" y="1029" width="0.1799%" height="15" fill="rgb(246,68,51)" fg:x="236249805" fg:w="480211"/><text x="88.7353%" y="1039.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (480,211 samples, 0.18%)</title><rect x="88.4853%" y="1013" width="0.1799%" height="15" fill="rgb(253,43,49)" fg:x="236249805" fg:w="480211"/><text x="88.7353%" y="1023.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (480,211 samples, 0.18%)</title><rect x="88.4853%" y="997" width="0.1799%" height="15" fill="rgb(219,54,36)" fg:x="236249805" fg:w="480211"/><text x="88.7353%" y="1007.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (480,211 samples, 0.18%)</title><rect x="88.4853%" y="981" width="0.1799%" height="15" fill="rgb(227,133,34)" fg:x="236249805" fg:w="480211"/><text x="88.7353%" y="991.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (480,211 samples, 0.18%)</title><rect x="88.4853%" y="965" width="0.1799%" height="15" fill="rgb(247,227,15)" fg:x="236249805" fg:w="480211"/><text x="88.7353%" y="975.50"></text></g><g><title>serde::de::MapAccess::next_entry (979,733 samples, 0.37%)</title><rect x="88.6651%" y="629" width="0.3670%" height="15" fill="rgb(229,96,14)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="639.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (979,733 samples, 0.37%)</title><rect x="88.6651%" y="613" width="0.3670%" height="15" fill="rgb(220,79,17)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (979,733 samples, 0.37%)</title><rect x="88.6651%" y="597" width="0.3670%" height="15" fill="rgb(205,131,53)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="607.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (979,733 samples, 0.37%)</title><rect x="88.6651%" y="581" width="0.3670%" height="15" fill="rgb(209,50,29)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (979,733 samples, 0.37%)</title><rect x="88.6651%" y="565" width="0.3670%" height="15" fill="rgb(245,86,46)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (979,733 samples, 0.37%)</title><rect x="88.6651%" y="549" width="0.3670%" height="15" fill="rgb(235,66,46)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (979,733 samples, 0.37%)</title><rect x="88.6651%" y="533" width="0.3670%" height="15" fill="rgb(232,148,31)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="543.50"></text></g><g><title>serde::de::SeqAccess::next_element (979,733 samples, 0.37%)</title><rect x="88.6651%" y="517" width="0.3670%" height="15" fill="rgb(217,149,8)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="527.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (979,733 samples, 0.37%)</title><rect x="88.6651%" y="501" width="0.3670%" height="15" fill="rgb(209,183,11)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (979,733 samples, 0.37%)</title><rect x="88.6651%" y="485" width="0.3670%" height="15" fill="rgb(208,55,20)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (979,733 samples, 0.37%)</title><rect x="88.6651%" y="469" width="0.3670%" height="15" fill="rgb(218,39,14)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (979,733 samples, 0.37%)</title><rect x="88.6651%" y="453" width="0.3670%" height="15" fill="rgb(216,169,33)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (979,733 samples, 0.37%)</title><rect x="88.6651%" y="437" width="0.3670%" height="15" fill="rgb(233,80,24)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="447.50"></text></g><g><title>serde::de::MapAccess::next_entry (979,733 samples, 0.37%)</title><rect x="88.6651%" y="421" width="0.3670%" height="15" fill="rgb(213,179,31)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="431.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (979,733 samples, 0.37%)</title><rect x="88.6651%" y="405" width="0.3670%" height="15" fill="rgb(209,19,5)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (979,733 samples, 0.37%)</title><rect x="88.6651%" y="389" width="0.3670%" height="15" fill="rgb(219,18,35)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="399.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (979,733 samples, 0.37%)</title><rect x="88.6651%" y="373" width="0.3670%" height="15" fill="rgb(209,169,16)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (979,733 samples, 0.37%)</title><rect x="88.6651%" y="357" width="0.3670%" height="15" fill="rgb(245,90,51)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (979,733 samples, 0.37%)</title><rect x="88.6651%" y="341" width="0.3670%" height="15" fill="rgb(220,99,45)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (979,733 samples, 0.37%)</title><rect x="88.6651%" y="325" width="0.3670%" height="15" fill="rgb(249,89,25)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (979,733 samples, 0.37%)</title><rect x="88.6651%" y="309" width="0.3670%" height="15" fill="rgb(239,193,0)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (979,733 samples, 0.37%)</title><rect x="88.6651%" y="293" width="0.3670%" height="15" fill="rgb(231,126,1)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (979,733 samples, 0.37%)</title><rect x="88.6651%" y="277" width="0.3670%" height="15" fill="rgb(243,166,3)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (979,733 samples, 0.37%)</title><rect x="88.6651%" y="261" width="0.3670%" height="15" fill="rgb(223,22,34)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="271.50"></text></g><g><title>alloc::raw_vec::layout_array (979,733 samples, 0.37%)</title><rect x="88.6651%" y="245" width="0.3670%" height="15" fill="rgb(251,52,51)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::repeat (979,733 samples, 0.37%)</title><rect x="88.6651%" y="229" width="0.3670%" height="15" fill="rgb(221,165,28)" fg:x="236730016" fg:w="979733"/><text x="88.9151%" y="239.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="1045" width="0.6527%" height="15" fill="rgb(218,121,47)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="1055.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="1029" width="0.6527%" height="15" fill="rgb(209,120,9)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="1039.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="1013" width="0.6527%" height="15" fill="rgb(236,68,12)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="1023.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="997" width="0.6527%" height="15" fill="rgb(225,194,26)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="1007.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="981" width="0.6527%" height="15" fill="rgb(231,84,39)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="991.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="965" width="0.6527%" height="15" fill="rgb(210,11,45)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="975.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="949" width="0.6527%" height="15" fill="rgb(224,54,52)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="959.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="933" width="0.6527%" height="15" fill="rgb(238,102,14)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="943.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="917" width="0.6527%" height="15" fill="rgb(243,160,52)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="927.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="901" width="0.6527%" height="15" fill="rgb(216,114,19)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="911.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="885" width="0.6527%" height="15" fill="rgb(244,166,37)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="895.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="869" width="0.6527%" height="15" fill="rgb(246,29,44)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="879.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="853" width="0.6527%" height="15" fill="rgb(215,56,53)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="863.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="837" width="0.6527%" height="15" fill="rgb(217,60,2)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="847.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="821" width="0.6527%" height="15" fill="rgb(207,26,24)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="831.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="805" width="0.6527%" height="15" fill="rgb(252,210,15)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="815.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="789" width="0.6527%" height="15" fill="rgb(253,209,26)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="773" width="0.6527%" height="15" fill="rgb(238,170,14)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="783.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="757" width="0.6527%" height="15" fill="rgb(216,178,15)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="741" width="0.6527%" height="15" fill="rgb(250,197,2)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="751.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="725" width="0.6527%" height="15" fill="rgb(212,70,42)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="735.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="709" width="0.6527%" height="15" fill="rgb(227,213,9)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="693" width="0.6527%" height="15" fill="rgb(245,99,25)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="677" width="0.6527%" height="15" fill="rgb(250,82,29)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="661" width="0.6527%" height="15" fill="rgb(241,226,54)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,742,606 samples, 0.65%)</title><rect x="88.6651%" y="645" width="0.6527%" height="15" fill="rgb(221,99,41)" fg:x="236730016" fg:w="1742606"/><text x="88.9151%" y="655.50"></text></g><g><title>serde::de::MapAccess::next_value (762,873 samples, 0.29%)</title><rect x="89.0321%" y="629" width="0.2857%" height="15" fill="rgb(213,90,21)" fg:x="237709749" fg:w="762873"/><text x="89.2821%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (762,873 samples, 0.29%)</title><rect x="89.0321%" y="613" width="0.2857%" height="15" fill="rgb(205,208,24)" fg:x="237709749" fg:w="762873"/><text x="89.2821%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (762,873 samples, 0.29%)</title><rect x="89.0321%" y="597" width="0.2857%" height="15" fill="rgb(246,31,12)" fg:x="237709749" fg:w="762873"/><text x="89.2821%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (762,873 samples, 0.29%)</title><rect x="89.0321%" y="581" width="0.2857%" height="15" fill="rgb(213,154,6)" fg:x="237709749" fg:w="762873"/><text x="89.2821%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (762,873 samples, 0.29%)</title><rect x="89.0321%" y="565" width="0.2857%" height="15" fill="rgb(222,163,29)" fg:x="237709749" fg:w="762873"/><text x="89.2821%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (762,873 samples, 0.29%)</title><rect x="89.0321%" y="549" width="0.2857%" height="15" fill="rgb(227,201,8)" fg:x="237709749" fg:w="762873"/><text x="89.2821%" y="559.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (762,873 samples, 0.29%)</title><rect x="89.0321%" y="533" width="0.2857%" height="15" fill="rgb(233,9,32)" fg:x="237709749" fg:w="762873"/><text x="89.2821%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,914,057 samples, 2.59%)</title><rect x="87.3534%" y="1573" width="2.5896%" height="15" fill="rgb(217,54,24)" fg:x="233227692" fg:w="6914057"/><text x="87.6034%" y="1583.50">&lt;s..</text></g><g><title>serde::de::SeqAccess::next_element (6,914,057 samples, 2.59%)</title><rect x="87.3534%" y="1557" width="2.5896%" height="15" fill="rgb(235,192,0)" fg:x="233227692" fg:w="6914057"/><text x="87.6034%" y="1567.50">se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,914,057 samples, 2.59%)</title><rect x="87.3534%" y="1541" width="2.5896%" height="15" fill="rgb(235,45,9)" fg:x="233227692" fg:w="6914057"/><text x="87.6034%" y="1551.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,914,057 samples, 2.59%)</title><rect x="87.3534%" y="1525" width="2.5896%" height="15" fill="rgb(246,42,40)" fg:x="233227692" fg:w="6914057"/><text x="87.6034%" y="1535.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,914,057 samples, 2.59%)</title><rect x="87.3534%" y="1509" width="2.5896%" height="15" fill="rgb(248,111,24)" fg:x="233227692" fg:w="6914057"/><text x="87.6034%" y="1519.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,914,057 samples, 2.59%)</title><rect x="87.3534%" y="1493" width="2.5896%" height="15" fill="rgb(249,65,22)" fg:x="233227692" fg:w="6914057"/><text x="87.6034%" y="1503.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,914,057 samples, 2.59%)</title><rect x="87.3534%" y="1477" width="2.5896%" height="15" fill="rgb(238,111,51)" fg:x="233227692" fg:w="6914057"/><text x="87.6034%" y="1487.50">&lt;s..</text></g><g><title>serde::de::MapAccess::next_entry (6,914,057 samples, 2.59%)</title><rect x="87.3534%" y="1461" width="2.5896%" height="15" fill="rgb(250,118,22)" fg:x="233227692" fg:w="6914057"/><text x="87.6034%" y="1471.50">se..</text></g><g><title>serde::de::MapAccess::next_entry_seed (6,914,057 samples, 2.59%)</title><rect x="87.3534%" y="1445" width="2.5896%" height="15" fill="rgb(234,84,26)" fg:x="233227692" fg:w="6914057"/><text x="87.6034%" y="1455.50">se..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,889,664 samples, 1.83%)</title><rect x="88.1116%" y="1429" width="1.8314%" height="15" fill="rgb(243,172,12)" fg:x="235252085" fg:w="4889664"/><text x="88.3616%" y="1439.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,889,664 samples, 1.83%)</title><rect x="88.1116%" y="1413" width="1.8314%" height="15" fill="rgb(236,150,49)" fg:x="235252085" fg:w="4889664"/><text x="88.3616%" y="1423.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,889,664 samples, 1.83%)</title><rect x="88.1116%" y="1397" width="1.8314%" height="15" fill="rgb(225,197,26)" fg:x="235252085" fg:w="4889664"/><text x="88.3616%" y="1407.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,889,664 samples, 1.83%)</title><rect x="88.1116%" y="1381" width="1.8314%" height="15" fill="rgb(214,17,42)" fg:x="235252085" fg:w="4889664"/><text x="88.3616%" y="1391.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,889,664 samples, 1.83%)</title><rect x="88.1116%" y="1365" width="1.8314%" height="15" fill="rgb(224,165,40)" fg:x="235252085" fg:w="4889664"/><text x="88.3616%" y="1375.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (4,889,664 samples, 1.83%)</title><rect x="88.1116%" y="1349" width="1.8314%" height="15" fill="rgb(246,100,4)" fg:x="235252085" fg:w="4889664"/><text x="88.3616%" y="1359.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,889,664 samples, 1.83%)</title><rect x="88.1116%" y="1333" width="1.8314%" height="15" fill="rgb(222,103,0)" fg:x="235252085" fg:w="4889664"/><text x="88.3616%" y="1343.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,889,664 samples, 1.83%)</title><rect x="88.1116%" y="1317" width="1.8314%" height="15" fill="rgb(227,189,26)" fg:x="235252085" fg:w="4889664"/><text x="88.3616%" y="1327.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,889,664 samples, 1.83%)</title><rect x="88.1116%" y="1301" width="1.8314%" height="15" fill="rgb(214,202,17)" fg:x="235252085" fg:w="4889664"/><text x="88.3616%" y="1311.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,889,664 samples, 1.83%)</title><rect x="88.1116%" y="1285" width="1.8314%" height="15" fill="rgb(229,111,3)" fg:x="235252085" fg:w="4889664"/><text x="88.3616%" y="1295.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,889,664 samples, 1.83%)</title><rect x="88.1116%" y="1269" width="1.8314%" height="15" fill="rgb(229,172,15)" fg:x="235252085" fg:w="4889664"/><text x="88.3616%" y="1279.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (4,889,664 samples, 1.83%)</title><rect x="88.1116%" y="1253" width="1.8314%" height="15" fill="rgb(230,224,35)" fg:x="235252085" fg:w="4889664"/><text x="88.3616%" y="1263.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (4,889,664 samples, 1.83%)</title><rect x="88.1116%" y="1237" width="1.8314%" height="15" fill="rgb(251,141,6)" fg:x="235252085" fg:w="4889664"/><text x="88.3616%" y="1247.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,891,944 samples, 1.46%)</title><rect x="88.4853%" y="1221" width="1.4577%" height="15" fill="rgb(225,208,6)" fg:x="236249805" fg:w="3891944"/><text x="88.7353%" y="1231.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,891,944 samples, 1.46%)</title><rect x="88.4853%" y="1205" width="1.4577%" height="15" fill="rgb(246,181,16)" fg:x="236249805" fg:w="3891944"/><text x="88.7353%" y="1215.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,891,944 samples, 1.46%)</title><rect x="88.4853%" y="1189" width="1.4577%" height="15" fill="rgb(227,129,36)" fg:x="236249805" fg:w="3891944"/><text x="88.7353%" y="1199.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,891,944 samples, 1.46%)</title><rect x="88.4853%" y="1173" width="1.4577%" height="15" fill="rgb(248,117,24)" fg:x="236249805" fg:w="3891944"/><text x="88.7353%" y="1183.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,411,733 samples, 1.28%)</title><rect x="88.6651%" y="1157" width="1.2778%" height="15" fill="rgb(214,185,35)" fg:x="236730016" fg:w="3411733"/><text x="88.9151%" y="1167.50"></text></g><g><title>serde::de::SeqAccess::next_element (3,411,733 samples, 1.28%)</title><rect x="88.6651%" y="1141" width="1.2778%" height="15" fill="rgb(236,150,34)" fg:x="236730016" fg:w="3411733"/><text x="88.9151%" y="1151.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3,411,733 samples, 1.28%)</title><rect x="88.6651%" y="1125" width="1.2778%" height="15" fill="rgb(243,228,27)" fg:x="236730016" fg:w="3411733"/><text x="88.9151%" y="1135.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,411,733 samples, 1.28%)</title><rect x="88.6651%" y="1109" width="1.2778%" height="15" fill="rgb(245,77,44)" fg:x="236730016" fg:w="3411733"/><text x="88.9151%" y="1119.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,411,733 samples, 1.28%)</title><rect x="88.6651%" y="1093" width="1.2778%" height="15" fill="rgb(235,214,42)" fg:x="236730016" fg:w="3411733"/><text x="88.9151%" y="1103.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,411,733 samples, 1.28%)</title><rect x="88.6651%" y="1077" width="1.2778%" height="15" fill="rgb(221,74,3)" fg:x="236730016" fg:w="3411733"/><text x="88.9151%" y="1087.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,411,733 samples, 1.28%)</title><rect x="88.6651%" y="1061" width="1.2778%" height="15" fill="rgb(206,121,29)" fg:x="236730016" fg:w="3411733"/><text x="88.9151%" y="1071.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,669,127 samples, 0.63%)</title><rect x="89.3178%" y="1045" width="0.6252%" height="15" fill="rgb(249,131,53)" fg:x="238472622" fg:w="1669127"/><text x="89.5678%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,669,127 samples, 0.63%)</title><rect x="89.3178%" y="1029" width="0.6252%" height="15" fill="rgb(236,170,29)" fg:x="238472622" fg:w="1669127"/><text x="89.5678%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,669,127 samples, 0.63%)</title><rect x="89.3178%" y="1013" width="0.6252%" height="15" fill="rgb(247,96,15)" fg:x="238472622" fg:w="1669127"/><text x="89.5678%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,669,127 samples, 0.63%)</title><rect x="89.3178%" y="997" width="0.6252%" height="15" fill="rgb(211,210,7)" fg:x="238472622" fg:w="1669127"/><text x="89.5678%" y="1007.50"></text></g><g><title>serde::de::MapAccess::next_entry (11,577,769 samples, 4.34%)</title><rect x="85.9926%" y="1669" width="4.3364%" height="15" fill="rgb(240,88,50)" fg:x="229594459" fg:w="11577769"/><text x="86.2426%" y="1679.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,577,769 samples, 4.34%)</title><rect x="85.9926%" y="1653" width="4.3364%" height="15" fill="rgb(209,229,26)" fg:x="229594459" fg:w="11577769"/><text x="86.2426%" y="1663.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,577,769 samples, 4.34%)</title><rect x="85.9926%" y="1637" width="4.3364%" height="15" fill="rgb(210,68,23)" fg:x="229594459" fg:w="11577769"/><text x="86.2426%" y="1647.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,577,769 samples, 4.34%)</title><rect x="85.9926%" y="1621" width="4.3364%" height="15" fill="rgb(229,180,13)" fg:x="229594459" fg:w="11577769"/><text x="86.2426%" y="1631.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,577,769 samples, 4.34%)</title><rect x="85.9926%" y="1605" width="4.3364%" height="15" fill="rgb(236,53,44)" fg:x="229594459" fg:w="11577769"/><text x="86.2426%" y="1615.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,577,769 samples, 4.34%)</title><rect x="85.9926%" y="1589" width="4.3364%" height="15" fill="rgb(244,214,29)" fg:x="229594459" fg:w="11577769"/><text x="86.2426%" y="1599.50">&lt;&amp;mut..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_any_number (1,030,479 samples, 0.39%)</title><rect x="89.9430%" y="1573" width="0.3860%" height="15" fill="rgb(220,75,29)" fg:x="240141749" fg:w="1030479"/><text x="90.1930%" y="1583.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1,030,479 samples, 0.39%)</title><rect x="89.9430%" y="1557" width="0.3860%" height="15" fill="rgb(214,183,37)" fg:x="240141749" fg:w="1030479"/><text x="90.1930%" y="1567.50"></text></g><g><title>serde::de::MapAccess::next_entry (16,014,985 samples, 6.00%)</title><rect x="84.5841%" y="1877" width="5.9983%" height="15" fill="rgb(239,117,29)" fg:x="225833989" fg:w="16014985"/><text x="84.8341%" y="1887.50">serde::d..</text></g><g><title>serde::de::MapAccess::next_entry_seed (16,014,985 samples, 6.00%)</title><rect x="84.5841%" y="1861" width="5.9983%" height="15" fill="rgb(237,171,35)" fg:x="225833989" fg:w="16014985"/><text x="84.8341%" y="1871.50">serde::d..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (15,113,220 samples, 5.66%)</title><rect x="84.9219%" y="1845" width="5.6605%" height="15" fill="rgb(229,178,53)" fg:x="226735754" fg:w="15113220"/><text x="85.1719%" y="1855.50">&lt;serde_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15,113,220 samples, 5.66%)</title><rect x="84.9219%" y="1829" width="5.6605%" height="15" fill="rgb(210,102,19)" fg:x="226735754" fg:w="15113220"/><text x="85.1719%" y="1839.50">&lt;core::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,113,220 samples, 5.66%)</title><rect x="84.9219%" y="1813" width="5.6605%" height="15" fill="rgb(235,127,22)" fg:x="226735754" fg:w="15113220"/><text x="85.1719%" y="1823.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,113,220 samples, 5.66%)</title><rect x="84.9219%" y="1797" width="5.6605%" height="15" fill="rgb(244,31,31)" fg:x="226735754" fg:w="15113220"/><text x="85.1719%" y="1807.50">&lt;&amp;mut s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (13,330,586 samples, 4.99%)</title><rect x="85.5895%" y="1781" width="4.9929%" height="15" fill="rgb(231,43,21)" fg:x="228518388" fg:w="13330586"/><text x="85.8395%" y="1791.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (13,330,586 samples, 4.99%)</title><rect x="85.5895%" y="1765" width="4.9929%" height="15" fill="rgb(217,131,35)" fg:x="228518388" fg:w="13330586"/><text x="85.8395%" y="1775.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (13,330,586 samples, 4.99%)</title><rect x="85.5895%" y="1749" width="4.9929%" height="15" fill="rgb(221,149,4)" fg:x="228518388" fg:w="13330586"/><text x="85.8395%" y="1759.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,254,515 samples, 4.59%)</title><rect x="85.9926%" y="1733" width="4.5898%" height="15" fill="rgb(232,170,28)" fg:x="229594459" fg:w="12254515"/><text x="86.2426%" y="1743.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,254,515 samples, 4.59%)</title><rect x="85.9926%" y="1717" width="4.5898%" height="15" fill="rgb(238,56,10)" fg:x="229594459" fg:w="12254515"/><text x="86.2426%" y="1727.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,254,515 samples, 4.59%)</title><rect x="85.9926%" y="1701" width="4.5898%" height="15" fill="rgb(235,196,14)" fg:x="229594459" fg:w="12254515"/><text x="86.2426%" y="1711.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,254,515 samples, 4.59%)</title><rect x="85.9926%" y="1685" width="4.5898%" height="15" fill="rgb(216,45,48)" fg:x="229594459" fg:w="12254515"/><text x="86.2426%" y="1695.50">&lt;serd..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (676,746 samples, 0.25%)</title><rect x="90.3289%" y="1669" width="0.2535%" height="15" fill="rgb(238,213,17)" fg:x="241172228" fg:w="676746"/><text x="90.5789%" y="1679.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (676,746 samples, 0.25%)</title><rect x="90.3289%" y="1653" width="0.2535%" height="15" fill="rgb(212,13,2)" fg:x="241172228" fg:w="676746"/><text x="90.5789%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (676,746 samples, 0.25%)</title><rect x="90.3289%" y="1637" width="0.2535%" height="15" fill="rgb(240,114,20)" fg:x="241172228" fg:w="676746"/><text x="90.5789%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (676,746 samples, 0.25%)</title><rect x="90.3289%" y="1621" width="0.2535%" height="15" fill="rgb(228,41,40)" fg:x="241172228" fg:w="676746"/><text x="90.5789%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (676,746 samples, 0.25%)</title><rect x="90.3289%" y="1605" width="0.2535%" height="15" fill="rgb(244,132,35)" fg:x="241172228" fg:w="676746"/><text x="90.5789%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (676,746 samples, 0.25%)</title><rect x="90.3289%" y="1589" width="0.2535%" height="15" fill="rgb(253,189,4)" fg:x="241172228" fg:w="676746"/><text x="90.5789%" y="1599.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (676,746 samples, 0.25%)</title><rect x="90.3289%" y="1573" width="0.2535%" height="15" fill="rgb(224,37,19)" fg:x="241172228" fg:w="676746"/><text x="90.5789%" y="1583.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (676,746 samples, 0.25%)</title><rect x="90.3289%" y="1557" width="0.2535%" height="15" fill="rgb(235,223,18)" fg:x="241172228" fg:w="676746"/><text x="90.5789%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (676,746 samples, 0.25%)</title><rect x="90.3289%" y="1541" width="0.2535%" height="15" fill="rgb(235,163,25)" fg:x="241172228" fg:w="676746"/><text x="90.5789%" y="1551.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (676,746 samples, 0.25%)</title><rect x="90.3289%" y="1525" width="0.2535%" height="15" fill="rgb(217,145,28)" fg:x="241172228" fg:w="676746"/><text x="90.5789%" y="1535.50"></text></g><g><title>alloc::alloc::alloc (676,746 samples, 0.25%)</title><rect x="90.3289%" y="1509" width="0.2535%" height="15" fill="rgb(223,223,32)" fg:x="241172228" fg:w="676746"/><text x="90.5789%" y="1519.50"></text></g><g><title>malloc (676,746 samples, 0.25%)</title><rect x="90.3289%" y="1493" width="0.2535%" height="15" fill="rgb(227,189,39)" fg:x="241172228" fg:w="676746"/><text x="90.5789%" y="1503.50"></text></g><g><title>serde::de::MapAccess::next_value (973,606 samples, 0.36%)</title><rect x="90.5824%" y="1877" width="0.3647%" height="15" fill="rgb(248,10,22)" fg:x="241848974" fg:w="973606"/><text x="90.8324%" y="1887.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (973,606 samples, 0.36%)</title><rect x="90.5824%" y="1861" width="0.3647%" height="15" fill="rgb(248,46,39)" fg:x="241848974" fg:w="973606"/><text x="90.8324%" y="1871.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (973,606 samples, 0.36%)</title><rect x="90.5824%" y="1845" width="0.3647%" height="15" fill="rgb(248,113,48)" fg:x="241848974" fg:w="973606"/><text x="90.8324%" y="1855.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (973,606 samples, 0.36%)</title><rect x="90.5824%" y="1829" width="0.3647%" height="15" fill="rgb(245,16,25)" fg:x="241848974" fg:w="973606"/><text x="90.8324%" y="1839.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (973,606 samples, 0.36%)</title><rect x="90.5824%" y="1813" width="0.3647%" height="15" fill="rgb(249,152,16)" fg:x="241848974" fg:w="973606"/><text x="90.8324%" y="1823.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,106,329 samples, 0.41%)</title><rect x="90.9470%" y="1845" width="0.4144%" height="15" fill="rgb(250,16,1)" fg:x="242822580" fg:w="1106329"/><text x="91.1970%" y="1855.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,106,329 samples, 0.41%)</title><rect x="90.9470%" y="1829" width="0.4144%" height="15" fill="rgb(249,138,3)" fg:x="242822580" fg:w="1106329"/><text x="91.1970%" y="1839.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,106,329 samples, 0.41%)</title><rect x="90.9470%" y="1813" width="0.4144%" height="15" fill="rgb(227,71,41)" fg:x="242822580" fg:w="1106329"/><text x="91.1970%" y="1823.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,106,329 samples, 0.41%)</title><rect x="90.9470%" y="1797" width="0.4144%" height="15" fill="rgb(209,184,23)" fg:x="242822580" fg:w="1106329"/><text x="91.1970%" y="1807.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (1,106,329 samples, 0.41%)</title><rect x="90.9470%" y="1781" width="0.4144%" height="15" fill="rgb(223,215,31)" fg:x="242822580" fg:w="1106329"/><text x="91.1970%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (1,106,329 samples, 0.41%)</title><rect x="90.9470%" y="1765" width="0.4144%" height="15" fill="rgb(210,146,28)" fg:x="242822580" fg:w="1106329"/><text x="91.1970%" y="1775.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,106,329 samples, 0.41%)</title><rect x="90.9470%" y="1749" width="0.4144%" height="15" fill="rgb(209,183,41)" fg:x="242822580" fg:w="1106329"/><text x="91.1970%" y="1759.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,106,329 samples, 0.41%)</title><rect x="90.9470%" y="1733" width="0.4144%" height="15" fill="rgb(209,224,45)" fg:x="242822580" fg:w="1106329"/><text x="91.1970%" y="1743.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19,071,648 samples, 7.14%)</title><rect x="84.5841%" y="1893" width="7.1431%" height="15" fill="rgb(224,209,51)" fg:x="225833989" fg:w="19071648"/><text x="84.8341%" y="1903.50">&lt;serde_jso..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,083,057 samples, 0.78%)</title><rect x="90.9470%" y="1877" width="0.7802%" height="15" fill="rgb(223,17,39)" fg:x="242822580" fg:w="2083057"/><text x="91.1970%" y="1887.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,083,057 samples, 0.78%)</title><rect x="90.9470%" y="1861" width="0.7802%" height="15" fill="rgb(234,204,37)" fg:x="242822580" fg:w="2083057"/><text x="91.1970%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (976,728 samples, 0.37%)</title><rect x="91.3614%" y="1845" width="0.3658%" height="15" fill="rgb(236,120,5)" fg:x="243928909" fg:w="976728"/><text x="91.6114%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (976,728 samples, 0.37%)</title><rect x="91.3614%" y="1829" width="0.3658%" height="15" fill="rgb(248,97,27)" fg:x="243928909" fg:w="976728"/><text x="91.6114%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (932,069 samples, 0.35%)</title><rect x="91.7272%" y="1877" width="0.3491%" height="15" fill="rgb(240,66,17)" fg:x="244905637" fg:w="932069"/><text x="91.9772%" y="1887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (932,069 samples, 0.35%)</title><rect x="91.7272%" y="1861" width="0.3491%" height="15" fill="rgb(210,79,3)" fg:x="244905637" fg:w="932069"/><text x="91.9772%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (932,069 samples, 0.35%)</title><rect x="91.7272%" y="1845" width="0.3491%" height="15" fill="rgb(214,176,27)" fg:x="244905637" fg:w="932069"/><text x="91.9772%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (932,069 samples, 0.35%)</title><rect x="91.7272%" y="1829" width="0.3491%" height="15" fill="rgb(235,185,3)" fg:x="244905637" fg:w="932069"/><text x="91.9772%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (932,069 samples, 0.35%)</title><rect x="91.7272%" y="1813" width="0.3491%" height="15" fill="rgb(227,24,12)" fg:x="244905637" fg:w="932069"/><text x="91.9772%" y="1823.50"></text></g><g><title>serde::de::MapAccess::next_entry (22,188,274 samples, 8.31%)</title><rect x="84.1781%" y="1989" width="8.3104%" height="15" fill="rgb(252,169,48)" fg:x="224750087" fg:w="22188274"/><text x="84.4281%" y="1999.50">serde::de::M..</text></g><g><title>serde::de::MapAccess::next_entry_seed (22,188,274 samples, 8.31%)</title><rect x="84.1781%" y="1973" width="8.3104%" height="15" fill="rgb(212,65,1)" fg:x="224750087" fg:w="22188274"/><text x="84.4281%" y="1983.50">serde::de::M..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (21,104,372 samples, 7.90%)</title><rect x="84.5841%" y="1957" width="7.9045%" height="15" fill="rgb(242,39,24)" fg:x="225833989" fg:w="21104372"/><text x="84.8341%" y="1967.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (21,104,372 samples, 7.90%)</title><rect x="84.5841%" y="1941" width="7.9045%" height="15" fill="rgb(249,32,23)" fg:x="225833989" fg:w="21104372"/><text x="84.8341%" y="1951.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (21,104,372 samples, 7.90%)</title><rect x="84.5841%" y="1925" width="7.9045%" height="15" fill="rgb(251,195,23)" fg:x="225833989" fg:w="21104372"/><text x="84.8341%" y="1935.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21,104,372 samples, 7.90%)</title><rect x="84.5841%" y="1909" width="7.9045%" height="15" fill="rgb(236,174,8)" fg:x="225833989" fg:w="21104372"/><text x="84.8341%" y="1919.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,032,724 samples, 0.76%)</title><rect x="91.7272%" y="1893" width="0.7613%" height="15" fill="rgb(220,197,8)" fg:x="244905637" fg:w="2032724"/><text x="91.9772%" y="1903.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,100,655 samples, 0.41%)</title><rect x="92.0763%" y="1877" width="0.4122%" height="15" fill="rgb(240,108,37)" fg:x="245837706" fg:w="1100655"/><text x="92.3263%" y="1887.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,100,655 samples, 0.41%)</title><rect x="92.0763%" y="1861" width="0.4122%" height="15" fill="rgb(232,176,24)" fg:x="245837706" fg:w="1100655"/><text x="92.3263%" y="1871.50"></text></g><g><title>benchmark::parse_web_layout_trace (27,213,271 samples, 10.19%)</title><rect x="82.6965%" y="2085" width="10.1925%" height="15" fill="rgb(243,35,29)" fg:x="220794201" fg:w="27213271"/><text x="82.9465%" y="2095.50">benchmark::pars..</text></g><g><title>serde_json::de::from_str (23,257,385 samples, 8.71%)</title><rect x="84.1781%" y="2069" width="8.7108%" height="15" fill="rgb(210,37,18)" fg:x="224750087" fg:w="23257385"/><text x="84.4281%" y="2079.50">serde_json::..</text></g><g><title>serde_json::de::from_trait (23,257,385 samples, 8.71%)</title><rect x="84.1781%" y="2053" width="8.7108%" height="15" fill="rgb(224,184,40)" fg:x="224750087" fg:w="23257385"/><text x="84.4281%" y="2063.50">serde_json::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (23,257,385 samples, 8.71%)</title><rect x="84.1781%" y="2037" width="8.7108%" height="15" fill="rgb(236,39,29)" fg:x="224750087" fg:w="23257385"/><text x="84.4281%" y="2047.50">serde_json::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23,257,385 samples, 8.71%)</title><rect x="84.1781%" y="2021" width="8.7108%" height="15" fill="rgb(232,48,39)" fg:x="224750087" fg:w="23257385"/><text x="84.4281%" y="2031.50">&lt;&amp;mut serde_..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23,257,385 samples, 8.71%)</title><rect x="84.1781%" y="2005" width="8.7108%" height="15" fill="rgb(236,34,42)" fg:x="224750087" fg:w="23257385"/><text x="84.4281%" y="2015.50">&lt;serde_json:..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,069,111 samples, 0.40%)</title><rect x="92.4886%" y="1989" width="0.4004%" height="15" fill="rgb(243,106,37)" fg:x="246938361" fg:w="1069111"/><text x="92.7386%" y="1999.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,069,111 samples, 0.40%)</title><rect x="92.4886%" y="1973" width="0.4004%" height="15" fill="rgb(218,96,6)" fg:x="246938361" fg:w="1069111"/><text x="92.7386%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,069,111 samples, 0.40%)</title><rect x="92.4886%" y="1957" width="0.4004%" height="15" fill="rgb(235,130,12)" fg:x="246938361" fg:w="1069111"/><text x="92.7386%" y="1967.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,069,111 samples, 0.40%)</title><rect x="92.4886%" y="1941" width="0.4004%" height="15" fill="rgb(231,95,0)" fg:x="246938361" fg:w="1069111"/><text x="92.7386%" y="1951.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,188,904 samples, 0.45%)</title><rect x="92.8890%" y="1909" width="0.4453%" height="15" fill="rgb(228,12,23)" fg:x="248007472" fg:w="1188904"/><text x="93.1390%" y="1919.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1,188,904 samples, 0.45%)</title><rect x="92.8890%" y="1893" width="0.4453%" height="15" fill="rgb(216,12,1)" fg:x="248007472" fg:w="1188904"/><text x="93.1390%" y="1903.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,188,904 samples, 0.45%)</title><rect x="92.8890%" y="1877" width="0.4453%" height="15" fill="rgb(219,59,3)" fg:x="248007472" fg:w="1188904"/><text x="93.1390%" y="1887.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,188,904 samples, 0.45%)</title><rect x="92.8890%" y="1861" width="0.4453%" height="15" fill="rgb(215,208,46)" fg:x="248007472" fg:w="1188904"/><text x="93.1390%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (1,188,904 samples, 0.45%)</title><rect x="92.8890%" y="1845" width="0.4453%" height="15" fill="rgb(254,224,29)" fg:x="248007472" fg:w="1188904"/><text x="93.1390%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,210,491 samples, 0.45%)</title><rect x="93.3343%" y="1733" width="0.4534%" height="15" fill="rgb(232,14,29)" fg:x="249196376" fg:w="1210491"/><text x="93.5843%" y="1743.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,210,491 samples, 0.45%)</title><rect x="93.3343%" y="1717" width="0.4534%" height="15" fill="rgb(208,45,52)" fg:x="249196376" fg:w="1210491"/><text x="93.5843%" y="1727.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,210,491 samples, 0.45%)</title><rect x="93.3343%" y="1701" width="0.4534%" height="15" fill="rgb(234,191,28)" fg:x="249196376" fg:w="1210491"/><text x="93.5843%" y="1711.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,210,491 samples, 0.45%)</title><rect x="93.3343%" y="1685" width="0.4534%" height="15" fill="rgb(244,67,43)" fg:x="249196376" fg:w="1210491"/><text x="93.5843%" y="1695.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,210,491 samples, 0.45%)</title><rect x="93.3343%" y="1669" width="0.4534%" height="15" fill="rgb(236,189,24)" fg:x="249196376" fg:w="1210491"/><text x="93.5843%" y="1679.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,210,491 samples, 0.45%)</title><rect x="93.3343%" y="1653" width="0.4534%" height="15" fill="rgb(239,214,33)" fg:x="249196376" fg:w="1210491"/><text x="93.5843%" y="1663.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,210,491 samples, 0.45%)</title><rect x="93.3343%" y="1637" width="0.4534%" height="15" fill="rgb(226,176,41)" fg:x="249196376" fg:w="1210491"/><text x="93.5843%" y="1647.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,210,491 samples, 0.45%)</title><rect x="93.3343%" y="1621" width="0.4534%" height="15" fill="rgb(248,47,8)" fg:x="249196376" fg:w="1210491"/><text x="93.5843%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,602,977 samples, 1.35%)</title><rect x="92.8890%" y="2069" width="1.3495%" height="15" fill="rgb(218,81,44)" fg:x="248007472" fg:w="3602977"/><text x="93.1390%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (3,602,977 samples, 1.35%)</title><rect x="92.8890%" y="2053" width="1.3495%" height="15" fill="rgb(213,98,6)" fg:x="248007472" fg:w="3602977"/><text x="93.1390%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (3,602,977 samples, 1.35%)</title><rect x="92.8890%" y="2037" width="1.3495%" height="15" fill="rgb(222,85,22)" fg:x="248007472" fg:w="3602977"/><text x="93.1390%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,602,977 samples, 1.35%)</title><rect x="92.8890%" y="2021" width="1.3495%" height="15" fill="rgb(239,46,39)" fg:x="248007472" fg:w="3602977"/><text x="93.1390%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,602,977 samples, 1.35%)</title><rect x="92.8890%" y="2005" width="1.3495%" height="15" fill="rgb(237,12,29)" fg:x="248007472" fg:w="3602977"/><text x="93.1390%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,602,977 samples, 1.35%)</title><rect x="92.8890%" y="1989" width="1.3495%" height="15" fill="rgb(214,77,8)" fg:x="248007472" fg:w="3602977"/><text x="93.1390%" y="1999.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,602,977 samples, 1.35%)</title><rect x="92.8890%" y="1973" width="1.3495%" height="15" fill="rgb(217,168,37)" fg:x="248007472" fg:w="3602977"/><text x="93.1390%" y="1983.50"></text></g><g><title>core::mem::drop (3,602,977 samples, 1.35%)</title><rect x="92.8890%" y="1957" width="1.3495%" height="15" fill="rgb(221,217,23)" fg:x="248007472" fg:w="3602977"/><text x="93.1390%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,602,977 samples, 1.35%)</title><rect x="92.8890%" y="1941" width="1.3495%" height="15" fill="rgb(243,229,36)" fg:x="248007472" fg:w="3602977"/><text x="93.1390%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,602,977 samples, 1.35%)</title><rect x="92.8890%" y="1925" width="1.3495%" height="15" fill="rgb(251,163,40)" fg:x="248007472" fg:w="3602977"/><text x="93.1390%" y="1935.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,414,073 samples, 0.90%)</title><rect x="93.3343%" y="1909" width="0.9042%" height="15" fill="rgb(237,222,12)" fg:x="249196376" fg:w="2414073"/><text x="93.5843%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,414,073 samples, 0.90%)</title><rect x="93.3343%" y="1893" width="0.9042%" height="15" fill="rgb(248,132,6)" fg:x="249196376" fg:w="2414073"/><text x="93.5843%" y="1903.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,414,073 samples, 0.90%)</title><rect x="93.3343%" y="1877" width="0.9042%" height="15" fill="rgb(227,167,50)" fg:x="249196376" fg:w="2414073"/><text x="93.5843%" y="1887.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,414,073 samples, 0.90%)</title><rect x="93.3343%" y="1861" width="0.9042%" height="15" fill="rgb(242,84,37)" fg:x="249196376" fg:w="2414073"/><text x="93.5843%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,414,073 samples, 0.90%)</title><rect x="93.3343%" y="1845" width="0.9042%" height="15" fill="rgb(212,4,50)" fg:x="249196376" fg:w="2414073"/><text x="93.5843%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,414,073 samples, 0.90%)</title><rect x="93.3343%" y="1829" width="0.9042%" height="15" fill="rgb(230,228,32)" fg:x="249196376" fg:w="2414073"/><text x="93.5843%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,414,073 samples, 0.90%)</title><rect x="93.3343%" y="1813" width="0.9042%" height="15" fill="rgb(248,217,23)" fg:x="249196376" fg:w="2414073"/><text x="93.5843%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,414,073 samples, 0.90%)</title><rect x="93.3343%" y="1797" width="0.9042%" height="15" fill="rgb(238,197,32)" fg:x="249196376" fg:w="2414073"/><text x="93.5843%" y="1807.50"></text></g><g><title>core::mem::drop (2,414,073 samples, 0.90%)</title><rect x="93.3343%" y="1781" width="0.9042%" height="15" fill="rgb(236,106,1)" fg:x="249196376" fg:w="2414073"/><text x="93.5843%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,414,073 samples, 0.90%)</title><rect x="93.3343%" y="1765" width="0.9042%" height="15" fill="rgb(219,228,13)" fg:x="249196376" fg:w="2414073"/><text x="93.5843%" y="1775.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,414,073 samples, 0.90%)</title><rect x="93.3343%" y="1749" width="0.9042%" height="15" fill="rgb(238,30,35)" fg:x="249196376" fg:w="2414073"/><text x="93.5843%" y="1759.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1733" width="0.4508%" height="15" fill="rgb(236,70,23)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1717" width="0.4508%" height="15" fill="rgb(249,104,48)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1727.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1701" width="0.4508%" height="15" fill="rgb(254,117,50)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1711.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1685" width="0.4508%" height="15" fill="rgb(223,152,4)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1669" width="0.4508%" height="15" fill="rgb(245,6,2)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1653" width="0.4508%" height="15" fill="rgb(249,150,24)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1637" width="0.4508%" height="15" fill="rgb(228,185,42)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1621" width="0.4508%" height="15" fill="rgb(226,39,33)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1605" width="0.4508%" height="15" fill="rgb(221,166,19)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1589" width="0.4508%" height="15" fill="rgb(209,109,2)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1573" width="0.4508%" height="15" fill="rgb(252,216,26)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1557" width="0.4508%" height="15" fill="rgb(227,173,36)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1567.50"></text></g><g><title>core::mem::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1541" width="0.4508%" height="15" fill="rgb(209,90,7)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1525" width="0.4508%" height="15" fill="rgb(250,194,11)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1535.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1509" width="0.4508%" height="15" fill="rgb(220,72,50)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1519.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1493" width="0.4508%" height="15" fill="rgb(222,106,48)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1477" width="0.4508%" height="15" fill="rgb(216,220,45)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1461" width="0.4508%" height="15" fill="rgb(234,112,18)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1471.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1445" width="0.4508%" height="15" fill="rgb(206,179,9)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1429" width="0.4508%" height="15" fill="rgb(215,115,40)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1413" width="0.4508%" height="15" fill="rgb(222,69,34)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1397" width="0.4508%" height="15" fill="rgb(209,161,10)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1381" width="0.4508%" height="15" fill="rgb(217,6,38)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1365" width="0.4508%" height="15" fill="rgb(229,229,48)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1349" width="0.4508%" height="15" fill="rgb(225,21,28)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1333" width="0.4508%" height="15" fill="rgb(206,33,13)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1317" width="0.4508%" height="15" fill="rgb(242,178,17)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1327.50"></text></g><g><title>core::mem::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1301" width="0.4508%" height="15" fill="rgb(220,162,5)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1285" width="0.4508%" height="15" fill="rgb(210,33,43)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1295.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1269" width="0.4508%" height="15" fill="rgb(216,116,54)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1279.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1253" width="0.4508%" height="15" fill="rgb(249,92,24)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1237" width="0.4508%" height="15" fill="rgb(231,189,14)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1221" width="0.4508%" height="15" fill="rgb(230,8,41)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1231.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1205" width="0.4508%" height="15" fill="rgb(249,7,27)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1189" width="0.4508%" height="15" fill="rgb(232,86,5)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1173" width="0.4508%" height="15" fill="rgb(224,175,18)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1157" width="0.4508%" height="15" fill="rgb(220,129,12)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1141" width="0.4508%" height="15" fill="rgb(210,19,36)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1125" width="0.4508%" height="15" fill="rgb(219,96,14)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1109" width="0.4508%" height="15" fill="rgb(249,106,1)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1093" width="0.4508%" height="15" fill="rgb(249,155,20)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1077" width="0.4508%" height="15" fill="rgb(244,168,9)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1087.50"></text></g><g><title>core::mem::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1061" width="0.4508%" height="15" fill="rgb(216,23,50)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1045" width="0.4508%" height="15" fill="rgb(224,219,20)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1029" width="0.4508%" height="15" fill="rgb(222,156,15)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="1013" width="0.4508%" height="15" fill="rgb(231,97,17)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1023.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="997" width="0.4508%" height="15" fill="rgb(218,70,48)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="981" width="0.4508%" height="15" fill="rgb(212,196,52)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="965" width="0.4508%" height="15" fill="rgb(243,203,18)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="949" width="0.4508%" height="15" fill="rgb(252,125,41)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="933" width="0.4508%" height="15" fill="rgb(223,180,33)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="917" width="0.4508%" height="15" fill="rgb(254,159,46)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="901" width="0.4508%" height="15" fill="rgb(254,38,10)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="885" width="0.4508%" height="15" fill="rgb(208,217,32)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="895.50"></text></g><g><title>cfree (1,203,582 samples, 0.45%)</title><rect x="93.7877%" y="869" width="0.4508%" height="15" fill="rgb(221,120,13)" fg:x="250406867" fg:w="1203582"/><text x="94.0377%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (9,736,000 samples, 3.65%)</title><rect x="92.8890%" y="2085" width="3.6465%" height="15" fill="rgb(246,54,52)" fg:x="248007472" fg:w="9736000"/><text x="93.1390%" y="2095.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (6,133,023 samples, 2.30%)</title><rect x="94.2385%" y="2069" width="2.2971%" height="15" fill="rgb(242,34,25)" fg:x="251610449" fg:w="6133023"/><text x="94.4885%" y="2079.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,133,023 samples, 2.30%)</title><rect x="94.2385%" y="2053" width="2.2971%" height="15" fill="rgb(247,209,9)" fg:x="251610449" fg:w="6133023"/><text x="94.4885%" y="2063.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,133,023 samples, 2.30%)</title><rect x="94.2385%" y="2037" width="2.2971%" height="15" fill="rgb(228,71,26)" fg:x="251610449" fg:w="6133023"/><text x="94.4885%" y="2047.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,133,023 samples, 2.30%)</title><rect x="94.2385%" y="2021" width="2.2971%" height="15" fill="rgb(222,145,49)" fg:x="251610449" fg:w="6133023"/><text x="94.4885%" y="2031.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (6,133,023 samples, 2.30%)</title><rect x="94.2385%" y="2005" width="2.2971%" height="15" fill="rgb(218,121,17)" fg:x="251610449" fg:w="6133023"/><text x="94.4885%" y="2015.50">a..</text></g><g><title>cfree (6,133,023 samples, 2.30%)</title><rect x="94.2385%" y="1989" width="2.2971%" height="15" fill="rgb(244,50,7)" fg:x="251610449" fg:w="6133023"/><text x="94.4885%" y="1999.50">c..</text></g><g><title>[libc.so.6] (6,133,023 samples, 2.30%)</title><rect x="94.2385%" y="1973" width="2.2971%" height="15" fill="rgb(246,229,37)" fg:x="251610449" fg:w="6133023"/><text x="94.4885%" y="1983.50">[..</text></g><g><title>[libc.so.6] (6,133,023 samples, 2.30%)</title><rect x="94.2385%" y="1957" width="2.2971%" height="15" fill="rgb(225,18,5)" fg:x="251610449" fg:w="6133023"/><text x="94.4885%" y="1967.50">[..</text></g><g><title>[libc.so.6] (1,225,611 samples, 0.46%)</title><rect x="96.0765%" y="1941" width="0.4590%" height="15" fill="rgb(213,204,8)" fg:x="256517861" fg:w="1225611"/><text x="96.3265%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1605" width="0.4542%" height="15" fill="rgb(238,103,6)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1589" width="0.4542%" height="15" fill="rgb(222,25,35)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1573" width="0.4542%" height="15" fill="rgb(213,203,35)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1557" width="0.4542%" height="15" fill="rgb(221,79,53)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1541" width="0.4542%" height="15" fill="rgb(243,200,35)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1525" width="0.4542%" height="15" fill="rgb(248,60,25)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1509" width="0.4542%" height="15" fill="rgb(227,53,46)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1493" width="0.4542%" height="15" fill="rgb(216,120,32)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1477" width="0.4542%" height="15" fill="rgb(220,134,1)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1461" width="0.4542%" height="15" fill="rgb(237,168,5)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1445" width="0.4542%" height="15" fill="rgb(231,100,33)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1429" width="0.4542%" height="15" fill="rgb(236,177,47)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1413" width="0.4542%" height="15" fill="rgb(235,7,49)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1397" width="0.4542%" height="15" fill="rgb(232,119,22)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1381" width="0.4542%" height="15" fill="rgb(254,73,53)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1365" width="0.4542%" height="15" fill="rgb(251,35,20)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1349" width="0.4542%" height="15" fill="rgb(241,119,20)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1333" width="0.4542%" height="15" fill="rgb(207,102,14)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1317" width="0.4542%" height="15" fill="rgb(248,201,50)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1301" width="0.4542%" height="15" fill="rgb(222,185,44)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1285" width="0.4542%" height="15" fill="rgb(218,107,18)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1269" width="0.4542%" height="15" fill="rgb(237,177,39)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1253" width="0.4542%" height="15" fill="rgb(246,69,6)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1237" width="0.4542%" height="15" fill="rgb(234,208,37)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1221" width="0.4542%" height="15" fill="rgb(225,4,6)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1205" width="0.4542%" height="15" fill="rgb(233,45,0)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1189" width="0.4542%" height="15" fill="rgb(226,136,5)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1173" width="0.4542%" height="15" fill="rgb(211,91,47)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1157" width="0.4542%" height="15" fill="rgb(242,88,51)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1141" width="0.4542%" height="15" fill="rgb(230,91,28)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1125" width="0.4542%" height="15" fill="rgb(254,186,29)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1109" width="0.4542%" height="15" fill="rgb(238,6,4)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1093" width="0.4542%" height="15" fill="rgb(221,151,16)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1077" width="0.4542%" height="15" fill="rgb(251,143,52)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1061" width="0.4542%" height="15" fill="rgb(206,90,15)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1045" width="0.4542%" height="15" fill="rgb(218,35,8)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1029" width="0.4542%" height="15" fill="rgb(239,215,6)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="1013" width="0.4542%" height="15" fill="rgb(245,116,39)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="997" width="0.4542%" height="15" fill="rgb(242,65,28)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="981" width="0.4542%" height="15" fill="rgb(252,132,53)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="965" width="0.4542%" height="15" fill="rgb(224,159,50)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="949" width="0.4542%" height="15" fill="rgb(224,93,4)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="933" width="0.4542%" height="15" fill="rgb(208,81,34)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="917" width="0.4542%" height="15" fill="rgb(233,92,54)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="901" width="0.4542%" height="15" fill="rgb(237,21,14)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="885" width="0.4542%" height="15" fill="rgb(249,128,51)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="869" width="0.4542%" height="15" fill="rgb(223,129,24)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="853" width="0.4542%" height="15" fill="rgb(231,168,25)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="837" width="0.4542%" height="15" fill="rgb(224,39,20)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="821" width="0.4542%" height="15" fill="rgb(225,152,53)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="805" width="0.4542%" height="15" fill="rgb(252,17,24)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="789" width="0.4542%" height="15" fill="rgb(250,114,30)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="773" width="0.4542%" height="15" fill="rgb(229,5,4)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="757" width="0.4542%" height="15" fill="rgb(225,176,49)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="741" width="0.4542%" height="15" fill="rgb(224,221,49)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="725" width="0.4542%" height="15" fill="rgb(253,169,27)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="735.50"></text></g><g><title>cfree (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="709" width="0.4542%" height="15" fill="rgb(211,206,16)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="719.50"></text></g><g><title>[libc.so.6] (1,212,815 samples, 0.45%)</title><rect x="96.5355%" y="693" width="0.4542%" height="15" fill="rgb(244,87,35)" fg:x="257743472" fg:w="1212815"/><text x="96.7855%" y="703.50"></text></g><g><title>_start (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2373" width="92.7287%" height="15" fill="rgb(246,28,10)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2383.50">_start</text></g><g><title>__libc_start_main (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2357" width="92.7287%" height="15" fill="rgb(229,12,44)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2367.50">__libc_start_main</text></g><g><title>[libc.so.6] (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2341" width="92.7287%" height="15" fill="rgb(210,145,37)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2351.50">[libc.so.6]</text></g><g><title>main (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2325" width="92.7287%" height="15" fill="rgb(227,112,52)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2335.50">main</text></g><g><title>std::rt::lang_start_internal (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2309" width="92.7287%" height="15" fill="rgb(238,155,34)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2319.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2293" width="92.7287%" height="15" fill="rgb(239,226,36)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2303.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2277" width="92.7287%" height="15" fill="rgb(230,16,23)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2287.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2261" width="92.7287%" height="15" fill="rgb(236,171,36)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2271.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2245" width="92.7287%" height="15" fill="rgb(221,22,14)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2255.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2229" width="92.7287%" height="15" fill="rgb(242,43,11)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2239.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2213" width="92.7287%" height="15" fill="rgb(232,69,23)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2223.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2197" width="92.7287%" height="15" fill="rgb(216,180,54)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2207.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2181" width="92.7287%" height="15" fill="rgb(216,5,24)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2191.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2165" width="92.7287%" height="15" fill="rgb(225,89,9)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2175.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2149" width="92.7287%" height="15" fill="rgb(243,75,33)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2159.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2133" width="92.7287%" height="15" fill="rgb(247,141,45)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2143.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2117" width="92.7287%" height="15" fill="rgb(232,177,36)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2127.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (247,579,575 samples, 92.73%)</title><rect x="4.7350%" y="2101" width="92.7287%" height="15" fill="rgb(219,125,36)" fg:x="12642085" fg:w="247579575"/><text x="4.9850%" y="2111.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="2085" width="0.9282%" height="15" fill="rgb(227,94,9)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="2069" width="0.9282%" height="15" fill="rgb(240,34,52)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="2079.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="2053" width="0.9282%" height="15" fill="rgb(216,45,12)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="2037" width="0.9282%" height="15" fill="rgb(246,21,19)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="2021" width="0.9282%" height="15" fill="rgb(213,98,42)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="2005" width="0.9282%" height="15" fill="rgb(250,136,47)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1989" width="0.9282%" height="15" fill="rgb(251,124,27)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1973" width="0.9282%" height="15" fill="rgb(229,180,14)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1957" width="0.9282%" height="15" fill="rgb(245,216,25)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1941" width="0.9282%" height="15" fill="rgb(251,43,5)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1925" width="0.9282%" height="15" fill="rgb(250,128,24)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1909" width="0.9282%" height="15" fill="rgb(217,117,27)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1893" width="0.9282%" height="15" fill="rgb(245,147,4)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1877" width="0.9282%" height="15" fill="rgb(242,201,35)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1861" width="0.9282%" height="15" fill="rgb(218,181,1)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1845" width="0.9282%" height="15" fill="rgb(222,6,29)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1829" width="0.9282%" height="15" fill="rgb(208,186,3)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1813" width="0.9282%" height="15" fill="rgb(216,36,26)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1797" width="0.9282%" height="15" fill="rgb(248,201,23)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1781" width="0.9282%" height="15" fill="rgb(251,170,31)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1765" width="0.9282%" height="15" fill="rgb(207,110,25)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1749" width="0.9282%" height="15" fill="rgb(250,54,15)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1733" width="0.9282%" height="15" fill="rgb(227,68,33)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1717" width="0.9282%" height="15" fill="rgb(238,34,41)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1701" width="0.9282%" height="15" fill="rgb(220,11,15)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1685" width="0.9282%" height="15" fill="rgb(246,111,35)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1669" width="0.9282%" height="15" fill="rgb(209,88,53)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1653" width="0.9282%" height="15" fill="rgb(231,185,47)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1637" width="0.9282%" height="15" fill="rgb(233,154,1)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,478,188 samples, 0.93%)</title><rect x="96.5355%" y="1621" width="0.9282%" height="15" fill="rgb(225,15,46)" fg:x="257743472" fg:w="2478188"/><text x="96.7855%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,265,373 samples, 0.47%)</title><rect x="96.9898%" y="1605" width="0.4739%" height="15" fill="rgb(211,135,41)" fg:x="258956287" fg:w="1265373"/><text x="97.2398%" y="1615.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,265,373 samples, 0.47%)</title><rect x="96.9898%" y="1589" width="0.4739%" height="15" fill="rgb(208,54,0)" fg:x="258956287" fg:w="1265373"/><text x="97.2398%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,265,373 samples, 0.47%)</title><rect x="96.9898%" y="1573" width="0.4739%" height="15" fill="rgb(244,136,14)" fg:x="258956287" fg:w="1265373"/><text x="97.2398%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,265,373 samples, 0.47%)</title><rect x="96.9898%" y="1557" width="0.4739%" height="15" fill="rgb(241,56,14)" fg:x="258956287" fg:w="1265373"/><text x="97.2398%" y="1567.50"></text></g><g><title>alloc::alloc::dealloc (1,265,373 samples, 0.47%)</title><rect x="96.9898%" y="1541" width="0.4739%" height="15" fill="rgb(205,80,24)" fg:x="258956287" fg:w="1265373"/><text x="97.2398%" y="1551.50"></text></g><g><title>cfree (1,265,373 samples, 0.47%)</title><rect x="96.9898%" y="1525" width="0.4739%" height="15" fill="rgb(220,57,4)" fg:x="258956287" fg:w="1265373"/><text x="97.2398%" y="1535.50"></text></g><g><title>[libc.so.6] (1,265,373 samples, 0.47%)</title><rect x="96.9898%" y="1509" width="0.4739%" height="15" fill="rgb(226,193,50)" fg:x="258956287" fg:w="1265373"/><text x="97.2398%" y="1519.50"></text></g><g><title>[libc.so.6] (1,265,373 samples, 0.47%)</title><rect x="96.9898%" y="1493" width="0.4739%" height="15" fill="rgb(231,168,22)" fg:x="258956287" fg:w="1265373"/><text x="97.2398%" y="1503.50"></text></g><g><title>benchmark::json_to_html_node (1,158,119 samples, 0.43%)</title><rect x="97.4637%" y="2373" width="0.4338%" height="15" fill="rgb(254,215,14)" fg:x="260221660" fg:w="1158119"/><text x="97.7137%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,388 samples, 0.47%)</title><rect x="97.8975%" y="2373" width="0.4709%" height="15" fill="rgb(211,115,16)" fg:x="261379779" fg:w="1257388"/><text x="98.1475%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,202,140 samples, 0.45%)</title><rect x="98.3684%" y="2373" width="0.4503%" height="15" fill="rgb(236,210,16)" fg:x="262637167" fg:w="1202140"/><text x="98.6184%" y="2383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,134,216 samples, 0.42%)</title><rect x="98.8187%" y="2373" width="0.4248%" height="15" fill="rgb(221,94,12)" fg:x="263839307" fg:w="1134216"/><text x="99.0687%" y="2383.50"></text></g><g><title>hashbrown::map::make_hash (1,134,216 samples, 0.42%)</title><rect x="98.8187%" y="2357" width="0.4248%" height="15" fill="rgb(235,218,49)" fg:x="263839307" fg:w="1134216"/><text x="99.0687%" y="2367.50"></text></g><g><title>all (266,993,383 samples, 100%)</title><rect x="0.0000%" y="2405" width="100.0000%" height="15" fill="rgb(217,114,14)" fg:x="0" fg:w="266993383"/><text x="0.2500%" y="2415.50"></text></g><g><title>benchmark (266,993,383 samples, 100.00%)</title><rect x="0.0000%" y="2389" width="100.0000%" height="15" fill="rgb(216,145,22)" fg:x="0" fg:w="266993383"/><text x="0.2500%" y="2399.50">benchmark</text></g><g><title>malloc (2,019,860 samples, 0.76%)</title><rect x="99.2435%" y="2373" width="0.7565%" height="15" fill="rgb(217,112,39)" fg:x="264973523" fg:w="2019860"/><text x="99.4935%" y="2383.50"></text></g></svg></svg>