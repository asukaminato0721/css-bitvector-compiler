<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="3206" onload="init(evt)" viewBox="0 0 1200 3206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="3206" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="3189.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="3189.00"> </text><svg id="frames" x="10" width="1180" total_samples="238733614"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,293,917 samples, 0.54%)</title><rect x="0.0000%" y="3125" width="0.5420%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1293917"/><text x="0.2500%" y="3135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,323,747 samples, 0.55%)</title><rect x="0.5420%" y="3125" width="0.5545%" height="15" fill="rgb(217,0,24)" fg:x="1293917" fg:w="1323747"/><text x="0.7920%" y="3135.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,323,747 samples, 0.55%)</title><rect x="0.5420%" y="3109" width="0.5545%" height="15" fill="rgb(221,193,54)" fg:x="1293917" fg:w="1323747"/><text x="0.7920%" y="3119.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,125,152 samples, 0.47%)</title><rect x="1.0965%" y="3125" width="0.4713%" height="15" fill="rgb(248,212,6)" fg:x="2617664" fg:w="1125152"/><text x="1.3465%" y="3135.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,048,345 samples, 0.44%)</title><rect x="1.5678%" y="3125" width="0.4391%" height="15" fill="rgb(208,68,35)" fg:x="3742816" fg:w="1048345"/><text x="1.8178%" y="3135.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,048,345 samples, 0.44%)</title><rect x="1.5678%" y="3109" width="0.4391%" height="15" fill="rgb(232,128,0)" fg:x="3742816" fg:w="1048345"/><text x="1.8178%" y="3119.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,048,345 samples, 0.44%)</title><rect x="1.5678%" y="3093" width="0.4391%" height="15" fill="rgb(207,160,47)" fg:x="3742816" fg:w="1048345"/><text x="1.8178%" y="3103.50"></text></g><g><title>[libc.so.6] (4,677,818 samples, 1.96%)</title><rect x="2.0069%" y="3125" width="1.9594%" height="15" fill="rgb(228,23,34)" fg:x="4791161" fg:w="4677818"/><text x="2.2569%" y="3135.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,631,270 samples, 1.10%)</title><rect x="3.9663%" y="3109" width="1.1022%" height="15" fill="rgb(218,30,26)" fg:x="9468979" fg:w="2631270"/><text x="4.2163%" y="3119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,346,258 samples, 0.56%)</title><rect x="4.5046%" y="3093" width="0.5639%" height="15" fill="rgb(220,122,19)" fg:x="10753991" fg:w="1346258"/><text x="4.7546%" y="3103.50"></text></g><g><title>alloc::slice::hack::to_vec (1,346,258 samples, 0.56%)</title><rect x="4.5046%" y="3077" width="0.5639%" height="15" fill="rgb(250,228,42)" fg:x="10753991" fg:w="1346258"/><text x="4.7546%" y="3087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,346,258 samples, 0.56%)</title><rect x="4.5046%" y="3061" width="0.5639%" height="15" fill="rgb(240,193,28)" fg:x="10753991" fg:w="1346258"/><text x="4.7546%" y="3071.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,346,258 samples, 0.56%)</title><rect x="4.5046%" y="3045" width="0.5639%" height="15" fill="rgb(216,20,37)" fg:x="10753991" fg:w="1346258"/><text x="4.7546%" y="3055.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,346,258 samples, 0.56%)</title><rect x="4.5046%" y="3029" width="0.5639%" height="15" fill="rgb(206,188,39)" fg:x="10753991" fg:w="1346258"/><text x="4.7546%" y="3039.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,346,258 samples, 0.56%)</title><rect x="4.5046%" y="3013" width="0.5639%" height="15" fill="rgb(217,207,13)" fg:x="10753991" fg:w="1346258"/><text x="4.7546%" y="3023.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,346,258 samples, 0.56%)</title><rect x="4.5046%" y="2997" width="0.5639%" height="15" fill="rgb(231,73,38)" fg:x="10753991" fg:w="1346258"/><text x="4.7546%" y="3007.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,247,806 samples, 0.52%)</title><rect x="5.0685%" y="3109" width="0.5227%" height="15" fill="rgb(225,20,46)" fg:x="12100249" fg:w="1247806"/><text x="5.3185%" y="3119.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,247,806 samples, 0.52%)</title><rect x="5.0685%" y="3093" width="0.5227%" height="15" fill="rgb(210,31,41)" fg:x="12100249" fg:w="1247806"/><text x="5.3185%" y="3103.50"></text></g><g><title>[unknown] (2,146,335 samples, 0.90%)</title><rect x="5.5912%" y="3093" width="0.8991%" height="15" fill="rgb(221,200,47)" fg:x="13348055" fg:w="2146335"/><text x="5.8412%" y="3103.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2,146,335 samples, 0.90%)</title><rect x="5.5912%" y="3077" width="0.8991%" height="15" fill="rgb(226,26,5)" fg:x="13348055" fg:w="2146335"/><text x="5.8412%" y="3087.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (2,146,335 samples, 0.90%)</title><rect x="5.5912%" y="3061" width="0.8991%" height="15" fill="rgb(249,33,26)" fg:x="13348055" fg:w="2146335"/><text x="5.8412%" y="3071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (2,146,335 samples, 0.90%)</title><rect x="5.5912%" y="3045" width="0.8991%" height="15" fill="rgb(235,183,28)" fg:x="13348055" fg:w="2146335"/><text x="5.8412%" y="3055.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (2,146,335 samples, 0.90%)</title><rect x="5.5912%" y="3029" width="0.8991%" height="15" fill="rgb(221,5,38)" fg:x="13348055" fg:w="2146335"/><text x="5.8412%" y="3039.50"></text></g><g><title>core::intrinsics::copy (2,146,335 samples, 0.90%)</title><rect x="5.5912%" y="3013" width="0.8991%" height="15" fill="rgb(247,18,42)" fg:x="13348055" fg:w="2146335"/><text x="5.8412%" y="3023.50"></text></g><g><title>[unknown] (3,149,943 samples, 1.32%)</title><rect x="5.5912%" y="3109" width="1.3194%" height="15" fill="rgb(241,131,45)" fg:x="13348055" fg:w="3149943"/><text x="5.8412%" y="3119.50"></text></g><g><title>malloc (1,003,608 samples, 0.42%)</title><rect x="6.4902%" y="3093" width="0.4204%" height="15" fill="rgb(249,31,29)" fg:x="15494390" fg:w="1003608"/><text x="6.7402%" y="3103.50"></text></g><g><title>__rdl_dealloc (1,367,938 samples, 0.57%)</title><rect x="6.9106%" y="3109" width="0.5730%" height="15" fill="rgb(225,111,53)" fg:x="16497998" fg:w="1367938"/><text x="7.1606%" y="3119.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,367,938 samples, 0.57%)</title><rect x="6.9106%" y="3093" width="0.5730%" height="15" fill="rgb(238,160,17)" fg:x="16497998" fg:w="1367938"/><text x="7.1606%" y="3103.50"></text></g><g><title>[unknown] (9,432,422 samples, 3.95%)</title><rect x="3.9663%" y="3125" width="3.9510%" height="15" fill="rgb(214,148,48)" fg:x="9468979" fg:w="9432422"/><text x="4.2163%" y="3135.50">[unk..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,035,465 samples, 0.43%)</title><rect x="7.4836%" y="3109" width="0.4337%" height="15" fill="rgb(232,36,49)" fg:x="17865936" fg:w="1035465"/><text x="7.7336%" y="3119.50"></text></g><g><title>_fini (1,299,733 samples, 0.54%)</title><rect x="7.9174%" y="3125" width="0.5444%" height="15" fill="rgb(209,103,24)" fg:x="18901401" fg:w="1299733"/><text x="8.1674%" y="3135.50"></text></g><g><title>[libc.so.6] (1,299,733 samples, 0.54%)</title><rect x="7.9174%" y="3109" width="0.5444%" height="15" fill="rgb(229,88,8)" fg:x="18901401" fg:w="1299733"/><text x="8.1674%" y="3119.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,304,380 samples, 0.55%)</title><rect x="8.4618%" y="2757" width="0.5464%" height="15" fill="rgb(213,181,19)" fg:x="20201134" fg:w="1304380"/><text x="8.7118%" y="2767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,304,380 samples, 0.55%)</title><rect x="8.4618%" y="2741" width="0.5464%" height="15" fill="rgb(254,191,54)" fg:x="20201134" fg:w="1304380"/><text x="8.7118%" y="2751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,304,380 samples, 0.55%)</title><rect x="8.4618%" y="2725" width="0.5464%" height="15" fill="rgb(241,83,37)" fg:x="20201134" fg:w="1304380"/><text x="8.7118%" y="2735.50"></text></g><g><title>alloc::slice::hack::to_vec (1,304,380 samples, 0.55%)</title><rect x="8.4618%" y="2709" width="0.5464%" height="15" fill="rgb(233,36,39)" fg:x="20201134" fg:w="1304380"/><text x="8.7118%" y="2719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,304,380 samples, 0.55%)</title><rect x="8.4618%" y="2693" width="0.5464%" height="15" fill="rgb(226,3,54)" fg:x="20201134" fg:w="1304380"/><text x="8.7118%" y="2703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,304,380 samples, 0.55%)</title><rect x="8.4618%" y="2677" width="0.5464%" height="15" fill="rgb(245,192,40)" fg:x="20201134" fg:w="1304380"/><text x="8.7118%" y="2687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,304,380 samples, 0.55%)</title><rect x="8.4618%" y="2661" width="0.5464%" height="15" fill="rgb(238,167,29)" fg:x="20201134" fg:w="1304380"/><text x="8.7118%" y="2671.50"></text></g><g><title>[libc.so.6] (1,304,380 samples, 0.55%)</title><rect x="8.4618%" y="2645" width="0.5464%" height="15" fill="rgb(232,182,51)" fg:x="20201134" fg:w="1304380"/><text x="8.7118%" y="2655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,336,344 samples, 0.56%)</title><rect x="9.0082%" y="2741" width="0.5598%" height="15" fill="rgb(231,60,39)" fg:x="21505514" fg:w="1336344"/><text x="9.2582%" y="2751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,336,344 samples, 0.56%)</title><rect x="9.0082%" y="2725" width="0.5598%" height="15" fill="rgb(208,69,12)" fg:x="21505514" fg:w="1336344"/><text x="9.2582%" y="2735.50"></text></g><g><title>alloc::slice::hack::to_vec (1,336,344 samples, 0.56%)</title><rect x="9.0082%" y="2709" width="0.5598%" height="15" fill="rgb(235,93,37)" fg:x="21505514" fg:w="1336344"/><text x="9.2582%" y="2719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,336,344 samples, 0.56%)</title><rect x="9.0082%" y="2693" width="0.5598%" height="15" fill="rgb(213,116,39)" fg:x="21505514" fg:w="1336344"/><text x="9.2582%" y="2703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,336,344 samples, 0.56%)</title><rect x="9.0082%" y="2677" width="0.5598%" height="15" fill="rgb(222,207,29)" fg:x="21505514" fg:w="1336344"/><text x="9.2582%" y="2687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,288,219 samples, 0.54%)</title><rect x="9.5679%" y="2405" width="0.5396%" height="15" fill="rgb(206,96,30)" fg:x="22841858" fg:w="1288219"/><text x="9.8179%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,288,219 samples, 0.54%)</title><rect x="9.5679%" y="2389" width="0.5396%" height="15" fill="rgb(218,138,4)" fg:x="22841858" fg:w="1288219"/><text x="9.8179%" y="2399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,288,219 samples, 0.54%)</title><rect x="9.5679%" y="2373" width="0.5396%" height="15" fill="rgb(250,191,14)" fg:x="22841858" fg:w="1288219"/><text x="9.8179%" y="2383.50"></text></g><g><title>alloc::slice::hack::to_vec (1,288,219 samples, 0.54%)</title><rect x="9.5679%" y="2357" width="0.5396%" height="15" fill="rgb(239,60,40)" fg:x="22841858" fg:w="1288219"/><text x="9.8179%" y="2367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,288,219 samples, 0.54%)</title><rect x="9.5679%" y="2341" width="0.5396%" height="15" fill="rgb(206,27,48)" fg:x="22841858" fg:w="1288219"/><text x="9.8179%" y="2351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,288,219 samples, 0.54%)</title><rect x="9.5679%" y="2325" width="0.5396%" height="15" fill="rgb(225,35,8)" fg:x="22841858" fg:w="1288219"/><text x="9.8179%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,288,219 samples, 0.54%)</title><rect x="9.5679%" y="2309" width="0.5396%" height="15" fill="rgb(250,213,24)" fg:x="22841858" fg:w="1288219"/><text x="9.8179%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,288,219 samples, 0.54%)</title><rect x="9.5679%" y="2293" width="0.5396%" height="15" fill="rgb(247,123,22)" fg:x="22841858" fg:w="1288219"/><text x="9.8179%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,288,219 samples, 0.54%)</title><rect x="9.5679%" y="2277" width="0.5396%" height="15" fill="rgb(231,138,38)" fg:x="22841858" fg:w="1288219"/><text x="9.8179%" y="2287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,288,219 samples, 0.54%)</title><rect x="9.5679%" y="2261" width="0.5396%" height="15" fill="rgb(231,145,46)" fg:x="22841858" fg:w="1288219"/><text x="9.8179%" y="2271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,288,219 samples, 0.54%)</title><rect x="9.5679%" y="2245" width="0.5396%" height="15" fill="rgb(251,118,11)" fg:x="22841858" fg:w="1288219"/><text x="9.8179%" y="2255.50"></text></g><g><title>alloc::alloc::alloc (1,288,219 samples, 0.54%)</title><rect x="9.5679%" y="2229" width="0.5396%" height="15" fill="rgb(217,147,25)" fg:x="22841858" fg:w="1288219"/><text x="9.8179%" y="2239.50"></text></g><g><title>malloc (1,288,219 samples, 0.54%)</title><rect x="9.5679%" y="2213" width="0.5396%" height="15" fill="rgb(247,81,37)" fg:x="22841858" fg:w="1288219"/><text x="9.8179%" y="2223.50"></text></g><g><title>[libc.so.6] (1,288,219 samples, 0.54%)</title><rect x="9.5679%" y="2197" width="0.5396%" height="15" fill="rgb(209,12,38)" fg:x="22841858" fg:w="1288219"/><text x="9.8179%" y="2207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (970,243 samples, 0.41%)</title><rect x="10.1075%" y="2389" width="0.4064%" height="15" fill="rgb(227,1,9)" fg:x="24130077" fg:w="970243"/><text x="10.3575%" y="2399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (970,243 samples, 0.41%)</title><rect x="10.1075%" y="2373" width="0.4064%" height="15" fill="rgb(248,47,43)" fg:x="24130077" fg:w="970243"/><text x="10.3575%" y="2383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (970,243 samples, 0.41%)</title><rect x="10.1075%" y="2357" width="0.4064%" height="15" fill="rgb(221,10,30)" fg:x="24130077" fg:w="970243"/><text x="10.3575%" y="2367.50"></text></g><g><title>alloc::slice::hack::to_vec (970,243 samples, 0.41%)</title><rect x="10.1075%" y="2341" width="0.4064%" height="15" fill="rgb(210,229,1)" fg:x="24130077" fg:w="970243"/><text x="10.3575%" y="2351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (970,243 samples, 0.41%)</title><rect x="10.1075%" y="2325" width="0.4064%" height="15" fill="rgb(222,148,37)" fg:x="24130077" fg:w="970243"/><text x="10.3575%" y="2335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (970,243 samples, 0.41%)</title><rect x="10.1075%" y="2309" width="0.4064%" height="15" fill="rgb(234,67,33)" fg:x="24130077" fg:w="970243"/><text x="10.3575%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (970,243 samples, 0.41%)</title><rect x="10.1075%" y="2293" width="0.4064%" height="15" fill="rgb(247,98,35)" fg:x="24130077" fg:w="970243"/><text x="10.3575%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (970,243 samples, 0.41%)</title><rect x="10.1075%" y="2277" width="0.4064%" height="15" fill="rgb(247,138,52)" fg:x="24130077" fg:w="970243"/><text x="10.3575%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (970,243 samples, 0.41%)</title><rect x="10.1075%" y="2261" width="0.4064%" height="15" fill="rgb(213,79,30)" fg:x="24130077" fg:w="970243"/><text x="10.3575%" y="2271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (970,243 samples, 0.41%)</title><rect x="10.1075%" y="2245" width="0.4064%" height="15" fill="rgb(246,177,23)" fg:x="24130077" fg:w="970243"/><text x="10.3575%" y="2255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (970,243 samples, 0.41%)</title><rect x="10.1075%" y="2229" width="0.4064%" height="15" fill="rgb(230,62,27)" fg:x="24130077" fg:w="970243"/><text x="10.3575%" y="2239.50"></text></g><g><title>alloc::alloc::alloc (970,243 samples, 0.41%)</title><rect x="10.1075%" y="2213" width="0.4064%" height="15" fill="rgb(216,154,8)" fg:x="24130077" fg:w="970243"/><text x="10.3575%" y="2223.50"></text></g><g><title>malloc (970,243 samples, 0.41%)</title><rect x="10.1075%" y="2197" width="0.4064%" height="15" fill="rgb(244,35,45)" fg:x="24130077" fg:w="970243"/><text x="10.3575%" y="2207.50"></text></g><g><title>[libc.so.6] (970,243 samples, 0.41%)</title><rect x="10.1075%" y="2181" width="0.4064%" height="15" fill="rgb(251,115,12)" fg:x="24130077" fg:w="970243"/><text x="10.3575%" y="2191.50"></text></g><g><title>[libc.so.6] (970,243 samples, 0.41%)</title><rect x="10.1075%" y="2165" width="0.4064%" height="15" fill="rgb(240,54,50)" fg:x="24130077" fg:w="970243"/><text x="10.3575%" y="2175.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,026,306 samples, 0.43%)</title><rect x="10.5139%" y="2261" width="0.4299%" height="15" fill="rgb(233,84,52)" fg:x="25100320" fg:w="1026306"/><text x="10.7639%" y="2271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,026,306 samples, 0.43%)</title><rect x="10.5139%" y="2245" width="0.4299%" height="15" fill="rgb(207,117,47)" fg:x="25100320" fg:w="1026306"/><text x="10.7639%" y="2255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,026,306 samples, 0.43%)</title><rect x="10.5139%" y="2229" width="0.4299%" height="15" fill="rgb(249,43,39)" fg:x="25100320" fg:w="1026306"/><text x="10.7639%" y="2239.50"></text></g><g><title>alloc::slice::hack::to_vec (1,026,306 samples, 0.43%)</title><rect x="10.5139%" y="2213" width="0.4299%" height="15" fill="rgb(209,38,44)" fg:x="25100320" fg:w="1026306"/><text x="10.7639%" y="2223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,026,306 samples, 0.43%)</title><rect x="10.5139%" y="2197" width="0.4299%" height="15" fill="rgb(236,212,23)" fg:x="25100320" fg:w="1026306"/><text x="10.7639%" y="2207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,026,306 samples, 0.43%)</title><rect x="10.5139%" y="2181" width="0.4299%" height="15" fill="rgb(242,79,21)" fg:x="25100320" fg:w="1026306"/><text x="10.7639%" y="2191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,026,306 samples, 0.43%)</title><rect x="10.5139%" y="2165" width="0.4299%" height="15" fill="rgb(211,96,35)" fg:x="25100320" fg:w="1026306"/><text x="10.7639%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,026,306 samples, 0.43%)</title><rect x="10.5139%" y="2149" width="0.4299%" height="15" fill="rgb(253,215,40)" fg:x="25100320" fg:w="1026306"/><text x="10.7639%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,026,306 samples, 0.43%)</title><rect x="10.5139%" y="2133" width="0.4299%" height="15" fill="rgb(211,81,21)" fg:x="25100320" fg:w="1026306"/><text x="10.7639%" y="2143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,026,306 samples, 0.43%)</title><rect x="10.5139%" y="2117" width="0.4299%" height="15" fill="rgb(208,190,38)" fg:x="25100320" fg:w="1026306"/><text x="10.7639%" y="2127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,026,306 samples, 0.43%)</title><rect x="10.5139%" y="2101" width="0.4299%" height="15" fill="rgb(235,213,38)" fg:x="25100320" fg:w="1026306"/><text x="10.7639%" y="2111.50"></text></g><g><title>alloc::alloc::alloc (1,026,306 samples, 0.43%)</title><rect x="10.5139%" y="2085" width="0.4299%" height="15" fill="rgb(237,122,38)" fg:x="25100320" fg:w="1026306"/><text x="10.7639%" y="2095.50"></text></g><g><title>malloc (1,026,306 samples, 0.43%)</title><rect x="10.5139%" y="2069" width="0.4299%" height="15" fill="rgb(244,218,35)" fg:x="25100320" fg:w="1026306"/><text x="10.7639%" y="2079.50"></text></g><g><title>[libc.so.6] (1,026,306 samples, 0.43%)</title><rect x="10.5139%" y="2053" width="0.4299%" height="15" fill="rgb(240,68,47)" fg:x="25100320" fg:w="1026306"/><text x="10.7639%" y="2063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2245" width="0.5644%" height="15" fill="rgb(210,16,53)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2229" width="0.5644%" height="15" fill="rgb(235,124,12)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2239.50"></text></g><g><title>alloc::slice::hack::to_vec (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2213" width="0.5644%" height="15" fill="rgb(224,169,11)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2197" width="0.5644%" height="15" fill="rgb(250,166,2)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2207.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2181" width="0.5644%" height="15" fill="rgb(242,216,29)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2191.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2165" width="0.5644%" height="15" fill="rgb(230,116,27)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2149" width="0.5644%" height="15" fill="rgb(228,99,48)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2133" width="0.5644%" height="15" fill="rgb(253,11,6)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2143.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2117" width="0.5644%" height="15" fill="rgb(247,143,39)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2101" width="0.5644%" height="15" fill="rgb(236,97,10)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2111.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2085" width="0.5644%" height="15" fill="rgb(233,208,19)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2095.50"></text></g><g><title>alloc::slice::hack::to_vec (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2069" width="0.5644%" height="15" fill="rgb(216,164,2)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2079.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2053" width="0.5644%" height="15" fill="rgb(220,129,5)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2063.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2037" width="0.5644%" height="15" fill="rgb(242,17,10)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2047.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2021" width="0.5644%" height="15" fill="rgb(242,107,0)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2031.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="2005" width="0.5644%" height="15" fill="rgb(251,28,31)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="2015.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1989" width="0.5644%" height="15" fill="rgb(233,223,10)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1999.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1973" width="0.5644%" height="15" fill="rgb(215,21,27)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1957" width="0.5644%" height="15" fill="rgb(232,23,21)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1941" width="0.5644%" height="15" fill="rgb(244,5,23)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1951.50"></text></g><g><title>alloc::slice::hack::to_vec (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1925" width="0.5644%" height="15" fill="rgb(226,81,46)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1935.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1909" width="0.5644%" height="15" fill="rgb(247,70,30)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1919.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1893" width="0.5644%" height="15" fill="rgb(212,68,19)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1903.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1877" width="0.5644%" height="15" fill="rgb(240,187,13)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1861" width="0.5644%" height="15" fill="rgb(223,113,26)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1845" width="0.5644%" height="15" fill="rgb(206,192,2)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1855.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1829" width="0.5644%" height="15" fill="rgb(241,108,4)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1813" width="0.5644%" height="15" fill="rgb(247,173,49)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1797" width="0.5644%" height="15" fill="rgb(224,114,35)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1781" width="0.5644%" height="15" fill="rgb(245,159,27)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1765" width="0.5644%" height="15" fill="rgb(245,172,44)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1775.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1749" width="0.5644%" height="15" fill="rgb(236,23,11)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1759.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1733" width="0.5644%" height="15" fill="rgb(205,117,38)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1743.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1717" width="0.5644%" height="15" fill="rgb(237,72,25)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1727.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1701" width="0.5644%" height="15" fill="rgb(244,70,9)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1711.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1685" width="0.5644%" height="15" fill="rgb(217,125,39)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1669" width="0.5644%" height="15" fill="rgb(235,36,10)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1653" width="0.5644%" height="15" fill="rgb(251,123,47)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1637" width="0.5644%" height="15" fill="rgb(221,13,13)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1621" width="0.5644%" height="15" fill="rgb(238,131,9)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1631.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1605" width="0.5644%" height="15" fill="rgb(211,50,8)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1615.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1589" width="0.5644%" height="15" fill="rgb(245,182,24)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1599.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1573" width="0.5644%" height="15" fill="rgb(242,14,37)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1557" width="0.5644%" height="15" fill="rgb(246,228,12)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1567.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1541" width="0.5644%" height="15" fill="rgb(213,55,15)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1551.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1525" width="0.5644%" height="15" fill="rgb(209,9,3)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1535.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1509" width="0.5644%" height="15" fill="rgb(230,59,30)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1519.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1493" width="0.5644%" height="15" fill="rgb(209,121,21)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1503.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1477" width="0.5644%" height="15" fill="rgb(220,109,13)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1461" width="0.5644%" height="15" fill="rgb(232,18,1)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1445" width="0.5644%" height="15" fill="rgb(215,41,42)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1429" width="0.5644%" height="15" fill="rgb(224,123,36)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1413" width="0.5644%" height="15" fill="rgb(240,125,3)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1397" width="0.5644%" height="15" fill="rgb(205,98,50)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1381" width="0.5644%" height="15" fill="rgb(205,185,37)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1365" width="0.5644%" height="15" fill="rgb(238,207,15)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1349" width="0.5644%" height="15" fill="rgb(213,199,42)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1333" width="0.5644%" height="15" fill="rgb(235,201,11)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1317" width="0.5644%" height="15" fill="rgb(207,46,11)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1301" width="0.5644%" height="15" fill="rgb(241,35,35)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1311.50"></text></g><g><title>malloc (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1285" width="0.5644%" height="15" fill="rgb(243,32,47)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1295.50"></text></g><g><title>[libc.so.6] (1,347,431 samples, 0.56%)</title><rect x="10.9438%" y="1269" width="0.5644%" height="15" fill="rgb(247,202,23)" fg:x="26126626" fg:w="1347431"/><text x="11.1938%" y="1279.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2693" width="2.4816%" height="15" fill="rgb(219,102,11)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2703.50">&lt;s..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2677" width="2.4816%" height="15" fill="rgb(243,110,44)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2687.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2661" width="2.4816%" height="15" fill="rgb(222,74,54)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2671.50">al..</text></g><g><title>alloc::slice::hack::to_vec (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2645" width="2.4816%" height="15" fill="rgb(216,99,12)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2655.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2629" width="2.4816%" height="15" fill="rgb(226,22,26)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2639.50">&lt;T..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2613" width="2.4816%" height="15" fill="rgb(217,163,10)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2623.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2597" width="2.4816%" height="15" fill="rgb(213,25,53)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2607.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2581" width="2.4816%" height="15" fill="rgb(252,105,26)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2591.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2565" width="2.4816%" height="15" fill="rgb(220,39,43)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2575.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2549" width="2.4816%" height="15" fill="rgb(229,68,48)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2559.50">&lt;s..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2533" width="2.4816%" height="15" fill="rgb(252,8,32)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2543.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2517" width="2.4816%" height="15" fill="rgb(223,20,43)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2527.50">al..</text></g><g><title>alloc::slice::hack::to_vec (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2501" width="2.4816%" height="15" fill="rgb(229,81,49)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2511.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2485" width="2.4816%" height="15" fill="rgb(236,28,36)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2495.50">&lt;T..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2469" width="2.4816%" height="15" fill="rgb(249,185,26)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2479.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2453" width="2.4816%" height="15" fill="rgb(249,174,33)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2463.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2437" width="2.4816%" height="15" fill="rgb(233,201,37)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2447.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,924,472 samples, 2.48%)</title><rect x="9.5679%" y="2421" width="2.4816%" height="15" fill="rgb(221,78,26)" fg:x="22841858" fg:w="5924472"/><text x="9.8179%" y="2431.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,636,253 samples, 1.94%)</title><rect x="10.1075%" y="2405" width="1.9420%" height="15" fill="rgb(250,127,30)" fg:x="24130077" fg:w="4636253"/><text x="10.3575%" y="2415.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,666,010 samples, 1.54%)</title><rect x="10.5139%" y="2389" width="1.5356%" height="15" fill="rgb(230,49,44)" fg:x="25100320" fg:w="3666010"/><text x="10.7639%" y="2399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,666,010 samples, 1.54%)</title><rect x="10.5139%" y="2373" width="1.5356%" height="15" fill="rgb(229,67,23)" fg:x="25100320" fg:w="3666010"/><text x="10.7639%" y="2383.50"></text></g><g><title>alloc::slice::hack::to_vec (3,666,010 samples, 1.54%)</title><rect x="10.5139%" y="2357" width="1.5356%" height="15" fill="rgb(249,83,47)" fg:x="25100320" fg:w="3666010"/><text x="10.7639%" y="2367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,666,010 samples, 1.54%)</title><rect x="10.5139%" y="2341" width="1.5356%" height="15" fill="rgb(215,43,3)" fg:x="25100320" fg:w="3666010"/><text x="10.7639%" y="2351.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,666,010 samples, 1.54%)</title><rect x="10.5139%" y="2325" width="1.5356%" height="15" fill="rgb(238,154,13)" fg:x="25100320" fg:w="3666010"/><text x="10.7639%" y="2335.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,666,010 samples, 1.54%)</title><rect x="10.5139%" y="2309" width="1.5356%" height="15" fill="rgb(219,56,2)" fg:x="25100320" fg:w="3666010"/><text x="10.7639%" y="2319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,666,010 samples, 1.54%)</title><rect x="10.5139%" y="2293" width="1.5356%" height="15" fill="rgb(233,0,4)" fg:x="25100320" fg:w="3666010"/><text x="10.7639%" y="2303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,666,010 samples, 1.54%)</title><rect x="10.5139%" y="2277" width="1.5356%" height="15" fill="rgb(235,30,7)" fg:x="25100320" fg:w="3666010"/><text x="10.7639%" y="2287.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,639,704 samples, 1.11%)</title><rect x="10.9438%" y="2261" width="1.1057%" height="15" fill="rgb(250,79,13)" fg:x="26126626" fg:w="2639704"/><text x="11.1938%" y="2271.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,292,273 samples, 0.54%)</title><rect x="11.5082%" y="2245" width="0.5413%" height="15" fill="rgb(211,146,34)" fg:x="27474057" fg:w="1292273"/><text x="11.7582%" y="2255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,292,273 samples, 0.54%)</title><rect x="11.5082%" y="2229" width="0.5413%" height="15" fill="rgb(228,22,38)" fg:x="27474057" fg:w="1292273"/><text x="11.7582%" y="2239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,292,273 samples, 0.54%)</title><rect x="11.5082%" y="2213" width="0.5413%" height="15" fill="rgb(235,168,5)" fg:x="27474057" fg:w="1292273"/><text x="11.7582%" y="2223.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (1,292,273 samples, 0.54%)</title><rect x="11.5082%" y="2197" width="0.5413%" height="15" fill="rgb(221,155,16)" fg:x="27474057" fg:w="1292273"/><text x="11.7582%" y="2207.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1,292,273 samples, 0.54%)</title><rect x="11.5082%" y="2181" width="0.5413%" height="15" fill="rgb(215,215,53)" fg:x="27474057" fg:w="1292273"/><text x="11.7582%" y="2191.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1,292,273 samples, 0.54%)</title><rect x="11.5082%" y="2165" width="0.5413%" height="15" fill="rgb(223,4,10)" fg:x="27474057" fg:w="1292273"/><text x="11.7582%" y="2175.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,292,273 samples, 0.54%)</title><rect x="11.5082%" y="2149" width="0.5413%" height="15" fill="rgb(234,103,6)" fg:x="27474057" fg:w="1292273"/><text x="11.7582%" y="2159.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,292,273 samples, 0.54%)</title><rect x="11.5082%" y="2133" width="0.5413%" height="15" fill="rgb(227,97,0)" fg:x="27474057" fg:w="1292273"/><text x="11.7582%" y="2143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,292,273 samples, 0.54%)</title><rect x="11.5082%" y="2117" width="0.5413%" height="15" fill="rgb(234,150,53)" fg:x="27474057" fg:w="1292273"/><text x="11.7582%" y="2127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,292,273 samples, 0.54%)</title><rect x="11.5082%" y="2101" width="0.5413%" height="15" fill="rgb(228,201,54)" fg:x="27474057" fg:w="1292273"/><text x="11.7582%" y="2111.50"></text></g><g><title>alloc::alloc::alloc (1,292,273 samples, 0.54%)</title><rect x="11.5082%" y="2085" width="0.5413%" height="15" fill="rgb(222,22,37)" fg:x="27474057" fg:w="1292273"/><text x="11.7582%" y="2095.50"></text></g><g><title>malloc (1,292,273 samples, 0.54%)</title><rect x="11.5082%" y="2069" width="0.5413%" height="15" fill="rgb(237,53,32)" fg:x="27474057" fg:w="1292273"/><text x="11.7582%" y="2079.50"></text></g><g><title>[libc.so.6] (1,292,273 samples, 0.54%)</title><rect x="11.5082%" y="2053" width="0.5413%" height="15" fill="rgb(233,25,53)" fg:x="27474057" fg:w="1292273"/><text x="11.7582%" y="2063.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (9,549,215 samples, 4.00%)</title><rect x="8.4618%" y="2837" width="3.9999%" height="15" fill="rgb(210,40,34)" fg:x="20201134" fg:w="9549215"/><text x="8.7118%" y="2847.50">&lt;ben..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,549,215 samples, 4.00%)</title><rect x="8.4618%" y="2821" width="3.9999%" height="15" fill="rgb(241,220,44)" fg:x="20201134" fg:w="9549215"/><text x="8.7118%" y="2831.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (9,549,215 samples, 4.00%)</title><rect x="8.4618%" y="2805" width="3.9999%" height="15" fill="rgb(235,28,35)" fg:x="20201134" fg:w="9549215"/><text x="8.7118%" y="2815.50">&lt;ser..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (9,549,215 samples, 4.00%)</title><rect x="8.4618%" y="2789" width="3.9999%" height="15" fill="rgb(210,56,17)" fg:x="20201134" fg:w="9549215"/><text x="8.7118%" y="2799.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9,549,215 samples, 4.00%)</title><rect x="8.4618%" y="2773" width="3.9999%" height="15" fill="rgb(224,130,29)" fg:x="20201134" fg:w="9549215"/><text x="8.7118%" y="2783.50">&lt;all..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,244,835 samples, 3.45%)</title><rect x="9.0082%" y="2757" width="3.4536%" height="15" fill="rgb(235,212,8)" fg:x="21505514" fg:w="8244835"/><text x="9.2582%" y="2767.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (6,908,491 samples, 2.89%)</title><rect x="9.5679%" y="2741" width="2.8938%" height="15" fill="rgb(223,33,50)" fg:x="22841858" fg:w="6908491"/><text x="9.8179%" y="2751.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (6,908,491 samples, 2.89%)</title><rect x="9.5679%" y="2725" width="2.8938%" height="15" fill="rgb(219,149,13)" fg:x="22841858" fg:w="6908491"/><text x="9.8179%" y="2735.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6,908,491 samples, 2.89%)</title><rect x="9.5679%" y="2709" width="2.8938%" height="15" fill="rgb(250,156,29)" fg:x="22841858" fg:w="6908491"/><text x="9.8179%" y="2719.50">&lt;a..</text></g><g><title>[unknown] (984,019 samples, 0.41%)</title><rect x="12.0496%" y="2693" width="0.4122%" height="15" fill="rgb(216,193,19)" fg:x="28766330" fg:w="984019"/><text x="12.2996%" y="2703.50"></text></g><g><title>[libc.so.6] (984,019 samples, 0.41%)</title><rect x="12.0496%" y="2677" width="0.4122%" height="15" fill="rgb(216,135,14)" fg:x="28766330" fg:w="984019"/><text x="12.2996%" y="2687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2837" width="0.4111%" height="15" fill="rgb(241,47,5)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2821" width="0.4111%" height="15" fill="rgb(233,42,35)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2831.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2805" width="0.4111%" height="15" fill="rgb(231,13,6)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2789" width="0.4111%" height="15" fill="rgb(207,181,40)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2773" width="0.4111%" height="15" fill="rgb(254,173,49)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2757" width="0.4111%" height="15" fill="rgb(221,1,38)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2741" width="0.4111%" height="15" fill="rgb(206,124,46)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2751.50"></text></g><g><title>core::mem::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2725" width="0.4111%" height="15" fill="rgb(249,21,11)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2709" width="0.4111%" height="15" fill="rgb(222,201,40)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2719.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2693" width="0.4111%" height="15" fill="rgb(235,61,29)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2677" width="0.4111%" height="15" fill="rgb(219,207,3)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2661" width="0.4111%" height="15" fill="rgb(222,56,46)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2671.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2645" width="0.4111%" height="15" fill="rgb(239,76,54)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2655.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2629" width="0.4111%" height="15" fill="rgb(231,124,27)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2613" width="0.4111%" height="15" fill="rgb(249,195,6)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2597" width="0.4111%" height="15" fill="rgb(237,174,47)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2581" width="0.4111%" height="15" fill="rgb(206,201,31)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2565" width="0.4111%" height="15" fill="rgb(231,57,52)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2575.50"></text></g><g><title>core::mem::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2549" width="0.4111%" height="15" fill="rgb(248,177,22)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2533" width="0.4111%" height="15" fill="rgb(215,211,37)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2517" width="0.4111%" height="15" fill="rgb(241,128,51)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2501" width="0.4111%" height="15" fill="rgb(227,165,31)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2485" width="0.4111%" height="15" fill="rgb(228,167,24)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2495.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2469" width="0.4111%" height="15" fill="rgb(228,143,12)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2479.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2453" width="0.4111%" height="15" fill="rgb(249,149,8)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2437" width="0.4111%" height="15" fill="rgb(243,35,44)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2421" width="0.4111%" height="15" fill="rgb(246,89,9)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2405" width="0.4111%" height="15" fill="rgb(233,213,13)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2389" width="0.4111%" height="15" fill="rgb(233,141,41)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2373" width="0.4111%" height="15" fill="rgb(239,167,4)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2357" width="0.4111%" height="15" fill="rgb(209,217,16)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2341" width="0.4111%" height="15" fill="rgb(219,88,35)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2325" width="0.4111%" height="15" fill="rgb(220,193,23)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2335.50"></text></g><g><title>core::mem::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2309" width="0.4111%" height="15" fill="rgb(230,90,52)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2293" width="0.4111%" height="15" fill="rgb(252,106,19)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2277" width="0.4111%" height="15" fill="rgb(206,74,20)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2261" width="0.4111%" height="15" fill="rgb(230,138,44)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2245" width="0.4111%" height="15" fill="rgb(235,182,43)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2255.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2229" width="0.4111%" height="15" fill="rgb(242,16,51)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2239.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2213" width="0.4111%" height="15" fill="rgb(248,9,4)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2197" width="0.4111%" height="15" fill="rgb(210,31,22)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2181" width="0.4111%" height="15" fill="rgb(239,54,39)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2165" width="0.4111%" height="15" fill="rgb(230,99,41)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2149" width="0.4111%" height="15" fill="rgb(253,106,12)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2133" width="0.4111%" height="15" fill="rgb(213,46,41)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2117" width="0.4111%" height="15" fill="rgb(215,133,35)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2101" width="0.4111%" height="15" fill="rgb(213,28,5)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2085" width="0.4111%" height="15" fill="rgb(215,77,49)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2095.50"></text></g><g><title>core::mem::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2069" width="0.4111%" height="15" fill="rgb(248,100,22)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2053" width="0.4111%" height="15" fill="rgb(208,67,9)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2063.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2037" width="0.4111%" height="15" fill="rgb(219,133,21)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2047.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2021" width="0.4111%" height="15" fill="rgb(246,46,29)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2031.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="2005" width="0.4111%" height="15" fill="rgb(246,185,52)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="1989" width="0.4111%" height="15" fill="rgb(252,136,11)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="1973" width="0.4111%" height="15" fill="rgb(219,138,53)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (981,351 samples, 0.41%)</title><rect x="12.4617%" y="1957" width="0.4111%" height="15" fill="rgb(211,51,23)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="1967.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (981,351 samples, 0.41%)</title><rect x="12.4617%" y="1941" width="0.4111%" height="15" fill="rgb(247,221,28)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (981,351 samples, 0.41%)</title><rect x="12.4617%" y="1925" width="0.4111%" height="15" fill="rgb(251,222,45)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (981,351 samples, 0.41%)</title><rect x="12.4617%" y="1909" width="0.4111%" height="15" fill="rgb(217,162,53)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="1919.50"></text></g><g><title>alloc::alloc::dealloc (981,351 samples, 0.41%)</title><rect x="12.4617%" y="1893" width="0.4111%" height="15" fill="rgb(229,93,14)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="1903.50"></text></g><g><title>cfree (981,351 samples, 0.41%)</title><rect x="12.4617%" y="1877" width="0.4111%" height="15" fill="rgb(209,67,49)" fg:x="29750349" fg:w="981351"/><text x="12.7117%" y="1887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1,299,550 samples, 0.54%)</title><rect x="12.8728%" y="2821" width="0.5444%" height="15" fill="rgb(213,87,29)" fg:x="30731700" fg:w="1299550"/><text x="13.1228%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,299,550 samples, 0.54%)</title><rect x="12.8728%" y="2805" width="0.5444%" height="15" fill="rgb(205,151,52)" fg:x="30731700" fg:w="1299550"/><text x="13.1228%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,299,550 samples, 0.54%)</title><rect x="12.8728%" y="2789" width="0.5444%" height="15" fill="rgb(253,215,39)" fg:x="30731700" fg:w="1299550"/><text x="13.1228%" y="2799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,299,550 samples, 0.54%)</title><rect x="12.8728%" y="2773" width="0.5444%" height="15" fill="rgb(221,220,41)" fg:x="30731700" fg:w="1299550"/><text x="13.1228%" y="2783.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,299,550 samples, 0.54%)</title><rect x="12.8728%" y="2757" width="0.5444%" height="15" fill="rgb(218,133,21)" fg:x="30731700" fg:w="1299550"/><text x="13.1228%" y="2767.50"></text></g><g><title>malloc (1,299,550 samples, 0.54%)</title><rect x="12.8728%" y="2741" width="0.5444%" height="15" fill="rgb(221,193,43)" fg:x="30731700" fg:w="1299550"/><text x="13.1228%" y="2751.50"></text></g><g><title>[libc.so.6] (1,299,550 samples, 0.54%)</title><rect x="12.8728%" y="2725" width="0.5444%" height="15" fill="rgb(240,128,52)" fg:x="30731700" fg:w="1299550"/><text x="13.1228%" y="2735.50"></text></g><g><title>[libc.so.6] (1,299,550 samples, 0.54%)</title><rect x="12.8728%" y="2709" width="0.5444%" height="15" fill="rgb(253,114,12)" fg:x="30731700" fg:w="1299550"/><text x="13.1228%" y="2719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,246,259 samples, 0.52%)</title><rect x="13.4172%" y="2709" width="0.5220%" height="15" fill="rgb(215,223,47)" fg:x="32031250" fg:w="1246259"/><text x="13.6672%" y="2719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,246,259 samples, 0.52%)</title><rect x="13.4172%" y="2693" width="0.5220%" height="15" fill="rgb(248,225,23)" fg:x="32031250" fg:w="1246259"/><text x="13.6672%" y="2703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,246,259 samples, 0.52%)</title><rect x="13.4172%" y="2677" width="0.5220%" height="15" fill="rgb(250,108,0)" fg:x="32031250" fg:w="1246259"/><text x="13.6672%" y="2687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,246,259 samples, 0.52%)</title><rect x="13.4172%" y="2661" width="0.5220%" height="15" fill="rgb(228,208,7)" fg:x="32031250" fg:w="1246259"/><text x="13.6672%" y="2671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,246,259 samples, 0.52%)</title><rect x="13.4172%" y="2645" width="0.5220%" height="15" fill="rgb(244,45,10)" fg:x="32031250" fg:w="1246259"/><text x="13.6672%" y="2655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,246,259 samples, 0.52%)</title><rect x="13.4172%" y="2629" width="0.5220%" height="15" fill="rgb(207,125,25)" fg:x="32031250" fg:w="1246259"/><text x="13.6672%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,246,259 samples, 0.52%)</title><rect x="13.4172%" y="2613" width="0.5220%" height="15" fill="rgb(210,195,18)" fg:x="32031250" fg:w="1246259"/><text x="13.6672%" y="2623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,246,259 samples, 0.52%)</title><rect x="13.4172%" y="2597" width="0.5220%" height="15" fill="rgb(249,80,12)" fg:x="32031250" fg:w="1246259"/><text x="13.6672%" y="2607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,246,259 samples, 0.52%)</title><rect x="13.4172%" y="2581" width="0.5220%" height="15" fill="rgb(221,65,9)" fg:x="32031250" fg:w="1246259"/><text x="13.6672%" y="2591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,246,259 samples, 0.52%)</title><rect x="13.4172%" y="2565" width="0.5220%" height="15" fill="rgb(235,49,36)" fg:x="32031250" fg:w="1246259"/><text x="13.6672%" y="2575.50"></text></g><g><title>alloc::alloc::realloc (1,246,259 samples, 0.52%)</title><rect x="13.4172%" y="2549" width="0.5220%" height="15" fill="rgb(225,32,20)" fg:x="32031250" fg:w="1246259"/><text x="13.6672%" y="2559.50"></text></g><g><title>realloc (1,246,259 samples, 0.52%)</title><rect x="13.4172%" y="2533" width="0.5220%" height="15" fill="rgb(215,141,46)" fg:x="32031250" fg:w="1246259"/><text x="13.6672%" y="2543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,465,340 samples, 1.03%)</title><rect x="13.4172%" y="2805" width="1.0327%" height="15" fill="rgb(250,160,47)" fg:x="32031250" fg:w="2465340"/><text x="13.6672%" y="2815.50"></text></g><g><title>benchmark::extract_path_from_command::_{{closure}} (2,465,340 samples, 1.03%)</title><rect x="13.4172%" y="2789" width="1.0327%" height="15" fill="rgb(216,222,40)" fg:x="32031250" fg:w="2465340"/><text x="13.6672%" y="2799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,465,340 samples, 1.03%)</title><rect x="13.4172%" y="2773" width="1.0327%" height="15" fill="rgb(234,217,39)" fg:x="32031250" fg:w="2465340"/><text x="13.6672%" y="2783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,465,340 samples, 1.03%)</title><rect x="13.4172%" y="2757" width="1.0327%" height="15" fill="rgb(207,178,40)" fg:x="32031250" fg:w="2465340"/><text x="13.6672%" y="2767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,465,340 samples, 1.03%)</title><rect x="13.4172%" y="2741" width="1.0327%" height="15" fill="rgb(221,136,13)" fg:x="32031250" fg:w="2465340"/><text x="13.6672%" y="2751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,465,340 samples, 1.03%)</title><rect x="13.4172%" y="2725" width="1.0327%" height="15" fill="rgb(249,199,10)" fg:x="32031250" fg:w="2465340"/><text x="13.6672%" y="2735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,219,081 samples, 0.51%)</title><rect x="13.9392%" y="2709" width="0.5106%" height="15" fill="rgb(249,222,13)" fg:x="33277509" fg:w="1219081"/><text x="14.1892%" y="2719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,219,081 samples, 0.51%)</title><rect x="13.9392%" y="2693" width="0.5106%" height="15" fill="rgb(244,185,38)" fg:x="33277509" fg:w="1219081"/><text x="14.1892%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,219,081 samples, 0.51%)</title><rect x="13.9392%" y="2677" width="0.5106%" height="15" fill="rgb(236,202,9)" fg:x="33277509" fg:w="1219081"/><text x="14.1892%" y="2687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,219,081 samples, 0.51%)</title><rect x="13.9392%" y="2661" width="0.5106%" height="15" fill="rgb(250,229,37)" fg:x="33277509" fg:w="1219081"/><text x="14.1892%" y="2671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,219,081 samples, 0.51%)</title><rect x="13.9392%" y="2645" width="0.5106%" height="15" fill="rgb(206,174,23)" fg:x="33277509" fg:w="1219081"/><text x="14.1892%" y="2655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,219,081 samples, 0.51%)</title><rect x="13.9392%" y="2629" width="0.5106%" height="15" fill="rgb(211,33,43)" fg:x="33277509" fg:w="1219081"/><text x="14.1892%" y="2639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,219,081 samples, 0.51%)</title><rect x="13.9392%" y="2613" width="0.5106%" height="15" fill="rgb(245,58,50)" fg:x="33277509" fg:w="1219081"/><text x="14.1892%" y="2623.50"></text></g><g><title>alloc::alloc::alloc (1,219,081 samples, 0.51%)</title><rect x="13.9392%" y="2597" width="0.5106%" height="15" fill="rgb(244,68,36)" fg:x="33277509" fg:w="1219081"/><text x="14.1892%" y="2607.50"></text></g><g><title>malloc (1,219,081 samples, 0.51%)</title><rect x="13.9392%" y="2581" width="0.5106%" height="15" fill="rgb(232,229,15)" fg:x="33277509" fg:w="1219081"/><text x="14.1892%" y="2591.50"></text></g><g><title>[libc.so.6] (1,219,081 samples, 0.51%)</title><rect x="13.9392%" y="2565" width="0.5106%" height="15" fill="rgb(254,30,23)" fg:x="33277509" fg:w="1219081"/><text x="14.1892%" y="2575.50"></text></g><g><title>benchmark::extract_path_from_command (3,824,391 samples, 1.60%)</title><rect x="13.4172%" y="2821" width="1.6019%" height="15" fill="rgb(235,160,14)" fg:x="32031250" fg:w="3824391"/><text x="13.6672%" y="2831.50"></text></g><g><title>serde_json::value::Value::get (1,359,051 samples, 0.57%)</title><rect x="14.4498%" y="2805" width="0.5693%" height="15" fill="rgb(212,155,44)" fg:x="34496590" fg:w="1359051"/><text x="14.6998%" y="2815.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,359,051 samples, 0.57%)</title><rect x="14.4498%" y="2789" width="0.5693%" height="15" fill="rgb(226,2,50)" fg:x="34496590" fg:w="1359051"/><text x="14.6998%" y="2799.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,359,051 samples, 0.57%)</title><rect x="14.4498%" y="2773" width="0.5693%" height="15" fill="rgb(234,177,6)" fg:x="34496590" fg:w="1359051"/><text x="14.6998%" y="2783.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,359,051 samples, 0.57%)</title><rect x="14.4498%" y="2757" width="0.5693%" height="15" fill="rgb(217,24,9)" fg:x="34496590" fg:w="1359051"/><text x="14.6998%" y="2767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,359,051 samples, 0.57%)</title><rect x="14.4498%" y="2741" width="0.5693%" height="15" fill="rgb(220,13,46)" fg:x="34496590" fg:w="1359051"/><text x="14.6998%" y="2751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,359,051 samples, 0.57%)</title><rect x="14.4498%" y="2725" width="0.5693%" height="15" fill="rgb(239,221,27)" fg:x="34496590" fg:w="1359051"/><text x="14.6998%" y="2735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,359,051 samples, 0.57%)</title><rect x="14.4498%" y="2709" width="0.5693%" height="15" fill="rgb(222,198,25)" fg:x="34496590" fg:w="1359051"/><text x="14.6998%" y="2719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,359,051 samples, 0.57%)</title><rect x="14.4498%" y="2693" width="0.5693%" height="15" fill="rgb(211,99,13)" fg:x="34496590" fg:w="1359051"/><text x="14.6998%" y="2703.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,359,051 samples, 0.57%)</title><rect x="14.4498%" y="2677" width="0.5693%" height="15" fill="rgb(232,111,31)" fg:x="34496590" fg:w="1359051"/><text x="14.6998%" y="2687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,359,051 samples, 0.57%)</title><rect x="14.4498%" y="2661" width="0.5693%" height="15" fill="rgb(245,82,37)" fg:x="34496590" fg:w="1359051"/><text x="14.6998%" y="2671.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,359,051 samples, 0.57%)</title><rect x="14.4498%" y="2645" width="0.5693%" height="15" fill="rgb(227,149,46)" fg:x="34496590" fg:w="1359051"/><text x="14.6998%" y="2655.50"></text></g><g><title>[libc.so.6] (1,359,051 samples, 0.57%)</title><rect x="14.4498%" y="2629" width="0.5693%" height="15" fill="rgb(218,36,50)" fg:x="34496590" fg:w="1359051"/><text x="14.6998%" y="2639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,661,242 samples, 1.11%)</title><rect x="15.0191%" y="2805" width="1.1147%" height="15" fill="rgb(226,80,48)" fg:x="35855641" fg:w="2661242"/><text x="15.2691%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,661,242 samples, 1.11%)</title><rect x="15.0191%" y="2789" width="1.1147%" height="15" fill="rgb(238,224,15)" fg:x="35855641" fg:w="2661242"/><text x="15.2691%" y="2799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,661,242 samples, 1.11%)</title><rect x="15.0191%" y="2773" width="1.1147%" height="15" fill="rgb(241,136,10)" fg:x="35855641" fg:w="2661242"/><text x="15.2691%" y="2783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,661,242 samples, 1.11%)</title><rect x="15.0191%" y="2757" width="1.1147%" height="15" fill="rgb(208,32,45)" fg:x="35855641" fg:w="2661242"/><text x="15.2691%" y="2767.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,661,242 samples, 1.11%)</title><rect x="15.0191%" y="2741" width="1.1147%" height="15" fill="rgb(207,135,9)" fg:x="35855641" fg:w="2661242"/><text x="15.2691%" y="2751.50"></text></g><g><title>malloc (2,661,242 samples, 1.11%)</title><rect x="15.0191%" y="2725" width="1.1147%" height="15" fill="rgb(206,86,44)" fg:x="35855641" fg:w="2661242"/><text x="15.2691%" y="2735.50"></text></g><g><title>[libc.so.6] (2,661,242 samples, 1.11%)</title><rect x="15.0191%" y="2709" width="1.1147%" height="15" fill="rgb(245,177,15)" fg:x="35855641" fg:w="2661242"/><text x="15.2691%" y="2719.50"></text></g><g><title>[libc.so.6] (2,661,242 samples, 1.11%)</title><rect x="15.0191%" y="2693" width="1.1147%" height="15" fill="rgb(206,64,50)" fg:x="35855641" fg:w="2661242"/><text x="15.2691%" y="2703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,227,205 samples, 0.51%)</title><rect x="16.1338%" y="2789" width="0.5140%" height="15" fill="rgb(234,36,40)" fg:x="38516883" fg:w="1227205"/><text x="16.3838%" y="2799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,227,205 samples, 0.51%)</title><rect x="16.1338%" y="2773" width="0.5140%" height="15" fill="rgb(213,64,8)" fg:x="38516883" fg:w="1227205"/><text x="16.3838%" y="2783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,227,205 samples, 0.51%)</title><rect x="16.1338%" y="2757" width="0.5140%" height="15" fill="rgb(210,75,36)" fg:x="38516883" fg:w="1227205"/><text x="16.3838%" y="2767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,227,205 samples, 0.51%)</title><rect x="16.1338%" y="2741" width="0.5140%" height="15" fill="rgb(229,88,21)" fg:x="38516883" fg:w="1227205"/><text x="16.3838%" y="2751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,227,205 samples, 0.51%)</title><rect x="16.1338%" y="2725" width="0.5140%" height="15" fill="rgb(252,204,47)" fg:x="38516883" fg:w="1227205"/><text x="16.3838%" y="2735.50"></text></g><g><title>malloc (1,227,205 samples, 0.51%)</title><rect x="16.1338%" y="2709" width="0.5140%" height="15" fill="rgb(208,77,27)" fg:x="38516883" fg:w="1227205"/><text x="16.3838%" y="2719.50"></text></g><g><title>[libc.so.6] (1,227,205 samples, 0.51%)</title><rect x="16.1338%" y="2693" width="0.5140%" height="15" fill="rgb(221,76,26)" fg:x="38516883" fg:w="1227205"/><text x="16.3838%" y="2703.50"></text></g><g><title>[libc.so.6] (1,227,205 samples, 0.51%)</title><rect x="16.1338%" y="2677" width="0.5140%" height="15" fill="rgb(225,139,18)" fg:x="38516883" fg:w="1227205"/><text x="16.3838%" y="2687.50"></text></g><g><title>[libc.so.6] (1,227,205 samples, 0.51%)</title><rect x="16.1338%" y="2661" width="0.5140%" height="15" fill="rgb(230,137,11)" fg:x="38516883" fg:w="1227205"/><text x="16.3838%" y="2671.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2773" width="0.5395%" height="15" fill="rgb(212,28,1)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2783.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2757" width="0.5395%" height="15" fill="rgb(248,164,17)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2767.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2741" width="0.5395%" height="15" fill="rgb(222,171,42)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2725" width="0.5395%" height="15" fill="rgb(243,84,45)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2735.50"></text></g><g><title>alloc::string::String::push_str (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2709" width="0.5395%" height="15" fill="rgb(252,49,23)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2693" width="0.5395%" height="15" fill="rgb(215,19,7)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2677" width="0.5395%" height="15" fill="rgb(238,81,41)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2661" width="0.5395%" height="15" fill="rgb(210,199,37)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2645" width="0.5395%" height="15" fill="rgb(244,192,49)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2629" width="0.5395%" height="15" fill="rgb(226,211,11)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2613" width="0.5395%" height="15" fill="rgb(236,162,54)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2597" width="0.5395%" height="15" fill="rgb(220,229,9)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2581" width="0.5395%" height="15" fill="rgb(250,87,22)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2565" width="0.5395%" height="15" fill="rgb(239,43,17)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2575.50"></text></g><g><title>malloc (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2549" width="0.5395%" height="15" fill="rgb(231,177,25)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2559.50"></text></g><g><title>[libc.so.6] (1,287,960 samples, 0.54%)</title><rect x="16.6479%" y="2533" width="0.5395%" height="15" fill="rgb(219,179,1)" fg:x="39744088" fg:w="1287960"/><text x="16.8979%" y="2543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,275,282 samples, 0.53%)</title><rect x="17.1874%" y="2773" width="0.5342%" height="15" fill="rgb(238,219,53)" fg:x="41032048" fg:w="1275282"/><text x="17.4374%" y="2783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,275,282 samples, 0.53%)</title><rect x="17.1874%" y="2757" width="0.5342%" height="15" fill="rgb(232,167,36)" fg:x="41032048" fg:w="1275282"/><text x="17.4374%" y="2767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,275,282 samples, 0.53%)</title><rect x="17.1874%" y="2741" width="0.5342%" height="15" fill="rgb(244,19,51)" fg:x="41032048" fg:w="1275282"/><text x="17.4374%" y="2751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,275,282 samples, 0.53%)</title><rect x="17.1874%" y="2725" width="0.5342%" height="15" fill="rgb(224,6,22)" fg:x="41032048" fg:w="1275282"/><text x="17.4374%" y="2735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,275,282 samples, 0.53%)</title><rect x="17.1874%" y="2709" width="0.5342%" height="15" fill="rgb(224,145,5)" fg:x="41032048" fg:w="1275282"/><text x="17.4374%" y="2719.50"></text></g><g><title>malloc (1,275,282 samples, 0.53%)</title><rect x="17.1874%" y="2693" width="0.5342%" height="15" fill="rgb(234,130,49)" fg:x="41032048" fg:w="1275282"/><text x="17.4374%" y="2703.50"></text></g><g><title>[libc.so.6] (1,275,282 samples, 0.53%)</title><rect x="17.1874%" y="2677" width="0.5342%" height="15" fill="rgb(254,6,2)" fg:x="41032048" fg:w="1275282"/><text x="17.4374%" y="2687.50"></text></g><g><title>[libc.so.6] (1,275,282 samples, 0.53%)</title><rect x="17.1874%" y="2661" width="0.5342%" height="15" fill="rgb(208,96,46)" fg:x="41032048" fg:w="1275282"/><text x="17.4374%" y="2671.50"></text></g><g><title>[libc.so.6] (1,275,282 samples, 0.53%)</title><rect x="17.1874%" y="2645" width="0.5342%" height="15" fill="rgb(239,3,39)" fg:x="41032048" fg:w="1275282"/><text x="17.4374%" y="2655.50"></text></g><g><title>benchmark::json_to_html_node (4,709,259 samples, 1.97%)</title><rect x="16.1338%" y="2805" width="1.9726%" height="15" fill="rgb(233,210,1)" fg:x="38516883" fg:w="4709259"/><text x="16.3838%" y="2815.50">b..</text></g><g><title>benchmark::json_to_html_node (3,482,054 samples, 1.46%)</title><rect x="16.6479%" y="2789" width="1.4586%" height="15" fill="rgb(244,137,37)" fg:x="39744088" fg:w="3482054"/><text x="16.8979%" y="2799.50"></text></g><g><title>benchmark::json_to_html_node (918,812 samples, 0.38%)</title><rect x="17.7216%" y="2773" width="0.3849%" height="15" fill="rgb(240,136,2)" fg:x="42307330" fg:w="918812"/><text x="17.9716%" y="2783.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (918,812 samples, 0.38%)</title><rect x="17.7216%" y="2757" width="0.3849%" height="15" fill="rgb(239,18,37)" fg:x="42307330" fg:w="918812"/><text x="17.9716%" y="2767.50"></text></g><g><title>css_bitvector_compiler::BitVector::new (918,812 samples, 0.38%)</title><rect x="17.7216%" y="2741" width="0.3849%" height="15" fill="rgb(218,185,22)" fg:x="42307330" fg:w="918812"/><text x="17.9716%" y="2751.50"></text></g><g><title>alloc::vec::from_elem (918,812 samples, 0.38%)</title><rect x="17.7216%" y="2725" width="0.3849%" height="15" fill="rgb(225,218,4)" fg:x="42307330" fg:w="918812"/><text x="17.9716%" y="2735.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (918,812 samples, 0.38%)</title><rect x="17.7216%" y="2709" width="0.3849%" height="15" fill="rgb(230,182,32)" fg:x="42307330" fg:w="918812"/><text x="17.9716%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (918,812 samples, 0.38%)</title><rect x="17.7216%" y="2693" width="0.3849%" height="15" fill="rgb(242,56,43)" fg:x="42307330" fg:w="918812"/><text x="17.9716%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (918,812 samples, 0.38%)</title><rect x="17.7216%" y="2677" width="0.3849%" height="15" fill="rgb(233,99,24)" fg:x="42307330" fg:w="918812"/><text x="17.9716%" y="2687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (918,812 samples, 0.38%)</title><rect x="17.7216%" y="2661" width="0.3849%" height="15" fill="rgb(234,209,42)" fg:x="42307330" fg:w="918812"/><text x="17.9716%" y="2671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (918,812 samples, 0.38%)</title><rect x="17.7216%" y="2645" width="0.3849%" height="15" fill="rgb(227,7,12)" fg:x="42307330" fg:w="918812"/><text x="17.9716%" y="2655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (918,812 samples, 0.38%)</title><rect x="17.7216%" y="2629" width="0.3849%" height="15" fill="rgb(245,203,43)" fg:x="42307330" fg:w="918812"/><text x="17.9716%" y="2639.50"></text></g><g><title>alloc::alloc::alloc_zeroed (918,812 samples, 0.38%)</title><rect x="17.7216%" y="2613" width="0.3849%" height="15" fill="rgb(238,205,33)" fg:x="42307330" fg:w="918812"/><text x="17.9716%" y="2623.50"></text></g><g><title>__libc_calloc (918,812 samples, 0.38%)</title><rect x="17.7216%" y="2597" width="0.3849%" height="15" fill="rgb(231,56,7)" fg:x="42307330" fg:w="918812"/><text x="17.9716%" y="2607.50"></text></g><g><title>[libc.so.6] (918,812 samples, 0.38%)</title><rect x="17.7216%" y="2581" width="0.3849%" height="15" fill="rgb(244,186,29)" fg:x="42307330" fg:w="918812"/><text x="17.9716%" y="2591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2805" width="0.5562%" height="15" fill="rgb(234,111,31)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2815.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2789" width="0.5562%" height="15" fill="rgb(241,149,10)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2799.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2773" width="0.5562%" height="15" fill="rgb(249,206,44)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2783.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2757" width="0.5562%" height="15" fill="rgb(251,153,30)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2767.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2741" width="0.5562%" height="15" fill="rgb(239,152,38)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2725" width="0.5562%" height="15" fill="rgb(249,139,47)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2709" width="0.5562%" height="15" fill="rgb(244,64,35)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2693" width="0.5562%" height="15" fill="rgb(216,46,15)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2677" width="0.5562%" height="15" fill="rgb(250,74,19)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2687.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2661" width="0.5562%" height="15" fill="rgb(249,42,33)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2645" width="0.5562%" height="15" fill="rgb(242,149,17)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2629" width="0.5562%" height="15" fill="rgb(244,29,21)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2613" width="0.5562%" height="15" fill="rgb(220,130,37)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2623.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2597" width="0.5562%" height="15" fill="rgb(211,67,2)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2607.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2581" width="0.5562%" height="15" fill="rgb(235,68,52)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2591.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2565" width="0.5562%" height="15" fill="rgb(246,142,3)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2575.50"></text></g><g><title>core::str::pattern::Searcher::next_match (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2549" width="0.5562%" height="15" fill="rgb(241,25,7)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2559.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2533" width="0.5562%" height="15" fill="rgb(242,119,39)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2543.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2517" width="0.5562%" height="15" fill="rgb(241,98,45)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2527.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2501" width="0.5562%" height="15" fill="rgb(254,28,30)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2511.50"></text></g><g><title>core::str::validations::next_code_point (1,327,755 samples, 0.56%)</title><rect x="18.1064%" y="2485" width="0.5562%" height="15" fill="rgb(241,142,54)" fg:x="43226142" fg:w="1327755"/><text x="18.3564%" y="2495.50"></text></g><g><title>benchmark::apply_frame_modifications (15,147,795 samples, 6.35%)</title><rect x="12.8728%" y="2837" width="6.3451%" height="15" fill="rgb(222,85,15)" fg:x="30731700" fg:w="15147795"/><text x="13.1228%" y="2847.50">benchmar..</text></g><g><title>benchmark::json_to_html_node (10,023,854 samples, 4.20%)</title><rect x="15.0191%" y="2821" width="4.1988%" height="15" fill="rgb(210,85,47)" fg:x="35855641" fg:w="10023854"/><text x="15.2691%" y="2831.50">bench..</text></g><g><title>serde_json::value::Value::as_object (1,325,598 samples, 0.56%)</title><rect x="18.6626%" y="2805" width="0.5553%" height="15" fill="rgb(224,206,25)" fg:x="44553897" fg:w="1325598"/><text x="18.9126%" y="2815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,509,748 samples, 1.47%)</title><rect x="19.2179%" y="2485" width="1.4702%" height="15" fill="rgb(243,201,19)" fg:x="45879495" fg:w="3509748"/><text x="19.4679%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,509,748 samples, 1.47%)</title><rect x="19.2179%" y="2469" width="1.4702%" height="15" fill="rgb(236,59,4)" fg:x="45879495" fg:w="3509748"/><text x="19.4679%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,509,748 samples, 1.47%)</title><rect x="19.2179%" y="2453" width="1.4702%" height="15" fill="rgb(254,179,45)" fg:x="45879495" fg:w="3509748"/><text x="19.4679%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,509,748 samples, 1.47%)</title><rect x="19.2179%" y="2437" width="1.4702%" height="15" fill="rgb(226,14,10)" fg:x="45879495" fg:w="3509748"/><text x="19.4679%" y="2447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,509,748 samples, 1.47%)</title><rect x="19.2179%" y="2421" width="1.4702%" height="15" fill="rgb(244,27,41)" fg:x="45879495" fg:w="3509748"/><text x="19.4679%" y="2431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,509,748 samples, 1.47%)</title><rect x="19.2179%" y="2405" width="1.4702%" height="15" fill="rgb(235,35,32)" fg:x="45879495" fg:w="3509748"/><text x="19.4679%" y="2415.50"></text></g><g><title>alloc::alloc::alloc (3,509,748 samples, 1.47%)</title><rect x="19.2179%" y="2389" width="1.4702%" height="15" fill="rgb(218,68,31)" fg:x="45879495" fg:w="3509748"/><text x="19.4679%" y="2399.50"></text></g><g><title>malloc (3,509,748 samples, 1.47%)</title><rect x="19.2179%" y="2373" width="1.4702%" height="15" fill="rgb(207,120,37)" fg:x="45879495" fg:w="3509748"/><text x="19.4679%" y="2383.50"></text></g><g><title>[libc.so.6] (3,509,748 samples, 1.47%)</title><rect x="19.2179%" y="2357" width="1.4702%" height="15" fill="rgb(227,98,0)" fg:x="45879495" fg:w="3509748"/><text x="19.4679%" y="2367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,494,298 samples, 1.88%)</title><rect x="19.2179%" y="2565" width="1.8826%" height="15" fill="rgb(207,7,3)" fg:x="45879495" fg:w="4494298"/><text x="19.4679%" y="2575.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,494,298 samples, 1.88%)</title><rect x="19.2179%" y="2549" width="1.8826%" height="15" fill="rgb(206,98,19)" fg:x="45879495" fg:w="4494298"/><text x="19.4679%" y="2559.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,494,298 samples, 1.88%)</title><rect x="19.2179%" y="2533" width="1.8826%" height="15" fill="rgb(217,5,26)" fg:x="45879495" fg:w="4494298"/><text x="19.4679%" y="2543.50">a..</text></g><g><title>alloc::slice::hack::to_vec (4,494,298 samples, 1.88%)</title><rect x="19.2179%" y="2517" width="1.8826%" height="15" fill="rgb(235,190,38)" fg:x="45879495" fg:w="4494298"/><text x="19.4679%" y="2527.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,494,298 samples, 1.88%)</title><rect x="19.2179%" y="2501" width="1.8826%" height="15" fill="rgb(247,86,24)" fg:x="45879495" fg:w="4494298"/><text x="19.4679%" y="2511.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (984,550 samples, 0.41%)</title><rect x="20.6880%" y="2485" width="0.4124%" height="15" fill="rgb(205,101,16)" fg:x="49389243" fg:w="984550"/><text x="20.9380%" y="2495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (984,550 samples, 0.41%)</title><rect x="20.6880%" y="2469" width="0.4124%" height="15" fill="rgb(246,168,33)" fg:x="49389243" fg:w="984550"/><text x="20.9380%" y="2479.50"></text></g><g><title>[libc.so.6] (984,550 samples, 0.41%)</title><rect x="20.6880%" y="2453" width="0.4124%" height="15" fill="rgb(231,114,1)" fg:x="49389243" fg:w="984550"/><text x="20.9380%" y="2463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,309,572 samples, 0.55%)</title><rect x="21.1004%" y="2485" width="0.5485%" height="15" fill="rgb(207,184,53)" fg:x="50373793" fg:w="1309572"/><text x="21.3504%" y="2495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,309,572 samples, 0.55%)</title><rect x="21.1004%" y="2469" width="0.5485%" height="15" fill="rgb(224,95,51)" fg:x="50373793" fg:w="1309572"/><text x="21.3504%" y="2479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,309,572 samples, 0.55%)</title><rect x="21.1004%" y="2453" width="0.5485%" height="15" fill="rgb(212,188,45)" fg:x="50373793" fg:w="1309572"/><text x="21.3504%" y="2463.50"></text></g><g><title>alloc::slice::hack::to_vec (1,309,572 samples, 0.55%)</title><rect x="21.1004%" y="2437" width="0.5485%" height="15" fill="rgb(223,154,38)" fg:x="50373793" fg:w="1309572"/><text x="21.3504%" y="2447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,309,572 samples, 0.55%)</title><rect x="21.1004%" y="2421" width="0.5485%" height="15" fill="rgb(251,22,52)" fg:x="50373793" fg:w="1309572"/><text x="21.3504%" y="2431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,309,572 samples, 0.55%)</title><rect x="21.1004%" y="2405" width="0.5485%" height="15" fill="rgb(229,209,22)" fg:x="50373793" fg:w="1309572"/><text x="21.3504%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,309,572 samples, 0.55%)</title><rect x="21.1004%" y="2389" width="0.5485%" height="15" fill="rgb(234,138,34)" fg:x="50373793" fg:w="1309572"/><text x="21.3504%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,309,572 samples, 0.55%)</title><rect x="21.1004%" y="2373" width="0.5485%" height="15" fill="rgb(212,95,11)" fg:x="50373793" fg:w="1309572"/><text x="21.3504%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,309,572 samples, 0.55%)</title><rect x="21.1004%" y="2357" width="0.5485%" height="15" fill="rgb(240,179,47)" fg:x="50373793" fg:w="1309572"/><text x="21.3504%" y="2367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,309,572 samples, 0.55%)</title><rect x="21.1004%" y="2341" width="0.5485%" height="15" fill="rgb(240,163,11)" fg:x="50373793" fg:w="1309572"/><text x="21.3504%" y="2351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,309,572 samples, 0.55%)</title><rect x="21.1004%" y="2325" width="0.5485%" height="15" fill="rgb(236,37,12)" fg:x="50373793" fg:w="1309572"/><text x="21.3504%" y="2335.50"></text></g><g><title>alloc::alloc::alloc (1,309,572 samples, 0.55%)</title><rect x="21.1004%" y="2309" width="0.5485%" height="15" fill="rgb(232,164,16)" fg:x="50373793" fg:w="1309572"/><text x="21.3504%" y="2319.50"></text></g><g><title>malloc (1,309,572 samples, 0.55%)</title><rect x="21.1004%" y="2293" width="0.5485%" height="15" fill="rgb(244,205,15)" fg:x="50373793" fg:w="1309572"/><text x="21.3504%" y="2303.50"></text></g><g><title>[libc.so.6] (1,309,572 samples, 0.55%)</title><rect x="21.1004%" y="2277" width="0.5485%" height="15" fill="rgb(223,117,47)" fg:x="50373793" fg:w="1309572"/><text x="21.3504%" y="2287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,602,245 samples, 1.09%)</title><rect x="21.6490%" y="2405" width="1.0900%" height="15" fill="rgb(244,107,35)" fg:x="51683365" fg:w="2602245"/><text x="21.8990%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,310,186 samples, 0.55%)</title><rect x="22.1902%" y="2389" width="0.5488%" height="15" fill="rgb(205,140,8)" fg:x="52975424" fg:w="1310186"/><text x="22.4402%" y="2399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,310,186 samples, 0.55%)</title><rect x="22.1902%" y="2373" width="0.5488%" height="15" fill="rgb(228,84,46)" fg:x="52975424" fg:w="1310186"/><text x="22.4402%" y="2383.50"></text></g><g><title>alloc::slice::hack::to_vec (1,310,186 samples, 0.55%)</title><rect x="22.1902%" y="2357" width="0.5488%" height="15" fill="rgb(254,188,9)" fg:x="52975424" fg:w="1310186"/><text x="22.4402%" y="2367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,310,186 samples, 0.55%)</title><rect x="22.1902%" y="2341" width="0.5488%" height="15" fill="rgb(206,112,54)" fg:x="52975424" fg:w="1310186"/><text x="22.4402%" y="2351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,310,186 samples, 0.55%)</title><rect x="22.1902%" y="2325" width="0.5488%" height="15" fill="rgb(216,84,49)" fg:x="52975424" fg:w="1310186"/><text x="22.4402%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,310,186 samples, 0.55%)</title><rect x="22.1902%" y="2309" width="0.5488%" height="15" fill="rgb(214,194,35)" fg:x="52975424" fg:w="1310186"/><text x="22.4402%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,310,186 samples, 0.55%)</title><rect x="22.1902%" y="2293" width="0.5488%" height="15" fill="rgb(249,28,3)" fg:x="52975424" fg:w="1310186"/><text x="22.4402%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,310,186 samples, 0.55%)</title><rect x="22.1902%" y="2277" width="0.5488%" height="15" fill="rgb(222,56,52)" fg:x="52975424" fg:w="1310186"/><text x="22.4402%" y="2287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,310,186 samples, 0.55%)</title><rect x="22.1902%" y="2261" width="0.5488%" height="15" fill="rgb(245,217,50)" fg:x="52975424" fg:w="1310186"/><text x="22.4402%" y="2271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,310,186 samples, 0.55%)</title><rect x="22.1902%" y="2245" width="0.5488%" height="15" fill="rgb(213,201,24)" fg:x="52975424" fg:w="1310186"/><text x="22.4402%" y="2255.50"></text></g><g><title>alloc::alloc::alloc (1,310,186 samples, 0.55%)</title><rect x="22.1902%" y="2229" width="0.5488%" height="15" fill="rgb(248,116,28)" fg:x="52975424" fg:w="1310186"/><text x="22.4402%" y="2239.50"></text></g><g><title>malloc (1,310,186 samples, 0.55%)</title><rect x="22.1902%" y="2213" width="0.5488%" height="15" fill="rgb(219,72,43)" fg:x="52975424" fg:w="1310186"/><text x="22.4402%" y="2223.50"></text></g><g><title>[libc.so.6] (1,310,186 samples, 0.55%)</title><rect x="22.1902%" y="2197" width="0.5488%" height="15" fill="rgb(209,138,14)" fg:x="52975424" fg:w="1310186"/><text x="22.4402%" y="2207.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,305,348 samples, 0.55%)</title><rect x="22.7390%" y="2341" width="0.5468%" height="15" fill="rgb(222,18,33)" fg:x="54285610" fg:w="1305348"/><text x="22.9890%" y="2351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,305,348 samples, 0.55%)</title><rect x="22.7390%" y="2325" width="0.5468%" height="15" fill="rgb(213,199,7)" fg:x="54285610" fg:w="1305348"/><text x="22.9890%" y="2335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,305,348 samples, 0.55%)</title><rect x="22.7390%" y="2309" width="0.5468%" height="15" fill="rgb(250,110,10)" fg:x="54285610" fg:w="1305348"/><text x="22.9890%" y="2319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,638,797 samples, 1.52%)</title><rect x="24.9574%" y="2245" width="1.5242%" height="15" fill="rgb(248,123,6)" fg:x="59581687" fg:w="3638797"/><text x="25.2074%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,638,797 samples, 1.52%)</title><rect x="24.9574%" y="2229" width="1.5242%" height="15" fill="rgb(206,91,31)" fg:x="59581687" fg:w="3638797"/><text x="25.2074%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,638,797 samples, 1.52%)</title><rect x="24.9574%" y="2213" width="1.5242%" height="15" fill="rgb(211,154,13)" fg:x="59581687" fg:w="3638797"/><text x="25.2074%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,638,797 samples, 1.52%)</title><rect x="24.9574%" y="2197" width="1.5242%" height="15" fill="rgb(225,148,7)" fg:x="59581687" fg:w="3638797"/><text x="25.2074%" y="2207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,638,797 samples, 1.52%)</title><rect x="24.9574%" y="2181" width="1.5242%" height="15" fill="rgb(220,160,43)" fg:x="59581687" fg:w="3638797"/><text x="25.2074%" y="2191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,638,797 samples, 1.52%)</title><rect x="24.9574%" y="2165" width="1.5242%" height="15" fill="rgb(213,52,39)" fg:x="59581687" fg:w="3638797"/><text x="25.2074%" y="2175.50"></text></g><g><title>alloc::alloc::alloc (3,638,797 samples, 1.52%)</title><rect x="24.9574%" y="2149" width="1.5242%" height="15" fill="rgb(243,137,7)" fg:x="59581687" fg:w="3638797"/><text x="25.2074%" y="2159.50"></text></g><g><title>malloc (3,638,797 samples, 1.52%)</title><rect x="24.9574%" y="2133" width="1.5242%" height="15" fill="rgb(230,79,13)" fg:x="59581687" fg:w="3638797"/><text x="25.2074%" y="2143.50"></text></g><g><title>[libc.so.6] (3,638,797 samples, 1.52%)</title><rect x="24.9574%" y="2117" width="1.5242%" height="15" fill="rgb(247,105,23)" fg:x="59581687" fg:w="3638797"/><text x="25.2074%" y="2127.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7,505,544 samples, 3.14%)</title><rect x="23.8382%" y="2325" width="3.1439%" height="15" fill="rgb(223,179,41)" fg:x="56909851" fg:w="7505544"/><text x="24.0882%" y="2335.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,833,708 samples, 2.02%)</title><rect x="24.9574%" y="2309" width="2.0247%" height="15" fill="rgb(218,9,34)" fg:x="59581687" fg:w="4833708"/><text x="25.2074%" y="2319.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,833,708 samples, 2.02%)</title><rect x="24.9574%" y="2293" width="2.0247%" height="15" fill="rgb(222,106,8)" fg:x="59581687" fg:w="4833708"/><text x="25.2074%" y="2303.50">a..</text></g><g><title>alloc::slice::hack::to_vec (4,833,708 samples, 2.02%)</title><rect x="24.9574%" y="2277" width="2.0247%" height="15" fill="rgb(211,220,0)" fg:x="59581687" fg:w="4833708"/><text x="25.2074%" y="2287.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,833,708 samples, 2.02%)</title><rect x="24.9574%" y="2261" width="2.0247%" height="15" fill="rgb(229,52,16)" fg:x="59581687" fg:w="4833708"/><text x="25.2074%" y="2271.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,194,911 samples, 0.50%)</title><rect x="26.4816%" y="2245" width="0.5005%" height="15" fill="rgb(212,155,18)" fg:x="63220484" fg:w="1194911"/><text x="26.7316%" y="2255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,194,911 samples, 0.50%)</title><rect x="26.4816%" y="2229" width="0.5005%" height="15" fill="rgb(242,21,14)" fg:x="63220484" fg:w="1194911"/><text x="26.7316%" y="2239.50"></text></g><g><title>[libc.so.6] (1,194,911 samples, 0.50%)</title><rect x="26.4816%" y="2213" width="0.5005%" height="15" fill="rgb(222,19,48)" fg:x="63220484" fg:w="1194911"/><text x="26.7316%" y="2223.50"></text></g><g><title>[libc.so.6] (2,572,347 samples, 1.08%)</title><rect x="26.9821%" y="2037" width="1.0775%" height="15" fill="rgb(232,45,27)" fg:x="64415395" fg:w="2572347"/><text x="27.2321%" y="2047.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,904,553 samples, 1.64%)</title><rect x="26.9821%" y="2245" width="1.6355%" height="15" fill="rgb(249,103,42)" fg:x="64415395" fg:w="3904553"/><text x="27.2321%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,904,553 samples, 1.64%)</title><rect x="26.9821%" y="2229" width="1.6355%" height="15" fill="rgb(246,81,33)" fg:x="64415395" fg:w="3904553"/><text x="27.2321%" y="2239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,904,553 samples, 1.64%)</title><rect x="26.9821%" y="2213" width="1.6355%" height="15" fill="rgb(252,33,42)" fg:x="64415395" fg:w="3904553"/><text x="27.2321%" y="2223.50"></text></g><g><title>alloc::slice::hack::to_vec (3,904,553 samples, 1.64%)</title><rect x="26.9821%" y="2197" width="1.6355%" height="15" fill="rgb(209,212,41)" fg:x="64415395" fg:w="3904553"/><text x="27.2321%" y="2207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,904,553 samples, 1.64%)</title><rect x="26.9821%" y="2181" width="1.6355%" height="15" fill="rgb(207,154,6)" fg:x="64415395" fg:w="3904553"/><text x="27.2321%" y="2191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,904,553 samples, 1.64%)</title><rect x="26.9821%" y="2165" width="1.6355%" height="15" fill="rgb(223,64,47)" fg:x="64415395" fg:w="3904553"/><text x="27.2321%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,904,553 samples, 1.64%)</title><rect x="26.9821%" y="2149" width="1.6355%" height="15" fill="rgb(211,161,38)" fg:x="64415395" fg:w="3904553"/><text x="27.2321%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,904,553 samples, 1.64%)</title><rect x="26.9821%" y="2133" width="1.6355%" height="15" fill="rgb(219,138,40)" fg:x="64415395" fg:w="3904553"/><text x="27.2321%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,904,553 samples, 1.64%)</title><rect x="26.9821%" y="2117" width="1.6355%" height="15" fill="rgb(241,228,46)" fg:x="64415395" fg:w="3904553"/><text x="27.2321%" y="2127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,904,553 samples, 1.64%)</title><rect x="26.9821%" y="2101" width="1.6355%" height="15" fill="rgb(223,209,38)" fg:x="64415395" fg:w="3904553"/><text x="27.2321%" y="2111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,904,553 samples, 1.64%)</title><rect x="26.9821%" y="2085" width="1.6355%" height="15" fill="rgb(236,164,45)" fg:x="64415395" fg:w="3904553"/><text x="27.2321%" y="2095.50"></text></g><g><title>alloc::alloc::alloc (3,904,553 samples, 1.64%)</title><rect x="26.9821%" y="2069" width="1.6355%" height="15" fill="rgb(231,15,5)" fg:x="64415395" fg:w="3904553"/><text x="27.2321%" y="2079.50"></text></g><g><title>malloc (3,904,553 samples, 1.64%)</title><rect x="26.9821%" y="2053" width="1.6355%" height="15" fill="rgb(252,35,15)" fg:x="64415395" fg:w="3904553"/><text x="27.2321%" y="2063.50"></text></g><g><title>[unknown] (1,332,206 samples, 0.56%)</title><rect x="28.0596%" y="2037" width="0.5580%" height="15" fill="rgb(248,181,18)" fg:x="66987742" fg:w="1332206"/><text x="28.3096%" y="2047.50"></text></g><g><title>[libc.so.6] (1,332,206 samples, 0.56%)</title><rect x="28.0596%" y="2021" width="0.5580%" height="15" fill="rgb(233,39,42)" fg:x="66987742" fg:w="1332206"/><text x="28.3096%" y="2031.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,309,492 samples, 0.55%)</title><rect x="28.6176%" y="2005" width="0.5485%" height="15" fill="rgb(238,110,33)" fg:x="68319948" fg:w="1309492"/><text x="28.8676%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,309,492 samples, 0.55%)</title><rect x="28.6176%" y="1989" width="0.5485%" height="15" fill="rgb(233,195,10)" fg:x="68319948" fg:w="1309492"/><text x="28.8676%" y="1999.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,309,492 samples, 0.55%)</title><rect x="28.6176%" y="1973" width="0.5485%" height="15" fill="rgb(254,105,3)" fg:x="68319948" fg:w="1309492"/><text x="28.8676%" y="1983.50"></text></g><g><title>alloc::slice::hack::to_vec (1,309,492 samples, 0.55%)</title><rect x="28.6176%" y="1957" width="0.5485%" height="15" fill="rgb(221,225,9)" fg:x="68319948" fg:w="1309492"/><text x="28.8676%" y="1967.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,309,492 samples, 0.55%)</title><rect x="28.6176%" y="1941" width="0.5485%" height="15" fill="rgb(224,227,45)" fg:x="68319948" fg:w="1309492"/><text x="28.8676%" y="1951.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,309,492 samples, 0.55%)</title><rect x="28.6176%" y="1925" width="0.5485%" height="15" fill="rgb(229,198,43)" fg:x="68319948" fg:w="1309492"/><text x="28.8676%" y="1935.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,309,492 samples, 0.55%)</title><rect x="28.6176%" y="1909" width="0.5485%" height="15" fill="rgb(206,209,35)" fg:x="68319948" fg:w="1309492"/><text x="28.8676%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,283,686 samples, 0.54%)</title><rect x="29.1662%" y="1749" width="0.5377%" height="15" fill="rgb(245,195,53)" fg:x="69629440" fg:w="1283686"/><text x="29.4162%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,283,686 samples, 0.54%)</title><rect x="29.1662%" y="1733" width="0.5377%" height="15" fill="rgb(240,92,26)" fg:x="69629440" fg:w="1283686"/><text x="29.4162%" y="1743.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,289,589 samples, 0.54%)</title><rect x="29.7039%" y="1605" width="0.5402%" height="15" fill="rgb(207,40,23)" fg:x="70913126" fg:w="1289589"/><text x="29.9539%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,289,589 samples, 0.54%)</title><rect x="29.7039%" y="1589" width="0.5402%" height="15" fill="rgb(223,111,35)" fg:x="70913126" fg:w="1289589"/><text x="29.9539%" y="1599.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,289,589 samples, 0.54%)</title><rect x="29.7039%" y="1573" width="0.5402%" height="15" fill="rgb(229,147,28)" fg:x="70913126" fg:w="1289589"/><text x="29.9539%" y="1583.50"></text></g><g><title>alloc::slice::hack::to_vec (1,289,589 samples, 0.54%)</title><rect x="29.7039%" y="1557" width="0.5402%" height="15" fill="rgb(211,29,28)" fg:x="70913126" fg:w="1289589"/><text x="29.9539%" y="1567.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,289,589 samples, 0.54%)</title><rect x="29.7039%" y="1541" width="0.5402%" height="15" fill="rgb(228,72,33)" fg:x="70913126" fg:w="1289589"/><text x="29.9539%" y="1551.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,289,589 samples, 0.54%)</title><rect x="29.7039%" y="1525" width="0.5402%" height="15" fill="rgb(205,214,31)" fg:x="70913126" fg:w="1289589"/><text x="29.9539%" y="1535.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,289,589 samples, 0.54%)</title><rect x="29.7039%" y="1509" width="0.5402%" height="15" fill="rgb(224,111,15)" fg:x="70913126" fg:w="1289589"/><text x="29.9539%" y="1519.50"></text></g><g><title>[libc.so.6] (1,289,589 samples, 0.54%)</title><rect x="29.7039%" y="1493" width="0.5402%" height="15" fill="rgb(253,21,26)" fg:x="70913126" fg:w="1289589"/><text x="29.9539%" y="1503.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,279,288 samples, 0.54%)</title><rect x="30.2441%" y="1445" width="0.5359%" height="15" fill="rgb(245,139,43)" fg:x="72202715" fg:w="1279288"/><text x="30.4941%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,279,288 samples, 0.54%)</title><rect x="30.2441%" y="1429" width="0.5359%" height="15" fill="rgb(252,170,7)" fg:x="72202715" fg:w="1279288"/><text x="30.4941%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,279,288 samples, 0.54%)</title><rect x="30.2441%" y="1413" width="0.5359%" height="15" fill="rgb(231,118,14)" fg:x="72202715" fg:w="1279288"/><text x="30.4941%" y="1423.50"></text></g><g><title>alloc::slice::hack::to_vec (1,279,288 samples, 0.54%)</title><rect x="30.2441%" y="1397" width="0.5359%" height="15" fill="rgb(238,83,0)" fg:x="72202715" fg:w="1279288"/><text x="30.4941%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,279,288 samples, 0.54%)</title><rect x="30.2441%" y="1381" width="0.5359%" height="15" fill="rgb(221,39,39)" fg:x="72202715" fg:w="1279288"/><text x="30.4941%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,279,288 samples, 0.54%)</title><rect x="30.2441%" y="1365" width="0.5359%" height="15" fill="rgb(222,119,46)" fg:x="72202715" fg:w="1279288"/><text x="30.4941%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,279,288 samples, 0.54%)</title><rect x="30.2441%" y="1349" width="0.5359%" height="15" fill="rgb(222,165,49)" fg:x="72202715" fg:w="1279288"/><text x="30.4941%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,279,288 samples, 0.54%)</title><rect x="30.2441%" y="1333" width="0.5359%" height="15" fill="rgb(219,113,52)" fg:x="72202715" fg:w="1279288"/><text x="30.4941%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,279,288 samples, 0.54%)</title><rect x="30.2441%" y="1317" width="0.5359%" height="15" fill="rgb(214,7,15)" fg:x="72202715" fg:w="1279288"/><text x="30.4941%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,279,288 samples, 0.54%)</title><rect x="30.2441%" y="1301" width="0.5359%" height="15" fill="rgb(235,32,4)" fg:x="72202715" fg:w="1279288"/><text x="30.4941%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,279,288 samples, 0.54%)</title><rect x="30.2441%" y="1285" width="0.5359%" height="15" fill="rgb(238,90,54)" fg:x="72202715" fg:w="1279288"/><text x="30.4941%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (1,279,288 samples, 0.54%)</title><rect x="30.2441%" y="1269" width="0.5359%" height="15" fill="rgb(213,208,19)" fg:x="72202715" fg:w="1279288"/><text x="30.4941%" y="1279.50"></text></g><g><title>malloc (1,279,288 samples, 0.54%)</title><rect x="30.2441%" y="1253" width="0.5359%" height="15" fill="rgb(233,156,4)" fg:x="72202715" fg:w="1279288"/><text x="30.4941%" y="1263.50"></text></g><g><title>[libc.so.6] (1,279,288 samples, 0.54%)</title><rect x="30.2441%" y="1237" width="0.5359%" height="15" fill="rgb(207,194,5)" fg:x="72202715" fg:w="1279288"/><text x="30.4941%" y="1247.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,299,943 samples, 0.54%)</title><rect x="30.7799%" y="1365" width="0.5445%" height="15" fill="rgb(206,111,30)" fg:x="73482003" fg:w="1299943"/><text x="31.0299%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,299,943 samples, 0.54%)</title><rect x="30.7799%" y="1349" width="0.5445%" height="15" fill="rgb(243,70,54)" fg:x="73482003" fg:w="1299943"/><text x="31.0299%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,299,943 samples, 0.54%)</title><rect x="30.7799%" y="1333" width="0.5445%" height="15" fill="rgb(242,28,8)" fg:x="73482003" fg:w="1299943"/><text x="31.0299%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (1,299,943 samples, 0.54%)</title><rect x="30.7799%" y="1317" width="0.5445%" height="15" fill="rgb(219,106,18)" fg:x="73482003" fg:w="1299943"/><text x="31.0299%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,299,943 samples, 0.54%)</title><rect x="30.7799%" y="1301" width="0.5445%" height="15" fill="rgb(244,222,10)" fg:x="73482003" fg:w="1299943"/><text x="31.0299%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,299,943 samples, 0.54%)</title><rect x="30.7799%" y="1285" width="0.5445%" height="15" fill="rgb(236,179,52)" fg:x="73482003" fg:w="1299943"/><text x="31.0299%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,299,943 samples, 0.54%)</title><rect x="30.7799%" y="1269" width="0.5445%" height="15" fill="rgb(213,23,39)" fg:x="73482003" fg:w="1299943"/><text x="31.0299%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,299,943 samples, 0.54%)</title><rect x="30.7799%" y="1253" width="0.5445%" height="15" fill="rgb(238,48,10)" fg:x="73482003" fg:w="1299943"/><text x="31.0299%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,299,943 samples, 0.54%)</title><rect x="30.7799%" y="1237" width="0.5445%" height="15" fill="rgb(251,196,23)" fg:x="73482003" fg:w="1299943"/><text x="31.0299%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,299,943 samples, 0.54%)</title><rect x="30.7799%" y="1221" width="0.5445%" height="15" fill="rgb(250,152,24)" fg:x="73482003" fg:w="1299943"/><text x="31.0299%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,299,943 samples, 0.54%)</title><rect x="30.7799%" y="1205" width="0.5445%" height="15" fill="rgb(209,150,17)" fg:x="73482003" fg:w="1299943"/><text x="31.0299%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (1,299,943 samples, 0.54%)</title><rect x="30.7799%" y="1189" width="0.5445%" height="15" fill="rgb(234,202,34)" fg:x="73482003" fg:w="1299943"/><text x="31.0299%" y="1199.50"></text></g><g><title>malloc (1,299,943 samples, 0.54%)</title><rect x="30.7799%" y="1173" width="0.5445%" height="15" fill="rgb(253,148,53)" fg:x="73482003" fg:w="1299943"/><text x="31.0299%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,372,762 samples, 0.58%)</title><rect x="31.3244%" y="1365" width="0.5750%" height="15" fill="rgb(218,129,16)" fg:x="74781946" fg:w="1372762"/><text x="31.5744%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,372,762 samples, 0.58%)</title><rect x="31.3244%" y="1349" width="0.5750%" height="15" fill="rgb(216,85,19)" fg:x="74781946" fg:w="1372762"/><text x="31.5744%" y="1359.50"></text></g><g><title>alloc::slice::hack::to_vec (1,372,762 samples, 0.58%)</title><rect x="31.3244%" y="1333" width="0.5750%" height="15" fill="rgb(235,228,7)" fg:x="74781946" fg:w="1372762"/><text x="31.5744%" y="1343.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,372,762 samples, 0.58%)</title><rect x="31.3244%" y="1317" width="0.5750%" height="15" fill="rgb(245,175,0)" fg:x="74781946" fg:w="1372762"/><text x="31.5744%" y="1327.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,372,762 samples, 0.58%)</title><rect x="31.3244%" y="1301" width="0.5750%" height="15" fill="rgb(208,168,36)" fg:x="74781946" fg:w="1372762"/><text x="31.5744%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,372,762 samples, 0.58%)</title><rect x="31.3244%" y="1285" width="0.5750%" height="15" fill="rgb(246,171,24)" fg:x="74781946" fg:w="1372762"/><text x="31.5744%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,372,762 samples, 0.58%)</title><rect x="31.3244%" y="1269" width="0.5750%" height="15" fill="rgb(215,142,24)" fg:x="74781946" fg:w="1372762"/><text x="31.5744%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (1,372,762 samples, 0.58%)</title><rect x="31.3244%" y="1253" width="0.5750%" height="15" fill="rgb(250,187,7)" fg:x="74781946" fg:w="1372762"/><text x="31.5744%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,372,762 samples, 0.58%)</title><rect x="31.3244%" y="1237" width="0.5750%" height="15" fill="rgb(228,66,33)" fg:x="74781946" fg:w="1372762"/><text x="31.5744%" y="1247.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,372,762 samples, 0.58%)</title><rect x="31.3244%" y="1221" width="0.5750%" height="15" fill="rgb(234,215,21)" fg:x="74781946" fg:w="1372762"/><text x="31.5744%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,372,762 samples, 0.58%)</title><rect x="31.3244%" y="1205" width="0.5750%" height="15" fill="rgb(222,191,20)" fg:x="74781946" fg:w="1372762"/><text x="31.5744%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,372,762 samples, 0.58%)</title><rect x="31.3244%" y="1189" width="0.5750%" height="15" fill="rgb(245,79,54)" fg:x="74781946" fg:w="1372762"/><text x="31.5744%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (1,372,762 samples, 0.58%)</title><rect x="31.3244%" y="1173" width="0.5750%" height="15" fill="rgb(240,10,37)" fg:x="74781946" fg:w="1372762"/><text x="31.5744%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,372,762 samples, 0.58%)</title><rect x="31.3244%" y="1157" width="0.5750%" height="15" fill="rgb(214,192,32)" fg:x="74781946" fg:w="1372762"/><text x="31.5744%" y="1167.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,372,762 samples, 0.58%)</title><rect x="31.3244%" y="1141" width="0.5750%" height="15" fill="rgb(209,36,54)" fg:x="74781946" fg:w="1372762"/><text x="31.5744%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,342,547 samples, 0.56%)</title><rect x="31.8994%" y="1365" width="0.5624%" height="15" fill="rgb(220,10,11)" fg:x="76154708" fg:w="1342547"/><text x="32.1494%" y="1375.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,342,547 samples, 0.56%)</title><rect x="31.8994%" y="1349" width="0.5624%" height="15" fill="rgb(221,106,17)" fg:x="76154708" fg:w="1342547"/><text x="32.1494%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,335,041 samples, 2.23%)</title><rect x="30.7799%" y="1445" width="2.2347%" height="15" fill="rgb(251,142,44)" fg:x="73482003" fg:w="5335041"/><text x="31.0299%" y="1455.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,335,041 samples, 2.23%)</title><rect x="30.7799%" y="1429" width="2.2347%" height="15" fill="rgb(238,13,15)" fg:x="73482003" fg:w="5335041"/><text x="31.0299%" y="1439.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,335,041 samples, 2.23%)</title><rect x="30.7799%" y="1413" width="2.2347%" height="15" fill="rgb(208,107,27)" fg:x="73482003" fg:w="5335041"/><text x="31.0299%" y="1423.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,335,041 samples, 2.23%)</title><rect x="30.7799%" y="1397" width="2.2347%" height="15" fill="rgb(205,136,37)" fg:x="73482003" fg:w="5335041"/><text x="31.0299%" y="1407.50">&lt;..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (5,335,041 samples, 2.23%)</title><rect x="30.7799%" y="1381" width="2.2347%" height="15" fill="rgb(250,205,27)" fg:x="73482003" fg:w="5335041"/><text x="31.0299%" y="1391.50">&lt;..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1365" width="0.5528%" height="15" fill="rgb(210,80,43)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1375.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1349" width="0.5528%" height="15" fill="rgb(247,160,36)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1359.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1333" width="0.5528%" height="15" fill="rgb(234,13,49)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1343.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1317" width="0.5528%" height="15" fill="rgb(234,122,0)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1327.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1301" width="0.5528%" height="15" fill="rgb(207,146,38)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1285" width="0.5528%" height="15" fill="rgb(207,177,25)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1295.50"></text></g><g><title>core::clone::Clone::clone (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1269" width="0.5528%" height="15" fill="rgb(211,178,42)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1279.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1253" width="0.5528%" height="15" fill="rgb(230,69,54)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1237" width="0.5528%" height="15" fill="rgb(214,135,41)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1221" width="0.5528%" height="15" fill="rgb(237,67,25)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1205" width="0.5528%" height="15" fill="rgb(222,189,50)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1189" width="0.5528%" height="15" fill="rgb(245,148,34)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1173" width="0.5528%" height="15" fill="rgb(222,29,6)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1157" width="0.5528%" height="15" fill="rgb(221,189,43)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1141" width="0.5528%" height="15" fill="rgb(207,36,27)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1125" width="0.5528%" height="15" fill="rgb(217,90,24)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1109" width="0.5528%" height="15" fill="rgb(224,66,35)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1093" width="0.5528%" height="15" fill="rgb(221,13,50)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1077" width="0.5528%" height="15" fill="rgb(236,68,49)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1087.50"></text></g><g><title>malloc (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1061" width="0.5528%" height="15" fill="rgb(229,146,28)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1071.50"></text></g><g><title>[libc.so.6] (1,319,789 samples, 0.55%)</title><rect x="32.4618%" y="1045" width="0.5528%" height="15" fill="rgb(225,31,38)" fg:x="77497255" fg:w="1319789"/><text x="32.7118%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,314,866 samples, 0.55%)</title><rect x="33.0146%" y="1349" width="0.5508%" height="15" fill="rgb(250,208,3)" fg:x="78817044" fg:w="1314866"/><text x="33.2646%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,327,187 samples, 3.91%)</title><rect x="30.2441%" y="1525" width="3.9069%" height="15" fill="rgb(246,54,23)" fg:x="72202715" fg:w="9327187"/><text x="30.4941%" y="1535.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,327,187 samples, 3.91%)</title><rect x="30.2441%" y="1509" width="3.9069%" height="15" fill="rgb(243,76,11)" fg:x="72202715" fg:w="9327187"/><text x="30.4941%" y="1519.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,327,187 samples, 3.91%)</title><rect x="30.2441%" y="1493" width="3.9069%" height="15" fill="rgb(245,21,50)" fg:x="72202715" fg:w="9327187"/><text x="30.4941%" y="1503.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,327,187 samples, 3.91%)</title><rect x="30.2441%" y="1477" width="3.9069%" height="15" fill="rgb(228,9,43)" fg:x="72202715" fg:w="9327187"/><text x="30.4941%" y="1487.50">&lt;T a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (9,327,187 samples, 3.91%)</title><rect x="30.2441%" y="1461" width="3.9069%" height="15" fill="rgb(208,100,47)" fg:x="72202715" fg:w="9327187"/><text x="30.4941%" y="1471.50">&lt;css..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,712,858 samples, 1.14%)</title><rect x="33.0146%" y="1445" width="1.1364%" height="15" fill="rgb(232,26,8)" fg:x="78817044" fg:w="2712858"/><text x="33.2646%" y="1455.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,712,858 samples, 1.14%)</title><rect x="33.0146%" y="1429" width="1.1364%" height="15" fill="rgb(216,166,38)" fg:x="78817044" fg:w="2712858"/><text x="33.2646%" y="1439.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,712,858 samples, 1.14%)</title><rect x="33.0146%" y="1413" width="1.1364%" height="15" fill="rgb(251,202,51)" fg:x="78817044" fg:w="2712858"/><text x="33.2646%" y="1423.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,712,858 samples, 1.14%)</title><rect x="33.0146%" y="1397" width="1.1364%" height="15" fill="rgb(254,216,34)" fg:x="78817044" fg:w="2712858"/><text x="33.2646%" y="1407.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,712,858 samples, 1.14%)</title><rect x="33.0146%" y="1381" width="1.1364%" height="15" fill="rgb(251,32,27)" fg:x="78817044" fg:w="2712858"/><text x="33.2646%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,712,858 samples, 1.14%)</title><rect x="33.0146%" y="1365" width="1.1364%" height="15" fill="rgb(208,127,28)" fg:x="78817044" fg:w="2712858"/><text x="33.2646%" y="1375.50"></text></g><g><title>core::clone::Clone::clone (1,397,992 samples, 0.59%)</title><rect x="33.5654%" y="1349" width="0.5856%" height="15" fill="rgb(224,137,22)" fg:x="80131910" fg:w="1397992"/><text x="33.8154%" y="1359.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,397,992 samples, 0.59%)</title><rect x="33.5654%" y="1333" width="0.5856%" height="15" fill="rgb(254,70,32)" fg:x="80131910" fg:w="1397992"/><text x="33.8154%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,397,992 samples, 0.59%)</title><rect x="33.5654%" y="1317" width="0.5856%" height="15" fill="rgb(229,75,37)" fg:x="80131910" fg:w="1397992"/><text x="33.8154%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,397,992 samples, 0.59%)</title><rect x="33.5654%" y="1301" width="0.5856%" height="15" fill="rgb(252,64,23)" fg:x="80131910" fg:w="1397992"/><text x="33.8154%" y="1311.50"></text></g><g><title>alloc::slice::hack::to_vec (1,397,992 samples, 0.59%)</title><rect x="33.5654%" y="1285" width="0.5856%" height="15" fill="rgb(232,162,48)" fg:x="80131910" fg:w="1397992"/><text x="33.8154%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,397,992 samples, 0.59%)</title><rect x="33.5654%" y="1269" width="0.5856%" height="15" fill="rgb(246,160,12)" fg:x="80131910" fg:w="1397992"/><text x="33.8154%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,397,992 samples, 0.59%)</title><rect x="33.5654%" y="1253" width="0.5856%" height="15" fill="rgb(247,166,0)" fg:x="80131910" fg:w="1397992"/><text x="33.8154%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,397,992 samples, 0.59%)</title><rect x="33.5654%" y="1237" width="0.5856%" height="15" fill="rgb(249,219,21)" fg:x="80131910" fg:w="1397992"/><text x="33.8154%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,397,992 samples, 0.59%)</title><rect x="33.5654%" y="1221" width="0.5856%" height="15" fill="rgb(205,209,3)" fg:x="80131910" fg:w="1397992"/><text x="33.8154%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,397,992 samples, 0.59%)</title><rect x="33.5654%" y="1205" width="0.5856%" height="15" fill="rgb(243,44,1)" fg:x="80131910" fg:w="1397992"/><text x="33.8154%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,397,992 samples, 0.59%)</title><rect x="33.5654%" y="1189" width="0.5856%" height="15" fill="rgb(206,159,16)" fg:x="80131910" fg:w="1397992"/><text x="33.8154%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,397,992 samples, 0.59%)</title><rect x="33.5654%" y="1173" width="0.5856%" height="15" fill="rgb(244,77,30)" fg:x="80131910" fg:w="1397992"/><text x="33.8154%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (1,397,992 samples, 0.59%)</title><rect x="33.5654%" y="1157" width="0.5856%" height="15" fill="rgb(218,69,12)" fg:x="80131910" fg:w="1397992"/><text x="33.8154%" y="1167.50"></text></g><g><title>__rust_alloc (1,397,992 samples, 0.59%)</title><rect x="33.5654%" y="1141" width="0.5856%" height="15" fill="rgb(212,87,7)" fg:x="80131910" fg:w="1397992"/><text x="33.8154%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,975,283 samples, 5.02%)</title><rect x="29.7039%" y="1685" width="5.0162%" height="15" fill="rgb(245,114,25)" fg:x="70913126" fg:w="11975283"/><text x="29.9539%" y="1695.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11,975,283 samples, 5.02%)</title><rect x="29.7039%" y="1669" width="5.0162%" height="15" fill="rgb(210,61,42)" fg:x="70913126" fg:w="11975283"/><text x="29.9539%" y="1679.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (11,975,283 samples, 5.02%)</title><rect x="29.7039%" y="1653" width="5.0162%" height="15" fill="rgb(211,52,33)" fg:x="70913126" fg:w="11975283"/><text x="29.9539%" y="1663.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11,975,283 samples, 5.02%)</title><rect x="29.7039%" y="1637" width="5.0162%" height="15" fill="rgb(234,58,33)" fg:x="70913126" fg:w="11975283"/><text x="29.9539%" y="1647.50">&lt;T as ..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (11,975,283 samples, 5.02%)</title><rect x="29.7039%" y="1621" width="5.0162%" height="15" fill="rgb(220,115,36)" fg:x="70913126" fg:w="11975283"/><text x="29.9539%" y="1631.50">&lt;css_b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,685,694 samples, 4.48%)</title><rect x="30.2441%" y="1605" width="4.4760%" height="15" fill="rgb(243,153,54)" fg:x="72202715" fg:w="10685694"/><text x="30.4941%" y="1615.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,685,694 samples, 4.48%)</title><rect x="30.2441%" y="1589" width="4.4760%" height="15" fill="rgb(251,47,18)" fg:x="72202715" fg:w="10685694"/><text x="30.4941%" y="1599.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (10,685,694 samples, 4.48%)</title><rect x="30.2441%" y="1573" width="4.4760%" height="15" fill="rgb(242,102,42)" fg:x="72202715" fg:w="10685694"/><text x="30.4941%" y="1583.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,685,694 samples, 4.48%)</title><rect x="30.2441%" y="1557" width="4.4760%" height="15" fill="rgb(234,31,38)" fg:x="72202715" fg:w="10685694"/><text x="30.4941%" y="1567.50">&lt;T as..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (10,685,694 samples, 4.48%)</title><rect x="30.2441%" y="1541" width="4.4760%" height="15" fill="rgb(221,117,51)" fg:x="72202715" fg:w="10685694"/><text x="30.4941%" y="1551.50">&lt;css_..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,358,507 samples, 0.57%)</title><rect x="34.1510%" y="1525" width="0.5690%" height="15" fill="rgb(212,20,18)" fg:x="81529902" fg:w="1358507"/><text x="34.4010%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,358,507 samples, 0.57%)</title><rect x="34.1510%" y="1509" width="0.5690%" height="15" fill="rgb(245,133,36)" fg:x="81529902" fg:w="1358507"/><text x="34.4010%" y="1519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,358,507 samples, 0.57%)</title><rect x="34.1510%" y="1493" width="0.5690%" height="15" fill="rgb(212,6,19)" fg:x="81529902" fg:w="1358507"/><text x="34.4010%" y="1503.50"></text></g><g><title>alloc::slice::hack::to_vec (1,358,507 samples, 0.57%)</title><rect x="34.1510%" y="1477" width="0.5690%" height="15" fill="rgb(218,1,36)" fg:x="81529902" fg:w="1358507"/><text x="34.4010%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,358,507 samples, 0.57%)</title><rect x="34.1510%" y="1461" width="0.5690%" height="15" fill="rgb(246,84,54)" fg:x="81529902" fg:w="1358507"/><text x="34.4010%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,358,507 samples, 0.57%)</title><rect x="34.1510%" y="1445" width="0.5690%" height="15" fill="rgb(242,110,6)" fg:x="81529902" fg:w="1358507"/><text x="34.4010%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,358,507 samples, 0.57%)</title><rect x="34.1510%" y="1429" width="0.5690%" height="15" fill="rgb(214,47,5)" fg:x="81529902" fg:w="1358507"/><text x="34.4010%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,358,507 samples, 0.57%)</title><rect x="34.1510%" y="1413" width="0.5690%" height="15" fill="rgb(218,159,25)" fg:x="81529902" fg:w="1358507"/><text x="34.4010%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,358,507 samples, 0.57%)</title><rect x="34.1510%" y="1397" width="0.5690%" height="15" fill="rgb(215,211,28)" fg:x="81529902" fg:w="1358507"/><text x="34.4010%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,358,507 samples, 0.57%)</title><rect x="34.1510%" y="1381" width="0.5690%" height="15" fill="rgb(238,59,32)" fg:x="81529902" fg:w="1358507"/><text x="34.4010%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,358,507 samples, 0.57%)</title><rect x="34.1510%" y="1365" width="0.5690%" height="15" fill="rgb(226,82,3)" fg:x="81529902" fg:w="1358507"/><text x="34.4010%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (1,358,507 samples, 0.57%)</title><rect x="34.1510%" y="1349" width="0.5690%" height="15" fill="rgb(240,164,32)" fg:x="81529902" fg:w="1358507"/><text x="34.4010%" y="1359.50"></text></g><g><title>malloc (1,358,507 samples, 0.57%)</title><rect x="34.1510%" y="1333" width="0.5690%" height="15" fill="rgb(232,46,7)" fg:x="81529902" fg:w="1358507"/><text x="34.4010%" y="1343.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,304,605 samples, 0.55%)</title><rect x="34.7200%" y="1685" width="0.5465%" height="15" fill="rgb(229,129,53)" fg:x="82888409" fg:w="1304605"/><text x="34.9700%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,304,605 samples, 0.55%)</title><rect x="34.7200%" y="1669" width="0.5465%" height="15" fill="rgb(234,188,29)" fg:x="82888409" fg:w="1304605"/><text x="34.9700%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,304,605 samples, 0.55%)</title><rect x="34.7200%" y="1653" width="0.5465%" height="15" fill="rgb(246,141,4)" fg:x="82888409" fg:w="1304605"/><text x="34.9700%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (1,304,605 samples, 0.55%)</title><rect x="34.7200%" y="1637" width="0.5465%" height="15" fill="rgb(229,23,39)" fg:x="82888409" fg:w="1304605"/><text x="34.9700%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,304,605 samples, 0.55%)</title><rect x="34.7200%" y="1621" width="0.5465%" height="15" fill="rgb(206,12,3)" fg:x="82888409" fg:w="1304605"/><text x="34.9700%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,304,605 samples, 0.55%)</title><rect x="34.7200%" y="1605" width="0.5465%" height="15" fill="rgb(252,226,20)" fg:x="82888409" fg:w="1304605"/><text x="34.9700%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,304,605 samples, 0.55%)</title><rect x="34.7200%" y="1589" width="0.5465%" height="15" fill="rgb(216,123,35)" fg:x="82888409" fg:w="1304605"/><text x="34.9700%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,304,605 samples, 0.55%)</title><rect x="34.7200%" y="1573" width="0.5465%" height="15" fill="rgb(212,68,40)" fg:x="82888409" fg:w="1304605"/><text x="34.9700%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,304,605 samples, 0.55%)</title><rect x="34.7200%" y="1557" width="0.5465%" height="15" fill="rgb(254,125,32)" fg:x="82888409" fg:w="1304605"/><text x="34.9700%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15,868,420 samples, 6.65%)</title><rect x="29.1662%" y="1765" width="6.6469%" height="15" fill="rgb(253,97,22)" fg:x="69629440" fg:w="15868420"/><text x="29.4162%" y="1775.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14,584,734 samples, 6.11%)</title><rect x="29.7039%" y="1749" width="6.1092%" height="15" fill="rgb(241,101,14)" fg:x="70913126" fg:w="14584734"/><text x="29.9539%" y="1759.50">alloc::s..</text></g><g><title>alloc::slice::hack::to_vec (14,584,734 samples, 6.11%)</title><rect x="29.7039%" y="1733" width="6.1092%" height="15" fill="rgb(238,103,29)" fg:x="70913126" fg:w="14584734"/><text x="29.9539%" y="1743.50">alloc::s..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14,584,734 samples, 6.11%)</title><rect x="29.7039%" y="1717" width="6.1092%" height="15" fill="rgb(233,195,47)" fg:x="70913126" fg:w="14584734"/><text x="29.9539%" y="1727.50">&lt;T as al..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (14,584,734 samples, 6.11%)</title><rect x="29.7039%" y="1701" width="6.1092%" height="15" fill="rgb(246,218,30)" fg:x="70913126" fg:w="14584734"/><text x="29.9539%" y="1711.50">&lt;css_bit..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,304,846 samples, 0.55%)</title><rect x="35.2665%" y="1685" width="0.5466%" height="15" fill="rgb(219,145,47)" fg:x="84193014" fg:w="1304846"/><text x="35.5165%" y="1695.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,304,846 samples, 0.55%)</title><rect x="35.2665%" y="1669" width="0.5466%" height="15" fill="rgb(243,12,26)" fg:x="84193014" fg:w="1304846"/><text x="35.5165%" y="1679.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,304,846 samples, 0.55%)</title><rect x="35.2665%" y="1653" width="0.5466%" height="15" fill="rgb(214,87,16)" fg:x="84193014" fg:w="1304846"/><text x="35.5165%" y="1663.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,304,846 samples, 0.55%)</title><rect x="35.2665%" y="1637" width="0.5466%" height="15" fill="rgb(208,99,42)" fg:x="84193014" fg:w="1304846"/><text x="35.5165%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,304,846 samples, 0.55%)</title><rect x="35.2665%" y="1621" width="0.5466%" height="15" fill="rgb(253,99,2)" fg:x="84193014" fg:w="1304846"/><text x="35.5165%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,304,846 samples, 0.55%)</title><rect x="35.2665%" y="1605" width="0.5466%" height="15" fill="rgb(220,168,23)" fg:x="84193014" fg:w="1304846"/><text x="35.5165%" y="1615.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,304,846 samples, 0.55%)</title><rect x="35.2665%" y="1589" width="0.5466%" height="15" fill="rgb(242,38,24)" fg:x="84193014" fg:w="1304846"/><text x="35.5165%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,304,846 samples, 0.55%)</title><rect x="35.2665%" y="1573" width="0.5466%" height="15" fill="rgb(225,182,9)" fg:x="84193014" fg:w="1304846"/><text x="35.5165%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,304,846 samples, 0.55%)</title><rect x="35.2665%" y="1557" width="0.5466%" height="15" fill="rgb(243,178,37)" fg:x="84193014" fg:w="1304846"/><text x="35.5165%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (1,304,846 samples, 0.55%)</title><rect x="35.2665%" y="1541" width="0.5466%" height="15" fill="rgb(232,139,19)" fg:x="84193014" fg:w="1304846"/><text x="35.5165%" y="1551.50"></text></g><g><title>malloc (1,304,846 samples, 0.55%)</title><rect x="35.2665%" y="1525" width="0.5466%" height="15" fill="rgb(225,201,24)" fg:x="84193014" fg:w="1304846"/><text x="35.5165%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,175,429 samples, 7.19%)</title><rect x="29.1662%" y="1845" width="7.1944%" height="15" fill="rgb(221,47,46)" fg:x="69629440" fg:w="17175429"/><text x="29.4162%" y="1855.50">&lt;alloc::ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,175,429 samples, 7.19%)</title><rect x="29.1662%" y="1829" width="7.1944%" height="15" fill="rgb(249,23,13)" fg:x="69629440" fg:w="17175429"/><text x="29.4162%" y="1839.50">alloc::sli..</text></g><g><title>alloc::slice::hack::to_vec (17,175,429 samples, 7.19%)</title><rect x="29.1662%" y="1813" width="7.1944%" height="15" fill="rgb(219,9,5)" fg:x="69629440" fg:w="17175429"/><text x="29.4162%" y="1823.50">alloc::sli..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,175,429 samples, 7.19%)</title><rect x="29.1662%" y="1797" width="7.1944%" height="15" fill="rgb(254,171,16)" fg:x="69629440" fg:w="17175429"/><text x="29.4162%" y="1807.50">&lt;T as allo..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (17,175,429 samples, 7.19%)</title><rect x="29.1662%" y="1781" width="7.1944%" height="15" fill="rgb(230,171,20)" fg:x="69629440" fg:w="17175429"/><text x="29.4162%" y="1791.50">&lt;css_bitve..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,307,009 samples, 0.55%)</title><rect x="35.8131%" y="1765" width="0.5475%" height="15" fill="rgb(210,71,41)" fg:x="85497860" fg:w="1307009"/><text x="36.0631%" y="1775.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (18,477,412 samples, 7.74%)</title><rect x="29.1662%" y="1861" width="7.7398%" height="15" fill="rgb(206,173,20)" fg:x="69629440" fg:w="18477412"/><text x="29.4162%" y="1871.50">&lt;css_bitvec..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,301,983 samples, 0.55%)</title><rect x="36.3606%" y="1845" width="0.5454%" height="15" fill="rgb(233,88,34)" fg:x="86804869" fg:w="1301983"/><text x="36.6106%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,301,983 samples, 0.55%)</title><rect x="36.3606%" y="1829" width="0.5454%" height="15" fill="rgb(223,209,46)" fg:x="86804869" fg:w="1301983"/><text x="36.6106%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,301,983 samples, 0.55%)</title><rect x="36.3606%" y="1813" width="0.5454%" height="15" fill="rgb(250,43,18)" fg:x="86804869" fg:w="1301983"/><text x="36.6106%" y="1823.50"></text></g><g><title>alloc::slice::hack::to_vec (1,301,983 samples, 0.55%)</title><rect x="36.3606%" y="1797" width="0.5454%" height="15" fill="rgb(208,13,10)" fg:x="86804869" fg:w="1301983"/><text x="36.6106%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,301,983 samples, 0.55%)</title><rect x="36.3606%" y="1781" width="0.5454%" height="15" fill="rgb(212,200,36)" fg:x="86804869" fg:w="1301983"/><text x="36.6106%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,301,983 samples, 0.55%)</title><rect x="36.3606%" y="1765" width="0.5454%" height="15" fill="rgb(225,90,30)" fg:x="86804869" fg:w="1301983"/><text x="36.6106%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,301,983 samples, 0.55%)</title><rect x="36.3606%" y="1749" width="0.5454%" height="15" fill="rgb(236,182,39)" fg:x="86804869" fg:w="1301983"/><text x="36.6106%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,301,983 samples, 0.55%)</title><rect x="36.3606%" y="1733" width="0.5454%" height="15" fill="rgb(212,144,35)" fg:x="86804869" fg:w="1301983"/><text x="36.6106%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,301,983 samples, 0.55%)</title><rect x="36.3606%" y="1717" width="0.5454%" height="15" fill="rgb(228,63,44)" fg:x="86804869" fg:w="1301983"/><text x="36.6106%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,301,983 samples, 0.55%)</title><rect x="36.3606%" y="1701" width="0.5454%" height="15" fill="rgb(228,109,6)" fg:x="86804869" fg:w="1301983"/><text x="36.6106%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,301,983 samples, 0.55%)</title><rect x="36.3606%" y="1685" width="0.5454%" height="15" fill="rgb(238,117,24)" fg:x="86804869" fg:w="1301983"/><text x="36.6106%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (1,301,983 samples, 0.55%)</title><rect x="36.3606%" y="1669" width="0.5454%" height="15" fill="rgb(242,26,26)" fg:x="86804869" fg:w="1301983"/><text x="36.6106%" y="1679.50"></text></g><g><title>malloc (1,301,983 samples, 0.55%)</title><rect x="36.3606%" y="1653" width="0.5454%" height="15" fill="rgb(221,92,48)" fg:x="86804869" fg:w="1301983"/><text x="36.6106%" y="1663.50"></text></g><g><title>[libc.so.6] (1,301,983 samples, 0.55%)</title><rect x="36.3606%" y="1637" width="0.5454%" height="15" fill="rgb(209,209,32)" fg:x="86804869" fg:w="1301983"/><text x="36.6106%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,830,564 samples, 8.31%)</title><rect x="29.1662%" y="1925" width="8.3066%" height="15" fill="rgb(221,70,22)" fg:x="69629440" fg:w="19830564"/><text x="29.4162%" y="1935.50">&lt;alloc::vec:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,830,564 samples, 8.31%)</title><rect x="29.1662%" y="1909" width="8.3066%" height="15" fill="rgb(248,145,5)" fg:x="69629440" fg:w="19830564"/><text x="29.4162%" y="1919.50">alloc::slice..</text></g><g><title>alloc::slice::hack::to_vec (19,830,564 samples, 8.31%)</title><rect x="29.1662%" y="1893" width="8.3066%" height="15" fill="rgb(226,116,26)" fg:x="69629440" fg:w="19830564"/><text x="29.4162%" y="1903.50">alloc::slice..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,830,564 samples, 8.31%)</title><rect x="29.1662%" y="1877" width="8.3066%" height="15" fill="rgb(244,5,17)" fg:x="69629440" fg:w="19830564"/><text x="29.4162%" y="1887.50">&lt;T as alloc:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,353,152 samples, 0.57%)</title><rect x="36.9059%" y="1861" width="0.5668%" height="15" fill="rgb(252,159,33)" fg:x="88106852" fg:w="1353152"/><text x="37.1559%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,353,152 samples, 0.57%)</title><rect x="36.9059%" y="1845" width="0.5668%" height="15" fill="rgb(206,71,0)" fg:x="88106852" fg:w="1353152"/><text x="37.1559%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,353,152 samples, 0.57%)</title><rect x="36.9059%" y="1829" width="0.5668%" height="15" fill="rgb(233,118,54)" fg:x="88106852" fg:w="1353152"/><text x="37.1559%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,353,152 samples, 0.57%)</title><rect x="36.9059%" y="1813" width="0.5668%" height="15" fill="rgb(234,83,48)" fg:x="88106852" fg:w="1353152"/><text x="37.1559%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,353,152 samples, 0.57%)</title><rect x="36.9059%" y="1797" width="0.5668%" height="15" fill="rgb(228,3,54)" fg:x="88106852" fg:w="1353152"/><text x="37.1559%" y="1807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,353,152 samples, 0.57%)</title><rect x="36.9059%" y="1781" width="0.5668%" height="15" fill="rgb(226,155,13)" fg:x="88106852" fg:w="1353152"/><text x="37.1559%" y="1791.50"></text></g><g><title>alloc::alloc::alloc (1,353,152 samples, 0.57%)</title><rect x="36.9059%" y="1765" width="0.5668%" height="15" fill="rgb(241,28,37)" fg:x="88106852" fg:w="1353152"/><text x="37.1559%" y="1775.50"></text></g><g><title>malloc (1,353,152 samples, 0.57%)</title><rect x="36.9059%" y="1749" width="0.5668%" height="15" fill="rgb(233,93,10)" fg:x="88106852" fg:w="1353152"/><text x="37.1559%" y="1759.50"></text></g><g><title>[libc.so.6] (1,353,152 samples, 0.57%)</title><rect x="36.9059%" y="1733" width="0.5668%" height="15" fill="rgb(225,113,19)" fg:x="88106852" fg:w="1353152"/><text x="37.1559%" y="1743.50"></text></g><g><title>[libc.so.6] (1,353,152 samples, 0.57%)</title><rect x="36.9059%" y="1717" width="0.5668%" height="15" fill="rgb(241,2,18)" fg:x="88106852" fg:w="1353152"/><text x="37.1559%" y="1727.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,354,849 samples, 0.57%)</title><rect x="37.4727%" y="1925" width="0.5675%" height="15" fill="rgb(228,207,21)" fg:x="89460004" fg:w="1354849"/><text x="37.7227%" y="1935.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,354,849 samples, 0.57%)</title><rect x="37.4727%" y="1909" width="0.5675%" height="15" fill="rgb(213,211,35)" fg:x="89460004" fg:w="1354849"/><text x="37.7227%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,354,849 samples, 0.57%)</title><rect x="37.4727%" y="1893" width="0.5675%" height="15" fill="rgb(209,83,10)" fg:x="89460004" fg:w="1354849"/><text x="37.7227%" y="1903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,354,849 samples, 0.57%)</title><rect x="37.4727%" y="1877" width="0.5675%" height="15" fill="rgb(209,164,1)" fg:x="89460004" fg:w="1354849"/><text x="37.7227%" y="1887.50"></text></g><g><title>alloc::slice::hack::to_vec (1,354,849 samples, 0.57%)</title><rect x="37.4727%" y="1861" width="0.5675%" height="15" fill="rgb(213,184,43)" fg:x="89460004" fg:w="1354849"/><text x="37.7227%" y="1871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,354,849 samples, 0.57%)</title><rect x="37.4727%" y="1845" width="0.5675%" height="15" fill="rgb(231,61,34)" fg:x="89460004" fg:w="1354849"/><text x="37.7227%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,354,849 samples, 0.57%)</title><rect x="37.4727%" y="1829" width="0.5675%" height="15" fill="rgb(235,75,3)" fg:x="89460004" fg:w="1354849"/><text x="37.7227%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,354,849 samples, 0.57%)</title><rect x="37.4727%" y="1813" width="0.5675%" height="15" fill="rgb(220,106,47)" fg:x="89460004" fg:w="1354849"/><text x="37.7227%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,354,849 samples, 0.57%)</title><rect x="37.4727%" y="1797" width="0.5675%" height="15" fill="rgb(210,196,33)" fg:x="89460004" fg:w="1354849"/><text x="37.7227%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,354,849 samples, 0.57%)</title><rect x="37.4727%" y="1781" width="0.5675%" height="15" fill="rgb(229,154,42)" fg:x="89460004" fg:w="1354849"/><text x="37.7227%" y="1791.50"></text></g><g><title>alloc::raw_vec::layout_array (1,354,849 samples, 0.57%)</title><rect x="37.4727%" y="1765" width="0.5675%" height="15" fill="rgb(228,114,26)" fg:x="89460004" fg:w="1354849"/><text x="37.7227%" y="1775.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1,354,849 samples, 0.57%)</title><rect x="37.4727%" y="1749" width="0.5675%" height="15" fill="rgb(208,144,1)" fg:x="89460004" fg:w="1354849"/><text x="37.7227%" y="1759.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (1,354,849 samples, 0.57%)</title><rect x="37.4727%" y="1733" width="0.5675%" height="15" fill="rgb(239,112,37)" fg:x="89460004" fg:w="1354849"/><text x="37.7227%" y="1743.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1,354,849 samples, 0.57%)</title><rect x="37.4727%" y="1717" width="0.5675%" height="15" fill="rgb(210,96,50)" fg:x="89460004" fg:w="1354849"/><text x="37.7227%" y="1727.50"></text></g><g><title>core::intrinsics::unlikely (1,354,849 samples, 0.57%)</title><rect x="37.4727%" y="1701" width="0.5675%" height="15" fill="rgb(222,178,2)" fg:x="89460004" fg:w="1354849"/><text x="37.7227%" y="1711.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,341,613 samples, 0.56%)</title><rect x="38.0402%" y="1925" width="0.5620%" height="15" fill="rgb(226,74,18)" fg:x="90814853" fg:w="1341613"/><text x="38.2902%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,341,613 samples, 0.56%)</title><rect x="38.0402%" y="1909" width="0.5620%" height="15" fill="rgb(225,67,54)" fg:x="90814853" fg:w="1341613"/><text x="38.2902%" y="1919.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,341,613 samples, 0.56%)</title><rect x="38.0402%" y="1893" width="0.5620%" height="15" fill="rgb(251,92,32)" fg:x="90814853" fg:w="1341613"/><text x="38.2902%" y="1903.50"></text></g><g><title>alloc::slice::hack::to_vec (1,341,613 samples, 0.56%)</title><rect x="38.0402%" y="1877" width="0.5620%" height="15" fill="rgb(228,149,22)" fg:x="90814853" fg:w="1341613"/><text x="38.2902%" y="1887.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,341,613 samples, 0.56%)</title><rect x="38.0402%" y="1861" width="0.5620%" height="15" fill="rgb(243,54,13)" fg:x="90814853" fg:w="1341613"/><text x="38.2902%" y="1871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,341,613 samples, 0.56%)</title><rect x="38.0402%" y="1845" width="0.5620%" height="15" fill="rgb(243,180,28)" fg:x="90814853" fg:w="1341613"/><text x="38.2902%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,341,613 samples, 0.56%)</title><rect x="38.0402%" y="1829" width="0.5620%" height="15" fill="rgb(208,167,24)" fg:x="90814853" fg:w="1341613"/><text x="38.2902%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,341,613 samples, 0.56%)</title><rect x="38.0402%" y="1813" width="0.5620%" height="15" fill="rgb(245,73,45)" fg:x="90814853" fg:w="1341613"/><text x="38.2902%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,341,613 samples, 0.56%)</title><rect x="38.0402%" y="1797" width="0.5620%" height="15" fill="rgb(237,203,48)" fg:x="90814853" fg:w="1341613"/><text x="38.2902%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,341,613 samples, 0.56%)</title><rect x="38.0402%" y="1781" width="0.5620%" height="15" fill="rgb(211,197,16)" fg:x="90814853" fg:w="1341613"/><text x="38.2902%" y="1791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,341,613 samples, 0.56%)</title><rect x="38.0402%" y="1765" width="0.5620%" height="15" fill="rgb(243,99,51)" fg:x="90814853" fg:w="1341613"/><text x="38.2902%" y="1775.50"></text></g><g><title>alloc::alloc::alloc (1,341,613 samples, 0.56%)</title><rect x="38.0402%" y="1749" width="0.5620%" height="15" fill="rgb(215,123,29)" fg:x="90814853" fg:w="1341613"/><text x="38.2902%" y="1759.50"></text></g><g><title>malloc (1,341,613 samples, 0.56%)</title><rect x="38.0402%" y="1733" width="0.5620%" height="15" fill="rgb(239,186,37)" fg:x="90814853" fg:w="1341613"/><text x="38.2902%" y="1743.50"></text></g><g><title>[libc.so.6] (1,341,613 samples, 0.56%)</title><rect x="38.0402%" y="1717" width="0.5620%" height="15" fill="rgb(252,136,39)" fg:x="90814853" fg:w="1341613"/><text x="38.2902%" y="1727.50"></text></g><g><title>[libc.so.6] (1,341,613 samples, 0.56%)</title><rect x="38.0402%" y="1701" width="0.5620%" height="15" fill="rgb(223,213,32)" fg:x="90814853" fg:w="1341613"/><text x="38.2902%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23,872,362 samples, 10.00%)</title><rect x="29.1662%" y="2005" width="9.9996%" height="15" fill="rgb(233,115,5)" fg:x="69629440" fg:w="23872362"/><text x="29.4162%" y="2015.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23,872,362 samples, 10.00%)</title><rect x="29.1662%" y="1989" width="9.9996%" height="15" fill="rgb(207,226,44)" fg:x="69629440" fg:w="23872362"/><text x="29.4162%" y="1999.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (23,872,362 samples, 10.00%)</title><rect x="29.1662%" y="1973" width="9.9996%" height="15" fill="rgb(208,126,0)" fg:x="69629440" fg:w="23872362"/><text x="29.4162%" y="1983.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23,872,362 samples, 10.00%)</title><rect x="29.1662%" y="1957" width="9.9996%" height="15" fill="rgb(244,66,21)" fg:x="69629440" fg:w="23872362"/><text x="29.4162%" y="1967.50">&lt;T as alloc::s..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (23,872,362 samples, 10.00%)</title><rect x="29.1662%" y="1941" width="9.9996%" height="15" fill="rgb(222,97,12)" fg:x="69629440" fg:w="23872362"/><text x="29.4162%" y="1951.50">&lt;css_bitvector..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1925" width="0.5635%" height="15" fill="rgb(219,213,19)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1935.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1909" width="0.5635%" height="15" fill="rgb(252,169,30)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1919.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1893" width="0.5635%" height="15" fill="rgb(206,32,51)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1903.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1877" width="0.5635%" height="15" fill="rgb(250,172,42)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1887.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1861" width="0.5635%" height="15" fill="rgb(209,34,43)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1871.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1845" width="0.5635%" height="15" fill="rgb(223,11,35)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1855.50"></text></g><g><title>core::clone::Clone::clone (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1829" width="0.5635%" height="15" fill="rgb(251,219,26)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1839.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1813" width="0.5635%" height="15" fill="rgb(231,119,3)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1797" width="0.5635%" height="15" fill="rgb(216,97,11)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1781" width="0.5635%" height="15" fill="rgb(223,59,9)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1791.50"></text></g><g><title>alloc::slice::hack::to_vec (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1765" width="0.5635%" height="15" fill="rgb(233,93,31)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1749" width="0.5635%" height="15" fill="rgb(239,81,33)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1733" width="0.5635%" height="15" fill="rgb(213,120,34)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1717" width="0.5635%" height="15" fill="rgb(243,49,53)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1701" width="0.5635%" height="15" fill="rgb(247,216,33)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1685" width="0.5635%" height="15" fill="rgb(226,26,14)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1669" width="0.5635%" height="15" fill="rgb(215,49,53)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1679.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1653" width="0.5635%" height="15" fill="rgb(245,162,40)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1663.50"></text></g><g><title>alloc::alloc::alloc (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1637" width="0.5635%" height="15" fill="rgb(229,68,17)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1647.50"></text></g><g><title>malloc (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1621" width="0.5635%" height="15" fill="rgb(213,182,10)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1631.50"></text></g><g><title>[libc.so.6] (1,345,336 samples, 0.56%)</title><rect x="38.6022%" y="1605" width="0.5635%" height="15" fill="rgb(245,125,30)" fg:x="92156466" fg:w="1345336"/><text x="38.8522%" y="1615.50"></text></g><g><title>core::clone::Clone::clone (1,331,841 samples, 0.56%)</title><rect x="39.1657%" y="1909" width="0.5579%" height="15" fill="rgb(232,202,2)" fg:x="93501802" fg:w="1331841"/><text x="39.4157%" y="1919.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,331,841 samples, 0.56%)</title><rect x="39.1657%" y="1893" width="0.5579%" height="15" fill="rgb(237,140,51)" fg:x="93501802" fg:w="1331841"/><text x="39.4157%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,331,841 samples, 0.56%)</title><rect x="39.1657%" y="1877" width="0.5579%" height="15" fill="rgb(236,157,25)" fg:x="93501802" fg:w="1331841"/><text x="39.4157%" y="1887.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,331,841 samples, 0.56%)</title><rect x="39.1657%" y="1861" width="0.5579%" height="15" fill="rgb(219,209,0)" fg:x="93501802" fg:w="1331841"/><text x="39.4157%" y="1871.50"></text></g><g><title>alloc::slice::hack::to_vec (1,331,841 samples, 0.56%)</title><rect x="39.1657%" y="1845" width="0.5579%" height="15" fill="rgb(240,116,54)" fg:x="93501802" fg:w="1331841"/><text x="39.4157%" y="1855.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,331,841 samples, 0.56%)</title><rect x="39.1657%" y="1829" width="0.5579%" height="15" fill="rgb(216,10,36)" fg:x="93501802" fg:w="1331841"/><text x="39.4157%" y="1839.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,331,841 samples, 0.56%)</title><rect x="39.1657%" y="1813" width="0.5579%" height="15" fill="rgb(222,72,44)" fg:x="93501802" fg:w="1331841"/><text x="39.4157%" y="1823.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,331,841 samples, 0.56%)</title><rect x="39.1657%" y="1797" width="0.5579%" height="15" fill="rgb(232,159,9)" fg:x="93501802" fg:w="1331841"/><text x="39.4157%" y="1807.50"></text></g><g><title>[libc.so.6] (1,331,841 samples, 0.56%)</title><rect x="39.1657%" y="1781" width="0.5579%" height="15" fill="rgb(210,39,32)" fg:x="93501802" fg:w="1331841"/><text x="39.4157%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27,791,070 samples, 11.64%)</title><rect x="28.6176%" y="2085" width="11.6410%" height="15" fill="rgb(216,194,45)" fg:x="68319948" fg:w="27791070"/><text x="28.8676%" y="2095.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27,791,070 samples, 11.64%)</title><rect x="28.6176%" y="2069" width="11.6410%" height="15" fill="rgb(218,18,35)" fg:x="68319948" fg:w="27791070"/><text x="28.8676%" y="2079.50">alloc::slice::&lt;im..</text></g><g><title>alloc::slice::hack::to_vec (27,791,070 samples, 11.64%)</title><rect x="28.6176%" y="2053" width="11.6410%" height="15" fill="rgb(207,83,51)" fg:x="68319948" fg:w="27791070"/><text x="28.8676%" y="2063.50">alloc::slice::hac..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27,791,070 samples, 11.64%)</title><rect x="28.6176%" y="2037" width="11.6410%" height="15" fill="rgb(225,63,43)" fg:x="68319948" fg:w="27791070"/><text x="28.8676%" y="2047.50">&lt;T as alloc::slic..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (27,791,070 samples, 11.64%)</title><rect x="28.6176%" y="2021" width="11.6410%" height="15" fill="rgb(207,57,36)" fg:x="68319948" fg:w="27791070"/><text x="28.8676%" y="2031.50">&lt;css_bitvector_co..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,609,216 samples, 1.09%)</title><rect x="39.1657%" y="2005" width="1.0929%" height="15" fill="rgb(216,99,33)" fg:x="93501802" fg:w="2609216"/><text x="39.4157%" y="2015.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,609,216 samples, 1.09%)</title><rect x="39.1657%" y="1989" width="1.0929%" height="15" fill="rgb(225,42,16)" fg:x="93501802" fg:w="2609216"/><text x="39.4157%" y="1999.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,609,216 samples, 1.09%)</title><rect x="39.1657%" y="1973" width="1.0929%" height="15" fill="rgb(220,201,45)" fg:x="93501802" fg:w="2609216"/><text x="39.4157%" y="1983.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,609,216 samples, 1.09%)</title><rect x="39.1657%" y="1957" width="1.0929%" height="15" fill="rgb(225,33,4)" fg:x="93501802" fg:w="2609216"/><text x="39.4157%" y="1967.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,609,216 samples, 1.09%)</title><rect x="39.1657%" y="1941" width="1.0929%" height="15" fill="rgb(224,33,50)" fg:x="93501802" fg:w="2609216"/><text x="39.4157%" y="1951.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,609,216 samples, 1.09%)</title><rect x="39.1657%" y="1925" width="1.0929%" height="15" fill="rgb(246,198,51)" fg:x="93501802" fg:w="2609216"/><text x="39.4157%" y="1935.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1,277,375 samples, 0.54%)</title><rect x="39.7236%" y="1909" width="0.5351%" height="15" fill="rgb(205,22,4)" fg:x="94833643" fg:w="1277375"/><text x="39.9736%" y="1919.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,277,375 samples, 0.54%)</title><rect x="39.7236%" y="1893" width="0.5351%" height="15" fill="rgb(206,3,8)" fg:x="94833643" fg:w="1277375"/><text x="39.9736%" y="1903.50"></text></g><g><title>core::ptr::write (1,277,375 samples, 0.54%)</title><rect x="39.7236%" y="1877" width="0.5351%" height="15" fill="rgb(251,23,15)" fg:x="94833643" fg:w="1277375"/><text x="39.9736%" y="1887.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,245,962 samples, 0.52%)</title><rect x="40.2587%" y="2085" width="0.5219%" height="15" fill="rgb(252,88,28)" fg:x="96111018" fg:w="1245962"/><text x="40.5087%" y="2095.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,245,962 samples, 0.52%)</title><rect x="40.2587%" y="2069" width="0.5219%" height="15" fill="rgb(212,127,14)" fg:x="96111018" fg:w="1245962"/><text x="40.5087%" y="2079.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,245,962 samples, 0.52%)</title><rect x="40.2587%" y="2053" width="0.5219%" height="15" fill="rgb(247,145,37)" fg:x="96111018" fg:w="1245962"/><text x="40.5087%" y="2063.50"></text></g><g><title>alloc::slice::hack::to_vec (1,245,962 samples, 0.52%)</title><rect x="40.2587%" y="2037" width="0.5219%" height="15" fill="rgb(209,117,53)" fg:x="96111018" fg:w="1245962"/><text x="40.5087%" y="2047.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,245,962 samples, 0.52%)</title><rect x="40.2587%" y="2021" width="0.5219%" height="15" fill="rgb(212,90,42)" fg:x="96111018" fg:w="1245962"/><text x="40.5087%" y="2031.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,245,962 samples, 0.52%)</title><rect x="40.2587%" y="2005" width="0.5219%" height="15" fill="rgb(218,164,37)" fg:x="96111018" fg:w="1245962"/><text x="40.5087%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,245,962 samples, 0.52%)</title><rect x="40.2587%" y="1989" width="0.5219%" height="15" fill="rgb(246,65,34)" fg:x="96111018" fg:w="1245962"/><text x="40.5087%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,245,962 samples, 0.52%)</title><rect x="40.2587%" y="1973" width="0.5219%" height="15" fill="rgb(231,100,33)" fg:x="96111018" fg:w="1245962"/><text x="40.5087%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,245,962 samples, 0.52%)</title><rect x="40.2587%" y="1957" width="0.5219%" height="15" fill="rgb(228,126,14)" fg:x="96111018" fg:w="1245962"/><text x="40.5087%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,245,962 samples, 0.52%)</title><rect x="40.2587%" y="1941" width="0.5219%" height="15" fill="rgb(215,173,21)" fg:x="96111018" fg:w="1245962"/><text x="40.5087%" y="1951.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,245,962 samples, 0.52%)</title><rect x="40.2587%" y="1925" width="0.5219%" height="15" fill="rgb(210,6,40)" fg:x="96111018" fg:w="1245962"/><text x="40.5087%" y="1935.50"></text></g><g><title>alloc::alloc::alloc (1,245,962 samples, 0.52%)</title><rect x="40.2587%" y="1909" width="0.5219%" height="15" fill="rgb(212,48,18)" fg:x="96111018" fg:w="1245962"/><text x="40.5087%" y="1919.50"></text></g><g><title>malloc (1,245,962 samples, 0.52%)</title><rect x="40.2587%" y="1893" width="0.5219%" height="15" fill="rgb(230,214,11)" fg:x="96111018" fg:w="1245962"/><text x="40.5087%" y="1903.50"></text></g><g><title>[libc.so.6] (1,245,962 samples, 0.52%)</title><rect x="40.2587%" y="1877" width="0.5219%" height="15" fill="rgb(254,105,39)" fg:x="96111018" fg:w="1245962"/><text x="40.5087%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30,277,303 samples, 12.68%)</title><rect x="28.6176%" y="2165" width="12.6825%" height="15" fill="rgb(245,158,5)" fg:x="68319948" fg:w="30277303"/><text x="28.8676%" y="2175.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30,277,303 samples, 12.68%)</title><rect x="28.6176%" y="2149" width="12.6825%" height="15" fill="rgb(249,208,11)" fg:x="68319948" fg:w="30277303"/><text x="28.8676%" y="2159.50">alloc::slice::&lt;impl..</text></g><g><title>alloc::slice::hack::to_vec (30,277,303 samples, 12.68%)</title><rect x="28.6176%" y="2133" width="12.6825%" height="15" fill="rgb(210,39,28)" fg:x="68319948" fg:w="30277303"/><text x="28.8676%" y="2143.50">alloc::slice::hack:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30,277,303 samples, 12.68%)</title><rect x="28.6176%" y="2117" width="12.6825%" height="15" fill="rgb(211,56,53)" fg:x="68319948" fg:w="30277303"/><text x="28.8676%" y="2127.50">&lt;T as alloc::slice:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (30,277,303 samples, 12.68%)</title><rect x="28.6176%" y="2101" width="12.6825%" height="15" fill="rgb(226,201,30)" fg:x="68319948" fg:w="30277303"/><text x="28.8676%" y="2111.50">&lt;css_bitvector_comp..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,240,271 samples, 0.52%)</title><rect x="40.7806%" y="2085" width="0.5195%" height="15" fill="rgb(239,101,34)" fg:x="97356980" fg:w="1240271"/><text x="41.0306%" y="2095.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,240,271 samples, 0.52%)</title><rect x="40.7806%" y="2069" width="0.5195%" height="15" fill="rgb(226,209,5)" fg:x="97356980" fg:w="1240271"/><text x="41.0306%" y="2079.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,240,271 samples, 0.52%)</title><rect x="40.7806%" y="2053" width="0.5195%" height="15" fill="rgb(250,105,47)" fg:x="97356980" fg:w="1240271"/><text x="41.0306%" y="2063.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,240,271 samples, 0.52%)</title><rect x="40.7806%" y="2037" width="0.5195%" height="15" fill="rgb(230,72,3)" fg:x="97356980" fg:w="1240271"/><text x="41.0306%" y="2047.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,240,271 samples, 0.52%)</title><rect x="40.7806%" y="2021" width="0.5195%" height="15" fill="rgb(232,218,39)" fg:x="97356980" fg:w="1240271"/><text x="41.0306%" y="2031.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,240,271 samples, 0.52%)</title><rect x="40.7806%" y="2005" width="0.5195%" height="15" fill="rgb(248,166,6)" fg:x="97356980" fg:w="1240271"/><text x="41.0306%" y="2015.50"></text></g><g><title>core::clone::Clone::clone (1,240,271 samples, 0.52%)</title><rect x="40.7806%" y="1989" width="0.5195%" height="15" fill="rgb(247,89,20)" fg:x="97356980" fg:w="1240271"/><text x="41.0306%" y="1999.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,240,271 samples, 0.52%)</title><rect x="40.7806%" y="1973" width="0.5195%" height="15" fill="rgb(248,130,54)" fg:x="97356980" fg:w="1240271"/><text x="41.0306%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,240,271 samples, 0.52%)</title><rect x="40.7806%" y="1957" width="0.5195%" height="15" fill="rgb(234,196,4)" fg:x="97356980" fg:w="1240271"/><text x="41.0306%" y="1967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,240,271 samples, 0.52%)</title><rect x="40.7806%" y="1941" width="0.5195%" height="15" fill="rgb(250,143,31)" fg:x="97356980" fg:w="1240271"/><text x="41.0306%" y="1951.50"></text></g><g><title>alloc::slice::hack::to_vec (1,240,271 samples, 0.52%)</title><rect x="40.7806%" y="1925" width="0.5195%" height="15" fill="rgb(211,110,34)" fg:x="97356980" fg:w="1240271"/><text x="41.0306%" y="1935.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,240,271 samples, 0.52%)</title><rect x="40.7806%" y="1909" width="0.5195%" height="15" fill="rgb(215,124,48)" fg:x="97356980" fg:w="1240271"/><text x="41.0306%" y="1919.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,240,271 samples, 0.52%)</title><rect x="40.7806%" y="1893" width="0.5195%" height="15" fill="rgb(216,46,13)" fg:x="97356980" fg:w="1240271"/><text x="41.0306%" y="1903.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,240,271 samples, 0.52%)</title><rect x="40.7806%" y="1877" width="0.5195%" height="15" fill="rgb(205,184,25)" fg:x="97356980" fg:w="1240271"/><text x="41.0306%" y="1887.50"></text></g><g><title>[libc.so.6] (1,240,271 samples, 0.52%)</title><rect x="40.7806%" y="1861" width="0.5195%" height="15" fill="rgb(228,1,10)" fg:x="97356980" fg:w="1240271"/><text x="41.0306%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (34,030,105 samples, 14.25%)</title><rect x="28.6176%" y="2245" width="14.2544%" height="15" fill="rgb(213,116,27)" fg:x="68319948" fg:w="34030105"/><text x="28.8676%" y="2255.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34,030,105 samples, 14.25%)</title><rect x="28.6176%" y="2229" width="14.2544%" height="15" fill="rgb(241,95,50)" fg:x="68319948" fg:w="34030105"/><text x="28.8676%" y="2239.50">alloc::slice::&lt;impl [T..</text></g><g><title>alloc::slice::hack::to_vec (34,030,105 samples, 14.25%)</title><rect x="28.6176%" y="2213" width="14.2544%" height="15" fill="rgb(238,48,32)" fg:x="68319948" fg:w="34030105"/><text x="28.8676%" y="2223.50">alloc::slice::hack::to..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34,030,105 samples, 14.25%)</title><rect x="28.6176%" y="2197" width="14.2544%" height="15" fill="rgb(235,113,49)" fg:x="68319948" fg:w="34030105"/><text x="28.8676%" y="2207.50">&lt;T as alloc::slice::ha..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (34,030,105 samples, 14.25%)</title><rect x="28.6176%" y="2181" width="14.2544%" height="15" fill="rgb(205,127,43)" fg:x="68319948" fg:w="34030105"/><text x="28.8676%" y="2191.50">&lt;css_bitvector_compile..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,752,802 samples, 1.57%)</title><rect x="41.3001%" y="2165" width="1.5720%" height="15" fill="rgb(250,162,2)" fg:x="98597251" fg:w="3752802"/><text x="41.5501%" y="2175.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,752,802 samples, 1.57%)</title><rect x="41.3001%" y="2149" width="1.5720%" height="15" fill="rgb(220,13,41)" fg:x="98597251" fg:w="3752802"/><text x="41.5501%" y="2159.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,473,572 samples, 1.04%)</title><rect x="41.8360%" y="2133" width="1.0361%" height="15" fill="rgb(249,221,25)" fg:x="99876481" fg:w="2473572"/><text x="42.0860%" y="2143.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,473,572 samples, 1.04%)</title><rect x="41.8360%" y="2117" width="1.0361%" height="15" fill="rgb(215,208,19)" fg:x="99876481" fg:w="2473572"/><text x="42.0860%" y="2127.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,473,572 samples, 1.04%)</title><rect x="41.8360%" y="2101" width="1.0361%" height="15" fill="rgb(236,175,2)" fg:x="99876481" fg:w="2473572"/><text x="42.0860%" y="2111.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,473,572 samples, 1.04%)</title><rect x="41.8360%" y="2085" width="1.0361%" height="15" fill="rgb(241,52,2)" fg:x="99876481" fg:w="2473572"/><text x="42.0860%" y="2095.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,473,572 samples, 1.04%)</title><rect x="41.8360%" y="2069" width="1.0361%" height="15" fill="rgb(248,140,14)" fg:x="99876481" fg:w="2473572"/><text x="42.0860%" y="2079.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,473,572 samples, 1.04%)</title><rect x="41.8360%" y="2053" width="1.0361%" height="15" fill="rgb(253,22,42)" fg:x="99876481" fg:w="2473572"/><text x="42.0860%" y="2063.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,473,572 samples, 1.04%)</title><rect x="41.8360%" y="2037" width="1.0361%" height="15" fill="rgb(234,61,47)" fg:x="99876481" fg:w="2473572"/><text x="42.0860%" y="2047.50"></text></g><g><title>alloc::alloc::alloc (2,473,572 samples, 1.04%)</title><rect x="41.8360%" y="2021" width="1.0361%" height="15" fill="rgb(208,226,15)" fg:x="99876481" fg:w="2473572"/><text x="42.0860%" y="2031.50"></text></g><g><title>malloc (2,473,572 samples, 1.04%)</title><rect x="41.8360%" y="2005" width="1.0361%" height="15" fill="rgb(217,221,4)" fg:x="99876481" fg:w="2473572"/><text x="42.0860%" y="2015.50"></text></g><g><title>[libc.so.6] (2,473,572 samples, 1.04%)</title><rect x="41.8360%" y="1989" width="1.0361%" height="15" fill="rgb(212,174,34)" fg:x="99876481" fg:w="2473572"/><text x="42.0860%" y="1999.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,863,929 samples, 1.62%)</title><rect x="42.8721%" y="2245" width="1.6185%" height="15" fill="rgb(253,83,4)" fg:x="102350053" fg:w="3863929"/><text x="43.1221%" y="2255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,289,831 samples, 0.54%)</title><rect x="43.9503%" y="2229" width="0.5403%" height="15" fill="rgb(250,195,49)" fg:x="104924151" fg:w="1289831"/><text x="44.2003%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,289,831 samples, 0.54%)</title><rect x="43.9503%" y="2213" width="0.5403%" height="15" fill="rgb(241,192,25)" fg:x="104924151" fg:w="1289831"/><text x="44.2003%" y="2223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,289,831 samples, 0.54%)</title><rect x="43.9503%" y="2197" width="0.5403%" height="15" fill="rgb(208,124,10)" fg:x="104924151" fg:w="1289831"/><text x="44.2003%" y="2207.50"></text></g><g><title>alloc::slice::hack::to_vec (1,289,831 samples, 0.54%)</title><rect x="43.9503%" y="2181" width="0.5403%" height="15" fill="rgb(222,33,0)" fg:x="104924151" fg:w="1289831"/><text x="44.2003%" y="2191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,289,831 samples, 0.54%)</title><rect x="43.9503%" y="2165" width="0.5403%" height="15" fill="rgb(234,209,28)" fg:x="104924151" fg:w="1289831"/><text x="44.2003%" y="2175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,289,831 samples, 0.54%)</title><rect x="43.9503%" y="2149" width="0.5403%" height="15" fill="rgb(224,11,23)" fg:x="104924151" fg:w="1289831"/><text x="44.2003%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,289,831 samples, 0.54%)</title><rect x="43.9503%" y="2133" width="0.5403%" height="15" fill="rgb(232,99,1)" fg:x="104924151" fg:w="1289831"/><text x="44.2003%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,289,831 samples, 0.54%)</title><rect x="43.9503%" y="2117" width="0.5403%" height="15" fill="rgb(237,95,45)" fg:x="104924151" fg:w="1289831"/><text x="44.2003%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,289,831 samples, 0.54%)</title><rect x="43.9503%" y="2101" width="0.5403%" height="15" fill="rgb(208,109,11)" fg:x="104924151" fg:w="1289831"/><text x="44.2003%" y="2111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,289,831 samples, 0.54%)</title><rect x="43.9503%" y="2085" width="0.5403%" height="15" fill="rgb(216,190,48)" fg:x="104924151" fg:w="1289831"/><text x="44.2003%" y="2095.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,289,831 samples, 0.54%)</title><rect x="43.9503%" y="2069" width="0.5403%" height="15" fill="rgb(251,171,36)" fg:x="104924151" fg:w="1289831"/><text x="44.2003%" y="2079.50"></text></g><g><title>alloc::alloc::alloc (1,289,831 samples, 0.54%)</title><rect x="43.9503%" y="2053" width="0.5403%" height="15" fill="rgb(230,62,22)" fg:x="104924151" fg:w="1289831"/><text x="44.2003%" y="2063.50"></text></g><g><title>malloc (1,289,831 samples, 0.54%)</title><rect x="43.9503%" y="2037" width="0.5403%" height="15" fill="rgb(225,114,35)" fg:x="104924151" fg:w="1289831"/><text x="44.2003%" y="2047.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (43,079,540 samples, 18.05%)</title><rect x="26.9821%" y="2261" width="18.0450%" height="15" fill="rgb(215,118,42)" fg:x="64415395" fg:w="43079540"/><text x="27.2321%" y="2271.50">&lt;css_bitvector_compiler::Htm..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,280,953 samples, 0.54%)</title><rect x="44.4906%" y="2245" width="0.5366%" height="15" fill="rgb(243,119,21)" fg:x="106213982" fg:w="1280953"/><text x="44.7406%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,280,953 samples, 0.54%)</title><rect x="44.4906%" y="2229" width="0.5366%" height="15" fill="rgb(252,177,53)" fg:x="106213982" fg:w="1280953"/><text x="44.7406%" y="2239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,280,953 samples, 0.54%)</title><rect x="44.4906%" y="2213" width="0.5366%" height="15" fill="rgb(237,209,29)" fg:x="106213982" fg:w="1280953"/><text x="44.7406%" y="2223.50"></text></g><g><title>alloc::slice::hack::to_vec (1,280,953 samples, 0.54%)</title><rect x="44.4906%" y="2197" width="0.5366%" height="15" fill="rgb(212,65,23)" fg:x="106213982" fg:w="1280953"/><text x="44.7406%" y="2207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,280,953 samples, 0.54%)</title><rect x="44.4906%" y="2181" width="0.5366%" height="15" fill="rgb(230,222,46)" fg:x="106213982" fg:w="1280953"/><text x="44.7406%" y="2191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,280,953 samples, 0.54%)</title><rect x="44.4906%" y="2165" width="0.5366%" height="15" fill="rgb(215,135,32)" fg:x="106213982" fg:w="1280953"/><text x="44.7406%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,280,953 samples, 0.54%)</title><rect x="44.4906%" y="2149" width="0.5366%" height="15" fill="rgb(246,101,22)" fg:x="106213982" fg:w="1280953"/><text x="44.7406%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,280,953 samples, 0.54%)</title><rect x="44.4906%" y="2133" width="0.5366%" height="15" fill="rgb(206,107,13)" fg:x="106213982" fg:w="1280953"/><text x="44.7406%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,280,953 samples, 0.54%)</title><rect x="44.4906%" y="2117" width="0.5366%" height="15" fill="rgb(250,100,44)" fg:x="106213982" fg:w="1280953"/><text x="44.7406%" y="2127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,280,953 samples, 0.54%)</title><rect x="44.4906%" y="2101" width="0.5366%" height="15" fill="rgb(231,147,38)" fg:x="106213982" fg:w="1280953"/><text x="44.7406%" y="2111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,280,953 samples, 0.54%)</title><rect x="44.4906%" y="2085" width="0.5366%" height="15" fill="rgb(229,8,40)" fg:x="106213982" fg:w="1280953"/><text x="44.7406%" y="2095.50"></text></g><g><title>alloc::alloc::alloc (1,280,953 samples, 0.54%)</title><rect x="44.4906%" y="2069" width="0.5366%" height="15" fill="rgb(221,135,30)" fg:x="106213982" fg:w="1280953"/><text x="44.7406%" y="2079.50"></text></g><g><title>malloc (1,280,953 samples, 0.54%)</title><rect x="44.4906%" y="2053" width="0.5366%" height="15" fill="rgb(249,193,18)" fg:x="106213982" fg:w="1280953"/><text x="44.7406%" y="2063.50"></text></g><g><title>[libc.so.6] (1,280,953 samples, 0.54%)</title><rect x="44.4906%" y="2037" width="0.5366%" height="15" fill="rgb(209,133,39)" fg:x="106213982" fg:w="1280953"/><text x="44.7406%" y="2047.50"></text></g><g><title>__rdl_alloc (1,301,622 samples, 0.55%)</title><rect x="45.0271%" y="2149" width="0.5452%" height="15" fill="rgb(232,100,14)" fg:x="107494935" fg:w="1301622"/><text x="45.2771%" y="2159.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,301,622 samples, 0.55%)</title><rect x="45.0271%" y="2133" width="0.5452%" height="15" fill="rgb(224,185,1)" fg:x="107494935" fg:w="1301622"/><text x="45.2771%" y="2143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,893,828 samples, 1.63%)</title><rect x="45.0271%" y="2261" width="1.6310%" height="15" fill="rgb(223,139,8)" fg:x="107494935" fg:w="3893828"/><text x="45.2771%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,893,828 samples, 1.63%)</title><rect x="45.0271%" y="2245" width="1.6310%" height="15" fill="rgb(232,213,38)" fg:x="107494935" fg:w="3893828"/><text x="45.2771%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,893,828 samples, 1.63%)</title><rect x="45.0271%" y="2229" width="1.6310%" height="15" fill="rgb(207,94,22)" fg:x="107494935" fg:w="3893828"/><text x="45.2771%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,893,828 samples, 1.63%)</title><rect x="45.0271%" y="2213" width="1.6310%" height="15" fill="rgb(219,183,54)" fg:x="107494935" fg:w="3893828"/><text x="45.2771%" y="2223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,893,828 samples, 1.63%)</title><rect x="45.0271%" y="2197" width="1.6310%" height="15" fill="rgb(216,185,54)" fg:x="107494935" fg:w="3893828"/><text x="45.2771%" y="2207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,893,828 samples, 1.63%)</title><rect x="45.0271%" y="2181" width="1.6310%" height="15" fill="rgb(254,217,39)" fg:x="107494935" fg:w="3893828"/><text x="45.2771%" y="2191.50"></text></g><g><title>alloc::alloc::alloc (3,893,828 samples, 1.63%)</title><rect x="45.0271%" y="2165" width="1.6310%" height="15" fill="rgb(240,178,23)" fg:x="107494935" fg:w="3893828"/><text x="45.2771%" y="2175.50"></text></g><g><title>malloc (2,592,206 samples, 1.09%)</title><rect x="45.5724%" y="2149" width="1.0858%" height="15" fill="rgb(218,11,47)" fg:x="108796557" fg:w="2592206"/><text x="45.8224%" y="2159.50"></text></g><g><title>[libc.so.6] (1,301,851 samples, 0.55%)</title><rect x="46.1129%" y="2133" width="0.5453%" height="15" fill="rgb(218,51,51)" fg:x="110086912" fg:w="1301851"/><text x="46.3629%" y="2143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (49,559,699 samples, 20.76%)</title><rect x="26.9821%" y="2325" width="20.7594%" height="15" fill="rgb(238,126,27)" fg:x="64415395" fg:w="49559699"/><text x="27.2321%" y="2335.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (49,559,699 samples, 20.76%)</title><rect x="26.9821%" y="2309" width="20.7594%" height="15" fill="rgb(249,202,22)" fg:x="64415395" fg:w="49559699"/><text x="27.2321%" y="2319.50">alloc::slice::&lt;impl [T]&gt;::to_vec_..</text></g><g><title>alloc::slice::hack::to_vec (49,559,699 samples, 20.76%)</title><rect x="26.9821%" y="2293" width="20.7594%" height="15" fill="rgb(254,195,49)" fg:x="64415395" fg:w="49559699"/><text x="27.2321%" y="2303.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (49,559,699 samples, 20.76%)</title><rect x="26.9821%" y="2277" width="20.7594%" height="15" fill="rgb(208,123,14)" fg:x="64415395" fg:w="49559699"/><text x="27.2321%" y="2287.50">&lt;T as alloc::slice::hack::Convert..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,586,331 samples, 1.08%)</title><rect x="46.6582%" y="2261" width="1.0834%" height="15" fill="rgb(224,200,8)" fg:x="111388763" fg:w="2586331"/><text x="46.9082%" y="2271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,502,207 samples, 1.05%)</title><rect x="47.7415%" y="2229" width="1.0481%" height="15" fill="rgb(217,61,36)" fg:x="113975094" fg:w="2502207"/><text x="47.9915%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,502,207 samples, 1.05%)</title><rect x="47.7415%" y="2213" width="1.0481%" height="15" fill="rgb(206,35,45)" fg:x="113975094" fg:w="2502207"/><text x="47.9915%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,502,207 samples, 1.05%)</title><rect x="47.7415%" y="2197" width="1.0481%" height="15" fill="rgb(217,65,33)" fg:x="113975094" fg:w="2502207"/><text x="47.9915%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,502,207 samples, 1.05%)</title><rect x="47.7415%" y="2181" width="1.0481%" height="15" fill="rgb(222,158,48)" fg:x="113975094" fg:w="2502207"/><text x="47.9915%" y="2191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,502,207 samples, 1.05%)</title><rect x="47.7415%" y="2165" width="1.0481%" height="15" fill="rgb(254,2,54)" fg:x="113975094" fg:w="2502207"/><text x="47.9915%" y="2175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,502,207 samples, 1.05%)</title><rect x="47.7415%" y="2149" width="1.0481%" height="15" fill="rgb(250,143,38)" fg:x="113975094" fg:w="2502207"/><text x="47.9915%" y="2159.50"></text></g><g><title>alloc::alloc::alloc (2,502,207 samples, 1.05%)</title><rect x="47.7415%" y="2133" width="1.0481%" height="15" fill="rgb(248,25,0)" fg:x="113975094" fg:w="2502207"/><text x="47.9915%" y="2143.50"></text></g><g><title>malloc (2,502,207 samples, 1.05%)</title><rect x="47.7415%" y="2117" width="1.0481%" height="15" fill="rgb(206,152,27)" fg:x="113975094" fg:w="2502207"/><text x="47.9915%" y="2127.50"></text></g><g><title>[libc.so.6] (1,279,604 samples, 0.54%)</title><rect x="48.2537%" y="2101" width="0.5360%" height="15" fill="rgb(240,77,30)" fg:x="115197697" fg:w="1279604"/><text x="48.5037%" y="2111.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (62,096,650 samples, 26.01%)</title><rect x="23.2858%" y="2341" width="26.0109%" height="15" fill="rgb(231,5,3)" fg:x="55590958" fg:w="62096650"/><text x="23.5358%" y="2351.50">&lt;css_bitvector_compiler::HtmlNode as core:..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,712,514 samples, 1.56%)</title><rect x="47.7415%" y="2325" width="1.5551%" height="15" fill="rgb(207,226,32)" fg:x="113975094" fg:w="3712514"/><text x="47.9915%" y="2335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,712,514 samples, 1.56%)</title><rect x="47.7415%" y="2309" width="1.5551%" height="15" fill="rgb(222,207,47)" fg:x="113975094" fg:w="3712514"/><text x="47.9915%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,712,514 samples, 1.56%)</title><rect x="47.7415%" y="2293" width="1.5551%" height="15" fill="rgb(229,115,45)" fg:x="113975094" fg:w="3712514"/><text x="47.9915%" y="2303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,712,514 samples, 1.56%)</title><rect x="47.7415%" y="2277" width="1.5551%" height="15" fill="rgb(224,191,6)" fg:x="113975094" fg:w="3712514"/><text x="47.9915%" y="2287.50"></text></g><g><title>alloc::slice::hack::to_vec (3,712,514 samples, 1.56%)</title><rect x="47.7415%" y="2261" width="1.5551%" height="15" fill="rgb(230,227,24)" fg:x="113975094" fg:w="3712514"/><text x="47.9915%" y="2271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,712,514 samples, 1.56%)</title><rect x="47.7415%" y="2245" width="1.5551%" height="15" fill="rgb(228,80,19)" fg:x="113975094" fg:w="3712514"/><text x="47.9915%" y="2255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,210,307 samples, 0.51%)</title><rect x="48.7897%" y="2229" width="0.5070%" height="15" fill="rgb(247,229,0)" fg:x="116477301" fg:w="1210307"/><text x="49.0397%" y="2239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,210,307 samples, 0.51%)</title><rect x="48.7897%" y="2213" width="0.5070%" height="15" fill="rgb(237,194,15)" fg:x="116477301" fg:w="1210307"/><text x="49.0397%" y="2223.50"></text></g><g><title>[libc.so.6] (1,210,307 samples, 0.51%)</title><rect x="48.7897%" y="2197" width="0.5070%" height="15" fill="rgb(219,203,20)" fg:x="116477301" fg:w="1210307"/><text x="49.0397%" y="2207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (64,734,532 samples, 27.12%)</title><rect x="22.7390%" y="2405" width="27.1158%" height="15" fill="rgb(234,128,8)" fg:x="54285610" fg:w="64734532"/><text x="22.9890%" y="2415.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (64,734,532 samples, 27.12%)</title><rect x="22.7390%" y="2389" width="27.1158%" height="15" fill="rgb(248,202,8)" fg:x="54285610" fg:w="64734532"/><text x="22.9890%" y="2399.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (64,734,532 samples, 27.12%)</title><rect x="22.7390%" y="2373" width="27.1158%" height="15" fill="rgb(206,104,37)" fg:x="54285610" fg:w="64734532"/><text x="22.9890%" y="2383.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (64,734,532 samples, 27.12%)</title><rect x="22.7390%" y="2357" width="27.1158%" height="15" fill="rgb(223,8,27)" fg:x="54285610" fg:w="64734532"/><text x="22.9890%" y="2367.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,332,534 samples, 0.56%)</title><rect x="49.2966%" y="2341" width="0.5582%" height="15" fill="rgb(216,217,28)" fg:x="117687608" fg:w="1332534"/><text x="49.5466%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,332,534 samples, 0.56%)</title><rect x="49.2966%" y="2325" width="0.5582%" height="15" fill="rgb(249,199,1)" fg:x="117687608" fg:w="1332534"/><text x="49.5466%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,332,534 samples, 0.56%)</title><rect x="49.2966%" y="2309" width="0.5582%" height="15" fill="rgb(240,85,17)" fg:x="117687608" fg:w="1332534"/><text x="49.5466%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,332,534 samples, 0.56%)</title><rect x="49.2966%" y="2293" width="0.5582%" height="15" fill="rgb(206,108,45)" fg:x="117687608" fg:w="1332534"/><text x="49.5466%" y="2303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,332,534 samples, 0.56%)</title><rect x="49.2966%" y="2277" width="0.5582%" height="15" fill="rgb(245,210,41)" fg:x="117687608" fg:w="1332534"/><text x="49.5466%" y="2287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,332,534 samples, 0.56%)</title><rect x="49.2966%" y="2261" width="0.5582%" height="15" fill="rgb(206,13,37)" fg:x="117687608" fg:w="1332534"/><text x="49.5466%" y="2271.50"></text></g><g><title>alloc::alloc::alloc (1,332,534 samples, 0.56%)</title><rect x="49.2966%" y="2245" width="0.5582%" height="15" fill="rgb(250,61,18)" fg:x="117687608" fg:w="1332534"/><text x="49.5466%" y="2255.50"></text></g><g><title>malloc (1,332,534 samples, 0.56%)</title><rect x="49.2966%" y="2229" width="0.5582%" height="15" fill="rgb(235,172,48)" fg:x="117687608" fg:w="1332534"/><text x="49.5466%" y="2239.50"></text></g><g><title>[libc.so.6] (1,332,534 samples, 0.56%)</title><rect x="49.2966%" y="2213" width="0.5582%" height="15" fill="rgb(249,201,17)" fg:x="117687608" fg:w="1332534"/><text x="49.5466%" y="2223.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,260,310 samples, 0.53%)</title><rect x="49.8548%" y="2405" width="0.5279%" height="15" fill="rgb(219,208,6)" fg:x="119020142" fg:w="1260310"/><text x="50.1048%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,260,310 samples, 0.53%)</title><rect x="49.8548%" y="2389" width="0.5279%" height="15" fill="rgb(248,31,23)" fg:x="119020142" fg:w="1260310"/><text x="50.1048%" y="2399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,260,310 samples, 0.53%)</title><rect x="49.8548%" y="2373" width="0.5279%" height="15" fill="rgb(245,15,42)" fg:x="119020142" fg:w="1260310"/><text x="50.1048%" y="2383.50"></text></g><g><title>alloc::slice::hack::to_vec (1,260,310 samples, 0.53%)</title><rect x="49.8548%" y="2357" width="0.5279%" height="15" fill="rgb(222,217,39)" fg:x="119020142" fg:w="1260310"/><text x="50.1048%" y="2367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,260,310 samples, 0.53%)</title><rect x="49.8548%" y="2341" width="0.5279%" height="15" fill="rgb(210,219,27)" fg:x="119020142" fg:w="1260310"/><text x="50.1048%" y="2351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,260,310 samples, 0.53%)</title><rect x="49.8548%" y="2325" width="0.5279%" height="15" fill="rgb(252,166,36)" fg:x="119020142" fg:w="1260310"/><text x="50.1048%" y="2335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,260,310 samples, 0.53%)</title><rect x="49.8548%" y="2309" width="0.5279%" height="15" fill="rgb(245,132,34)" fg:x="119020142" fg:w="1260310"/><text x="50.1048%" y="2319.50"></text></g><g><title>[libc.so.6] (1,260,310 samples, 0.53%)</title><rect x="49.8548%" y="2293" width="0.5279%" height="15" fill="rgb(236,54,3)" fg:x="119020142" fg:w="1260310"/><text x="50.1048%" y="2303.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (69,902,123 samples, 29.28%)</title><rect x="21.6490%" y="2421" width="29.2804%" height="15" fill="rgb(241,173,43)" fg:x="51683365" fg:w="69902123"/><text x="21.8990%" y="2431.50">&lt;css_bitvector_compiler::HtmlNode as core::clon..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,305,036 samples, 0.55%)</title><rect x="50.3827%" y="2405" width="0.5466%" height="15" fill="rgb(215,190,9)" fg:x="120280452" fg:w="1305036"/><text x="50.6327%" y="2415.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,305,036 samples, 0.55%)</title><rect x="50.3827%" y="2389" width="0.5466%" height="15" fill="rgb(242,101,16)" fg:x="120280452" fg:w="1305036"/><text x="50.6327%" y="2399.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,305,036 samples, 0.55%)</title><rect x="50.3827%" y="2373" width="0.5466%" height="15" fill="rgb(223,190,21)" fg:x="120280452" fg:w="1305036"/><text x="50.6327%" y="2383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,305,036 samples, 0.55%)</title><rect x="50.3827%" y="2357" width="0.5466%" height="15" fill="rgb(215,228,25)" fg:x="120280452" fg:w="1305036"/><text x="50.6327%" y="2367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,305,036 samples, 0.55%)</title><rect x="50.3827%" y="2341" width="0.5466%" height="15" fill="rgb(225,36,22)" fg:x="120280452" fg:w="1305036"/><text x="50.6327%" y="2351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,305,036 samples, 0.55%)</title><rect x="50.3827%" y="2325" width="0.5466%" height="15" fill="rgb(251,106,46)" fg:x="120280452" fg:w="1305036"/><text x="50.6327%" y="2335.50"></text></g><g><title>core::clone::Clone::clone (1,305,036 samples, 0.55%)</title><rect x="50.3827%" y="2309" width="0.5466%" height="15" fill="rgb(208,90,1)" fg:x="120280452" fg:w="1305036"/><text x="50.6327%" y="2319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,305,036 samples, 0.55%)</title><rect x="50.3827%" y="2293" width="0.5466%" height="15" fill="rgb(243,10,4)" fg:x="120280452" fg:w="1305036"/><text x="50.6327%" y="2303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,305,036 samples, 0.55%)</title><rect x="50.3827%" y="2277" width="0.5466%" height="15" fill="rgb(212,137,27)" fg:x="120280452" fg:w="1305036"/><text x="50.6327%" y="2287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,305,036 samples, 0.55%)</title><rect x="50.3827%" y="2261" width="0.5466%" height="15" fill="rgb(231,220,49)" fg:x="120280452" fg:w="1305036"/><text x="50.6327%" y="2271.50"></text></g><g><title>alloc::slice::hack::to_vec (1,305,036 samples, 0.55%)</title><rect x="50.3827%" y="2245" width="0.5466%" height="15" fill="rgb(237,96,20)" fg:x="120280452" fg:w="1305036"/><text x="50.6327%" y="2255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,305,036 samples, 0.55%)</title><rect x="50.3827%" y="2229" width="0.5466%" height="15" fill="rgb(239,229,30)" fg:x="120280452" fg:w="1305036"/><text x="50.6327%" y="2239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,305,036 samples, 0.55%)</title><rect x="50.3827%" y="2213" width="0.5466%" height="15" fill="rgb(219,65,33)" fg:x="120280452" fg:w="1305036"/><text x="50.6327%" y="2223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,305,036 samples, 0.55%)</title><rect x="50.3827%" y="2197" width="0.5466%" height="15" fill="rgb(243,134,7)" fg:x="120280452" fg:w="1305036"/><text x="50.6327%" y="2207.50"></text></g><g><title>[libc.so.6] (1,305,036 samples, 0.55%)</title><rect x="50.3827%" y="2181" width="0.5466%" height="15" fill="rgb(216,177,54)" fg:x="120280452" fg:w="1305036"/><text x="50.6327%" y="2191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,375,788 samples, 0.58%)</title><rect x="50.9294%" y="2421" width="0.5763%" height="15" fill="rgb(211,160,20)" fg:x="121585488" fg:w="1375788"/><text x="51.1794%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,375,788 samples, 0.58%)</title><rect x="50.9294%" y="2405" width="0.5763%" height="15" fill="rgb(239,85,39)" fg:x="121585488" fg:w="1375788"/><text x="51.1794%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,375,788 samples, 0.58%)</title><rect x="50.9294%" y="2389" width="0.5763%" height="15" fill="rgb(232,125,22)" fg:x="121585488" fg:w="1375788"/><text x="51.1794%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,375,788 samples, 0.58%)</title><rect x="50.9294%" y="2373" width="0.5763%" height="15" fill="rgb(244,57,34)" fg:x="121585488" fg:w="1375788"/><text x="51.1794%" y="2383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,375,788 samples, 0.58%)</title><rect x="50.9294%" y="2357" width="0.5763%" height="15" fill="rgb(214,203,32)" fg:x="121585488" fg:w="1375788"/><text x="51.1794%" y="2367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,375,788 samples, 0.58%)</title><rect x="50.9294%" y="2341" width="0.5763%" height="15" fill="rgb(207,58,43)" fg:x="121585488" fg:w="1375788"/><text x="51.1794%" y="2351.50"></text></g><g><title>alloc::alloc::alloc (1,375,788 samples, 0.58%)</title><rect x="50.9294%" y="2325" width="0.5763%" height="15" fill="rgb(215,193,15)" fg:x="121585488" fg:w="1375788"/><text x="51.1794%" y="2335.50"></text></g><g><title>malloc (1,375,788 samples, 0.58%)</title><rect x="50.9294%" y="2309" width="0.5763%" height="15" fill="rgb(232,15,44)" fg:x="121585488" fg:w="1375788"/><text x="51.1794%" y="2319.50"></text></g><g><title>[libc.so.6] (1,375,788 samples, 0.58%)</title><rect x="50.9294%" y="2293" width="0.5763%" height="15" fill="rgb(212,3,48)" fg:x="121585488" fg:w="1375788"/><text x="51.1794%" y="2303.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (73,738,928 samples, 30.89%)</title><rect x="21.1004%" y="2501" width="30.8875%" height="15" fill="rgb(218,128,7)" fg:x="50373793" fg:w="73738928"/><text x="21.3504%" y="2511.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (72,429,356 samples, 30.34%)</title><rect x="21.6490%" y="2485" width="30.3390%" height="15" fill="rgb(226,216,39)" fg:x="51683365" fg:w="72429356"/><text x="21.8990%" y="2495.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (72,429,356 samples, 30.34%)</title><rect x="21.6490%" y="2469" width="30.3390%" height="15" fill="rgb(243,47,51)" fg:x="51683365" fg:w="72429356"/><text x="21.8990%" y="2479.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (72,429,356 samples, 30.34%)</title><rect x="21.6490%" y="2453" width="30.3390%" height="15" fill="rgb(241,183,40)" fg:x="51683365" fg:w="72429356"/><text x="21.8990%" y="2463.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (72,429,356 samples, 30.34%)</title><rect x="21.6490%" y="2437" width="30.3390%" height="15" fill="rgb(231,217,32)" fg:x="51683365" fg:w="72429356"/><text x="21.8990%" y="2447.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,151,445 samples, 0.48%)</title><rect x="51.5056%" y="2421" width="0.4823%" height="15" fill="rgb(229,61,38)" fg:x="122961276" fg:w="1151445"/><text x="51.7556%" y="2431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (75,022,662 samples, 31.43%)</title><rect x="21.1004%" y="2565" width="31.4253%" height="15" fill="rgb(225,210,5)" fg:x="50373793" fg:w="75022662"/><text x="21.3504%" y="2575.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (75,022,662 samples, 31.43%)</title><rect x="21.1004%" y="2549" width="31.4253%" height="15" fill="rgb(231,79,45)" fg:x="50373793" fg:w="75022662"/><text x="21.3504%" y="2559.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (75,022,662 samples, 31.43%)</title><rect x="21.1004%" y="2533" width="31.4253%" height="15" fill="rgb(224,100,7)" fg:x="50373793" fg:w="75022662"/><text x="21.3504%" y="2543.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (75,022,662 samples, 31.43%)</title><rect x="21.1004%" y="2517" width="31.4253%" height="15" fill="rgb(241,198,18)" fg:x="50373793" fg:w="75022662"/><text x="21.3504%" y="2527.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,283,734 samples, 0.54%)</title><rect x="51.9880%" y="2501" width="0.5377%" height="15" fill="rgb(252,97,53)" fg:x="124112721" fg:w="1283734"/><text x="52.2380%" y="2511.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,243,376 samples, 0.52%)</title><rect x="52.5257%" y="2565" width="0.5208%" height="15" fill="rgb(220,88,7)" fg:x="125396455" fg:w="1243376"/><text x="52.7757%" y="2575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,243,376 samples, 0.52%)</title><rect x="52.5257%" y="2549" width="0.5208%" height="15" fill="rgb(213,176,14)" fg:x="125396455" fg:w="1243376"/><text x="52.7757%" y="2559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,243,376 samples, 0.52%)</title><rect x="52.5257%" y="2533" width="0.5208%" height="15" fill="rgb(246,73,7)" fg:x="125396455" fg:w="1243376"/><text x="52.7757%" y="2543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,243,376 samples, 0.52%)</title><rect x="52.5257%" y="2517" width="0.5208%" height="15" fill="rgb(245,64,36)" fg:x="125396455" fg:w="1243376"/><text x="52.7757%" y="2527.50"></text></g><g><title>alloc::slice::hack::to_vec (1,243,376 samples, 0.52%)</title><rect x="52.5257%" y="2501" width="0.5208%" height="15" fill="rgb(245,80,10)" fg:x="125396455" fg:w="1243376"/><text x="52.7757%" y="2511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,243,376 samples, 0.52%)</title><rect x="52.5257%" y="2485" width="0.5208%" height="15" fill="rgb(232,107,50)" fg:x="125396455" fg:w="1243376"/><text x="52.7757%" y="2495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,243,376 samples, 0.52%)</title><rect x="52.5257%" y="2469" width="0.5208%" height="15" fill="rgb(253,3,0)" fg:x="125396455" fg:w="1243376"/><text x="52.7757%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,243,376 samples, 0.52%)</title><rect x="52.5257%" y="2453" width="0.5208%" height="15" fill="rgb(212,99,53)" fg:x="125396455" fg:w="1243376"/><text x="52.7757%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,243,376 samples, 0.52%)</title><rect x="52.5257%" y="2437" width="0.5208%" height="15" fill="rgb(249,111,54)" fg:x="125396455" fg:w="1243376"/><text x="52.7757%" y="2447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,243,376 samples, 0.52%)</title><rect x="52.5257%" y="2421" width="0.5208%" height="15" fill="rgb(249,55,30)" fg:x="125396455" fg:w="1243376"/><text x="52.7757%" y="2431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,243,376 samples, 0.52%)</title><rect x="52.5257%" y="2405" width="0.5208%" height="15" fill="rgb(237,47,42)" fg:x="125396455" fg:w="1243376"/><text x="52.7757%" y="2415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,243,376 samples, 0.52%)</title><rect x="52.5257%" y="2389" width="0.5208%" height="15" fill="rgb(211,20,18)" fg:x="125396455" fg:w="1243376"/><text x="52.7757%" y="2399.50"></text></g><g><title>alloc::alloc::alloc (1,243,376 samples, 0.52%)</title><rect x="52.5257%" y="2373" width="0.5208%" height="15" fill="rgb(231,203,46)" fg:x="125396455" fg:w="1243376"/><text x="52.7757%" y="2383.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (83,359,449 samples, 34.92%)</title><rect x="19.2179%" y="2581" width="34.9173%" height="15" fill="rgb(237,142,3)" fg:x="45879495" fg:w="83359449"/><text x="19.4679%" y="2591.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;:..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,599,113 samples, 1.09%)</title><rect x="53.0465%" y="2565" width="1.0887%" height="15" fill="rgb(241,107,1)" fg:x="126639831" fg:w="2599113"/><text x="53.2965%" y="2575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,599,113 samples, 1.09%)</title><rect x="53.0465%" y="2549" width="1.0887%" height="15" fill="rgb(229,83,13)" fg:x="126639831" fg:w="2599113"/><text x="53.2965%" y="2559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,599,113 samples, 1.09%)</title><rect x="53.0465%" y="2533" width="1.0887%" height="15" fill="rgb(241,91,40)" fg:x="126639831" fg:w="2599113"/><text x="53.2965%" y="2543.50"></text></g><g><title>alloc::slice::hack::to_vec (2,599,113 samples, 1.09%)</title><rect x="53.0465%" y="2517" width="1.0887%" height="15" fill="rgb(225,3,45)" fg:x="126639831" fg:w="2599113"/><text x="53.2965%" y="2527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,599,113 samples, 1.09%)</title><rect x="53.0465%" y="2501" width="1.0887%" height="15" fill="rgb(244,223,14)" fg:x="126639831" fg:w="2599113"/><text x="53.2965%" y="2511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,353,545 samples, 0.57%)</title><rect x="53.5682%" y="2485" width="0.5670%" height="15" fill="rgb(224,124,37)" fg:x="127885399" fg:w="1353545"/><text x="53.8182%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,353,545 samples, 0.57%)</title><rect x="53.5682%" y="2469" width="0.5670%" height="15" fill="rgb(251,171,30)" fg:x="127885399" fg:w="1353545"/><text x="53.8182%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,353,545 samples, 0.57%)</title><rect x="53.5682%" y="2453" width="0.5670%" height="15" fill="rgb(236,46,54)" fg:x="127885399" fg:w="1353545"/><text x="53.8182%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,353,545 samples, 0.57%)</title><rect x="53.5682%" y="2437" width="0.5670%" height="15" fill="rgb(245,213,5)" fg:x="127885399" fg:w="1353545"/><text x="53.8182%" y="2447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,353,545 samples, 0.57%)</title><rect x="53.5682%" y="2421" width="0.5670%" height="15" fill="rgb(230,144,27)" fg:x="127885399" fg:w="1353545"/><text x="53.8182%" y="2431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,353,545 samples, 0.57%)</title><rect x="53.5682%" y="2405" width="0.5670%" height="15" fill="rgb(220,86,6)" fg:x="127885399" fg:w="1353545"/><text x="53.8182%" y="2415.50"></text></g><g><title>alloc::alloc::alloc (1,353,545 samples, 0.57%)</title><rect x="53.5682%" y="2389" width="0.5670%" height="15" fill="rgb(240,20,13)" fg:x="127885399" fg:w="1353545"/><text x="53.8182%" y="2399.50"></text></g><g><title>malloc (1,353,545 samples, 0.57%)</title><rect x="53.5682%" y="2373" width="0.5670%" height="15" fill="rgb(217,89,34)" fg:x="127885399" fg:w="1353545"/><text x="53.8182%" y="2383.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (84,639,686 samples, 35.45%)</title><rect x="19.2179%" y="2821" width="35.4536%" height="15" fill="rgb(229,13,5)" fg:x="45879495" fg:w="84639686"/><text x="19.4679%" y="2831.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (84,639,686 samples, 35.45%)</title><rect x="19.2179%" y="2805" width="35.4536%" height="15" fill="rgb(244,67,35)" fg:x="45879495" fg:w="84639686"/><text x="19.4679%" y="2815.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (84,639,686 samples, 35.45%)</title><rect x="19.2179%" y="2789" width="35.4536%" height="15" fill="rgb(221,40,2)" fg:x="45879495" fg:w="84639686"/><text x="19.4679%" y="2799.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (84,639,686 samples, 35.45%)</title><rect x="19.2179%" y="2773" width="35.4536%" height="15" fill="rgb(237,157,21)" fg:x="45879495" fg:w="84639686"/><text x="19.4679%" y="2783.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (84,639,686 samples, 35.45%)</title><rect x="19.2179%" y="2757" width="35.4536%" height="15" fill="rgb(222,94,11)" fg:x="45879495" fg:w="84639686"/><text x="19.4679%" y="2767.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (84,639,686 samples, 35.45%)</title><rect x="19.2179%" y="2741" width="35.4536%" height="15" fill="rgb(249,113,6)" fg:x="45879495" fg:w="84639686"/><text x="19.4679%" y="2751.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (84,639,686 samples, 35.45%)</title><rect x="19.2179%" y="2725" width="35.4536%" height="15" fill="rgb(238,137,36)" fg:x="45879495" fg:w="84639686"/><text x="19.4679%" y="2735.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (84,639,686 samples, 35.45%)</title><rect x="19.2179%" y="2709" width="35.4536%" height="15" fill="rgb(210,102,26)" fg:x="45879495" fg:w="84639686"/><text x="19.4679%" y="2719.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (84,639,686 samples, 35.45%)</title><rect x="19.2179%" y="2693" width="35.4536%" height="15" fill="rgb(218,30,30)" fg:x="45879495" fg:w="84639686"/><text x="19.4679%" y="2703.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (84,639,686 samples, 35.45%)</title><rect x="19.2179%" y="2677" width="35.4536%" height="15" fill="rgb(214,67,26)" fg:x="45879495" fg:w="84639686"/><text x="19.4679%" y="2687.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (84,639,686 samples, 35.45%)</title><rect x="19.2179%" y="2661" width="35.4536%" height="15" fill="rgb(251,9,53)" fg:x="45879495" fg:w="84639686"/><text x="19.4679%" y="2671.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (84,639,686 samples, 35.45%)</title><rect x="19.2179%" y="2645" width="35.4536%" height="15" fill="rgb(228,204,25)" fg:x="45879495" fg:w="84639686"/><text x="19.4679%" y="2655.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (84,639,686 samples, 35.45%)</title><rect x="19.2179%" y="2629" width="35.4536%" height="15" fill="rgb(207,153,8)" fg:x="45879495" fg:w="84639686"/><text x="19.4679%" y="2639.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (84,639,686 samples, 35.45%)</title><rect x="19.2179%" y="2613" width="35.4536%" height="15" fill="rgb(242,9,16)" fg:x="45879495" fg:w="84639686"/><text x="19.4679%" y="2623.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (84,639,686 samples, 35.45%)</title><rect x="19.2179%" y="2597" width="35.4536%" height="15" fill="rgb(217,211,10)" fg:x="45879495" fg:w="84639686"/><text x="19.4679%" y="2607.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,280,237 samples, 0.54%)</title><rect x="54.1352%" y="2581" width="0.5363%" height="15" fill="rgb(219,228,52)" fg:x="129238944" fg:w="1280237"/><text x="54.3852%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,280,237 samples, 0.54%)</title><rect x="54.1352%" y="2565" width="0.5363%" height="15" fill="rgb(231,92,29)" fg:x="129238944" fg:w="1280237"/><text x="54.3852%" y="2575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,280,237 samples, 0.54%)</title><rect x="54.1352%" y="2549" width="0.5363%" height="15" fill="rgb(232,8,23)" fg:x="129238944" fg:w="1280237"/><text x="54.3852%" y="2559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,280,237 samples, 0.54%)</title><rect x="54.1352%" y="2533" width="0.5363%" height="15" fill="rgb(216,211,34)" fg:x="129238944" fg:w="1280237"/><text x="54.3852%" y="2543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,280,237 samples, 0.54%)</title><rect x="54.1352%" y="2517" width="0.5363%" height="15" fill="rgb(236,151,0)" fg:x="129238944" fg:w="1280237"/><text x="54.3852%" y="2527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,280,237 samples, 0.54%)</title><rect x="54.1352%" y="2501" width="0.5363%" height="15" fill="rgb(209,168,3)" fg:x="129238944" fg:w="1280237"/><text x="54.3852%" y="2511.50"></text></g><g><title>alloc::alloc::alloc (1,280,237 samples, 0.54%)</title><rect x="54.1352%" y="2485" width="0.5363%" height="15" fill="rgb(208,129,28)" fg:x="129238944" fg:w="1280237"/><text x="54.3852%" y="2495.50"></text></g><g><title>malloc (1,280,237 samples, 0.54%)</title><rect x="54.1352%" y="2469" width="0.5363%" height="15" fill="rgb(229,78,22)" fg:x="129238944" fg:w="1280237"/><text x="54.3852%" y="2479.50"></text></g><g><title>[libc.so.6] (1,280,237 samples, 0.54%)</title><rect x="54.1352%" y="2453" width="0.5363%" height="15" fill="rgb(228,187,13)" fg:x="129238944" fg:w="1280237"/><text x="54.3852%" y="2463.50"></text></g><g><title>benchmark::extract_path_from_command (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2805" width="0.5454%" height="15" fill="rgb(240,119,24)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2789" width="0.5454%" height="15" fill="rgb(209,194,42)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2799.50"></text></g><g><title>benchmark::extract_path_from_command::_{{closure}} (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2773" width="0.5454%" height="15" fill="rgb(247,200,46)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2757" width="0.5454%" height="15" fill="rgb(218,76,16)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2741" width="0.5454%" height="15" fill="rgb(225,21,48)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2725" width="0.5454%" height="15" fill="rgb(239,223,50)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2709" width="0.5454%" height="15" fill="rgb(244,45,21)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2693" width="0.5454%" height="15" fill="rgb(232,33,43)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2677" width="0.5454%" height="15" fill="rgb(209,8,3)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2661" width="0.5454%" height="15" fill="rgb(214,25,53)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2645" width="0.5454%" height="15" fill="rgb(254,186,54)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2629" width="0.5454%" height="15" fill="rgb(208,174,49)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2613" width="0.5454%" height="15" fill="rgb(233,191,51)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2597" width="0.5454%" height="15" fill="rgb(222,134,10)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2581" width="0.5454%" height="15" fill="rgb(230,226,20)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2565" width="0.5454%" height="15" fill="rgb(251,111,25)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2549" width="0.5454%" height="15" fill="rgb(224,40,46)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2559.50"></text></g><g><title>alloc::alloc::realloc (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2533" width="0.5454%" height="15" fill="rgb(236,108,47)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2543.50"></text></g><g><title>realloc (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2517" width="0.5454%" height="15" fill="rgb(234,93,0)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2527.50"></text></g><g><title>[libc.so.6] (1,301,948 samples, 0.55%)</title><rect x="54.6715%" y="2501" width="0.5454%" height="15" fill="rgb(224,213,32)" fg:x="130519181" fg:w="1301948"/><text x="54.9215%" y="2511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (949,800 samples, 0.40%)</title><rect x="55.2168%" y="2757" width="0.3978%" height="15" fill="rgb(251,11,48)" fg:x="131821129" fg:w="949800"/><text x="55.4668%" y="2767.50"></text></g><g><title>core::ptr::write (949,800 samples, 0.40%)</title><rect x="55.2168%" y="2741" width="0.3978%" height="15" fill="rgb(236,173,5)" fg:x="131821129" fg:w="949800"/><text x="55.4668%" y="2751.50"></text></g><g><title>[libc.so.6] (949,800 samples, 0.40%)</title><rect x="55.2168%" y="2725" width="0.3978%" height="15" fill="rgb(230,95,12)" fg:x="131821129" fg:w="949800"/><text x="55.4668%" y="2735.50"></text></g><g><title>benchmark::json_to_html_node (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2741" width="0.5388%" height="15" fill="rgb(232,209,1)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2751.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2725" width="0.5388%" height="15" fill="rgb(232,6,1)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2735.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2709" width="0.5388%" height="15" fill="rgb(210,224,50)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2719.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2693" width="0.5388%" height="15" fill="rgb(228,127,35)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2677" width="0.5388%" height="15" fill="rgb(245,102,45)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2687.50"></text></g><g><title>alloc::string::String::push_str (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2661" width="0.5388%" height="15" fill="rgb(214,1,49)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2645" width="0.5388%" height="15" fill="rgb(226,163,40)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2629" width="0.5388%" height="15" fill="rgb(239,212,28)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2613" width="0.5388%" height="15" fill="rgb(220,20,13)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2597" width="0.5388%" height="15" fill="rgb(210,164,35)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2581" width="0.5388%" height="15" fill="rgb(248,109,41)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2565" width="0.5388%" height="15" fill="rgb(238,23,50)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2549" width="0.5388%" height="15" fill="rgb(211,48,49)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2533" width="0.5388%" height="15" fill="rgb(223,36,21)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2517" width="0.5388%" height="15" fill="rgb(207,123,46)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2527.50"></text></g><g><title>malloc (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2501" width="0.5388%" height="15" fill="rgb(240,218,32)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2511.50"></text></g><g><title>[libc.so.6] (1,286,285 samples, 0.54%)</title><rect x="55.6147%" y="2485" width="0.5388%" height="15" fill="rgb(252,5,43)" fg:x="132770929" fg:w="1286285"/><text x="55.8647%" y="2495.50"></text></g><g><title>benchmark::json_to_html_node (3,282,681 samples, 1.38%)</title><rect x="55.2168%" y="2773" width="1.3750%" height="15" fill="rgb(252,84,19)" fg:x="131821129" fg:w="3282681"/><text x="55.4668%" y="2783.50"></text></g><g><title>benchmark::json_to_html_node (2,332,881 samples, 0.98%)</title><rect x="55.6147%" y="2757" width="0.9772%" height="15" fill="rgb(243,152,39)" fg:x="132770929" fg:w="2332881"/><text x="55.8647%" y="2767.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (1,046,596 samples, 0.44%)</title><rect x="56.1535%" y="2741" width="0.4384%" height="15" fill="rgb(234,160,15)" fg:x="134057214" fg:w="1046596"/><text x="56.4035%" y="2751.50"></text></g><g><title>css_bitvector_compiler::BitVector::new (1,046,596 samples, 0.44%)</title><rect x="56.1535%" y="2725" width="0.4384%" height="15" fill="rgb(237,34,20)" fg:x="134057214" fg:w="1046596"/><text x="56.4035%" y="2735.50"></text></g><g><title>alloc::vec::from_elem (1,046,596 samples, 0.44%)</title><rect x="56.1535%" y="2709" width="0.4384%" height="15" fill="rgb(229,97,13)" fg:x="134057214" fg:w="1046596"/><text x="56.4035%" y="2719.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,046,596 samples, 0.44%)</title><rect x="56.1535%" y="2693" width="0.4384%" height="15" fill="rgb(234,71,50)" fg:x="134057214" fg:w="1046596"/><text x="56.4035%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,046,596 samples, 0.44%)</title><rect x="56.1535%" y="2677" width="0.4384%" height="15" fill="rgb(253,155,4)" fg:x="134057214" fg:w="1046596"/><text x="56.4035%" y="2687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,046,596 samples, 0.44%)</title><rect x="56.1535%" y="2661" width="0.4384%" height="15" fill="rgb(222,185,37)" fg:x="134057214" fg:w="1046596"/><text x="56.4035%" y="2671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,046,596 samples, 0.44%)</title><rect x="56.1535%" y="2645" width="0.4384%" height="15" fill="rgb(251,177,13)" fg:x="134057214" fg:w="1046596"/><text x="56.4035%" y="2655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,046,596 samples, 0.44%)</title><rect x="56.1535%" y="2629" width="0.4384%" height="15" fill="rgb(250,179,40)" fg:x="134057214" fg:w="1046596"/><text x="56.4035%" y="2639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,046,596 samples, 0.44%)</title><rect x="56.1535%" y="2613" width="0.4384%" height="15" fill="rgb(242,44,2)" fg:x="134057214" fg:w="1046596"/><text x="56.4035%" y="2623.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,046,596 samples, 0.44%)</title><rect x="56.1535%" y="2597" width="0.4384%" height="15" fill="rgb(216,177,13)" fg:x="134057214" fg:w="1046596"/><text x="56.4035%" y="2607.50"></text></g><g><title>__libc_calloc (1,046,596 samples, 0.44%)</title><rect x="56.1535%" y="2581" width="0.4384%" height="15" fill="rgb(216,106,43)" fg:x="134057214" fg:w="1046596"/><text x="56.4035%" y="2591.50"></text></g><g><title>[libc.so.6] (1,046,596 samples, 0.44%)</title><rect x="56.1535%" y="2565" width="0.4384%" height="15" fill="rgb(216,183,2)" fg:x="134057214" fg:w="1046596"/><text x="56.4035%" y="2575.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1,321,551 samples, 0.55%)</title><rect x="56.5919%" y="2629" width="0.5536%" height="15" fill="rgb(249,75,3)" fg:x="135103810" fg:w="1321551"/><text x="56.8419%" y="2639.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,321,551 samples, 0.55%)</title><rect x="56.5919%" y="2613" width="0.5536%" height="15" fill="rgb(219,67,39)" fg:x="135103810" fg:w="1321551"/><text x="56.8419%" y="2623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,321,551 samples, 0.55%)</title><rect x="56.5919%" y="2597" width="0.5536%" height="15" fill="rgb(253,228,2)" fg:x="135103810" fg:w="1321551"/><text x="56.8419%" y="2607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,321,551 samples, 0.55%)</title><rect x="56.5919%" y="2581" width="0.5536%" height="15" fill="rgb(235,138,27)" fg:x="135103810" fg:w="1321551"/><text x="56.8419%" y="2591.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,321,551 samples, 0.55%)</title><rect x="56.5919%" y="2565" width="0.5536%" height="15" fill="rgb(236,97,51)" fg:x="135103810" fg:w="1321551"/><text x="56.8419%" y="2575.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1,321,551 samples, 0.55%)</title><rect x="56.5919%" y="2549" width="0.5536%" height="15" fill="rgb(240,80,30)" fg:x="135103810" fg:w="1321551"/><text x="56.8419%" y="2559.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (1,321,551 samples, 0.55%)</title><rect x="56.5919%" y="2533" width="0.5536%" height="15" fill="rgb(230,178,19)" fg:x="135103810" fg:w="1321551"/><text x="56.8419%" y="2543.50"></text></g><g><title>core::str::pattern::Searcher::next_match (1,321,551 samples, 0.55%)</title><rect x="56.5919%" y="2517" width="0.5536%" height="15" fill="rgb(210,190,27)" fg:x="135103810" fg:w="1321551"/><text x="56.8419%" y="2527.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1,321,551 samples, 0.55%)</title><rect x="56.5919%" y="2501" width="0.5536%" height="15" fill="rgb(222,107,31)" fg:x="135103810" fg:w="1321551"/><text x="56.8419%" y="2511.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (1,321,551 samples, 0.55%)</title><rect x="56.5919%" y="2485" width="0.5536%" height="15" fill="rgb(216,127,34)" fg:x="135103810" fg:w="1321551"/><text x="56.8419%" y="2495.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (1,321,551 samples, 0.55%)</title><rect x="56.5919%" y="2469" width="0.5536%" height="15" fill="rgb(234,116,52)" fg:x="135103810" fg:w="1321551"/><text x="56.8419%" y="2479.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (1,321,551 samples, 0.55%)</title><rect x="56.5919%" y="2453" width="0.5536%" height="15" fill="rgb(222,124,15)" fg:x="135103810" fg:w="1321551"/><text x="56.8419%" y="2463.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (1,321,551 samples, 0.55%)</title><rect x="56.5919%" y="2437" width="0.5536%" height="15" fill="rgb(231,179,28)" fg:x="135103810" fg:w="1321551"/><text x="56.8419%" y="2447.50"></text></g><g><title>benchmark::json_to_html_node::_{{closure}} (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2613" width="0.5855%" height="15" fill="rgb(226,93,45)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2623.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2597" width="0.5855%" height="15" fill="rgb(215,8,51)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2607.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2581" width="0.5855%" height="15" fill="rgb(223,106,5)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2591.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2565" width="0.5855%" height="15" fill="rgb(250,191,5)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2575.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2549" width="0.5855%" height="15" fill="rgb(242,132,44)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2559.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2533" width="0.5855%" height="15" fill="rgb(251,152,29)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2517" width="0.5855%" height="15" fill="rgb(218,179,5)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2501" width="0.5855%" height="15" fill="rgb(227,67,19)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2511.50"></text></g><g><title>alloc::slice::hack::to_vec (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2485" width="0.5855%" height="15" fill="rgb(233,119,31)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2469" width="0.5855%" height="15" fill="rgb(241,120,22)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2453" width="0.5855%" height="15" fill="rgb(224,102,30)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2437" width="0.5855%" height="15" fill="rgb(210,164,37)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2421" width="0.5855%" height="15" fill="rgb(226,191,16)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2405" width="0.5855%" height="15" fill="rgb(214,40,45)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2389" width="0.5855%" height="15" fill="rgb(244,29,26)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2373" width="0.5855%" height="15" fill="rgb(216,16,5)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2383.50"></text></g><g><title>alloc::alloc::alloc (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2357" width="0.5855%" height="15" fill="rgb(249,76,35)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2367.50"></text></g><g><title>malloc (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2341" width="0.5855%" height="15" fill="rgb(207,11,44)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2351.50"></text></g><g><title>[unknown] (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2325" width="0.5855%" height="15" fill="rgb(228,190,49)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2335.50"></text></g><g><title>[libc.so.6] (1,397,889 samples, 0.59%)</title><rect x="57.1454%" y="2309" width="0.5855%" height="15" fill="rgb(214,173,12)" fg:x="136425361" fg:w="1397889"/><text x="57.3954%" y="2319.50"></text></g><g><title>benchmark::json_to_html_node (7,336,070 samples, 3.07%)</title><rect x="55.2168%" y="2805" width="3.0729%" height="15" fill="rgb(218,26,35)" fg:x="131821129" fg:w="7336070"/><text x="55.4668%" y="2815.50">ben..</text></g><g><title>benchmark::json_to_html_node (7,336,070 samples, 3.07%)</title><rect x="55.2168%" y="2789" width="3.0729%" height="15" fill="rgb(220,200,19)" fg:x="131821129" fg:w="7336070"/><text x="55.4668%" y="2799.50">ben..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,053,389 samples, 1.70%)</title><rect x="56.5919%" y="2773" width="1.6979%" height="15" fill="rgb(239,95,49)" fg:x="135103810" fg:w="4053389"/><text x="56.8419%" y="2783.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,053,389 samples, 1.70%)</title><rect x="56.5919%" y="2757" width="1.6979%" height="15" fill="rgb(235,85,53)" fg:x="135103810" fg:w="4053389"/><text x="56.8419%" y="2767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4,053,389 samples, 1.70%)</title><rect x="56.5919%" y="2741" width="1.6979%" height="15" fill="rgb(233,133,31)" fg:x="135103810" fg:w="4053389"/><text x="56.8419%" y="2751.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4,053,389 samples, 1.70%)</title><rect x="56.5919%" y="2725" width="1.6979%" height="15" fill="rgb(218,25,20)" fg:x="135103810" fg:w="4053389"/><text x="56.8419%" y="2735.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4,053,389 samples, 1.70%)</title><rect x="56.5919%" y="2709" width="1.6979%" height="15" fill="rgb(252,210,38)" fg:x="135103810" fg:w="4053389"/><text x="56.8419%" y="2719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,053,389 samples, 1.70%)</title><rect x="56.5919%" y="2693" width="1.6979%" height="15" fill="rgb(242,134,21)" fg:x="135103810" fg:w="4053389"/><text x="56.8419%" y="2703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,053,389 samples, 1.70%)</title><rect x="56.5919%" y="2677" width="1.6979%" height="15" fill="rgb(213,28,48)" fg:x="135103810" fg:w="4053389"/><text x="56.8419%" y="2687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,053,389 samples, 1.70%)</title><rect x="56.5919%" y="2661" width="1.6979%" height="15" fill="rgb(250,196,2)" fg:x="135103810" fg:w="4053389"/><text x="56.8419%" y="2671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,053,389 samples, 1.70%)</title><rect x="56.5919%" y="2645" width="1.6979%" height="15" fill="rgb(227,5,17)" fg:x="135103810" fg:w="4053389"/><text x="56.8419%" y="2655.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,731,838 samples, 1.14%)</title><rect x="57.1454%" y="2629" width="1.1443%" height="15" fill="rgb(221,226,24)" fg:x="136425361" fg:w="2731838"/><text x="57.3954%" y="2639.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2613" width="0.5588%" height="15" fill="rgb(211,5,48)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2597" width="0.5588%" height="15" fill="rgb(219,150,6)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2581" width="0.5588%" height="15" fill="rgb(251,46,16)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2565" width="0.5588%" height="15" fill="rgb(220,204,40)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2549" width="0.5588%" height="15" fill="rgb(211,85,2)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2533" width="0.5588%" height="15" fill="rgb(229,17,7)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2517" width="0.5588%" height="15" fill="rgb(239,72,28)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2501" width="0.5588%" height="15" fill="rgb(230,47,54)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2511.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2485" width="0.5588%" height="15" fill="rgb(214,50,8)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2495.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2469" width="0.5588%" height="15" fill="rgb(216,198,43)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2479.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2453" width="0.5588%" height="15" fill="rgb(234,20,35)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2463.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2437" width="0.5588%" height="15" fill="rgb(254,45,19)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2447.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2421" width="0.5588%" height="15" fill="rgb(219,14,44)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2431.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2405" width="0.5588%" height="15" fill="rgb(217,220,26)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2389" width="0.5588%" height="15" fill="rgb(213,158,28)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2373" width="0.5588%" height="15" fill="rgb(252,51,52)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2383.50"></text></g><g><title>alloc::alloc::alloc (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2357" width="0.5588%" height="15" fill="rgb(246,89,16)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2367.50"></text></g><g><title>malloc (1,333,949 samples, 0.56%)</title><rect x="57.7310%" y="2341" width="0.5588%" height="15" fill="rgb(216,158,49)" fg:x="137823250" fg:w="1333949"/><text x="57.9810%" y="2351.50"></text></g><g><title>benchmark::apply_frame_modifications (9,563,001 samples, 4.01%)</title><rect x="54.6715%" y="2821" width="4.0057%" height="15" fill="rgb(236,107,19)" fg:x="130519181" fg:w="9563001"/><text x="54.9215%" y="2831.50">benc..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (924,983 samples, 0.39%)</title><rect x="58.2897%" y="2805" width="0.3875%" height="15" fill="rgb(228,185,30)" fg:x="139157199" fg:w="924983"/><text x="58.5397%" y="2815.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (924,983 samples, 0.39%)</title><rect x="58.2897%" y="2789" width="0.3875%" height="15" fill="rgb(246,134,8)" fg:x="139157199" fg:w="924983"/><text x="58.5397%" y="2799.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (924,983 samples, 0.39%)</title><rect x="58.2897%" y="2773" width="0.3875%" height="15" fill="rgb(214,143,50)" fg:x="139157199" fg:w="924983"/><text x="58.5397%" y="2783.50"></text></g><g><title>benchmark::clear_dirty_flags (1,319,191 samples, 0.55%)</title><rect x="58.6772%" y="2821" width="0.5526%" height="15" fill="rgb(228,75,8)" fg:x="140082182" fg:w="1319191"/><text x="58.9272%" y="2831.50"></text></g><g><title>benchmark::clear_dirty_flags (1,319,191 samples, 0.55%)</title><rect x="58.6772%" y="2805" width="0.5526%" height="15" fill="rgb(207,175,4)" fg:x="140082182" fg:w="1319191"/><text x="58.9272%" y="2815.50"></text></g><g><title>benchmark::clear_dirty_flags (1,319,191 samples, 0.55%)</title><rect x="58.6772%" y="2789" width="0.5526%" height="15" fill="rgb(205,108,24)" fg:x="140082182" fg:w="1319191"/><text x="58.9272%" y="2799.50"></text></g><g><title>benchmark::clear_dirty_flags (1,319,191 samples, 0.55%)</title><rect x="58.6772%" y="2773" width="0.5526%" height="15" fill="rgb(244,120,49)" fg:x="140082182" fg:w="1319191"/><text x="58.9272%" y="2783.50"></text></g><g><title>benchmark::clear_dirty_flags (1,319,191 samples, 0.55%)</title><rect x="58.6772%" y="2757" width="0.5526%" height="15" fill="rgb(223,47,38)" fg:x="140082182" fg:w="1319191"/><text x="58.9272%" y="2767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,342,027 samples, 0.56%)</title><rect x="59.2298%" y="2021" width="0.5621%" height="15" fill="rgb(229,179,11)" fg:x="141401373" fg:w="1342027"/><text x="59.4798%" y="2031.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,342,027 samples, 0.56%)</title><rect x="59.2298%" y="2005" width="0.5621%" height="15" fill="rgb(231,122,1)" fg:x="141401373" fg:w="1342027"/><text x="59.4798%" y="2015.50"></text></g><g><title>benchmark::count_nodes (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2821" width="1.1444%" height="15" fill="rgb(245,119,9)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2805" width="1.1444%" height="15" fill="rgb(241,163,25)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2815.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2789" width="1.1444%" height="15" fill="rgb(217,214,3)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2773" width="1.1444%" height="15" fill="rgb(240,86,28)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2757" width="1.1444%" height="15" fill="rgb(215,47,9)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2767.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2741" width="1.1444%" height="15" fill="rgb(252,25,45)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2751.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2725" width="1.1444%" height="15" fill="rgb(251,164,9)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2735.50"></text></g><g><title>benchmark::count_nodes (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2709" width="1.1444%" height="15" fill="rgb(233,194,0)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2693" width="1.1444%" height="15" fill="rgb(249,111,24)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2703.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2677" width="1.1444%" height="15" fill="rgb(250,223,3)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2661" width="1.1444%" height="15" fill="rgb(236,178,37)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2645" width="1.1444%" height="15" fill="rgb(241,158,50)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2655.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2629" width="1.1444%" height="15" fill="rgb(213,121,41)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2639.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2613" width="1.1444%" height="15" fill="rgb(240,92,3)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2623.50"></text></g><g><title>benchmark::count_nodes (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2597" width="1.1444%" height="15" fill="rgb(205,123,3)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2581" width="1.1444%" height="15" fill="rgb(205,97,47)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2591.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2565" width="1.1444%" height="15" fill="rgb(247,152,14)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2549" width="1.1444%" height="15" fill="rgb(248,195,53)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2533" width="1.1444%" height="15" fill="rgb(226,201,16)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2543.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2517" width="1.1444%" height="15" fill="rgb(205,98,0)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2501" width="1.1444%" height="15" fill="rgb(214,191,48)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2511.50"></text></g><g><title>benchmark::count_nodes (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2485" width="1.1444%" height="15" fill="rgb(237,112,39)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2469" width="1.1444%" height="15" fill="rgb(247,203,27)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2479.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2453" width="1.1444%" height="15" fill="rgb(235,124,28)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2437" width="1.1444%" height="15" fill="rgb(208,207,46)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2421" width="1.1444%" height="15" fill="rgb(234,176,4)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2431.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2405" width="1.1444%" height="15" fill="rgb(230,133,28)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2415.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2389" width="1.1444%" height="15" fill="rgb(211,137,40)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2399.50"></text></g><g><title>benchmark::count_nodes (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2373" width="1.1444%" height="15" fill="rgb(254,35,13)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2357" width="1.1444%" height="15" fill="rgb(225,49,51)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2367.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2341" width="1.1444%" height="15" fill="rgb(251,10,15)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2325" width="1.1444%" height="15" fill="rgb(228,207,15)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2309" width="1.1444%" height="15" fill="rgb(241,99,19)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2319.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2293" width="1.1444%" height="15" fill="rgb(207,104,49)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2303.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2277" width="1.1444%" height="15" fill="rgb(234,99,18)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2287.50"></text></g><g><title>benchmark::count_nodes (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2261" width="1.1444%" height="15" fill="rgb(213,191,49)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2245" width="1.1444%" height="15" fill="rgb(210,226,19)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2255.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2229" width="1.1444%" height="15" fill="rgb(229,97,18)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2213" width="1.1444%" height="15" fill="rgb(211,167,15)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2197" width="1.1444%" height="15" fill="rgb(210,169,34)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2207.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2181" width="1.1444%" height="15" fill="rgb(241,121,31)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2191.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2165" width="1.1444%" height="15" fill="rgb(232,40,11)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2175.50"></text></g><g><title>benchmark::count_nodes (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2149" width="1.1444%" height="15" fill="rgb(205,86,26)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2133" width="1.1444%" height="15" fill="rgb(231,126,28)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2143.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2117" width="1.1444%" height="15" fill="rgb(219,221,18)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2127.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2101" width="1.1444%" height="15" fill="rgb(211,40,0)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2111.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2085" width="1.1444%" height="15" fill="rgb(239,85,43)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2095.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2069" width="1.1444%" height="15" fill="rgb(231,55,21)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2079.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2053" width="1.1444%" height="15" fill="rgb(225,184,43)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2063.50"></text></g><g><title>benchmark::count_nodes (2,731,985 samples, 1.14%)</title><rect x="59.2298%" y="2037" width="1.1444%" height="15" fill="rgb(251,158,41)" fg:x="141401373" fg:w="2731985"/><text x="59.4798%" y="2047.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,389,958 samples, 0.58%)</title><rect x="59.7919%" y="2021" width="0.5822%" height="15" fill="rgb(234,159,37)" fg:x="142743400" fg:w="1389958"/><text x="60.0419%" y="2031.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,389,958 samples, 0.58%)</title><rect x="59.7919%" y="2005" width="0.5822%" height="15" fill="rgb(216,204,22)" fg:x="142743400" fg:w="1389958"/><text x="60.0419%" y="2015.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,389,958 samples, 0.58%)</title><rect x="59.7919%" y="1989" width="0.5822%" height="15" fill="rgb(214,17,3)" fg:x="142743400" fg:w="1389958"/><text x="60.0419%" y="1999.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,389,958 samples, 0.58%)</title><rect x="59.7919%" y="1973" width="0.5822%" height="15" fill="rgb(212,111,17)" fg:x="142743400" fg:w="1389958"/><text x="60.0419%" y="1983.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,389,958 samples, 0.58%)</title><rect x="59.7919%" y="1957" width="0.5822%" height="15" fill="rgb(221,157,24)" fg:x="142743400" fg:w="1389958"/><text x="60.0419%" y="1967.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,389,958 samples, 0.58%)</title><rect x="59.7919%" y="1941" width="0.5822%" height="15" fill="rgb(252,16,13)" fg:x="142743400" fg:w="1389958"/><text x="60.0419%" y="1951.50"></text></g><g><title>benchmark::count_nodes (1,389,958 samples, 0.58%)</title><rect x="59.7919%" y="1925" width="0.5822%" height="15" fill="rgb(221,62,2)" fg:x="142743400" fg:w="1389958"/><text x="60.0419%" y="1935.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,389,958 samples, 0.58%)</title><rect x="59.7919%" y="1909" width="0.5822%" height="15" fill="rgb(247,87,22)" fg:x="142743400" fg:w="1389958"/><text x="60.0419%" y="1919.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,389,958 samples, 0.58%)</title><rect x="59.7919%" y="1893" width="0.5822%" height="15" fill="rgb(215,73,9)" fg:x="142743400" fg:w="1389958"/><text x="60.0419%" y="1903.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,389,958 samples, 0.58%)</title><rect x="59.7919%" y="1877" width="0.5822%" height="15" fill="rgb(207,175,33)" fg:x="142743400" fg:w="1389958"/><text x="60.0419%" y="1887.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,389,958 samples, 0.58%)</title><rect x="59.7919%" y="1861" width="0.5822%" height="15" fill="rgb(243,129,54)" fg:x="142743400" fg:w="1389958"/><text x="60.0419%" y="1871.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,389,958 samples, 0.58%)</title><rect x="59.7919%" y="1845" width="0.5822%" height="15" fill="rgb(227,119,45)" fg:x="142743400" fg:w="1389958"/><text x="60.0419%" y="1855.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,389,958 samples, 0.58%)</title><rect x="59.7919%" y="1829" width="0.5822%" height="15" fill="rgb(205,109,36)" fg:x="142743400" fg:w="1389958"/><text x="60.0419%" y="1839.50"></text></g><g><title>benchmark::count_nodes (1,389,958 samples, 0.58%)</title><rect x="59.7919%" y="1813" width="0.5822%" height="15" fill="rgb(205,6,39)" fg:x="142743400" fg:w="1389958"/><text x="60.0419%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,323,224 samples, 0.55%)</title><rect x="60.3741%" y="2485" width="0.5543%" height="15" fill="rgb(221,32,16)" fg:x="144133358" fg:w="1323224"/><text x="60.6241%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,323,224 samples, 0.55%)</title><rect x="60.3741%" y="2469" width="0.5543%" height="15" fill="rgb(228,144,50)" fg:x="144133358" fg:w="1323224"/><text x="60.6241%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,323,224 samples, 0.55%)</title><rect x="60.3741%" y="2453" width="0.5543%" height="15" fill="rgb(229,201,53)" fg:x="144133358" fg:w="1323224"/><text x="60.6241%" y="2463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,323,224 samples, 0.55%)</title><rect x="60.3741%" y="2437" width="0.5543%" height="15" fill="rgb(249,153,27)" fg:x="144133358" fg:w="1323224"/><text x="60.6241%" y="2447.50"></text></g><g><title>__rust_dealloc (1,317,968 samples, 0.55%)</title><rect x="60.9284%" y="2309" width="0.5521%" height="15" fill="rgb(227,106,25)" fg:x="145456582" fg:w="1317968"/><text x="61.1784%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,778,075 samples, 1.58%)</title><rect x="60.9284%" y="2421" width="1.5825%" height="15" fill="rgb(230,65,29)" fg:x="145456582" fg:w="3778075"/><text x="61.1784%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,778,075 samples, 1.58%)</title><rect x="60.9284%" y="2405" width="1.5825%" height="15" fill="rgb(221,57,46)" fg:x="145456582" fg:w="3778075"/><text x="61.1784%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,778,075 samples, 1.58%)</title><rect x="60.9284%" y="2389" width="1.5825%" height="15" fill="rgb(229,161,17)" fg:x="145456582" fg:w="3778075"/><text x="61.1784%" y="2399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,778,075 samples, 1.58%)</title><rect x="60.9284%" y="2373" width="1.5825%" height="15" fill="rgb(222,213,11)" fg:x="145456582" fg:w="3778075"/><text x="61.1784%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,778,075 samples, 1.58%)</title><rect x="60.9284%" y="2357" width="1.5825%" height="15" fill="rgb(235,35,13)" fg:x="145456582" fg:w="3778075"/><text x="61.1784%" y="2367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,778,075 samples, 1.58%)</title><rect x="60.9284%" y="2341" width="1.5825%" height="15" fill="rgb(233,158,34)" fg:x="145456582" fg:w="3778075"/><text x="61.1784%" y="2351.50"></text></g><g><title>alloc::alloc::dealloc (3,778,075 samples, 1.58%)</title><rect x="60.9284%" y="2325" width="1.5825%" height="15" fill="rgb(215,151,48)" fg:x="145456582" fg:w="3778075"/><text x="61.1784%" y="2335.50"></text></g><g><title>cfree (2,460,107 samples, 1.03%)</title><rect x="61.4805%" y="2309" width="1.0305%" height="15" fill="rgb(229,84,14)" fg:x="146774550" fg:w="2460107"/><text x="61.7305%" y="2319.50"></text></g><g><title>[libc.so.6] (2,460,107 samples, 1.03%)</title><rect x="61.4805%" y="2293" width="1.0305%" height="15" fill="rgb(229,68,14)" fg:x="146774550" fg:w="2460107"/><text x="61.7305%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,209,738 samples, 0.51%)</title><rect x="62.5110%" y="2357" width="0.5067%" height="15" fill="rgb(243,106,26)" fg:x="149234657" fg:w="1209738"/><text x="62.7610%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,209,738 samples, 0.51%)</title><rect x="62.5110%" y="2341" width="0.5067%" height="15" fill="rgb(206,45,38)" fg:x="149234657" fg:w="1209738"/><text x="62.7610%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,209,738 samples, 0.51%)</title><rect x="62.5110%" y="2325" width="0.5067%" height="15" fill="rgb(226,6,15)" fg:x="149234657" fg:w="1209738"/><text x="62.7610%" y="2335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,209,738 samples, 0.51%)</title><rect x="62.5110%" y="2309" width="0.5067%" height="15" fill="rgb(232,22,54)" fg:x="149234657" fg:w="1209738"/><text x="62.7610%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,209,738 samples, 0.51%)</title><rect x="62.5110%" y="2293" width="0.5067%" height="15" fill="rgb(229,222,32)" fg:x="149234657" fg:w="1209738"/><text x="62.7610%" y="2303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,209,738 samples, 0.51%)</title><rect x="62.5110%" y="2277" width="0.5067%" height="15" fill="rgb(228,62,29)" fg:x="149234657" fg:w="1209738"/><text x="62.7610%" y="2287.50"></text></g><g><title>alloc::alloc::dealloc (1,209,738 samples, 0.51%)</title><rect x="62.5110%" y="2261" width="0.5067%" height="15" fill="rgb(251,103,34)" fg:x="149234657" fg:w="1209738"/><text x="62.7610%" y="2271.50"></text></g><g><title>cfree (1,209,738 samples, 0.51%)</title><rect x="62.5110%" y="2245" width="0.5067%" height="15" fill="rgb(233,12,30)" fg:x="149234657" fg:w="1209738"/><text x="62.7610%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,331,214 samples, 0.56%)</title><rect x="63.0177%" y="2293" width="0.5576%" height="15" fill="rgb(238,52,0)" fg:x="150444395" fg:w="1331214"/><text x="63.2677%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,331,214 samples, 0.56%)</title><rect x="63.0177%" y="2277" width="0.5576%" height="15" fill="rgb(223,98,5)" fg:x="150444395" fg:w="1331214"/><text x="63.2677%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,331,214 samples, 0.56%)</title><rect x="63.0177%" y="2261" width="0.5576%" height="15" fill="rgb(228,75,37)" fg:x="150444395" fg:w="1331214"/><text x="63.2677%" y="2271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,331,214 samples, 0.56%)</title><rect x="63.0177%" y="2245" width="0.5576%" height="15" fill="rgb(205,115,49)" fg:x="150444395" fg:w="1331214"/><text x="63.2677%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,331,214 samples, 0.56%)</title><rect x="63.0177%" y="2229" width="0.5576%" height="15" fill="rgb(250,154,43)" fg:x="150444395" fg:w="1331214"/><text x="63.2677%" y="2239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,331,214 samples, 0.56%)</title><rect x="63.0177%" y="2213" width="0.5576%" height="15" fill="rgb(226,43,29)" fg:x="150444395" fg:w="1331214"/><text x="63.2677%" y="2223.50"></text></g><g><title>alloc::alloc::dealloc (1,331,214 samples, 0.56%)</title><rect x="63.0177%" y="2197" width="0.5576%" height="15" fill="rgb(249,228,39)" fg:x="150444395" fg:w="1331214"/><text x="63.2677%" y="2207.50"></text></g><g><title>cfree (1,331,214 samples, 0.56%)</title><rect x="63.0177%" y="2181" width="0.5576%" height="15" fill="rgb(216,79,43)" fg:x="150444395" fg:w="1331214"/><text x="63.2677%" y="2191.50"></text></g><g><title>[libc.so.6] (1,331,214 samples, 0.56%)</title><rect x="63.0177%" y="2165" width="0.5576%" height="15" fill="rgb(228,95,12)" fg:x="150444395" fg:w="1331214"/><text x="63.2677%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,294,332 samples, 0.54%)</title><rect x="63.5753%" y="1717" width="0.5422%" height="15" fill="rgb(249,221,15)" fg:x="151775609" fg:w="1294332"/><text x="63.8253%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,294,332 samples, 0.54%)</title><rect x="63.5753%" y="1701" width="0.5422%" height="15" fill="rgb(233,34,13)" fg:x="151775609" fg:w="1294332"/><text x="63.8253%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,294,332 samples, 0.54%)</title><rect x="63.5753%" y="1685" width="0.5422%" height="15" fill="rgb(214,103,39)" fg:x="151775609" fg:w="1294332"/><text x="63.8253%" y="1695.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,294,332 samples, 0.54%)</title><rect x="63.5753%" y="1669" width="0.5422%" height="15" fill="rgb(251,126,39)" fg:x="151775609" fg:w="1294332"/><text x="63.8253%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,294,332 samples, 0.54%)</title><rect x="63.5753%" y="1653" width="0.5422%" height="15" fill="rgb(214,216,36)" fg:x="151775609" fg:w="1294332"/><text x="63.8253%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,294,332 samples, 0.54%)</title><rect x="63.5753%" y="1637" width="0.5422%" height="15" fill="rgb(220,221,8)" fg:x="151775609" fg:w="1294332"/><text x="63.8253%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (1,294,332 samples, 0.54%)</title><rect x="63.5753%" y="1621" width="0.5422%" height="15" fill="rgb(240,216,3)" fg:x="151775609" fg:w="1294332"/><text x="63.8253%" y="1631.50"></text></g><g><title>__rdl_dealloc (1,294,332 samples, 0.54%)</title><rect x="63.5753%" y="1605" width="0.5422%" height="15" fill="rgb(232,218,17)" fg:x="151775609" fg:w="1294332"/><text x="63.8253%" y="1615.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,294,332 samples, 0.54%)</title><rect x="63.5753%" y="1589" width="0.5422%" height="15" fill="rgb(229,163,45)" fg:x="151775609" fg:w="1294332"/><text x="63.8253%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1653" width="0.5241%" height="15" fill="rgb(231,110,42)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1637" width="0.5241%" height="15" fill="rgb(208,170,48)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1621" width="0.5241%" height="15" fill="rgb(239,116,25)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1605" width="0.5241%" height="15" fill="rgb(219,200,50)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1589" width="0.5241%" height="15" fill="rgb(245,200,0)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1573" width="0.5241%" height="15" fill="rgb(245,119,33)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1557" width="0.5241%" height="15" fill="rgb(231,125,12)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1541" width="0.5241%" height="15" fill="rgb(216,96,41)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1525" width="0.5241%" height="15" fill="rgb(248,43,45)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1509" width="0.5241%" height="15" fill="rgb(217,222,7)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1493" width="0.5241%" height="15" fill="rgb(233,28,6)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1477" width="0.5241%" height="15" fill="rgb(231,218,15)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1461" width="0.5241%" height="15" fill="rgb(226,171,48)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1445" width="0.5241%" height="15" fill="rgb(235,201,9)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1429" width="0.5241%" height="15" fill="rgb(217,80,15)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1413" width="0.5241%" height="15" fill="rgb(219,152,8)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1397" width="0.5241%" height="15" fill="rgb(243,107,38)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1381" width="0.5241%" height="15" fill="rgb(231,17,5)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1365" width="0.5241%" height="15" fill="rgb(209,25,54)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1349" width="0.5241%" height="15" fill="rgb(219,0,2)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1333" width="0.5241%" height="15" fill="rgb(246,9,5)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1317" width="0.5241%" height="15" fill="rgb(226,159,4)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1301" width="0.5241%" height="15" fill="rgb(219,175,34)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1285" width="0.5241%" height="15" fill="rgb(236,10,46)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1269" width="0.5241%" height="15" fill="rgb(240,211,16)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1253" width="0.5241%" height="15" fill="rgb(205,3,43)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1237" width="0.5241%" height="15" fill="rgb(245,7,22)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1221" width="0.5241%" height="15" fill="rgb(239,132,32)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1205" width="0.5241%" height="15" fill="rgb(228,202,34)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1189" width="0.5241%" height="15" fill="rgb(254,200,22)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1173" width="0.5241%" height="15" fill="rgb(219,10,39)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1183.50"></text></g><g><title>cfree (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1157" width="0.5241%" height="15" fill="rgb(226,210,39)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1167.50"></text></g><g><title>[libc.so.6] (1,251,202 samples, 0.52%)</title><rect x="64.1175%" y="1141" width="0.5241%" height="15" fill="rgb(208,219,16)" fg:x="153069941" fg:w="1251202"/><text x="64.3675%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,281,847 samples, 0.54%)</title><rect x="64.6416%" y="1653" width="0.5369%" height="15" fill="rgb(216,158,51)" fg:x="154321143" fg:w="1281847"/><text x="64.8916%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,281,847 samples, 0.54%)</title><rect x="64.6416%" y="1637" width="0.5369%" height="15" fill="rgb(233,14,44)" fg:x="154321143" fg:w="1281847"/><text x="64.8916%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,281,847 samples, 0.54%)</title><rect x="64.6416%" y="1621" width="0.5369%" height="15" fill="rgb(237,97,39)" fg:x="154321143" fg:w="1281847"/><text x="64.8916%" y="1631.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,281,847 samples, 0.54%)</title><rect x="64.6416%" y="1605" width="0.5369%" height="15" fill="rgb(218,198,43)" fg:x="154321143" fg:w="1281847"/><text x="64.8916%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,281,847 samples, 0.54%)</title><rect x="64.6416%" y="1589" width="0.5369%" height="15" fill="rgb(231,104,20)" fg:x="154321143" fg:w="1281847"/><text x="64.8916%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,281,847 samples, 0.54%)</title><rect x="64.6416%" y="1573" width="0.5369%" height="15" fill="rgb(254,36,13)" fg:x="154321143" fg:w="1281847"/><text x="64.8916%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (1,281,847 samples, 0.54%)</title><rect x="64.6416%" y="1557" width="0.5369%" height="15" fill="rgb(248,14,50)" fg:x="154321143" fg:w="1281847"/><text x="64.8916%" y="1567.50"></text></g><g><title>cfree (1,281,847 samples, 0.54%)</title><rect x="64.6416%" y="1541" width="0.5369%" height="15" fill="rgb(217,107,29)" fg:x="154321143" fg:w="1281847"/><text x="64.8916%" y="1551.50"></text></g><g><title>[libc.so.6] (1,281,847 samples, 0.54%)</title><rect x="64.6416%" y="1525" width="0.5369%" height="15" fill="rgb(251,169,33)" fg:x="154321143" fg:w="1281847"/><text x="64.8916%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,177,605 samples, 2.17%)</title><rect x="63.5753%" y="1781" width="2.1688%" height="15" fill="rgb(217,108,32)" fg:x="151775609" fg:w="5177605"/><text x="63.8253%" y="1791.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,177,605 samples, 2.17%)</title><rect x="63.5753%" y="1765" width="2.1688%" height="15" fill="rgb(219,66,42)" fg:x="151775609" fg:w="5177605"/><text x="63.8253%" y="1775.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,177,605 samples, 2.17%)</title><rect x="63.5753%" y="1749" width="2.1688%" height="15" fill="rgb(206,180,7)" fg:x="151775609" fg:w="5177605"/><text x="63.8253%" y="1759.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,177,605 samples, 2.17%)</title><rect x="63.5753%" y="1733" width="2.1688%" height="15" fill="rgb(208,226,31)" fg:x="151775609" fg:w="5177605"/><text x="63.8253%" y="1743.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,883,273 samples, 1.63%)</title><rect x="64.1175%" y="1717" width="1.6266%" height="15" fill="rgb(218,26,49)" fg:x="153069941" fg:w="3883273"/><text x="64.3675%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,883,273 samples, 1.63%)</title><rect x="64.1175%" y="1701" width="1.6266%" height="15" fill="rgb(233,197,48)" fg:x="153069941" fg:w="3883273"/><text x="64.3675%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,883,273 samples, 1.63%)</title><rect x="64.1175%" y="1685" width="1.6266%" height="15" fill="rgb(252,181,51)" fg:x="153069941" fg:w="3883273"/><text x="64.3675%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,883,273 samples, 1.63%)</title><rect x="64.1175%" y="1669" width="1.6266%" height="15" fill="rgb(253,90,19)" fg:x="153069941" fg:w="3883273"/><text x="64.3675%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,350,224 samples, 0.57%)</title><rect x="65.1785%" y="1653" width="0.5656%" height="15" fill="rgb(215,171,30)" fg:x="155602990" fg:w="1350224"/><text x="65.4285%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,350,224 samples, 0.57%)</title><rect x="65.1785%" y="1637" width="0.5656%" height="15" fill="rgb(214,222,9)" fg:x="155602990" fg:w="1350224"/><text x="65.4285%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,350,224 samples, 0.57%)</title><rect x="65.1785%" y="1621" width="0.5656%" height="15" fill="rgb(223,3,22)" fg:x="155602990" fg:w="1350224"/><text x="65.4285%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,350,224 samples, 0.57%)</title><rect x="65.1785%" y="1605" width="0.5656%" height="15" fill="rgb(225,196,46)" fg:x="155602990" fg:w="1350224"/><text x="65.4285%" y="1615.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,350,224 samples, 0.57%)</title><rect x="65.1785%" y="1589" width="0.5656%" height="15" fill="rgb(209,110,37)" fg:x="155602990" fg:w="1350224"/><text x="65.4285%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,350,224 samples, 0.57%)</title><rect x="65.1785%" y="1573" width="0.5656%" height="15" fill="rgb(249,89,12)" fg:x="155602990" fg:w="1350224"/><text x="65.4285%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,350,224 samples, 0.57%)</title><rect x="65.1785%" y="1557" width="0.5656%" height="15" fill="rgb(226,27,33)" fg:x="155602990" fg:w="1350224"/><text x="65.4285%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,350,224 samples, 0.57%)</title><rect x="65.1785%" y="1541" width="0.5656%" height="15" fill="rgb(213,82,22)" fg:x="155602990" fg:w="1350224"/><text x="65.4285%" y="1551.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,350,224 samples, 0.57%)</title><rect x="65.1785%" y="1525" width="0.5656%" height="15" fill="rgb(248,140,0)" fg:x="155602990" fg:w="1350224"/><text x="65.4285%" y="1535.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (1,350,224 samples, 0.57%)</title><rect x="65.1785%" y="1509" width="0.5656%" height="15" fill="rgb(228,106,3)" fg:x="155602990" fg:w="1350224"/><text x="65.4285%" y="1519.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1,350,224 samples, 0.57%)</title><rect x="65.1785%" y="1493" width="0.5656%" height="15" fill="rgb(209,23,37)" fg:x="155602990" fg:w="1350224"/><text x="65.4285%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,479,813 samples, 2.71%)</title><rect x="63.5753%" y="1845" width="2.7142%" height="15" fill="rgb(241,93,50)" fg:x="151775609" fg:w="6479813"/><text x="63.8253%" y="1855.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,479,813 samples, 2.71%)</title><rect x="63.5753%" y="1829" width="2.7142%" height="15" fill="rgb(253,46,43)" fg:x="151775609" fg:w="6479813"/><text x="63.8253%" y="1839.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,479,813 samples, 2.71%)</title><rect x="63.5753%" y="1813" width="2.7142%" height="15" fill="rgb(226,206,43)" fg:x="151775609" fg:w="6479813"/><text x="63.8253%" y="1823.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,479,813 samples, 2.71%)</title><rect x="63.5753%" y="1797" width="2.7142%" height="15" fill="rgb(217,54,7)" fg:x="151775609" fg:w="6479813"/><text x="63.8253%" y="1807.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,302,208 samples, 0.55%)</title><rect x="65.7441%" y="1781" width="0.5455%" height="15" fill="rgb(223,5,52)" fg:x="156953214" fg:w="1302208"/><text x="65.9941%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,302,208 samples, 0.55%)</title><rect x="65.7441%" y="1765" width="0.5455%" height="15" fill="rgb(206,52,46)" fg:x="156953214" fg:w="1302208"/><text x="65.9941%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,302,208 samples, 0.55%)</title><rect x="65.7441%" y="1749" width="0.5455%" height="15" fill="rgb(253,136,11)" fg:x="156953214" fg:w="1302208"/><text x="65.9941%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,302,208 samples, 0.55%)</title><rect x="65.7441%" y="1733" width="0.5455%" height="15" fill="rgb(208,106,33)" fg:x="156953214" fg:w="1302208"/><text x="65.9941%" y="1743.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,302,208 samples, 0.55%)</title><rect x="65.7441%" y="1717" width="0.5455%" height="15" fill="rgb(206,54,4)" fg:x="156953214" fg:w="1302208"/><text x="65.9941%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,302,208 samples, 0.55%)</title><rect x="65.7441%" y="1701" width="0.5455%" height="15" fill="rgb(213,3,15)" fg:x="156953214" fg:w="1302208"/><text x="65.9941%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,302,208 samples, 0.55%)</title><rect x="65.7441%" y="1685" width="0.5455%" height="15" fill="rgb(252,211,39)" fg:x="156953214" fg:w="1302208"/><text x="65.9941%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,797,637 samples, 3.27%)</title><rect x="63.5753%" y="2037" width="3.2663%" height="15" fill="rgb(223,6,36)" fg:x="151775609" fg:w="7797637"/><text x="63.8253%" y="2047.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,797,637 samples, 3.27%)</title><rect x="63.5753%" y="2021" width="3.2663%" height="15" fill="rgb(252,169,45)" fg:x="151775609" fg:w="7797637"/><text x="63.8253%" y="2031.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,797,637 samples, 3.27%)</title><rect x="63.5753%" y="2005" width="3.2663%" height="15" fill="rgb(212,48,26)" fg:x="151775609" fg:w="7797637"/><text x="63.8253%" y="2015.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,797,637 samples, 3.27%)</title><rect x="63.5753%" y="1989" width="3.2663%" height="15" fill="rgb(251,102,48)" fg:x="151775609" fg:w="7797637"/><text x="63.8253%" y="1999.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,797,637 samples, 3.27%)</title><rect x="63.5753%" y="1973" width="3.2663%" height="15" fill="rgb(243,208,16)" fg:x="151775609" fg:w="7797637"/><text x="63.8253%" y="1983.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,797,637 samples, 3.27%)</title><rect x="63.5753%" y="1957" width="3.2663%" height="15" fill="rgb(219,96,24)" fg:x="151775609" fg:w="7797637"/><text x="63.8253%" y="1967.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,797,637 samples, 3.27%)</title><rect x="63.5753%" y="1941" width="3.2663%" height="15" fill="rgb(219,33,29)" fg:x="151775609" fg:w="7797637"/><text x="63.8253%" y="1951.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,797,637 samples, 3.27%)</title><rect x="63.5753%" y="1925" width="3.2663%" height="15" fill="rgb(223,176,5)" fg:x="151775609" fg:w="7797637"/><text x="63.8253%" y="1935.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,797,637 samples, 3.27%)</title><rect x="63.5753%" y="1909" width="3.2663%" height="15" fill="rgb(228,140,14)" fg:x="151775609" fg:w="7797637"/><text x="63.8253%" y="1919.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,797,637 samples, 3.27%)</title><rect x="63.5753%" y="1893" width="3.2663%" height="15" fill="rgb(217,179,31)" fg:x="151775609" fg:w="7797637"/><text x="63.8253%" y="1903.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,797,637 samples, 3.27%)</title><rect x="63.5753%" y="1877" width="3.2663%" height="15" fill="rgb(230,9,30)" fg:x="151775609" fg:w="7797637"/><text x="63.8253%" y="1887.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,797,637 samples, 3.27%)</title><rect x="63.5753%" y="1861" width="3.2663%" height="15" fill="rgb(230,136,20)" fg:x="151775609" fg:w="7797637"/><text x="63.8253%" y="1871.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,317,824 samples, 0.55%)</title><rect x="66.2895%" y="1845" width="0.5520%" height="15" fill="rgb(215,210,22)" fg:x="158255422" fg:w="1317824"/><text x="66.5395%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,317,824 samples, 0.55%)</title><rect x="66.2895%" y="1829" width="0.5520%" height="15" fill="rgb(218,43,5)" fg:x="158255422" fg:w="1317824"/><text x="66.5395%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,317,824 samples, 0.55%)</title><rect x="66.2895%" y="1813" width="0.5520%" height="15" fill="rgb(216,11,5)" fg:x="158255422" fg:w="1317824"/><text x="66.5395%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,317,824 samples, 0.55%)</title><rect x="66.2895%" y="1797" width="0.5520%" height="15" fill="rgb(209,82,29)" fg:x="158255422" fg:w="1317824"/><text x="66.5395%" y="1807.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,824 samples, 0.55%)</title><rect x="66.2895%" y="1781" width="0.5520%" height="15" fill="rgb(244,115,12)" fg:x="158255422" fg:w="1317824"/><text x="66.5395%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,317,824 samples, 0.55%)</title><rect x="66.2895%" y="1765" width="0.5520%" height="15" fill="rgb(222,82,18)" fg:x="158255422" fg:w="1317824"/><text x="66.5395%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,317,824 samples, 0.55%)</title><rect x="66.2895%" y="1749" width="0.5520%" height="15" fill="rgb(249,227,8)" fg:x="158255422" fg:w="1317824"/><text x="66.5395%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (10,427,503 samples, 4.37%)</title><rect x="63.0177%" y="2357" width="4.3678%" height="15" fill="rgb(253,141,45)" fg:x="150444395" fg:w="10427503"/><text x="63.2677%" y="2367.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,427,503 samples, 4.37%)</title><rect x="63.0177%" y="2341" width="4.3678%" height="15" fill="rgb(234,184,4)" fg:x="150444395" fg:w="10427503"/><text x="63.2677%" y="2351.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (10,427,503 samples, 4.37%)</title><rect x="63.0177%" y="2325" width="4.3678%" height="15" fill="rgb(218,194,23)" fg:x="150444395" fg:w="10427503"/><text x="63.2677%" y="2335.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (10,427,503 samples, 4.37%)</title><rect x="63.0177%" y="2309" width="4.3678%" height="15" fill="rgb(235,66,41)" fg:x="150444395" fg:w="10427503"/><text x="63.2677%" y="2319.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2293" width="3.8102%" height="15" fill="rgb(245,217,1)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2303.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2277" width="3.8102%" height="15" fill="rgb(229,91,1)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2287.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2261" width="3.8102%" height="15" fill="rgb(207,101,30)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2271.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2245" width="3.8102%" height="15" fill="rgb(223,82,49)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2255.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2229" width="3.8102%" height="15" fill="rgb(218,167,17)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2239.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2213" width="3.8102%" height="15" fill="rgb(208,103,14)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2223.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2197" width="3.8102%" height="15" fill="rgb(238,20,8)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2207.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2181" width="3.8102%" height="15" fill="rgb(218,80,54)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2191.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2165" width="3.8102%" height="15" fill="rgb(240,144,17)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2175.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2149" width="3.8102%" height="15" fill="rgb(245,27,50)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2159.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2133" width="3.8102%" height="15" fill="rgb(251,51,7)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2143.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2117" width="3.8102%" height="15" fill="rgb(245,217,29)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2127.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2101" width="3.8102%" height="15" fill="rgb(221,176,29)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2111.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2085" width="3.8102%" height="15" fill="rgb(212,180,24)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2095.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2069" width="3.8102%" height="15" fill="rgb(254,24,2)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2079.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,096,289 samples, 3.81%)</title><rect x="63.5753%" y="2053" width="3.8102%" height="15" fill="rgb(230,100,2)" fg:x="151775609" fg:w="9096289"/><text x="63.8253%" y="2063.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,298,652 samples, 0.54%)</title><rect x="66.8415%" y="2037" width="0.5440%" height="15" fill="rgb(219,142,25)" fg:x="159573246" fg:w="1298652"/><text x="67.0915%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,298,652 samples, 0.54%)</title><rect x="66.8415%" y="2021" width="0.5440%" height="15" fill="rgb(240,73,43)" fg:x="159573246" fg:w="1298652"/><text x="67.0915%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,298,652 samples, 0.54%)</title><rect x="66.8415%" y="2005" width="0.5440%" height="15" fill="rgb(214,114,15)" fg:x="159573246" fg:w="1298652"/><text x="67.0915%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,298,652 samples, 0.54%)</title><rect x="66.8415%" y="1989" width="0.5440%" height="15" fill="rgb(207,130,4)" fg:x="159573246" fg:w="1298652"/><text x="67.0915%" y="1999.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,298,652 samples, 0.54%)</title><rect x="66.8415%" y="1973" width="0.5440%" height="15" fill="rgb(221,25,40)" fg:x="159573246" fg:w="1298652"/><text x="67.0915%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,298,652 samples, 0.54%)</title><rect x="66.8415%" y="1957" width="0.5440%" height="15" fill="rgb(241,184,7)" fg:x="159573246" fg:w="1298652"/><text x="67.0915%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,298,652 samples, 0.54%)</title><rect x="66.8415%" y="1941" width="0.5440%" height="15" fill="rgb(235,159,4)" fg:x="159573246" fg:w="1298652"/><text x="67.0915%" y="1951.50"></text></g><g><title>alloc::alloc::dealloc (1,298,652 samples, 0.54%)</title><rect x="66.8415%" y="1925" width="0.5440%" height="15" fill="rgb(214,87,48)" fg:x="159573246" fg:w="1298652"/><text x="67.0915%" y="1935.50"></text></g><g><title>cfree (1,298,652 samples, 0.54%)</title><rect x="66.8415%" y="1909" width="0.5440%" height="15" fill="rgb(246,198,24)" fg:x="159573246" fg:w="1298652"/><text x="67.0915%" y="1919.50"></text></g><g><title>__rdl_dealloc (1,324,954 samples, 0.55%)</title><rect x="67.3855%" y="2229" width="0.5550%" height="15" fill="rgb(209,66,40)" fg:x="160871898" fg:w="1324954"/><text x="67.6355%" y="2239.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,324,954 samples, 0.55%)</title><rect x="67.3855%" y="2213" width="0.5550%" height="15" fill="rgb(233,147,39)" fg:x="160871898" fg:w="1324954"/><text x="67.6355%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,630,594 samples, 1.10%)</title><rect x="67.3855%" y="2357" width="1.1019%" height="15" fill="rgb(231,145,52)" fg:x="160871898" fg:w="2630594"/><text x="67.6355%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,630,594 samples, 1.10%)</title><rect x="67.3855%" y="2341" width="1.1019%" height="15" fill="rgb(206,20,26)" fg:x="160871898" fg:w="2630594"/><text x="67.6355%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,630,594 samples, 1.10%)</title><rect x="67.3855%" y="2325" width="1.1019%" height="15" fill="rgb(238,220,4)" fg:x="160871898" fg:w="2630594"/><text x="67.6355%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,630,594 samples, 1.10%)</title><rect x="67.3855%" y="2309" width="1.1019%" height="15" fill="rgb(252,195,42)" fg:x="160871898" fg:w="2630594"/><text x="67.6355%" y="2319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,630,594 samples, 1.10%)</title><rect x="67.3855%" y="2293" width="1.1019%" height="15" fill="rgb(209,10,6)" fg:x="160871898" fg:w="2630594"/><text x="67.6355%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,630,594 samples, 1.10%)</title><rect x="67.3855%" y="2277" width="1.1019%" height="15" fill="rgb(229,3,52)" fg:x="160871898" fg:w="2630594"/><text x="67.6355%" y="2287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,630,594 samples, 1.10%)</title><rect x="67.3855%" y="2261" width="1.1019%" height="15" fill="rgb(253,49,37)" fg:x="160871898" fg:w="2630594"/><text x="67.6355%" y="2271.50"></text></g><g><title>alloc::alloc::dealloc (2,630,594 samples, 1.10%)</title><rect x="67.3855%" y="2245" width="1.1019%" height="15" fill="rgb(240,103,49)" fg:x="160871898" fg:w="2630594"/><text x="67.6355%" y="2255.50"></text></g><g><title>cfree (1,305,640 samples, 0.55%)</title><rect x="67.9405%" y="2229" width="0.5469%" height="15" fill="rgb(250,182,30)" fg:x="162196852" fg:w="1305640"/><text x="68.1905%" y="2239.50"></text></g><g><title>[libc.so.6] (1,305,640 samples, 0.55%)</title><rect x="67.9405%" y="2213" width="0.5469%" height="15" fill="rgb(248,8,30)" fg:x="162196852" fg:w="1305640"/><text x="68.1905%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,586,423 samples, 1.08%)</title><rect x="68.4874%" y="2357" width="1.0834%" height="15" fill="rgb(237,120,30)" fg:x="163502492" fg:w="2586423"/><text x="68.7374%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,586,423 samples, 1.08%)</title><rect x="68.4874%" y="2341" width="1.0834%" height="15" fill="rgb(221,146,34)" fg:x="163502492" fg:w="2586423"/><text x="68.7374%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,586,423 samples, 1.08%)</title><rect x="68.4874%" y="2325" width="1.0834%" height="15" fill="rgb(242,55,13)" fg:x="163502492" fg:w="2586423"/><text x="68.7374%" y="2335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,586,423 samples, 1.08%)</title><rect x="68.4874%" y="2309" width="1.0834%" height="15" fill="rgb(242,112,31)" fg:x="163502492" fg:w="2586423"/><text x="68.7374%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,586,423 samples, 1.08%)</title><rect x="68.4874%" y="2293" width="1.0834%" height="15" fill="rgb(249,192,27)" fg:x="163502492" fg:w="2586423"/><text x="68.7374%" y="2303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,586,423 samples, 1.08%)</title><rect x="68.4874%" y="2277" width="1.0834%" height="15" fill="rgb(208,204,44)" fg:x="163502492" fg:w="2586423"/><text x="68.7374%" y="2287.50"></text></g><g><title>alloc::alloc::dealloc (2,586,423 samples, 1.08%)</title><rect x="68.4874%" y="2261" width="1.0834%" height="15" fill="rgb(208,93,54)" fg:x="163502492" fg:w="2586423"/><text x="68.7374%" y="2271.50"></text></g><g><title>cfree (2,586,423 samples, 1.08%)</title><rect x="68.4874%" y="2245" width="1.0834%" height="15" fill="rgb(242,1,31)" fg:x="163502492" fg:w="2586423"/><text x="68.7374%" y="2255.50"></text></g><g><title>[libc.so.6] (1,346,582 samples, 0.56%)</title><rect x="69.0068%" y="2229" width="0.5641%" height="15" fill="rgb(241,83,25)" fg:x="164742333" fg:w="1346582"/><text x="69.2568%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,204,779 samples, 7.63%)</title><rect x="62.5110%" y="2405" width="7.6256%" height="15" fill="rgb(205,169,50)" fg:x="149234657" fg:w="18204779"/><text x="62.7610%" y="2415.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (18,204,779 samples, 7.63%)</title><rect x="62.5110%" y="2389" width="7.6256%" height="15" fill="rgb(239,186,37)" fg:x="149234657" fg:w="18204779"/><text x="62.7610%" y="2399.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (18,204,779 samples, 7.63%)</title><rect x="62.5110%" y="2373" width="7.6256%" height="15" fill="rgb(205,221,10)" fg:x="149234657" fg:w="18204779"/><text x="62.7610%" y="2383.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,350,521 samples, 0.57%)</title><rect x="69.5708%" y="2357" width="0.5657%" height="15" fill="rgb(218,196,15)" fg:x="166088915" fg:w="1350521"/><text x="69.8208%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,350,521 samples, 0.57%)</title><rect x="69.5708%" y="2341" width="0.5657%" height="15" fill="rgb(218,196,35)" fg:x="166088915" fg:w="1350521"/><text x="69.8208%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,350,521 samples, 0.57%)</title><rect x="69.5708%" y="2325" width="0.5657%" height="15" fill="rgb(233,63,24)" fg:x="166088915" fg:w="1350521"/><text x="69.8208%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,350,521 samples, 0.57%)</title><rect x="69.5708%" y="2309" width="0.5657%" height="15" fill="rgb(225,8,4)" fg:x="166088915" fg:w="1350521"/><text x="69.8208%" y="2319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,350,521 samples, 0.57%)</title><rect x="69.5708%" y="2293" width="0.5657%" height="15" fill="rgb(234,105,35)" fg:x="166088915" fg:w="1350521"/><text x="69.8208%" y="2303.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,350,521 samples, 0.57%)</title><rect x="69.5708%" y="2277" width="0.5657%" height="15" fill="rgb(236,21,32)" fg:x="166088915" fg:w="1350521"/><text x="69.8208%" y="2287.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,350,521 samples, 0.57%)</title><rect x="69.5708%" y="2261" width="0.5657%" height="15" fill="rgb(228,109,6)" fg:x="166088915" fg:w="1350521"/><text x="69.8208%" y="2271.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,350,521 samples, 0.57%)</title><rect x="69.5708%" y="2245" width="0.5657%" height="15" fill="rgb(229,215,31)" fg:x="166088915" fg:w="1350521"/><text x="69.8208%" y="2255.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,350,521 samples, 0.57%)</title><rect x="69.5708%" y="2229" width="0.5657%" height="15" fill="rgb(221,52,54)" fg:x="166088915" fg:w="1350521"/><text x="69.8208%" y="2239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1,350,521 samples, 0.57%)</title><rect x="69.5708%" y="2213" width="0.5657%" height="15" fill="rgb(252,129,43)" fg:x="166088915" fg:w="1350521"/><text x="69.8208%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (22,079,786 samples, 9.25%)</title><rect x="62.5110%" y="2421" width="9.2487%" height="15" fill="rgb(248,183,27)" fg:x="149234657" fg:w="22079786"/><text x="62.7610%" y="2431.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,875,007 samples, 1.62%)</title><rect x="70.1365%" y="2405" width="1.6232%" height="15" fill="rgb(250,0,22)" fg:x="167439436" fg:w="3875007"/><text x="70.3865%" y="2415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,875,007 samples, 1.62%)</title><rect x="70.1365%" y="2389" width="1.6232%" height="15" fill="rgb(213,166,10)" fg:x="167439436" fg:w="3875007"/><text x="70.3865%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,875,007 samples, 1.62%)</title><rect x="70.1365%" y="2373" width="1.6232%" height="15" fill="rgb(207,163,36)" fg:x="167439436" fg:w="3875007"/><text x="70.3865%" y="2383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,875,007 samples, 1.62%)</title><rect x="70.1365%" y="2357" width="1.6232%" height="15" fill="rgb(208,122,22)" fg:x="167439436" fg:w="3875007"/><text x="70.3865%" y="2367.50"></text></g><g><title>alloc::alloc::dealloc (3,875,007 samples, 1.62%)</title><rect x="70.1365%" y="2341" width="1.6232%" height="15" fill="rgb(207,104,49)" fg:x="167439436" fg:w="3875007"/><text x="70.3865%" y="2351.50"></text></g><g><title>cfree (3,875,007 samples, 1.62%)</title><rect x="70.1365%" y="2325" width="1.6232%" height="15" fill="rgb(248,211,50)" fg:x="167439436" fg:w="3875007"/><text x="70.3865%" y="2335.50"></text></g><g><title>[libc.so.6] (3,875,007 samples, 1.62%)</title><rect x="70.1365%" y="2309" width="1.6232%" height="15" fill="rgb(217,13,45)" fg:x="167439436" fg:w="3875007"/><text x="70.3865%" y="2319.50"></text></g><g><title>[libc.so.6] (1,331,347 samples, 0.56%)</title><rect x="71.2020%" y="2293" width="0.5577%" height="15" fill="rgb(211,216,49)" fg:x="169983096" fg:w="1331347"/><text x="71.4520%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,368,480 samples, 0.99%)</title><rect x="71.7597%" y="2421" width="0.9921%" height="15" fill="rgb(221,58,53)" fg:x="171314443" fg:w="2368480"/><text x="72.0097%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,368,480 samples, 0.99%)</title><rect x="71.7597%" y="2405" width="0.9921%" height="15" fill="rgb(220,112,41)" fg:x="171314443" fg:w="2368480"/><text x="72.0097%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,368,480 samples, 0.99%)</title><rect x="71.7597%" y="2389" width="0.9921%" height="15" fill="rgb(236,38,28)" fg:x="171314443" fg:w="2368480"/><text x="72.0097%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,368,480 samples, 0.99%)</title><rect x="71.7597%" y="2373" width="0.9921%" height="15" fill="rgb(227,195,22)" fg:x="171314443" fg:w="2368480"/><text x="72.0097%" y="2383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,368,480 samples, 0.99%)</title><rect x="71.7597%" y="2357" width="0.9921%" height="15" fill="rgb(214,55,33)" fg:x="171314443" fg:w="2368480"/><text x="72.0097%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,368,480 samples, 0.99%)</title><rect x="71.7597%" y="2341" width="0.9921%" height="15" fill="rgb(248,80,13)" fg:x="171314443" fg:w="2368480"/><text x="72.0097%" y="2351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,368,480 samples, 0.99%)</title><rect x="71.7597%" y="2325" width="0.9921%" height="15" fill="rgb(238,52,6)" fg:x="171314443" fg:w="2368480"/><text x="72.0097%" y="2335.50"></text></g><g><title>alloc::alloc::dealloc (2,368,480 samples, 0.99%)</title><rect x="71.7597%" y="2309" width="0.9921%" height="15" fill="rgb(224,198,47)" fg:x="171314443" fg:w="2368480"/><text x="72.0097%" y="2319.50"></text></g><g><title>cfree (2,368,480 samples, 0.99%)</title><rect x="71.7597%" y="2293" width="0.9921%" height="15" fill="rgb(233,171,20)" fg:x="171314443" fg:w="2368480"/><text x="72.0097%" y="2303.50"></text></g><g><title>[libc.so.6] (1,287,746 samples, 0.54%)</title><rect x="72.2124%" y="2277" width="0.5394%" height="15" fill="rgb(241,30,25)" fg:x="172395177" fg:w="1287746"/><text x="72.4624%" y="2287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29,445,068 samples, 12.33%)</title><rect x="60.9284%" y="2469" width="12.3339%" height="15" fill="rgb(207,171,38)" fg:x="145456582" fg:w="29445068"/><text x="61.1784%" y="2479.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (29,445,068 samples, 12.33%)</title><rect x="60.9284%" y="2453" width="12.3339%" height="15" fill="rgb(234,70,1)" fg:x="145456582" fg:w="29445068"/><text x="61.1784%" y="2463.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (29,445,068 samples, 12.33%)</title><rect x="60.9284%" y="2437" width="12.3339%" height="15" fill="rgb(232,178,18)" fg:x="145456582" fg:w="29445068"/><text x="61.1784%" y="2447.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;css_bitvector_compiler::BitVector&gt;&gt; (1,218,727 samples, 0.51%)</title><rect x="72.7518%" y="2421" width="0.5105%" height="15" fill="rgb(241,78,40)" fg:x="173682923" fg:w="1218727"/><text x="73.0018%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (45,824,200 samples, 19.19%)</title><rect x="60.9284%" y="2485" width="19.1947%" height="15" fill="rgb(222,35,25)" fg:x="145456582" fg:w="45824200"/><text x="61.1784%" y="2495.50">core::ptr::drop_in_place&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (16,379,132 samples, 6.86%)</title><rect x="73.2623%" y="2469" width="6.8608%" height="15" fill="rgb(207,92,16)" fg:x="174901650" fg:w="16379132"/><text x="73.5123%" y="2479.50">core::ptr..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,379,132 samples, 6.86%)</title><rect x="73.2623%" y="2453" width="6.8608%" height="15" fill="rgb(216,59,51)" fg:x="174901650" fg:w="16379132"/><text x="73.5123%" y="2463.50">&lt;alloc::r..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (16,379,132 samples, 6.86%)</title><rect x="73.2623%" y="2437" width="6.8608%" height="15" fill="rgb(213,80,28)" fg:x="174901650" fg:w="16379132"/><text x="73.5123%" y="2447.50">alloc::ra..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16,379,132 samples, 6.86%)</title><rect x="73.2623%" y="2421" width="6.8608%" height="15" fill="rgb(220,93,7)" fg:x="174901650" fg:w="16379132"/><text x="73.5123%" y="2431.50">&lt;alloc::a..</text></g><g><title>alloc::alloc::dealloc (16,379,132 samples, 6.86%)</title><rect x="73.2623%" y="2405" width="6.8608%" height="15" fill="rgb(225,24,44)" fg:x="174901650" fg:w="16379132"/><text x="73.5123%" y="2415.50">alloc::al..</text></g><g><title>cfree (16,379,132 samples, 6.86%)</title><rect x="73.2623%" y="2389" width="6.8608%" height="15" fill="rgb(243,74,40)" fg:x="174901650" fg:w="16379132"/><text x="73.5123%" y="2399.50">cfree</text></g><g><title>[libc.so.6] (16,379,132 samples, 6.86%)</title><rect x="73.2623%" y="2373" width="6.8608%" height="15" fill="rgb(228,39,7)" fg:x="174901650" fg:w="16379132"/><text x="73.5123%" y="2383.50">[libc.so...</text></g><g><title>[libc.so.6] (16,379,132 samples, 6.86%)</title><rect x="73.2623%" y="2357" width="6.8608%" height="15" fill="rgb(227,79,8)" fg:x="174901650" fg:w="16379132"/><text x="73.5123%" y="2367.50">[libc.so...</text></g><g><title>[libc.so.6] (1,321,330 samples, 0.55%)</title><rect x="79.5696%" y="2341" width="0.5535%" height="15" fill="rgb(236,58,11)" fg:x="189959452" fg:w="1321330"/><text x="79.8196%" y="2351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48,389,902 samples, 20.27%)</title><rect x="60.3741%" y="2597" width="20.2694%" height="15" fill="rgb(249,63,35)" fg:x="144133358" fg:w="48389902"/><text x="60.6241%" y="2607.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (48,389,902 samples, 20.27%)</title><rect x="60.3741%" y="2581" width="20.2694%" height="15" fill="rgb(252,114,16)" fg:x="144133358" fg:w="48389902"/><text x="60.6241%" y="2591.50">core::ptr::drop_in_place&lt;[css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (48,389,902 samples, 20.27%)</title><rect x="60.3741%" y="2565" width="20.2694%" height="15" fill="rgb(254,151,24)" fg:x="144133358" fg:w="48389902"/><text x="60.6241%" y="2575.50">core::ptr::drop_in_place&lt;css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (48,389,902 samples, 20.27%)</title><rect x="60.3741%" y="2549" width="20.2694%" height="15" fill="rgb(253,54,39)" fg:x="144133358" fg:w="48389902"/><text x="60.6241%" y="2559.50">core::ptr::drop_in_place&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48,389,902 samples, 20.27%)</title><rect x="60.3741%" y="2533" width="20.2694%" height="15" fill="rgb(243,25,45)" fg:x="144133358" fg:w="48389902"/><text x="60.6241%" y="2543.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (48,389,902 samples, 20.27%)</title><rect x="60.3741%" y="2517" width="20.2694%" height="15" fill="rgb(234,134,9)" fg:x="144133358" fg:w="48389902"/><text x="60.6241%" y="2527.50">core::ptr::drop_in_place&lt;[css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (48,389,902 samples, 20.27%)</title><rect x="60.3741%" y="2501" width="20.2694%" height="15" fill="rgb(227,166,31)" fg:x="144133358" fg:w="48389902"/><text x="60.6241%" y="2511.50">core::ptr::drop_in_place&lt;css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,242,478 samples, 0.52%)</title><rect x="80.1231%" y="2485" width="0.5204%" height="15" fill="rgb(245,143,41)" fg:x="191280782" fg:w="1242478"/><text x="80.3731%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,242,478 samples, 0.52%)</title><rect x="80.1231%" y="2469" width="0.5204%" height="15" fill="rgb(238,181,32)" fg:x="191280782" fg:w="1242478"/><text x="80.3731%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,242,478 samples, 0.52%)</title><rect x="80.1231%" y="2453" width="0.5204%" height="15" fill="rgb(224,113,18)" fg:x="191280782" fg:w="1242478"/><text x="80.3731%" y="2463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,242,478 samples, 0.52%)</title><rect x="80.1231%" y="2437" width="0.5204%" height="15" fill="rgb(240,229,28)" fg:x="191280782" fg:w="1242478"/><text x="80.3731%" y="2447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,242,478 samples, 0.52%)</title><rect x="80.1231%" y="2421" width="0.5204%" height="15" fill="rgb(250,185,3)" fg:x="191280782" fg:w="1242478"/><text x="80.3731%" y="2431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,242,478 samples, 0.52%)</title><rect x="80.1231%" y="2405" width="0.5204%" height="15" fill="rgb(212,59,25)" fg:x="191280782" fg:w="1242478"/><text x="80.3731%" y="2415.50"></text></g><g><title>alloc::alloc::dealloc (1,242,478 samples, 0.52%)</title><rect x="80.1231%" y="2389" width="0.5204%" height="15" fill="rgb(221,87,20)" fg:x="191280782" fg:w="1242478"/><text x="80.3731%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (49,718,665 samples, 20.83%)</title><rect x="60.3741%" y="2821" width="20.8260%" height="15" fill="rgb(213,74,28)" fg:x="144133358" fg:w="49718665"/><text x="60.6241%" y="2831.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (49,718,665 samples, 20.83%)</title><rect x="60.3741%" y="2805" width="20.8260%" height="15" fill="rgb(224,132,34)" fg:x="144133358" fg:w="49718665"/><text x="60.6241%" y="2815.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49,718,665 samples, 20.83%)</title><rect x="60.3741%" y="2789" width="20.8260%" height="15" fill="rgb(222,101,24)" fg:x="144133358" fg:w="49718665"/><text x="60.6241%" y="2799.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (49,718,665 samples, 20.83%)</title><rect x="60.3741%" y="2773" width="20.8260%" height="15" fill="rgb(254,142,4)" fg:x="144133358" fg:w="49718665"/><text x="60.6241%" y="2783.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (49,718,665 samples, 20.83%)</title><rect x="60.3741%" y="2757" width="20.8260%" height="15" fill="rgb(230,229,49)" fg:x="144133358" fg:w="49718665"/><text x="60.6241%" y="2767.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (49,718,665 samples, 20.83%)</title><rect x="60.3741%" y="2741" width="20.8260%" height="15" fill="rgb(238,70,47)" fg:x="144133358" fg:w="49718665"/><text x="60.6241%" y="2751.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49,718,665 samples, 20.83%)</title><rect x="60.3741%" y="2725" width="20.8260%" height="15" fill="rgb(231,160,17)" fg:x="144133358" fg:w="49718665"/><text x="60.6241%" y="2735.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (49,718,665 samples, 20.83%)</title><rect x="60.3741%" y="2709" width="20.8260%" height="15" fill="rgb(218,68,53)" fg:x="144133358" fg:w="49718665"/><text x="60.6241%" y="2719.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (49,718,665 samples, 20.83%)</title><rect x="60.3741%" y="2693" width="20.8260%" height="15" fill="rgb(236,111,10)" fg:x="144133358" fg:w="49718665"/><text x="60.6241%" y="2703.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (49,718,665 samples, 20.83%)</title><rect x="60.3741%" y="2677" width="20.8260%" height="15" fill="rgb(224,34,41)" fg:x="144133358" fg:w="49718665"/><text x="60.6241%" y="2687.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49,718,665 samples, 20.83%)</title><rect x="60.3741%" y="2661" width="20.8260%" height="15" fill="rgb(241,118,19)" fg:x="144133358" fg:w="49718665"/><text x="60.6241%" y="2671.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (49,718,665 samples, 20.83%)</title><rect x="60.3741%" y="2645" width="20.8260%" height="15" fill="rgb(238,129,25)" fg:x="144133358" fg:w="49718665"/><text x="60.6241%" y="2655.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (49,718,665 samples, 20.83%)</title><rect x="60.3741%" y="2629" width="20.8260%" height="15" fill="rgb(238,22,31)" fg:x="144133358" fg:w="49718665"/><text x="60.6241%" y="2639.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (49,718,665 samples, 20.83%)</title><rect x="60.3741%" y="2613" width="20.8260%" height="15" fill="rgb(222,174,48)" fg:x="144133358" fg:w="49718665"/><text x="60.6241%" y="2623.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,328,763 samples, 0.56%)</title><rect x="80.6435%" y="2597" width="0.5566%" height="15" fill="rgb(206,152,40)" fg:x="192523260" fg:w="1328763"/><text x="80.8935%" y="2607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,328,763 samples, 0.56%)</title><rect x="80.6435%" y="2581" width="0.5566%" height="15" fill="rgb(218,99,54)" fg:x="192523260" fg:w="1328763"/><text x="80.8935%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,328,763 samples, 0.56%)</title><rect x="80.6435%" y="2565" width="0.5566%" height="15" fill="rgb(220,174,26)" fg:x="192523260" fg:w="1328763"/><text x="80.8935%" y="2575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,328,763 samples, 0.56%)</title><rect x="80.6435%" y="2549" width="0.5566%" height="15" fill="rgb(245,116,9)" fg:x="192523260" fg:w="1328763"/><text x="80.8935%" y="2559.50"></text></g><g><title>alloc::alloc::dealloc (1,328,763 samples, 0.56%)</title><rect x="80.6435%" y="2533" width="0.5566%" height="15" fill="rgb(209,72,35)" fg:x="192523260" fg:w="1328763"/><text x="80.8935%" y="2543.50"></text></g><g><title>cfree (1,328,763 samples, 0.56%)</title><rect x="80.6435%" y="2517" width="0.5566%" height="15" fill="rgb(226,126,21)" fg:x="192523260" fg:w="1328763"/><text x="80.8935%" y="2527.50"></text></g><g><title>[libc.so.6] (1,328,763 samples, 0.56%)</title><rect x="80.6435%" y="2501" width="0.5566%" height="15" fill="rgb(227,192,1)" fg:x="192523260" fg:w="1328763"/><text x="80.8935%" y="2511.50"></text></g><g><title>[libc.so.6] (1,328,763 samples, 0.56%)</title><rect x="80.6435%" y="2485" width="0.5566%" height="15" fill="rgb(237,180,29)" fg:x="192523260" fg:w="1328763"/><text x="80.8935%" y="2495.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (149,251,177 samples, 62.52%)</title><rect x="19.2179%" y="2837" width="62.5179%" height="15" fill="rgb(230,197,35)" fg:x="45879495" fg:w="149251177"/><text x="19.4679%" y="2847.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,278,649 samples, 0.54%)</title><rect x="81.2001%" y="2821" width="0.5356%" height="15" fill="rgb(246,193,31)" fg:x="193852023" fg:w="1278649"/><text x="81.4501%" y="2831.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,278,649 samples, 0.54%)</title><rect x="81.2001%" y="2805" width="0.5356%" height="15" fill="rgb(241,36,4)" fg:x="193852023" fg:w="1278649"/><text x="81.4501%" y="2815.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,278,649 samples, 0.54%)</title><rect x="81.2001%" y="2789" width="0.5356%" height="15" fill="rgb(241,130,17)" fg:x="193852023" fg:w="1278649"/><text x="81.4501%" y="2799.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,278,649 samples, 0.54%)</title><rect x="81.2001%" y="2773" width="0.5356%" height="15" fill="rgb(206,137,32)" fg:x="193852023" fg:w="1278649"/><text x="81.4501%" y="2783.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,278,649 samples, 0.54%)</title><rect x="81.2001%" y="2757" width="0.5356%" height="15" fill="rgb(237,228,51)" fg:x="193852023" fg:w="1278649"/><text x="81.4501%" y="2767.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,278,649 samples, 0.54%)</title><rect x="81.2001%" y="2741" width="0.5356%" height="15" fill="rgb(243,6,42)" fg:x="193852023" fg:w="1278649"/><text x="81.4501%" y="2751.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,278,649 samples, 0.54%)</title><rect x="81.2001%" y="2725" width="0.5356%" height="15" fill="rgb(251,74,28)" fg:x="193852023" fg:w="1278649"/><text x="81.4501%" y="2735.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,278,649 samples, 0.54%)</title><rect x="81.2001%" y="2709" width="0.5356%" height="15" fill="rgb(218,20,49)" fg:x="193852023" fg:w="1278649"/><text x="81.4501%" y="2719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,278,649 samples, 0.54%)</title><rect x="81.2001%" y="2693" width="0.5356%" height="15" fill="rgb(238,28,14)" fg:x="193852023" fg:w="1278649"/><text x="81.4501%" y="2703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,278,649 samples, 0.54%)</title><rect x="81.2001%" y="2677" width="0.5356%" height="15" fill="rgb(229,40,46)" fg:x="193852023" fg:w="1278649"/><text x="81.4501%" y="2687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,040,392 samples, 0.44%)</title><rect x="81.7357%" y="2741" width="0.4358%" height="15" fill="rgb(244,195,20)" fg:x="195130672" fg:w="1040392"/><text x="81.9857%" y="2751.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1,040,392 samples, 0.44%)</title><rect x="81.7357%" y="2725" width="0.4358%" height="15" fill="rgb(253,56,35)" fg:x="195130672" fg:w="1040392"/><text x="81.9857%" y="2735.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1,040,392 samples, 0.44%)</title><rect x="81.7357%" y="2709" width="0.4358%" height="15" fill="rgb(210,149,44)" fg:x="195130672" fg:w="1040392"/><text x="81.9857%" y="2719.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,040,392 samples, 0.44%)</title><rect x="81.7357%" y="2693" width="0.4358%" height="15" fill="rgb(240,135,12)" fg:x="195130672" fg:w="1040392"/><text x="81.9857%" y="2703.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,040,392 samples, 0.44%)</title><rect x="81.7357%" y="2677" width="0.4358%" height="15" fill="rgb(251,24,50)" fg:x="195130672" fg:w="1040392"/><text x="81.9857%" y="2687.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,040,392 samples, 0.44%)</title><rect x="81.7357%" y="2661" width="0.4358%" height="15" fill="rgb(243,200,47)" fg:x="195130672" fg:w="1040392"/><text x="81.9857%" y="2671.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,040,392 samples, 0.44%)</title><rect x="81.7357%" y="2645" width="0.4358%" height="15" fill="rgb(224,166,26)" fg:x="195130672" fg:w="1040392"/><text x="81.9857%" y="2655.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,040,392 samples, 0.44%)</title><rect x="81.7357%" y="2629" width="0.4358%" height="15" fill="rgb(233,0,47)" fg:x="195130672" fg:w="1040392"/><text x="81.9857%" y="2639.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,040,392 samples, 0.44%)</title><rect x="81.7357%" y="2613" width="0.4358%" height="15" fill="rgb(253,80,5)" fg:x="195130672" fg:w="1040392"/><text x="81.9857%" y="2623.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,040,392 samples, 0.44%)</title><rect x="81.7357%" y="2597" width="0.4358%" height="15" fill="rgb(214,133,25)" fg:x="195130672" fg:w="1040392"/><text x="81.9857%" y="2607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,040,392 samples, 0.44%)</title><rect x="81.7357%" y="2581" width="0.4358%" height="15" fill="rgb(209,27,14)" fg:x="195130672" fg:w="1040392"/><text x="81.9857%" y="2591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,035,501 samples, 0.43%)</title><rect x="82.1715%" y="2597" width="0.4337%" height="15" fill="rgb(219,102,51)" fg:x="196171064" fg:w="1035501"/><text x="82.4215%" y="2607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (1,035,501 samples, 0.43%)</title><rect x="82.1715%" y="2581" width="0.4337%" height="15" fill="rgb(237,18,16)" fg:x="196171064" fg:w="1035501"/><text x="82.4215%" y="2591.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1,035,501 samples, 0.43%)</title><rect x="82.1715%" y="2565" width="0.4337%" height="15" fill="rgb(241,85,17)" fg:x="196171064" fg:w="1035501"/><text x="82.4215%" y="2575.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (1,035,501 samples, 0.43%)</title><rect x="82.1715%" y="2549" width="0.4337%" height="15" fill="rgb(236,90,42)" fg:x="196171064" fg:w="1035501"/><text x="82.4215%" y="2559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1,035,501 samples, 0.43%)</title><rect x="82.1715%" y="2533" width="0.4337%" height="15" fill="rgb(249,57,21)" fg:x="196171064" fg:w="1035501"/><text x="82.4215%" y="2543.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1,035,501 samples, 0.43%)</title><rect x="82.1715%" y="2517" width="0.4337%" height="15" fill="rgb(243,12,36)" fg:x="196171064" fg:w="1035501"/><text x="82.4215%" y="2527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,027,016 samples, 0.43%)</title><rect x="82.6053%" y="2533" width="0.4302%" height="15" fill="rgb(253,128,47)" fg:x="197206565" fg:w="1027016"/><text x="82.8553%" y="2543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,027,016 samples, 0.43%)</title><rect x="82.6053%" y="2517" width="0.4302%" height="15" fill="rgb(207,33,20)" fg:x="197206565" fg:w="1027016"/><text x="82.8553%" y="2527.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1,027,016 samples, 0.43%)</title><rect x="82.6053%" y="2501" width="0.4302%" height="15" fill="rgb(233,215,35)" fg:x="197206565" fg:w="1027016"/><text x="82.8553%" y="2511.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,318,563 samples, 0.55%)</title><rect x="83.4127%" y="2293" width="0.5523%" height="15" fill="rgb(249,188,52)" fg:x="199134184" fg:w="1318563"/><text x="83.6627%" y="2303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2,765,838 samples, 1.16%)</title><rect x="83.0355%" y="2325" width="1.1585%" height="15" fill="rgb(225,12,32)" fg:x="198233581" fg:w="2765838"/><text x="83.2855%" y="2335.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (2,765,838 samples, 1.16%)</title><rect x="83.0355%" y="2309" width="1.1585%" height="15" fill="rgb(247,98,14)" fg:x="198233581" fg:w="2765838"/><text x="83.2855%" y="2319.50"></text></g><g><title>serde_json::read::parse_escape (546,672 samples, 0.23%)</title><rect x="83.9650%" y="2293" width="0.2290%" height="15" fill="rgb(247,219,48)" fg:x="200452747" fg:w="546672"/><text x="84.2150%" y="2303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (546,672 samples, 0.23%)</title><rect x="83.9650%" y="2277" width="0.2290%" height="15" fill="rgb(253,60,48)" fg:x="200452747" fg:w="546672"/><text x="84.2150%" y="2287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (880,145 samples, 0.37%)</title><rect x="84.8748%" y="1973" width="0.3687%" height="15" fill="rgb(245,15,52)" fg:x="202624724" fg:w="880145"/><text x="85.1248%" y="1983.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (880,145 samples, 0.37%)</title><rect x="84.8748%" y="1957" width="0.3687%" height="15" fill="rgb(220,133,28)" fg:x="202624724" fg:w="880145"/><text x="85.1248%" y="1967.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (880,145 samples, 0.37%)</title><rect x="84.8748%" y="1941" width="0.3687%" height="15" fill="rgb(217,180,4)" fg:x="202624724" fg:w="880145"/><text x="85.1248%" y="1951.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (880,145 samples, 0.37%)</title><rect x="84.8748%" y="1925" width="0.3687%" height="15" fill="rgb(251,24,1)" fg:x="202624724" fg:w="880145"/><text x="85.1248%" y="1935.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (880,145 samples, 0.37%)</title><rect x="84.8748%" y="1909" width="0.3687%" height="15" fill="rgb(212,185,49)" fg:x="202624724" fg:w="880145"/><text x="85.1248%" y="1919.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (880,145 samples, 0.37%)</title><rect x="84.8748%" y="1893" width="0.3687%" height="15" fill="rgb(215,175,22)" fg:x="202624724" fg:w="880145"/><text x="85.1248%" y="1903.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (880,145 samples, 0.37%)</title><rect x="84.8748%" y="1877" width="0.3687%" height="15" fill="rgb(250,205,14)" fg:x="202624724" fg:w="880145"/><text x="85.1248%" y="1887.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (880,145 samples, 0.37%)</title><rect x="84.8748%" y="1861" width="0.3687%" height="15" fill="rgb(225,211,22)" fg:x="202624724" fg:w="880145"/><text x="85.1248%" y="1871.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (444,452 samples, 0.19%)</title><rect x="85.2435%" y="1909" width="0.1862%" height="15" fill="rgb(251,179,42)" fg:x="203504869" fg:w="444452"/><text x="85.4935%" y="1919.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (444,452 samples, 0.19%)</title><rect x="85.2435%" y="1893" width="0.1862%" height="15" fill="rgb(208,216,51)" fg:x="203504869" fg:w="444452"/><text x="85.4935%" y="1903.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (444,452 samples, 0.19%)</title><rect x="85.2435%" y="1877" width="0.1862%" height="15" fill="rgb(235,36,11)" fg:x="203504869" fg:w="444452"/><text x="85.4935%" y="1887.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (444,452 samples, 0.19%)</title><rect x="85.2435%" y="1861" width="0.1862%" height="15" fill="rgb(213,189,28)" fg:x="203504869" fg:w="444452"/><text x="85.4935%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (444,452 samples, 0.19%)</title><rect x="85.2435%" y="1845" width="0.1862%" height="15" fill="rgb(227,203,42)" fg:x="203504869" fg:w="444452"/><text x="85.4935%" y="1855.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1701" width="0.3391%" height="15" fill="rgb(244,72,36)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1711.50"></text></g><g><title>serde::de::MapAccess::next_value (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1685" width="0.3391%" height="15" fill="rgb(213,53,17)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1695.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1669" width="0.3391%" height="15" fill="rgb(207,167,3)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1679.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1653" width="0.3391%" height="15" fill="rgb(216,98,30)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1663.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1637" width="0.3391%" height="15" fill="rgb(236,123,15)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1647.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1621" width="0.3391%" height="15" fill="rgb(248,81,50)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1631.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1605" width="0.3391%" height="15" fill="rgb(214,120,4)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1615.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1589" width="0.3391%" height="15" fill="rgb(208,179,34)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1599.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1573" width="0.3391%" height="15" fill="rgb(227,140,7)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1583.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1557" width="0.3391%" height="15" fill="rgb(214,22,6)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1567.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1541" width="0.3391%" height="15" fill="rgb(207,137,27)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1551.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1525" width="0.3391%" height="15" fill="rgb(210,8,46)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1535.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1509" width="0.3391%" height="15" fill="rgb(240,16,54)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1519.50"></text></g><g><title>alloc::slice::hack::to_vec (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1493" width="0.3391%" height="15" fill="rgb(211,209,29)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1477" width="0.3391%" height="15" fill="rgb(226,228,24)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1461" width="0.3391%" height="15" fill="rgb(222,84,9)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1445" width="0.3391%" height="15" fill="rgb(234,203,30)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1429" width="0.3391%" height="15" fill="rgb(238,109,14)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1413" width="0.3391%" height="15" fill="rgb(233,206,34)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1397" width="0.3391%" height="15" fill="rgb(220,167,47)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1381" width="0.3391%" height="15" fill="rgb(238,105,10)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1365" width="0.3391%" height="15" fill="rgb(213,227,17)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1375.50"></text></g><g><title>malloc (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1349" width="0.3391%" height="15" fill="rgb(217,132,38)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1359.50"></text></g><g><title>[libc.so.6] (809,638 samples, 0.34%)</title><rect x="85.4297%" y="1333" width="0.3391%" height="15" fill="rgb(242,146,4)" fg:x="203949321" fg:w="809638"/><text x="85.6797%" y="1343.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (990,841 samples, 0.42%)</title><rect x="85.7688%" y="1285" width="0.4150%" height="15" fill="rgb(212,61,9)" fg:x="204758959" fg:w="990841"/><text x="86.0188%" y="1295.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (990,841 samples, 0.42%)</title><rect x="85.7688%" y="1269" width="0.4150%" height="15" fill="rgb(247,126,22)" fg:x="204758959" fg:w="990841"/><text x="86.0188%" y="1279.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (990,841 samples, 0.42%)</title><rect x="85.7688%" y="1253" width="0.4150%" height="15" fill="rgb(220,196,2)" fg:x="204758959" fg:w="990841"/><text x="86.0188%" y="1263.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (990,841 samples, 0.42%)</title><rect x="85.7688%" y="1237" width="0.4150%" height="15" fill="rgb(208,46,4)" fg:x="204758959" fg:w="990841"/><text x="86.0188%" y="1247.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (990,841 samples, 0.42%)</title><rect x="85.7688%" y="1221" width="0.4150%" height="15" fill="rgb(252,104,46)" fg:x="204758959" fg:w="990841"/><text x="86.0188%" y="1231.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (990,841 samples, 0.42%)</title><rect x="85.7688%" y="1205" width="0.4150%" height="15" fill="rgb(237,152,48)" fg:x="204758959" fg:w="990841"/><text x="86.0188%" y="1215.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (990,841 samples, 0.42%)</title><rect x="85.7688%" y="1189" width="0.4150%" height="15" fill="rgb(221,59,37)" fg:x="204758959" fg:w="990841"/><text x="86.0188%" y="1199.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (990,841 samples, 0.42%)</title><rect x="85.7688%" y="1173" width="0.4150%" height="15" fill="rgb(209,202,51)" fg:x="204758959" fg:w="990841"/><text x="86.0188%" y="1183.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (990,841 samples, 0.42%)</title><rect x="85.7688%" y="1157" width="0.4150%" height="15" fill="rgb(228,81,30)" fg:x="204758959" fg:w="990841"/><text x="86.0188%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (990,841 samples, 0.42%)</title><rect x="85.7688%" y="1141" width="0.4150%" height="15" fill="rgb(227,42,39)" fg:x="204758959" fg:w="990841"/><text x="86.0188%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (990,841 samples, 0.42%)</title><rect x="85.7688%" y="1125" width="0.4150%" height="15" fill="rgb(221,26,2)" fg:x="204758959" fg:w="990841"/><text x="86.0188%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (990,841 samples, 0.42%)</title><rect x="85.7688%" y="1109" width="0.4150%" height="15" fill="rgb(254,61,31)" fg:x="204758959" fg:w="990841"/><text x="86.0188%" y="1119.50"></text></g><g><title>malloc (990,841 samples, 0.42%)</title><rect x="85.7688%" y="1093" width="0.4150%" height="15" fill="rgb(222,173,38)" fg:x="204758959" fg:w="990841"/><text x="86.0188%" y="1103.50"></text></g><g><title>[libc.so.6] (990,841 samples, 0.42%)</title><rect x="85.7688%" y="1077" width="0.4150%" height="15" fill="rgb(218,50,12)" fg:x="204758959" fg:w="990841"/><text x="86.0188%" y="1087.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1285" width="0.4264%" height="15" fill="rgb(223,88,40)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1295.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1269" width="0.4264%" height="15" fill="rgb(237,54,19)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1279.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1253" width="0.4264%" height="15" fill="rgb(251,129,25)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1237" width="0.4264%" height="15" fill="rgb(238,97,19)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1247.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1221" width="0.4264%" height="15" fill="rgb(240,169,18)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1231.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1205" width="0.4264%" height="15" fill="rgb(230,187,49)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1215.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1189" width="0.4264%" height="15" fill="rgb(209,44,26)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1199.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1173" width="0.4264%" height="15" fill="rgb(244,0,6)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1183.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1157" width="0.4264%" height="15" fill="rgb(248,18,21)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1167.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1141" width="0.4264%" height="15" fill="rgb(245,180,19)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1151.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1125" width="0.4264%" height="15" fill="rgb(252,118,36)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1135.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1109" width="0.4264%" height="15" fill="rgb(210,224,19)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1119.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1093" width="0.4264%" height="15" fill="rgb(218,30,24)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1103.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1077" width="0.4264%" height="15" fill="rgb(219,75,50)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1087.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1061" width="0.4264%" height="15" fill="rgb(234,72,50)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1071.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1045" width="0.4264%" height="15" fill="rgb(219,100,48)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1055.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1029" width="0.4264%" height="15" fill="rgb(253,5,41)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1039.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="1013" width="0.4264%" height="15" fill="rgb(247,181,11)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1023.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="997" width="0.4264%" height="15" fill="rgb(222,223,25)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="1007.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="981" width="0.4264%" height="15" fill="rgb(214,198,28)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="991.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="965" width="0.4264%" height="15" fill="rgb(230,46,43)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="975.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="949" width="0.4264%" height="15" fill="rgb(233,65,53)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="959.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="933" width="0.4264%" height="15" fill="rgb(221,121,27)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="943.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="917" width="0.4264%" height="15" fill="rgb(247,70,47)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="927.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="901" width="0.4264%" height="15" fill="rgb(228,85,35)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="911.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="885" width="0.4264%" height="15" fill="rgb(209,50,18)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="895.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="869" width="0.4264%" height="15" fill="rgb(250,19,35)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="879.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="853" width="0.4264%" height="15" fill="rgb(253,107,29)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="863.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="837" width="0.4264%" height="15" fill="rgb(252,179,29)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="847.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="821" width="0.4264%" height="15" fill="rgb(238,194,6)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="831.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="805" width="0.4264%" height="15" fill="rgb(238,164,29)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="815.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="789" width="0.4264%" height="15" fill="rgb(224,25,9)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="799.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="773" width="0.4264%" height="15" fill="rgb(244,153,23)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="783.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="757" width="0.4264%" height="15" fill="rgb(212,203,14)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="767.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="741" width="0.4264%" height="15" fill="rgb(220,164,20)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="751.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="725" width="0.4264%" height="15" fill="rgb(222,203,48)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="709" width="0.4264%" height="15" fill="rgb(215,159,22)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="693" width="0.4264%" height="15" fill="rgb(216,183,47)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="677" width="0.4264%" height="15" fill="rgb(229,195,25)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="661" width="0.4264%" height="15" fill="rgb(224,132,51)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="671.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="645" width="0.4264%" height="15" fill="rgb(240,63,7)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="655.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="629" width="0.4264%" height="15" fill="rgb(249,182,41)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="613" width="0.4264%" height="15" fill="rgb(243,47,26)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="597" width="0.4264%" height="15" fill="rgb(233,48,2)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="581" width="0.4264%" height="15" fill="rgb(244,165,34)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="565" width="0.4264%" height="15" fill="rgb(207,89,7)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="549" width="0.4264%" height="15" fill="rgb(244,117,36)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="533" width="0.4264%" height="15" fill="rgb(226,144,34)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="517" width="0.4264%" height="15" fill="rgb(213,23,19)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="501" width="0.4264%" height="15" fill="rgb(217,75,12)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="511.50"></text></g><g><title>malloc (1,017,982 samples, 0.43%)</title><rect x="86.1838%" y="485" width="0.4264%" height="15" fill="rgb(224,159,17)" fg:x="205749800" fg:w="1017982"/><text x="86.4338%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,749,785 samples, 1.57%)</title><rect x="85.4297%" y="1909" width="1.5707%" height="15" fill="rgb(217,118,1)" fg:x="203949321" fg:w="3749785"/><text x="85.6797%" y="1919.50"></text></g><g><title>serde::de::SeqAccess::next_element (3,749,785 samples, 1.57%)</title><rect x="85.4297%" y="1893" width="1.5707%" height="15" fill="rgb(232,180,48)" fg:x="203949321" fg:w="3749785"/><text x="85.6797%" y="1903.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3,749,785 samples, 1.57%)</title><rect x="85.4297%" y="1877" width="1.5707%" height="15" fill="rgb(230,27,33)" fg:x="203949321" fg:w="3749785"/><text x="85.6797%" y="1887.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,749,785 samples, 1.57%)</title><rect x="85.4297%" y="1861" width="1.5707%" height="15" fill="rgb(205,31,21)" fg:x="203949321" fg:w="3749785"/><text x="85.6797%" y="1871.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,749,785 samples, 1.57%)</title><rect x="85.4297%" y="1845" width="1.5707%" height="15" fill="rgb(253,59,4)" fg:x="203949321" fg:w="3749785"/><text x="85.6797%" y="1855.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,749,785 samples, 1.57%)</title><rect x="85.4297%" y="1829" width="1.5707%" height="15" fill="rgb(224,201,9)" fg:x="203949321" fg:w="3749785"/><text x="85.6797%" y="1839.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,749,785 samples, 1.57%)</title><rect x="85.4297%" y="1813" width="1.5707%" height="15" fill="rgb(229,206,30)" fg:x="203949321" fg:w="3749785"/><text x="85.6797%" y="1823.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,749,785 samples, 1.57%)</title><rect x="85.4297%" y="1797" width="1.5707%" height="15" fill="rgb(212,67,47)" fg:x="203949321" fg:w="3749785"/><text x="85.6797%" y="1807.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,749,785 samples, 1.57%)</title><rect x="85.4297%" y="1781" width="1.5707%" height="15" fill="rgb(211,96,50)" fg:x="203949321" fg:w="3749785"/><text x="85.6797%" y="1791.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,749,785 samples, 1.57%)</title><rect x="85.4297%" y="1765" width="1.5707%" height="15" fill="rgb(252,114,18)" fg:x="203949321" fg:w="3749785"/><text x="85.6797%" y="1775.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,749,785 samples, 1.57%)</title><rect x="85.4297%" y="1749" width="1.5707%" height="15" fill="rgb(223,58,37)" fg:x="203949321" fg:w="3749785"/><text x="85.6797%" y="1759.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,749,785 samples, 1.57%)</title><rect x="85.4297%" y="1733" width="1.5707%" height="15" fill="rgb(237,70,4)" fg:x="203949321" fg:w="3749785"/><text x="85.6797%" y="1743.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,749,785 samples, 1.57%)</title><rect x="85.4297%" y="1717" width="1.5707%" height="15" fill="rgb(244,85,46)" fg:x="203949321" fg:w="3749785"/><text x="85.6797%" y="1727.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1701" width="1.2316%" height="15" fill="rgb(223,39,52)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1711.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1685" width="1.2316%" height="15" fill="rgb(218,200,14)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1695.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1669" width="1.2316%" height="15" fill="rgb(208,171,16)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1679.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1653" width="1.2316%" height="15" fill="rgb(234,200,18)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1663.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1637" width="1.2316%" height="15" fill="rgb(228,45,11)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1647.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1621" width="1.2316%" height="15" fill="rgb(237,182,11)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1631.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1605" width="1.2316%" height="15" fill="rgb(241,175,49)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1615.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1589" width="1.2316%" height="15" fill="rgb(247,38,35)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1599.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1573" width="1.2316%" height="15" fill="rgb(228,39,49)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1583.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1557" width="1.2316%" height="15" fill="rgb(226,101,26)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1567.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1541" width="1.2316%" height="15" fill="rgb(206,141,19)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1551.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1525" width="1.2316%" height="15" fill="rgb(211,200,13)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1535.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1509" width="1.2316%" height="15" fill="rgb(241,121,6)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1519.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1493" width="1.2316%" height="15" fill="rgb(234,221,29)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1503.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1477" width="1.2316%" height="15" fill="rgb(229,136,5)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1487.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1461" width="1.2316%" height="15" fill="rgb(238,36,11)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1471.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1445" width="1.2316%" height="15" fill="rgb(251,55,41)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1455.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1429" width="1.2316%" height="15" fill="rgb(242,34,40)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1439.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1413" width="1.2316%" height="15" fill="rgb(215,42,17)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1423.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1397" width="1.2316%" height="15" fill="rgb(207,44,46)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1407.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1381" width="1.2316%" height="15" fill="rgb(211,206,28)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1391.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1365" width="1.2316%" height="15" fill="rgb(237,167,16)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1375.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1349" width="1.2316%" height="15" fill="rgb(233,66,6)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1359.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1333" width="1.2316%" height="15" fill="rgb(246,123,29)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1343.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1317" width="1.2316%" height="15" fill="rgb(209,62,40)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1327.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,940,147 samples, 1.23%)</title><rect x="85.7688%" y="1301" width="1.2316%" height="15" fill="rgb(218,4,25)" fg:x="204758959" fg:w="2940147"/><text x="86.0188%" y="1311.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1285" width="0.3901%" height="15" fill="rgb(253,91,49)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1295.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1269" width="0.3901%" height="15" fill="rgb(228,155,29)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1279.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1253" width="0.3901%" height="15" fill="rgb(243,57,37)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1263.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1237" width="0.3901%" height="15" fill="rgb(244,167,17)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1221" width="0.3901%" height="15" fill="rgb(207,181,38)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1205" width="0.3901%" height="15" fill="rgb(211,8,23)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1189" width="0.3901%" height="15" fill="rgb(235,11,44)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1173" width="0.3901%" height="15" fill="rgb(248,18,52)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1157" width="0.3901%" height="15" fill="rgb(208,4,7)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1141" width="0.3901%" height="15" fill="rgb(240,17,39)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1125" width="0.3901%" height="15" fill="rgb(207,170,3)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1109" width="0.3901%" height="15" fill="rgb(236,100,52)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1093" width="0.3901%" height="15" fill="rgb(246,78,51)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1077" width="0.3901%" height="15" fill="rgb(211,17,15)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1061" width="0.3901%" height="15" fill="rgb(209,59,46)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1045" width="0.3901%" height="15" fill="rgb(210,92,25)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1055.50"></text></g><g><title>malloc (931,324 samples, 0.39%)</title><rect x="86.6103%" y="1029" width="0.3901%" height="15" fill="rgb(238,174,52)" fg:x="206767782" fg:w="931324"/><text x="86.8603%" y="1039.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1909" width="0.4069%" height="15" fill="rgb(230,73,7)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1919.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1893" width="0.4069%" height="15" fill="rgb(243,124,40)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1903.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1877" width="0.4069%" height="15" fill="rgb(244,170,11)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1887.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1861" width="0.4069%" height="15" fill="rgb(207,114,54)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1871.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1845" width="0.4069%" height="15" fill="rgb(205,42,20)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1855.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1829" width="0.4069%" height="15" fill="rgb(230,30,28)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1813" width="0.4069%" height="15" fill="rgb(205,73,54)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1823.50"></text></g><g><title>alloc::slice::hack::to_vec (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1797" width="0.4069%" height="15" fill="rgb(254,227,23)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1781" width="0.4069%" height="15" fill="rgb(228,202,34)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1765" width="0.4069%" height="15" fill="rgb(222,225,37)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1749" width="0.4069%" height="15" fill="rgb(221,14,54)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1733" width="0.4069%" height="15" fill="rgb(254,102,2)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1717" width="0.4069%" height="15" fill="rgb(232,104,17)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1701" width="0.4069%" height="15" fill="rgb(250,220,14)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1685" width="0.4069%" height="15" fill="rgb(241,158,9)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1669" width="0.4069%" height="15" fill="rgb(246,9,43)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1679.50"></text></g><g><title>__rdl_alloc (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1653" width="0.4069%" height="15" fill="rgb(206,73,33)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1663.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (971,340 samples, 0.41%)</title><rect x="87.0004%" y="1637" width="0.4069%" height="15" fill="rgb(222,79,8)" fg:x="207699106" fg:w="971340"/><text x="87.2504%" y="1647.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,000,366 samples, 2.93%)</title><rect x="84.8748%" y="2005" width="2.9323%" height="15" fill="rgb(234,8,54)" fg:x="202624724" fg:w="7000366"/><text x="85.1248%" y="2015.50">se..</text></g><g><title>serde::de::MapAccess::next_entry_seed (7,000,366 samples, 2.93%)</title><rect x="84.8748%" y="1989" width="2.9323%" height="15" fill="rgb(209,134,38)" fg:x="202624724" fg:w="7000366"/><text x="85.1248%" y="1999.50">se..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,120,221 samples, 2.56%)</title><rect x="85.2435%" y="1973" width="2.5636%" height="15" fill="rgb(230,127,29)" fg:x="203504869" fg:w="6120221"/><text x="85.4935%" y="1983.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,120,221 samples, 2.56%)</title><rect x="85.2435%" y="1957" width="2.5636%" height="15" fill="rgb(242,44,41)" fg:x="203504869" fg:w="6120221"/><text x="85.4935%" y="1967.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,120,221 samples, 2.56%)</title><rect x="85.2435%" y="1941" width="2.5636%" height="15" fill="rgb(222,56,43)" fg:x="203504869" fg:w="6120221"/><text x="85.4935%" y="1951.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,120,221 samples, 2.56%)</title><rect x="85.2435%" y="1925" width="2.5636%" height="15" fill="rgb(238,39,47)" fg:x="203504869" fg:w="6120221"/><text x="85.4935%" y="1935.50">&lt;&amp;..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (954,644 samples, 0.40%)</title><rect x="87.4072%" y="1909" width="0.3999%" height="15" fill="rgb(226,79,43)" fg:x="208670446" fg:w="954644"/><text x="87.6572%" y="1919.50"></text></g><g><title>serde::de::MapAccess::next_value (727,992 samples, 0.30%)</title><rect x="87.8071%" y="2005" width="0.3049%" height="15" fill="rgb(242,105,53)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="2015.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1989" width="0.3049%" height="15" fill="rgb(251,132,46)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1999.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1973" width="0.3049%" height="15" fill="rgb(231,77,14)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1983.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1957" width="0.3049%" height="15" fill="rgb(240,135,9)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1967.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1941" width="0.3049%" height="15" fill="rgb(248,109,14)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1951.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1925" width="0.3049%" height="15" fill="rgb(227,146,52)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1935.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1909" width="0.3049%" height="15" fill="rgb(232,54,3)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1919.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1893" width="0.3049%" height="15" fill="rgb(229,201,43)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1903.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1877" width="0.3049%" height="15" fill="rgb(252,161,33)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1887.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1861" width="0.3049%" height="15" fill="rgb(226,146,40)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1871.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1845" width="0.3049%" height="15" fill="rgb(219,47,25)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1855.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1829" width="0.3049%" height="15" fill="rgb(250,135,13)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1839.50"></text></g><g><title>alloc::slice::hack::to_vec (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1813" width="0.3049%" height="15" fill="rgb(219,229,18)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1823.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1797" width="0.3049%" height="15" fill="rgb(217,152,27)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1781" width="0.3049%" height="15" fill="rgb(225,71,47)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1765" width="0.3049%" height="15" fill="rgb(220,139,14)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1749" width="0.3049%" height="15" fill="rgb(247,54,32)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1733" width="0.3049%" height="15" fill="rgb(252,131,39)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1717" width="0.3049%" height="15" fill="rgb(210,108,39)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1701" width="0.3049%" height="15" fill="rgb(205,23,29)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1685" width="0.3049%" height="15" fill="rgb(246,139,46)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1695.50"></text></g><g><title>malloc (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1669" width="0.3049%" height="15" fill="rgb(250,81,26)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1679.50"></text></g><g><title>[libc.so.6] (727,992 samples, 0.30%)</title><rect x="87.8071%" y="1653" width="0.3049%" height="15" fill="rgb(214,104,7)" fg:x="209625090" fg:w="727992"/><text x="88.0571%" y="1663.50"></text></g><g><title>serde::de::MapAccess::next_entry (13,952,214 samples, 5.84%)</title><rect x="83.0355%" y="2421" width="5.8443%" height="15" fill="rgb(233,189,8)" fg:x="198233581" fg:w="13952214"/><text x="83.2855%" y="2431.50">serde::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (13,952,214 samples, 5.84%)</title><rect x="83.0355%" y="2405" width="5.8443%" height="15" fill="rgb(228,141,17)" fg:x="198233581" fg:w="13952214"/><text x="83.2855%" y="2415.50">serde::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (13,952,214 samples, 5.84%)</title><rect x="83.0355%" y="2389" width="5.8443%" height="15" fill="rgb(247,157,1)" fg:x="198233581" fg:w="13952214"/><text x="83.2855%" y="2399.50">&lt;serde_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13,952,214 samples, 5.84%)</title><rect x="83.0355%" y="2373" width="5.8443%" height="15" fill="rgb(249,225,5)" fg:x="198233581" fg:w="13952214"/><text x="83.2855%" y="2383.50">&lt;core::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13,952,214 samples, 5.84%)</title><rect x="83.0355%" y="2357" width="5.8443%" height="15" fill="rgb(242,55,13)" fg:x="198233581" fg:w="13952214"/><text x="83.2855%" y="2367.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13,952,214 samples, 5.84%)</title><rect x="83.0355%" y="2341" width="5.8443%" height="15" fill="rgb(230,49,50)" fg:x="198233581" fg:w="13952214"/><text x="83.2855%" y="2351.50">&lt;&amp;mut s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,186,376 samples, 4.69%)</title><rect x="84.1940%" y="2325" width="4.6857%" height="15" fill="rgb(241,111,38)" fg:x="200999419" fg:w="11186376"/><text x="84.4440%" y="2335.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (11,186,376 samples, 4.69%)</title><rect x="84.1940%" y="2309" width="4.6857%" height="15" fill="rgb(252,155,4)" fg:x="200999419" fg:w="11186376"/><text x="84.4440%" y="2319.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11,186,376 samples, 4.69%)</title><rect x="84.1940%" y="2293" width="4.6857%" height="15" fill="rgb(212,69,32)" fg:x="200999419" fg:w="11186376"/><text x="84.4440%" y="2303.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,186,376 samples, 4.69%)</title><rect x="84.1940%" y="2277" width="4.6857%" height="15" fill="rgb(243,107,47)" fg:x="200999419" fg:w="11186376"/><text x="84.4440%" y="2287.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,186,376 samples, 4.69%)</title><rect x="84.1940%" y="2261" width="4.6857%" height="15" fill="rgb(247,130,12)" fg:x="200999419" fg:w="11186376"/><text x="84.4440%" y="2271.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,186,376 samples, 4.69%)</title><rect x="84.1940%" y="2245" width="4.6857%" height="15" fill="rgb(233,74,16)" fg:x="200999419" fg:w="11186376"/><text x="84.4440%" y="2255.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,288,780 samples, 4.31%)</title><rect x="84.5700%" y="2229" width="4.3097%" height="15" fill="rgb(208,58,18)" fg:x="201897015" fg:w="10288780"/><text x="84.8200%" y="2239.50">&lt;serd..</text></g><g><title>serde::de::MapAccess::next_entry (10,288,780 samples, 4.31%)</title><rect x="84.5700%" y="2213" width="4.3097%" height="15" fill="rgb(242,225,1)" fg:x="201897015" fg:w="10288780"/><text x="84.8200%" y="2223.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (10,288,780 samples, 4.31%)</title><rect x="84.5700%" y="2197" width="4.3097%" height="15" fill="rgb(249,39,40)" fg:x="201897015" fg:w="10288780"/><text x="84.8200%" y="2207.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10,288,780 samples, 4.31%)</title><rect x="84.5700%" y="2181" width="4.3097%" height="15" fill="rgb(207,72,44)" fg:x="201897015" fg:w="10288780"/><text x="84.8200%" y="2191.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,288,780 samples, 4.31%)</title><rect x="84.5700%" y="2165" width="4.3097%" height="15" fill="rgb(215,193,12)" fg:x="201897015" fg:w="10288780"/><text x="84.8200%" y="2175.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,288,780 samples, 4.31%)</title><rect x="84.5700%" y="2149" width="4.3097%" height="15" fill="rgb(248,41,39)" fg:x="201897015" fg:w="10288780"/><text x="84.8200%" y="2159.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,288,780 samples, 4.31%)</title><rect x="84.5700%" y="2133" width="4.3097%" height="15" fill="rgb(253,85,4)" fg:x="201897015" fg:w="10288780"/><text x="84.8200%" y="2143.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (9,561,071 samples, 4.00%)</title><rect x="84.8748%" y="2117" width="4.0049%" height="15" fill="rgb(243,70,31)" fg:x="202624724" fg:w="9561071"/><text x="85.1248%" y="2127.50">&lt;ser..</text></g><g><title>serde::de::SeqAccess::next_element (9,561,071 samples, 4.00%)</title><rect x="84.8748%" y="2101" width="4.0049%" height="15" fill="rgb(253,195,26)" fg:x="202624724" fg:w="9561071"/><text x="85.1248%" y="2111.50">serd..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,561,071 samples, 4.00%)</title><rect x="84.8748%" y="2085" width="4.0049%" height="15" fill="rgb(243,42,11)" fg:x="202624724" fg:w="9561071"/><text x="85.1248%" y="2095.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,561,071 samples, 4.00%)</title><rect x="84.8748%" y="2069" width="4.0049%" height="15" fill="rgb(239,66,17)" fg:x="202624724" fg:w="9561071"/><text x="85.1248%" y="2079.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,561,071 samples, 4.00%)</title><rect x="84.8748%" y="2053" width="4.0049%" height="15" fill="rgb(217,132,21)" fg:x="202624724" fg:w="9561071"/><text x="85.1248%" y="2063.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,561,071 samples, 4.00%)</title><rect x="84.8748%" y="2037" width="4.0049%" height="15" fill="rgb(252,202,21)" fg:x="202624724" fg:w="9561071"/><text x="85.1248%" y="2047.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,561,071 samples, 4.00%)</title><rect x="84.8748%" y="2021" width="4.0049%" height="15" fill="rgb(233,98,36)" fg:x="202624724" fg:w="9561071"/><text x="85.1248%" y="2031.50">&lt;ser..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,832,713 samples, 0.77%)</title><rect x="88.1121%" y="2005" width="0.7677%" height="15" fill="rgb(216,153,54)" fg:x="210353082" fg:w="1832713"/><text x="88.3621%" y="2015.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,832,713 samples, 0.77%)</title><rect x="88.1121%" y="1989" width="0.7677%" height="15" fill="rgb(250,99,7)" fg:x="210353082" fg:w="1832713"/><text x="88.3621%" y="1999.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,832,713 samples, 0.77%)</title><rect x="88.1121%" y="1973" width="0.7677%" height="15" fill="rgb(207,56,50)" fg:x="210353082" fg:w="1832713"/><text x="88.3621%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,832,713 samples, 0.77%)</title><rect x="88.1121%" y="1957" width="0.7677%" height="15" fill="rgb(244,61,34)" fg:x="210353082" fg:w="1832713"/><text x="88.3621%" y="1967.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (858,256 samples, 0.36%)</title><rect x="88.5202%" y="1941" width="0.3595%" height="15" fill="rgb(241,50,38)" fg:x="211327539" fg:w="858256"/><text x="88.7702%" y="1951.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (858,256 samples, 0.36%)</title><rect x="88.5202%" y="1925" width="0.3595%" height="15" fill="rgb(212,166,30)" fg:x="211327539" fg:w="858256"/><text x="88.7702%" y="1935.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (858,256 samples, 0.36%)</title><rect x="88.5202%" y="1909" width="0.3595%" height="15" fill="rgb(249,127,32)" fg:x="211327539" fg:w="858256"/><text x="88.7702%" y="1919.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (858,256 samples, 0.36%)</title><rect x="88.5202%" y="1893" width="0.3595%" height="15" fill="rgb(209,103,0)" fg:x="211327539" fg:w="858256"/><text x="88.7702%" y="1903.50"></text></g><g><title>core::intrinsics::copy (858,256 samples, 0.36%)</title><rect x="88.5202%" y="1877" width="0.3595%" height="15" fill="rgb(238,209,51)" fg:x="211327539" fg:w="858256"/><text x="88.7702%" y="1887.50"></text></g><g><title>[libc.so.6] (858,256 samples, 0.36%)</title><rect x="88.5202%" y="1861" width="0.3595%" height="15" fill="rgb(237,56,23)" fg:x="211327539" fg:w="858256"/><text x="88.7702%" y="1871.50"></text></g><g><title>serde::de::MapAccess::next_entry (17,084,386 samples, 7.16%)</title><rect x="82.1715%" y="2629" width="7.1563%" height="15" fill="rgb(215,153,46)" fg:x="196171064" fg:w="17084386"/><text x="82.4215%" y="2639.50">serde::de:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (17,084,386 samples, 7.16%)</title><rect x="82.1715%" y="2613" width="7.1563%" height="15" fill="rgb(224,49,31)" fg:x="196171064" fg:w="17084386"/><text x="82.4215%" y="2623.50">serde::de:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (16,048,885 samples, 6.72%)</title><rect x="82.6053%" y="2597" width="6.7225%" height="15" fill="rgb(250,18,42)" fg:x="197206565" fg:w="16048885"/><text x="82.8553%" y="2607.50">&lt;serde_js..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (16,048,885 samples, 6.72%)</title><rect x="82.6053%" y="2581" width="6.7225%" height="15" fill="rgb(215,176,39)" fg:x="197206565" fg:w="16048885"/><text x="82.8553%" y="2591.50">&lt;core::ma..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (16,048,885 samples, 6.72%)</title><rect x="82.6053%" y="2565" width="6.7225%" height="15" fill="rgb(223,77,29)" fg:x="197206565" fg:w="16048885"/><text x="82.8553%" y="2575.50">serde_jso..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16,048,885 samples, 6.72%)</title><rect x="82.6053%" y="2549" width="6.7225%" height="15" fill="rgb(234,94,52)" fg:x="197206565" fg:w="16048885"/><text x="82.8553%" y="2559.50">&lt;&amp;mut ser..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (15,021,869 samples, 6.29%)</title><rect x="83.0355%" y="2533" width="6.2923%" height="15" fill="rgb(220,154,50)" fg:x="198233581" fg:w="15021869"/><text x="83.2855%" y="2543.50">&lt;serde_j..</text></g><g><title>serde::de::SeqAccess::next_element (15,021,869 samples, 6.29%)</title><rect x="83.0355%" y="2517" width="6.2923%" height="15" fill="rgb(212,11,10)" fg:x="198233581" fg:w="15021869"/><text x="83.2855%" y="2527.50">serde::d..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (15,021,869 samples, 6.29%)</title><rect x="83.0355%" y="2501" width="6.2923%" height="15" fill="rgb(205,166,19)" fg:x="198233581" fg:w="15021869"/><text x="83.2855%" y="2511.50">&lt;serde_j..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15,021,869 samples, 6.29%)</title><rect x="83.0355%" y="2485" width="6.2923%" height="15" fill="rgb(244,198,16)" fg:x="198233581" fg:w="15021869"/><text x="83.2855%" y="2495.50">&lt;core::m..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,021,869 samples, 6.29%)</title><rect x="83.0355%" y="2469" width="6.2923%" height="15" fill="rgb(219,69,12)" fg:x="198233581" fg:w="15021869"/><text x="83.2855%" y="2479.50">serde_js..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,021,869 samples, 6.29%)</title><rect x="83.0355%" y="2453" width="6.2923%" height="15" fill="rgb(245,30,7)" fg:x="198233581" fg:w="15021869"/><text x="83.2855%" y="2463.50">&lt;&amp;mut se..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15,021,869 samples, 6.29%)</title><rect x="83.0355%" y="2437" width="6.2923%" height="15" fill="rgb(218,221,48)" fg:x="198233581" fg:w="15021869"/><text x="83.2855%" y="2447.50">&lt;serde_j..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,069,655 samples, 0.45%)</title><rect x="88.8797%" y="2421" width="0.4481%" height="15" fill="rgb(216,66,15)" fg:x="212185795" fg:w="1069655"/><text x="89.1297%" y="2431.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18,169,820 samples, 7.61%)</title><rect x="82.1715%" y="2693" width="7.6109%" height="15" fill="rgb(226,122,50)" fg:x="196171064" fg:w="18169820"/><text x="82.4215%" y="2703.50">&lt;core::mar..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18,169,820 samples, 7.61%)</title><rect x="82.1715%" y="2677" width="7.6109%" height="15" fill="rgb(239,156,16)" fg:x="196171064" fg:w="18169820"/><text x="82.4215%" y="2687.50">serde_json..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18,169,820 samples, 7.61%)</title><rect x="82.1715%" y="2661" width="7.6109%" height="15" fill="rgb(224,27,38)" fg:x="196171064" fg:w="18169820"/><text x="82.4215%" y="2671.50">&lt;&amp;mut serd..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18,169,820 samples, 7.61%)</title><rect x="82.1715%" y="2645" width="7.6109%" height="15" fill="rgb(224,39,27)" fg:x="196171064" fg:w="18169820"/><text x="82.4215%" y="2655.50">&lt;serde_jso..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,085,434 samples, 0.45%)</title><rect x="89.3278%" y="2629" width="0.4547%" height="15" fill="rgb(215,92,29)" fg:x="213255450" fg:w="1085434"/><text x="89.5778%" y="2639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,085,434 samples, 0.45%)</title><rect x="89.3278%" y="2613" width="0.4547%" height="15" fill="rgb(207,159,16)" fg:x="213255450" fg:w="1085434"/><text x="89.5778%" y="2623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,085,434 samples, 0.45%)</title><rect x="89.3278%" y="2597" width="0.4547%" height="15" fill="rgb(238,163,47)" fg:x="213255450" fg:w="1085434"/><text x="89.5778%" y="2607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,085,434 samples, 0.45%)</title><rect x="89.3278%" y="2581" width="0.4547%" height="15" fill="rgb(219,91,49)" fg:x="213255450" fg:w="1085434"/><text x="89.5778%" y="2591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1,085,434 samples, 0.45%)</title><rect x="89.3278%" y="2565" width="0.4547%" height="15" fill="rgb(227,167,31)" fg:x="213255450" fg:w="1085434"/><text x="89.5778%" y="2575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1,085,434 samples, 0.45%)</title><rect x="89.3278%" y="2549" width="0.4547%" height="15" fill="rgb(234,80,54)" fg:x="213255450" fg:w="1085434"/><text x="89.5778%" y="2559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,085,434 samples, 0.45%)</title><rect x="89.3278%" y="2533" width="0.4547%" height="15" fill="rgb(212,114,2)" fg:x="213255450" fg:w="1085434"/><text x="89.5778%" y="2543.50"></text></g><g><title>serde::de::MapAccess::next_entry (19,252,590 samples, 8.06%)</title><rect x="82.1715%" y="2741" width="8.0645%" height="15" fill="rgb(234,50,24)" fg:x="196171064" fg:w="19252590"/><text x="82.4215%" y="2751.50">serde::de::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (19,252,590 samples, 8.06%)</title><rect x="82.1715%" y="2725" width="8.0645%" height="15" fill="rgb(221,68,8)" fg:x="196171064" fg:w="19252590"/><text x="82.4215%" y="2735.50">serde::de::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (19,252,590 samples, 8.06%)</title><rect x="82.1715%" y="2709" width="8.0645%" height="15" fill="rgb(254,180,31)" fg:x="196171064" fg:w="19252590"/><text x="82.4215%" y="2719.50">&lt;serde_json..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (1,082,770 samples, 0.45%)</title><rect x="89.7824%" y="2693" width="0.4535%" height="15" fill="rgb(247,130,50)" fg:x="214340884" fg:w="1082770"/><text x="90.0324%" y="2703.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1,082,770 samples, 0.45%)</title><rect x="89.7824%" y="2677" width="0.4535%" height="15" fill="rgb(211,109,4)" fg:x="214340884" fg:w="1082770"/><text x="90.0324%" y="2687.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (1,082,770 samples, 0.45%)</title><rect x="89.7824%" y="2661" width="0.4535%" height="15" fill="rgb(238,50,21)" fg:x="214340884" fg:w="1082770"/><text x="90.0324%" y="2671.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1,082,770 samples, 0.45%)</title><rect x="89.7824%" y="2645" width="0.4535%" height="15" fill="rgb(225,57,45)" fg:x="214340884" fg:w="1082770"/><text x="90.0324%" y="2655.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1,082,770 samples, 0.45%)</title><rect x="89.7824%" y="2629" width="0.4535%" height="15" fill="rgb(209,196,50)" fg:x="214340884" fg:w="1082770"/><text x="90.0324%" y="2639.50"></text></g><g><title>serde_json::de::from_str (21,400,873 samples, 8.96%)</title><rect x="81.7357%" y="2821" width="8.9643%" height="15" fill="rgb(242,140,13)" fg:x="195130672" fg:w="21400873"/><text x="81.9857%" y="2831.50">serde_json::d..</text></g><g><title>serde_json::de::from_trait (21,400,873 samples, 8.96%)</title><rect x="81.7357%" y="2805" width="8.9643%" height="15" fill="rgb(217,111,7)" fg:x="195130672" fg:w="21400873"/><text x="81.9857%" y="2815.50">serde_json::d..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (21,400,873 samples, 8.96%)</title><rect x="81.7357%" y="2789" width="8.9643%" height="15" fill="rgb(253,193,51)" fg:x="195130672" fg:w="21400873"/><text x="81.9857%" y="2799.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21,400,873 samples, 8.96%)</title><rect x="81.7357%" y="2773" width="8.9643%" height="15" fill="rgb(252,70,29)" fg:x="195130672" fg:w="21400873"/><text x="81.9857%" y="2783.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (21,400,873 samples, 8.96%)</title><rect x="81.7357%" y="2757" width="8.9643%" height="15" fill="rgb(232,127,12)" fg:x="195130672" fg:w="21400873"/><text x="81.9857%" y="2767.50">&lt;serde_json::..</text></g><g><title>serde::de::MapAccess::next_value (1,107,891 samples, 0.46%)</title><rect x="90.2360%" y="2741" width="0.4641%" height="15" fill="rgb(211,180,21)" fg:x="215423654" fg:w="1107891"/><text x="90.4860%" y="2751.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,107,891 samples, 0.46%)</title><rect x="90.2360%" y="2725" width="0.4641%" height="15" fill="rgb(229,72,13)" fg:x="215423654" fg:w="1107891"/><text x="90.4860%" y="2735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,107,891 samples, 0.46%)</title><rect x="90.2360%" y="2709" width="0.4641%" height="15" fill="rgb(240,211,49)" fg:x="215423654" fg:w="1107891"/><text x="90.4860%" y="2719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,107,891 samples, 0.46%)</title><rect x="90.2360%" y="2693" width="0.4641%" height="15" fill="rgb(219,149,40)" fg:x="215423654" fg:w="1107891"/><text x="90.4860%" y="2703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,107,891 samples, 0.46%)</title><rect x="90.2360%" y="2677" width="0.4641%" height="15" fill="rgb(210,127,46)" fg:x="215423654" fg:w="1107891"/><text x="90.4860%" y="2687.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,107,891 samples, 0.46%)</title><rect x="90.2360%" y="2661" width="0.4641%" height="15" fill="rgb(220,106,7)" fg:x="215423654" fg:w="1107891"/><text x="90.4860%" y="2671.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,107,891 samples, 0.46%)</title><rect x="90.2360%" y="2645" width="0.4641%" height="15" fill="rgb(249,31,22)" fg:x="215423654" fg:w="1107891"/><text x="90.4860%" y="2655.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,107,891 samples, 0.46%)</title><rect x="90.2360%" y="2629" width="0.4641%" height="15" fill="rgb(253,1,49)" fg:x="215423654" fg:w="1107891"/><text x="90.4860%" y="2639.50"></text></g><g><title>benchmark::parse_web_layout_trace (21,902,377 samples, 9.17%)</title><rect x="81.7357%" y="2837" width="9.1744%" height="15" fill="rgb(227,144,33)" fg:x="195130672" fg:w="21902377"/><text x="81.9857%" y="2847.50">benchmark::pa..</text></g><g><title>std::fs::read_to_string (501,504 samples, 0.21%)</title><rect x="90.7001%" y="2821" width="0.2101%" height="15" fill="rgb(249,163,44)" fg:x="216531545" fg:w="501504"/><text x="90.9501%" y="2831.50"></text></g><g><title>std::fs::read_to_string::inner (501,504 samples, 0.21%)</title><rect x="90.7001%" y="2805" width="0.2101%" height="15" fill="rgb(234,15,39)" fg:x="216531545" fg:w="501504"/><text x="90.9501%" y="2815.50"></text></g><g><title>alloc::string::String::try_reserve_exact (501,504 samples, 0.21%)</title><rect x="90.7001%" y="2789" width="0.2101%" height="15" fill="rgb(207,66,16)" fg:x="216531545" fg:w="501504"/><text x="90.9501%" y="2799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve_exact (501,504 samples, 0.21%)</title><rect x="90.7001%" y="2773" width="0.2101%" height="15" fill="rgb(233,112,24)" fg:x="216531545" fg:w="501504"/><text x="90.9501%" y="2783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (501,504 samples, 0.21%)</title><rect x="90.7001%" y="2757" width="0.2101%" height="15" fill="rgb(230,90,22)" fg:x="216531545" fg:w="501504"/><text x="90.9501%" y="2767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_reserve_exact (501,504 samples, 0.21%)</title><rect x="90.7001%" y="2741" width="0.2101%" height="15" fill="rgb(229,61,13)" fg:x="216531545" fg:w="501504"/><text x="90.9501%" y="2751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_exact (501,504 samples, 0.21%)</title><rect x="90.7001%" y="2725" width="0.2101%" height="15" fill="rgb(225,57,24)" fg:x="216531545" fg:w="501504"/><text x="90.9501%" y="2735.50"></text></g><g><title>alloc::raw_vec::finish_grow (501,504 samples, 0.21%)</title><rect x="90.7001%" y="2709" width="0.2101%" height="15" fill="rgb(208,169,48)" fg:x="216531545" fg:w="501504"/><text x="90.9501%" y="2719.50"></text></g><g><title>malloc (501,504 samples, 0.21%)</title><rect x="90.7001%" y="2693" width="0.2101%" height="15" fill="rgb(244,218,51)" fg:x="216531545" fg:w="501504"/><text x="90.9501%" y="2703.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.21%)</title><rect x="90.7001%" y="2677" width="0.2101%" height="15" fill="rgb(214,148,10)" fg:x="216531545" fg:w="501504"/><text x="90.9501%" y="2687.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.21%)</title><rect x="90.7001%" y="2661" width="0.2101%" height="15" fill="rgb(225,174,27)" fg:x="216531545" fg:w="501504"/><text x="90.9501%" y="2671.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.21%)</title><rect x="90.7001%" y="2645" width="0.2101%" height="15" fill="rgb(230,96,26)" fg:x="216531545" fg:w="501504"/><text x="90.9501%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,300,293 samples, 0.54%)</title><rect x="90.9101%" y="2773" width="0.5447%" height="15" fill="rgb(232,10,30)" fg:x="217033049" fg:w="1300293"/><text x="91.1601%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,300,293 samples, 0.54%)</title><rect x="90.9101%" y="2757" width="0.5447%" height="15" fill="rgb(222,8,50)" fg:x="217033049" fg:w="1300293"/><text x="91.1601%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,300,293 samples, 0.54%)</title><rect x="90.9101%" y="2741" width="0.5447%" height="15" fill="rgb(213,81,27)" fg:x="217033049" fg:w="1300293"/><text x="91.1601%" y="2751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,300,293 samples, 0.54%)</title><rect x="90.9101%" y="2725" width="0.5447%" height="15" fill="rgb(245,50,10)" fg:x="217033049" fg:w="1300293"/><text x="91.1601%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,300,293 samples, 0.54%)</title><rect x="90.9101%" y="2709" width="0.5447%" height="15" fill="rgb(216,100,18)" fg:x="217033049" fg:w="1300293"/><text x="91.1601%" y="2719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,300,293 samples, 0.54%)</title><rect x="90.9101%" y="2693" width="0.5447%" height="15" fill="rgb(236,147,54)" fg:x="217033049" fg:w="1300293"/><text x="91.1601%" y="2703.50"></text></g><g><title>alloc::alloc::dealloc (1,300,293 samples, 0.54%)</title><rect x="90.9101%" y="2677" width="0.5447%" height="15" fill="rgb(205,143,26)" fg:x="217033049" fg:w="1300293"/><text x="91.1601%" y="2687.50"></text></g><g><title>cfree (1,300,293 samples, 0.54%)</title><rect x="90.9101%" y="2661" width="0.5447%" height="15" fill="rgb(236,26,9)" fg:x="217033049" fg:w="1300293"/><text x="91.1601%" y="2671.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,280,092 samples, 0.54%)</title><rect x="91.4548%" y="2645" width="0.5362%" height="15" fill="rgb(221,165,53)" fg:x="218333342" fg:w="1280092"/><text x="91.7048%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,280,092 samples, 0.54%)</title><rect x="91.4548%" y="2629" width="0.5362%" height="15" fill="rgb(214,110,17)" fg:x="218333342" fg:w="1280092"/><text x="91.7048%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,280,092 samples, 0.54%)</title><rect x="91.4548%" y="2613" width="0.5362%" height="15" fill="rgb(237,197,12)" fg:x="218333342" fg:w="1280092"/><text x="91.7048%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,280,092 samples, 0.54%)</title><rect x="91.4548%" y="2597" width="0.5362%" height="15" fill="rgb(205,84,17)" fg:x="218333342" fg:w="1280092"/><text x="91.7048%" y="2607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,280,092 samples, 0.54%)</title><rect x="91.4548%" y="2581" width="0.5362%" height="15" fill="rgb(237,18,45)" fg:x="218333342" fg:w="1280092"/><text x="91.7048%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,280,092 samples, 0.54%)</title><rect x="91.4548%" y="2565" width="0.5362%" height="15" fill="rgb(221,87,14)" fg:x="218333342" fg:w="1280092"/><text x="91.7048%" y="2575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,280,092 samples, 0.54%)</title><rect x="91.4548%" y="2549" width="0.5362%" height="15" fill="rgb(238,186,15)" fg:x="218333342" fg:w="1280092"/><text x="91.7048%" y="2559.50"></text></g><g><title>alloc::alloc::dealloc (1,280,092 samples, 0.54%)</title><rect x="91.4548%" y="2533" width="0.5362%" height="15" fill="rgb(208,115,11)" fg:x="218333342" fg:w="1280092"/><text x="91.7048%" y="2543.50"></text></g><g><title>cfree (1,280,092 samples, 0.54%)</title><rect x="91.4548%" y="2517" width="0.5362%" height="15" fill="rgb(254,175,0)" fg:x="218333342" fg:w="1280092"/><text x="91.7048%" y="2527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,290,211 samples, 0.54%)</title><rect x="91.9910%" y="1765" width="0.5404%" height="15" fill="rgb(227,24,42)" fg:x="219613434" fg:w="1290211"/><text x="92.2410%" y="1775.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,290,211 samples, 0.54%)</title><rect x="91.9910%" y="1749" width="0.5404%" height="15" fill="rgb(223,211,37)" fg:x="219613434" fg:w="1290211"/><text x="92.2410%" y="1759.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,290,211 samples, 0.54%)</title><rect x="91.9910%" y="1733" width="0.5404%" height="15" fill="rgb(235,49,27)" fg:x="219613434" fg:w="1290211"/><text x="92.2410%" y="1743.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,290,211 samples, 0.54%)</title><rect x="91.9910%" y="1717" width="0.5404%" height="15" fill="rgb(254,97,51)" fg:x="219613434" fg:w="1290211"/><text x="92.2410%" y="1727.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,290,211 samples, 0.54%)</title><rect x="91.9910%" y="1701" width="0.5404%" height="15" fill="rgb(249,51,40)" fg:x="219613434" fg:w="1290211"/><text x="92.2410%" y="1711.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,290,211 samples, 0.54%)</title><rect x="91.9910%" y="1685" width="0.5404%" height="15" fill="rgb(210,128,45)" fg:x="219613434" fg:w="1290211"/><text x="92.2410%" y="1695.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,290,211 samples, 0.54%)</title><rect x="91.9910%" y="1669" width="0.5404%" height="15" fill="rgb(224,137,50)" fg:x="219613434" fg:w="1290211"/><text x="92.2410%" y="1679.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,290,211 samples, 0.54%)</title><rect x="91.9910%" y="1653" width="0.5404%" height="15" fill="rgb(242,15,9)" fg:x="219613434" fg:w="1290211"/><text x="92.2410%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,188,369 samples, 2.17%)</title><rect x="90.9101%" y="2821" width="2.1733%" height="15" fill="rgb(233,187,41)" fg:x="217033049" fg:w="5188369"/><text x="91.1601%" y="2831.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (5,188,369 samples, 2.17%)</title><rect x="90.9101%" y="2805" width="2.1733%" height="15" fill="rgb(227,2,29)" fg:x="217033049" fg:w="5188369"/><text x="91.1601%" y="2815.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (5,188,369 samples, 2.17%)</title><rect x="90.9101%" y="2789" width="2.1733%" height="15" fill="rgb(222,70,3)" fg:x="217033049" fg:w="5188369"/><text x="91.1601%" y="2799.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,888,076 samples, 1.63%)</title><rect x="91.4548%" y="2773" width="1.6286%" height="15" fill="rgb(213,11,42)" fg:x="218333342" fg:w="3888076"/><text x="91.7048%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,888,076 samples, 1.63%)</title><rect x="91.4548%" y="2757" width="1.6286%" height="15" fill="rgb(225,150,9)" fg:x="218333342" fg:w="3888076"/><text x="91.7048%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,888,076 samples, 1.63%)</title><rect x="91.4548%" y="2741" width="1.6286%" height="15" fill="rgb(230,162,45)" fg:x="218333342" fg:w="3888076"/><text x="91.7048%" y="2751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,888,076 samples, 1.63%)</title><rect x="91.4548%" y="2725" width="1.6286%" height="15" fill="rgb(222,14,52)" fg:x="218333342" fg:w="3888076"/><text x="91.7048%" y="2735.50"></text></g><g><title>core::mem::drop (3,888,076 samples, 1.63%)</title><rect x="91.4548%" y="2709" width="1.6286%" height="15" fill="rgb(254,198,14)" fg:x="218333342" fg:w="3888076"/><text x="91.7048%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,888,076 samples, 1.63%)</title><rect x="91.4548%" y="2693" width="1.6286%" height="15" fill="rgb(220,217,30)" fg:x="218333342" fg:w="3888076"/><text x="91.7048%" y="2703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,888,076 samples, 1.63%)</title><rect x="91.4548%" y="2677" width="1.6286%" height="15" fill="rgb(215,146,41)" fg:x="218333342" fg:w="3888076"/><text x="91.7048%" y="2687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,888,076 samples, 1.63%)</title><rect x="91.4548%" y="2661" width="1.6286%" height="15" fill="rgb(217,27,36)" fg:x="218333342" fg:w="3888076"/><text x="91.7048%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2645" width="1.0924%" height="15" fill="rgb(219,218,39)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2655.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2629" width="1.0924%" height="15" fill="rgb(219,4,42)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2639.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2613" width="1.0924%" height="15" fill="rgb(249,119,36)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2597" width="1.0924%" height="15" fill="rgb(209,23,33)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2581" width="1.0924%" height="15" fill="rgb(211,10,0)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2565" width="1.0924%" height="15" fill="rgb(208,99,37)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2549" width="1.0924%" height="15" fill="rgb(213,132,31)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2559.50"></text></g><g><title>core::mem::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2533" width="1.0924%" height="15" fill="rgb(243,129,40)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2517" width="1.0924%" height="15" fill="rgb(210,66,33)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2501" width="1.0924%" height="15" fill="rgb(209,189,4)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2485" width="1.0924%" height="15" fill="rgb(214,107,37)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2469" width="1.0924%" height="15" fill="rgb(245,88,54)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2479.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2453" width="1.0924%" height="15" fill="rgb(205,146,20)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2437" width="1.0924%" height="15" fill="rgb(220,161,25)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2421" width="1.0924%" height="15" fill="rgb(215,152,15)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2405" width="1.0924%" height="15" fill="rgb(233,192,44)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2389" width="1.0924%" height="15" fill="rgb(240,170,46)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2373" width="1.0924%" height="15" fill="rgb(207,104,33)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2357" width="1.0924%" height="15" fill="rgb(219,21,39)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2341" width="1.0924%" height="15" fill="rgb(214,133,29)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2325" width="1.0924%" height="15" fill="rgb(226,93,6)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2309" width="1.0924%" height="15" fill="rgb(252,222,34)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2319.50"></text></g><g><title>core::mem::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2293" width="1.0924%" height="15" fill="rgb(252,92,48)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2277" width="1.0924%" height="15" fill="rgb(245,223,24)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2261" width="1.0924%" height="15" fill="rgb(205,176,3)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2271.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2245" width="1.0924%" height="15" fill="rgb(235,151,15)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2229" width="1.0924%" height="15" fill="rgb(237,209,11)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2239.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2213" width="1.0924%" height="15" fill="rgb(243,227,24)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2223.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2197" width="1.0924%" height="15" fill="rgb(239,193,16)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2181" width="1.0924%" height="15" fill="rgb(231,27,9)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2165" width="1.0924%" height="15" fill="rgb(219,169,10)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2149" width="1.0924%" height="15" fill="rgb(244,229,43)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2133" width="1.0924%" height="15" fill="rgb(254,38,20)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2117" width="1.0924%" height="15" fill="rgb(250,47,30)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2101" width="1.0924%" height="15" fill="rgb(224,124,36)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2085" width="1.0924%" height="15" fill="rgb(246,68,51)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2095.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2069" width="1.0924%" height="15" fill="rgb(253,43,49)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2079.50"></text></g><g><title>core::mem::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2053" width="1.0924%" height="15" fill="rgb(219,54,36)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2037" width="1.0924%" height="15" fill="rgb(227,133,34)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2047.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2021" width="1.0924%" height="15" fill="rgb(247,227,15)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2031.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="2005" width="1.0924%" height="15" fill="rgb(229,96,14)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="1989" width="1.0924%" height="15" fill="rgb(220,79,17)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="1999.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="1973" width="1.0924%" height="15" fill="rgb(205,131,53)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="1983.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="1957" width="1.0924%" height="15" fill="rgb(209,50,29)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="1941" width="1.0924%" height="15" fill="rgb(245,86,46)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="1925" width="1.0924%" height="15" fill="rgb(235,66,46)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="1909" width="1.0924%" height="15" fill="rgb(232,148,31)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="1893" width="1.0924%" height="15" fill="rgb(217,149,8)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="1877" width="1.0924%" height="15" fill="rgb(209,183,11)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="1861" width="1.0924%" height="15" fill="rgb(208,55,20)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="1845" width="1.0924%" height="15" fill="rgb(218,39,14)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="1829" width="1.0924%" height="15" fill="rgb(216,169,33)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="1839.50"></text></g><g><title>core::mem::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="1813" width="1.0924%" height="15" fill="rgb(233,80,24)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="1797" width="1.0924%" height="15" fill="rgb(213,179,31)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,607,984 samples, 1.09%)</title><rect x="91.9910%" y="1781" width="1.0924%" height="15" fill="rgb(209,19,5)" fg:x="219613434" fg:w="2607984"/><text x="92.2410%" y="1791.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1765" width="0.5520%" height="15" fill="rgb(219,18,35)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1749" width="0.5520%" height="15" fill="rgb(209,169,16)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1759.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1733" width="0.5520%" height="15" fill="rgb(245,90,51)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1743.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1717" width="0.5520%" height="15" fill="rgb(220,99,45)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1701" width="0.5520%" height="15" fill="rgb(249,89,25)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1685" width="0.5520%" height="15" fill="rgb(239,193,0)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1669" width="0.5520%" height="15" fill="rgb(231,126,1)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1653" width="0.5520%" height="15" fill="rgb(243,166,3)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1637" width="0.5520%" height="15" fill="rgb(223,22,34)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1621" width="0.5520%" height="15" fill="rgb(251,52,51)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1605" width="0.5520%" height="15" fill="rgb(221,165,28)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1589" width="0.5520%" height="15" fill="rgb(218,121,47)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1599.50"></text></g><g><title>core::mem::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1573" width="0.5520%" height="15" fill="rgb(209,120,9)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1557" width="0.5520%" height="15" fill="rgb(236,68,12)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1541" width="0.5520%" height="15" fill="rgb(225,194,26)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1525" width="0.5520%" height="15" fill="rgb(231,84,39)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1509" width="0.5520%" height="15" fill="rgb(210,11,45)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1519.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1493" width="0.5520%" height="15" fill="rgb(224,54,52)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1503.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1477" width="0.5520%" height="15" fill="rgb(238,102,14)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1461" width="0.5520%" height="15" fill="rgb(243,160,52)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1445" width="0.5520%" height="15" fill="rgb(216,114,19)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1429" width="0.5520%" height="15" fill="rgb(244,166,37)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1413" width="0.5520%" height="15" fill="rgb(246,29,44)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1397" width="0.5520%" height="15" fill="rgb(215,56,53)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1381" width="0.5520%" height="15" fill="rgb(217,60,2)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1365" width="0.5520%" height="15" fill="rgb(207,26,24)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1375.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1349" width="0.5520%" height="15" fill="rgb(252,210,15)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1359.50"></text></g><g><title>core::mem::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1333" width="0.5520%" height="15" fill="rgb(253,209,26)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1317" width="0.5520%" height="15" fill="rgb(238,170,14)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1327.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1301" width="0.5520%" height="15" fill="rgb(216,178,15)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1311.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1285" width="0.5520%" height="15" fill="rgb(250,197,2)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1269" width="0.5520%" height="15" fill="rgb(212,70,42)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1279.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1253" width="0.5520%" height="15" fill="rgb(227,213,9)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1263.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1237" width="0.5520%" height="15" fill="rgb(245,99,25)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1221" width="0.5520%" height="15" fill="rgb(250,82,29)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1205" width="0.5520%" height="15" fill="rgb(241,226,54)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1189" width="0.5520%" height="15" fill="rgb(221,99,41)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1173" width="0.5520%" height="15" fill="rgb(213,90,21)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1157" width="0.5520%" height="15" fill="rgb(205,208,24)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1141" width="0.5520%" height="15" fill="rgb(246,31,12)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1125" width="0.5520%" height="15" fill="rgb(213,154,6)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1109" width="0.5520%" height="15" fill="rgb(222,163,29)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1119.50"></text></g><g><title>core::mem::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1093" width="0.5520%" height="15" fill="rgb(227,201,8)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1077" width="0.5520%" height="15" fill="rgb(233,9,32)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1061" width="0.5520%" height="15" fill="rgb(217,54,24)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1045" width="0.5520%" height="15" fill="rgb(235,192,0)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1029" width="0.5520%" height="15" fill="rgb(235,45,9)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="1013" width="0.5520%" height="15" fill="rgb(246,42,40)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1023.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="997" width="0.5520%" height="15" fill="rgb(248,111,24)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="981" width="0.5520%" height="15" fill="rgb(249,65,22)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="965" width="0.5520%" height="15" fill="rgb(238,111,51)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="949" width="0.5520%" height="15" fill="rgb(250,118,22)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="933" width="0.5520%" height="15" fill="rgb(234,84,26)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="917" width="0.5520%" height="15" fill="rgb(243,172,12)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="901" width="0.5520%" height="15" fill="rgb(236,150,49)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="885" width="0.5520%" height="15" fill="rgb(225,197,26)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="869" width="0.5520%" height="15" fill="rgb(214,17,42)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="879.50"></text></g><g><title>core::mem::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="853" width="0.5520%" height="15" fill="rgb(224,165,40)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="837" width="0.5520%" height="15" fill="rgb(246,100,4)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="821" width="0.5520%" height="15" fill="rgb(222,103,0)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="831.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="805" width="0.5520%" height="15" fill="rgb(227,189,26)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="789" width="0.5520%" height="15" fill="rgb(214,202,17)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="773" width="0.5520%" height="15" fill="rgb(229,111,3)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="783.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="757" width="0.5520%" height="15" fill="rgb(229,172,15)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="741" width="0.5520%" height="15" fill="rgb(230,224,35)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="725" width="0.5520%" height="15" fill="rgb(251,141,6)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="709" width="0.5520%" height="15" fill="rgb(225,208,6)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="693" width="0.5520%" height="15" fill="rgb(246,181,16)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="677" width="0.5520%" height="15" fill="rgb(227,129,36)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="661" width="0.5520%" height="15" fill="rgb(248,117,24)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="645" width="0.5520%" height="15" fill="rgb(214,185,35)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="629" width="0.5520%" height="15" fill="rgb(236,150,34)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="639.50"></text></g><g><title>core::mem::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="613" width="0.5520%" height="15" fill="rgb(243,228,27)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="597" width="0.5520%" height="15" fill="rgb(245,77,44)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="581" width="0.5520%" height="15" fill="rgb(235,214,42)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="565" width="0.5520%" height="15" fill="rgb(221,74,3)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="549" width="0.5520%" height="15" fill="rgb(206,121,29)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="533" width="0.5520%" height="15" fill="rgb(249,131,53)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="517" width="0.5520%" height="15" fill="rgb(236,170,29)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="501" width="0.5520%" height="15" fill="rgb(247,96,15)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="485" width="0.5520%" height="15" fill="rgb(211,210,7)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="469" width="0.5520%" height="15" fill="rgb(240,88,50)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="453" width="0.5520%" height="15" fill="rgb(209,229,26)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="437" width="0.5520%" height="15" fill="rgb(210,68,23)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="421" width="0.5520%" height="15" fill="rgb(229,180,13)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="405" width="0.5520%" height="15" fill="rgb(236,53,44)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="389" width="0.5520%" height="15" fill="rgb(244,214,29)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="399.50"></text></g><g><title>core::mem::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="373" width="0.5520%" height="15" fill="rgb(220,75,29)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="357" width="0.5520%" height="15" fill="rgb(214,183,37)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="341" width="0.5520%" height="15" fill="rgb(239,117,29)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="325" width="0.5520%" height="15" fill="rgb(237,171,35)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="309" width="0.5520%" height="15" fill="rgb(229,178,53)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="293" width="0.5520%" height="15" fill="rgb(210,102,19)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="303.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="277" width="0.5520%" height="15" fill="rgb(235,127,22)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="261" width="0.5520%" height="15" fill="rgb(244,31,31)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="245" width="0.5520%" height="15" fill="rgb(231,43,21)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="229" width="0.5520%" height="15" fill="rgb(217,131,35)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="213" width="0.5520%" height="15" fill="rgb(221,149,4)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="223.50"></text></g><g><title>core::mem::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="197" width="0.5520%" height="15" fill="rgb(232,170,28)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="181" width="0.5520%" height="15" fill="rgb(238,56,10)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="165" width="0.5520%" height="15" fill="rgb(235,196,14)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="149" width="0.5520%" height="15" fill="rgb(216,45,48)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="159.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="133" width="0.5520%" height="15" fill="rgb(238,213,17)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="143.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="117" width="0.5520%" height="15" fill="rgb(212,13,2)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="127.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="101" width="0.5520%" height="15" fill="rgb(240,114,20)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="85" width="0.5520%" height="15" fill="rgb(228,41,40)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="95.50"></text></g><g><title>alloc::alloc::dealloc (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="69" width="0.5520%" height="15" fill="rgb(244,132,35)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="79.50"></text></g><g><title>cfree (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="53" width="0.5520%" height="15" fill="rgb(253,189,4)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="63.50"></text></g><g><title>[libc.so.6] (1,317,773 samples, 0.55%)</title><rect x="92.5314%" y="37" width="0.5520%" height="15" fill="rgb(224,37,19)" fg:x="220903645" fg:w="1317773"/><text x="92.7814%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (9,233,450 samples, 3.87%)</title><rect x="90.9101%" y="2837" width="3.8677%" height="15" fill="rgb(235,223,18)" fg:x="217033049" fg:w="9233450"/><text x="91.1601%" y="2847.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (4,045,081 samples, 1.69%)</title><rect x="93.0834%" y="2821" width="1.6944%" height="15" fill="rgb(235,163,25)" fg:x="222221418" fg:w="4045081"/><text x="93.3334%" y="2831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,045,081 samples, 1.69%)</title><rect x="93.0834%" y="2805" width="1.6944%" height="15" fill="rgb(217,145,28)" fg:x="222221418" fg:w="4045081"/><text x="93.3334%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,045,081 samples, 1.69%)</title><rect x="93.0834%" y="2789" width="1.6944%" height="15" fill="rgb(223,223,32)" fg:x="222221418" fg:w="4045081"/><text x="93.3334%" y="2799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,045,081 samples, 1.69%)</title><rect x="93.0834%" y="2773" width="1.6944%" height="15" fill="rgb(227,189,39)" fg:x="222221418" fg:w="4045081"/><text x="93.3334%" y="2783.50"></text></g><g><title>alloc::alloc::dealloc (4,045,081 samples, 1.69%)</title><rect x="93.0834%" y="2757" width="1.6944%" height="15" fill="rgb(248,10,22)" fg:x="222221418" fg:w="4045081"/><text x="93.3334%" y="2767.50"></text></g><g><title>cfree (4,045,081 samples, 1.69%)</title><rect x="93.0834%" y="2741" width="1.6944%" height="15" fill="rgb(248,46,39)" fg:x="222221418" fg:w="4045081"/><text x="93.3334%" y="2751.50"></text></g><g><title>[libc.so.6] (4,045,081 samples, 1.69%)</title><rect x="93.0834%" y="2725" width="1.6944%" height="15" fill="rgb(248,113,48)" fg:x="222221418" fg:w="4045081"/><text x="93.3334%" y="2735.50"></text></g><g><title>[libc.so.6] (4,045,081 samples, 1.69%)</title><rect x="93.0834%" y="2709" width="1.6944%" height="15" fill="rgb(245,16,25)" fg:x="222221418" fg:w="4045081"/><text x="93.3334%" y="2719.50"></text></g><g><title>_start (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="3125" width="86.8840%" height="15" fill="rgb(249,152,16)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="3135.50">_start</text></g><g><title>__libc_start_main (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="3109" width="86.8840%" height="15" fill="rgb(250,16,1)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="3119.50">__libc_start_main</text></g><g><title>[libc.so.6] (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="3093" width="86.8840%" height="15" fill="rgb(249,138,3)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="3103.50">[libc.so.6]</text></g><g><title>main (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="3077" width="86.8840%" height="15" fill="rgb(227,71,41)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="3087.50">main</text></g><g><title>std::rt::lang_start_internal (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="3061" width="86.8840%" height="15" fill="rgb(209,184,23)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="3071.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="3045" width="86.8840%" height="15" fill="rgb(223,215,31)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="3055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="3029" width="86.8840%" height="15" fill="rgb(210,146,28)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="3039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="3013" width="86.8840%" height="15" fill="rgb(209,183,41)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="3023.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="2997" width="86.8840%" height="15" fill="rgb(209,224,45)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="3007.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="2981" width="86.8840%" height="15" fill="rgb(224,209,51)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="2991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="2965" width="86.8840%" height="15" fill="rgb(223,17,39)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="2975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="2949" width="86.8840%" height="15" fill="rgb(234,204,37)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="2959.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="2933" width="86.8840%" height="15" fill="rgb(236,120,5)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="2943.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="2917" width="86.8840%" height="15" fill="rgb(248,97,27)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="2927.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="2901" width="86.8840%" height="15" fill="rgb(240,66,17)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="2911.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="2885" width="86.8840%" height="15" fill="rgb(210,79,3)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="2895.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="2869" width="86.8840%" height="15" fill="rgb(214,176,27)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="2879.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (207,421,374 samples, 86.88%)</title><rect x="8.4618%" y="2853" width="86.8840%" height="15" fill="rgb(235,185,3)" fg:x="20201134" fg:w="207421374"/><text x="8.7118%" y="2863.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2837" width="0.5680%" height="15" fill="rgb(227,24,12)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2821" width="0.5680%" height="15" fill="rgb(252,169,48)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2805" width="0.5680%" height="15" fill="rgb(212,65,1)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2789" width="0.5680%" height="15" fill="rgb(242,39,24)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2773" width="0.5680%" height="15" fill="rgb(249,32,23)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2757" width="0.5680%" height="15" fill="rgb(251,195,23)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2741" width="0.5680%" height="15" fill="rgb(236,174,8)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2725" width="0.5680%" height="15" fill="rgb(220,197,8)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2709" width="0.5680%" height="15" fill="rgb(240,108,37)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2693" width="0.5680%" height="15" fill="rgb(232,176,24)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2677" width="0.5680%" height="15" fill="rgb(243,35,29)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2661" width="0.5680%" height="15" fill="rgb(210,37,18)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2645" width="0.5680%" height="15" fill="rgb(224,184,40)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2629" width="0.5680%" height="15" fill="rgb(236,39,29)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2613" width="0.5680%" height="15" fill="rgb(232,48,39)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2597" width="0.5680%" height="15" fill="rgb(236,34,42)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2581" width="0.5680%" height="15" fill="rgb(243,106,37)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2565" width="0.5680%" height="15" fill="rgb(218,96,6)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2549" width="0.5680%" height="15" fill="rgb(235,130,12)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2533" width="0.5680%" height="15" fill="rgb(231,95,0)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2517" width="0.5680%" height="15" fill="rgb(228,12,23)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2501" width="0.5680%" height="15" fill="rgb(216,12,1)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2485" width="0.5680%" height="15" fill="rgb(219,59,3)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2469" width="0.5680%" height="15" fill="rgb(215,208,46)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2453" width="0.5680%" height="15" fill="rgb(254,224,29)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2437" width="0.5680%" height="15" fill="rgb(232,14,29)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2421" width="0.5680%" height="15" fill="rgb(208,45,52)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2405" width="0.5680%" height="15" fill="rgb(234,191,28)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2389" width="0.5680%" height="15" fill="rgb(244,67,43)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2373" width="0.5680%" height="15" fill="rgb(236,189,24)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2357" width="0.5680%" height="15" fill="rgb(239,214,33)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2341" width="0.5680%" height="15" fill="rgb(226,176,41)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2325" width="0.5680%" height="15" fill="rgb(248,47,8)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2309" width="0.5680%" height="15" fill="rgb(218,81,44)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2293" width="0.5680%" height="15" fill="rgb(213,98,6)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2277" width="0.5680%" height="15" fill="rgb(222,85,22)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2261" width="0.5680%" height="15" fill="rgb(239,46,39)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2245" width="0.5680%" height="15" fill="rgb(237,12,29)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2229" width="0.5680%" height="15" fill="rgb(214,77,8)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2213" width="0.5680%" height="15" fill="rgb(217,168,37)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2197" width="0.5680%" height="15" fill="rgb(221,217,23)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2181" width="0.5680%" height="15" fill="rgb(243,229,36)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2165" width="0.5680%" height="15" fill="rgb(251,163,40)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2149" width="0.5680%" height="15" fill="rgb(237,222,12)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2133" width="0.5680%" height="15" fill="rgb(248,132,6)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2117" width="0.5680%" height="15" fill="rgb(227,167,50)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2101" width="0.5680%" height="15" fill="rgb(242,84,37)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2085" width="0.5680%" height="15" fill="rgb(212,4,50)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2069" width="0.5680%" height="15" fill="rgb(230,228,32)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2053" width="0.5680%" height="15" fill="rgb(248,217,23)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2037" width="0.5680%" height="15" fill="rgb(238,197,32)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2021" width="0.5680%" height="15" fill="rgb(236,106,1)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="2005" width="0.5680%" height="15" fill="rgb(219,228,13)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1989" width="0.5680%" height="15" fill="rgb(238,30,35)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1973" width="0.5680%" height="15" fill="rgb(236,70,23)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1957" width="0.5680%" height="15" fill="rgb(249,104,48)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1941" width="0.5680%" height="15" fill="rgb(254,117,50)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1925" width="0.5680%" height="15" fill="rgb(223,152,4)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1909" width="0.5680%" height="15" fill="rgb(245,6,2)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1893" width="0.5680%" height="15" fill="rgb(249,150,24)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1877" width="0.5680%" height="15" fill="rgb(228,185,42)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1861" width="0.5680%" height="15" fill="rgb(226,39,33)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1845" width="0.5680%" height="15" fill="rgb(221,166,19)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1829" width="0.5680%" height="15" fill="rgb(209,109,2)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1813" width="0.5680%" height="15" fill="rgb(252,216,26)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1797" width="0.5680%" height="15" fill="rgb(227,173,36)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1781" width="0.5680%" height="15" fill="rgb(209,90,7)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1765" width="0.5680%" height="15" fill="rgb(250,194,11)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1749" width="0.5680%" height="15" fill="rgb(220,72,50)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1733" width="0.5680%" height="15" fill="rgb(222,106,48)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1717" width="0.5680%" height="15" fill="rgb(216,220,45)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1701" width="0.5680%" height="15" fill="rgb(234,112,18)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1685" width="0.5680%" height="15" fill="rgb(206,179,9)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1669" width="0.5680%" height="15" fill="rgb(215,115,40)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1653" width="0.5680%" height="15" fill="rgb(222,69,34)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1637" width="0.5680%" height="15" fill="rgb(209,161,10)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1621" width="0.5680%" height="15" fill="rgb(217,6,38)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1605" width="0.5680%" height="15" fill="rgb(229,229,48)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1589" width="0.5680%" height="15" fill="rgb(225,21,28)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1573" width="0.5680%" height="15" fill="rgb(206,33,13)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1557" width="0.5680%" height="15" fill="rgb(242,178,17)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1541" width="0.5680%" height="15" fill="rgb(220,162,5)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1525" width="0.5680%" height="15" fill="rgb(210,33,43)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1535.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1509" width="0.5680%" height="15" fill="rgb(216,116,54)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1493" width="0.5680%" height="15" fill="rgb(249,92,24)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1477" width="0.5680%" height="15" fill="rgb(231,189,14)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1487.50"></text></g><g><title>alloc::alloc::dealloc (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1461" width="0.5680%" height="15" fill="rgb(230,8,41)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1471.50"></text></g><g><title>cfree (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1445" width="0.5680%" height="15" fill="rgb(249,7,27)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1455.50"></text></g><g><title>[libc.so.6] (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1429" width="0.5680%" height="15" fill="rgb(232,86,5)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1439.50"></text></g><g><title>[libc.so.6] (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1413" width="0.5680%" height="15" fill="rgb(224,175,18)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1423.50"></text></g><g><title>[libc.so.6] (1,356,009 samples, 0.57%)</title><rect x="94.7778%" y="1397" width="0.5680%" height="15" fill="rgb(220,129,12)" fg:x="226266499" fg:w="1356009"/><text x="95.0278%" y="1407.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (902,678 samples, 0.38%)</title><rect x="95.3458%" y="3125" width="0.3781%" height="15" fill="rgb(210,19,36)" fg:x="227622508" fg:w="902678"/><text x="95.5958%" y="3135.50"></text></g><g><title>benchmark::clear_dirty_flags (2,466,027 samples, 1.03%)</title><rect x="95.7239%" y="3125" width="1.0330%" height="15" fill="rgb(219,96,14)" fg:x="228525186" fg:w="2466027"/><text x="95.9739%" y="3135.50"></text></g><g><title>cfree (3,841,661 samples, 1.61%)</title><rect x="96.7569%" y="3125" width="1.6092%" height="15" fill="rgb(249,106,1)" fg:x="230991213" fg:w="3841661"/><text x="97.0069%" y="3135.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (1,365,453 samples, 0.57%)</title><rect x="98.3661%" y="3125" width="0.5720%" height="15" fill="rgb(249,155,20)" fg:x="234832874" fg:w="1365453"/><text x="98.6161%" y="3135.50"></text></g><g><title>all (238,733,614 samples, 100%)</title><rect x="0.0000%" y="3157" width="100.0000%" height="15" fill="rgb(244,168,9)" fg:x="0" fg:w="238733614"/><text x="0.2500%" y="3167.50"></text></g><g><title>benchmark (238,733,614 samples, 100.00%)</title><rect x="0.0000%" y="3141" width="100.0000%" height="15" fill="rgb(216,23,50)" fg:x="0" fg:w="238733614"/><text x="0.2500%" y="3151.50">benchmark</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,535,287 samples, 1.06%)</title><rect x="98.9380%" y="3125" width="1.0620%" height="15" fill="rgb(224,219,20)" fg:x="236198327" fg:w="2535287"/><text x="99.1880%" y="3135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="3109" width="0.5385%" height="15" fill="rgb(222,156,15)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="3119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="3093" width="0.5385%" height="15" fill="rgb(231,97,17)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="3103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="3077" width="0.5385%" height="15" fill="rgb(218,70,48)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="3061" width="0.5385%" height="15" fill="rgb(212,196,52)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="3071.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="3045" width="0.5385%" height="15" fill="rgb(243,203,18)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="3055.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="3029" width="0.5385%" height="15" fill="rgb(252,125,41)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="3039.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="3013" width="0.5385%" height="15" fill="rgb(223,180,33)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="3023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="2997" width="0.5385%" height="15" fill="rgb(254,159,46)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="3007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="2981" width="0.5385%" height="15" fill="rgb(254,38,10)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="2965" width="0.5385%" height="15" fill="rgb(208,217,32)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="2975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="2949" width="0.5385%" height="15" fill="rgb(221,120,13)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="2959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="2933" width="0.5385%" height="15" fill="rgb(246,54,52)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="2917" width="0.5385%" height="15" fill="rgb(242,34,25)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="2927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="2901" width="0.5385%" height="15" fill="rgb(247,209,9)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="2911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="2885" width="0.5385%" height="15" fill="rgb(228,71,26)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="2895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="2869" width="0.5385%" height="15" fill="rgb(222,145,49)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="2879.50"></text></g><g><title>alloc::alloc::dealloc (1,285,692 samples, 0.54%)</title><rect x="99.4615%" y="2853" width="0.5385%" height="15" fill="rgb(218,121,17)" fg:x="237447922" fg:w="1285692"/><text x="99.7115%" y="2863.50"></text></g></svg></svg>