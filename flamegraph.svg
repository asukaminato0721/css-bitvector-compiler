<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="3286" onload="init(evt)" viewBox="0 0 1200 3286" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="3286" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="3269.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="3269.00"> </text><svg id="frames" x="10" width="1180" total_samples="1685667291"><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,556,875 samples, 0.33%)</title><rect x="0.0000%" y="3205" width="0.3297%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5556875"/><text x="0.2500%" y="3215.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,003,648 samples, 0.06%)</title><rect x="0.3297%" y="3205" width="0.0595%" height="15" fill="rgb(217,0,24)" fg:x="5556875" fg:w="1003648"/><text x="0.5797%" y="3215.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,537,594 samples, 0.09%)</title><rect x="0.3892%" y="3205" width="0.0912%" height="15" fill="rgb(221,193,54)" fg:x="6560523" fg:w="1537594"/><text x="0.6392%" y="3215.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.03%)</title><rect x="0.4804%" y="3205" width="0.0298%" height="15" fill="rgb(248,212,6)" fg:x="8098117" fg:w="501504"/><text x="0.7304%" y="3215.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.03%)</title><rect x="0.4804%" y="3189" width="0.0298%" height="15" fill="rgb(208,68,35)" fg:x="8098117" fg:w="501504"/><text x="0.7304%" y="3199.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.03%)</title><rect x="0.4804%" y="3173" width="0.0298%" height="15" fill="rgb(232,128,0)" fg:x="8098117" fg:w="501504"/><text x="0.7304%" y="3183.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.03%)</title><rect x="0.4804%" y="3157" width="0.0298%" height="15" fill="rgb(207,160,47)" fg:x="8098117" fg:w="501504"/><text x="0.7304%" y="3167.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.03%)</title><rect x="0.4804%" y="3141" width="0.0298%" height="15" fill="rgb(228,23,34)" fg:x="8098117" fg:w="501504"/><text x="0.7304%" y="3151.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.03%)</title><rect x="0.4804%" y="3125" width="0.0298%" height="15" fill="rgb(218,30,26)" fg:x="8098117" fg:w="501504"/><text x="0.7304%" y="3135.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.03%)</title><rect x="0.4804%" y="3109" width="0.0298%" height="15" fill="rgb(220,122,19)" fg:x="8098117" fg:w="501504"/><text x="0.7304%" y="3119.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.03%)</title><rect x="0.4804%" y="3093" width="0.0298%" height="15" fill="rgb(250,228,42)" fg:x="8098117" fg:w="501504"/><text x="0.7304%" y="3103.50"></text></g><g><title>[libc.so.6] (4,979,643 samples, 0.30%)</title><rect x="1.0995%" y="3189" width="0.2954%" height="15" fill="rgb(240,193,28)" fg:x="18534719" fg:w="4979643"/><text x="1.3495%" y="3199.50"></text></g><g><title>[libc.so.6] (17,831,095 samples, 1.06%)</title><rect x="0.5102%" y="3205" width="1.0578%" height="15" fill="rgb(216,20,37)" fg:x="8599621" fg:w="17831095"/><text x="0.7602%" y="3215.50"></text></g><g><title>malloc (2,916,354 samples, 0.17%)</title><rect x="1.3950%" y="3189" width="0.1730%" height="15" fill="rgb(206,188,39)" fg:x="23514362" fg:w="2916354"/><text x="1.6450%" y="3199.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,576,417 samples, 0.15%)</title><rect x="1.8091%" y="3189" width="0.1528%" height="15" fill="rgb(217,207,13)" fg:x="30495895" fg:w="2576417"/><text x="2.0591%" y="3199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,253,772 samples, 0.31%)</title><rect x="1.9620%" y="3189" width="0.3117%" height="15" fill="rgb(231,73,38)" fg:x="33072312" fg:w="5253772"/><text x="2.2120%" y="3199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,253,772 samples, 0.31%)</title><rect x="1.9620%" y="3173" width="0.3117%" height="15" fill="rgb(225,20,46)" fg:x="33072312" fg:w="5253772"/><text x="2.2120%" y="3183.50"></text></g><g><title>alloc::slice::hack::to_vec (5,253,772 samples, 0.31%)</title><rect x="1.9620%" y="3157" width="0.3117%" height="15" fill="rgb(210,31,41)" fg:x="33072312" fg:w="5253772"/><text x="2.2120%" y="3167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,253,772 samples, 0.31%)</title><rect x="1.9620%" y="3141" width="0.3117%" height="15" fill="rgb(221,200,47)" fg:x="33072312" fg:w="5253772"/><text x="2.2120%" y="3151.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (5,253,772 samples, 0.31%)</title><rect x="1.9620%" y="3125" width="0.3117%" height="15" fill="rgb(226,26,5)" fg:x="33072312" fg:w="5253772"/><text x="2.2120%" y="3135.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,728,605 samples, 0.16%)</title><rect x="2.1118%" y="3109" width="0.1619%" height="15" fill="rgb(249,33,26)" fg:x="35597479" fg:w="2728605"/><text x="2.3618%" y="3119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,728,605 samples, 0.16%)</title><rect x="2.1118%" y="3093" width="0.1619%" height="15" fill="rgb(235,183,28)" fg:x="35597479" fg:w="2728605"/><text x="2.3618%" y="3103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,728,605 samples, 0.16%)</title><rect x="2.1118%" y="3077" width="0.1619%" height="15" fill="rgb(221,5,38)" fg:x="35597479" fg:w="2728605"/><text x="2.3618%" y="3087.50"></text></g><g><title>alloc::slice::hack::to_vec (2,728,605 samples, 0.16%)</title><rect x="2.1118%" y="3061" width="0.1619%" height="15" fill="rgb(247,18,42)" fg:x="35597479" fg:w="2728605"/><text x="2.3618%" y="3071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,728,605 samples, 0.16%)</title><rect x="2.1118%" y="3045" width="0.1619%" height="15" fill="rgb(241,131,45)" fg:x="35597479" fg:w="2728605"/><text x="2.3618%" y="3055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,728,605 samples, 0.16%)</title><rect x="2.1118%" y="3029" width="0.1619%" height="15" fill="rgb(249,31,29)" fg:x="35597479" fg:w="2728605"/><text x="2.3618%" y="3039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,728,605 samples, 0.16%)</title><rect x="2.1118%" y="3013" width="0.1619%" height="15" fill="rgb(225,111,53)" fg:x="35597479" fg:w="2728605"/><text x="2.3618%" y="3023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,728,605 samples, 0.16%)</title><rect x="2.1118%" y="2997" width="0.1619%" height="15" fill="rgb(238,160,17)" fg:x="35597479" fg:w="2728605"/><text x="2.3618%" y="3007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,728,605 samples, 0.16%)</title><rect x="2.1118%" y="2981" width="0.1619%" height="15" fill="rgb(214,148,48)" fg:x="35597479" fg:w="2728605"/><text x="2.3618%" y="2991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,728,605 samples, 0.16%)</title><rect x="2.1118%" y="2965" width="0.1619%" height="15" fill="rgb(232,36,49)" fg:x="35597479" fg:w="2728605"/><text x="2.3618%" y="2975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,728,605 samples, 0.16%)</title><rect x="2.1118%" y="2949" width="0.1619%" height="15" fill="rgb(209,103,24)" fg:x="35597479" fg:w="2728605"/><text x="2.3618%" y="2959.50"></text></g><g><title>alloc::alloc::alloc (2,728,605 samples, 0.16%)</title><rect x="2.1118%" y="2933" width="0.1619%" height="15" fill="rgb(229,88,8)" fg:x="35597479" fg:w="2728605"/><text x="2.3618%" y="2943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13,591,376 samples, 0.81%)</title><rect x="2.2736%" y="3189" width="0.8063%" height="15" fill="rgb(213,181,19)" fg:x="38326084" fg:w="13591376"/><text x="2.5236%" y="3199.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,413,606 samples, 0.32%)</title><rect x="3.0799%" y="3189" width="0.3212%" height="15" fill="rgb(254,191,54)" fg:x="51917460" fg:w="5413606"/><text x="3.3299%" y="3199.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (2,735,248 samples, 0.16%)</title><rect x="3.2388%" y="3173" width="0.1623%" height="15" fill="rgb(241,83,37)" fg:x="54595818" fg:w="2735248"/><text x="3.4888%" y="3183.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,884,251 samples, 0.17%)</title><rect x="3.4011%" y="3189" width="0.1711%" height="15" fill="rgb(233,36,39)" fg:x="57331066" fg:w="2884251"/><text x="3.6511%" y="3199.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,884,251 samples, 0.17%)</title><rect x="3.4011%" y="3173" width="0.1711%" height="15" fill="rgb(226,3,54)" fg:x="57331066" fg:w="2884251"/><text x="3.6511%" y="3183.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2,884,251 samples, 0.17%)</title><rect x="3.4011%" y="3157" width="0.1711%" height="15" fill="rgb(245,192,40)" fg:x="57331066" fg:w="2884251"/><text x="3.6511%" y="3167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,884,251 samples, 0.17%)</title><rect x="3.4011%" y="3141" width="0.1711%" height="15" fill="rgb(238,167,29)" fg:x="57331066" fg:w="2884251"/><text x="3.6511%" y="3151.50"></text></g><g><title>alloc::alloc::dealloc (2,884,251 samples, 0.17%)</title><rect x="3.4011%" y="3125" width="0.1711%" height="15" fill="rgb(232,182,51)" fg:x="57331066" fg:w="2884251"/><text x="3.6511%" y="3135.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,711,123 samples, 0.10%)</title><rect x="3.5722%" y="3173" width="0.1015%" height="15" fill="rgb(231,60,39)" fg:x="60215317" fg:w="1711123"/><text x="3.8222%" y="3183.50"></text></g><g><title>serde::de::MapAccess::next_value (1,711,123 samples, 0.10%)</title><rect x="3.5722%" y="3157" width="0.1015%" height="15" fill="rgb(208,69,12)" fg:x="60215317" fg:w="1711123"/><text x="3.8222%" y="3167.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,711,123 samples, 0.10%)</title><rect x="3.5722%" y="3141" width="0.1015%" height="15" fill="rgb(235,93,37)" fg:x="60215317" fg:w="1711123"/><text x="3.8222%" y="3151.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,711,123 samples, 0.10%)</title><rect x="3.5722%" y="3125" width="0.1015%" height="15" fill="rgb(213,116,39)" fg:x="60215317" fg:w="1711123"/><text x="3.8222%" y="3135.50"></text></g><g><title>[unknown] (4,204,587 samples, 0.25%)</title><rect x="3.5722%" y="3189" width="0.2494%" height="15" fill="rgb(222,207,29)" fg:x="60215317" fg:w="4204587"/><text x="3.8222%" y="3199.50"></text></g><g><title>main::benchmark::clear_dirty_flags (2,493,464 samples, 0.15%)</title><rect x="3.6737%" y="3173" width="0.1479%" height="15" fill="rgb(206,96,30)" fg:x="61926440" fg:w="2493464"/><text x="3.9237%" y="3183.50"></text></g><g><title>cfree (10,655,873 samples, 0.63%)</title><rect x="3.8216%" y="3189" width="0.6321%" height="15" fill="rgb(218,138,4)" fg:x="64419904" fg:w="10655873"/><text x="4.0716%" y="3199.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20,274,413 samples, 1.20%)</title><rect x="4.4538%" y="3189" width="1.2028%" height="15" fill="rgb(250,191,14)" fg:x="75075777" fg:w="20274413"/><text x="4.7038%" y="3199.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (9,943,090 samples, 0.59%)</title><rect x="5.0667%" y="3173" width="0.5899%" height="15" fill="rgb(239,60,40)" fg:x="85407100" fg:w="9943090"/><text x="5.3167%" y="3183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (9,943,090 samples, 0.59%)</title><rect x="5.0667%" y="3157" width="0.5899%" height="15" fill="rgb(206,27,48)" fg:x="85407100" fg:w="9943090"/><text x="5.3167%" y="3167.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (9,943,090 samples, 0.59%)</title><rect x="5.0667%" y="3141" width="0.5899%" height="15" fill="rgb(225,35,8)" fg:x="85407100" fg:w="9943090"/><text x="5.3167%" y="3151.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (9,943,090 samples, 0.59%)</title><rect x="5.0667%" y="3125" width="0.5899%" height="15" fill="rgb(250,213,24)" fg:x="85407100" fg:w="9943090"/><text x="5.3167%" y="3135.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (9,943,090 samples, 0.59%)</title><rect x="5.0667%" y="3109" width="0.5899%" height="15" fill="rgb(247,123,22)" fg:x="85407100" fg:w="9943090"/><text x="5.3167%" y="3119.50"></text></g><g><title>core::hash::Hasher::write_u8 (7,448,026 samples, 0.44%)</title><rect x="5.2147%" y="3093" width="0.4418%" height="15" fill="rgb(231,138,38)" fg:x="87902164" fg:w="7448026"/><text x="5.4647%" y="3103.50"></text></g><g><title>[unknown] (71,781,260 samples, 4.26%)</title><rect x="1.5680%" y="3205" width="4.2583%" height="15" fill="rgb(231,145,46)" fg:x="26430716" fg:w="71781260"/><text x="1.8180%" y="3215.50">[unkn..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_incremental (2,861,786 samples, 0.17%)</title><rect x="5.6565%" y="3189" width="0.1698%" height="15" fill="rgb(251,118,11)" fg:x="95350190" fg:w="2861786"/><text x="5.9065%" y="3199.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::matches_class_id (2,861,786 samples, 0.17%)</title><rect x="5.6565%" y="3173" width="0.1698%" height="15" fill="rgb(217,147,25)" fg:x="95350190" fg:w="2861786"/><text x="5.9065%" y="3183.50"></text></g><g><title>__rdl_dealloc (4,729,913 samples, 0.28%)</title><rect x="5.8263%" y="3205" width="0.2806%" height="15" fill="rgb(247,81,37)" fg:x="98211976" fg:w="4729913"/><text x="6.0763%" y="3215.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4,729,913 samples, 0.28%)</title><rect x="5.8263%" y="3189" width="0.2806%" height="15" fill="rgb(209,12,38)" fg:x="98211976" fg:w="4729913"/><text x="6.0763%" y="3199.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2,226,276 samples, 0.13%)</title><rect x="6.1069%" y="3205" width="0.1321%" height="15" fill="rgb(227,1,9)" fg:x="102941889" fg:w="2226276"/><text x="6.3569%" y="3215.50"></text></g><g><title>cfree (15,632,699 samples, 0.93%)</title><rect x="6.2390%" y="3205" width="0.9274%" height="15" fill="rgb(248,47,43)" fg:x="105168165" fg:w="15632699"/><text x="6.4890%" y="3215.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (1,657,600 samples, 0.10%)</title><rect x="7.1664%" y="3205" width="0.0983%" height="15" fill="rgb(221,10,30)" fg:x="120800864" fg:w="1657600"/><text x="7.4164%" y="3215.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with (1,657,600 samples, 0.10%)</title><rect x="7.1664%" y="3189" width="0.0983%" height="15" fill="rgb(210,229,1)" fg:x="120800864" fg:w="1657600"/><text x="7.4164%" y="3199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,657,600 samples, 0.10%)</title><rect x="7.1664%" y="3173" width="0.0983%" height="15" fill="rgb(222,148,37)" fg:x="120800864" fg:w="1657600"/><text x="7.4164%" y="3183.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with::_{{closure}} (1,657,600 samples, 0.10%)</title><rect x="7.1664%" y="3157" width="0.0983%" height="15" fill="rgb(234,67,33)" fg:x="120800864" fg:w="1657600"/><text x="7.4164%" y="3167.50"></text></g><g><title>core::fmt::builders::DebugSet::entry::_{{closure}} (1,657,600 samples, 0.10%)</title><rect x="7.1664%" y="3141" width="0.0983%" height="15" fill="rgb(247,98,35)" fg:x="120800864" fg:w="1657600"/><text x="7.4164%" y="3151.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1,657,600 samples, 0.10%)</title><rect x="7.1664%" y="3125" width="0.0983%" height="15" fill="rgb(247,138,52)" fg:x="120800864" fg:w="1657600"/><text x="7.4164%" y="3135.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9,356,516 samples, 0.56%)</title><rect x="7.2647%" y="3205" width="0.5551%" height="15" fill="rgb(213,79,30)" fg:x="122458464" fg:w="9356516"/><text x="7.5147%" y="3215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,043,459 samples, 0.18%)</title><rect x="7.9829%" y="3189" width="0.1805%" height="15" fill="rgb(246,177,23)" fg:x="134564662" fg:w="3043459"/><text x="8.2329%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,043,459 samples, 0.18%)</title><rect x="7.9829%" y="3173" width="0.1805%" height="15" fill="rgb(230,62,27)" fg:x="134564662" fg:w="3043459"/><text x="8.2329%" y="3183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,043,459 samples, 0.18%)</title><rect x="7.9829%" y="3157" width="0.1805%" height="15" fill="rgb(216,154,8)" fg:x="134564662" fg:w="3043459"/><text x="8.2329%" y="3167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,043,459 samples, 0.18%)</title><rect x="7.9829%" y="3141" width="0.1805%" height="15" fill="rgb(244,35,45)" fg:x="134564662" fg:w="3043459"/><text x="8.2329%" y="3151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,043,459 samples, 0.18%)</title><rect x="7.9829%" y="3125" width="0.1805%" height="15" fill="rgb(251,115,12)" fg:x="134564662" fg:w="3043459"/><text x="8.2329%" y="3135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,043,459 samples, 0.18%)</title><rect x="7.9829%" y="3109" width="0.1805%" height="15" fill="rgb(240,54,50)" fg:x="134564662" fg:w="3043459"/><text x="8.2329%" y="3119.50"></text></g><g><title>alloc::alloc::dealloc (3,043,459 samples, 0.18%)</title><rect x="7.9829%" y="3093" width="0.1805%" height="15" fill="rgb(233,84,52)" fg:x="134564662" fg:w="3043459"/><text x="8.2329%" y="3103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,056,056 samples, 0.30%)</title><rect x="8.1634%" y="3173" width="0.2999%" height="15" fill="rgb(207,117,47)" fg:x="137608121" fg:w="5056056"/><text x="8.4134%" y="3183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,056,056 samples, 0.30%)</title><rect x="8.1634%" y="3157" width="0.2999%" height="15" fill="rgb(249,43,39)" fg:x="137608121" fg:w="5056056"/><text x="8.4134%" y="3167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,297,438 samples, 0.43%)</title><rect x="8.1634%" y="3189" width="0.4329%" height="15" fill="rgb(209,38,44)" fg:x="137608121" fg:w="7297438"/><text x="8.4134%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,241,382 samples, 0.13%)</title><rect x="8.4634%" y="3173" width="0.1330%" height="15" fill="rgb(236,212,23)" fg:x="142664177" fg:w="2241382"/><text x="8.7134%" y="3183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,241,382 samples, 0.13%)</title><rect x="8.4634%" y="3157" width="0.1330%" height="15" fill="rgb(242,79,21)" fg:x="142664177" fg:w="2241382"/><text x="8.7134%" y="3167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,241,382 samples, 0.13%)</title><rect x="8.4634%" y="3141" width="0.1330%" height="15" fill="rgb(211,96,35)" fg:x="142664177" fg:w="2241382"/><text x="8.7134%" y="3151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,241,382 samples, 0.13%)</title><rect x="8.4634%" y="3125" width="0.1330%" height="15" fill="rgb(253,215,40)" fg:x="142664177" fg:w="2241382"/><text x="8.7134%" y="3135.50"></text></g><g><title>alloc::alloc::dealloc (2,241,382 samples, 0.13%)</title><rect x="8.4634%" y="3109" width="0.1330%" height="15" fill="rgb(211,81,21)" fg:x="142664177" fg:w="2241382"/><text x="8.7134%" y="3119.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (15,990,488 samples, 0.95%)</title><rect x="7.8198%" y="3205" width="0.9486%" height="15" fill="rgb(208,190,38)" fg:x="131814980" fg:w="15990488"/><text x="8.0698%" y="3215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,899,909 samples, 0.17%)</title><rect x="8.5963%" y="3189" width="0.1720%" height="15" fill="rgb(235,213,38)" fg:x="144905559" fg:w="2899909"/><text x="8.8463%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,899,909 samples, 0.17%)</title><rect x="8.5963%" y="3173" width="0.1720%" height="15" fill="rgb(237,122,38)" fg:x="144905559" fg:w="2899909"/><text x="8.8463%" y="3183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,899,909 samples, 0.17%)</title><rect x="8.5963%" y="3157" width="0.1720%" height="15" fill="rgb(244,218,35)" fg:x="144905559" fg:w="2899909"/><text x="8.8463%" y="3167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,899,909 samples, 0.17%)</title><rect x="8.5963%" y="3141" width="0.1720%" height="15" fill="rgb(240,68,47)" fg:x="144905559" fg:w="2899909"/><text x="8.8463%" y="3151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,909 samples, 0.17%)</title><rect x="8.5963%" y="3125" width="0.1720%" height="15" fill="rgb(210,16,53)" fg:x="144905559" fg:w="2899909"/><text x="8.8463%" y="3135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,899,909 samples, 0.17%)</title><rect x="8.5963%" y="3109" width="0.1720%" height="15" fill="rgb(235,124,12)" fg:x="144905559" fg:w="2899909"/><text x="8.8463%" y="3119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,899,909 samples, 0.17%)</title><rect x="8.5963%" y="3093" width="0.1720%" height="15" fill="rgb(224,169,11)" fg:x="144905559" fg:w="2899909"/><text x="8.8463%" y="3103.50"></text></g><g><title>alloc::alloc::dealloc (2,899,909 samples, 0.17%)</title><rect x="8.5963%" y="3077" width="0.1720%" height="15" fill="rgb(250,166,2)" fg:x="144905559" fg:w="2899909"/><text x="8.8463%" y="3087.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (5,612,041 samples, 0.33%)</title><rect x="8.7684%" y="3205" width="0.3329%" height="15" fill="rgb(242,216,29)" fg:x="147805468" fg:w="5612041"/><text x="9.0184%" y="3215.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::node_has_class_id (7,756,529 samples, 0.46%)</title><rect x="9.1013%" y="3205" width="0.4601%" height="15" fill="rgb(230,116,27)" fg:x="153417509" fg:w="7756529"/><text x="9.3513%" y="3215.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5,284,516 samples, 0.31%)</title><rect x="9.2479%" y="3189" width="0.3135%" height="15" fill="rgb(228,99,48)" fg:x="155889522" fg:w="5284516"/><text x="9.4979%" y="3199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5,284,516 samples, 0.31%)</title><rect x="9.2479%" y="3173" width="0.3135%" height="15" fill="rgb(253,11,6)" fg:x="155889522" fg:w="5284516"/><text x="9.4979%" y="3183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5,284,516 samples, 0.31%)</title><rect x="9.2479%" y="3157" width="0.3135%" height="15" fill="rgb(247,143,39)" fg:x="155889522" fg:w="5284516"/><text x="9.4979%" y="3167.50"></text></g><g><title>hashbrown::map::make_hash (5,284,516 samples, 0.31%)</title><rect x="9.2479%" y="3141" width="0.3135%" height="15" fill="rgb(236,97,10)" fg:x="155889522" fg:w="5284516"/><text x="9.4979%" y="3151.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::node_has_class_id (10,842,533 samples, 0.64%)</title><rect x="9.5614%" y="3205" width="0.6432%" height="15" fill="rgb(233,208,19)" fg:x="161174038" fg:w="10842533"/><text x="9.8114%" y="3215.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5,426,415 samples, 0.32%)</title><rect x="9.8827%" y="3189" width="0.3219%" height="15" fill="rgb(216,164,2)" fg:x="166590156" fg:w="5426415"/><text x="10.1327%" y="3199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5,426,415 samples, 0.32%)</title><rect x="9.8827%" y="3173" width="0.3219%" height="15" fill="rgb(220,129,5)" fg:x="166590156" fg:w="5426415"/><text x="10.1327%" y="3183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5,426,415 samples, 0.32%)</title><rect x="9.8827%" y="3157" width="0.3219%" height="15" fill="rgb(242,17,10)" fg:x="166590156" fg:w="5426415"/><text x="10.1327%" y="3167.50"></text></g><g><title>hashbrown::map::make_hash (5,426,415 samples, 0.32%)</title><rect x="9.8827%" y="3141" width="0.3219%" height="15" fill="rgb(242,107,0)" fg:x="166590156" fg:w="5426415"/><text x="10.1327%" y="3151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;main::benchmark::WebLayoutFrameResult&gt;&gt; (5,843,739 samples, 0.35%)</title><rect x="10.2047%" y="2933" width="0.3467%" height="15" fill="rgb(251,28,31)" fg:x="172016571" fg:w="5843739"/><text x="10.4547%" y="2943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,843,739 samples, 0.35%)</title><rect x="10.2047%" y="2917" width="0.3467%" height="15" fill="rgb(233,223,10)" fg:x="172016571" fg:w="5843739"/><text x="10.4547%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::WebLayoutFrameResult]&gt; (5,843,739 samples, 0.35%)</title><rect x="10.2047%" y="2901" width="0.3467%" height="15" fill="rgb(215,21,27)" fg:x="172016571" fg:w="5843739"/><text x="10.4547%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::WebLayoutFrameResult&gt; (5,843,739 samples, 0.35%)</title><rect x="10.2047%" y="2885" width="0.3467%" height="15" fill="rgb(232,23,21)" fg:x="172016571" fg:w="5843739"/><text x="10.4547%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5,843,739 samples, 0.35%)</title><rect x="10.2047%" y="2869" width="0.3467%" height="15" fill="rgb(244,5,23)" fg:x="172016571" fg:w="5843739"/><text x="10.4547%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5,843,739 samples, 0.35%)</title><rect x="10.2047%" y="2853" width="0.3467%" height="15" fill="rgb(226,81,46)" fg:x="172016571" fg:w="5843739"/><text x="10.4547%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5,843,739 samples, 0.35%)</title><rect x="10.2047%" y="2837" width="0.3467%" height="15" fill="rgb(247,70,30)" fg:x="172016571" fg:w="5843739"/><text x="10.4547%" y="2847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,843,739 samples, 0.35%)</title><rect x="10.2047%" y="2821" width="0.3467%" height="15" fill="rgb(212,68,19)" fg:x="172016571" fg:w="5843739"/><text x="10.4547%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,843,739 samples, 0.35%)</title><rect x="10.2047%" y="2805" width="0.3467%" height="15" fill="rgb(240,187,13)" fg:x="172016571" fg:w="5843739"/><text x="10.4547%" y="2815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,843,739 samples, 0.35%)</title><rect x="10.2047%" y="2789" width="0.3467%" height="15" fill="rgb(223,113,26)" fg:x="172016571" fg:w="5843739"/><text x="10.4547%" y="2799.50"></text></g><g><title>alloc::alloc::dealloc (5,843,739 samples, 0.35%)</title><rect x="10.2047%" y="2773" width="0.3467%" height="15" fill="rgb(206,192,2)" fg:x="172016571" fg:w="5843739"/><text x="10.4547%" y="2783.50"></text></g><g><title>cfree (5,843,739 samples, 0.35%)</title><rect x="10.2047%" y="2757" width="0.3467%" height="15" fill="rgb(241,108,4)" fg:x="172016571" fg:w="5843739"/><text x="10.4547%" y="2767.50"></text></g><g><title>[libc.so.6] (5,843,739 samples, 0.35%)</title><rect x="10.2047%" y="2741" width="0.3467%" height="15" fill="rgb(247,173,49)" fg:x="172016571" fg:w="5843739"/><text x="10.4547%" y="2751.50"></text></g><g><title>[libc.so.6] (5,843,739 samples, 0.35%)</title><rect x="10.2047%" y="2725" width="0.3467%" height="15" fill="rgb(224,114,35)" fg:x="172016571" fg:w="5843739"/><text x="10.4547%" y="2735.50"></text></g><g><title>[libc.so.6] (2,932,047 samples, 0.17%)</title><rect x="10.3774%" y="2709" width="0.1739%" height="15" fill="rgb(245,159,27)" fg:x="174928263" fg:w="2932047"/><text x="10.6274%" y="2719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7,816,784 samples, 0.46%)</title><rect x="10.5513%" y="2837" width="0.4637%" height="15" fill="rgb(245,172,44)" fg:x="177860310" fg:w="7816784"/><text x="10.8013%" y="2847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,816,784 samples, 0.46%)</title><rect x="10.5513%" y="2821" width="0.4637%" height="15" fill="rgb(236,23,11)" fg:x="177860310" fg:w="7816784"/><text x="10.8013%" y="2831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,816,784 samples, 0.46%)</title><rect x="10.5513%" y="2805" width="0.4637%" height="15" fill="rgb(205,117,38)" fg:x="177860310" fg:w="7816784"/><text x="10.8013%" y="2815.50"></text></g><g><title>alloc::slice::hack::to_vec (7,816,784 samples, 0.46%)</title><rect x="10.5513%" y="2789" width="0.4637%" height="15" fill="rgb(237,72,25)" fg:x="177860310" fg:w="7816784"/><text x="10.8013%" y="2799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,816,784 samples, 0.46%)</title><rect x="10.5513%" y="2773" width="0.4637%" height="15" fill="rgb(244,70,9)" fg:x="177860310" fg:w="7816784"/><text x="10.8013%" y="2783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (7,816,784 samples, 0.46%)</title><rect x="10.5513%" y="2757" width="0.4637%" height="15" fill="rgb(217,125,39)" fg:x="177860310" fg:w="7816784"/><text x="10.8013%" y="2767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7,816,784 samples, 0.46%)</title><rect x="10.5513%" y="2741" width="0.4637%" height="15" fill="rgb(235,36,10)" fg:x="177860310" fg:w="7816784"/><text x="10.8013%" y="2751.50"></text></g><g><title>[libc.so.6] (7,816,784 samples, 0.46%)</title><rect x="10.5513%" y="2725" width="0.4637%" height="15" fill="rgb(251,123,47)" fg:x="177860310" fg:w="7816784"/><text x="10.8013%" y="2735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,811,819 samples, 0.17%)</title><rect x="11.0150%" y="2821" width="0.1668%" height="15" fill="rgb(221,13,13)" fg:x="185677094" fg:w="2811819"/><text x="11.2650%" y="2831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,811,819 samples, 0.17%)</title><rect x="11.0150%" y="2805" width="0.1668%" height="15" fill="rgb(238,131,9)" fg:x="185677094" fg:w="2811819"/><text x="11.2650%" y="2815.50"></text></g><g><title>alloc::slice::hack::to_vec (2,811,819 samples, 0.17%)</title><rect x="11.0150%" y="2789" width="0.1668%" height="15" fill="rgb(211,50,8)" fg:x="185677094" fg:w="2811819"/><text x="11.2650%" y="2799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,811,819 samples, 0.17%)</title><rect x="11.0150%" y="2773" width="0.1668%" height="15" fill="rgb(245,182,24)" fg:x="185677094" fg:w="2811819"/><text x="11.2650%" y="2783.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,811,819 samples, 0.17%)</title><rect x="11.0150%" y="2757" width="0.1668%" height="15" fill="rgb(242,14,37)" fg:x="185677094" fg:w="2811819"/><text x="11.2650%" y="2767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,588,423 samples, 0.09%)</title><rect x="11.1819%" y="1477" width="0.0942%" height="15" fill="rgb(246,228,12)" fg:x="188488913" fg:w="1588423"/><text x="11.4319%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,588,423 samples, 0.09%)</title><rect x="11.1819%" y="1461" width="0.0942%" height="15" fill="rgb(213,55,15)" fg:x="188488913" fg:w="1588423"/><text x="11.4319%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,588,423 samples, 0.09%)</title><rect x="11.1819%" y="1445" width="0.0942%" height="15" fill="rgb(209,9,3)" fg:x="188488913" fg:w="1588423"/><text x="11.4319%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (1,588,423 samples, 0.09%)</title><rect x="11.1819%" y="1429" width="0.0942%" height="15" fill="rgb(230,59,30)" fg:x="188488913" fg:w="1588423"/><text x="11.4319%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,588,423 samples, 0.09%)</title><rect x="11.1819%" y="1413" width="0.0942%" height="15" fill="rgb(209,121,21)" fg:x="188488913" fg:w="1588423"/><text x="11.4319%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,588,423 samples, 0.09%)</title><rect x="11.1819%" y="1397" width="0.0942%" height="15" fill="rgb(220,109,13)" fg:x="188488913" fg:w="1588423"/><text x="11.4319%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,588,423 samples, 0.09%)</title><rect x="11.1819%" y="1381" width="0.0942%" height="15" fill="rgb(232,18,1)" fg:x="188488913" fg:w="1588423"/><text x="11.4319%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,588,423 samples, 0.09%)</title><rect x="11.1819%" y="1365" width="0.0942%" height="15" fill="rgb(215,41,42)" fg:x="188488913" fg:w="1588423"/><text x="11.4319%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,588,423 samples, 0.09%)</title><rect x="11.1819%" y="1349" width="0.0942%" height="15" fill="rgb(224,123,36)" fg:x="188488913" fg:w="1588423"/><text x="11.4319%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,588,423 samples, 0.09%)</title><rect x="11.1819%" y="1333" width="0.0942%" height="15" fill="rgb(240,125,3)" fg:x="188488913" fg:w="1588423"/><text x="11.4319%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,588,423 samples, 0.09%)</title><rect x="11.1819%" y="1317" width="0.0942%" height="15" fill="rgb(205,98,50)" fg:x="188488913" fg:w="1588423"/><text x="11.4319%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (1,588,423 samples, 0.09%)</title><rect x="11.1819%" y="1301" width="0.0942%" height="15" fill="rgb(205,185,37)" fg:x="188488913" fg:w="1588423"/><text x="11.4319%" y="1311.50"></text></g><g><title>__rdl_alloc (1,588,423 samples, 0.09%)</title><rect x="11.1819%" y="1285" width="0.0942%" height="15" fill="rgb(238,207,15)" fg:x="188488913" fg:w="1588423"/><text x="11.4319%" y="1295.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,588,423 samples, 0.09%)</title><rect x="11.1819%" y="1269" width="0.0942%" height="15" fill="rgb(213,199,42)" fg:x="188488913" fg:w="1588423"/><text x="11.4319%" y="1279.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,026,809 samples, 0.30%)</title><rect x="11.1819%" y="1621" width="0.2982%" height="15" fill="rgb(235,201,11)" fg:x="188488913" fg:w="5026809"/><text x="11.4319%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,026,809 samples, 0.30%)</title><rect x="11.1819%" y="1605" width="0.2982%" height="15" fill="rgb(207,46,11)" fg:x="188488913" fg:w="5026809"/><text x="11.4319%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,026,809 samples, 0.30%)</title><rect x="11.1819%" y="1589" width="0.2982%" height="15" fill="rgb(241,35,35)" fg:x="188488913" fg:w="5026809"/><text x="11.4319%" y="1599.50"></text></g><g><title>alloc::slice::hack::to_vec (5,026,809 samples, 0.30%)</title><rect x="11.1819%" y="1573" width="0.2982%" height="15" fill="rgb(243,32,47)" fg:x="188488913" fg:w="5026809"/><text x="11.4319%" y="1583.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,026,809 samples, 0.30%)</title><rect x="11.1819%" y="1557" width="0.2982%" height="15" fill="rgb(247,202,23)" fg:x="188488913" fg:w="5026809"/><text x="11.4319%" y="1567.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,026,809 samples, 0.30%)</title><rect x="11.1819%" y="1541" width="0.2982%" height="15" fill="rgb(219,102,11)" fg:x="188488913" fg:w="5026809"/><text x="11.4319%" y="1551.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,026,809 samples, 0.30%)</title><rect x="11.1819%" y="1525" width="0.2982%" height="15" fill="rgb(243,110,44)" fg:x="188488913" fg:w="5026809"/><text x="11.4319%" y="1535.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,026,809 samples, 0.30%)</title><rect x="11.1819%" y="1509" width="0.2982%" height="15" fill="rgb(222,74,54)" fg:x="188488913" fg:w="5026809"/><text x="11.4319%" y="1519.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,026,809 samples, 0.30%)</title><rect x="11.1819%" y="1493" width="0.2982%" height="15" fill="rgb(216,99,12)" fg:x="188488913" fg:w="5026809"/><text x="11.4319%" y="1503.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1477" width="0.2040%" height="15" fill="rgb(226,22,26)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1461" width="0.2040%" height="15" fill="rgb(217,163,10)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1445" width="0.2040%" height="15" fill="rgb(213,25,53)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1429" width="0.2040%" height="15" fill="rgb(252,105,26)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1413" width="0.2040%" height="15" fill="rgb(220,39,43)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1423.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1397" width="0.2040%" height="15" fill="rgb(229,68,48)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1407.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1381" width="0.2040%" height="15" fill="rgb(252,8,32)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1365" width="0.2040%" height="15" fill="rgb(223,20,43)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1375.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1349" width="0.2040%" height="15" fill="rgb(229,81,49)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1359.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1333" width="0.2040%" height="15" fill="rgb(236,28,36)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1317" width="0.2040%" height="15" fill="rgb(249,185,26)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1301" width="0.2040%" height="15" fill="rgb(249,174,33)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1311.50"></text></g><g><title>alloc::slice::hack::to_vec (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1285" width="0.2040%" height="15" fill="rgb(233,201,37)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1269" width="0.2040%" height="15" fill="rgb(221,78,26)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1279.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1253" width="0.2040%" height="15" fill="rgb(250,127,30)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1263.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1237" width="0.2040%" height="15" fill="rgb(230,49,44)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1221" width="0.2040%" height="15" fill="rgb(229,67,23)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1231.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1205" width="0.2040%" height="15" fill="rgb(249,83,47)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1215.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1189" width="0.2040%" height="15" fill="rgb(215,43,3)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1173" width="0.2040%" height="15" fill="rgb(238,154,13)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1157" width="0.2040%" height="15" fill="rgb(219,56,2)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1141" width="0.2040%" height="15" fill="rgb(233,0,4)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1125" width="0.2040%" height="15" fill="rgb(235,30,7)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1135.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1109" width="0.2040%" height="15" fill="rgb(250,79,13)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1119.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1093" width="0.2040%" height="15" fill="rgb(211,146,34)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1077" width="0.2040%" height="15" fill="rgb(228,22,38)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1061" width="0.2040%" height="15" fill="rgb(235,168,5)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1071.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1045" width="0.2040%" height="15" fill="rgb(221,155,16)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1029" width="0.2040%" height="15" fill="rgb(215,215,53)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="1013" width="0.2040%" height="15" fill="rgb(223,4,10)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="997" width="0.2040%" height="15" fill="rgb(234,103,6)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="981" width="0.2040%" height="15" fill="rgb(227,97,0)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="991.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="965" width="0.2040%" height="15" fill="rgb(234,150,53)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="975.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="949" width="0.2040%" height="15" fill="rgb(228,201,54)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,438,386 samples, 0.20%)</title><rect x="11.2761%" y="933" width="0.2040%" height="15" fill="rgb(222,22,37)" fg:x="190077336" fg:w="3438386"/><text x="11.5261%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="917" width="0.1074%" height="15" fill="rgb(237,53,32)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="927.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="901" width="0.1074%" height="15" fill="rgb(233,25,53)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="885" width="0.1074%" height="15" fill="rgb(210,40,34)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="869" width="0.1074%" height="15" fill="rgb(241,220,44)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="853" width="0.1074%" height="15" fill="rgb(235,28,35)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="837" width="0.1074%" height="15" fill="rgb(210,56,17)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="847.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="821" width="0.1074%" height="15" fill="rgb(224,130,29)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="831.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="805" width="0.1074%" height="15" fill="rgb(235,212,8)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="789" width="0.1074%" height="15" fill="rgb(223,33,50)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="773" width="0.1074%" height="15" fill="rgb(219,149,13)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="783.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="757" width="0.1074%" height="15" fill="rgb(250,156,29)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="741" width="0.1074%" height="15" fill="rgb(216,193,19)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="725" width="0.1074%" height="15" fill="rgb(216,135,14)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="709" width="0.1074%" height="15" fill="rgb(241,47,5)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="693" width="0.1074%" height="15" fill="rgb(233,42,35)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="703.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="677" width="0.1074%" height="15" fill="rgb(231,13,6)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="687.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="661" width="0.1074%" height="15" fill="rgb(207,181,40)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="645" width="0.1074%" height="15" fill="rgb(254,173,49)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="629" width="0.1074%" height="15" fill="rgb(221,1,38)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,810,158 samples, 0.11%)</title><rect x="11.3727%" y="613" width="0.1074%" height="15" fill="rgb(206,124,46)" fg:x="191705564" fg:w="1810158"/><text x="11.6227%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,591,060 samples, 0.39%)</title><rect x="11.1819%" y="1749" width="0.3910%" height="15" fill="rgb(249,21,11)" fg:x="188488913" fg:w="6591060"/><text x="11.4319%" y="1759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,591,060 samples, 0.39%)</title><rect x="11.1819%" y="1733" width="0.3910%" height="15" fill="rgb(222,201,40)" fg:x="188488913" fg:w="6591060"/><text x="11.4319%" y="1743.50"></text></g><g><title>alloc::slice::hack::to_vec (6,591,060 samples, 0.39%)</title><rect x="11.1819%" y="1717" width="0.3910%" height="15" fill="rgb(235,61,29)" fg:x="188488913" fg:w="6591060"/><text x="11.4319%" y="1727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,591,060 samples, 0.39%)</title><rect x="11.1819%" y="1701" width="0.3910%" height="15" fill="rgb(219,207,3)" fg:x="188488913" fg:w="6591060"/><text x="11.4319%" y="1711.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,591,060 samples, 0.39%)</title><rect x="11.1819%" y="1685" width="0.3910%" height="15" fill="rgb(222,56,46)" fg:x="188488913" fg:w="6591060"/><text x="11.4319%" y="1695.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (6,591,060 samples, 0.39%)</title><rect x="11.1819%" y="1669" width="0.3910%" height="15" fill="rgb(239,76,54)" fg:x="188488913" fg:w="6591060"/><text x="11.4319%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (6,591,060 samples, 0.39%)</title><rect x="11.1819%" y="1653" width="0.3910%" height="15" fill="rgb(231,124,27)" fg:x="188488913" fg:w="6591060"/><text x="11.4319%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6,591,060 samples, 0.39%)</title><rect x="11.1819%" y="1637" width="0.3910%" height="15" fill="rgb(249,195,6)" fg:x="188488913" fg:w="6591060"/><text x="11.4319%" y="1647.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (1,564,251 samples, 0.09%)</title><rect x="11.4801%" y="1621" width="0.0928%" height="15" fill="rgb(237,174,47)" fg:x="193515722" fg:w="1564251"/><text x="11.7301%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1,564,251 samples, 0.09%)</title><rect x="11.4801%" y="1605" width="0.0928%" height="15" fill="rgb(206,201,31)" fg:x="193515722" fg:w="1564251"/><text x="11.7301%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1,564,251 samples, 0.09%)</title><rect x="11.4801%" y="1589" width="0.0928%" height="15" fill="rgb(231,57,52)" fg:x="193515722" fg:w="1564251"/><text x="11.7301%" y="1599.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,564,251 samples, 0.09%)</title><rect x="11.4801%" y="1573" width="0.0928%" height="15" fill="rgb(248,177,22)" fg:x="193515722" fg:w="1564251"/><text x="11.7301%" y="1583.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,564,251 samples, 0.09%)</title><rect x="11.4801%" y="1557" width="0.0928%" height="15" fill="rgb(215,211,37)" fg:x="193515722" fg:w="1564251"/><text x="11.7301%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,564,251 samples, 0.09%)</title><rect x="11.4801%" y="1541" width="0.0928%" height="15" fill="rgb(241,128,51)" fg:x="193515722" fg:w="1564251"/><text x="11.7301%" y="1551.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,564,251 samples, 0.09%)</title><rect x="11.4801%" y="1525" width="0.0928%" height="15" fill="rgb(227,165,31)" fg:x="193515722" fg:w="1564251"/><text x="11.7301%" y="1535.50"></text></g><g><title>alloc::alloc::alloc (1,564,251 samples, 0.09%)</title><rect x="11.4801%" y="1509" width="0.0928%" height="15" fill="rgb(228,167,24)" fg:x="193515722" fg:w="1564251"/><text x="11.7301%" y="1519.50"></text></g><g><title>malloc (1,564,251 samples, 0.09%)</title><rect x="11.4801%" y="1493" width="0.0928%" height="15" fill="rgb(228,143,12)" fg:x="193515722" fg:w="1564251"/><text x="11.7301%" y="1503.50"></text></g><g><title>[libc.so.6] (1,564,251 samples, 0.09%)</title><rect x="11.4801%" y="1477" width="0.0928%" height="15" fill="rgb(249,149,8)" fg:x="193515722" fg:w="1564251"/><text x="11.7301%" y="1487.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (11,163,675 samples, 0.66%)</title><rect x="11.0150%" y="2837" width="0.6623%" height="15" fill="rgb(243,35,44)" fg:x="185677094" fg:w="11163675"/><text x="11.2650%" y="2847.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2821" width="0.4955%" height="15" fill="rgb(246,89,9)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2831.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2805" width="0.4955%" height="15" fill="rgb(233,213,13)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2789" width="0.4955%" height="15" fill="rgb(233,141,41)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2799.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2773" width="0.4955%" height="15" fill="rgb(239,167,4)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2757" width="0.4955%" height="15" fill="rgb(209,217,16)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2741" width="0.4955%" height="15" fill="rgb(219,88,35)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2751.50"></text></g><g><title>alloc::slice::hack::to_vec (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2725" width="0.4955%" height="15" fill="rgb(220,193,23)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2709" width="0.4955%" height="15" fill="rgb(230,90,52)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2719.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2693" width="0.4955%" height="15" fill="rgb(252,106,19)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2703.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2677" width="0.4955%" height="15" fill="rgb(206,74,20)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2661" width="0.4955%" height="15" fill="rgb(230,138,44)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2645" width="0.4955%" height="15" fill="rgb(235,182,43)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2655.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2629" width="0.4955%" height="15" fill="rgb(242,16,51)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2613" width="0.4955%" height="15" fill="rgb(248,9,4)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2597" width="0.4955%" height="15" fill="rgb(210,31,22)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2607.50"></text></g><g><title>alloc::slice::hack::to_vec (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2581" width="0.4955%" height="15" fill="rgb(239,54,39)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2565" width="0.4955%" height="15" fill="rgb(230,99,41)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2575.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2549" width="0.4955%" height="15" fill="rgb(253,106,12)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2559.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2533" width="0.4955%" height="15" fill="rgb(213,46,41)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2517" width="0.4955%" height="15" fill="rgb(215,133,35)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2501" width="0.4955%" height="15" fill="rgb(213,28,5)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2511.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2485" width="0.4955%" height="15" fill="rgb(215,77,49)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2469" width="0.4955%" height="15" fill="rgb(248,100,22)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2453" width="0.4955%" height="15" fill="rgb(208,67,9)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2463.50"></text></g><g><title>alloc::slice::hack::to_vec (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2437" width="0.4955%" height="15" fill="rgb(219,133,21)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2421" width="0.4955%" height="15" fill="rgb(246,46,29)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2431.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2405" width="0.4955%" height="15" fill="rgb(246,185,52)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2415.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2389" width="0.4955%" height="15" fill="rgb(252,136,11)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2373" width="0.4955%" height="15" fill="rgb(219,138,53)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2357" width="0.4955%" height="15" fill="rgb(211,51,23)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2367.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2341" width="0.4955%" height="15" fill="rgb(247,221,28)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2325" width="0.4955%" height="15" fill="rgb(251,222,45)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2309" width="0.4955%" height="15" fill="rgb(217,162,53)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2319.50"></text></g><g><title>alloc::slice::hack::to_vec (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2293" width="0.4955%" height="15" fill="rgb(229,93,14)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2277" width="0.4955%" height="15" fill="rgb(209,67,49)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2287.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2261" width="0.4955%" height="15" fill="rgb(213,87,29)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2271.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2245" width="0.4955%" height="15" fill="rgb(205,151,52)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2229" width="0.4955%" height="15" fill="rgb(253,215,39)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2213" width="0.4955%" height="15" fill="rgb(221,220,41)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2223.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2197" width="0.4955%" height="15" fill="rgb(218,133,21)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2181" width="0.4955%" height="15" fill="rgb(221,193,43)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2191.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2165" width="0.4955%" height="15" fill="rgb(240,128,52)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2175.50"></text></g><g><title>alloc::slice::hack::to_vec (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2149" width="0.4955%" height="15" fill="rgb(253,114,12)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2159.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2133" width="0.4955%" height="15" fill="rgb(215,223,47)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2143.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2117" width="0.4955%" height="15" fill="rgb(248,225,23)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2127.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2101" width="0.4955%" height="15" fill="rgb(250,108,0)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2085" width="0.4955%" height="15" fill="rgb(228,208,7)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2095.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2069" width="0.4955%" height="15" fill="rgb(244,45,10)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2079.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2053" width="0.4955%" height="15" fill="rgb(207,125,25)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2037" width="0.4955%" height="15" fill="rgb(210,195,18)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2047.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2021" width="0.4955%" height="15" fill="rgb(249,80,12)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2031.50"></text></g><g><title>alloc::slice::hack::to_vec (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="2005" width="0.4955%" height="15" fill="rgb(221,65,9)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="2015.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="1989" width="0.4955%" height="15" fill="rgb(235,49,36)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="1999.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="1973" width="0.4955%" height="15" fill="rgb(225,32,20)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="1983.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="1957" width="0.4955%" height="15" fill="rgb(215,141,46)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="1967.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="1941" width="0.4955%" height="15" fill="rgb(250,160,47)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="1925" width="0.4955%" height="15" fill="rgb(216,222,40)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="1935.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="1909" width="0.4955%" height="15" fill="rgb(234,217,39)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="1893" width="0.4955%" height="15" fill="rgb(207,178,40)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="1903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="1877" width="0.4955%" height="15" fill="rgb(221,136,13)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="1887.50"></text></g><g><title>alloc::slice::hack::to_vec (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="1861" width="0.4955%" height="15" fill="rgb(249,199,10)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="1871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="1845" width="0.4955%" height="15" fill="rgb(249,222,13)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="1855.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="1829" width="0.4955%" height="15" fill="rgb(244,185,38)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="1839.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="1813" width="0.4955%" height="15" fill="rgb(236,202,9)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="1797" width="0.4955%" height="15" fill="rgb(250,229,37)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="1781" width="0.4955%" height="15" fill="rgb(206,174,23)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="1791.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,351,856 samples, 0.50%)</title><rect x="11.1819%" y="1765" width="0.4955%" height="15" fill="rgb(211,33,43)" fg:x="188488913" fg:w="8351856"/><text x="11.4319%" y="1775.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,760,796 samples, 0.10%)</title><rect x="11.5729%" y="1749" width="0.1045%" height="15" fill="rgb(245,58,50)" fg:x="195079973" fg:w="1760796"/><text x="11.8229%" y="1759.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,760,796 samples, 0.10%)</title><rect x="11.5729%" y="1733" width="0.1045%" height="15" fill="rgb(244,68,36)" fg:x="195079973" fg:w="1760796"/><text x="11.8229%" y="1743.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,760,796 samples, 0.10%)</title><rect x="11.5729%" y="1717" width="0.1045%" height="15" fill="rgb(232,229,15)" fg:x="195079973" fg:w="1760796"/><text x="11.8229%" y="1727.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,760,796 samples, 0.10%)</title><rect x="11.5729%" y="1701" width="0.1045%" height="15" fill="rgb(254,30,23)" fg:x="195079973" fg:w="1760796"/><text x="11.8229%" y="1711.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,760,796 samples, 0.10%)</title><rect x="11.5729%" y="1685" width="0.1045%" height="15" fill="rgb(235,160,14)" fg:x="195079973" fg:w="1760796"/><text x="11.8229%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,760,796 samples, 0.10%)</title><rect x="11.5729%" y="1669" width="0.1045%" height="15" fill="rgb(212,155,44)" fg:x="195079973" fg:w="1760796"/><text x="11.8229%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,760,796 samples, 0.10%)</title><rect x="11.5729%" y="1653" width="0.1045%" height="15" fill="rgb(226,2,50)" fg:x="195079973" fg:w="1760796"/><text x="11.8229%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (1,760,796 samples, 0.10%)</title><rect x="11.5729%" y="1637" width="0.1045%" height="15" fill="rgb(234,177,6)" fg:x="195079973" fg:w="1760796"/><text x="11.8229%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,760,796 samples, 0.10%)</title><rect x="11.5729%" y="1621" width="0.1045%" height="15" fill="rgb(217,24,9)" fg:x="195079973" fg:w="1760796"/><text x="11.8229%" y="1631.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,760,796 samples, 0.10%)</title><rect x="11.5729%" y="1605" width="0.1045%" height="15" fill="rgb(220,13,46)" fg:x="195079973" fg:w="1760796"/><text x="11.8229%" y="1615.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,760,796 samples, 0.10%)</title><rect x="11.5729%" y="1589" width="0.1045%" height="15" fill="rgb(239,221,27)" fg:x="195079973" fg:w="1760796"/><text x="11.8229%" y="1599.50"></text></g><g><title>[libc.so.6] (1,760,796 samples, 0.10%)</title><rect x="11.5729%" y="1573" width="0.1045%" height="15" fill="rgb(222,198,25)" fg:x="195079973" fg:w="1760796"/><text x="11.8229%" y="1583.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (2,947,342 samples, 0.17%)</title><rect x="11.6773%" y="2837" width="0.1748%" height="15" fill="rgb(211,99,13)" fg:x="196840769" fg:w="2947342"/><text x="11.9273%" y="2847.50"></text></g><g><title>&lt;main::benchmark::LayoutFrame as core::clone::Clone&gt;::clone (24,098,827 samples, 1.43%)</title><rect x="10.5513%" y="2917" width="1.4296%" height="15" fill="rgb(232,111,31)" fg:x="177860310" fg:w="24098827"/><text x="10.8013%" y="2927.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (24,098,827 samples, 1.43%)</title><rect x="10.5513%" y="2901" width="1.4296%" height="15" fill="rgb(245,82,37)" fg:x="177860310" fg:w="24098827"/><text x="10.8013%" y="2911.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (24,098,827 samples, 1.43%)</title><rect x="10.5513%" y="2885" width="1.4296%" height="15" fill="rgb(227,149,46)" fg:x="177860310" fg:w="24098827"/><text x="10.8013%" y="2895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (24,098,827 samples, 1.43%)</title><rect x="10.5513%" y="2869" width="1.4296%" height="15" fill="rgb(218,36,50)" fg:x="177860310" fg:w="24098827"/><text x="10.8013%" y="2879.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (24,098,827 samples, 1.43%)</title><rect x="10.5513%" y="2853" width="1.4296%" height="15" fill="rgb(226,80,48)" fg:x="177860310" fg:w="24098827"/><text x="10.8013%" y="2863.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (2,171,026 samples, 0.13%)</title><rect x="11.8522%" y="2837" width="0.1288%" height="15" fill="rgb(238,224,15)" fg:x="199788111" fg:w="2171026"/><text x="12.1022%" y="2847.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (2,171,026 samples, 0.13%)</title><rect x="11.8522%" y="2821" width="0.1288%" height="15" fill="rgb(241,136,10)" fg:x="199788111" fg:w="2171026"/><text x="12.1022%" y="2831.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (2,171,026 samples, 0.13%)</title><rect x="11.8522%" y="2805" width="0.1288%" height="15" fill="rgb(208,32,45)" fg:x="199788111" fg:w="2171026"/><text x="12.1022%" y="2815.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (2,171,026 samples, 0.13%)</title><rect x="11.8522%" y="2789" width="0.1288%" height="15" fill="rgb(207,135,9)" fg:x="199788111" fg:w="2171026"/><text x="12.1022%" y="2799.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (2,171,026 samples, 0.13%)</title><rect x="11.8522%" y="2773" width="0.1288%" height="15" fill="rgb(206,86,44)" fg:x="199788111" fg:w="2171026"/><text x="12.1022%" y="2783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,171,026 samples, 0.13%)</title><rect x="11.8522%" y="2757" width="0.1288%" height="15" fill="rgb(245,177,15)" fg:x="199788111" fg:w="2171026"/><text x="12.1022%" y="2767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,171,026 samples, 0.13%)</title><rect x="11.8522%" y="2741" width="0.1288%" height="15" fill="rgb(206,64,50)" fg:x="199788111" fg:w="2171026"/><text x="12.1022%" y="2751.50"></text></g><g><title>alloc::alloc::alloc (2,171,026 samples, 0.13%)</title><rect x="11.8522%" y="2725" width="0.1288%" height="15" fill="rgb(234,36,40)" fg:x="199788111" fg:w="2171026"/><text x="12.1022%" y="2735.50"></text></g><g><title>malloc (2,171,026 samples, 0.13%)</title><rect x="11.8522%" y="2709" width="0.1288%" height="15" fill="rgb(213,64,8)" fg:x="199788111" fg:w="2171026"/><text x="12.1022%" y="2719.50"></text></g><g><title>[libc.so.6] (2,171,026 samples, 0.13%)</title><rect x="11.8522%" y="2693" width="0.1288%" height="15" fill="rgb(210,75,36)" fg:x="199788111" fg:w="2171026"/><text x="12.1022%" y="2703.50"></text></g><g><title>cfree (4,816,432 samples, 0.29%)</title><rect x="11.9810%" y="2693" width="0.2857%" height="15" fill="rgb(229,88,21)" fg:x="201959137" fg:w="4816432"/><text x="12.2310%" y="2703.50"></text></g><g><title>[libc.so.6] (2,448,926 samples, 0.15%)</title><rect x="12.1214%" y="2677" width="0.1453%" height="15" fill="rgb(252,204,47)" fg:x="204326643" fg:w="2448926"/><text x="12.3714%" y="2687.50"></text></g><g><title>[libc.so.6] (2,448,926 samples, 0.15%)</title><rect x="12.1214%" y="2661" width="0.1453%" height="15" fill="rgb(208,77,27)" fg:x="204326643" fg:w="2448926"/><text x="12.3714%" y="2671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2,513,780 samples, 0.15%)</title><rect x="12.2667%" y="2581" width="0.1491%" height="15" fill="rgb(221,76,26)" fg:x="206775569" fg:w="2513780"/><text x="12.5167%" y="2591.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (2,513,780 samples, 0.15%)</title><rect x="12.2667%" y="2565" width="0.1491%" height="15" fill="rgb(225,139,18)" fg:x="206775569" fg:w="2513780"/><text x="12.5167%" y="2575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (2,513,780 samples, 0.15%)</title><rect x="12.2667%" y="2549" width="0.1491%" height="15" fill="rgb(230,137,11)" fg:x="206775569" fg:w="2513780"/><text x="12.5167%" y="2559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (2,513,780 samples, 0.15%)</title><rect x="12.2667%" y="2533" width="0.1491%" height="15" fill="rgb(212,28,1)" fg:x="206775569" fg:w="2513780"/><text x="12.5167%" y="2543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,513,780 samples, 0.15%)</title><rect x="12.2667%" y="2517" width="0.1491%" height="15" fill="rgb(248,164,17)" fg:x="206775569" fg:w="2513780"/><text x="12.5167%" y="2527.50"></text></g><g><title>alloc::alloc::dealloc (2,513,780 samples, 0.15%)</title><rect x="12.2667%" y="2501" width="0.1491%" height="15" fill="rgb(222,171,42)" fg:x="206775569" fg:w="2513780"/><text x="12.5167%" y="2511.50"></text></g><g><title>cfree (2,513,780 samples, 0.15%)</title><rect x="12.2667%" y="2485" width="0.1491%" height="15" fill="rgb(243,84,45)" fg:x="206775569" fg:w="2513780"/><text x="12.5167%" y="2495.50"></text></g><g><title>[libc.so.6] (2,513,780 samples, 0.15%)</title><rect x="12.2667%" y="2469" width="0.1491%" height="15" fill="rgb(252,49,23)" fg:x="206775569" fg:w="2513780"/><text x="12.5167%" y="2479.50"></text></g><g><title>[libc.so.6] (2,513,780 samples, 0.15%)</title><rect x="12.2667%" y="2453" width="0.1491%" height="15" fill="rgb(215,19,7)" fg:x="206775569" fg:w="2513780"/><text x="12.5167%" y="2463.50"></text></g><g><title>cfree (2,127,309 samples, 0.13%)</title><rect x="12.4158%" y="1557" width="0.1262%" height="15" fill="rgb(238,81,41)" fg:x="209289349" fg:w="2127309"/><text x="12.6658%" y="1567.50"></text></g><g><title>[libc.so.6] (2,127,309 samples, 0.13%)</title><rect x="12.4158%" y="1541" width="0.1262%" height="15" fill="rgb(210,199,37)" fg:x="209289349" fg:w="2127309"/><text x="12.6658%" y="1551.50"></text></g><g><title>[libc.so.6] (2,127,309 samples, 0.13%)</title><rect x="12.4158%" y="1525" width="0.1262%" height="15" fill="rgb(244,192,49)" fg:x="209289349" fg:w="2127309"/><text x="12.6658%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (13,684,508 samples, 0.81%)</title><rect x="11.9810%" y="2917" width="0.8118%" height="15" fill="rgb(226,211,11)" fg:x="201959137" fg:w="13684508"/><text x="12.2310%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::LayoutFrame]&gt; (13,684,508 samples, 0.81%)</title><rect x="11.9810%" y="2901" width="0.8118%" height="15" fill="rgb(236,162,54)" fg:x="201959137" fg:w="13684508"/><text x="12.2310%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::LayoutFrame&gt; (13,684,508 samples, 0.81%)</title><rect x="11.9810%" y="2885" width="0.8118%" height="15" fill="rgb(220,229,9)" fg:x="201959137" fg:w="13684508"/><text x="12.2310%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13,684,508 samples, 0.81%)</title><rect x="11.9810%" y="2869" width="0.8118%" height="15" fill="rgb(250,87,22)" fg:x="201959137" fg:w="13684508"/><text x="12.2310%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13,684,508 samples, 0.81%)</title><rect x="11.9810%" y="2853" width="0.8118%" height="15" fill="rgb(239,43,17)" fg:x="201959137" fg:w="13684508"/><text x="12.2310%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13,684,508 samples, 0.81%)</title><rect x="11.9810%" y="2837" width="0.8118%" height="15" fill="rgb(231,177,25)" fg:x="201959137" fg:w="13684508"/><text x="12.2310%" y="2847.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13,684,508 samples, 0.81%)</title><rect x="11.9810%" y="2821" width="0.8118%" height="15" fill="rgb(219,179,1)" fg:x="201959137" fg:w="13684508"/><text x="12.2310%" y="2831.50"></text></g><g><title>core::mem::drop (13,684,508 samples, 0.81%)</title><rect x="11.9810%" y="2805" width="0.8118%" height="15" fill="rgb(238,219,53)" fg:x="201959137" fg:w="13684508"/><text x="12.2310%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13,684,508 samples, 0.81%)</title><rect x="11.9810%" y="2789" width="0.8118%" height="15" fill="rgb(232,167,36)" fg:x="201959137" fg:w="13684508"/><text x="12.2310%" y="2799.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13,684,508 samples, 0.81%)</title><rect x="11.9810%" y="2773" width="0.8118%" height="15" fill="rgb(244,19,51)" fg:x="201959137" fg:w="13684508"/><text x="12.2310%" y="2783.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (13,684,508 samples, 0.81%)</title><rect x="11.9810%" y="2757" width="0.8118%" height="15" fill="rgb(224,6,22)" fg:x="201959137" fg:w="13684508"/><text x="12.2310%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (13,684,508 samples, 0.81%)</title><rect x="11.9810%" y="2741" width="0.8118%" height="15" fill="rgb(224,145,5)" fg:x="201959137" fg:w="13684508"/><text x="12.2310%" y="2751.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13,684,508 samples, 0.81%)</title><rect x="11.9810%" y="2725" width="0.8118%" height="15" fill="rgb(234,130,49)" fg:x="201959137" fg:w="13684508"/><text x="12.2310%" y="2735.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (13,684,508 samples, 0.81%)</title><rect x="11.9810%" y="2709" width="0.8118%" height="15" fill="rgb(254,6,2)" fg:x="201959137" fg:w="13684508"/><text x="12.2310%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,868,076 samples, 0.53%)</title><rect x="12.2667%" y="2693" width="0.5261%" height="15" fill="rgb(208,96,46)" fg:x="206775569" fg:w="8868076"/><text x="12.5167%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,868,076 samples, 0.53%)</title><rect x="12.2667%" y="2677" width="0.5261%" height="15" fill="rgb(239,3,39)" fg:x="206775569" fg:w="8868076"/><text x="12.5167%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,868,076 samples, 0.53%)</title><rect x="12.2667%" y="2661" width="0.5261%" height="15" fill="rgb(233,210,1)" fg:x="206775569" fg:w="8868076"/><text x="12.5167%" y="2671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8,868,076 samples, 0.53%)</title><rect x="12.2667%" y="2645" width="0.5261%" height="15" fill="rgb(244,137,37)" fg:x="206775569" fg:w="8868076"/><text x="12.5167%" y="2655.50"></text></g><g><title>core::mem::drop (8,868,076 samples, 0.53%)</title><rect x="12.2667%" y="2629" width="0.5261%" height="15" fill="rgb(240,136,2)" fg:x="206775569" fg:w="8868076"/><text x="12.5167%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,868,076 samples, 0.53%)</title><rect x="12.2667%" y="2613" width="0.5261%" height="15" fill="rgb(239,18,37)" fg:x="206775569" fg:w="8868076"/><text x="12.5167%" y="2623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8,868,076 samples, 0.53%)</title><rect x="12.2667%" y="2597" width="0.5261%" height="15" fill="rgb(218,185,22)" fg:x="206775569" fg:w="8868076"/><text x="12.5167%" y="2607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2581" width="0.3770%" height="15" fill="rgb(225,218,4)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2565" width="0.3770%" height="15" fill="rgb(230,182,32)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2575.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2549" width="0.3770%" height="15" fill="rgb(242,56,43)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2533" width="0.3770%" height="15" fill="rgb(233,99,24)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2517" width="0.3770%" height="15" fill="rgb(234,209,42)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2501" width="0.3770%" height="15" fill="rgb(227,7,12)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2485" width="0.3770%" height="15" fill="rgb(245,203,43)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2469" width="0.3770%" height="15" fill="rgb(238,205,33)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2453" width="0.3770%" height="15" fill="rgb(231,56,7)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2437" width="0.3770%" height="15" fill="rgb(244,186,29)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2421" width="0.3770%" height="15" fill="rgb(234,111,31)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2405" width="0.3770%" height="15" fill="rgb(241,149,10)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2415.50"></text></g><g><title>core::mem::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2389" width="0.3770%" height="15" fill="rgb(249,206,44)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2373" width="0.3770%" height="15" fill="rgb(251,153,30)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2357" width="0.3770%" height="15" fill="rgb(239,152,38)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2341" width="0.3770%" height="15" fill="rgb(249,139,47)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2325" width="0.3770%" height="15" fill="rgb(244,64,35)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2335.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2309" width="0.3770%" height="15" fill="rgb(216,46,15)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2319.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2293" width="0.3770%" height="15" fill="rgb(250,74,19)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2277" width="0.3770%" height="15" fill="rgb(249,42,33)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2261" width="0.3770%" height="15" fill="rgb(242,149,17)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2245" width="0.3770%" height="15" fill="rgb(244,29,21)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2229" width="0.3770%" height="15" fill="rgb(220,130,37)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2213" width="0.3770%" height="15" fill="rgb(211,67,2)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2197" width="0.3770%" height="15" fill="rgb(235,68,52)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2181" width="0.3770%" height="15" fill="rgb(246,142,3)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2165" width="0.3770%" height="15" fill="rgb(241,25,7)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2175.50"></text></g><g><title>core::mem::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2149" width="0.3770%" height="15" fill="rgb(242,119,39)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2133" width="0.3770%" height="15" fill="rgb(241,98,45)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2143.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2117" width="0.3770%" height="15" fill="rgb(254,28,30)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2127.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2101" width="0.3770%" height="15" fill="rgb(241,142,54)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2085" width="0.3770%" height="15" fill="rgb(222,85,15)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2095.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2069" width="0.3770%" height="15" fill="rgb(210,85,47)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2079.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2053" width="0.3770%" height="15" fill="rgb(224,206,25)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2037" width="0.3770%" height="15" fill="rgb(243,201,19)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2021" width="0.3770%" height="15" fill="rgb(236,59,4)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2031.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="2005" width="0.3770%" height="15" fill="rgb(254,179,45)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1989" width="0.3770%" height="15" fill="rgb(226,14,10)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1973" width="0.3770%" height="15" fill="rgb(244,27,41)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1957" width="0.3770%" height="15" fill="rgb(235,35,32)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1941" width="0.3770%" height="15" fill="rgb(218,68,31)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1925" width="0.3770%" height="15" fill="rgb(207,120,37)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1935.50"></text></g><g><title>core::mem::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1909" width="0.3770%" height="15" fill="rgb(227,98,0)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1893" width="0.3770%" height="15" fill="rgb(207,7,3)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1903.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1877" width="0.3770%" height="15" fill="rgb(206,98,19)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1887.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1861" width="0.3770%" height="15" fill="rgb(217,5,26)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1845" width="0.3770%" height="15" fill="rgb(235,190,38)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1829" width="0.3770%" height="15" fill="rgb(247,86,24)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1839.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1813" width="0.3770%" height="15" fill="rgb(205,101,16)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1797" width="0.3770%" height="15" fill="rgb(246,168,33)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1781" width="0.3770%" height="15" fill="rgb(231,114,1)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1765" width="0.3770%" height="15" fill="rgb(207,184,53)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1749" width="0.3770%" height="15" fill="rgb(224,95,51)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1733" width="0.3770%" height="15" fill="rgb(212,188,45)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1717" width="0.3770%" height="15" fill="rgb(223,154,38)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1701" width="0.3770%" height="15" fill="rgb(251,22,52)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1685" width="0.3770%" height="15" fill="rgb(229,209,22)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1695.50"></text></g><g><title>core::mem::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1669" width="0.3770%" height="15" fill="rgb(234,138,34)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1653" width="0.3770%" height="15" fill="rgb(212,95,11)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1637" width="0.3770%" height="15" fill="rgb(240,179,47)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1647.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1621" width="0.3770%" height="15" fill="rgb(240,163,11)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1605" width="0.3770%" height="15" fill="rgb(236,37,12)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1589" width="0.3770%" height="15" fill="rgb(232,164,16)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1599.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,354,296 samples, 0.38%)</title><rect x="12.4158%" y="1573" width="0.3770%" height="15" fill="rgb(244,205,15)" fg:x="209289349" fg:w="6354296"/><text x="12.6658%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1557" width="0.2508%" height="15" fill="rgb(223,117,47)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1541" width="0.2508%" height="15" fill="rgb(244,107,35)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1525" width="0.2508%" height="15" fill="rgb(205,140,8)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1509" width="0.2508%" height="15" fill="rgb(228,84,46)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1493" width="0.2508%" height="15" fill="rgb(254,188,9)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1477" width="0.2508%" height="15" fill="rgb(206,112,54)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1461" width="0.2508%" height="15" fill="rgb(216,84,49)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1471.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1445" width="0.2508%" height="15" fill="rgb(214,194,35)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1455.50"></text></g><g><title>core::mem::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1429" width="0.2508%" height="15" fill="rgb(249,28,3)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1413" width="0.2508%" height="15" fill="rgb(222,56,52)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1423.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1397" width="0.2508%" height="15" fill="rgb(245,217,50)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1407.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1381" width="0.2508%" height="15" fill="rgb(213,201,24)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1365" width="0.2508%" height="15" fill="rgb(248,116,28)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1375.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1349" width="0.2508%" height="15" fill="rgb(219,72,43)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1359.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1333" width="0.2508%" height="15" fill="rgb(209,138,14)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1317" width="0.2508%" height="15" fill="rgb(222,18,33)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1301" width="0.2508%" height="15" fill="rgb(213,199,7)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1285" width="0.2508%" height="15" fill="rgb(250,110,10)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1269" width="0.2508%" height="15" fill="rgb(248,123,6)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1253" width="0.2508%" height="15" fill="rgb(206,91,31)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1237" width="0.2508%" height="15" fill="rgb(211,154,13)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1221" width="0.2508%" height="15" fill="rgb(225,148,7)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1231.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1205" width="0.2508%" height="15" fill="rgb(220,160,43)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1215.50"></text></g><g><title>core::mem::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1189" width="0.2508%" height="15" fill="rgb(213,52,39)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1173" width="0.2508%" height="15" fill="rgb(243,137,7)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1157" width="0.2508%" height="15" fill="rgb(230,79,13)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1141" width="0.2508%" height="15" fill="rgb(247,105,23)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1125" width="0.2508%" height="15" fill="rgb(223,179,41)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1109" width="0.2508%" height="15" fill="rgb(218,9,34)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1119.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1093" width="0.2508%" height="15" fill="rgb(222,106,8)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1077" width="0.2508%" height="15" fill="rgb(211,220,0)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1061" width="0.2508%" height="15" fill="rgb(229,52,16)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1045" width="0.2508%" height="15" fill="rgb(212,155,18)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1029" width="0.2508%" height="15" fill="rgb(242,21,14)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="1013" width="0.2508%" height="15" fill="rgb(222,19,48)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="997" width="0.2508%" height="15" fill="rgb(232,45,27)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="981" width="0.2508%" height="15" fill="rgb(249,103,42)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="965" width="0.2508%" height="15" fill="rgb(246,81,33)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="975.50"></text></g><g><title>core::mem::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="949" width="0.2508%" height="15" fill="rgb(252,33,42)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="933" width="0.2508%" height="15" fill="rgb(209,212,41)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="917" width="0.2508%" height="15" fill="rgb(207,154,6)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="901" width="0.2508%" height="15" fill="rgb(223,64,47)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="885" width="0.2508%" height="15" fill="rgb(211,161,38)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="869" width="0.2508%" height="15" fill="rgb(219,138,40)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="853" width="0.2508%" height="15" fill="rgb(241,228,46)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="837" width="0.2508%" height="15" fill="rgb(223,209,38)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="821" width="0.2508%" height="15" fill="rgb(236,164,45)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="805" width="0.2508%" height="15" fill="rgb(231,15,5)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="789" width="0.2508%" height="15" fill="rgb(252,35,15)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="773" width="0.2508%" height="15" fill="rgb(248,181,18)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="757" width="0.2508%" height="15" fill="rgb(233,39,42)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="741" width="0.2508%" height="15" fill="rgb(238,110,33)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="725" width="0.2508%" height="15" fill="rgb(233,195,10)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="735.50"></text></g><g><title>core::mem::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="709" width="0.2508%" height="15" fill="rgb(254,105,3)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="693" width="0.2508%" height="15" fill="rgb(221,225,9)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,226,987 samples, 0.25%)</title><rect x="12.5420%" y="677" width="0.2508%" height="15" fill="rgb(224,227,45)" fg:x="211416658" fg:w="4226987"/><text x="12.7920%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,002,168 samples, 0.12%)</title><rect x="12.6740%" y="661" width="0.1188%" height="15" fill="rgb(229,198,43)" fg:x="213641477" fg:w="2002168"/><text x="12.9240%" y="671.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,002,168 samples, 0.12%)</title><rect x="12.6740%" y="645" width="0.1188%" height="15" fill="rgb(206,209,35)" fg:x="213641477" fg:w="2002168"/><text x="12.9240%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,002,168 samples, 0.12%)</title><rect x="12.6740%" y="629" width="0.1188%" height="15" fill="rgb(245,195,53)" fg:x="213641477" fg:w="2002168"/><text x="12.9240%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,002,168 samples, 0.12%)</title><rect x="12.6740%" y="613" width="0.1188%" height="15" fill="rgb(240,92,26)" fg:x="213641477" fg:w="2002168"/><text x="12.9240%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,002,168 samples, 0.12%)</title><rect x="12.6740%" y="597" width="0.1188%" height="15" fill="rgb(207,40,23)" fg:x="213641477" fg:w="2002168"/><text x="12.9240%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,002,168 samples, 0.12%)</title><rect x="12.6740%" y="581" width="0.1188%" height="15" fill="rgb(223,111,35)" fg:x="213641477" fg:w="2002168"/><text x="12.9240%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,002,168 samples, 0.12%)</title><rect x="12.6740%" y="565" width="0.1188%" height="15" fill="rgb(229,147,28)" fg:x="213641477" fg:w="2002168"/><text x="12.9240%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,002,168 samples, 0.12%)</title><rect x="12.6740%" y="549" width="0.1188%" height="15" fill="rgb(211,29,28)" fg:x="213641477" fg:w="2002168"/><text x="12.9240%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (2,002,168 samples, 0.12%)</title><rect x="12.6740%" y="533" width="0.1188%" height="15" fill="rgb(228,72,33)" fg:x="213641477" fg:w="2002168"/><text x="12.9240%" y="543.50"></text></g><g><title>cfree (2,002,168 samples, 0.12%)</title><rect x="12.6740%" y="517" width="0.1188%" height="15" fill="rgb(205,214,31)" fg:x="213641477" fg:w="2002168"/><text x="12.9240%" y="527.50"></text></g><g><title>[libc.so.6] (2,002,168 samples, 0.12%)</title><rect x="12.6740%" y="501" width="0.1188%" height="15" fill="rgb(224,111,15)" fg:x="213641477" fg:w="2002168"/><text x="12.9240%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,425,757 samples, 0.14%)</title><rect x="12.7928%" y="2917" width="0.1439%" height="15" fill="rgb(253,21,26)" fg:x="215643645" fg:w="2425757"/><text x="13.0428%" y="2927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,425,757 samples, 0.14%)</title><rect x="12.7928%" y="2901" width="0.1439%" height="15" fill="rgb(245,139,43)" fg:x="215643645" fg:w="2425757"/><text x="13.0428%" y="2911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,425,757 samples, 0.14%)</title><rect x="12.7928%" y="2885" width="0.1439%" height="15" fill="rgb(252,170,7)" fg:x="215643645" fg:w="2425757"/><text x="13.0428%" y="2895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,425,757 samples, 0.14%)</title><rect x="12.7928%" y="2869" width="0.1439%" height="15" fill="rgb(231,118,14)" fg:x="215643645" fg:w="2425757"/><text x="13.0428%" y="2879.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,425,757 samples, 0.14%)</title><rect x="12.7928%" y="2853" width="0.1439%" height="15" fill="rgb(238,83,0)" fg:x="215643645" fg:w="2425757"/><text x="13.0428%" y="2863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,425,757 samples, 0.14%)</title><rect x="12.7928%" y="2837" width="0.1439%" height="15" fill="rgb(221,39,39)" fg:x="215643645" fg:w="2425757"/><text x="13.0428%" y="2847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,425,757 samples, 0.14%)</title><rect x="12.7928%" y="2821" width="0.1439%" height="15" fill="rgb(222,119,46)" fg:x="215643645" fg:w="2425757"/><text x="13.0428%" y="2831.50"></text></g><g><title>alloc::alloc::realloc (2,425,757 samples, 0.14%)</title><rect x="12.7928%" y="2805" width="0.1439%" height="15" fill="rgb(222,165,49)" fg:x="215643645" fg:w="2425757"/><text x="13.0428%" y="2815.50"></text></g><g><title>realloc (2,425,757 samples, 0.14%)</title><rect x="12.7928%" y="2789" width="0.1439%" height="15" fill="rgb(219,113,52)" fg:x="215643645" fg:w="2425757"/><text x="13.0428%" y="2799.50"></text></g><g><title>[libc.so.6] (2,425,757 samples, 0.14%)</title><rect x="12.7928%" y="2773" width="0.1439%" height="15" fill="rgb(214,7,15)" fg:x="215643645" fg:w="2425757"/><text x="13.0428%" y="2783.50"></text></g><g><title>[libc.so.6] (2,425,757 samples, 0.14%)</title><rect x="12.7928%" y="2757" width="0.1439%" height="15" fill="rgb(235,32,4)" fg:x="215643645" fg:w="2425757"/><text x="13.0428%" y="2767.50"></text></g><g><title>[libc.so.6] (2,425,757 samples, 0.14%)</title><rect x="12.7928%" y="2741" width="0.1439%" height="15" fill="rgb(238,90,54)" fg:x="215643645" fg:w="2425757"/><text x="13.0428%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,802,109 samples, 0.17%)</title><rect x="12.9367%" y="2853" width="0.1662%" height="15" fill="rgb(213,208,19)" fg:x="218069402" fg:w="2802109"/><text x="13.1867%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,802,109 samples, 0.17%)</title><rect x="12.9367%" y="2837" width="0.1662%" height="15" fill="rgb(233,156,4)" fg:x="218069402" fg:w="2802109"/><text x="13.1867%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,802,109 samples, 0.17%)</title><rect x="12.9367%" y="2821" width="0.1662%" height="15" fill="rgb(207,194,5)" fg:x="218069402" fg:w="2802109"/><text x="13.1867%" y="2831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,802,109 samples, 0.17%)</title><rect x="12.9367%" y="2805" width="0.1662%" height="15" fill="rgb(206,111,30)" fg:x="218069402" fg:w="2802109"/><text x="13.1867%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,802,109 samples, 0.17%)</title><rect x="12.9367%" y="2789" width="0.1662%" height="15" fill="rgb(243,70,54)" fg:x="218069402" fg:w="2802109"/><text x="13.1867%" y="2799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,802,109 samples, 0.17%)</title><rect x="12.9367%" y="2773" width="0.1662%" height="15" fill="rgb(242,28,8)" fg:x="218069402" fg:w="2802109"/><text x="13.1867%" y="2783.50"></text></g><g><title>alloc::alloc::dealloc (2,802,109 samples, 0.17%)</title><rect x="12.9367%" y="2757" width="0.1662%" height="15" fill="rgb(219,106,18)" fg:x="218069402" fg:w="2802109"/><text x="13.1867%" y="2767.50"></text></g><g><title>cfree (2,802,109 samples, 0.17%)</title><rect x="12.9367%" y="2741" width="0.1662%" height="15" fill="rgb(244,222,10)" fg:x="218069402" fg:w="2802109"/><text x="13.1867%" y="2751.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,863,962 samples, 0.17%)</title><rect x="13.1029%" y="2725" width="0.1699%" height="15" fill="rgb(236,179,52)" fg:x="220871511" fg:w="2863962"/><text x="13.3529%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,863,962 samples, 0.17%)</title><rect x="13.1029%" y="2709" width="0.1699%" height="15" fill="rgb(213,23,39)" fg:x="220871511" fg:w="2863962"/><text x="13.3529%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,863,962 samples, 0.17%)</title><rect x="13.1029%" y="2693" width="0.1699%" height="15" fill="rgb(238,48,10)" fg:x="220871511" fg:w="2863962"/><text x="13.3529%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,863,962 samples, 0.17%)</title><rect x="13.1029%" y="2677" width="0.1699%" height="15" fill="rgb(251,196,23)" fg:x="220871511" fg:w="2863962"/><text x="13.3529%" y="2687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,863,962 samples, 0.17%)</title><rect x="13.1029%" y="2661" width="0.1699%" height="15" fill="rgb(250,152,24)" fg:x="220871511" fg:w="2863962"/><text x="13.3529%" y="2671.50"></text></g><g><title>cfree (2,761,014 samples, 0.16%)</title><rect x="13.2728%" y="1781" width="0.1638%" height="15" fill="rgb(209,150,17)" fg:x="223735473" fg:w="2761014"/><text x="13.5228%" y="1791.50"></text></g><g><title>[libc.so.6] (2,761,014 samples, 0.16%)</title><rect x="13.2728%" y="1765" width="0.1638%" height="15" fill="rgb(234,202,34)" fg:x="223735473" fg:w="2761014"/><text x="13.5228%" y="1775.50"></text></g><g><title>[libc.so.6] (2,761,014 samples, 0.16%)</title><rect x="13.2728%" y="1749" width="0.1638%" height="15" fill="rgb(253,148,53)" fg:x="223735473" fg:w="2761014"/><text x="13.5228%" y="1759.50"></text></g><g><title>[libc.so.6] (2,761,014 samples, 0.16%)</title><rect x="13.2728%" y="1733" width="0.1638%" height="15" fill="rgb(218,129,16)" fg:x="223735473" fg:w="2761014"/><text x="13.5228%" y="1743.50"></text></g><g><title>cfree (2,679,053 samples, 0.16%)</title><rect x="13.4366%" y="1541" width="0.1589%" height="15" fill="rgb(216,85,19)" fg:x="226496487" fg:w="2679053"/><text x="13.6866%" y="1551.50"></text></g><g><title>[libc.so.6] (2,679,053 samples, 0.16%)</title><rect x="13.4366%" y="1525" width="0.1589%" height="15" fill="rgb(235,228,7)" fg:x="226496487" fg:w="2679053"/><text x="13.6866%" y="1535.50"></text></g><g><title>[libc.so.6] (2,679,053 samples, 0.16%)</title><rect x="13.4366%" y="1509" width="0.1589%" height="15" fill="rgb(245,175,0)" fg:x="226496487" fg:w="2679053"/><text x="13.6866%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;main::benchmark::LayoutFrame&gt;&gt; (14,126,126 samples, 0.84%)</title><rect x="12.9367%" y="2917" width="0.8380%" height="15" fill="rgb(208,168,36)" fg:x="218069402" fg:w="14126126"/><text x="13.1867%" y="2927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,126,126 samples, 0.84%)</title><rect x="12.9367%" y="2901" width="0.8380%" height="15" fill="rgb(246,171,24)" fg:x="218069402" fg:w="14126126"/><text x="13.1867%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::LayoutFrame]&gt; (14,126,126 samples, 0.84%)</title><rect x="12.9367%" y="2885" width="0.8380%" height="15" fill="rgb(215,142,24)" fg:x="218069402" fg:w="14126126"/><text x="13.1867%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::LayoutFrame&gt; (14,126,126 samples, 0.84%)</title><rect x="12.9367%" y="2869" width="0.8380%" height="15" fill="rgb(250,187,7)" fg:x="218069402" fg:w="14126126"/><text x="13.1867%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11,324,017 samples, 0.67%)</title><rect x="13.1029%" y="2853" width="0.6718%" height="15" fill="rgb(228,66,33)" fg:x="220871511" fg:w="11324017"/><text x="13.3529%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11,324,017 samples, 0.67%)</title><rect x="13.1029%" y="2837" width="0.6718%" height="15" fill="rgb(234,215,21)" fg:x="220871511" fg:w="11324017"/><text x="13.3529%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11,324,017 samples, 0.67%)</title><rect x="13.1029%" y="2821" width="0.6718%" height="15" fill="rgb(222,191,20)" fg:x="220871511" fg:w="11324017"/><text x="13.3529%" y="2831.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11,324,017 samples, 0.67%)</title><rect x="13.1029%" y="2805" width="0.6718%" height="15" fill="rgb(245,79,54)" fg:x="220871511" fg:w="11324017"/><text x="13.3529%" y="2815.50"></text></g><g><title>core::mem::drop (11,324,017 samples, 0.67%)</title><rect x="13.1029%" y="2789" width="0.6718%" height="15" fill="rgb(240,10,37)" fg:x="220871511" fg:w="11324017"/><text x="13.3529%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11,324,017 samples, 0.67%)</title><rect x="13.1029%" y="2773" width="0.6718%" height="15" fill="rgb(214,192,32)" fg:x="220871511" fg:w="11324017"/><text x="13.3529%" y="2783.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11,324,017 samples, 0.67%)</title><rect x="13.1029%" y="2757" width="0.6718%" height="15" fill="rgb(209,36,54)" fg:x="220871511" fg:w="11324017"/><text x="13.3529%" y="2767.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (11,324,017 samples, 0.67%)</title><rect x="13.1029%" y="2741" width="0.6718%" height="15" fill="rgb(220,10,11)" fg:x="220871511" fg:w="11324017"/><text x="13.3529%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2725" width="0.5019%" height="15" fill="rgb(221,106,17)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2735.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2709" width="0.5019%" height="15" fill="rgb(251,142,44)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2719.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2693" width="0.5019%" height="15" fill="rgb(238,13,15)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2677" width="0.5019%" height="15" fill="rgb(208,107,27)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2661" width="0.5019%" height="15" fill="rgb(205,136,37)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2645" width="0.5019%" height="15" fill="rgb(250,205,27)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2629" width="0.5019%" height="15" fill="rgb(210,80,43)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2639.50"></text></g><g><title>core::mem::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2613" width="0.5019%" height="15" fill="rgb(247,160,36)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2597" width="0.5019%" height="15" fill="rgb(234,13,49)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2581" width="0.5019%" height="15" fill="rgb(234,122,0)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2565" width="0.5019%" height="15" fill="rgb(207,146,38)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2549" width="0.5019%" height="15" fill="rgb(207,177,25)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2559.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2533" width="0.5019%" height="15" fill="rgb(211,178,42)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2517" width="0.5019%" height="15" fill="rgb(230,69,54)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2501" width="0.5019%" height="15" fill="rgb(214,135,41)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2485" width="0.5019%" height="15" fill="rgb(237,67,25)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2469" width="0.5019%" height="15" fill="rgb(222,189,50)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2453" width="0.5019%" height="15" fill="rgb(245,148,34)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2437" width="0.5019%" height="15" fill="rgb(222,29,6)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2421" width="0.5019%" height="15" fill="rgb(221,189,43)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2405" width="0.5019%" height="15" fill="rgb(207,36,27)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2389" width="0.5019%" height="15" fill="rgb(217,90,24)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2399.50"></text></g><g><title>core::mem::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2373" width="0.5019%" height="15" fill="rgb(224,66,35)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2357" width="0.5019%" height="15" fill="rgb(221,13,50)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2341" width="0.5019%" height="15" fill="rgb(236,68,49)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2325" width="0.5019%" height="15" fill="rgb(229,146,28)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2309" width="0.5019%" height="15" fill="rgb(225,31,38)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2319.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2293" width="0.5019%" height="15" fill="rgb(250,208,3)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2303.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2277" width="0.5019%" height="15" fill="rgb(246,54,23)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2261" width="0.5019%" height="15" fill="rgb(243,76,11)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2245" width="0.5019%" height="15" fill="rgb(245,21,50)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2229" width="0.5019%" height="15" fill="rgb(228,9,43)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2213" width="0.5019%" height="15" fill="rgb(208,100,47)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2197" width="0.5019%" height="15" fill="rgb(232,26,8)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2181" width="0.5019%" height="15" fill="rgb(216,166,38)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2165" width="0.5019%" height="15" fill="rgb(251,202,51)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2149" width="0.5019%" height="15" fill="rgb(254,216,34)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2159.50"></text></g><g><title>core::mem::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2133" width="0.5019%" height="15" fill="rgb(251,32,27)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2117" width="0.5019%" height="15" fill="rgb(208,127,28)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2127.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2101" width="0.5019%" height="15" fill="rgb(224,137,22)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2111.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2085" width="0.5019%" height="15" fill="rgb(254,70,32)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2069" width="0.5019%" height="15" fill="rgb(229,75,37)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2079.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2053" width="0.5019%" height="15" fill="rgb(252,64,23)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2063.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2037" width="0.5019%" height="15" fill="rgb(232,162,48)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2021" width="0.5019%" height="15" fill="rgb(246,160,12)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="2005" width="0.5019%" height="15" fill="rgb(247,166,0)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="1989" width="0.5019%" height="15" fill="rgb(249,219,21)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="1973" width="0.5019%" height="15" fill="rgb(205,209,3)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="1957" width="0.5019%" height="15" fill="rgb(243,44,1)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="1941" width="0.5019%" height="15" fill="rgb(206,159,16)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="1925" width="0.5019%" height="15" fill="rgb(244,77,30)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="1909" width="0.5019%" height="15" fill="rgb(218,69,12)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="1919.50"></text></g><g><title>core::mem::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="1893" width="0.5019%" height="15" fill="rgb(212,87,7)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="1877" width="0.5019%" height="15" fill="rgb(245,114,25)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="1861" width="0.5019%" height="15" fill="rgb(210,61,42)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="1845" width="0.5019%" height="15" fill="rgb(211,52,33)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="1829" width="0.5019%" height="15" fill="rgb(234,58,33)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="1813" width="0.5019%" height="15" fill="rgb(220,115,36)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="1823.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (8,460,055 samples, 0.50%)</title><rect x="13.2728%" y="1797" width="0.5019%" height="15" fill="rgb(243,153,54)" fg:x="223735473" fg:w="8460055"/><text x="13.5228%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,699,041 samples, 0.34%)</title><rect x="13.4366%" y="1781" width="0.3381%" height="15" fill="rgb(251,47,18)" fg:x="226496487" fg:w="5699041"/><text x="13.6866%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (5,699,041 samples, 0.34%)</title><rect x="13.4366%" y="1765" width="0.3381%" height="15" fill="rgb(242,102,42)" fg:x="226496487" fg:w="5699041"/><text x="13.6866%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,699,041 samples, 0.34%)</title><rect x="13.4366%" y="1749" width="0.3381%" height="15" fill="rgb(234,31,38)" fg:x="226496487" fg:w="5699041"/><text x="13.6866%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5,699,041 samples, 0.34%)</title><rect x="13.4366%" y="1733" width="0.3381%" height="15" fill="rgb(221,117,51)" fg:x="226496487" fg:w="5699041"/><text x="13.6866%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,699,041 samples, 0.34%)</title><rect x="13.4366%" y="1717" width="0.3381%" height="15" fill="rgb(212,20,18)" fg:x="226496487" fg:w="5699041"/><text x="13.6866%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,699,041 samples, 0.34%)</title><rect x="13.4366%" y="1701" width="0.3381%" height="15" fill="rgb(245,133,36)" fg:x="226496487" fg:w="5699041"/><text x="13.6866%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,699,041 samples, 0.34%)</title><rect x="13.4366%" y="1685" width="0.3381%" height="15" fill="rgb(212,6,19)" fg:x="226496487" fg:w="5699041"/><text x="13.6866%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,699,041 samples, 0.34%)</title><rect x="13.4366%" y="1669" width="0.3381%" height="15" fill="rgb(218,1,36)" fg:x="226496487" fg:w="5699041"/><text x="13.6866%" y="1679.50"></text></g><g><title>core::mem::drop (5,699,041 samples, 0.34%)</title><rect x="13.4366%" y="1653" width="0.3381%" height="15" fill="rgb(246,84,54)" fg:x="226496487" fg:w="5699041"/><text x="13.6866%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,699,041 samples, 0.34%)</title><rect x="13.4366%" y="1637" width="0.3381%" height="15" fill="rgb(242,110,6)" fg:x="226496487" fg:w="5699041"/><text x="13.6866%" y="1647.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,699,041 samples, 0.34%)</title><rect x="13.4366%" y="1621" width="0.3381%" height="15" fill="rgb(214,47,5)" fg:x="226496487" fg:w="5699041"/><text x="13.6866%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,699,041 samples, 0.34%)</title><rect x="13.4366%" y="1605" width="0.3381%" height="15" fill="rgb(218,159,25)" fg:x="226496487" fg:w="5699041"/><text x="13.6866%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (5,699,041 samples, 0.34%)</title><rect x="13.4366%" y="1589" width="0.3381%" height="15" fill="rgb(215,211,28)" fg:x="226496487" fg:w="5699041"/><text x="13.6866%" y="1599.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,699,041 samples, 0.34%)</title><rect x="13.4366%" y="1573" width="0.3381%" height="15" fill="rgb(238,59,32)" fg:x="226496487" fg:w="5699041"/><text x="13.6866%" y="1583.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (5,699,041 samples, 0.34%)</title><rect x="13.4366%" y="1557" width="0.3381%" height="15" fill="rgb(226,82,3)" fg:x="226496487" fg:w="5699041"/><text x="13.6866%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1541" width="0.1792%" height="15" fill="rgb(240,164,32)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1525" width="0.1792%" height="15" fill="rgb(232,46,7)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1509" width="0.1792%" height="15" fill="rgb(229,129,53)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1493" width="0.1792%" height="15" fill="rgb(234,188,29)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1477" width="0.1792%" height="15" fill="rgb(246,141,4)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1461" width="0.1792%" height="15" fill="rgb(229,23,39)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1445" width="0.1792%" height="15" fill="rgb(206,12,3)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1429" width="0.1792%" height="15" fill="rgb(252,226,20)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1439.50"></text></g><g><title>core::mem::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1413" width="0.1792%" height="15" fill="rgb(216,123,35)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1397" width="0.1792%" height="15" fill="rgb(212,68,40)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1407.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1381" width="0.1792%" height="15" fill="rgb(254,125,32)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1391.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1365" width="0.1792%" height="15" fill="rgb(253,97,22)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1349" width="0.1792%" height="15" fill="rgb(241,101,14)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1359.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1333" width="0.1792%" height="15" fill="rgb(238,103,29)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1343.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1317" width="0.1792%" height="15" fill="rgb(233,195,47)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1301" width="0.1792%" height="15" fill="rgb(246,218,30)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1285" width="0.1792%" height="15" fill="rgb(219,145,47)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1269" width="0.1792%" height="15" fill="rgb(243,12,26)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1253" width="0.1792%" height="15" fill="rgb(214,87,16)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1237" width="0.1792%" height="15" fill="rgb(208,99,42)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1221" width="0.1792%" height="15" fill="rgb(253,99,2)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1205" width="0.1792%" height="15" fill="rgb(220,168,23)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1189" width="0.1792%" height="15" fill="rgb(242,38,24)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1199.50"></text></g><g><title>core::mem::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1173" width="0.1792%" height="15" fill="rgb(225,182,9)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1157" width="0.1792%" height="15" fill="rgb(243,178,37)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1141" width="0.1792%" height="15" fill="rgb(232,139,19)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1125" width="0.1792%" height="15" fill="rgb(225,201,24)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1109" width="0.1792%" height="15" fill="rgb(221,47,46)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1093" width="0.1792%" height="15" fill="rgb(249,23,13)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1103.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1077" width="0.1792%" height="15" fill="rgb(219,9,5)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1061" width="0.1792%" height="15" fill="rgb(254,171,16)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1045" width="0.1792%" height="15" fill="rgb(230,171,20)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1029" width="0.1792%" height="15" fill="rgb(210,71,41)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="1013" width="0.1792%" height="15" fill="rgb(206,173,20)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="997" width="0.1792%" height="15" fill="rgb(233,88,34)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="981" width="0.1792%" height="15" fill="rgb(223,209,46)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="965" width="0.1792%" height="15" fill="rgb(250,43,18)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="949" width="0.1792%" height="15" fill="rgb(208,13,10)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="959.50"></text></g><g><title>core::mem::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="933" width="0.1792%" height="15" fill="rgb(212,200,36)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="917" width="0.1792%" height="15" fill="rgb(225,90,30)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="901" width="0.1792%" height="15" fill="rgb(236,182,39)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="885" width="0.1792%" height="15" fill="rgb(212,144,35)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="869" width="0.1792%" height="15" fill="rgb(228,63,44)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="853" width="0.1792%" height="15" fill="rgb(228,109,6)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="837" width="0.1792%" height="15" fill="rgb(238,117,24)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="821" width="0.1792%" height="15" fill="rgb(242,26,26)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="805" width="0.1792%" height="15" fill="rgb(221,92,48)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="789" width="0.1792%" height="15" fill="rgb(209,209,32)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="773" width="0.1792%" height="15" fill="rgb(221,70,22)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="757" width="0.1792%" height="15" fill="rgb(248,145,5)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="741" width="0.1792%" height="15" fill="rgb(226,116,26)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="725" width="0.1792%" height="15" fill="rgb(244,5,17)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="709" width="0.1792%" height="15" fill="rgb(252,159,33)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="719.50"></text></g><g><title>core::mem::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="693" width="0.1792%" height="15" fill="rgb(206,71,0)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="677" width="0.1792%" height="15" fill="rgb(233,118,54)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="661" width="0.1792%" height="15" fill="rgb(234,83,48)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="645" width="0.1792%" height="15" fill="rgb(228,3,54)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="629" width="0.1792%" height="15" fill="rgb(226,155,13)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="613" width="0.1792%" height="15" fill="rgb(241,28,37)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="597" width="0.1792%" height="15" fill="rgb(233,93,10)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="581" width="0.1792%" height="15" fill="rgb(225,113,19)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="565" width="0.1792%" height="15" fill="rgb(241,2,18)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="549" width="0.1792%" height="15" fill="rgb(228,207,21)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="533" width="0.1792%" height="15" fill="rgb(213,211,35)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="517" width="0.1792%" height="15" fill="rgb(209,83,10)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="501" width="0.1792%" height="15" fill="rgb(209,164,1)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="485" width="0.1792%" height="15" fill="rgb(213,184,43)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="469" width="0.1792%" height="15" fill="rgb(231,61,34)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="479.50"></text></g><g><title>core::mem::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="453" width="0.1792%" height="15" fill="rgb(235,75,3)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="437" width="0.1792%" height="15" fill="rgb(220,106,47)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="421" width="0.1792%" height="15" fill="rgb(210,196,33)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="405" width="0.1792%" height="15" fill="rgb(229,154,42)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="389" width="0.1792%" height="15" fill="rgb(228,114,26)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="373" width="0.1792%" height="15" fill="rgb(208,144,1)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="383.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="357" width="0.1792%" height="15" fill="rgb(239,112,37)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="341" width="0.1792%" height="15" fill="rgb(210,96,50)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="325" width="0.1792%" height="15" fill="rgb(222,178,2)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="309" width="0.1792%" height="15" fill="rgb(226,74,18)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="293" width="0.1792%" height="15" fill="rgb(225,67,54)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="277" width="0.1792%" height="15" fill="rgb(251,92,32)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="261" width="0.1792%" height="15" fill="rgb(228,149,22)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="245" width="0.1792%" height="15" fill="rgb(243,54,13)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="229" width="0.1792%" height="15" fill="rgb(243,180,28)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="239.50"></text></g><g><title>core::mem::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="213" width="0.1792%" height="15" fill="rgb(208,167,24)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="197" width="0.1792%" height="15" fill="rgb(245,73,45)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="181" width="0.1792%" height="15" fill="rgb(237,203,48)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="191.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="165" width="0.1792%" height="15" fill="rgb(211,197,16)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="149" width="0.1792%" height="15" fill="rgb(243,99,51)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="133" width="0.1792%" height="15" fill="rgb(215,123,29)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="143.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="117" width="0.1792%" height="15" fill="rgb(239,186,37)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="101" width="0.1792%" height="15" fill="rgb(252,136,39)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="85" width="0.1792%" height="15" fill="rgb(223,213,32)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="69" width="0.1792%" height="15" fill="rgb(233,115,5)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="53" width="0.1792%" height="15" fill="rgb(207,226,44)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,019,988 samples, 0.18%)</title><rect x="13.5955%" y="37" width="0.1792%" height="15" fill="rgb(208,126,0)" fg:x="229175540" fg:w="3019988"/><text x="13.8455%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,662,307 samples, 0.10%)</title><rect x="13.7747%" y="2869" width="0.0986%" height="15" fill="rgb(244,66,21)" fg:x="232195528" fg:w="1662307"/><text x="14.0247%" y="2879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,662,307 samples, 0.10%)</title><rect x="13.7747%" y="2853" width="0.0986%" height="15" fill="rgb(222,97,12)" fg:x="232195528" fg:w="1662307"/><text x="14.0247%" y="2863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,662,307 samples, 0.10%)</title><rect x="13.7747%" y="2837" width="0.0986%" height="15" fill="rgb(219,213,19)" fg:x="232195528" fg:w="1662307"/><text x="14.0247%" y="2847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,662,307 samples, 0.10%)</title><rect x="13.7747%" y="2821" width="0.0986%" height="15" fill="rgb(252,169,30)" fg:x="232195528" fg:w="1662307"/><text x="14.0247%" y="2831.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_from_scratch (1,662,307 samples, 0.10%)</title><rect x="13.7747%" y="2805" width="0.0986%" height="15" fill="rgb(206,32,51)" fg:x="232195528" fg:w="1662307"/><text x="14.0247%" y="2815.50"></text></g><g><title>malloc (1,662,307 samples, 0.10%)</title><rect x="13.7747%" y="2789" width="0.0986%" height="15" fill="rgb(250,172,42)" fg:x="232195528" fg:w="1662307"/><text x="14.0247%" y="2799.50"></text></g><g><title>[libc.so.6] (1,662,307 samples, 0.10%)</title><rect x="13.7747%" y="2773" width="0.0986%" height="15" fill="rgb(209,34,43)" fg:x="232195528" fg:w="1662307"/><text x="14.0247%" y="2783.50"></text></g><g><title>[libc.so.6] (1,662,307 samples, 0.10%)</title><rect x="13.7747%" y="2757" width="0.0986%" height="15" fill="rgb(223,11,35)" fg:x="232195528" fg:w="1662307"/><text x="14.0247%" y="2767.50"></text></g><g><title>[libc.so.6] (1,662,307 samples, 0.10%)</title><rect x="13.7747%" y="2741" width="0.0986%" height="15" fill="rgb(251,219,26)" fg:x="232195528" fg:w="1662307"/><text x="14.0247%" y="2751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,186,918 samples, 0.13%)</title><rect x="13.8733%" y="2853" width="0.1297%" height="15" fill="rgb(231,119,3)" fg:x="233857835" fg:w="2186918"/><text x="14.1233%" y="2863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,186,918 samples, 0.13%)</title><rect x="13.8733%" y="2837" width="0.1297%" height="15" fill="rgb(216,97,11)" fg:x="233857835" fg:w="2186918"/><text x="14.1233%" y="2847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,186,918 samples, 0.13%)</title><rect x="13.8733%" y="2821" width="0.1297%" height="15" fill="rgb(223,59,9)" fg:x="233857835" fg:w="2186918"/><text x="14.1233%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,186,918 samples, 0.13%)</title><rect x="13.8733%" y="2805" width="0.1297%" height="15" fill="rgb(233,93,31)" fg:x="233857835" fg:w="2186918"/><text x="14.1233%" y="2815.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_from_scratch (2,186,918 samples, 0.13%)</title><rect x="13.8733%" y="2789" width="0.1297%" height="15" fill="rgb(239,81,33)" fg:x="233857835" fg:w="2186918"/><text x="14.1233%" y="2799.50"></text></g><g><title>malloc (2,186,918 samples, 0.13%)</title><rect x="13.8733%" y="2773" width="0.1297%" height="15" fill="rgb(213,120,34)" fg:x="233857835" fg:w="2186918"/><text x="14.1233%" y="2783.50"></text></g><g><title>[libc.so.6] (2,186,918 samples, 0.13%)</title><rect x="13.8733%" y="2757" width="0.1297%" height="15" fill="rgb(243,49,53)" fg:x="233857835" fg:w="2186918"/><text x="14.1233%" y="2767.50"></text></g><g><title>[libc.so.6] (2,186,918 samples, 0.13%)</title><rect x="13.8733%" y="2741" width="0.1297%" height="15" fill="rgb(247,216,33)" fg:x="233857835" fg:w="2186918"/><text x="14.1233%" y="2751.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (1,737,134 samples, 0.10%)</title><rect x="14.0030%" y="2405" width="0.1031%" height="15" fill="rgb(226,26,14)" fg:x="236044753" fg:w="1737134"/><text x="14.2530%" y="2415.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (1,737,134 samples, 0.10%)</title><rect x="14.0030%" y="2389" width="0.1031%" height="15" fill="rgb(215,49,53)" fg:x="236044753" fg:w="1737134"/><text x="14.2530%" y="2399.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (1,737,134 samples, 0.10%)</title><rect x="14.0030%" y="2373" width="0.1031%" height="15" fill="rgb(245,162,40)" fg:x="236044753" fg:w="1737134"/><text x="14.2530%" y="2383.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (1,737,134 samples, 0.10%)</title><rect x="14.0030%" y="2357" width="0.1031%" height="15" fill="rgb(229,68,17)" fg:x="236044753" fg:w="1737134"/><text x="14.2530%" y="2367.50"></text></g><g><title>main::benchmark::apply_frame_modifications (7,426,229 samples, 0.44%)</title><rect x="13.7747%" y="2917" width="0.4406%" height="15" fill="rgb(213,182,10)" fg:x="232195528" fg:w="7426229"/><text x="14.0247%" y="2927.50"></text></g><g><title>main::benchmark::json_to_html_node (7,426,229 samples, 0.44%)</title><rect x="13.7747%" y="2901" width="0.4406%" height="15" fill="rgb(245,125,30)" fg:x="232195528" fg:w="7426229"/><text x="14.0247%" y="2911.50"></text></g><g><title>main::benchmark::json_to_html_node (7,426,229 samples, 0.44%)</title><rect x="13.7747%" y="2885" width="0.4406%" height="15" fill="rgb(232,202,2)" fg:x="232195528" fg:w="7426229"/><text x="14.0247%" y="2895.50"></text></g><g><title>main::benchmark::json_to_html_node (5,763,922 samples, 0.34%)</title><rect x="13.8733%" y="2869" width="0.3419%" height="15" fill="rgb(237,140,51)" fg:x="233857835" fg:w="5763922"/><text x="14.1233%" y="2879.50"></text></g><g><title>main::benchmark::json_to_html_node (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2853" width="0.2122%" height="15" fill="rgb(236,157,25)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2863.50"></text></g><g><title>main::benchmark::json_to_html_node (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2837" width="0.2122%" height="15" fill="rgb(219,209,0)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2847.50"></text></g><g><title>main::benchmark::json_to_html_node (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2821" width="0.2122%" height="15" fill="rgb(240,116,54)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2831.50"></text></g><g><title>main::benchmark::json_to_html_node (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2805" width="0.2122%" height="15" fill="rgb(216,10,36)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2815.50"></text></g><g><title>main::benchmark::json_to_html_node (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2789" width="0.2122%" height="15" fill="rgb(222,72,44)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2799.50"></text></g><g><title>main::benchmark::json_to_html_node (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2773" width="0.2122%" height="15" fill="rgb(232,159,9)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2783.50"></text></g><g><title>main::benchmark::json_to_html_node (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2757" width="0.2122%" height="15" fill="rgb(210,39,32)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2767.50"></text></g><g><title>main::benchmark::json_to_html_node (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2741" width="0.2122%" height="15" fill="rgb(216,194,45)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2751.50"></text></g><g><title>main::benchmark::json_to_html_node (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2725" width="0.2122%" height="15" fill="rgb(218,18,35)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2735.50"></text></g><g><title>main::benchmark::json_to_html_node (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2709" width="0.2122%" height="15" fill="rgb(207,83,51)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2693" width="0.2122%" height="15" fill="rgb(225,63,43)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2703.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2677" width="0.2122%" height="15" fill="rgb(207,57,36)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2687.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2661" width="0.2122%" height="15" fill="rgb(216,99,33)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2671.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2645" width="0.2122%" height="15" fill="rgb(225,42,16)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2655.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2629" width="0.2122%" height="15" fill="rgb(220,201,45)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2613" width="0.2122%" height="15" fill="rgb(225,33,4)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2597" width="0.2122%" height="15" fill="rgb(224,33,50)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2581" width="0.2122%" height="15" fill="rgb(246,198,51)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2565" width="0.2122%" height="15" fill="rgb(205,22,4)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2575.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2549" width="0.2122%" height="15" fill="rgb(206,3,8)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2533" width="0.2122%" height="15" fill="rgb(251,23,15)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2517" width="0.2122%" height="15" fill="rgb(252,88,28)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2501" width="0.2122%" height="15" fill="rgb(212,127,14)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2511.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2485" width="0.2122%" height="15" fill="rgb(247,145,37)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2495.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2469" width="0.2122%" height="15" fill="rgb(209,117,53)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2479.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2453" width="0.2122%" height="15" fill="rgb(212,90,42)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2463.50"></text></g><g><title>core::str::pattern::Searcher::next_match (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2437" width="0.2122%" height="15" fill="rgb(218,164,37)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2447.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (3,577,004 samples, 0.21%)</title><rect x="14.0030%" y="2421" width="0.2122%" height="15" fill="rgb(246,65,34)" fg:x="236044753" fg:w="3577004"/><text x="14.2530%" y="2431.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1,839,870 samples, 0.11%)</title><rect x="14.1061%" y="2405" width="0.1091%" height="15" fill="rgb(231,100,33)" fg:x="237781887" fg:w="1839870"/><text x="14.3561%" y="2415.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1,839,870 samples, 0.11%)</title><rect x="14.1061%" y="2389" width="0.1091%" height="15" fill="rgb(228,126,14)" fg:x="237781887" fg:w="1839870"/><text x="14.3561%" y="2399.50"></text></g><g><title>core::str::validations::next_code_point (1,839,870 samples, 0.11%)</title><rect x="14.1061%" y="2373" width="0.1091%" height="15" fill="rgb(215,173,21)" fg:x="237781887" fg:w="1839870"/><text x="14.3561%" y="2383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,386,438 samples, 0.14%)</title><rect x="14.2152%" y="2565" width="0.1416%" height="15" fill="rgb(210,6,40)" fg:x="239621757" fg:w="2386438"/><text x="14.4652%" y="2575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,386,438 samples, 0.14%)</title><rect x="14.2152%" y="2549" width="0.1416%" height="15" fill="rgb(212,48,18)" fg:x="239621757" fg:w="2386438"/><text x="14.4652%" y="2559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,386,438 samples, 0.14%)</title><rect x="14.2152%" y="2533" width="0.1416%" height="15" fill="rgb(230,214,11)" fg:x="239621757" fg:w="2386438"/><text x="14.4652%" y="2543.50"></text></g><g><title>alloc::slice::hack::to_vec (2,386,438 samples, 0.14%)</title><rect x="14.2152%" y="2517" width="0.1416%" height="15" fill="rgb(254,105,39)" fg:x="239621757" fg:w="2386438"/><text x="14.4652%" y="2527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,386,438 samples, 0.14%)</title><rect x="14.2152%" y="2501" width="0.1416%" height="15" fill="rgb(245,158,5)" fg:x="239621757" fg:w="2386438"/><text x="14.4652%" y="2511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,386,438 samples, 0.14%)</title><rect x="14.2152%" y="2485" width="0.1416%" height="15" fill="rgb(249,208,11)" fg:x="239621757" fg:w="2386438"/><text x="14.4652%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,386,438 samples, 0.14%)</title><rect x="14.2152%" y="2469" width="0.1416%" height="15" fill="rgb(210,39,28)" fg:x="239621757" fg:w="2386438"/><text x="14.4652%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,386,438 samples, 0.14%)</title><rect x="14.2152%" y="2453" width="0.1416%" height="15" fill="rgb(211,56,53)" fg:x="239621757" fg:w="2386438"/><text x="14.4652%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,386,438 samples, 0.14%)</title><rect x="14.2152%" y="2437" width="0.1416%" height="15" fill="rgb(226,201,30)" fg:x="239621757" fg:w="2386438"/><text x="14.4652%" y="2447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,386,438 samples, 0.14%)</title><rect x="14.2152%" y="2421" width="0.1416%" height="15" fill="rgb(239,101,34)" fg:x="239621757" fg:w="2386438"/><text x="14.4652%" y="2431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,386,438 samples, 0.14%)</title><rect x="14.2152%" y="2405" width="0.1416%" height="15" fill="rgb(226,209,5)" fg:x="239621757" fg:w="2386438"/><text x="14.4652%" y="2415.50"></text></g><g><title>alloc::alloc::alloc (2,386,438 samples, 0.14%)</title><rect x="14.2152%" y="2389" width="0.1416%" height="15" fill="rgb(250,105,47)" fg:x="239621757" fg:w="2386438"/><text x="14.4652%" y="2399.50"></text></g><g><title>malloc (2,386,438 samples, 0.14%)</title><rect x="14.2152%" y="2373" width="0.1416%" height="15" fill="rgb(230,72,3)" fg:x="239621757" fg:w="2386438"/><text x="14.4652%" y="2383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,366,441 samples, 0.14%)</title><rect x="14.5001%" y="2405" width="0.1404%" height="15" fill="rgb(232,218,39)" fg:x="244422967" fg:w="2366441"/><text x="14.7501%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,366,441 samples, 0.14%)</title><rect x="14.5001%" y="2389" width="0.1404%" height="15" fill="rgb(248,166,6)" fg:x="244422967" fg:w="2366441"/><text x="14.7501%" y="2399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,366,441 samples, 0.14%)</title><rect x="14.5001%" y="2373" width="0.1404%" height="15" fill="rgb(247,89,20)" fg:x="244422967" fg:w="2366441"/><text x="14.7501%" y="2383.50"></text></g><g><title>alloc::slice::hack::to_vec (2,366,441 samples, 0.14%)</title><rect x="14.5001%" y="2357" width="0.1404%" height="15" fill="rgb(248,130,54)" fg:x="244422967" fg:w="2366441"/><text x="14.7501%" y="2367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,366,441 samples, 0.14%)</title><rect x="14.5001%" y="2341" width="0.1404%" height="15" fill="rgb(234,196,4)" fg:x="244422967" fg:w="2366441"/><text x="14.7501%" y="2351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,366,441 samples, 0.14%)</title><rect x="14.5001%" y="2325" width="0.1404%" height="15" fill="rgb(250,143,31)" fg:x="244422967" fg:w="2366441"/><text x="14.7501%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,366,441 samples, 0.14%)</title><rect x="14.5001%" y="2309" width="0.1404%" height="15" fill="rgb(211,110,34)" fg:x="244422967" fg:w="2366441"/><text x="14.7501%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,366,441 samples, 0.14%)</title><rect x="14.5001%" y="2293" width="0.1404%" height="15" fill="rgb(215,124,48)" fg:x="244422967" fg:w="2366441"/><text x="14.7501%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,366,441 samples, 0.14%)</title><rect x="14.5001%" y="2277" width="0.1404%" height="15" fill="rgb(216,46,13)" fg:x="244422967" fg:w="2366441"/><text x="14.7501%" y="2287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,366,441 samples, 0.14%)</title><rect x="14.5001%" y="2261" width="0.1404%" height="15" fill="rgb(205,184,25)" fg:x="244422967" fg:w="2366441"/><text x="14.7501%" y="2271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,366,441 samples, 0.14%)</title><rect x="14.5001%" y="2245" width="0.1404%" height="15" fill="rgb(228,1,10)" fg:x="244422967" fg:w="2366441"/><text x="14.7501%" y="2255.50"></text></g><g><title>alloc::alloc::alloc (2,366,441 samples, 0.14%)</title><rect x="14.5001%" y="2229" width="0.1404%" height="15" fill="rgb(213,116,27)" fg:x="244422967" fg:w="2366441"/><text x="14.7501%" y="2239.50"></text></g><g><title>malloc (2,366,441 samples, 0.14%)</title><rect x="14.5001%" y="2213" width="0.1404%" height="15" fill="rgb(241,95,50)" fg:x="244422967" fg:w="2366441"/><text x="14.7501%" y="2223.50"></text></g><g><title>[libc.so.6] (2,366,441 samples, 0.14%)</title><rect x="14.5001%" y="2197" width="0.1404%" height="15" fill="rgb(238,48,32)" fg:x="244422967" fg:w="2366441"/><text x="14.7501%" y="2207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,399,268 samples, 0.14%)</title><rect x="14.6405%" y="2245" width="0.1423%" height="15" fill="rgb(235,113,49)" fg:x="246789408" fg:w="2399268"/><text x="14.8905%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,399,268 samples, 0.14%)</title><rect x="14.6405%" y="2229" width="0.1423%" height="15" fill="rgb(205,127,43)" fg:x="246789408" fg:w="2399268"/><text x="14.8905%" y="2239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,399,268 samples, 0.14%)</title><rect x="14.6405%" y="2213" width="0.1423%" height="15" fill="rgb(250,162,2)" fg:x="246789408" fg:w="2399268"/><text x="14.8905%" y="2223.50"></text></g><g><title>alloc::slice::hack::to_vec (2,399,268 samples, 0.14%)</title><rect x="14.6405%" y="2197" width="0.1423%" height="15" fill="rgb(220,13,41)" fg:x="246789408" fg:w="2399268"/><text x="14.8905%" y="2207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,399,268 samples, 0.14%)</title><rect x="14.6405%" y="2181" width="0.1423%" height="15" fill="rgb(249,221,25)" fg:x="246789408" fg:w="2399268"/><text x="14.8905%" y="2191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,399,268 samples, 0.14%)</title><rect x="14.6405%" y="2165" width="0.1423%" height="15" fill="rgb(215,208,19)" fg:x="246789408" fg:w="2399268"/><text x="14.8905%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,399,268 samples, 0.14%)</title><rect x="14.6405%" y="2149" width="0.1423%" height="15" fill="rgb(236,175,2)" fg:x="246789408" fg:w="2399268"/><text x="14.8905%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,399,268 samples, 0.14%)</title><rect x="14.6405%" y="2133" width="0.1423%" height="15" fill="rgb(241,52,2)" fg:x="246789408" fg:w="2399268"/><text x="14.8905%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,399,268 samples, 0.14%)</title><rect x="14.6405%" y="2117" width="0.1423%" height="15" fill="rgb(248,140,14)" fg:x="246789408" fg:w="2399268"/><text x="14.8905%" y="2127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,399,268 samples, 0.14%)</title><rect x="14.6405%" y="2101" width="0.1423%" height="15" fill="rgb(253,22,42)" fg:x="246789408" fg:w="2399268"/><text x="14.8905%" y="2111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,399,268 samples, 0.14%)</title><rect x="14.6405%" y="2085" width="0.1423%" height="15" fill="rgb(234,61,47)" fg:x="246789408" fg:w="2399268"/><text x="14.8905%" y="2095.50"></text></g><g><title>alloc::alloc::alloc (2,399,268 samples, 0.14%)</title><rect x="14.6405%" y="2069" width="0.1423%" height="15" fill="rgb(208,226,15)" fg:x="246789408" fg:w="2399268"/><text x="14.8905%" y="2079.50"></text></g><g><title>malloc (2,399,268 samples, 0.14%)</title><rect x="14.6405%" y="2053" width="0.1423%" height="15" fill="rgb(217,221,4)" fg:x="246789408" fg:w="2399268"/><text x="14.8905%" y="2063.50"></text></g><g><title>[libc.so.6] (2,399,268 samples, 0.14%)</title><rect x="14.6405%" y="2037" width="0.1423%" height="15" fill="rgb(212,174,34)" fg:x="246789408" fg:w="2399268"/><text x="14.8905%" y="2047.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,848,429 samples, 0.17%)</title><rect x="14.7828%" y="2181" width="0.1690%" height="15" fill="rgb(253,83,4)" fg:x="249188676" fg:w="2848429"/><text x="15.0328%" y="2191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,848,429 samples, 0.17%)</title><rect x="14.7828%" y="2165" width="0.1690%" height="15" fill="rgb(250,195,49)" fg:x="249188676" fg:w="2848429"/><text x="15.0328%" y="2175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,848,429 samples, 0.17%)</title><rect x="14.7828%" y="2149" width="0.1690%" height="15" fill="rgb(241,192,25)" fg:x="249188676" fg:w="2848429"/><text x="15.0328%" y="2159.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,962,737 samples, 0.35%)</title><rect x="15.1183%" y="2165" width="0.3537%" height="15" fill="rgb(208,124,10)" fg:x="254843595" fg:w="5962737"/><text x="15.3683%" y="2175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,962,737 samples, 0.35%)</title><rect x="15.1183%" y="2149" width="0.3537%" height="15" fill="rgb(222,33,0)" fg:x="254843595" fg:w="5962737"/><text x="15.3683%" y="2159.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,962,737 samples, 0.35%)</title><rect x="15.1183%" y="2133" width="0.3537%" height="15" fill="rgb(234,209,28)" fg:x="254843595" fg:w="5962737"/><text x="15.3683%" y="2143.50"></text></g><g><title>alloc::slice::hack::to_vec (5,962,737 samples, 0.35%)</title><rect x="15.1183%" y="2117" width="0.3537%" height="15" fill="rgb(224,11,23)" fg:x="254843595" fg:w="5962737"/><text x="15.3683%" y="2127.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,962,737 samples, 0.35%)</title><rect x="15.1183%" y="2101" width="0.3537%" height="15" fill="rgb(232,99,1)" fg:x="254843595" fg:w="5962737"/><text x="15.3683%" y="2111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,962,737 samples, 0.35%)</title><rect x="15.1183%" y="2085" width="0.3537%" height="15" fill="rgb(237,95,45)" fg:x="254843595" fg:w="5962737"/><text x="15.3683%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,962,737 samples, 0.35%)</title><rect x="15.1183%" y="2069" width="0.3537%" height="15" fill="rgb(208,109,11)" fg:x="254843595" fg:w="5962737"/><text x="15.3683%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,962,737 samples, 0.35%)</title><rect x="15.1183%" y="2053" width="0.3537%" height="15" fill="rgb(216,190,48)" fg:x="254843595" fg:w="5962737"/><text x="15.3683%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,962,737 samples, 0.35%)</title><rect x="15.1183%" y="2037" width="0.3537%" height="15" fill="rgb(251,171,36)" fg:x="254843595" fg:w="5962737"/><text x="15.3683%" y="2047.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,962,737 samples, 0.35%)</title><rect x="15.1183%" y="2021" width="0.3537%" height="15" fill="rgb(230,62,22)" fg:x="254843595" fg:w="5962737"/><text x="15.3683%" y="2031.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,962,737 samples, 0.35%)</title><rect x="15.1183%" y="2005" width="0.3537%" height="15" fill="rgb(225,114,35)" fg:x="254843595" fg:w="5962737"/><text x="15.3683%" y="2015.50"></text></g><g><title>alloc::alloc::alloc (5,962,737 samples, 0.35%)</title><rect x="15.1183%" y="1989" width="0.3537%" height="15" fill="rgb(215,118,42)" fg:x="254843595" fg:w="5962737"/><text x="15.3683%" y="1999.50"></text></g><g><title>malloc (5,962,737 samples, 0.35%)</title><rect x="15.1183%" y="1973" width="0.3537%" height="15" fill="rgb(243,119,21)" fg:x="254843595" fg:w="5962737"/><text x="15.3683%" y="1983.50"></text></g><g><title>[libc.so.6] (3,009,692 samples, 0.18%)</title><rect x="15.2934%" y="1957" width="0.1785%" height="15" fill="rgb(252,177,53)" fg:x="257796640" fg:w="3009692"/><text x="15.5434%" y="1967.50"></text></g><g><title>__rdl_alloc (2,801,148 samples, 0.17%)</title><rect x="15.6506%" y="1893" width="0.1662%" height="15" fill="rgb(237,209,29)" fg:x="263816255" fg:w="2801148"/><text x="15.9006%" y="1903.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,801,148 samples, 0.17%)</title><rect x="15.6506%" y="1877" width="0.1662%" height="15" fill="rgb(212,65,23)" fg:x="263816255" fg:w="2801148"/><text x="15.9006%" y="1887.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_from_scratch (2,811,586 samples, 0.17%)</title><rect x="15.8167%" y="1893" width="0.1668%" height="15" fill="rgb(230,222,46)" fg:x="266617403" fg:w="2811586"/><text x="16.0667%" y="1903.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (16,167,090 samples, 0.96%)</title><rect x="15.6506%" y="2085" width="0.9591%" height="15" fill="rgb(215,135,32)" fg:x="263816255" fg:w="16167090"/><text x="15.9006%" y="2095.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,167,090 samples, 0.96%)</title><rect x="15.6506%" y="2069" width="0.9591%" height="15" fill="rgb(246,101,22)" fg:x="263816255" fg:w="16167090"/><text x="15.9006%" y="2079.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,167,090 samples, 0.96%)</title><rect x="15.6506%" y="2053" width="0.9591%" height="15" fill="rgb(206,107,13)" fg:x="263816255" fg:w="16167090"/><text x="15.9006%" y="2063.50"></text></g><g><title>alloc::slice::hack::to_vec (16,167,090 samples, 0.96%)</title><rect x="15.6506%" y="2037" width="0.9591%" height="15" fill="rgb(250,100,44)" fg:x="263816255" fg:w="16167090"/><text x="15.9006%" y="2047.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16,167,090 samples, 0.96%)</title><rect x="15.6506%" y="2021" width="0.9591%" height="15" fill="rgb(231,147,38)" fg:x="263816255" fg:w="16167090"/><text x="15.9006%" y="2031.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16,167,090 samples, 0.96%)</title><rect x="15.6506%" y="2005" width="0.9591%" height="15" fill="rgb(229,8,40)" fg:x="263816255" fg:w="16167090"/><text x="15.9006%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16,167,090 samples, 0.96%)</title><rect x="15.6506%" y="1989" width="0.9591%" height="15" fill="rgb(221,135,30)" fg:x="263816255" fg:w="16167090"/><text x="15.9006%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (16,167,090 samples, 0.96%)</title><rect x="15.6506%" y="1973" width="0.9591%" height="15" fill="rgb(249,193,18)" fg:x="263816255" fg:w="16167090"/><text x="15.9006%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (16,167,090 samples, 0.96%)</title><rect x="15.6506%" y="1957" width="0.9591%" height="15" fill="rgb(209,133,39)" fg:x="263816255" fg:w="16167090"/><text x="15.9006%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16,167,090 samples, 0.96%)</title><rect x="15.6506%" y="1941" width="0.9591%" height="15" fill="rgb(232,100,14)" fg:x="263816255" fg:w="16167090"/><text x="15.9006%" y="1951.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16,167,090 samples, 0.96%)</title><rect x="15.6506%" y="1925" width="0.9591%" height="15" fill="rgb(224,185,1)" fg:x="263816255" fg:w="16167090"/><text x="15.9006%" y="1935.50"></text></g><g><title>alloc::alloc::alloc (16,167,090 samples, 0.96%)</title><rect x="15.6506%" y="1909" width="0.9591%" height="15" fill="rgb(223,139,8)" fg:x="263816255" fg:w="16167090"/><text x="15.9006%" y="1919.50"></text></g><g><title>malloc (10,554,356 samples, 0.63%)</title><rect x="15.9835%" y="1893" width="0.6261%" height="15" fill="rgb(232,213,38)" fg:x="269428989" fg:w="10554356"/><text x="16.2335%" y="1903.50"></text></g><g><title>[libc.so.6] (4,828,754 samples, 0.29%)</title><rect x="16.3232%" y="1877" width="0.2865%" height="15" fill="rgb(207,94,22)" fg:x="275154591" fg:w="4828754"/><text x="16.5732%" y="1887.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (17,494,792 samples, 1.04%)</title><rect x="16.7557%" y="2005" width="1.0379%" height="15" fill="rgb(219,183,54)" fg:x="282445602" fg:w="17494792"/><text x="17.0057%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,137,890 samples, 0.60%)</title><rect x="17.1922%" y="1989" width="0.6014%" height="15" fill="rgb(216,185,54)" fg:x="289802504" fg:w="10137890"/><text x="17.4422%" y="1999.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,137,890 samples, 0.60%)</title><rect x="17.1922%" y="1973" width="0.6014%" height="15" fill="rgb(254,217,39)" fg:x="289802504" fg:w="10137890"/><text x="17.4422%" y="1983.50"></text></g><g><title>alloc::slice::hack::to_vec (10,137,890 samples, 0.60%)</title><rect x="17.1922%" y="1957" width="0.6014%" height="15" fill="rgb(240,178,23)" fg:x="289802504" fg:w="10137890"/><text x="17.4422%" y="1967.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,137,890 samples, 0.60%)</title><rect x="17.1922%" y="1941" width="0.6014%" height="15" fill="rgb(218,11,47)" fg:x="289802504" fg:w="10137890"/><text x="17.4422%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10,137,890 samples, 0.60%)</title><rect x="17.1922%" y="1925" width="0.6014%" height="15" fill="rgb(218,51,51)" fg:x="289802504" fg:w="10137890"/><text x="17.4422%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10,137,890 samples, 0.60%)</title><rect x="17.1922%" y="1909" width="0.6014%" height="15" fill="rgb(238,126,27)" fg:x="289802504" fg:w="10137890"/><text x="17.4422%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (10,137,890 samples, 0.60%)</title><rect x="17.1922%" y="1893" width="0.6014%" height="15" fill="rgb(249,202,22)" fg:x="289802504" fg:w="10137890"/><text x="17.4422%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (10,137,890 samples, 0.60%)</title><rect x="17.1922%" y="1877" width="0.6014%" height="15" fill="rgb(254,195,49)" fg:x="289802504" fg:w="10137890"/><text x="17.4422%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,137,890 samples, 0.60%)</title><rect x="17.1922%" y="1861" width="0.6014%" height="15" fill="rgb(208,123,14)" fg:x="289802504" fg:w="10137890"/><text x="17.4422%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10,137,890 samples, 0.60%)</title><rect x="17.1922%" y="1845" width="0.6014%" height="15" fill="rgb(224,200,8)" fg:x="289802504" fg:w="10137890"/><text x="17.4422%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (10,137,890 samples, 0.60%)</title><rect x="17.1922%" y="1829" width="0.6014%" height="15" fill="rgb(217,61,36)" fg:x="289802504" fg:w="10137890"/><text x="17.4422%" y="1839.50"></text></g><g><title>malloc (10,137,890 samples, 0.60%)</title><rect x="17.1922%" y="1813" width="0.6014%" height="15" fill="rgb(206,35,45)" fg:x="289802504" fg:w="10137890"/><text x="17.4422%" y="1823.50"></text></g><g><title>[libc.so.6] (10,137,890 samples, 0.60%)</title><rect x="17.1922%" y="1797" width="0.6014%" height="15" fill="rgb(217,65,33)" fg:x="289802504" fg:w="10137890"/><text x="17.4422%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,006,645 samples, 0.18%)</title><rect x="17.7936%" y="1941" width="0.1784%" height="15" fill="rgb(222,158,48)" fg:x="299940394" fg:w="3006645"/><text x="18.0436%" y="1951.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8,081,071 samples, 0.48%)</title><rect x="17.9719%" y="1925" width="0.4794%" height="15" fill="rgb(254,2,54)" fg:x="302947039" fg:w="8081071"/><text x="18.2219%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,602,410 samples, 0.15%)</title><rect x="18.2969%" y="1909" width="0.1544%" height="15" fill="rgb(250,143,38)" fg:x="308425700" fg:w="2602410"/><text x="18.5469%" y="1919.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,602,410 samples, 0.15%)</title><rect x="18.2969%" y="1893" width="0.1544%" height="15" fill="rgb(248,25,0)" fg:x="308425700" fg:w="2602410"/><text x="18.5469%" y="1903.50"></text></g><g><title>alloc::slice::hack::to_vec (2,602,410 samples, 0.15%)</title><rect x="18.2969%" y="1877" width="0.1544%" height="15" fill="rgb(206,152,27)" fg:x="308425700" fg:w="2602410"/><text x="18.5469%" y="1887.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,602,410 samples, 0.15%)</title><rect x="18.2969%" y="1861" width="0.1544%" height="15" fill="rgb(240,77,30)" fg:x="308425700" fg:w="2602410"/><text x="18.5469%" y="1871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,602,410 samples, 0.15%)</title><rect x="18.2969%" y="1845" width="0.1544%" height="15" fill="rgb(231,5,3)" fg:x="308425700" fg:w="2602410"/><text x="18.5469%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,602,410 samples, 0.15%)</title><rect x="18.2969%" y="1829" width="0.1544%" height="15" fill="rgb(207,226,32)" fg:x="308425700" fg:w="2602410"/><text x="18.5469%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,602,410 samples, 0.15%)</title><rect x="18.2969%" y="1813" width="0.1544%" height="15" fill="rgb(222,207,47)" fg:x="308425700" fg:w="2602410"/><text x="18.5469%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,602,410 samples, 0.15%)</title><rect x="18.2969%" y="1797" width="0.1544%" height="15" fill="rgb(229,115,45)" fg:x="308425700" fg:w="2602410"/><text x="18.5469%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,602,410 samples, 0.15%)</title><rect x="18.2969%" y="1781" width="0.1544%" height="15" fill="rgb(224,191,6)" fg:x="308425700" fg:w="2602410"/><text x="18.5469%" y="1791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,602,410 samples, 0.15%)</title><rect x="18.2969%" y="1765" width="0.1544%" height="15" fill="rgb(230,227,24)" fg:x="308425700" fg:w="2602410"/><text x="18.5469%" y="1775.50"></text></g><g><title>alloc::alloc::alloc (2,602,410 samples, 0.15%)</title><rect x="18.2969%" y="1749" width="0.1544%" height="15" fill="rgb(228,80,19)" fg:x="308425700" fg:w="2602410"/><text x="18.5469%" y="1759.50"></text></g><g><title>malloc (2,602,410 samples, 0.15%)</title><rect x="18.2969%" y="1733" width="0.1544%" height="15" fill="rgb(247,229,0)" fg:x="308425700" fg:w="2602410"/><text x="18.5469%" y="1743.50"></text></g><g><title>__rdl_alloc (2,851,433 samples, 0.17%)</title><rect x="18.4513%" y="1653" width="0.1692%" height="15" fill="rgb(237,194,15)" fg:x="311028110" fg:w="2851433"/><text x="18.7013%" y="1663.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,851,433 samples, 0.17%)</title><rect x="18.4513%" y="1637" width="0.1692%" height="15" fill="rgb(219,203,20)" fg:x="311028110" fg:w="2851433"/><text x="18.7013%" y="1647.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8,180,716 samples, 0.49%)</title><rect x="18.4513%" y="1845" width="0.4853%" height="15" fill="rgb(234,128,8)" fg:x="311028110" fg:w="8180716"/><text x="18.7013%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,180,716 samples, 0.49%)</title><rect x="18.4513%" y="1829" width="0.4853%" height="15" fill="rgb(248,202,8)" fg:x="311028110" fg:w="8180716"/><text x="18.7013%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,180,716 samples, 0.49%)</title><rect x="18.4513%" y="1813" width="0.4853%" height="15" fill="rgb(206,104,37)" fg:x="311028110" fg:w="8180716"/><text x="18.7013%" y="1823.50"></text></g><g><title>alloc::slice::hack::to_vec (8,180,716 samples, 0.49%)</title><rect x="18.4513%" y="1797" width="0.4853%" height="15" fill="rgb(223,8,27)" fg:x="311028110" fg:w="8180716"/><text x="18.7013%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,180,716 samples, 0.49%)</title><rect x="18.4513%" y="1781" width="0.4853%" height="15" fill="rgb(216,217,28)" fg:x="311028110" fg:w="8180716"/><text x="18.7013%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8,180,716 samples, 0.49%)</title><rect x="18.4513%" y="1765" width="0.4853%" height="15" fill="rgb(249,199,1)" fg:x="311028110" fg:w="8180716"/><text x="18.7013%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,180,716 samples, 0.49%)</title><rect x="18.4513%" y="1749" width="0.4853%" height="15" fill="rgb(240,85,17)" fg:x="311028110" fg:w="8180716"/><text x="18.7013%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (8,180,716 samples, 0.49%)</title><rect x="18.4513%" y="1733" width="0.4853%" height="15" fill="rgb(206,108,45)" fg:x="311028110" fg:w="8180716"/><text x="18.7013%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (8,180,716 samples, 0.49%)</title><rect x="18.4513%" y="1717" width="0.4853%" height="15" fill="rgb(245,210,41)" fg:x="311028110" fg:w="8180716"/><text x="18.7013%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,180,716 samples, 0.49%)</title><rect x="18.4513%" y="1701" width="0.4853%" height="15" fill="rgb(206,13,37)" fg:x="311028110" fg:w="8180716"/><text x="18.7013%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,180,716 samples, 0.49%)</title><rect x="18.4513%" y="1685" width="0.4853%" height="15" fill="rgb(250,61,18)" fg:x="311028110" fg:w="8180716"/><text x="18.7013%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (8,180,716 samples, 0.49%)</title><rect x="18.4513%" y="1669" width="0.4853%" height="15" fill="rgb(235,172,48)" fg:x="311028110" fg:w="8180716"/><text x="18.7013%" y="1679.50"></text></g><g><title>malloc (5,329,283 samples, 0.32%)</title><rect x="18.6205%" y="1653" width="0.3162%" height="15" fill="rgb(249,201,17)" fg:x="313879543" fg:w="5329283"/><text x="18.8705%" y="1663.50"></text></g><g><title>[libc.so.6] (5,329,283 samples, 0.32%)</title><rect x="18.6205%" y="1637" width="0.3162%" height="15" fill="rgb(219,208,6)" fg:x="313879543" fg:w="5329283"/><text x="18.8705%" y="1647.50"></text></g><g><title>[libc.so.6] (2,927,246 samples, 0.17%)</title><rect x="18.7630%" y="1621" width="0.1737%" height="15" fill="rgb(248,31,23)" fg:x="316281580" fg:w="2927246"/><text x="19.0130%" y="1631.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (15,961,318 samples, 0.95%)</title><rect x="18.9366%" y="1765" width="0.9469%" height="15" fill="rgb(245,15,42)" fg:x="319208826" fg:w="15961318"/><text x="19.1866%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15,961,318 samples, 0.95%)</title><rect x="18.9366%" y="1749" width="0.9469%" height="15" fill="rgb(222,217,39)" fg:x="319208826" fg:w="15961318"/><text x="19.1866%" y="1759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15,961,318 samples, 0.95%)</title><rect x="18.9366%" y="1733" width="0.9469%" height="15" fill="rgb(210,219,27)" fg:x="319208826" fg:w="15961318"/><text x="19.1866%" y="1743.50"></text></g><g><title>alloc::slice::hack::to_vec (15,961,318 samples, 0.95%)</title><rect x="18.9366%" y="1717" width="0.9469%" height="15" fill="rgb(252,166,36)" fg:x="319208826" fg:w="15961318"/><text x="19.1866%" y="1727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15,961,318 samples, 0.95%)</title><rect x="18.9366%" y="1701" width="0.9469%" height="15" fill="rgb(245,132,34)" fg:x="319208826" fg:w="15961318"/><text x="19.1866%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15,961,318 samples, 0.95%)</title><rect x="18.9366%" y="1685" width="0.9469%" height="15" fill="rgb(236,54,3)" fg:x="319208826" fg:w="15961318"/><text x="19.1866%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15,961,318 samples, 0.95%)</title><rect x="18.9366%" y="1669" width="0.9469%" height="15" fill="rgb(241,173,43)" fg:x="319208826" fg:w="15961318"/><text x="19.1866%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (15,961,318 samples, 0.95%)</title><rect x="18.9366%" y="1653" width="0.9469%" height="15" fill="rgb(215,190,9)" fg:x="319208826" fg:w="15961318"/><text x="19.1866%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (15,961,318 samples, 0.95%)</title><rect x="18.9366%" y="1637" width="0.9469%" height="15" fill="rgb(242,101,16)" fg:x="319208826" fg:w="15961318"/><text x="19.1866%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15,961,318 samples, 0.95%)</title><rect x="18.9366%" y="1621" width="0.9469%" height="15" fill="rgb(223,190,21)" fg:x="319208826" fg:w="15961318"/><text x="19.1866%" y="1631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15,961,318 samples, 0.95%)</title><rect x="18.9366%" y="1605" width="0.9469%" height="15" fill="rgb(215,228,25)" fg:x="319208826" fg:w="15961318"/><text x="19.1866%" y="1615.50"></text></g><g><title>alloc::alloc::alloc (15,961,318 samples, 0.95%)</title><rect x="18.9366%" y="1589" width="0.9469%" height="15" fill="rgb(225,36,22)" fg:x="319208826" fg:w="15961318"/><text x="19.1866%" y="1599.50"></text></g><g><title>malloc (15,961,318 samples, 0.95%)</title><rect x="18.9366%" y="1573" width="0.9469%" height="15" fill="rgb(251,106,46)" fg:x="319208826" fg:w="15961318"/><text x="19.1866%" y="1583.50"></text></g><g><title>[libc.so.6] (15,961,318 samples, 0.95%)</title><rect x="18.9366%" y="1557" width="0.9469%" height="15" fill="rgb(208,90,1)" fg:x="319208826" fg:w="15961318"/><text x="19.1866%" y="1567.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,032,622 samples, 0.18%)</title><rect x="19.8835%" y="1685" width="0.1799%" height="15" fill="rgb(243,10,4)" fg:x="335170144" fg:w="3032622"/><text x="20.1335%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,032,622 samples, 0.18%)</title><rect x="19.8835%" y="1669" width="0.1799%" height="15" fill="rgb(212,137,27)" fg:x="335170144" fg:w="3032622"/><text x="20.1335%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,032,622 samples, 0.18%)</title><rect x="19.8835%" y="1653" width="0.1799%" height="15" fill="rgb(231,220,49)" fg:x="335170144" fg:w="3032622"/><text x="20.1335%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (3,032,622 samples, 0.18%)</title><rect x="19.8835%" y="1637" width="0.1799%" height="15" fill="rgb(237,96,20)" fg:x="335170144" fg:w="3032622"/><text x="20.1335%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,032,622 samples, 0.18%)</title><rect x="19.8835%" y="1621" width="0.1799%" height="15" fill="rgb(239,229,30)" fg:x="335170144" fg:w="3032622"/><text x="20.1335%" y="1631.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,032,622 samples, 0.18%)</title><rect x="19.8835%" y="1605" width="0.1799%" height="15" fill="rgb(219,65,33)" fg:x="335170144" fg:w="3032622"/><text x="20.1335%" y="1615.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,032,622 samples, 0.18%)</title><rect x="19.8835%" y="1589" width="0.1799%" height="15" fill="rgb(243,134,7)" fg:x="335170144" fg:w="3032622"/><text x="20.1335%" y="1599.50"></text></g><g><title>[libc.so.6] (3,032,622 samples, 0.18%)</title><rect x="19.8835%" y="1573" width="0.1799%" height="15" fill="rgb(216,177,54)" fg:x="335170144" fg:w="3032622"/><text x="20.1335%" y="1583.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,639,555 samples, 0.16%)</title><rect x="20.0634%" y="1605" width="0.1566%" height="15" fill="rgb(211,160,20)" fg:x="338202766" fg:w="2639555"/><text x="20.3134%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,639,555 samples, 0.16%)</title><rect x="20.0634%" y="1589" width="0.1566%" height="15" fill="rgb(239,85,39)" fg:x="338202766" fg:w="2639555"/><text x="20.3134%" y="1599.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,639,555 samples, 0.16%)</title><rect x="20.0634%" y="1573" width="0.1566%" height="15" fill="rgb(232,125,22)" fg:x="338202766" fg:w="2639555"/><text x="20.3134%" y="1583.50"></text></g><g><title>alloc::slice::hack::to_vec (2,639,555 samples, 0.16%)</title><rect x="20.0634%" y="1557" width="0.1566%" height="15" fill="rgb(244,57,34)" fg:x="338202766" fg:w="2639555"/><text x="20.3134%" y="1567.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,639,555 samples, 0.16%)</title><rect x="20.0634%" y="1541" width="0.1566%" height="15" fill="rgb(214,203,32)" fg:x="338202766" fg:w="2639555"/><text x="20.3134%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,639,555 samples, 0.16%)</title><rect x="20.0634%" y="1525" width="0.1566%" height="15" fill="rgb(207,58,43)" fg:x="338202766" fg:w="2639555"/><text x="20.3134%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,639,555 samples, 0.16%)</title><rect x="20.0634%" y="1509" width="0.1566%" height="15" fill="rgb(215,193,15)" fg:x="338202766" fg:w="2639555"/><text x="20.3134%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,639,555 samples, 0.16%)</title><rect x="20.0634%" y="1493" width="0.1566%" height="15" fill="rgb(232,15,44)" fg:x="338202766" fg:w="2639555"/><text x="20.3134%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,639,555 samples, 0.16%)</title><rect x="20.0634%" y="1477" width="0.1566%" height="15" fill="rgb(212,3,48)" fg:x="338202766" fg:w="2639555"/><text x="20.3134%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,639,555 samples, 0.16%)</title><rect x="20.0634%" y="1461" width="0.1566%" height="15" fill="rgb(218,128,7)" fg:x="338202766" fg:w="2639555"/><text x="20.3134%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,639,555 samples, 0.16%)</title><rect x="20.0634%" y="1445" width="0.1566%" height="15" fill="rgb(226,216,39)" fg:x="338202766" fg:w="2639555"/><text x="20.3134%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (2,639,555 samples, 0.16%)</title><rect x="20.0634%" y="1429" width="0.1566%" height="15" fill="rgb(243,47,51)" fg:x="338202766" fg:w="2639555"/><text x="20.3134%" y="1439.50"></text></g><g><title>malloc (2,639,555 samples, 0.16%)</title><rect x="20.0634%" y="1413" width="0.1566%" height="15" fill="rgb(241,183,40)" fg:x="338202766" fg:w="2639555"/><text x="20.3134%" y="1423.50"></text></g><g><title>[libc.so.6] (2,639,555 samples, 0.16%)</title><rect x="20.0634%" y="1397" width="0.1566%" height="15" fill="rgb(231,217,32)" fg:x="338202766" fg:w="2639555"/><text x="20.3134%" y="1407.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,036,821 samples, 0.18%)</title><rect x="20.3699%" y="1525" width="0.1802%" height="15" fill="rgb(229,61,38)" fg:x="343368204" fg:w="3036821"/><text x="20.6199%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,036,821 samples, 0.18%)</title><rect x="20.3699%" y="1509" width="0.1802%" height="15" fill="rgb(225,210,5)" fg:x="343368204" fg:w="3036821"/><text x="20.6199%" y="1519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,036,821 samples, 0.18%)</title><rect x="20.3699%" y="1493" width="0.1802%" height="15" fill="rgb(231,79,45)" fg:x="343368204" fg:w="3036821"/><text x="20.6199%" y="1503.50"></text></g><g><title>alloc::slice::hack::to_vec (3,036,821 samples, 0.18%)</title><rect x="20.3699%" y="1477" width="0.1802%" height="15" fill="rgb(224,100,7)" fg:x="343368204" fg:w="3036821"/><text x="20.6199%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,036,821 samples, 0.18%)</title><rect x="20.3699%" y="1461" width="0.1802%" height="15" fill="rgb(241,198,18)" fg:x="343368204" fg:w="3036821"/><text x="20.6199%" y="1471.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,036,821 samples, 0.18%)</title><rect x="20.3699%" y="1445" width="0.1802%" height="15" fill="rgb(252,97,53)" fg:x="343368204" fg:w="3036821"/><text x="20.6199%" y="1455.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,036,821 samples, 0.18%)</title><rect x="20.3699%" y="1429" width="0.1802%" height="15" fill="rgb(220,88,7)" fg:x="343368204" fg:w="3036821"/><text x="20.6199%" y="1439.50"></text></g><g><title>[libc.so.6] (3,036,821 samples, 0.18%)</title><rect x="20.3699%" y="1413" width="0.1802%" height="15" fill="rgb(213,176,14)" fg:x="343368204" fg:w="3036821"/><text x="20.6199%" y="1423.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,640,406 samples, 0.16%)</title><rect x="20.5500%" y="1525" width="0.1566%" height="15" fill="rgb(246,73,7)" fg:x="346405025" fg:w="2640406"/><text x="20.8000%" y="1535.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,640,406 samples, 0.16%)</title><rect x="20.5500%" y="1509" width="0.1566%" height="15" fill="rgb(245,64,36)" fg:x="346405025" fg:w="2640406"/><text x="20.8000%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,640,406 samples, 0.16%)</title><rect x="20.5500%" y="1493" width="0.1566%" height="15" fill="rgb(245,80,10)" fg:x="346405025" fg:w="2640406"/><text x="20.8000%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,640,406 samples, 0.16%)</title><rect x="20.5500%" y="1477" width="0.1566%" height="15" fill="rgb(232,107,50)" fg:x="346405025" fg:w="2640406"/><text x="20.8000%" y="1487.50"></text></g><g><title>alloc::slice::hack::to_vec (2,640,406 samples, 0.16%)</title><rect x="20.5500%" y="1461" width="0.1566%" height="15" fill="rgb(253,3,0)" fg:x="346405025" fg:w="2640406"/><text x="20.8000%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,640,406 samples, 0.16%)</title><rect x="20.5500%" y="1445" width="0.1566%" height="15" fill="rgb(212,99,53)" fg:x="346405025" fg:w="2640406"/><text x="20.8000%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,640,406 samples, 0.16%)</title><rect x="20.5500%" y="1429" width="0.1566%" height="15" fill="rgb(249,111,54)" fg:x="346405025" fg:w="2640406"/><text x="20.8000%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,640,406 samples, 0.16%)</title><rect x="20.5500%" y="1413" width="0.1566%" height="15" fill="rgb(249,55,30)" fg:x="346405025" fg:w="2640406"/><text x="20.8000%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,640,406 samples, 0.16%)</title><rect x="20.5500%" y="1397" width="0.1566%" height="15" fill="rgb(237,47,42)" fg:x="346405025" fg:w="2640406"/><text x="20.8000%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,640,406 samples, 0.16%)</title><rect x="20.5500%" y="1381" width="0.1566%" height="15" fill="rgb(211,20,18)" fg:x="346405025" fg:w="2640406"/><text x="20.8000%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,640,406 samples, 0.16%)</title><rect x="20.5500%" y="1365" width="0.1566%" height="15" fill="rgb(231,203,46)" fg:x="346405025" fg:w="2640406"/><text x="20.8000%" y="1375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,640,406 samples, 0.16%)</title><rect x="20.5500%" y="1349" width="0.1566%" height="15" fill="rgb(237,142,3)" fg:x="346405025" fg:w="2640406"/><text x="20.8000%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (2,640,406 samples, 0.16%)</title><rect x="20.5500%" y="1333" width="0.1566%" height="15" fill="rgb(241,107,1)" fg:x="346405025" fg:w="2640406"/><text x="20.8000%" y="1343.50"></text></g><g><title>malloc (2,640,406 samples, 0.16%)</title><rect x="20.5500%" y="1317" width="0.1566%" height="15" fill="rgb(229,83,13)" fg:x="346405025" fg:w="2640406"/><text x="20.8000%" y="1327.50"></text></g><g><title>[libc.so.6] (2,640,406 samples, 0.16%)</title><rect x="20.5500%" y="1301" width="0.1566%" height="15" fill="rgb(241,91,40)" fg:x="346405025" fg:w="2640406"/><text x="20.8000%" y="1311.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (5,108,008 samples, 0.30%)</title><rect x="20.7067%" y="1525" width="0.3030%" height="15" fill="rgb(225,3,45)" fg:x="349045431" fg:w="5108008"/><text x="20.9567%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,108,008 samples, 0.30%)</title><rect x="20.7067%" y="1509" width="0.3030%" height="15" fill="rgb(244,223,14)" fg:x="349045431" fg:w="5108008"/><text x="20.9567%" y="1519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,108,008 samples, 0.30%)</title><rect x="20.7067%" y="1493" width="0.3030%" height="15" fill="rgb(224,124,37)" fg:x="349045431" fg:w="5108008"/><text x="20.9567%" y="1503.50"></text></g><g><title>alloc::slice::hack::to_vec (5,108,008 samples, 0.30%)</title><rect x="20.7067%" y="1477" width="0.3030%" height="15" fill="rgb(251,171,30)" fg:x="349045431" fg:w="5108008"/><text x="20.9567%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,108,008 samples, 0.30%)</title><rect x="20.7067%" y="1461" width="0.3030%" height="15" fill="rgb(236,46,54)" fg:x="349045431" fg:w="5108008"/><text x="20.9567%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,108,008 samples, 0.30%)</title><rect x="20.7067%" y="1445" width="0.3030%" height="15" fill="rgb(245,213,5)" fg:x="349045431" fg:w="5108008"/><text x="20.9567%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,108,008 samples, 0.30%)</title><rect x="20.7067%" y="1429" width="0.3030%" height="15" fill="rgb(230,144,27)" fg:x="349045431" fg:w="5108008"/><text x="20.9567%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,108,008 samples, 0.30%)</title><rect x="20.7067%" y="1413" width="0.3030%" height="15" fill="rgb(220,86,6)" fg:x="349045431" fg:w="5108008"/><text x="20.9567%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,108,008 samples, 0.30%)</title><rect x="20.7067%" y="1397" width="0.3030%" height="15" fill="rgb(240,20,13)" fg:x="349045431" fg:w="5108008"/><text x="20.9567%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,108,008 samples, 0.30%)</title><rect x="20.7067%" y="1381" width="0.3030%" height="15" fill="rgb(217,89,34)" fg:x="349045431" fg:w="5108008"/><text x="20.9567%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,108,008 samples, 0.30%)</title><rect x="20.7067%" y="1365" width="0.3030%" height="15" fill="rgb(229,13,5)" fg:x="349045431" fg:w="5108008"/><text x="20.9567%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (5,108,008 samples, 0.30%)</title><rect x="20.7067%" y="1349" width="0.3030%" height="15" fill="rgb(244,67,35)" fg:x="349045431" fg:w="5108008"/><text x="20.9567%" y="1359.50"></text></g><g><title>malloc (2,662,285 samples, 0.16%)</title><rect x="20.8518%" y="1333" width="0.1579%" height="15" fill="rgb(221,40,2)" fg:x="351491154" fg:w="2662285"/><text x="21.1018%" y="1343.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,475,819 samples, 0.15%)</title><rect x="21.0097%" y="1461" width="0.1469%" height="15" fill="rgb(237,157,21)" fg:x="354153439" fg:w="2475819"/><text x="21.2597%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,475,819 samples, 0.15%)</title><rect x="21.0097%" y="1445" width="0.1469%" height="15" fill="rgb(222,94,11)" fg:x="354153439" fg:w="2475819"/><text x="21.2597%" y="1455.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (2,475,819 samples, 0.15%)</title><rect x="21.0097%" y="1429" width="0.1469%" height="15" fill="rgb(249,113,6)" fg:x="354153439" fg:w="2475819"/><text x="21.2597%" y="1439.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,475,819 samples, 0.15%)</title><rect x="21.0097%" y="1413" width="0.1469%" height="15" fill="rgb(238,137,36)" fg:x="354153439" fg:w="2475819"/><text x="21.2597%" y="1423.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (18,391,905 samples, 1.09%)</title><rect x="20.2200%" y="1541" width="1.0911%" height="15" fill="rgb(210,102,26)" fg:x="340842321" fg:w="18391905"/><text x="20.4700%" y="1551.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5,080,787 samples, 0.30%)</title><rect x="21.0097%" y="1525" width="0.3014%" height="15" fill="rgb(218,30,30)" fg:x="354153439" fg:w="5080787"/><text x="21.2597%" y="1535.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5,080,787 samples, 0.30%)</title><rect x="21.0097%" y="1509" width="0.3014%" height="15" fill="rgb(214,67,26)" fg:x="354153439" fg:w="5080787"/><text x="21.2597%" y="1519.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5,080,787 samples, 0.30%)</title><rect x="21.0097%" y="1493" width="0.3014%" height="15" fill="rgb(251,9,53)" fg:x="354153439" fg:w="5080787"/><text x="21.2597%" y="1503.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,080,787 samples, 0.30%)</title><rect x="21.0097%" y="1477" width="0.3014%" height="15" fill="rgb(228,204,25)" fg:x="354153439" fg:w="5080787"/><text x="21.2597%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,604,968 samples, 0.15%)</title><rect x="21.1566%" y="1461" width="0.1545%" height="15" fill="rgb(207,153,8)" fg:x="356629258" fg:w="2604968"/><text x="21.4066%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,604,968 samples, 0.15%)</title><rect x="21.1566%" y="1445" width="0.1545%" height="15" fill="rgb(242,9,16)" fg:x="356629258" fg:w="2604968"/><text x="21.4066%" y="1455.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,604,968 samples, 0.15%)</title><rect x="21.1566%" y="1429" width="0.1545%" height="15" fill="rgb(217,211,10)" fg:x="356629258" fg:w="2604968"/><text x="21.4066%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,604,968 samples, 0.15%)</title><rect x="21.1566%" y="1413" width="0.1545%" height="15" fill="rgb(219,228,52)" fg:x="356629258" fg:w="2604968"/><text x="21.4066%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,604,968 samples, 0.15%)</title><rect x="21.1566%" y="1397" width="0.1545%" height="15" fill="rgb(231,92,29)" fg:x="356629258" fg:w="2604968"/><text x="21.4066%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (2,604,968 samples, 0.15%)</title><rect x="21.1566%" y="1381" width="0.1545%" height="15" fill="rgb(232,8,23)" fg:x="356629258" fg:w="2604968"/><text x="21.4066%" y="1391.50"></text></g><g><title>malloc (2,604,968 samples, 0.15%)</title><rect x="21.1566%" y="1365" width="0.1545%" height="15" fill="rgb(216,211,34)" fg:x="356629258" fg:w="2604968"/><text x="21.4066%" y="1375.50"></text></g><g><title>[libc.so.6] (2,604,968 samples, 0.15%)</title><rect x="21.1566%" y="1349" width="0.1545%" height="15" fill="rgb(236,151,0)" fg:x="356629258" fg:w="2604968"/><text x="21.4066%" y="1359.50"></text></g><g><title>__rdl_alloc (2,316,727 samples, 0.14%)</title><rect x="21.3111%" y="1429" width="0.1374%" height="15" fill="rgb(209,168,3)" fg:x="359234226" fg:w="2316727"/><text x="21.5611%" y="1439.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,316,727 samples, 0.14%)</title><rect x="21.3111%" y="1413" width="0.1374%" height="15" fill="rgb(208,129,28)" fg:x="359234226" fg:w="2316727"/><text x="21.5611%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23,341,883 samples, 1.38%)</title><rect x="20.2200%" y="1605" width="1.3847%" height="15" fill="rgb(229,78,22)" fg:x="340842321" fg:w="23341883"/><text x="20.4700%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23,341,883 samples, 1.38%)</title><rect x="20.2200%" y="1589" width="1.3847%" height="15" fill="rgb(228,187,13)" fg:x="340842321" fg:w="23341883"/><text x="20.4700%" y="1599.50"></text></g><g><title>alloc::slice::hack::to_vec (23,341,883 samples, 1.38%)</title><rect x="20.2200%" y="1573" width="1.3847%" height="15" fill="rgb(240,119,24)" fg:x="340842321" fg:w="23341883"/><text x="20.4700%" y="1583.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23,341,883 samples, 1.38%)</title><rect x="20.2200%" y="1557" width="1.3847%" height="15" fill="rgb(209,194,42)" fg:x="340842321" fg:w="23341883"/><text x="20.4700%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,949,978 samples, 0.29%)</title><rect x="21.3111%" y="1541" width="0.2937%" height="15" fill="rgb(247,200,46)" fg:x="359234226" fg:w="4949978"/><text x="21.5611%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,949,978 samples, 0.29%)</title><rect x="21.3111%" y="1525" width="0.2937%" height="15" fill="rgb(218,76,16)" fg:x="359234226" fg:w="4949978"/><text x="21.5611%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,949,978 samples, 0.29%)</title><rect x="21.3111%" y="1509" width="0.2937%" height="15" fill="rgb(225,21,48)" fg:x="359234226" fg:w="4949978"/><text x="21.5611%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,949,978 samples, 0.29%)</title><rect x="21.3111%" y="1493" width="0.2937%" height="15" fill="rgb(239,223,50)" fg:x="359234226" fg:w="4949978"/><text x="21.5611%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,949,978 samples, 0.29%)</title><rect x="21.3111%" y="1477" width="0.2937%" height="15" fill="rgb(244,45,21)" fg:x="359234226" fg:w="4949978"/><text x="21.5611%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,949,978 samples, 0.29%)</title><rect x="21.3111%" y="1461" width="0.2937%" height="15" fill="rgb(232,33,43)" fg:x="359234226" fg:w="4949978"/><text x="21.5611%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (4,949,978 samples, 0.29%)</title><rect x="21.3111%" y="1445" width="0.2937%" height="15" fill="rgb(209,8,3)" fg:x="359234226" fg:w="4949978"/><text x="21.5611%" y="1455.50"></text></g><g><title>malloc (2,633,251 samples, 0.16%)</title><rect x="21.4485%" y="1429" width="0.1562%" height="15" fill="rgb(214,25,53)" fg:x="361550953" fg:w="2633251"/><text x="21.6985%" y="1439.50"></text></g><g><title>[libc.so.6] (2,633,251 samples, 0.16%)</title><rect x="21.4485%" y="1413" width="0.1562%" height="15" fill="rgb(254,186,54)" fg:x="361550953" fg:w="2633251"/><text x="21.6985%" y="1423.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (28,213,279 samples, 1.67%)</title><rect x="20.0634%" y="1621" width="1.6737%" height="15" fill="rgb(208,174,49)" fg:x="338202766" fg:w="28213279"/><text x="20.3134%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1605" width="0.1324%" height="15" fill="rgb(233,191,51)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1615.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1589" width="0.1324%" height="15" fill="rgb(222,134,10)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1599.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1573" width="0.1324%" height="15" fill="rgb(230,226,20)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1583.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1557" width="0.1324%" height="15" fill="rgb(251,111,25)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1567.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1541" width="0.1324%" height="15" fill="rgb(224,40,46)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1525" width="0.1324%" height="15" fill="rgb(236,108,47)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1535.50"></text></g><g><title>core::clone::Clone::clone (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1509" width="0.1324%" height="15" fill="rgb(234,93,0)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1519.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1493" width="0.1324%" height="15" fill="rgb(224,213,32)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1477" width="0.1324%" height="15" fill="rgb(251,11,48)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1461" width="0.1324%" height="15" fill="rgb(236,173,5)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1471.50"></text></g><g><title>alloc::slice::hack::to_vec (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1445" width="0.1324%" height="15" fill="rgb(230,95,12)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1455.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1429" width="0.1324%" height="15" fill="rgb(232,209,1)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1413" width="0.1324%" height="15" fill="rgb(232,6,1)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1397" width="0.1324%" height="15" fill="rgb(210,224,50)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1381" width="0.1324%" height="15" fill="rgb(228,127,35)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1365" width="0.1324%" height="15" fill="rgb(245,102,45)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1349" width="0.1324%" height="15" fill="rgb(214,1,49)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1333" width="0.1324%" height="15" fill="rgb(226,163,40)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1317" width="0.1324%" height="15" fill="rgb(239,212,28)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1327.50"></text></g><g><title>__rdl_alloc (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1301" width="0.1324%" height="15" fill="rgb(220,20,13)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1311.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,231,841 samples, 0.13%)</title><rect x="21.6047%" y="1285" width="0.1324%" height="15" fill="rgb(210,164,35)" fg:x="364184204" fg:w="2231841"/><text x="21.8547%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30,716,432 samples, 1.82%)</title><rect x="20.0634%" y="1685" width="1.8222%" height="15" fill="rgb(248,109,41)" fg:x="338202766" fg:w="30716432"/><text x="20.3134%" y="1695.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30,716,432 samples, 1.82%)</title><rect x="20.0634%" y="1669" width="1.8222%" height="15" fill="rgb(238,23,50)" fg:x="338202766" fg:w="30716432"/><text x="20.3134%" y="1679.50">a..</text></g><g><title>alloc::slice::hack::to_vec (30,716,432 samples, 1.82%)</title><rect x="20.0634%" y="1653" width="1.8222%" height="15" fill="rgb(211,48,49)" fg:x="338202766" fg:w="30716432"/><text x="20.3134%" y="1663.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30,716,432 samples, 1.82%)</title><rect x="20.0634%" y="1637" width="1.8222%" height="15" fill="rgb(223,36,21)" fg:x="338202766" fg:w="30716432"/><text x="20.3134%" y="1647.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,503,153 samples, 0.15%)</title><rect x="21.7372%" y="1621" width="0.1485%" height="15" fill="rgb(207,123,46)" fg:x="366416045" fg:w="2503153"/><text x="21.9872%" y="1631.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5,581,772 samples, 0.33%)</title><rect x="21.8856%" y="1685" width="0.3311%" height="15" fill="rgb(240,218,32)" fg:x="368919198" fg:w="5581772"/><text x="22.1356%" y="1695.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,873,449 samples, 0.17%)</title><rect x="22.2168%" y="1685" width="0.1705%" height="15" fill="rgb(252,5,43)" fg:x="374500970" fg:w="2873449"/><text x="22.4668%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,873,449 samples, 0.17%)</title><rect x="22.2168%" y="1669" width="0.1705%" height="15" fill="rgb(252,84,19)" fg:x="374500970" fg:w="2873449"/><text x="22.4668%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,873,449 samples, 0.17%)</title><rect x="22.2168%" y="1653" width="0.1705%" height="15" fill="rgb(243,152,39)" fg:x="374500970" fg:w="2873449"/><text x="22.4668%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (2,873,449 samples, 0.17%)</title><rect x="22.2168%" y="1637" width="0.1705%" height="15" fill="rgb(234,160,15)" fg:x="374500970" fg:w="2873449"/><text x="22.4668%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,873,449 samples, 0.17%)</title><rect x="22.2168%" y="1621" width="0.1705%" height="15" fill="rgb(237,34,20)" fg:x="374500970" fg:w="2873449"/><text x="22.4668%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,873,449 samples, 0.17%)</title><rect x="22.2168%" y="1605" width="0.1705%" height="15" fill="rgb(229,97,13)" fg:x="374500970" fg:w="2873449"/><text x="22.4668%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,873,449 samples, 0.17%)</title><rect x="22.2168%" y="1589" width="0.1705%" height="15" fill="rgb(234,71,50)" fg:x="374500970" fg:w="2873449"/><text x="22.4668%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,873,449 samples, 0.17%)</title><rect x="22.2168%" y="1573" width="0.1705%" height="15" fill="rgb(253,155,4)" fg:x="374500970" fg:w="2873449"/><text x="22.4668%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,873,449 samples, 0.17%)</title><rect x="22.2168%" y="1557" width="0.1705%" height="15" fill="rgb(222,185,37)" fg:x="374500970" fg:w="2873449"/><text x="22.4668%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,873,449 samples, 0.17%)</title><rect x="22.2168%" y="1541" width="0.1705%" height="15" fill="rgb(251,177,13)" fg:x="374500970" fg:w="2873449"/><text x="22.4668%" y="1551.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,873,449 samples, 0.17%)</title><rect x="22.2168%" y="1525" width="0.1705%" height="15" fill="rgb(250,179,40)" fg:x="374500970" fg:w="2873449"/><text x="22.4668%" y="1535.50"></text></g><g><title>alloc::alloc::alloc (2,873,449 samples, 0.17%)</title><rect x="22.2168%" y="1509" width="0.1705%" height="15" fill="rgb(242,44,2)" fg:x="374500970" fg:w="2873449"/><text x="22.4668%" y="1519.50"></text></g><g><title>malloc (2,873,449 samples, 0.17%)</title><rect x="22.2168%" y="1493" width="0.1705%" height="15" fill="rgb(216,177,13)" fg:x="374500970" fg:w="2873449"/><text x="22.4668%" y="1503.50"></text></g><g><title>core::clone::Clone::clone (10,923,258 samples, 0.65%)</title><rect x="22.3872%" y="1589" width="0.6480%" height="15" fill="rgb(216,106,43)" fg:x="377374419" fg:w="10923258"/><text x="22.6372%" y="1599.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10,923,258 samples, 0.65%)</title><rect x="22.3872%" y="1573" width="0.6480%" height="15" fill="rgb(216,183,2)" fg:x="377374419" fg:w="10923258"/><text x="22.6372%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,196,786 samples, 0.49%)</title><rect x="22.5490%" y="1557" width="0.4863%" height="15" fill="rgb(249,75,3)" fg:x="380100891" fg:w="8196786"/><text x="22.7990%" y="1567.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,196,786 samples, 0.49%)</title><rect x="22.5490%" y="1541" width="0.4863%" height="15" fill="rgb(219,67,39)" fg:x="380100891" fg:w="8196786"/><text x="22.7990%" y="1551.50"></text></g><g><title>alloc::slice::hack::to_vec (8,196,786 samples, 0.49%)</title><rect x="22.5490%" y="1525" width="0.4863%" height="15" fill="rgb(253,228,2)" fg:x="380100891" fg:w="8196786"/><text x="22.7990%" y="1535.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,196,786 samples, 0.49%)</title><rect x="22.5490%" y="1509" width="0.4863%" height="15" fill="rgb(235,138,27)" fg:x="380100891" fg:w="8196786"/><text x="22.7990%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8,196,786 samples, 0.49%)</title><rect x="22.5490%" y="1493" width="0.4863%" height="15" fill="rgb(236,97,51)" fg:x="380100891" fg:w="8196786"/><text x="22.7990%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,196,786 samples, 0.49%)</title><rect x="22.5490%" y="1477" width="0.4863%" height="15" fill="rgb(240,80,30)" fg:x="380100891" fg:w="8196786"/><text x="22.7990%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (8,196,786 samples, 0.49%)</title><rect x="22.5490%" y="1461" width="0.4863%" height="15" fill="rgb(230,178,19)" fg:x="380100891" fg:w="8196786"/><text x="22.7990%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (8,196,786 samples, 0.49%)</title><rect x="22.5490%" y="1445" width="0.4863%" height="15" fill="rgb(210,190,27)" fg:x="380100891" fg:w="8196786"/><text x="22.7990%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,196,786 samples, 0.49%)</title><rect x="22.5490%" y="1429" width="0.4863%" height="15" fill="rgb(222,107,31)" fg:x="380100891" fg:w="8196786"/><text x="22.7990%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,196,786 samples, 0.49%)</title><rect x="22.5490%" y="1413" width="0.4863%" height="15" fill="rgb(216,127,34)" fg:x="380100891" fg:w="8196786"/><text x="22.7990%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (8,196,786 samples, 0.49%)</title><rect x="22.5490%" y="1397" width="0.4863%" height="15" fill="rgb(234,116,52)" fg:x="380100891" fg:w="8196786"/><text x="22.7990%" y="1407.50"></text></g><g><title>malloc (8,196,786 samples, 0.49%)</title><rect x="22.5490%" y="1381" width="0.4863%" height="15" fill="rgb(222,124,15)" fg:x="380100891" fg:w="8196786"/><text x="22.7990%" y="1391.50"></text></g><g><title>[libc.so.6] (5,536,011 samples, 0.33%)</title><rect x="22.7068%" y="1365" width="0.3284%" height="15" fill="rgb(231,179,28)" fg:x="382761666" fg:w="5536011"/><text x="22.9568%" y="1375.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (55,629,017 samples, 3.30%)</title><rect x="19.8835%" y="1701" width="3.3001%" height="15" fill="rgb(226,93,45)" fg:x="335170144" fg:w="55629017"/><text x="20.1335%" y="1711.50">&lt;cs..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (13,424,742 samples, 0.80%)</title><rect x="22.3872%" y="1685" width="0.7964%" height="15" fill="rgb(215,8,51)" fg:x="377374419" fg:w="13424742"/><text x="22.6372%" y="1695.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (13,424,742 samples, 0.80%)</title><rect x="22.3872%" y="1669" width="0.7964%" height="15" fill="rgb(223,106,5)" fg:x="377374419" fg:w="13424742"/><text x="22.6372%" y="1679.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (13,424,742 samples, 0.80%)</title><rect x="22.3872%" y="1653" width="0.7964%" height="15" fill="rgb(250,191,5)" fg:x="377374419" fg:w="13424742"/><text x="22.6372%" y="1663.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,424,742 samples, 0.80%)</title><rect x="22.3872%" y="1637" width="0.7964%" height="15" fill="rgb(242,132,44)" fg:x="377374419" fg:w="13424742"/><text x="22.6372%" y="1647.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (13,424,742 samples, 0.80%)</title><rect x="22.3872%" y="1621" width="0.7964%" height="15" fill="rgb(251,152,29)" fg:x="377374419" fg:w="13424742"/><text x="22.6372%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (13,424,742 samples, 0.80%)</title><rect x="22.3872%" y="1605" width="0.7964%" height="15" fill="rgb(218,179,5)" fg:x="377374419" fg:w="13424742"/><text x="22.6372%" y="1615.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (2,501,484 samples, 0.15%)</title><rect x="23.0353%" y="1589" width="0.1484%" height="15" fill="rgb(227,67,19)" fg:x="388297677" fg:w="2501484"/><text x="23.2853%" y="1599.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,501,484 samples, 0.15%)</title><rect x="23.0353%" y="1573" width="0.1484%" height="15" fill="rgb(233,119,31)" fg:x="388297677" fg:w="2501484"/><text x="23.2853%" y="1583.50"></text></g><g><title>[libc.so.6] (2,501,484 samples, 0.15%)</title><rect x="23.0353%" y="1557" width="0.1484%" height="15" fill="rgb(241,120,22)" fg:x="388297677" fg:w="2501484"/><text x="23.2853%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (60,631,781 samples, 3.60%)</title><rect x="19.8835%" y="1765" width="3.5969%" height="15" fill="rgb(224,102,30)" fg:x="335170144" fg:w="60631781"/><text x="20.1335%" y="1775.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (60,631,781 samples, 3.60%)</title><rect x="19.8835%" y="1749" width="3.5969%" height="15" fill="rgb(210,164,37)" fg:x="335170144" fg:w="60631781"/><text x="20.1335%" y="1759.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (60,631,781 samples, 3.60%)</title><rect x="19.8835%" y="1733" width="3.5969%" height="15" fill="rgb(226,191,16)" fg:x="335170144" fg:w="60631781"/><text x="20.1335%" y="1743.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (60,631,781 samples, 3.60%)</title><rect x="19.8835%" y="1717" width="3.5969%" height="15" fill="rgb(214,40,45)" fg:x="335170144" fg:w="60631781"/><text x="20.1335%" y="1727.50">&lt;T a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,002,764 samples, 0.30%)</title><rect x="23.1836%" y="1701" width="0.2968%" height="15" fill="rgb(244,29,26)" fg:x="390799161" fg:w="5002764"/><text x="23.4336%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,002,764 samples, 0.30%)</title><rect x="23.1836%" y="1685" width="0.2968%" height="15" fill="rgb(216,16,5)" fg:x="390799161" fg:w="5002764"/><text x="23.4336%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,002,764 samples, 0.30%)</title><rect x="23.1836%" y="1669" width="0.2968%" height="15" fill="rgb(249,76,35)" fg:x="390799161" fg:w="5002764"/><text x="23.4336%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,002,764 samples, 0.30%)</title><rect x="23.1836%" y="1653" width="0.2968%" height="15" fill="rgb(207,11,44)" fg:x="390799161" fg:w="5002764"/><text x="23.4336%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,002,764 samples, 0.30%)</title><rect x="23.1836%" y="1637" width="0.2968%" height="15" fill="rgb(228,190,49)" fg:x="390799161" fg:w="5002764"/><text x="23.4336%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,002,764 samples, 0.30%)</title><rect x="23.1836%" y="1621" width="0.2968%" height="15" fill="rgb(214,173,12)" fg:x="390799161" fg:w="5002764"/><text x="23.4336%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (5,002,764 samples, 0.30%)</title><rect x="23.1836%" y="1605" width="0.2968%" height="15" fill="rgb(218,26,35)" fg:x="390799161" fg:w="5002764"/><text x="23.4336%" y="1615.50"></text></g><g><title>malloc (5,002,764 samples, 0.30%)</title><rect x="23.1836%" y="1589" width="0.2968%" height="15" fill="rgb(220,200,19)" fg:x="390799161" fg:w="5002764"/><text x="23.4336%" y="1599.50"></text></g><g><title>[libc.so.6] (5,002,764 samples, 0.30%)</title><rect x="23.1836%" y="1573" width="0.2968%" height="15" fill="rgb(239,95,49)" fg:x="390799161" fg:w="5002764"/><text x="23.4336%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10,442,643 samples, 0.62%)</title><rect x="23.7544%" y="1669" width="0.6195%" height="15" fill="rgb(235,85,53)" fg:x="400420552" fg:w="10442643"/><text x="24.0044%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10,442,643 samples, 0.62%)</title><rect x="23.7544%" y="1653" width="0.6195%" height="15" fill="rgb(233,133,31)" fg:x="400420552" fg:w="10442643"/><text x="24.0044%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (10,442,643 samples, 0.62%)</title><rect x="23.7544%" y="1637" width="0.6195%" height="15" fill="rgb(218,25,20)" fg:x="400420552" fg:w="10442643"/><text x="24.0044%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (10,442,643 samples, 0.62%)</title><rect x="23.7544%" y="1621" width="0.6195%" height="15" fill="rgb(252,210,38)" fg:x="400420552" fg:w="10442643"/><text x="24.0044%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,442,643 samples, 0.62%)</title><rect x="23.7544%" y="1605" width="0.6195%" height="15" fill="rgb(242,134,21)" fg:x="400420552" fg:w="10442643"/><text x="24.0044%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10,442,643 samples, 0.62%)</title><rect x="23.7544%" y="1589" width="0.6195%" height="15" fill="rgb(213,28,48)" fg:x="400420552" fg:w="10442643"/><text x="24.0044%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (10,442,643 samples, 0.62%)</title><rect x="23.7544%" y="1573" width="0.6195%" height="15" fill="rgb(250,196,2)" fg:x="400420552" fg:w="10442643"/><text x="24.0044%" y="1583.50"></text></g><g><title>malloc (10,442,643 samples, 0.62%)</title><rect x="23.7544%" y="1557" width="0.6195%" height="15" fill="rgb(227,5,17)" fg:x="400420552" fg:w="10442643"/><text x="24.0044%" y="1567.50"></text></g><g><title>[libc.so.6] (4,871,081 samples, 0.29%)</title><rect x="24.0849%" y="1541" width="0.2890%" height="15" fill="rgb(221,226,24)" fg:x="405992114" fg:w="4871081"/><text x="24.3349%" y="1551.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (17,530,897 samples, 1.04%)</title><rect x="23.4804%" y="1765" width="1.0400%" height="15" fill="rgb(211,5,48)" fg:x="395801925" fg:w="17530897"/><text x="23.7304%" y="1775.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (15,311,860 samples, 0.91%)</title><rect x="23.6121%" y="1749" width="0.9084%" height="15" fill="rgb(219,150,6)" fg:x="398020962" fg:w="15311860"/><text x="23.8621%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,912,270 samples, 0.77%)</title><rect x="23.7544%" y="1733" width="0.7660%" height="15" fill="rgb(251,46,16)" fg:x="400420552" fg:w="12912270"/><text x="24.0044%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12,912,270 samples, 0.77%)</title><rect x="23.7544%" y="1717" width="0.7660%" height="15" fill="rgb(220,204,40)" fg:x="400420552" fg:w="12912270"/><text x="24.0044%" y="1727.50"></text></g><g><title>alloc::slice::hack::to_vec (12,912,270 samples, 0.77%)</title><rect x="23.7544%" y="1701" width="0.7660%" height="15" fill="rgb(211,85,2)" fg:x="400420552" fg:w="12912270"/><text x="24.0044%" y="1711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12,912,270 samples, 0.77%)</title><rect x="23.7544%" y="1685" width="0.7660%" height="15" fill="rgb(229,17,7)" fg:x="400420552" fg:w="12912270"/><text x="24.0044%" y="1695.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,469,627 samples, 0.15%)</title><rect x="24.3739%" y="1669" width="0.1465%" height="15" fill="rgb(239,72,28)" fg:x="410863195" fg:w="2469627"/><text x="24.6239%" y="1679.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,469,627 samples, 0.15%)</title><rect x="24.3739%" y="1653" width="0.1465%" height="15" fill="rgb(230,47,54)" fg:x="410863195" fg:w="2469627"/><text x="24.6239%" y="1663.50"></text></g><g><title>[libc.so.6] (2,469,627 samples, 0.15%)</title><rect x="24.3739%" y="1637" width="0.1465%" height="15" fill="rgb(214,50,8)" fg:x="410863195" fg:w="2469627"/><text x="24.6239%" y="1647.50"></text></g><g><title>[libc.so.6] (5,453,932 samples, 0.32%)</title><rect x="25.4984%" y="1461" width="0.3235%" height="15" fill="rgb(216,198,43)" fg:x="429818076" fg:w="5453932"/><text x="25.7484%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32,127,297 samples, 1.91%)</title><rect x="25.1792%" y="1573" width="1.9059%" height="15" fill="rgb(234,20,35)" fg:x="424436972" fg:w="32127297"/><text x="25.4292%" y="1583.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (32,127,297 samples, 1.91%)</title><rect x="25.1792%" y="1557" width="1.9059%" height="15" fill="rgb(254,45,19)" fg:x="424436972" fg:w="32127297"/><text x="25.4292%" y="1567.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (32,127,297 samples, 1.91%)</title><rect x="25.1792%" y="1541" width="1.9059%" height="15" fill="rgb(219,14,44)" fg:x="424436972" fg:w="32127297"/><text x="25.4292%" y="1551.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (32,127,297 samples, 1.91%)</title><rect x="25.1792%" y="1525" width="1.9059%" height="15" fill="rgb(217,220,26)" fg:x="424436972" fg:w="32127297"/><text x="25.4292%" y="1535.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26,746,193 samples, 1.59%)</title><rect x="25.4984%" y="1509" width="1.5867%" height="15" fill="rgb(213,158,28)" fg:x="429818076" fg:w="26746193"/><text x="25.7484%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26,746,193 samples, 1.59%)</title><rect x="25.4984%" y="1493" width="1.5867%" height="15" fill="rgb(252,51,52)" fg:x="429818076" fg:w="26746193"/><text x="25.7484%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (26,746,193 samples, 1.59%)</title><rect x="25.4984%" y="1477" width="1.5867%" height="15" fill="rgb(246,89,16)" fg:x="429818076" fg:w="26746193"/><text x="25.7484%" y="1487.50"></text></g><g><title>malloc (21,292,261 samples, 1.26%)</title><rect x="25.8219%" y="1461" width="1.2631%" height="15" fill="rgb(216,158,49)" fg:x="435272008" fg:w="21292261"/><text x="26.0719%" y="1471.50"></text></g><g><title>[libc.so.6] (16,034,647 samples, 0.95%)</title><rect x="26.1338%" y="1445" width="0.9512%" height="15" fill="rgb(236,107,19)" fg:x="440529622" fg:w="16034647"/><text x="26.3838%" y="1455.50"></text></g><g><title>core::clone::Clone::clone (40,514,030 samples, 2.40%)</title><rect x="25.0048%" y="1669" width="2.4034%" height="15" fill="rgb(228,185,30)" fg:x="421497747" fg:w="40514030"/><text x="25.2548%" y="1679.50">co..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (40,514,030 samples, 2.40%)</title><rect x="25.0048%" y="1653" width="2.4034%" height="15" fill="rgb(246,134,8)" fg:x="421497747" fg:w="40514030"/><text x="25.2548%" y="1663.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37,574,805 samples, 2.23%)</title><rect x="25.1792%" y="1637" width="2.2291%" height="15" fill="rgb(214,143,50)" fg:x="424436972" fg:w="37574805"/><text x="25.4292%" y="1647.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37,574,805 samples, 2.23%)</title><rect x="25.1792%" y="1621" width="2.2291%" height="15" fill="rgb(228,75,8)" fg:x="424436972" fg:w="37574805"/><text x="25.4292%" y="1631.50">a..</text></g><g><title>alloc::slice::hack::to_vec (37,574,805 samples, 2.23%)</title><rect x="25.1792%" y="1605" width="2.2291%" height="15" fill="rgb(207,175,4)" fg:x="424436972" fg:w="37574805"/><text x="25.4292%" y="1615.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37,574,805 samples, 2.23%)</title><rect x="25.1792%" y="1589" width="2.2291%" height="15" fill="rgb(205,108,24)" fg:x="424436972" fg:w="37574805"/><text x="25.4292%" y="1599.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5,447,508 samples, 0.32%)</title><rect x="27.0851%" y="1573" width="0.3232%" height="15" fill="rgb(244,120,49)" fg:x="456564269" fg:w="5447508"/><text x="27.3351%" y="1583.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5,447,508 samples, 0.32%)</title><rect x="27.0851%" y="1557" width="0.3232%" height="15" fill="rgb(223,47,38)" fg:x="456564269" fg:w="5447508"/><text x="27.3351%" y="1567.50"></text></g><g><title>[libc.so.6] (5,447,508 samples, 0.32%)</title><rect x="27.0851%" y="1541" width="0.3232%" height="15" fill="rgb(229,179,11)" fg:x="456564269" fg:w="5447508"/><text x="27.3351%" y="1551.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (45,639,546 samples, 2.71%)</title><rect x="24.8582%" y="1701" width="2.7075%" height="15" fill="rgb(231,122,1)" fg:x="419026867" fg:w="45639546"/><text x="25.1082%" y="1711.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (45,639,546 samples, 2.71%)</title><rect x="24.8582%" y="1685" width="2.7075%" height="15" fill="rgb(245,119,9)" fg:x="419026867" fg:w="45639546"/><text x="25.1082%" y="1695.50">ha..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (2,654,636 samples, 0.16%)</title><rect x="27.4082%" y="1669" width="0.1575%" height="15" fill="rgb(241,163,25)" fg:x="462011777" fg:w="2654636"/><text x="27.6582%" y="1679.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,654,636 samples, 0.16%)</title><rect x="27.4082%" y="1653" width="0.1575%" height="15" fill="rgb(217,214,3)" fg:x="462011777" fg:w="2654636"/><text x="27.6582%" y="1663.50"></text></g><g><title>[libc.so.6] (2,654,636 samples, 0.16%)</title><rect x="27.4082%" y="1637" width="0.1575%" height="15" fill="rgb(240,86,28)" fg:x="462011777" fg:w="2654636"/><text x="27.6582%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (53,670,760 samples, 3.18%)</title><rect x="24.5204%" y="1765" width="3.1839%" height="15" fill="rgb(215,47,9)" fg:x="413332822" fg:w="53670760"/><text x="24.7704%" y="1775.50">&lt;st..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (53,670,760 samples, 3.18%)</title><rect x="24.5204%" y="1749" width="3.1839%" height="15" fill="rgb(252,25,45)" fg:x="413332822" fg:w="53670760"/><text x="24.7704%" y="1759.50">&lt;ha..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (50,814,078 samples, 3.01%)</title><rect x="24.6899%" y="1733" width="3.0145%" height="15" fill="rgb(251,164,9)" fg:x="416189504" fg:w="50814078"/><text x="24.9399%" y="1743.50">&lt;ha..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (50,814,078 samples, 3.01%)</title><rect x="24.6899%" y="1717" width="3.0145%" height="15" fill="rgb(233,194,0)" fg:x="416189504" fg:w="50814078"/><text x="24.9399%" y="1727.50">&lt;ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,337,169 samples, 0.14%)</title><rect x="27.5657%" y="1701" width="0.1386%" height="15" fill="rgb(249,111,24)" fg:x="464666413" fg:w="2337169"/><text x="27.8157%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,337,169 samples, 0.14%)</title><rect x="27.5657%" y="1685" width="0.1386%" height="15" fill="rgb(250,223,3)" fg:x="464666413" fg:w="2337169"/><text x="27.8157%" y="1695.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,337,169 samples, 0.14%)</title><rect x="27.5657%" y="1669" width="0.1386%" height="15" fill="rgb(236,178,37)" fg:x="464666413" fg:w="2337169"/><text x="27.8157%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,337,169 samples, 0.14%)</title><rect x="27.5657%" y="1653" width="0.1386%" height="15" fill="rgb(241,158,50)" fg:x="464666413" fg:w="2337169"/><text x="27.8157%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,337,169 samples, 0.14%)</title><rect x="27.5657%" y="1637" width="0.1386%" height="15" fill="rgb(213,121,41)" fg:x="464666413" fg:w="2337169"/><text x="27.8157%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (2,337,169 samples, 0.14%)</title><rect x="27.5657%" y="1621" width="0.1386%" height="15" fill="rgb(240,92,3)" fg:x="464666413" fg:w="2337169"/><text x="27.8157%" y="1631.50"></text></g><g><title>__rdl_alloc (2,337,169 samples, 0.14%)</title><rect x="27.5657%" y="1605" width="0.1386%" height="15" fill="rgb(205,123,3)" fg:x="464666413" fg:w="2337169"/><text x="27.8157%" y="1615.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,337,169 samples, 0.14%)</title><rect x="27.5657%" y="1589" width="0.1386%" height="15" fill="rgb(205,97,47)" fg:x="464666413" fg:w="2337169"/><text x="27.8157%" y="1599.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (150,491,256 samples, 8.93%)</title><rect x="18.9366%" y="1781" width="8.9277%" height="15" fill="rgb(247,152,14)" fg:x="319208826" fg:w="150491256"/><text x="19.1866%" y="1791.50">&lt;css_bitvecto..</text></g><g><title>malloc (2,696,500 samples, 0.16%)</title><rect x="27.7044%" y="1765" width="0.1600%" height="15" fill="rgb(248,195,53)" fg:x="467003582" fg:w="2696500"/><text x="27.9544%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (3,048,326 samples, 0.18%)</title><rect x="27.8643%" y="1781" width="0.1808%" height="15" fill="rgb(226,201,16)" fg:x="469700082" fg:w="3048326"/><text x="28.1143%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,617,932 samples, 0.45%)</title><rect x="28.0452%" y="1781" width="0.4519%" height="15" fill="rgb(205,98,0)" fg:x="472748408" fg:w="7617932"/><text x="28.2952%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7,617,932 samples, 0.45%)</title><rect x="28.0452%" y="1765" width="0.4519%" height="15" fill="rgb(214,191,48)" fg:x="472748408" fg:w="7617932"/><text x="28.2952%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7,617,932 samples, 0.45%)</title><rect x="28.0452%" y="1749" width="0.4519%" height="15" fill="rgb(237,112,39)" fg:x="472748408" fg:w="7617932"/><text x="28.2952%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7,617,932 samples, 0.45%)</title><rect x="28.0452%" y="1733" width="0.4519%" height="15" fill="rgb(247,203,27)" fg:x="472748408" fg:w="7617932"/><text x="28.2952%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,617,932 samples, 0.45%)</title><rect x="28.0452%" y="1717" width="0.4519%" height="15" fill="rgb(235,124,28)" fg:x="472748408" fg:w="7617932"/><text x="28.2952%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,617,932 samples, 0.45%)</title><rect x="28.0452%" y="1701" width="0.4519%" height="15" fill="rgb(208,207,46)" fg:x="472748408" fg:w="7617932"/><text x="28.2952%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (7,617,932 samples, 0.45%)</title><rect x="28.0452%" y="1685" width="0.4519%" height="15" fill="rgb(234,176,4)" fg:x="472748408" fg:w="7617932"/><text x="28.2952%" y="1695.50"></text></g><g><title>malloc (5,026,422 samples, 0.30%)</title><rect x="28.1989%" y="1669" width="0.2982%" height="15" fill="rgb(230,133,28)" fg:x="475339918" fg:w="5026422"/><text x="28.4489%" y="1679.50"></text></g><g><title>[libc.so.6] (2,523,169 samples, 0.15%)</title><rect x="28.3474%" y="1653" width="0.1497%" height="15" fill="rgb(211,137,40)" fg:x="477843171" fg:w="2523169"/><text x="28.5974%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (164,045,093 samples, 9.73%)</title><rect x="18.9366%" y="1845" width="9.7318%" height="15" fill="rgb(254,35,13)" fg:x="319208826" fg:w="164045093"/><text x="19.1866%" y="1855.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (164,045,093 samples, 9.73%)</title><rect x="18.9366%" y="1829" width="9.7318%" height="15" fill="rgb(225,49,51)" fg:x="319208826" fg:w="164045093"/><text x="19.1866%" y="1839.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (164,045,093 samples, 9.73%)</title><rect x="18.9366%" y="1813" width="9.7318%" height="15" fill="rgb(251,10,15)" fg:x="319208826" fg:w="164045093"/><text x="19.1866%" y="1823.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (164,045,093 samples, 9.73%)</title><rect x="18.9366%" y="1797" width="9.7318%" height="15" fill="rgb(228,207,15)" fg:x="319208826" fg:w="164045093"/><text x="19.1866%" y="1807.50">&lt;T as alloc::s..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,887,579 samples, 0.17%)</title><rect x="28.4971%" y="1781" width="0.1713%" height="15" fill="rgb(241,99,19)" fg:x="480366340" fg:w="2887579"/><text x="28.7471%" y="1791.50"></text></g><g><title>__rdl_alloc (2,728,996 samples, 0.16%)</title><rect x="28.8119%" y="1637" width="0.1619%" height="15" fill="rgb(207,104,49)" fg:x="485672754" fg:w="2728996"/><text x="29.0619%" y="1647.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,728,996 samples, 0.16%)</title><rect x="28.8119%" y="1621" width="0.1619%" height="15" fill="rgb(234,99,18)" fg:x="485672754" fg:w="2728996"/><text x="29.0619%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,404,184 samples, 0.44%)</title><rect x="28.8119%" y="1749" width="0.4392%" height="15" fill="rgb(213,191,49)" fg:x="485672754" fg:w="7404184"/><text x="29.0619%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7,404,184 samples, 0.44%)</title><rect x="28.8119%" y="1733" width="0.4392%" height="15" fill="rgb(210,226,19)" fg:x="485672754" fg:w="7404184"/><text x="29.0619%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7,404,184 samples, 0.44%)</title><rect x="28.8119%" y="1717" width="0.4392%" height="15" fill="rgb(229,97,18)" fg:x="485672754" fg:w="7404184"/><text x="29.0619%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7,404,184 samples, 0.44%)</title><rect x="28.8119%" y="1701" width="0.4392%" height="15" fill="rgb(211,167,15)" fg:x="485672754" fg:w="7404184"/><text x="29.0619%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,404,184 samples, 0.44%)</title><rect x="28.8119%" y="1685" width="0.4392%" height="15" fill="rgb(210,169,34)" fg:x="485672754" fg:w="7404184"/><text x="29.0619%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,404,184 samples, 0.44%)</title><rect x="28.8119%" y="1669" width="0.4392%" height="15" fill="rgb(241,121,31)" fg:x="485672754" fg:w="7404184"/><text x="29.0619%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (7,404,184 samples, 0.44%)</title><rect x="28.8119%" y="1653" width="0.4392%" height="15" fill="rgb(232,40,11)" fg:x="485672754" fg:w="7404184"/><text x="29.0619%" y="1663.50"></text></g><g><title>malloc (4,675,188 samples, 0.28%)</title><rect x="28.9738%" y="1637" width="0.2773%" height="15" fill="rgb(205,86,26)" fg:x="488401750" fg:w="4675188"/><text x="29.2238%" y="1647.50"></text></g><g><title>[libc.so.6] (2,257,056 samples, 0.13%)</title><rect x="29.1172%" y="1621" width="0.1339%" height="15" fill="rgb(231,126,28)" fg:x="490819882" fg:w="2257056"/><text x="29.3672%" y="1631.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12,664,135 samples, 0.75%)</title><rect x="28.6684%" y="1845" width="0.7513%" height="15" fill="rgb(219,221,18)" fg:x="483253919" fg:w="12664135"/><text x="28.9184%" y="1855.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10,245,300 samples, 0.61%)</title><rect x="28.8119%" y="1829" width="0.6078%" height="15" fill="rgb(211,40,0)" fg:x="485672754" fg:w="10245300"/><text x="29.0619%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,245,300 samples, 0.61%)</title><rect x="28.8119%" y="1813" width="0.6078%" height="15" fill="rgb(239,85,43)" fg:x="485672754" fg:w="10245300"/><text x="29.0619%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,245,300 samples, 0.61%)</title><rect x="28.8119%" y="1797" width="0.6078%" height="15" fill="rgb(231,55,21)" fg:x="485672754" fg:w="10245300"/><text x="29.0619%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (10,245,300 samples, 0.61%)</title><rect x="28.8119%" y="1781" width="0.6078%" height="15" fill="rgb(225,184,43)" fg:x="485672754" fg:w="10245300"/><text x="29.0619%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,245,300 samples, 0.61%)</title><rect x="28.8119%" y="1765" width="0.6078%" height="15" fill="rgb(251,158,41)" fg:x="485672754" fg:w="10245300"/><text x="29.0619%" y="1775.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,841,116 samples, 0.17%)</title><rect x="29.2511%" y="1749" width="0.1685%" height="15" fill="rgb(234,159,37)" fg:x="493076938" fg:w="2841116"/><text x="29.5011%" y="1759.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,841,116 samples, 0.17%)</title><rect x="29.2511%" y="1733" width="0.1685%" height="15" fill="rgb(216,204,22)" fg:x="493076938" fg:w="2841116"/><text x="29.5011%" y="1743.50"></text></g><g><title>[libc.so.6] (2,841,116 samples, 0.17%)</title><rect x="29.2511%" y="1717" width="0.1685%" height="15" fill="rgb(214,17,3)" fg:x="493076938" fg:w="2841116"/><text x="29.5011%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,725,724 samples, 0.16%)</title><rect x="29.4197%" y="1765" width="0.1617%" height="15" fill="rgb(212,111,17)" fg:x="495918054" fg:w="2725724"/><text x="29.6697%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,725,724 samples, 0.16%)</title><rect x="29.4197%" y="1749" width="0.1617%" height="15" fill="rgb(221,157,24)" fg:x="495918054" fg:w="2725724"/><text x="29.6697%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,725,724 samples, 0.16%)</title><rect x="29.4197%" y="1733" width="0.1617%" height="15" fill="rgb(252,16,13)" fg:x="495918054" fg:w="2725724"/><text x="29.6697%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,725,724 samples, 0.16%)</title><rect x="29.4197%" y="1717" width="0.1617%" height="15" fill="rgb(221,62,2)" fg:x="495918054" fg:w="2725724"/><text x="29.6697%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,725,724 samples, 0.16%)</title><rect x="29.4197%" y="1701" width="0.1617%" height="15" fill="rgb(247,87,22)" fg:x="495918054" fg:w="2725724"/><text x="29.6697%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,725,724 samples, 0.16%)</title><rect x="29.4197%" y="1685" width="0.1617%" height="15" fill="rgb(215,73,9)" fg:x="495918054" fg:w="2725724"/><text x="29.6697%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (2,725,724 samples, 0.16%)</title><rect x="29.4197%" y="1669" width="0.1617%" height="15" fill="rgb(207,175,33)" fg:x="495918054" fg:w="2725724"/><text x="29.6697%" y="1679.50"></text></g><g><title>malloc (2,725,724 samples, 0.16%)</title><rect x="29.4197%" y="1653" width="0.1617%" height="15" fill="rgb(243,129,54)" fg:x="495918054" fg:w="2725724"/><text x="29.6697%" y="1663.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (5,630,476 samples, 0.33%)</title><rect x="29.4197%" y="1845" width="0.3340%" height="15" fill="rgb(227,119,45)" fg:x="495918054" fg:w="5630476"/><text x="29.6697%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,630,476 samples, 0.33%)</title><rect x="29.4197%" y="1829" width="0.3340%" height="15" fill="rgb(205,109,36)" fg:x="495918054" fg:w="5630476"/><text x="29.6697%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,630,476 samples, 0.33%)</title><rect x="29.4197%" y="1813" width="0.3340%" height="15" fill="rgb(205,6,39)" fg:x="495918054" fg:w="5630476"/><text x="29.6697%" y="1823.50"></text></g><g><title>alloc::slice::hack::to_vec (5,630,476 samples, 0.33%)</title><rect x="29.4197%" y="1797" width="0.3340%" height="15" fill="rgb(221,32,16)" fg:x="495918054" fg:w="5630476"/><text x="29.6697%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,630,476 samples, 0.33%)</title><rect x="29.4197%" y="1781" width="0.3340%" height="15" fill="rgb(228,144,50)" fg:x="495918054" fg:w="5630476"/><text x="29.6697%" y="1791.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,904,752 samples, 0.17%)</title><rect x="29.5814%" y="1765" width="0.1723%" height="15" fill="rgb(229,201,53)" fg:x="498643778" fg:w="2904752"/><text x="29.8314%" y="1775.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,904,752 samples, 0.17%)</title><rect x="29.5814%" y="1749" width="0.1723%" height="15" fill="rgb(249,153,27)" fg:x="498643778" fg:w="2904752"/><text x="29.8314%" y="1759.50"></text></g><g><title>[libc.so.6] (2,904,752 samples, 0.17%)</title><rect x="29.5814%" y="1733" width="0.1723%" height="15" fill="rgb(227,106,25)" fg:x="498643778" fg:w="2904752"/><text x="29.8314%" y="1743.50"></text></g><g><title>__rdl_alloc (2,692,898 samples, 0.16%)</title><rect x="30.2006%" y="1541" width="0.1598%" height="15" fill="rgb(230,65,29)" fg:x="509080795" fg:w="2692898"/><text x="30.4506%" y="1551.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,692,898 samples, 0.16%)</title><rect x="30.2006%" y="1525" width="0.1598%" height="15" fill="rgb(221,57,46)" fg:x="509080795" fg:w="2692898"/><text x="30.4506%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18,988,119 samples, 1.13%)</title><rect x="30.2006%" y="1653" width="1.1264%" height="15" fill="rgb(229,161,17)" fg:x="509080795" fg:w="18988119"/><text x="30.4506%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18,988,119 samples, 1.13%)</title><rect x="30.2006%" y="1637" width="1.1264%" height="15" fill="rgb(222,213,11)" fg:x="509080795" fg:w="18988119"/><text x="30.4506%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (18,988,119 samples, 1.13%)</title><rect x="30.2006%" y="1621" width="1.1264%" height="15" fill="rgb(235,35,13)" fg:x="509080795" fg:w="18988119"/><text x="30.4506%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (18,988,119 samples, 1.13%)</title><rect x="30.2006%" y="1605" width="1.1264%" height="15" fill="rgb(233,158,34)" fg:x="509080795" fg:w="18988119"/><text x="30.4506%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18,988,119 samples, 1.13%)</title><rect x="30.2006%" y="1589" width="1.1264%" height="15" fill="rgb(215,151,48)" fg:x="509080795" fg:w="18988119"/><text x="30.4506%" y="1599.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18,988,119 samples, 1.13%)</title><rect x="30.2006%" y="1573" width="1.1264%" height="15" fill="rgb(229,84,14)" fg:x="509080795" fg:w="18988119"/><text x="30.4506%" y="1583.50"></text></g><g><title>alloc::alloc::alloc (18,988,119 samples, 1.13%)</title><rect x="30.2006%" y="1557" width="1.1264%" height="15" fill="rgb(229,68,14)" fg:x="509080795" fg:w="18988119"/><text x="30.4506%" y="1567.50"></text></g><g><title>malloc (16,295,221 samples, 0.97%)</title><rect x="30.3603%" y="1541" width="0.9667%" height="15" fill="rgb(243,106,26)" fg:x="511773693" fg:w="16295221"/><text x="30.6103%" y="1551.50"></text></g><g><title>[libc.so.6] (13,247,020 samples, 0.79%)</title><rect x="30.5411%" y="1525" width="0.7859%" height="15" fill="rgb(206,45,38)" fg:x="514821894" fg:w="13247020"/><text x="30.7911%" y="1535.50"></text></g><g><title>core::clone::Clone::clone (26,533,977 samples, 1.57%)</title><rect x="29.8907%" y="1749" width="1.5741%" height="15" fill="rgb(226,6,15)" fg:x="503858550" fg:w="26533977"/><text x="30.1407%" y="1759.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (26,533,977 samples, 1.57%)</title><rect x="29.8907%" y="1733" width="1.5741%" height="15" fill="rgb(232,22,54)" fg:x="503858550" fg:w="26533977"/><text x="30.1407%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21,311,732 samples, 1.26%)</title><rect x="30.2006%" y="1717" width="1.2643%" height="15" fill="rgb(229,222,32)" fg:x="509080795" fg:w="21311732"/><text x="30.4506%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21,311,732 samples, 1.26%)</title><rect x="30.2006%" y="1701" width="1.2643%" height="15" fill="rgb(228,62,29)" fg:x="509080795" fg:w="21311732"/><text x="30.4506%" y="1711.50"></text></g><g><title>alloc::slice::hack::to_vec (21,311,732 samples, 1.26%)</title><rect x="30.2006%" y="1685" width="1.2643%" height="15" fill="rgb(251,103,34)" fg:x="509080795" fg:w="21311732"/><text x="30.4506%" y="1695.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21,311,732 samples, 1.26%)</title><rect x="30.2006%" y="1669" width="1.2643%" height="15" fill="rgb(233,12,30)" fg:x="509080795" fg:w="21311732"/><text x="30.4506%" y="1679.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,323,613 samples, 0.14%)</title><rect x="31.3270%" y="1653" width="0.1378%" height="15" fill="rgb(238,52,0)" fg:x="528068914" fg:w="2323613"/><text x="31.5770%" y="1663.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,323,613 samples, 0.14%)</title><rect x="31.3270%" y="1637" width="0.1378%" height="15" fill="rgb(223,98,5)" fg:x="528068914" fg:w="2323613"/><text x="31.5770%" y="1647.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (31,709,186 samples, 1.88%)</title><rect x="29.7537%" y="1781" width="1.8811%" height="15" fill="rgb(228,75,37)" fg:x="501548530" fg:w="31709186"/><text x="30.0037%" y="1791.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (31,709,186 samples, 1.88%)</title><rect x="29.7537%" y="1765" width="1.8811%" height="15" fill="rgb(205,115,49)" fg:x="501548530" fg:w="31709186"/><text x="30.0037%" y="1775.50">h..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (2,865,189 samples, 0.17%)</title><rect x="31.4648%" y="1749" width="0.1700%" height="15" fill="rgb(250,154,43)" fg:x="530392527" fg:w="2865189"/><text x="31.7148%" y="1759.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,865,189 samples, 0.17%)</title><rect x="31.4648%" y="1733" width="0.1700%" height="15" fill="rgb(226,43,29)" fg:x="530392527" fg:w="2865189"/><text x="31.7148%" y="1743.50"></text></g><g><title>[libc.so.6] (2,865,189 samples, 0.17%)</title><rect x="31.4648%" y="1717" width="0.1700%" height="15" fill="rgb(249,228,39)" fg:x="530392527" fg:w="2865189"/><text x="31.7148%" y="1727.50"></text></g><g><title>__rdl_alloc (2,559,911 samples, 0.15%)</title><rect x="31.6348%" y="1685" width="0.1519%" height="15" fill="rgb(216,79,43)" fg:x="533257716" fg:w="2559911"/><text x="31.8848%" y="1695.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,559,911 samples, 0.15%)</title><rect x="31.6348%" y="1669" width="0.1519%" height="15" fill="rgb(228,95,12)" fg:x="533257716" fg:w="2559911"/><text x="31.8848%" y="1679.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (233,037,532 samples, 13.82%)</title><rect x="18.4513%" y="1861" width="13.8246%" height="15" fill="rgb(249,221,15)" fg:x="311028110" fg:w="233037532"/><text x="18.7013%" y="1871.50">&lt;css_bitvector_compil..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (42,517,112 samples, 2.52%)</title><rect x="29.7537%" y="1845" width="2.5223%" height="15" fill="rgb(233,34,13)" fg:x="501548530" fg:w="42517112"/><text x="30.0037%" y="1855.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (42,517,112 samples, 2.52%)</title><rect x="29.7537%" y="1829" width="2.5223%" height="15" fill="rgb(214,103,39)" fg:x="501548530" fg:w="42517112"/><text x="30.0037%" y="1839.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (42,517,112 samples, 2.52%)</title><rect x="29.7537%" y="1813" width="2.5223%" height="15" fill="rgb(251,126,39)" fg:x="501548530" fg:w="42517112"/><text x="30.0037%" y="1823.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (42,517,112 samples, 2.52%)</title><rect x="29.7537%" y="1797" width="2.5223%" height="15" fill="rgb(214,216,36)" fg:x="501548530" fg:w="42517112"/><text x="30.0037%" y="1807.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (10,807,926 samples, 0.64%)</title><rect x="31.6348%" y="1781" width="0.6412%" height="15" fill="rgb(220,221,8)" fg:x="533257716" fg:w="10807926"/><text x="31.8848%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (10,807,926 samples, 0.64%)</title><rect x="31.6348%" y="1765" width="0.6412%" height="15" fill="rgb(240,216,3)" fg:x="533257716" fg:w="10807926"/><text x="31.8848%" y="1775.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (10,807,926 samples, 0.64%)</title><rect x="31.6348%" y="1749" width="0.6412%" height="15" fill="rgb(232,218,17)" fg:x="533257716" fg:w="10807926"/><text x="31.8848%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,807,926 samples, 0.64%)</title><rect x="31.6348%" y="1733" width="0.6412%" height="15" fill="rgb(229,163,45)" fg:x="533257716" fg:w="10807926"/><text x="31.8848%" y="1743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10,807,926 samples, 0.64%)</title><rect x="31.6348%" y="1717" width="0.6412%" height="15" fill="rgb(231,110,42)" fg:x="533257716" fg:w="10807926"/><text x="31.8848%" y="1727.50"></text></g><g><title>alloc::alloc::alloc (10,807,926 samples, 0.64%)</title><rect x="31.6348%" y="1701" width="0.6412%" height="15" fill="rgb(208,170,48)" fg:x="533257716" fg:w="10807926"/><text x="31.8848%" y="1711.50"></text></g><g><title>malloc (8,248,015 samples, 0.49%)</title><rect x="31.7867%" y="1685" width="0.4893%" height="15" fill="rgb(239,116,25)" fg:x="535817627" fg:w="8248015"/><text x="32.0367%" y="1695.50"></text></g><g><title>[libc.so.6] (2,826,008 samples, 0.17%)</title><rect x="32.1083%" y="1669" width="0.1676%" height="15" fill="rgb(219,200,50)" fg:x="541239634" fg:w="2826008"/><text x="32.3583%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (238,157,281 samples, 14.13%)</title><rect x="18.4513%" y="1925" width="14.1284%" height="15" fill="rgb(245,200,0)" fg:x="311028110" fg:w="238157281"/><text x="18.7013%" y="1935.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (238,157,281 samples, 14.13%)</title><rect x="18.4513%" y="1909" width="14.1284%" height="15" fill="rgb(245,119,33)" fg:x="311028110" fg:w="238157281"/><text x="18.7013%" y="1919.50">alloc::slice::&lt;impl [..</text></g><g><title>alloc::slice::hack::to_vec (238,157,281 samples, 14.13%)</title><rect x="18.4513%" y="1893" width="14.1284%" height="15" fill="rgb(231,125,12)" fg:x="311028110" fg:w="238157281"/><text x="18.7013%" y="1903.50">alloc::slice::hack::t..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (238,157,281 samples, 14.13%)</title><rect x="18.4513%" y="1877" width="14.1284%" height="15" fill="rgb(216,96,41)" fg:x="311028110" fg:w="238157281"/><text x="18.7013%" y="1887.50">&lt;T as alloc::slice::h..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,119,749 samples, 0.30%)</title><rect x="32.2760%" y="1861" width="0.3037%" height="15" fill="rgb(248,43,45)" fg:x="544065642" fg:w="5119749"/><text x="32.5260%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,119,749 samples, 0.30%)</title><rect x="32.2760%" y="1845" width="0.3037%" height="15" fill="rgb(217,222,7)" fg:x="544065642" fg:w="5119749"/><text x="32.5260%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,119,749 samples, 0.30%)</title><rect x="32.2760%" y="1829" width="0.3037%" height="15" fill="rgb(233,28,6)" fg:x="544065642" fg:w="5119749"/><text x="32.5260%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,119,749 samples, 0.30%)</title><rect x="32.2760%" y="1813" width="0.3037%" height="15" fill="rgb(231,218,15)" fg:x="544065642" fg:w="5119749"/><text x="32.5260%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,119,749 samples, 0.30%)</title><rect x="32.2760%" y="1797" width="0.3037%" height="15" fill="rgb(226,171,48)" fg:x="544065642" fg:w="5119749"/><text x="32.5260%" y="1807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,119,749 samples, 0.30%)</title><rect x="32.2760%" y="1781" width="0.3037%" height="15" fill="rgb(235,201,9)" fg:x="544065642" fg:w="5119749"/><text x="32.5260%" y="1791.50"></text></g><g><title>alloc::alloc::alloc (5,119,749 samples, 0.30%)</title><rect x="32.2760%" y="1765" width="0.3037%" height="15" fill="rgb(217,80,15)" fg:x="544065642" fg:w="5119749"/><text x="32.5260%" y="1775.50"></text></g><g><title>malloc (5,119,749 samples, 0.30%)</title><rect x="32.2760%" y="1749" width="0.3037%" height="15" fill="rgb(219,152,8)" fg:x="544065642" fg:w="5119749"/><text x="32.5260%" y="1759.50"></text></g><g><title>[libc.so.6] (2,845,206 samples, 0.17%)</title><rect x="32.4109%" y="1733" width="0.1688%" height="15" fill="rgb(243,107,38)" fg:x="546340185" fg:w="2845206"/><text x="32.6609%" y="1743.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_from_scratch (2,374,033 samples, 0.14%)</title><rect x="32.5797%" y="1717" width="0.1408%" height="15" fill="rgb(231,17,5)" fg:x="549185391" fg:w="2374033"/><text x="32.8297%" y="1727.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5,012,041 samples, 0.30%)</title><rect x="32.5797%" y="1925" width="0.2973%" height="15" fill="rgb(209,25,54)" fg:x="549185391" fg:w="5012041"/><text x="32.8297%" y="1935.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,012,041 samples, 0.30%)</title><rect x="32.5797%" y="1909" width="0.2973%" height="15" fill="rgb(219,0,2)" fg:x="549185391" fg:w="5012041"/><text x="32.8297%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,012,041 samples, 0.30%)</title><rect x="32.5797%" y="1893" width="0.2973%" height="15" fill="rgb(246,9,5)" fg:x="549185391" fg:w="5012041"/><text x="32.8297%" y="1903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,012,041 samples, 0.30%)</title><rect x="32.5797%" y="1877" width="0.2973%" height="15" fill="rgb(226,159,4)" fg:x="549185391" fg:w="5012041"/><text x="32.8297%" y="1887.50"></text></g><g><title>alloc::slice::hack::to_vec (5,012,041 samples, 0.30%)</title><rect x="32.5797%" y="1861" width="0.2973%" height="15" fill="rgb(219,175,34)" fg:x="549185391" fg:w="5012041"/><text x="32.8297%" y="1871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,012,041 samples, 0.30%)</title><rect x="32.5797%" y="1845" width="0.2973%" height="15" fill="rgb(236,10,46)" fg:x="549185391" fg:w="5012041"/><text x="32.8297%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,012,041 samples, 0.30%)</title><rect x="32.5797%" y="1829" width="0.2973%" height="15" fill="rgb(240,211,16)" fg:x="549185391" fg:w="5012041"/><text x="32.8297%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,012,041 samples, 0.30%)</title><rect x="32.5797%" y="1813" width="0.2973%" height="15" fill="rgb(205,3,43)" fg:x="549185391" fg:w="5012041"/><text x="32.8297%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,012,041 samples, 0.30%)</title><rect x="32.5797%" y="1797" width="0.2973%" height="15" fill="rgb(245,7,22)" fg:x="549185391" fg:w="5012041"/><text x="32.8297%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,012,041 samples, 0.30%)</title><rect x="32.5797%" y="1781" width="0.2973%" height="15" fill="rgb(239,132,32)" fg:x="549185391" fg:w="5012041"/><text x="32.8297%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,012,041 samples, 0.30%)</title><rect x="32.5797%" y="1765" width="0.2973%" height="15" fill="rgb(228,202,34)" fg:x="549185391" fg:w="5012041"/><text x="32.8297%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,012,041 samples, 0.30%)</title><rect x="32.5797%" y="1749" width="0.2973%" height="15" fill="rgb(254,200,22)" fg:x="549185391" fg:w="5012041"/><text x="32.8297%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (5,012,041 samples, 0.30%)</title><rect x="32.5797%" y="1733" width="0.2973%" height="15" fill="rgb(219,10,39)" fg:x="549185391" fg:w="5012041"/><text x="32.8297%" y="1743.50"></text></g><g><title>malloc (2,638,008 samples, 0.16%)</title><rect x="32.7205%" y="1717" width="0.1565%" height="15" fill="rgb(226,210,39)" fg:x="551559424" fg:w="2638008"/><text x="32.9705%" y="1727.50"></text></g><g><title>[libc.so.6] (2,638,008 samples, 0.16%)</title><rect x="32.7205%" y="1701" width="0.1565%" height="15" fill="rgb(208,219,16)" fg:x="551559424" fg:w="2638008"/><text x="32.9705%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,560,319 samples, 0.45%)</title><rect x="32.8770%" y="1845" width="0.4485%" height="15" fill="rgb(216,158,51)" fg:x="554197432" fg:w="7560319"/><text x="33.1270%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7,560,319 samples, 0.45%)</title><rect x="32.8770%" y="1829" width="0.4485%" height="15" fill="rgb(233,14,44)" fg:x="554197432" fg:w="7560319"/><text x="33.1270%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7,560,319 samples, 0.45%)</title><rect x="32.8770%" y="1813" width="0.4485%" height="15" fill="rgb(237,97,39)" fg:x="554197432" fg:w="7560319"/><text x="33.1270%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7,560,319 samples, 0.45%)</title><rect x="32.8770%" y="1797" width="0.4485%" height="15" fill="rgb(218,198,43)" fg:x="554197432" fg:w="7560319"/><text x="33.1270%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,560,319 samples, 0.45%)</title><rect x="32.8770%" y="1781" width="0.4485%" height="15" fill="rgb(231,104,20)" fg:x="554197432" fg:w="7560319"/><text x="33.1270%" y="1791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,560,319 samples, 0.45%)</title><rect x="32.8770%" y="1765" width="0.4485%" height="15" fill="rgb(254,36,13)" fg:x="554197432" fg:w="7560319"/><text x="33.1270%" y="1775.50"></text></g><g><title>alloc::alloc::alloc (7,560,319 samples, 0.45%)</title><rect x="32.8770%" y="1749" width="0.4485%" height="15" fill="rgb(248,14,50)" fg:x="554197432" fg:w="7560319"/><text x="33.1270%" y="1759.50"></text></g><g><title>malloc (7,560,319 samples, 0.45%)</title><rect x="32.8770%" y="1733" width="0.4485%" height="15" fill="rgb(217,107,29)" fg:x="554197432" fg:w="7560319"/><text x="33.1270%" y="1743.50"></text></g><g><title>[libc.so.6] (7,560,319 samples, 0.45%)</title><rect x="32.8770%" y="1717" width="0.4485%" height="15" fill="rgb(251,169,33)" fg:x="554197432" fg:w="7560319"/><text x="33.1270%" y="1727.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (10,291,952 samples, 0.61%)</title><rect x="32.8770%" y="1925" width="0.6106%" height="15" fill="rgb(217,108,32)" fg:x="554197432" fg:w="10291952"/><text x="33.1270%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,291,952 samples, 0.61%)</title><rect x="32.8770%" y="1909" width="0.6106%" height="15" fill="rgb(219,66,42)" fg:x="554197432" fg:w="10291952"/><text x="33.1270%" y="1919.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,291,952 samples, 0.61%)</title><rect x="32.8770%" y="1893" width="0.6106%" height="15" fill="rgb(206,180,7)" fg:x="554197432" fg:w="10291952"/><text x="33.1270%" y="1903.50"></text></g><g><title>alloc::slice::hack::to_vec (10,291,952 samples, 0.61%)</title><rect x="32.8770%" y="1877" width="0.6106%" height="15" fill="rgb(208,226,31)" fg:x="554197432" fg:w="10291952"/><text x="33.1270%" y="1887.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,291,952 samples, 0.61%)</title><rect x="32.8770%" y="1861" width="0.6106%" height="15" fill="rgb(218,26,49)" fg:x="554197432" fg:w="10291952"/><text x="33.1270%" y="1871.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,731,633 samples, 0.16%)</title><rect x="33.3255%" y="1845" width="0.1621%" height="15" fill="rgb(233,197,48)" fg:x="561757751" fg:w="2731633"/><text x="33.5755%" y="1855.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,731,633 samples, 0.16%)</title><rect x="33.3255%" y="1829" width="0.1621%" height="15" fill="rgb(252,181,51)" fg:x="561757751" fg:w="2731633"/><text x="33.5755%" y="1839.50"></text></g><g><title>[libc.so.6] (2,731,633 samples, 0.16%)</title><rect x="33.3255%" y="1813" width="0.1621%" height="15" fill="rgb(253,90,19)" fg:x="561757751" fg:w="2731633"/><text x="33.5755%" y="1823.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (18,519,725 samples, 1.10%)</title><rect x="33.5165%" y="1813" width="1.0987%" height="15" fill="rgb(215,171,30)" fg:x="564977076" fg:w="18519725"/><text x="33.7665%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15,927,686 samples, 0.94%)</title><rect x="33.6703%" y="1797" width="0.9449%" height="15" fill="rgb(214,222,9)" fg:x="567569115" fg:w="15927686"/><text x="33.9203%" y="1807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15,927,686 samples, 0.94%)</title><rect x="33.6703%" y="1781" width="0.9449%" height="15" fill="rgb(223,3,22)" fg:x="567569115" fg:w="15927686"/><text x="33.9203%" y="1791.50"></text></g><g><title>alloc::slice::hack::to_vec (15,927,686 samples, 0.94%)</title><rect x="33.6703%" y="1765" width="0.9449%" height="15" fill="rgb(225,196,46)" fg:x="567569115" fg:w="15927686"/><text x="33.9203%" y="1775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15,927,686 samples, 0.94%)</title><rect x="33.6703%" y="1749" width="0.9449%" height="15" fill="rgb(209,110,37)" fg:x="567569115" fg:w="15927686"/><text x="33.9203%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15,927,686 samples, 0.94%)</title><rect x="33.6703%" y="1733" width="0.9449%" height="15" fill="rgb(249,89,12)" fg:x="567569115" fg:w="15927686"/><text x="33.9203%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15,927,686 samples, 0.94%)</title><rect x="33.6703%" y="1717" width="0.9449%" height="15" fill="rgb(226,27,33)" fg:x="567569115" fg:w="15927686"/><text x="33.9203%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (15,927,686 samples, 0.94%)</title><rect x="33.6703%" y="1701" width="0.9449%" height="15" fill="rgb(213,82,22)" fg:x="567569115" fg:w="15927686"/><text x="33.9203%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (15,927,686 samples, 0.94%)</title><rect x="33.6703%" y="1685" width="0.9449%" height="15" fill="rgb(248,140,0)" fg:x="567569115" fg:w="15927686"/><text x="33.9203%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,741,362 samples, 0.64%)</title><rect x="33.9780%" y="1669" width="0.6372%" height="15" fill="rgb(228,106,3)" fg:x="572755439" fg:w="10741362"/><text x="34.2280%" y="1679.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10,741,362 samples, 0.64%)</title><rect x="33.9780%" y="1653" width="0.6372%" height="15" fill="rgb(209,23,37)" fg:x="572755439" fg:w="10741362"/><text x="34.2280%" y="1663.50"></text></g><g><title>alloc::alloc::alloc (10,741,362 samples, 0.64%)</title><rect x="33.9780%" y="1637" width="0.6372%" height="15" fill="rgb(241,93,50)" fg:x="572755439" fg:w="10741362"/><text x="34.2280%" y="1647.50"></text></g><g><title>malloc (8,036,841 samples, 0.48%)</title><rect x="34.1384%" y="1621" width="0.4768%" height="15" fill="rgb(253,46,43)" fg:x="575459960" fg:w="8036841"/><text x="34.3884%" y="1631.50"></text></g><g><title>[libc.so.6] (5,338,340 samples, 0.32%)</title><rect x="34.2985%" y="1605" width="0.3167%" height="15" fill="rgb(226,206,43)" fg:x="578158461" fg:w="5338340"/><text x="34.5485%" y="1615.50"></text></g><g><title>core::clone::Clone::clone (21,014,660 samples, 1.25%)</title><rect x="33.5165%" y="1829" width="1.2467%" height="15" fill="rgb(217,54,7)" fg:x="564977076" fg:w="21014660"/><text x="33.7665%" y="1839.50"></text></g><g><title>malloc (2,494,935 samples, 0.15%)</title><rect x="34.6152%" y="1813" width="0.1480%" height="15" fill="rgb(223,5,52)" fg:x="583496801" fg:w="2494935"/><text x="34.8652%" y="1823.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (2,527,575 samples, 0.15%)</title><rect x="34.7632%" y="1829" width="0.1499%" height="15" fill="rgb(206,52,46)" fg:x="585991736" fg:w="2527575"/><text x="35.0132%" y="1839.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,527,575 samples, 0.15%)</title><rect x="34.7632%" y="1813" width="0.1499%" height="15" fill="rgb(253,136,11)" fg:x="585991736" fg:w="2527575"/><text x="35.0132%" y="1823.50"></text></g><g><title>[libc.so.6] (2,527,575 samples, 0.15%)</title><rect x="34.7632%" y="1797" width="0.1499%" height="15" fill="rgb(208,106,33)" fg:x="585991736" fg:w="2527575"/><text x="35.0132%" y="1807.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (28,999,102 samples, 1.72%)</title><rect x="33.4876%" y="1861" width="1.7203%" height="15" fill="rgb(206,54,4)" fg:x="564489384" fg:w="28999102"/><text x="33.7376%" y="1871.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (28,999,102 samples, 1.72%)</title><rect x="33.4876%" y="1845" width="1.7203%" height="15" fill="rgb(213,3,15)" fg:x="564489384" fg:w="28999102"/><text x="33.7376%" y="1855.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (4,969,175 samples, 0.29%)</title><rect x="34.9131%" y="1829" width="0.2948%" height="15" fill="rgb(252,211,39)" fg:x="588519311" fg:w="4969175"/><text x="35.1631%" y="1839.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (4,969,175 samples, 0.29%)</title><rect x="34.9131%" y="1813" width="0.2948%" height="15" fill="rgb(223,6,36)" fg:x="588519311" fg:w="4969175"/><text x="35.1631%" y="1823.50"></text></g><g><title>core::ptr::write (4,969,175 samples, 0.29%)</title><rect x="34.9131%" y="1797" width="0.2948%" height="15" fill="rgb(252,169,45)" fg:x="588519311" fg:w="4969175"/><text x="35.1631%" y="1807.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (298,454,379 samples, 17.71%)</title><rect x="17.9719%" y="1941" width="17.7054%" height="15" fill="rgb(212,48,26)" fg:x="302947039" fg:w="298454379"/><text x="18.2219%" y="1951.50">&lt;css_bitvector_compiler::Htm..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (36,912,034 samples, 2.19%)</title><rect x="33.4876%" y="1925" width="2.1898%" height="15" fill="rgb(251,102,48)" fg:x="564489384" fg:w="36912034"/><text x="33.7376%" y="1935.50">&lt;..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (36,912,034 samples, 2.19%)</title><rect x="33.4876%" y="1909" width="2.1898%" height="15" fill="rgb(243,208,16)" fg:x="564489384" fg:w="36912034"/><text x="33.7376%" y="1919.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (36,912,034 samples, 2.19%)</title><rect x="33.4876%" y="1893" width="2.1898%" height="15" fill="rgb(219,96,24)" fg:x="564489384" fg:w="36912034"/><text x="33.7376%" y="1903.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (36,912,034 samples, 2.19%)</title><rect x="33.4876%" y="1877" width="2.1898%" height="15" fill="rgb(219,33,29)" fg:x="564489384" fg:w="36912034"/><text x="33.7376%" y="1887.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (7,912,932 samples, 0.47%)</title><rect x="35.2079%" y="1861" width="0.4694%" height="15" fill="rgb(223,176,5)" fg:x="593488486" fg:w="7912932"/><text x="35.4579%" y="1871.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (7,912,932 samples, 0.47%)</title><rect x="35.2079%" y="1845" width="0.4694%" height="15" fill="rgb(228,140,14)" fg:x="593488486" fg:w="7912932"/><text x="35.4579%" y="1855.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (7,912,932 samples, 0.47%)</title><rect x="35.2079%" y="1829" width="0.4694%" height="15" fill="rgb(217,179,31)" fg:x="593488486" fg:w="7912932"/><text x="35.4579%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,912,932 samples, 0.47%)</title><rect x="35.2079%" y="1813" width="0.4694%" height="15" fill="rgb(230,9,30)" fg:x="593488486" fg:w="7912932"/><text x="35.4579%" y="1823.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,912,932 samples, 0.47%)</title><rect x="35.2079%" y="1797" width="0.4694%" height="15" fill="rgb(230,136,20)" fg:x="593488486" fg:w="7912932"/><text x="35.4579%" y="1807.50"></text></g><g><title>alloc::alloc::alloc (7,912,932 samples, 0.47%)</title><rect x="35.2079%" y="1781" width="0.4694%" height="15" fill="rgb(215,210,22)" fg:x="593488486" fg:w="7912932"/><text x="35.4579%" y="1791.50"></text></g><g><title>malloc (7,912,932 samples, 0.47%)</title><rect x="35.2079%" y="1765" width="0.4694%" height="15" fill="rgb(218,43,5)" fg:x="593488486" fg:w="7912932"/><text x="35.4579%" y="1775.50"></text></g><g><title>[libc.so.6] (7,912,932 samples, 0.47%)</title><rect x="35.2079%" y="1749" width="0.4694%" height="15" fill="rgb(216,11,5)" fg:x="593488486" fg:w="7912932"/><text x="35.4579%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,765,016 samples, 0.16%)</title><rect x="35.6773%" y="1941" width="0.1640%" height="15" fill="rgb(209,82,29)" fg:x="601401418" fg:w="2765016"/><text x="35.9273%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,765,016 samples, 0.16%)</title><rect x="35.6773%" y="1925" width="0.1640%" height="15" fill="rgb(244,115,12)" fg:x="601401418" fg:w="2765016"/><text x="35.9273%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,765,016 samples, 0.16%)</title><rect x="35.6773%" y="1909" width="0.1640%" height="15" fill="rgb(222,82,18)" fg:x="601401418" fg:w="2765016"/><text x="35.9273%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,765,016 samples, 0.16%)</title><rect x="35.6773%" y="1893" width="0.1640%" height="15" fill="rgb(249,227,8)" fg:x="601401418" fg:w="2765016"/><text x="35.9273%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,765,016 samples, 0.16%)</title><rect x="35.6773%" y="1877" width="0.1640%" height="15" fill="rgb(253,141,45)" fg:x="601401418" fg:w="2765016"/><text x="35.9273%" y="1887.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,765,016 samples, 0.16%)</title><rect x="35.6773%" y="1861" width="0.1640%" height="15" fill="rgb(234,184,4)" fg:x="601401418" fg:w="2765016"/><text x="35.9273%" y="1871.50"></text></g><g><title>alloc::alloc::alloc (2,765,016 samples, 0.16%)</title><rect x="35.6773%" y="1845" width="0.1640%" height="15" fill="rgb(218,194,23)" fg:x="601401418" fg:w="2765016"/><text x="35.9273%" y="1855.50"></text></g><g><title>malloc (2,765,016 samples, 0.16%)</title><rect x="35.6773%" y="1829" width="0.1640%" height="15" fill="rgb(235,66,41)" fg:x="601401418" fg:w="2765016"/><text x="35.9273%" y="1839.50"></text></g><g><title>[libc.so.6] (2,765,016 samples, 0.16%)</title><rect x="35.6773%" y="1813" width="0.1640%" height="15" fill="rgb(245,217,1)" fg:x="601401418" fg:w="2765016"/><text x="35.9273%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (307,270,009 samples, 18.23%)</title><rect x="17.7936%" y="2005" width="18.2284%" height="15" fill="rgb(229,91,1)" fg:x="299940394" fg:w="307270009"/><text x="18.0436%" y="2015.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (307,270,009 samples, 18.23%)</title><rect x="17.7936%" y="1989" width="18.2284%" height="15" fill="rgb(207,101,30)" fg:x="299940394" fg:w="307270009"/><text x="18.0436%" y="1999.50">alloc::slice::&lt;impl [T]&gt;::to..</text></g><g><title>alloc::slice::hack::to_vec (307,270,009 samples, 18.23%)</title><rect x="17.7936%" y="1973" width="18.2284%" height="15" fill="rgb(223,82,49)" fg:x="299940394" fg:w="307270009"/><text x="18.0436%" y="1983.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (307,270,009 samples, 18.23%)</title><rect x="17.7936%" y="1957" width="18.2284%" height="15" fill="rgb(218,167,17)" fg:x="299940394" fg:w="307270009"/><text x="18.0436%" y="1967.50">&lt;T as alloc::slice::hack::Co..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,043,969 samples, 0.18%)</title><rect x="35.8414%" y="1941" width="0.1806%" height="15" fill="rgb(208,103,14)" fg:x="604166434" fg:w="3043969"/><text x="36.0914%" y="1951.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,836,500 samples, 0.17%)</title><rect x="36.0220%" y="2005" width="0.1683%" height="15" fill="rgb(238,20,8)" fg:x="607210403" fg:w="2836500"/><text x="36.2720%" y="2015.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (8,036,693 samples, 0.48%)</title><rect x="36.1902%" y="2005" width="0.4768%" height="15" fill="rgb(218,80,54)" fg:x="610046903" fg:w="8036693"/><text x="36.4402%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,036,693 samples, 0.48%)</title><rect x="36.1902%" y="1989" width="0.4768%" height="15" fill="rgb(240,144,17)" fg:x="610046903" fg:w="8036693"/><text x="36.4402%" y="1999.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,327,586 samples, 0.32%)</title><rect x="36.3509%" y="1973" width="0.3161%" height="15" fill="rgb(245,27,50)" fg:x="612756010" fg:w="5327586"/><text x="36.6009%" y="1983.50"></text></g><g><title>alloc::slice::hack::to_vec (5,327,586 samples, 0.32%)</title><rect x="36.3509%" y="1957" width="0.3161%" height="15" fill="rgb(251,51,7)" fg:x="612756010" fg:w="5327586"/><text x="36.6009%" y="1967.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,327,586 samples, 0.32%)</title><rect x="36.3509%" y="1941" width="0.3161%" height="15" fill="rgb(245,217,29)" fg:x="612756010" fg:w="5327586"/><text x="36.6009%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,327,586 samples, 0.32%)</title><rect x="36.3509%" y="1925" width="0.3161%" height="15" fill="rgb(221,176,29)" fg:x="612756010" fg:w="5327586"/><text x="36.6009%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,327,586 samples, 0.32%)</title><rect x="36.3509%" y="1909" width="0.3161%" height="15" fill="rgb(212,180,24)" fg:x="612756010" fg:w="5327586"/><text x="36.6009%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,327,586 samples, 0.32%)</title><rect x="36.3509%" y="1893" width="0.3161%" height="15" fill="rgb(254,24,2)" fg:x="612756010" fg:w="5327586"/><text x="36.6009%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,327,586 samples, 0.32%)</title><rect x="36.3509%" y="1877" width="0.3161%" height="15" fill="rgb(230,100,2)" fg:x="612756010" fg:w="5327586"/><text x="36.6009%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,327,586 samples, 0.32%)</title><rect x="36.3509%" y="1861" width="0.3161%" height="15" fill="rgb(219,142,25)" fg:x="612756010" fg:w="5327586"/><text x="36.6009%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,327,586 samples, 0.32%)</title><rect x="36.3509%" y="1845" width="0.3161%" height="15" fill="rgb(240,73,43)" fg:x="612756010" fg:w="5327586"/><text x="36.6009%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (5,327,586 samples, 0.32%)</title><rect x="36.3509%" y="1829" width="0.3161%" height="15" fill="rgb(214,114,15)" fg:x="612756010" fg:w="5327586"/><text x="36.6009%" y="1839.50"></text></g><g><title>malloc (5,327,586 samples, 0.32%)</title><rect x="36.3509%" y="1813" width="0.3161%" height="15" fill="rgb(207,130,4)" fg:x="612756010" fg:w="5327586"/><text x="36.6009%" y="1823.50"></text></g><g><title>[libc.so.6] (2,419,251 samples, 0.14%)</title><rect x="36.5235%" y="1797" width="0.1435%" height="15" fill="rgb(221,25,40)" fg:x="615664345" fg:w="2419251"/><text x="36.7735%" y="1807.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (5,421,321 samples, 0.32%)</title><rect x="36.6670%" y="1941" width="0.3216%" height="15" fill="rgb(241,184,7)" fg:x="618083596" fg:w="5421321"/><text x="36.9170%" y="1951.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (5,421,321 samples, 0.32%)</title><rect x="36.6670%" y="1925" width="0.3216%" height="15" fill="rgb(235,159,4)" fg:x="618083596" fg:w="5421321"/><text x="36.9170%" y="1935.50"></text></g><g><title>core::clone::Clone::clone (5,421,321 samples, 0.32%)</title><rect x="36.6670%" y="1909" width="0.3216%" height="15" fill="rgb(214,87,48)" fg:x="618083596" fg:w="5421321"/><text x="36.9170%" y="1919.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,421,321 samples, 0.32%)</title><rect x="36.6670%" y="1893" width="0.3216%" height="15" fill="rgb(246,198,24)" fg:x="618083596" fg:w="5421321"/><text x="36.9170%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,900,858 samples, 0.17%)</title><rect x="36.8165%" y="1877" width="0.1721%" height="15" fill="rgb(209,66,40)" fg:x="620604059" fg:w="2900858"/><text x="37.0665%" y="1887.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,900,858 samples, 0.17%)</title><rect x="36.8165%" y="1861" width="0.1721%" height="15" fill="rgb(233,147,39)" fg:x="620604059" fg:w="2900858"/><text x="37.0665%" y="1871.50"></text></g><g><title>alloc::slice::hack::to_vec (2,900,858 samples, 0.17%)</title><rect x="36.8165%" y="1845" width="0.1721%" height="15" fill="rgb(231,145,52)" fg:x="620604059" fg:w="2900858"/><text x="37.0665%" y="1855.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,900,858 samples, 0.17%)</title><rect x="36.8165%" y="1829" width="0.1721%" height="15" fill="rgb(206,20,26)" fg:x="620604059" fg:w="2900858"/><text x="37.0665%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,900,858 samples, 0.17%)</title><rect x="36.8165%" y="1813" width="0.1721%" height="15" fill="rgb(238,220,4)" fg:x="620604059" fg:w="2900858"/><text x="37.0665%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,900,858 samples, 0.17%)</title><rect x="36.8165%" y="1797" width="0.1721%" height="15" fill="rgb(252,195,42)" fg:x="620604059" fg:w="2900858"/><text x="37.0665%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,900,858 samples, 0.17%)</title><rect x="36.8165%" y="1781" width="0.1721%" height="15" fill="rgb(209,10,6)" fg:x="620604059" fg:w="2900858"/><text x="37.0665%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,900,858 samples, 0.17%)</title><rect x="36.8165%" y="1765" width="0.1721%" height="15" fill="rgb(229,3,52)" fg:x="620604059" fg:w="2900858"/><text x="37.0665%" y="1775.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (4,618,333 samples, 0.27%)</title><rect x="36.9886%" y="1909" width="0.2740%" height="15" fill="rgb(253,49,37)" fg:x="623504917" fg:w="4618333"/><text x="37.2386%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,618,333 samples, 0.27%)</title><rect x="36.9886%" y="1893" width="0.2740%" height="15" fill="rgb(240,103,49)" fg:x="623504917" fg:w="4618333"/><text x="37.2386%" y="1903.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,618,333 samples, 0.27%)</title><rect x="36.9886%" y="1877" width="0.2740%" height="15" fill="rgb(250,182,30)" fg:x="623504917" fg:w="4618333"/><text x="37.2386%" y="1887.50"></text></g><g><title>alloc::alloc::alloc (4,618,333 samples, 0.27%)</title><rect x="36.9886%" y="1861" width="0.2740%" height="15" fill="rgb(248,8,30)" fg:x="623504917" fg:w="4618333"/><text x="37.2386%" y="1871.50"></text></g><g><title>malloc (4,618,333 samples, 0.27%)</title><rect x="36.9886%" y="1845" width="0.2740%" height="15" fill="rgb(237,120,30)" fg:x="623504917" fg:w="4618333"/><text x="37.2386%" y="1855.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (347,931,235 samples, 20.64%)</title><rect x="16.7557%" y="2021" width="20.6406%" height="15" fill="rgb(221,146,34)" fg:x="282445602" fg:w="347931235"/><text x="17.0057%" y="2031.50">&lt;css_bitvector_compiler::HtmlNod..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (12,293,241 samples, 0.73%)</title><rect x="36.6670%" y="2005" width="0.7293%" height="15" fill="rgb(242,55,13)" fg:x="618083596" fg:w="12293241"/><text x="36.9170%" y="2015.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (12,293,241 samples, 0.73%)</title><rect x="36.6670%" y="1989" width="0.7293%" height="15" fill="rgb(242,112,31)" fg:x="618083596" fg:w="12293241"/><text x="36.9170%" y="1999.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (12,293,241 samples, 0.73%)</title><rect x="36.6670%" y="1973" width="0.7293%" height="15" fill="rgb(249,192,27)" fg:x="618083596" fg:w="12293241"/><text x="36.9170%" y="1983.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,293,241 samples, 0.73%)</title><rect x="36.6670%" y="1957" width="0.7293%" height="15" fill="rgb(208,204,44)" fg:x="618083596" fg:w="12293241"/><text x="36.9170%" y="1967.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (6,871,920 samples, 0.41%)</title><rect x="36.9886%" y="1941" width="0.4077%" height="15" fill="rgb(208,93,54)" fg:x="623504917" fg:w="6871920"/><text x="37.2386%" y="1951.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (6,871,920 samples, 0.41%)</title><rect x="36.9886%" y="1925" width="0.4077%" height="15" fill="rgb(242,1,31)" fg:x="623504917" fg:w="6871920"/><text x="37.2386%" y="1935.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (2,253,587 samples, 0.13%)</title><rect x="37.2626%" y="1909" width="0.1337%" height="15" fill="rgb(241,83,25)" fg:x="628123250" fg:w="2253587"/><text x="37.5126%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,719,501 samples, 0.34%)</title><rect x="37.3963%" y="2021" width="0.3393%" height="15" fill="rgb(205,169,50)" fg:x="630376837" fg:w="5719501"/><text x="37.6463%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,719,501 samples, 0.34%)</title><rect x="37.3963%" y="2005" width="0.3393%" height="15" fill="rgb(239,186,37)" fg:x="630376837" fg:w="5719501"/><text x="37.6463%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,719,501 samples, 0.34%)</title><rect x="37.3963%" y="1989" width="0.3393%" height="15" fill="rgb(205,221,10)" fg:x="630376837" fg:w="5719501"/><text x="37.6463%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,719,501 samples, 0.34%)</title><rect x="37.3963%" y="1973" width="0.3393%" height="15" fill="rgb(218,196,15)" fg:x="630376837" fg:w="5719501"/><text x="37.6463%" y="1983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,719,501 samples, 0.34%)</title><rect x="37.3963%" y="1957" width="0.3393%" height="15" fill="rgb(218,196,35)" fg:x="630376837" fg:w="5719501"/><text x="37.6463%" y="1967.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,719,501 samples, 0.34%)</title><rect x="37.3963%" y="1941" width="0.3393%" height="15" fill="rgb(233,63,24)" fg:x="630376837" fg:w="5719501"/><text x="37.6463%" y="1951.50"></text></g><g><title>alloc::alloc::alloc (5,719,501 samples, 0.34%)</title><rect x="37.3963%" y="1925" width="0.3393%" height="15" fill="rgb(225,8,4)" fg:x="630376837" fg:w="5719501"/><text x="37.6463%" y="1935.50"></text></g><g><title>malloc (5,719,501 samples, 0.34%)</title><rect x="37.3963%" y="1909" width="0.3393%" height="15" fill="rgb(234,105,35)" fg:x="630376837" fg:w="5719501"/><text x="37.6463%" y="1919.50"></text></g><g><title>[libc.so.6] (5,719,501 samples, 0.34%)</title><rect x="37.3963%" y="1893" width="0.3393%" height="15" fill="rgb(236,21,32)" fg:x="630376837" fg:w="5719501"/><text x="37.6463%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (361,041,206 samples, 21.42%)</title><rect x="16.6096%" y="2085" width="21.4183%" height="15" fill="rgb(228,109,6)" fg:x="279983345" fg:w="361041206"/><text x="16.8596%" y="2095.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (358,578,949 samples, 21.27%)</title><rect x="16.7557%" y="2069" width="21.2722%" height="15" fill="rgb(229,215,31)" fg:x="282445602" fg:w="358578949"/><text x="17.0057%" y="2079.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (358,578,949 samples, 21.27%)</title><rect x="16.7557%" y="2053" width="21.2722%" height="15" fill="rgb(221,52,54)" fg:x="282445602" fg:w="358578949"/><text x="17.0057%" y="2063.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (358,578,949 samples, 21.27%)</title><rect x="16.7557%" y="2037" width="21.2722%" height="15" fill="rgb(252,129,43)" fg:x="282445602" fg:w="358578949"/><text x="17.0057%" y="2047.50">&lt;T as alloc::slice::hack::ConvertV..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4,928,213 samples, 0.29%)</title><rect x="37.7356%" y="2021" width="0.2924%" height="15" fill="rgb(248,183,27)" fg:x="636096338" fg:w="4928213"/><text x="37.9856%" y="2031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,816,964 samples, 0.35%)</title><rect x="38.3139%" y="1925" width="0.3451%" height="15" fill="rgb(250,0,22)" fg:x="645844337" fg:w="5816964"/><text x="38.5639%" y="1935.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,816,964 samples, 0.35%)</title><rect x="38.3139%" y="1909" width="0.3451%" height="15" fill="rgb(213,166,10)" fg:x="645844337" fg:w="5816964"/><text x="38.5639%" y="1919.50"></text></g><g><title>alloc::alloc::alloc (5,816,964 samples, 0.35%)</title><rect x="38.3139%" y="1893" width="0.3451%" height="15" fill="rgb(207,163,36)" fg:x="645844337" fg:w="5816964"/><text x="38.5639%" y="1903.50"></text></g><g><title>malloc (5,816,964 samples, 0.35%)</title><rect x="38.3139%" y="1877" width="0.3451%" height="15" fill="rgb(208,122,22)" fg:x="645844337" fg:w="5816964"/><text x="38.5639%" y="1887.50"></text></g><g><title>[libc.so.6] (5,816,964 samples, 0.35%)</title><rect x="38.3139%" y="1861" width="0.3451%" height="15" fill="rgb(207,104,49)" fg:x="645844337" fg:w="5816964"/><text x="38.5639%" y="1871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8,871,243 samples, 0.53%)</title><rect x="38.3139%" y="1989" width="0.5263%" height="15" fill="rgb(248,211,50)" fg:x="645844337" fg:w="8871243"/><text x="38.5639%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,871,243 samples, 0.53%)</title><rect x="38.3139%" y="1973" width="0.5263%" height="15" fill="rgb(217,13,45)" fg:x="645844337" fg:w="8871243"/><text x="38.5639%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (8,871,243 samples, 0.53%)</title><rect x="38.3139%" y="1957" width="0.5263%" height="15" fill="rgb(211,216,49)" fg:x="645844337" fg:w="8871243"/><text x="38.5639%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (8,871,243 samples, 0.53%)</title><rect x="38.3139%" y="1941" width="0.5263%" height="15" fill="rgb(221,58,53)" fg:x="645844337" fg:w="8871243"/><text x="38.5639%" y="1951.50"></text></g><g><title>alloc::raw_vec::layout_array (3,054,279 samples, 0.18%)</title><rect x="38.6590%" y="1925" width="0.1812%" height="15" fill="rgb(220,112,41)" fg:x="651661301" fg:w="3054279"/><text x="38.9090%" y="1935.50"></text></g><g><title>core::alloc::layout::Layout::repeat (3,054,279 samples, 0.18%)</title><rect x="38.6590%" y="1909" width="0.1812%" height="15" fill="rgb(236,38,28)" fg:x="651661301" fg:w="3054279"/><text x="38.9090%" y="1919.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (3,054,279 samples, 0.18%)</title><rect x="38.6590%" y="1893" width="0.1812%" height="15" fill="rgb(227,195,22)" fg:x="651661301" fg:w="3054279"/><text x="38.9090%" y="1903.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (3,054,279 samples, 0.18%)</title><rect x="38.6590%" y="1877" width="0.1812%" height="15" fill="rgb(214,55,33)" fg:x="651661301" fg:w="3054279"/><text x="38.9090%" y="1887.50"></text></g><g><title>core::intrinsics::unlikely (3,054,279 samples, 0.18%)</title><rect x="38.6590%" y="1861" width="0.1812%" height="15" fill="rgb(248,80,13)" fg:x="651661301" fg:w="3054279"/><text x="38.9090%" y="1871.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (19,545,952 samples, 1.16%)</title><rect x="38.0279%" y="2085" width="1.1595%" height="15" fill="rgb(238,52,6)" fg:x="641024551" fg:w="19545952"/><text x="38.2779%" y="2095.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (16,999,107 samples, 1.01%)</title><rect x="38.1790%" y="2069" width="1.0084%" height="15" fill="rgb(224,198,47)" fg:x="643571396" fg:w="16999107"/><text x="38.4290%" y="2079.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14,726,166 samples, 0.87%)</title><rect x="38.3139%" y="2053" width="0.8736%" height="15" fill="rgb(233,171,20)" fg:x="645844337" fg:w="14726166"/><text x="38.5639%" y="2063.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14,726,166 samples, 0.87%)</title><rect x="38.3139%" y="2037" width="0.8736%" height="15" fill="rgb(241,30,25)" fg:x="645844337" fg:w="14726166"/><text x="38.5639%" y="2047.50"></text></g><g><title>alloc::slice::hack::to_vec (14,726,166 samples, 0.87%)</title><rect x="38.3139%" y="2021" width="0.8736%" height="15" fill="rgb(207,171,38)" fg:x="645844337" fg:w="14726166"/><text x="38.5639%" y="2031.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14,726,166 samples, 0.87%)</title><rect x="38.3139%" y="2005" width="0.8736%" height="15" fill="rgb(234,70,1)" fg:x="645844337" fg:w="14726166"/><text x="38.5639%" y="2015.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5,854,923 samples, 0.35%)</title><rect x="38.8401%" y="1989" width="0.3473%" height="15" fill="rgb(232,178,18)" fg:x="654715580" fg:w="5854923"/><text x="39.0901%" y="1999.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5,854,923 samples, 0.35%)</title><rect x="38.8401%" y="1973" width="0.3473%" height="15" fill="rgb(241,78,40)" fg:x="654715580" fg:w="5854923"/><text x="39.0901%" y="1983.50"></text></g><g><title>[libc.so.6] (5,854,923 samples, 0.35%)</title><rect x="38.8401%" y="1957" width="0.3473%" height="15" fill="rgb(222,35,25)" fg:x="654715580" fg:w="5854923"/><text x="39.0901%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8,310,887 samples, 0.49%)</title><rect x="39.1875%" y="2005" width="0.4930%" height="15" fill="rgb(207,92,16)" fg:x="660570503" fg:w="8310887"/><text x="39.4375%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,310,887 samples, 0.49%)</title><rect x="39.1875%" y="1989" width="0.4930%" height="15" fill="rgb(216,59,51)" fg:x="660570503" fg:w="8310887"/><text x="39.4375%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (8,310,887 samples, 0.49%)</title><rect x="39.1875%" y="1973" width="0.4930%" height="15" fill="rgb(213,80,28)" fg:x="660570503" fg:w="8310887"/><text x="39.4375%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (8,310,887 samples, 0.49%)</title><rect x="39.1875%" y="1957" width="0.4930%" height="15" fill="rgb(220,93,7)" fg:x="660570503" fg:w="8310887"/><text x="39.4375%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,310,887 samples, 0.49%)</title><rect x="39.1875%" y="1941" width="0.4930%" height="15" fill="rgb(225,24,44)" fg:x="660570503" fg:w="8310887"/><text x="39.4375%" y="1951.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,310,887 samples, 0.49%)</title><rect x="39.1875%" y="1925" width="0.4930%" height="15" fill="rgb(243,74,40)" fg:x="660570503" fg:w="8310887"/><text x="39.4375%" y="1935.50"></text></g><g><title>alloc::alloc::alloc (8,310,887 samples, 0.49%)</title><rect x="39.1875%" y="1909" width="0.4930%" height="15" fill="rgb(228,39,7)" fg:x="660570503" fg:w="8310887"/><text x="39.4375%" y="1919.50"></text></g><g><title>malloc (8,310,887 samples, 0.49%)</title><rect x="39.1875%" y="1893" width="0.4930%" height="15" fill="rgb(227,79,8)" fg:x="660570503" fg:w="8310887"/><text x="39.4375%" y="1903.50"></text></g><g><title>[libc.so.6] (5,426,098 samples, 0.32%)</title><rect x="39.3586%" y="1877" width="0.3219%" height="15" fill="rgb(236,58,11)" fg:x="663455292" fg:w="5426098"/><text x="39.6086%" y="1887.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (10,963,364 samples, 0.65%)</title><rect x="39.1875%" y="2085" width="0.6504%" height="15" fill="rgb(249,63,35)" fg:x="660570503" fg:w="10963364"/><text x="39.4375%" y="2095.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,963,364 samples, 0.65%)</title><rect x="39.1875%" y="2069" width="0.6504%" height="15" fill="rgb(252,114,16)" fg:x="660570503" fg:w="10963364"/><text x="39.4375%" y="2079.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,963,364 samples, 0.65%)</title><rect x="39.1875%" y="2053" width="0.6504%" height="15" fill="rgb(254,151,24)" fg:x="660570503" fg:w="10963364"/><text x="39.4375%" y="2063.50"></text></g><g><title>alloc::slice::hack::to_vec (10,963,364 samples, 0.65%)</title><rect x="39.1875%" y="2037" width="0.6504%" height="15" fill="rgb(253,54,39)" fg:x="660570503" fg:w="10963364"/><text x="39.4375%" y="2047.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,963,364 samples, 0.65%)</title><rect x="39.1875%" y="2021" width="0.6504%" height="15" fill="rgb(243,25,45)" fg:x="660570503" fg:w="10963364"/><text x="39.4375%" y="2031.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,652,477 samples, 0.16%)</title><rect x="39.6805%" y="2005" width="0.1574%" height="15" fill="rgb(234,134,9)" fg:x="668881390" fg:w="2652477"/><text x="39.9305%" y="2015.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,652,477 samples, 0.16%)</title><rect x="39.6805%" y="1989" width="0.1574%" height="15" fill="rgb(227,166,31)" fg:x="668881390" fg:w="2652477"/><text x="39.9305%" y="1999.50"></text></g><g><title>[libc.so.6] (2,652,477 samples, 0.16%)</title><rect x="39.6805%" y="1973" width="0.1574%" height="15" fill="rgb(245,143,41)" fg:x="668881390" fg:w="2652477"/><text x="39.9305%" y="1983.50"></text></g><g><title>core::clone::Clone::clone (14,748,780 samples, 0.87%)</title><rect x="39.8379%" y="1989" width="0.8750%" height="15" fill="rgb(238,181,32)" fg:x="671533867" fg:w="14748780"/><text x="40.0879%" y="1999.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14,748,780 samples, 0.87%)</title><rect x="39.8379%" y="1973" width="0.8750%" height="15" fill="rgb(224,113,18)" fg:x="671533867" fg:w="14748780"/><text x="40.0879%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,059,035 samples, 0.42%)</title><rect x="40.2940%" y="1957" width="0.4188%" height="15" fill="rgb(240,229,28)" fg:x="679223612" fg:w="7059035"/><text x="40.5440%" y="1967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,059,035 samples, 0.42%)</title><rect x="40.2940%" y="1941" width="0.4188%" height="15" fill="rgb(250,185,3)" fg:x="679223612" fg:w="7059035"/><text x="40.5440%" y="1951.50"></text></g><g><title>alloc::slice::hack::to_vec (7,059,035 samples, 0.42%)</title><rect x="40.2940%" y="1925" width="0.4188%" height="15" fill="rgb(212,59,25)" fg:x="679223612" fg:w="7059035"/><text x="40.5440%" y="1935.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,059,035 samples, 0.42%)</title><rect x="40.2940%" y="1909" width="0.4188%" height="15" fill="rgb(221,87,20)" fg:x="679223612" fg:w="7059035"/><text x="40.5440%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,059,035 samples, 0.42%)</title><rect x="40.2940%" y="1893" width="0.4188%" height="15" fill="rgb(213,74,28)" fg:x="679223612" fg:w="7059035"/><text x="40.5440%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7,059,035 samples, 0.42%)</title><rect x="40.2940%" y="1877" width="0.4188%" height="15" fill="rgb(224,132,34)" fg:x="679223612" fg:w="7059035"/><text x="40.5440%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7,059,035 samples, 0.42%)</title><rect x="40.2940%" y="1861" width="0.4188%" height="15" fill="rgb(222,101,24)" fg:x="679223612" fg:w="7059035"/><text x="40.5440%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7,059,035 samples, 0.42%)</title><rect x="40.2940%" y="1845" width="0.4188%" height="15" fill="rgb(254,142,4)" fg:x="679223612" fg:w="7059035"/><text x="40.5440%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,059,035 samples, 0.42%)</title><rect x="40.2940%" y="1829" width="0.4188%" height="15" fill="rgb(230,229,49)" fg:x="679223612" fg:w="7059035"/><text x="40.5440%" y="1839.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,059,035 samples, 0.42%)</title><rect x="40.2940%" y="1813" width="0.4188%" height="15" fill="rgb(238,70,47)" fg:x="679223612" fg:w="7059035"/><text x="40.5440%" y="1823.50"></text></g><g><title>alloc::alloc::alloc (7,059,035 samples, 0.42%)</title><rect x="40.2940%" y="1797" width="0.4188%" height="15" fill="rgb(231,160,17)" fg:x="679223612" fg:w="7059035"/><text x="40.5440%" y="1807.50"></text></g><g><title>malloc (7,059,035 samples, 0.42%)</title><rect x="40.2940%" y="1781" width="0.4188%" height="15" fill="rgb(218,68,53)" fg:x="679223612" fg:w="7059035"/><text x="40.5440%" y="1791.50"></text></g><g><title>[libc.so.6] (7,059,035 samples, 0.42%)</title><rect x="40.2940%" y="1765" width="0.4188%" height="15" fill="rgb(236,111,10)" fg:x="679223612" fg:w="7059035"/><text x="40.5440%" y="1775.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (17,592,387 samples, 1.04%)</title><rect x="39.8379%" y="2021" width="1.0436%" height="15" fill="rgb(224,34,41)" fg:x="671533867" fg:w="17592387"/><text x="40.0879%" y="2031.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (17,592,387 samples, 1.04%)</title><rect x="39.8379%" y="2005" width="1.0436%" height="15" fill="rgb(241,118,19)" fg:x="671533867" fg:w="17592387"/><text x="40.0879%" y="2015.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (2,843,607 samples, 0.17%)</title><rect x="40.7128%" y="1989" width="0.1687%" height="15" fill="rgb(238,129,25)" fg:x="686282647" fg:w="2843607"/><text x="40.9628%" y="1999.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,843,607 samples, 0.17%)</title><rect x="40.7128%" y="1973" width="0.1687%" height="15" fill="rgb(238,22,31)" fg:x="686282647" fg:w="2843607"/><text x="40.9628%" y="1983.50"></text></g><g><title>[libc.so.6] (2,843,607 samples, 0.17%)</title><rect x="40.7128%" y="1957" width="0.1687%" height="15" fill="rgb(222,174,48)" fg:x="686282647" fg:w="2843607"/><text x="40.9628%" y="1967.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (433,569,507 samples, 25.72%)</title><rect x="15.6506%" y="2101" width="25.7209%" height="15" fill="rgb(206,152,40)" fg:x="263816255" fg:w="433569507"/><text x="15.9006%" y="2111.50">&lt;css_bitvector_compiler::HtmlNode as core..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (25,851,895 samples, 1.53%)</title><rect x="39.8379%" y="2085" width="1.5336%" height="15" fill="rgb(218,99,54)" fg:x="671533867" fg:w="25851895"/><text x="40.0879%" y="2095.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (25,851,895 samples, 1.53%)</title><rect x="39.8379%" y="2069" width="1.5336%" height="15" fill="rgb(220,174,26)" fg:x="671533867" fg:w="25851895"/><text x="40.0879%" y="2079.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (25,851,895 samples, 1.53%)</title><rect x="39.8379%" y="2053" width="1.5336%" height="15" fill="rgb(245,116,9)" fg:x="671533867" fg:w="25851895"/><text x="40.0879%" y="2063.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (25,851,895 samples, 1.53%)</title><rect x="39.8379%" y="2037" width="1.5336%" height="15" fill="rgb(209,72,35)" fg:x="671533867" fg:w="25851895"/><text x="40.0879%" y="2047.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (8,259,508 samples, 0.49%)</title><rect x="40.8815%" y="2021" width="0.4900%" height="15" fill="rgb(226,126,21)" fg:x="689126254" fg:w="8259508"/><text x="41.1315%" y="2031.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (7,482,364 samples, 0.44%)</title><rect x="40.9276%" y="2005" width="0.4439%" height="15" fill="rgb(227,192,1)" fg:x="689903398" fg:w="7482364"/><text x="41.1776%" y="2015.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (7,482,364 samples, 0.44%)</title><rect x="40.9276%" y="1989" width="0.4439%" height="15" fill="rgb(237,180,29)" fg:x="689903398" fg:w="7482364"/><text x="41.1776%" y="1999.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,482,364 samples, 0.44%)</title><rect x="40.9276%" y="1973" width="0.4439%" height="15" fill="rgb(230,197,35)" fg:x="689903398" fg:w="7482364"/><text x="41.1776%" y="1983.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,482,364 samples, 0.44%)</title><rect x="40.9276%" y="1957" width="0.4439%" height="15" fill="rgb(246,193,31)" fg:x="689903398" fg:w="7482364"/><text x="41.1776%" y="1967.50"></text></g><g><title>alloc::alloc::alloc (7,482,364 samples, 0.44%)</title><rect x="40.9276%" y="1941" width="0.4439%" height="15" fill="rgb(241,36,4)" fg:x="689903398" fg:w="7482364"/><text x="41.1776%" y="1951.50"></text></g><g><title>malloc (7,482,364 samples, 0.44%)</title><rect x="40.9276%" y="1925" width="0.4439%" height="15" fill="rgb(241,130,17)" fg:x="689903398" fg:w="7482364"/><text x="41.1776%" y="1935.50"></text></g><g><title>[libc.so.6] (7,482,364 samples, 0.44%)</title><rect x="40.9276%" y="1909" width="0.4439%" height="15" fill="rgb(206,137,32)" fg:x="689903398" fg:w="7482364"/><text x="41.1776%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,433,050 samples, 0.14%)</title><rect x="41.3715%" y="2101" width="0.1443%" height="15" fill="rgb(237,228,51)" fg:x="697385762" fg:w="2433050"/><text x="41.6215%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,433,050 samples, 0.14%)</title><rect x="41.3715%" y="2085" width="0.1443%" height="15" fill="rgb(243,6,42)" fg:x="697385762" fg:w="2433050"/><text x="41.6215%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,433,050 samples, 0.14%)</title><rect x="41.3715%" y="2069" width="0.1443%" height="15" fill="rgb(251,74,28)" fg:x="697385762" fg:w="2433050"/><text x="41.6215%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,433,050 samples, 0.14%)</title><rect x="41.3715%" y="2053" width="0.1443%" height="15" fill="rgb(218,20,49)" fg:x="697385762" fg:w="2433050"/><text x="41.6215%" y="2063.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,433,050 samples, 0.14%)</title><rect x="41.3715%" y="2037" width="0.1443%" height="15" fill="rgb(238,28,14)" fg:x="697385762" fg:w="2433050"/><text x="41.6215%" y="2047.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,433,050 samples, 0.14%)</title><rect x="41.3715%" y="2021" width="0.1443%" height="15" fill="rgb(229,40,46)" fg:x="697385762" fg:w="2433050"/><text x="41.6215%" y="2031.50"></text></g><g><title>alloc::alloc::alloc (2,433,050 samples, 0.14%)</title><rect x="41.3715%" y="2005" width="0.1443%" height="15" fill="rgb(244,195,20)" fg:x="697385762" fg:w="2433050"/><text x="41.6215%" y="2015.50"></text></g><g><title>malloc (2,433,050 samples, 0.14%)</title><rect x="41.3715%" y="1989" width="0.1443%" height="15" fill="rgb(253,56,35)" fg:x="697385762" fg:w="2433050"/><text x="41.6215%" y="1999.50"></text></g><g><title>[libc.so.6] (2,433,050 samples, 0.14%)</title><rect x="41.3715%" y="1973" width="0.1443%" height="15" fill="rgb(210,149,44)" fg:x="697385762" fg:w="2433050"/><text x="41.6215%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (441,515,209 samples, 26.19%)</title><rect x="15.4720%" y="2165" width="26.1923%" height="15" fill="rgb(240,135,12)" fg:x="260806332" fg:w="441515209"/><text x="15.7220%" y="2175.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clon..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (441,515,209 samples, 26.19%)</title><rect x="15.4720%" y="2149" width="26.1923%" height="15" fill="rgb(251,24,50)" fg:x="260806332" fg:w="441515209"/><text x="15.7220%" y="2159.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (441,515,209 samples, 26.19%)</title><rect x="15.4720%" y="2133" width="26.1923%" height="15" fill="rgb(243,200,47)" fg:x="260806332" fg:w="441515209"/><text x="15.7220%" y="2143.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (441,515,209 samples, 26.19%)</title><rect x="15.4720%" y="2117" width="26.1923%" height="15" fill="rgb(224,166,26)" fg:x="260806332" fg:w="441515209"/><text x="15.7220%" y="2127.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,502,729 samples, 0.15%)</title><rect x="41.5158%" y="2101" width="0.1485%" height="15" fill="rgb(233,0,47)" fg:x="699818812" fg:w="2502729"/><text x="41.7658%" y="2111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,647,464 samples, 0.16%)</title><rect x="41.6643%" y="2069" width="0.1571%" height="15" fill="rgb(253,80,5)" fg:x="702321541" fg:w="2647464"/><text x="41.9143%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,647,464 samples, 0.16%)</title><rect x="41.6643%" y="2053" width="0.1571%" height="15" fill="rgb(214,133,25)" fg:x="702321541" fg:w="2647464"/><text x="41.9143%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,647,464 samples, 0.16%)</title><rect x="41.6643%" y="2037" width="0.1571%" height="15" fill="rgb(209,27,14)" fg:x="702321541" fg:w="2647464"/><text x="41.9143%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,647,464 samples, 0.16%)</title><rect x="41.6643%" y="2021" width="0.1571%" height="15" fill="rgb(219,102,51)" fg:x="702321541" fg:w="2647464"/><text x="41.9143%" y="2031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,647,464 samples, 0.16%)</title><rect x="41.6643%" y="2005" width="0.1571%" height="15" fill="rgb(237,18,16)" fg:x="702321541" fg:w="2647464"/><text x="41.9143%" y="2015.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,647,464 samples, 0.16%)</title><rect x="41.6643%" y="1989" width="0.1571%" height="15" fill="rgb(241,85,17)" fg:x="702321541" fg:w="2647464"/><text x="41.9143%" y="1999.50"></text></g><g><title>alloc::alloc::alloc (2,647,464 samples, 0.16%)</title><rect x="41.6643%" y="1973" width="0.1571%" height="15" fill="rgb(236,90,42)" fg:x="702321541" fg:w="2647464"/><text x="41.9143%" y="1983.50"></text></g><g><title>malloc (2,647,464 samples, 0.16%)</title><rect x="41.6643%" y="1957" width="0.1571%" height="15" fill="rgb(249,57,21)" fg:x="702321541" fg:w="2647464"/><text x="41.9143%" y="1967.50"></text></g><g><title>[libc.so.6] (2,647,464 samples, 0.16%)</title><rect x="41.6643%" y="1941" width="0.1571%" height="15" fill="rgb(243,12,36)" fg:x="702321541" fg:w="2647464"/><text x="41.9143%" y="1951.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4,786,438 samples, 0.28%)</title><rect x="41.6643%" y="2165" width="0.2839%" height="15" fill="rgb(253,128,47)" fg:x="702321541" fg:w="4786438"/><text x="41.9143%" y="2175.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,786,438 samples, 0.28%)</title><rect x="41.6643%" y="2149" width="0.2839%" height="15" fill="rgb(207,33,20)" fg:x="702321541" fg:w="4786438"/><text x="41.9143%" y="2159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,786,438 samples, 0.28%)</title><rect x="41.6643%" y="2133" width="0.2839%" height="15" fill="rgb(233,215,35)" fg:x="702321541" fg:w="4786438"/><text x="41.9143%" y="2143.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,786,438 samples, 0.28%)</title><rect x="41.6643%" y="2117" width="0.2839%" height="15" fill="rgb(249,188,52)" fg:x="702321541" fg:w="4786438"/><text x="41.9143%" y="2127.50"></text></g><g><title>alloc::slice::hack::to_vec (4,786,438 samples, 0.28%)</title><rect x="41.6643%" y="2101" width="0.2839%" height="15" fill="rgb(225,12,32)" fg:x="702321541" fg:w="4786438"/><text x="41.9143%" y="2111.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,786,438 samples, 0.28%)</title><rect x="41.6643%" y="2085" width="0.2839%" height="15" fill="rgb(247,98,14)" fg:x="702321541" fg:w="4786438"/><text x="41.9143%" y="2095.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,138,974 samples, 0.13%)</title><rect x="41.8214%" y="2069" width="0.1269%" height="15" fill="rgb(247,219,48)" fg:x="704969005" fg:w="2138974"/><text x="42.0714%" y="2079.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,138,974 samples, 0.13%)</title><rect x="41.8214%" y="2053" width="0.1269%" height="15" fill="rgb(253,60,48)" fg:x="704969005" fg:w="2138974"/><text x="42.0714%" y="2063.50"></text></g><g><title>[libc.so.6] (2,138,974 samples, 0.13%)</title><rect x="41.8214%" y="2037" width="0.1269%" height="15" fill="rgb(245,15,52)" fg:x="704969005" fg:w="2138974"/><text x="42.0714%" y="2047.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (5,326,846 samples, 0.32%)</title><rect x="41.9483%" y="2165" width="0.3160%" height="15" fill="rgb(220,133,28)" fg:x="707107979" fg:w="5326846"/><text x="42.1983%" y="2175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,326,846 samples, 0.32%)</title><rect x="41.9483%" y="2149" width="0.3160%" height="15" fill="rgb(217,180,4)" fg:x="707107979" fg:w="5326846"/><text x="42.1983%" y="2159.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,326,846 samples, 0.32%)</title><rect x="41.9483%" y="2133" width="0.3160%" height="15" fill="rgb(251,24,1)" fg:x="707107979" fg:w="5326846"/><text x="42.1983%" y="2143.50"></text></g><g><title>alloc::slice::hack::to_vec (5,326,846 samples, 0.32%)</title><rect x="41.9483%" y="2117" width="0.3160%" height="15" fill="rgb(212,185,49)" fg:x="707107979" fg:w="5326846"/><text x="42.1983%" y="2127.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,326,846 samples, 0.32%)</title><rect x="41.9483%" y="2101" width="0.3160%" height="15" fill="rgb(215,175,22)" fg:x="707107979" fg:w="5326846"/><text x="42.1983%" y="2111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,326,846 samples, 0.32%)</title><rect x="41.9483%" y="2085" width="0.3160%" height="15" fill="rgb(250,205,14)" fg:x="707107979" fg:w="5326846"/><text x="42.1983%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,326,846 samples, 0.32%)</title><rect x="41.9483%" y="2069" width="0.3160%" height="15" fill="rgb(225,211,22)" fg:x="707107979" fg:w="5326846"/><text x="42.1983%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,326,846 samples, 0.32%)</title><rect x="41.9483%" y="2053" width="0.3160%" height="15" fill="rgb(251,179,42)" fg:x="707107979" fg:w="5326846"/><text x="42.1983%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,326,846 samples, 0.32%)</title><rect x="41.9483%" y="2037" width="0.3160%" height="15" fill="rgb(208,216,51)" fg:x="707107979" fg:w="5326846"/><text x="42.1983%" y="2047.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,326,846 samples, 0.32%)</title><rect x="41.9483%" y="2021" width="0.3160%" height="15" fill="rgb(235,36,11)" fg:x="707107979" fg:w="5326846"/><text x="42.1983%" y="2031.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,326,846 samples, 0.32%)</title><rect x="41.9483%" y="2005" width="0.3160%" height="15" fill="rgb(213,189,28)" fg:x="707107979" fg:w="5326846"/><text x="42.1983%" y="2015.50"></text></g><g><title>alloc::alloc::alloc (5,326,846 samples, 0.32%)</title><rect x="41.9483%" y="1989" width="0.3160%" height="15" fill="rgb(227,203,42)" fg:x="707107979" fg:w="5326846"/><text x="42.1983%" y="1999.50"></text></g><g><title>malloc (5,326,846 samples, 0.32%)</title><rect x="41.9483%" y="1973" width="0.3160%" height="15" fill="rgb(244,72,36)" fg:x="707107979" fg:w="5326846"/><text x="42.1983%" y="1983.50"></text></g><g><title>[libc.so.6] (5,326,846 samples, 0.32%)</title><rect x="41.9483%" y="1957" width="0.3160%" height="15" fill="rgb(213,53,17)" fg:x="707107979" fg:w="5326846"/><text x="42.1983%" y="1967.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,738,213 samples, 0.16%)</title><rect x="42.4179%" y="2069" width="0.1624%" height="15" fill="rgb(207,167,3)" fg:x="715024665" fg:w="2738213"/><text x="42.6679%" y="2079.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2,738,213 samples, 0.16%)</title><rect x="42.4179%" y="2053" width="0.1624%" height="15" fill="rgb(216,98,30)" fg:x="715024665" fg:w="2738213"/><text x="42.6679%" y="2063.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2,738,213 samples, 0.16%)</title><rect x="42.4179%" y="2037" width="0.1624%" height="15" fill="rgb(236,123,15)" fg:x="715024665" fg:w="2738213"/><text x="42.6679%" y="2047.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::remove_lowest_bit (2,738,213 samples, 0.16%)</title><rect x="42.4179%" y="2021" width="0.1624%" height="15" fill="rgb(248,81,50)" fg:x="715024665" fg:w="2738213"/><text x="42.6679%" y="2031.50"></text></g><g><title>core::ptr::read_volatile (2,415,121 samples, 0.14%)</title><rect x="42.7533%" y="1861" width="0.1433%" height="15" fill="rgb(214,120,4)" fg:x="720678915" fg:w="2415121"/><text x="43.0033%" y="1871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,792,639 samples, 0.58%)</title><rect x="42.7533%" y="1973" width="0.5809%" height="15" fill="rgb(208,179,34)" fg:x="720678915" fg:w="9792639"/><text x="43.0033%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,792,639 samples, 0.58%)</title><rect x="42.7533%" y="1957" width="0.5809%" height="15" fill="rgb(227,140,7)" fg:x="720678915" fg:w="9792639"/><text x="43.0033%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,792,639 samples, 0.58%)</title><rect x="42.7533%" y="1941" width="0.5809%" height="15" fill="rgb(214,22,6)" fg:x="720678915" fg:w="9792639"/><text x="43.0033%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,792,639 samples, 0.58%)</title><rect x="42.7533%" y="1925" width="0.5809%" height="15" fill="rgb(207,137,27)" fg:x="720678915" fg:w="9792639"/><text x="43.0033%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,792,639 samples, 0.58%)</title><rect x="42.7533%" y="1909" width="0.5809%" height="15" fill="rgb(210,8,46)" fg:x="720678915" fg:w="9792639"/><text x="43.0033%" y="1919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,792,639 samples, 0.58%)</title><rect x="42.7533%" y="1893" width="0.5809%" height="15" fill="rgb(240,16,54)" fg:x="720678915" fg:w="9792639"/><text x="43.0033%" y="1903.50"></text></g><g><title>alloc::alloc::alloc (9,792,639 samples, 0.58%)</title><rect x="42.7533%" y="1877" width="0.5809%" height="15" fill="rgb(211,209,29)" fg:x="720678915" fg:w="9792639"/><text x="43.0033%" y="1887.50"></text></g><g><title>malloc (7,377,518 samples, 0.44%)</title><rect x="42.8966%" y="1861" width="0.4377%" height="15" fill="rgb(226,228,24)" fg:x="723094036" fg:w="7377518"/><text x="43.1466%" y="1871.50"></text></g><g><title>[libc.so.6] (7,377,518 samples, 0.44%)</title><rect x="42.8966%" y="1845" width="0.4377%" height="15" fill="rgb(222,84,9)" fg:x="723094036" fg:w="7377518"/><text x="43.1466%" y="1855.50"></text></g><g><title>core::clone::Clone::clone (17,729,873 samples, 1.05%)</title><rect x="42.5803%" y="2069" width="1.0518%" height="15" fill="rgb(234,203,30)" fg:x="717762878" fg:w="17729873"/><text x="42.8303%" y="2079.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (17,729,873 samples, 1.05%)</title><rect x="42.5803%" y="2053" width="1.0518%" height="15" fill="rgb(238,109,14)" fg:x="717762878" fg:w="17729873"/><text x="42.8303%" y="2063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14,813,836 samples, 0.88%)</title><rect x="42.7533%" y="2037" width="0.8788%" height="15" fill="rgb(233,206,34)" fg:x="720678915" fg:w="14813836"/><text x="43.0033%" y="2047.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14,813,836 samples, 0.88%)</title><rect x="42.7533%" y="2021" width="0.8788%" height="15" fill="rgb(220,167,47)" fg:x="720678915" fg:w="14813836"/><text x="43.0033%" y="2031.50"></text></g><g><title>alloc::slice::hack::to_vec (14,813,836 samples, 0.88%)</title><rect x="42.7533%" y="2005" width="0.8788%" height="15" fill="rgb(238,105,10)" fg:x="720678915" fg:w="14813836"/><text x="43.0033%" y="2015.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14,813,836 samples, 0.88%)</title><rect x="42.7533%" y="1989" width="0.8788%" height="15" fill="rgb(213,227,17)" fg:x="720678915" fg:w="14813836"/><text x="43.0033%" y="1999.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5,021,197 samples, 0.30%)</title><rect x="43.3343%" y="1973" width="0.2979%" height="15" fill="rgb(217,132,38)" fg:x="730471554" fg:w="5021197"/><text x="43.5843%" y="1983.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5,021,197 samples, 0.30%)</title><rect x="43.3343%" y="1957" width="0.2979%" height="15" fill="rgb(242,146,4)" fg:x="730471554" fg:w="5021197"/><text x="43.5843%" y="1967.50"></text></g><g><title>[libc.so.6] (2,471,014 samples, 0.15%)</title><rect x="43.4856%" y="1941" width="0.1466%" height="15" fill="rgb(212,61,9)" fg:x="733021737" fg:w="2471014"/><text x="43.7356%" y="1951.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2,498,740 samples, 0.15%)</title><rect x="43.6321%" y="2069" width="0.1482%" height="15" fill="rgb(247,126,22)" fg:x="735492751" fg:w="2498740"/><text x="43.8821%" y="2079.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2,498,740 samples, 0.15%)</title><rect x="43.6321%" y="2053" width="0.1482%" height="15" fill="rgb(220,196,2)" fg:x="735492751" fg:w="2498740"/><text x="43.8821%" y="2063.50"></text></g><g><title>core::ptr::write (2,498,740 samples, 0.15%)</title><rect x="43.6321%" y="2037" width="0.1482%" height="15" fill="rgb(208,46,4)" fg:x="735492751" fg:w="2498740"/><text x="43.8821%" y="2047.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (2,433,886 samples, 0.14%)</title><rect x="43.7804%" y="2021" width="0.1444%" height="15" fill="rgb(252,104,46)" fg:x="737991491" fg:w="2433886"/><text x="44.0304%" y="2031.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (2,433,886 samples, 0.14%)</title><rect x="43.7804%" y="2005" width="0.1444%" height="15" fill="rgb(237,152,48)" fg:x="737991491" fg:w="2433886"/><text x="44.0304%" y="2015.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (27,984,653 samples, 1.66%)</title><rect x="42.4179%" y="2101" width="1.6602%" height="15" fill="rgb(221,59,37)" fg:x="715024665" fg:w="27984653"/><text x="42.6679%" y="2111.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (27,984,653 samples, 1.66%)</title><rect x="42.4179%" y="2085" width="1.6602%" height="15" fill="rgb(209,202,51)" fg:x="715024665" fg:w="27984653"/><text x="42.6679%" y="2095.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (5,017,827 samples, 0.30%)</title><rect x="43.7804%" y="2069" width="0.2977%" height="15" fill="rgb(228,81,30)" fg:x="737991491" fg:w="5017827"/><text x="44.0304%" y="2079.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (5,017,827 samples, 0.30%)</title><rect x="43.7804%" y="2053" width="0.2977%" height="15" fill="rgb(227,42,39)" fg:x="737991491" fg:w="5017827"/><text x="44.0304%" y="2063.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (5,017,827 samples, 0.30%)</title><rect x="43.7804%" y="2037" width="0.2977%" height="15" fill="rgb(221,26,2)" fg:x="737991491" fg:w="5017827"/><text x="44.0304%" y="2047.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_full (2,583,941 samples, 0.15%)</title><rect x="43.9248%" y="2021" width="0.1533%" height="15" fill="rgb(254,61,31)" fg:x="740425377" fg:w="2583941"/><text x="44.1748%" y="2031.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::invert (2,583,941 samples, 0.15%)</title><rect x="43.9248%" y="2005" width="0.1533%" height="15" fill="rgb(222,173,38)" fg:x="740425377" fg:w="2583941"/><text x="44.1748%" y="2015.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (2,435,796 samples, 0.14%)</title><rect x="44.0781%" y="2069" width="0.1445%" height="15" fill="rgb(218,50,12)" fg:x="743009318" fg:w="2435796"/><text x="44.3281%" y="2079.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (2,435,796 samples, 0.14%)</title><rect x="44.0781%" y="2053" width="0.1445%" height="15" fill="rgb(223,88,40)" fg:x="743009318" fg:w="2435796"/><text x="44.3281%" y="2063.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (2,435,796 samples, 0.14%)</title><rect x="44.0781%" y="2037" width="0.1445%" height="15" fill="rgb(237,54,19)" fg:x="743009318" fg:w="2435796"/><text x="44.3281%" y="2047.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (499,054,450 samples, 29.61%)</title><rect x="14.9518%" y="2181" width="29.6058%" height="15" fill="rgb(251,129,25)" fg:x="252037105" fg:w="499054450"/><text x="15.2018%" y="2191.50">&lt;css_bitvector_compiler::HtmlNode as core::clone..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (38,656,730 samples, 2.29%)</title><rect x="42.2643%" y="2165" width="2.2933%" height="15" fill="rgb(238,97,19)" fg:x="712434825" fg:w="38656730"/><text x="42.5143%" y="2175.50">&lt;..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (38,656,730 samples, 2.29%)</title><rect x="42.2643%" y="2149" width="2.2933%" height="15" fill="rgb(240,169,18)" fg:x="712434825" fg:w="38656730"/><text x="42.5143%" y="2159.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (36,066,890 samples, 2.14%)</title><rect x="42.4179%" y="2133" width="2.1396%" height="15" fill="rgb(230,187,49)" fg:x="715024665" fg:w="36066890"/><text x="42.6679%" y="2143.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (36,066,890 samples, 2.14%)</title><rect x="42.4179%" y="2117" width="2.1396%" height="15" fill="rgb(209,44,26)" fg:x="715024665" fg:w="36066890"/><text x="42.6679%" y="2127.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (8,082,237 samples, 0.48%)</title><rect x="44.0781%" y="2101" width="0.4795%" height="15" fill="rgb(244,0,6)" fg:x="743009318" fg:w="8082237"/><text x="44.3281%" y="2111.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (8,082,237 samples, 0.48%)</title><rect x="44.0781%" y="2085" width="0.4795%" height="15" fill="rgb(248,18,21)" fg:x="743009318" fg:w="8082237"/><text x="44.3281%" y="2095.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (5,646,441 samples, 0.33%)</title><rect x="44.2226%" y="2069" width="0.3350%" height="15" fill="rgb(245,180,19)" fg:x="745445114" fg:w="5646441"/><text x="44.4726%" y="2079.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,646,441 samples, 0.33%)</title><rect x="44.2226%" y="2053" width="0.3350%" height="15" fill="rgb(252,118,36)" fg:x="745445114" fg:w="5646441"/><text x="44.4726%" y="2063.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,646,441 samples, 0.33%)</title><rect x="44.2226%" y="2037" width="0.3350%" height="15" fill="rgb(210,224,19)" fg:x="745445114" fg:w="5646441"/><text x="44.4726%" y="2047.50"></text></g><g><title>alloc::alloc::alloc (5,646,441 samples, 0.33%)</title><rect x="44.2226%" y="2021" width="0.3350%" height="15" fill="rgb(218,30,24)" fg:x="745445114" fg:w="5646441"/><text x="44.4726%" y="2031.50"></text></g><g><title>malloc (5,646,441 samples, 0.33%)</title><rect x="44.2226%" y="2005" width="0.3350%" height="15" fill="rgb(219,75,50)" fg:x="745445114" fg:w="5646441"/><text x="44.4726%" y="2015.50"></text></g><g><title>[libc.so.6] (5,646,441 samples, 0.33%)</title><rect x="44.2226%" y="1989" width="0.3350%" height="15" fill="rgb(234,72,50)" fg:x="745445114" fg:w="5646441"/><text x="44.4726%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (509,295,936 samples, 30.21%)</title><rect x="14.7828%" y="2245" width="30.2133%" height="15" fill="rgb(219,100,48)" fg:x="249188676" fg:w="509295936"/><text x="15.0328%" y="2255.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (509,295,936 samples, 30.21%)</title><rect x="14.7828%" y="2229" width="30.2133%" height="15" fill="rgb(253,5,41)" fg:x="249188676" fg:w="509295936"/><text x="15.0328%" y="2239.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (509,295,936 samples, 30.21%)</title><rect x="14.7828%" y="2213" width="30.2133%" height="15" fill="rgb(247,181,11)" fg:x="249188676" fg:w="509295936"/><text x="15.0328%" y="2223.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (509,295,936 samples, 30.21%)</title><rect x="14.7828%" y="2197" width="30.2133%" height="15" fill="rgb(222,223,25)" fg:x="249188676" fg:w="509295936"/><text x="15.0328%" y="2207.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,393,057 samples, 0.44%)</title><rect x="44.5575%" y="2181" width="0.4386%" height="15" fill="rgb(214,198,28)" fg:x="751091555" fg:w="7393057"/><text x="44.8075%" y="2191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7,393,057 samples, 0.44%)</title><rect x="44.5575%" y="2165" width="0.4386%" height="15" fill="rgb(230,46,43)" fg:x="751091555" fg:w="7393057"/><text x="44.8075%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7,393,057 samples, 0.44%)</title><rect x="44.5575%" y="2149" width="0.4386%" height="15" fill="rgb(233,65,53)" fg:x="751091555" fg:w="7393057"/><text x="44.8075%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7,393,057 samples, 0.44%)</title><rect x="44.5575%" y="2133" width="0.4386%" height="15" fill="rgb(221,121,27)" fg:x="751091555" fg:w="7393057"/><text x="44.8075%" y="2143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,393,057 samples, 0.44%)</title><rect x="44.5575%" y="2117" width="0.4386%" height="15" fill="rgb(247,70,47)" fg:x="751091555" fg:w="7393057"/><text x="44.8075%" y="2127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,393,057 samples, 0.44%)</title><rect x="44.5575%" y="2101" width="0.4386%" height="15" fill="rgb(228,85,35)" fg:x="751091555" fg:w="7393057"/><text x="44.8075%" y="2111.50"></text></g><g><title>alloc::alloc::alloc (7,393,057 samples, 0.44%)</title><rect x="44.5575%" y="2085" width="0.4386%" height="15" fill="rgb(209,50,18)" fg:x="751091555" fg:w="7393057"/><text x="44.8075%" y="2095.50"></text></g><g><title>malloc (7,393,057 samples, 0.44%)</title><rect x="44.5575%" y="2069" width="0.4386%" height="15" fill="rgb(250,19,35)" fg:x="751091555" fg:w="7393057"/><text x="44.8075%" y="2079.50"></text></g><g><title>[libc.so.6] (2,693,853 samples, 0.16%)</title><rect x="44.8363%" y="2053" width="0.1598%" height="15" fill="rgb(253,107,29)" fg:x="755790759" fg:w="2693853"/><text x="45.0863%" y="2063.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,529,327 samples, 0.15%)</title><rect x="44.9961%" y="2245" width="0.1500%" height="15" fill="rgb(252,179,29)" fg:x="758484612" fg:w="2529327"/><text x="45.2461%" y="2255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,529,327 samples, 0.15%)</title><rect x="44.9961%" y="2229" width="0.1500%" height="15" fill="rgb(238,194,6)" fg:x="758484612" fg:w="2529327"/><text x="45.2461%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,529,327 samples, 0.15%)</title><rect x="44.9961%" y="2213" width="0.1500%" height="15" fill="rgb(238,164,29)" fg:x="758484612" fg:w="2529327"/><text x="45.2461%" y="2223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,529,327 samples, 0.15%)</title><rect x="44.9961%" y="2197" width="0.1500%" height="15" fill="rgb(224,25,9)" fg:x="758484612" fg:w="2529327"/><text x="45.2461%" y="2207.50"></text></g><g><title>alloc::slice::hack::to_vec (2,529,327 samples, 0.15%)</title><rect x="44.9961%" y="2181" width="0.1500%" height="15" fill="rgb(244,153,23)" fg:x="758484612" fg:w="2529327"/><text x="45.2461%" y="2191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,529,327 samples, 0.15%)</title><rect x="44.9961%" y="2165" width="0.1500%" height="15" fill="rgb(212,203,14)" fg:x="758484612" fg:w="2529327"/><text x="45.2461%" y="2175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,529,327 samples, 0.15%)</title><rect x="44.9961%" y="2149" width="0.1500%" height="15" fill="rgb(220,164,20)" fg:x="758484612" fg:w="2529327"/><text x="45.2461%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,529,327 samples, 0.15%)</title><rect x="44.9961%" y="2133" width="0.1500%" height="15" fill="rgb(222,203,48)" fg:x="758484612" fg:w="2529327"/><text x="45.2461%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,529,327 samples, 0.15%)</title><rect x="44.9961%" y="2117" width="0.1500%" height="15" fill="rgb(215,159,22)" fg:x="758484612" fg:w="2529327"/><text x="45.2461%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,529,327 samples, 0.15%)</title><rect x="44.9961%" y="2101" width="0.1500%" height="15" fill="rgb(216,183,47)" fg:x="758484612" fg:w="2529327"/><text x="45.2461%" y="2111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,529,327 samples, 0.15%)</title><rect x="44.9961%" y="2085" width="0.1500%" height="15" fill="rgb(229,195,25)" fg:x="758484612" fg:w="2529327"/><text x="45.2461%" y="2095.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,529,327 samples, 0.15%)</title><rect x="44.9961%" y="2069" width="0.1500%" height="15" fill="rgb(224,132,51)" fg:x="758484612" fg:w="2529327"/><text x="45.2461%" y="2079.50"></text></g><g><title>alloc::alloc::alloc (2,529,327 samples, 0.15%)</title><rect x="44.9961%" y="2053" width="0.1500%" height="15" fill="rgb(240,63,7)" fg:x="758484612" fg:w="2529327"/><text x="45.2461%" y="2063.50"></text></g><g><title>malloc (2,529,327 samples, 0.15%)</title><rect x="44.9961%" y="2037" width="0.1500%" height="15" fill="rgb(249,182,41)" fg:x="758484612" fg:w="2529327"/><text x="45.2461%" y="2047.50"></text></g><g><title>[libc.so.6] (2,529,327 samples, 0.15%)</title><rect x="44.9961%" y="2021" width="0.1500%" height="15" fill="rgb(243,47,26)" fg:x="758484612" fg:w="2529327"/><text x="45.2461%" y="2031.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (5,671,507 samples, 0.34%)</title><rect x="45.1462%" y="2245" width="0.3365%" height="15" fill="rgb(233,48,2)" fg:x="761013939" fg:w="5671507"/><text x="45.3962%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,671,507 samples, 0.34%)</title><rect x="45.1462%" y="2229" width="0.3365%" height="15" fill="rgb(244,165,34)" fg:x="761013939" fg:w="5671507"/><text x="45.3962%" y="2239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,671,507 samples, 0.34%)</title><rect x="45.1462%" y="2213" width="0.3365%" height="15" fill="rgb(207,89,7)" fg:x="761013939" fg:w="5671507"/><text x="45.3962%" y="2223.50"></text></g><g><title>alloc::slice::hack::to_vec (5,671,507 samples, 0.34%)</title><rect x="45.1462%" y="2197" width="0.3365%" height="15" fill="rgb(244,117,36)" fg:x="761013939" fg:w="5671507"/><text x="45.3962%" y="2207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,671,507 samples, 0.34%)</title><rect x="45.1462%" y="2181" width="0.3365%" height="15" fill="rgb(226,144,34)" fg:x="761013939" fg:w="5671507"/><text x="45.3962%" y="2191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,671,507 samples, 0.34%)</title><rect x="45.1462%" y="2165" width="0.3365%" height="15" fill="rgb(213,23,19)" fg:x="761013939" fg:w="5671507"/><text x="45.3962%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,671,507 samples, 0.34%)</title><rect x="45.1462%" y="2149" width="0.3365%" height="15" fill="rgb(217,75,12)" fg:x="761013939" fg:w="5671507"/><text x="45.3962%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,671,507 samples, 0.34%)</title><rect x="45.1462%" y="2133" width="0.3365%" height="15" fill="rgb(224,159,17)" fg:x="761013939" fg:w="5671507"/><text x="45.3962%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,671,507 samples, 0.34%)</title><rect x="45.1462%" y="2117" width="0.3365%" height="15" fill="rgb(217,118,1)" fg:x="761013939" fg:w="5671507"/><text x="45.3962%" y="2127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,671,507 samples, 0.34%)</title><rect x="45.1462%" y="2101" width="0.3365%" height="15" fill="rgb(232,180,48)" fg:x="761013939" fg:w="5671507"/><text x="45.3962%" y="2111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,671,507 samples, 0.34%)</title><rect x="45.1462%" y="2085" width="0.3365%" height="15" fill="rgb(230,27,33)" fg:x="761013939" fg:w="5671507"/><text x="45.3962%" y="2095.50"></text></g><g><title>alloc::alloc::alloc (5,671,507 samples, 0.34%)</title><rect x="45.1462%" y="2069" width="0.3365%" height="15" fill="rgb(205,31,21)" fg:x="761013939" fg:w="5671507"/><text x="45.3962%" y="2079.50"></text></g><g><title>malloc (2,830,418 samples, 0.17%)</title><rect x="45.3147%" y="2053" width="0.1679%" height="15" fill="rgb(253,59,4)" fg:x="763855028" fg:w="2830418"/><text x="45.5647%" y="2063.50"></text></g><g><title>[libc.so.6] (2,830,418 samples, 0.17%)</title><rect x="45.3147%" y="2037" width="0.1679%" height="15" fill="rgb(224,201,9)" fg:x="763855028" fg:w="2830418"/><text x="45.5647%" y="2047.50"></text></g><g><title>core::clone::Clone::clone (2,774,915 samples, 0.16%)</title><rect x="45.4826%" y="2149" width="0.1646%" height="15" fill="rgb(229,206,30)" fg:x="766685446" fg:w="2774915"/><text x="45.7326%" y="2159.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,774,915 samples, 0.16%)</title><rect x="45.4826%" y="2133" width="0.1646%" height="15" fill="rgb(212,67,47)" fg:x="766685446" fg:w="2774915"/><text x="45.7326%" y="2143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,774,915 samples, 0.16%)</title><rect x="45.4826%" y="2117" width="0.1646%" height="15" fill="rgb(211,96,50)" fg:x="766685446" fg:w="2774915"/><text x="45.7326%" y="2127.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,774,915 samples, 0.16%)</title><rect x="45.4826%" y="2101" width="0.1646%" height="15" fill="rgb(252,114,18)" fg:x="766685446" fg:w="2774915"/><text x="45.7326%" y="2111.50"></text></g><g><title>alloc::slice::hack::to_vec (2,774,915 samples, 0.16%)</title><rect x="45.4826%" y="2085" width="0.1646%" height="15" fill="rgb(223,58,37)" fg:x="766685446" fg:w="2774915"/><text x="45.7326%" y="2095.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,774,915 samples, 0.16%)</title><rect x="45.4826%" y="2069" width="0.1646%" height="15" fill="rgb(237,70,4)" fg:x="766685446" fg:w="2774915"/><text x="45.7326%" y="2079.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,774,915 samples, 0.16%)</title><rect x="45.4826%" y="2053" width="0.1646%" height="15" fill="rgb(244,85,46)" fg:x="766685446" fg:w="2774915"/><text x="45.7326%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,774,915 samples, 0.16%)</title><rect x="45.4826%" y="2037" width="0.1646%" height="15" fill="rgb(223,39,52)" fg:x="766685446" fg:w="2774915"/><text x="45.7326%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,774,915 samples, 0.16%)</title><rect x="45.4826%" y="2021" width="0.1646%" height="15" fill="rgb(218,200,14)" fg:x="766685446" fg:w="2774915"/><text x="45.7326%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,774,915 samples, 0.16%)</title><rect x="45.4826%" y="2005" width="0.1646%" height="15" fill="rgb(208,171,16)" fg:x="766685446" fg:w="2774915"/><text x="45.7326%" y="2015.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,774,915 samples, 0.16%)</title><rect x="45.4826%" y="1989" width="0.1646%" height="15" fill="rgb(234,200,18)" fg:x="766685446" fg:w="2774915"/><text x="45.7326%" y="1999.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,774,915 samples, 0.16%)</title><rect x="45.4826%" y="1973" width="0.1646%" height="15" fill="rgb(228,45,11)" fg:x="766685446" fg:w="2774915"/><text x="45.7326%" y="1983.50"></text></g><g><title>alloc::alloc::alloc (2,774,915 samples, 0.16%)</title><rect x="45.4826%" y="1957" width="0.1646%" height="15" fill="rgb(237,182,11)" fg:x="766685446" fg:w="2774915"/><text x="45.7326%" y="1967.50"></text></g><g><title>malloc (2,774,915 samples, 0.16%)</title><rect x="45.4826%" y="1941" width="0.1646%" height="15" fill="rgb(241,175,49)" fg:x="766685446" fg:w="2774915"/><text x="45.7326%" y="1951.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (7,141,081 samples, 0.42%)</title><rect x="45.6472%" y="2149" width="0.4236%" height="15" fill="rgb(247,38,35)" fg:x="769460361" fg:w="7141081"/><text x="45.8972%" y="2159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7,141,081 samples, 0.42%)</title><rect x="45.6472%" y="2133" width="0.4236%" height="15" fill="rgb(228,39,49)" fg:x="769460361" fg:w="7141081"/><text x="45.8972%" y="2143.50"></text></g><g><title>[libc.so.6] (7,141,081 samples, 0.42%)</title><rect x="45.6472%" y="2117" width="0.4236%" height="15" fill="rgb(226,101,26)" fg:x="769460361" fg:w="7141081"/><text x="45.8972%" y="2127.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (12,469,127 samples, 0.74%)</title><rect x="45.4826%" y="2181" width="0.7397%" height="15" fill="rgb(206,141,19)" fg:x="766685446" fg:w="12469127"/><text x="45.7326%" y="2191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (12,469,127 samples, 0.74%)</title><rect x="45.4826%" y="2165" width="0.7397%" height="15" fill="rgb(211,200,13)" fg:x="766685446" fg:w="12469127"/><text x="45.7326%" y="2175.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2,553,131 samples, 0.15%)</title><rect x="46.0709%" y="2149" width="0.1515%" height="15" fill="rgb(241,121,6)" fg:x="776601442" fg:w="2553131"/><text x="46.3209%" y="2159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2,553,131 samples, 0.15%)</title><rect x="46.0709%" y="2133" width="0.1515%" height="15" fill="rgb(234,221,29)" fg:x="776601442" fg:w="2553131"/><text x="46.3209%" y="2143.50"></text></g><g><title>core::ptr::write (2,553,131 samples, 0.15%)</title><rect x="46.0709%" y="2117" width="0.1515%" height="15" fill="rgb(229,136,5)" fg:x="776601442" fg:w="2553131"/><text x="46.3209%" y="2127.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (537,932,829 samples, 31.91%)</title><rect x="14.6405%" y="2261" width="31.9122%" height="15" fill="rgb(238,36,11)" fg:x="246789408" fg:w="537932829"/><text x="14.8905%" y="2271.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Cl..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (18,036,791 samples, 1.07%)</title><rect x="45.4826%" y="2245" width="1.0700%" height="15" fill="rgb(251,55,41)" fg:x="766685446" fg:w="18036791"/><text x="45.7326%" y="2255.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (18,036,791 samples, 1.07%)</title><rect x="45.4826%" y="2229" width="1.0700%" height="15" fill="rgb(242,34,40)" fg:x="766685446" fg:w="18036791"/><text x="45.7326%" y="2239.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (18,036,791 samples, 1.07%)</title><rect x="45.4826%" y="2213" width="1.0700%" height="15" fill="rgb(215,42,17)" fg:x="766685446" fg:w="18036791"/><text x="45.7326%" y="2223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (18,036,791 samples, 1.07%)</title><rect x="45.4826%" y="2197" width="1.0700%" height="15" fill="rgb(207,44,46)" fg:x="766685446" fg:w="18036791"/><text x="45.7326%" y="2207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (5,567,664 samples, 0.33%)</title><rect x="46.2223%" y="2181" width="0.3303%" height="15" fill="rgb(211,206,28)" fg:x="779154573" fg:w="5567664"/><text x="46.4723%" y="2191.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (5,567,664 samples, 0.33%)</title><rect x="46.2223%" y="2165" width="0.3303%" height="15" fill="rgb(237,167,16)" fg:x="779154573" fg:w="5567664"/><text x="46.4723%" y="2175.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (5,567,664 samples, 0.33%)</title><rect x="46.2223%" y="2149" width="0.3303%" height="15" fill="rgb(233,66,6)" fg:x="779154573" fg:w="5567664"/><text x="46.4723%" y="2159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,567,664 samples, 0.33%)</title><rect x="46.2223%" y="2133" width="0.3303%" height="15" fill="rgb(246,123,29)" fg:x="779154573" fg:w="5567664"/><text x="46.4723%" y="2143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,567,664 samples, 0.33%)</title><rect x="46.2223%" y="2117" width="0.3303%" height="15" fill="rgb(209,62,40)" fg:x="779154573" fg:w="5567664"/><text x="46.4723%" y="2127.50"></text></g><g><title>alloc::alloc::alloc (5,567,664 samples, 0.33%)</title><rect x="46.2223%" y="2101" width="0.3303%" height="15" fill="rgb(218,4,25)" fg:x="779154573" fg:w="5567664"/><text x="46.4723%" y="2111.50"></text></g><g><title>malloc (5,567,664 samples, 0.33%)</title><rect x="46.2223%" y="2085" width="0.3303%" height="15" fill="rgb(253,91,49)" fg:x="779154573" fg:w="5567664"/><text x="46.4723%" y="2095.50"></text></g><g><title>[libc.so.6] (2,771,629 samples, 0.16%)</title><rect x="46.3882%" y="2069" width="0.1644%" height="15" fill="rgb(228,155,29)" fg:x="781950608" fg:w="2771629"/><text x="46.6382%" y="2079.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,245,968 samples, 0.13%)</title><rect x="46.5526%" y="2261" width="0.1332%" height="15" fill="rgb(243,57,37)" fg:x="784722237" fg:w="2245968"/><text x="46.8026%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,245,968 samples, 0.13%)</title><rect x="46.5526%" y="2245" width="0.1332%" height="15" fill="rgb(244,167,17)" fg:x="784722237" fg:w="2245968"/><text x="46.8026%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,245,968 samples, 0.13%)</title><rect x="46.5526%" y="2229" width="0.1332%" height="15" fill="rgb(207,181,38)" fg:x="784722237" fg:w="2245968"/><text x="46.8026%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,245,968 samples, 0.13%)</title><rect x="46.5526%" y="2213" width="0.1332%" height="15" fill="rgb(211,8,23)" fg:x="784722237" fg:w="2245968"/><text x="46.8026%" y="2223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,245,968 samples, 0.13%)</title><rect x="46.5526%" y="2197" width="0.1332%" height="15" fill="rgb(235,11,44)" fg:x="784722237" fg:w="2245968"/><text x="46.8026%" y="2207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,245,968 samples, 0.13%)</title><rect x="46.5526%" y="2181" width="0.1332%" height="15" fill="rgb(248,18,52)" fg:x="784722237" fg:w="2245968"/><text x="46.8026%" y="2191.50"></text></g><g><title>alloc::alloc::alloc (2,245,968 samples, 0.13%)</title><rect x="46.5526%" y="2165" width="0.1332%" height="15" fill="rgb(208,4,7)" fg:x="784722237" fg:w="2245968"/><text x="46.8026%" y="2175.50"></text></g><g><title>malloc (2,245,968 samples, 0.13%)</title><rect x="46.5526%" y="2149" width="0.1332%" height="15" fill="rgb(240,17,39)" fg:x="784722237" fg:w="2245968"/><text x="46.8026%" y="2159.50"></text></g><g><title>[libc.so.6] (2,245,968 samples, 0.13%)</title><rect x="46.5526%" y="2133" width="0.1332%" height="15" fill="rgb(207,170,3)" fg:x="784722237" fg:w="2245968"/><text x="46.8026%" y="2143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (542,923,903 samples, 32.21%)</title><rect x="14.6405%" y="2325" width="32.2082%" height="15" fill="rgb(236,100,52)" fg:x="246789408" fg:w="542923903"/><text x="14.8905%" y="2335.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (542,923,903 samples, 32.21%)</title><rect x="14.6405%" y="2309" width="32.2082%" height="15" fill="rgb(246,78,51)" fg:x="246789408" fg:w="542923903"/><text x="14.8905%" y="2319.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (542,923,903 samples, 32.21%)</title><rect x="14.6405%" y="2293" width="32.2082%" height="15" fill="rgb(211,17,15)" fg:x="246789408" fg:w="542923903"/><text x="14.8905%" y="2303.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (542,923,903 samples, 32.21%)</title><rect x="14.6405%" y="2277" width="32.2082%" height="15" fill="rgb(209,59,46)" fg:x="246789408" fg:w="542923903"/><text x="14.8905%" y="2287.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,745,106 samples, 0.16%)</title><rect x="46.6859%" y="2261" width="0.1628%" height="15" fill="rgb(210,92,25)" fg:x="786968205" fg:w="2745106"/><text x="46.9359%" y="2271.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,761,116 samples, 0.16%)</title><rect x="46.8487%" y="2325" width="0.1638%" height="15" fill="rgb(238,174,52)" fg:x="789713311" fg:w="2761116"/><text x="47.0987%" y="2335.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,036,104 samples, 0.06%)</title><rect x="47.0125%" y="2325" width="0.0615%" height="15" fill="rgb(230,73,7)" fg:x="792474427" fg:w="1036104"/><text x="47.2625%" y="2335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,036,104 samples, 0.06%)</title><rect x="47.0125%" y="2309" width="0.0615%" height="15" fill="rgb(243,124,40)" fg:x="792474427" fg:w="1036104"/><text x="47.2625%" y="2319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,036,104 samples, 0.06%)</title><rect x="47.0125%" y="2293" width="0.0615%" height="15" fill="rgb(244,170,11)" fg:x="792474427" fg:w="1036104"/><text x="47.2625%" y="2303.50"></text></g><g><title>alloc::slice::hack::to_vec (1,036,104 samples, 0.06%)</title><rect x="47.0125%" y="2277" width="0.0615%" height="15" fill="rgb(207,114,54)" fg:x="792474427" fg:w="1036104"/><text x="47.2625%" y="2287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,036,104 samples, 0.06%)</title><rect x="47.0125%" y="2261" width="0.0615%" height="15" fill="rgb(205,42,20)" fg:x="792474427" fg:w="1036104"/><text x="47.2625%" y="2271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,036,104 samples, 0.06%)</title><rect x="47.0125%" y="2245" width="0.0615%" height="15" fill="rgb(230,30,28)" fg:x="792474427" fg:w="1036104"/><text x="47.2625%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,036,104 samples, 0.06%)</title><rect x="47.0125%" y="2229" width="0.0615%" height="15" fill="rgb(205,73,54)" fg:x="792474427" fg:w="1036104"/><text x="47.2625%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,036,104 samples, 0.06%)</title><rect x="47.0125%" y="2213" width="0.0615%" height="15" fill="rgb(254,227,23)" fg:x="792474427" fg:w="1036104"/><text x="47.2625%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,036,104 samples, 0.06%)</title><rect x="47.0125%" y="2197" width="0.0615%" height="15" fill="rgb(228,202,34)" fg:x="792474427" fg:w="1036104"/><text x="47.2625%" y="2207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,036,104 samples, 0.06%)</title><rect x="47.0125%" y="2181" width="0.0615%" height="15" fill="rgb(222,225,37)" fg:x="792474427" fg:w="1036104"/><text x="47.2625%" y="2191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,036,104 samples, 0.06%)</title><rect x="47.0125%" y="2165" width="0.0615%" height="15" fill="rgb(221,14,54)" fg:x="792474427" fg:w="1036104"/><text x="47.2625%" y="2175.50"></text></g><g><title>alloc::alloc::alloc (1,036,104 samples, 0.06%)</title><rect x="47.0125%" y="2149" width="0.0615%" height="15" fill="rgb(254,102,2)" fg:x="792474427" fg:w="1036104"/><text x="47.2625%" y="2159.50"></text></g><g><title>malloc (1,036,104 samples, 0.06%)</title><rect x="47.0125%" y="2133" width="0.0615%" height="15" fill="rgb(232,104,17)" fg:x="792474427" fg:w="1036104"/><text x="47.2625%" y="2143.50"></text></g><g><title>[libc.so.6] (1,036,104 samples, 0.06%)</title><rect x="47.0125%" y="2117" width="0.0615%" height="15" fill="rgb(250,220,14)" fg:x="792474427" fg:w="1036104"/><text x="47.2625%" y="2127.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (549,294,348 samples, 32.59%)</title><rect x="14.6405%" y="2341" width="32.5862%" height="15" fill="rgb(241,158,9)" fg:x="246789408" fg:w="549294348"/><text x="14.8905%" y="2351.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clo..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2325" width="0.1527%" height="15" fill="rgb(246,9,43)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2335.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2309" width="0.1527%" height="15" fill="rgb(206,73,33)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2319.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2293" width="0.1527%" height="15" fill="rgb(222,79,8)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2277" width="0.1527%" height="15" fill="rgb(234,8,54)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2261" width="0.1527%" height="15" fill="rgb(209,134,38)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2245" width="0.1527%" height="15" fill="rgb(230,127,29)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2255.50"></text></g><g><title>core::clone::Clone::clone (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2229" width="0.1527%" height="15" fill="rgb(242,44,41)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2213" width="0.1527%" height="15" fill="rgb(222,56,43)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2197" width="0.1527%" height="15" fill="rgb(238,39,47)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2181" width="0.1527%" height="15" fill="rgb(226,79,43)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2191.50"></text></g><g><title>alloc::slice::hack::to_vec (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2165" width="0.1527%" height="15" fill="rgb(242,105,53)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2149" width="0.1527%" height="15" fill="rgb(251,132,46)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2133" width="0.1527%" height="15" fill="rgb(231,77,14)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2117" width="0.1527%" height="15" fill="rgb(240,135,9)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2101" width="0.1527%" height="15" fill="rgb(248,109,14)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2085" width="0.1527%" height="15" fill="rgb(227,146,52)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2095.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2069" width="0.1527%" height="15" fill="rgb(232,54,3)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2079.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2053" width="0.1527%" height="15" fill="rgb(229,201,43)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2063.50"></text></g><g><title>alloc::alloc::alloc (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2037" width="0.1527%" height="15" fill="rgb(252,161,33)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2047.50"></text></g><g><title>malloc (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2021" width="0.1527%" height="15" fill="rgb(226,146,40)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2031.50"></text></g><g><title>[libc.so.6] (2,573,225 samples, 0.15%)</title><rect x="47.0740%" y="2005" width="0.1527%" height="15" fill="rgb(219,47,25)" fg:x="793510531" fg:w="2573225"/><text x="47.3240%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (551,773,279 samples, 32.73%)</title><rect x="14.6405%" y="2405" width="32.7332%" height="15" fill="rgb(250,135,13)" fg:x="246789408" fg:w="551773279"/><text x="14.8905%" y="2415.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (551,773,279 samples, 32.73%)</title><rect x="14.6405%" y="2389" width="32.7332%" height="15" fill="rgb(219,229,18)" fg:x="246789408" fg:w="551773279"/><text x="14.8905%" y="2399.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (551,773,279 samples, 32.73%)</title><rect x="14.6405%" y="2373" width="32.7332%" height="15" fill="rgb(217,152,27)" fg:x="246789408" fg:w="551773279"/><text x="14.8905%" y="2383.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (551,773,279 samples, 32.73%)</title><rect x="14.6405%" y="2357" width="32.7332%" height="15" fill="rgb(225,71,47)" fg:x="246789408" fg:w="551773279"/><text x="14.8905%" y="2367.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,478,931 samples, 0.15%)</title><rect x="47.2266%" y="2341" width="0.1471%" height="15" fill="rgb(220,139,14)" fg:x="796083756" fg:w="2478931"/><text x="47.4766%" y="2351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (559,016,934 samples, 33.16%)</title><rect x="14.3568%" y="2485" width="33.1629%" height="15" fill="rgb(247,54,32)" fg:x="242008195" fg:w="559016934"/><text x="14.6068%" y="2495.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (559,016,934 samples, 33.16%)</title><rect x="14.3568%" y="2469" width="33.1629%" height="15" fill="rgb(252,131,39)" fg:x="242008195" fg:w="559016934"/><text x="14.6068%" y="2479.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (559,016,934 samples, 33.16%)</title><rect x="14.3568%" y="2453" width="33.1629%" height="15" fill="rgb(210,108,39)" fg:x="242008195" fg:w="559016934"/><text x="14.6068%" y="2463.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (559,016,934 samples, 33.16%)</title><rect x="14.3568%" y="2437" width="33.1629%" height="15" fill="rgb(205,23,29)" fg:x="242008195" fg:w="559016934"/><text x="14.6068%" y="2447.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (559,016,934 samples, 33.16%)</title><rect x="14.3568%" y="2421" width="33.1629%" height="15" fill="rgb(246,139,46)" fg:x="242008195" fg:w="559016934"/><text x="14.6068%" y="2431.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clon..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,462,442 samples, 0.15%)</title><rect x="47.3737%" y="2405" width="0.1461%" height="15" fill="rgb(250,81,26)" fg:x="798562687" fg:w="2462442"/><text x="47.6237%" y="2415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,462,442 samples, 0.15%)</title><rect x="47.3737%" y="2389" width="0.1461%" height="15" fill="rgb(214,104,7)" fg:x="798562687" fg:w="2462442"/><text x="47.6237%" y="2399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,718,516 samples, 0.16%)</title><rect x="47.5198%" y="2485" width="0.1613%" height="15" fill="rgb(233,189,8)" fg:x="801025129" fg:w="2718516"/><text x="47.7698%" y="2495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,718,516 samples, 0.16%)</title><rect x="47.5198%" y="2469" width="0.1613%" height="15" fill="rgb(228,141,17)" fg:x="801025129" fg:w="2718516"/><text x="47.7698%" y="2479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,718,516 samples, 0.16%)</title><rect x="47.5198%" y="2453" width="0.1613%" height="15" fill="rgb(247,157,1)" fg:x="801025129" fg:w="2718516"/><text x="47.7698%" y="2463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,718,516 samples, 0.16%)</title><rect x="47.5198%" y="2437" width="0.1613%" height="15" fill="rgb(249,225,5)" fg:x="801025129" fg:w="2718516"/><text x="47.7698%" y="2447.50"></text></g><g><title>alloc::slice::hack::to_vec (2,718,516 samples, 0.16%)</title><rect x="47.5198%" y="2421" width="0.1613%" height="15" fill="rgb(242,55,13)" fg:x="801025129" fg:w="2718516"/><text x="47.7698%" y="2431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,718,516 samples, 0.16%)</title><rect x="47.5198%" y="2405" width="0.1613%" height="15" fill="rgb(230,49,50)" fg:x="801025129" fg:w="2718516"/><text x="47.7698%" y="2415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,718,516 samples, 0.16%)</title><rect x="47.5198%" y="2389" width="0.1613%" height="15" fill="rgb(241,111,38)" fg:x="801025129" fg:w="2718516"/><text x="47.7698%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,718,516 samples, 0.16%)</title><rect x="47.5198%" y="2373" width="0.1613%" height="15" fill="rgb(252,155,4)" fg:x="801025129" fg:w="2718516"/><text x="47.7698%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,718,516 samples, 0.16%)</title><rect x="47.5198%" y="2357" width="0.1613%" height="15" fill="rgb(212,69,32)" fg:x="801025129" fg:w="2718516"/><text x="47.7698%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,718,516 samples, 0.16%)</title><rect x="47.5198%" y="2341" width="0.1613%" height="15" fill="rgb(243,107,47)" fg:x="801025129" fg:w="2718516"/><text x="47.7698%" y="2351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,718,516 samples, 0.16%)</title><rect x="47.5198%" y="2325" width="0.1613%" height="15" fill="rgb(247,130,12)" fg:x="801025129" fg:w="2718516"/><text x="47.7698%" y="2335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,718,516 samples, 0.16%)</title><rect x="47.5198%" y="2309" width="0.1613%" height="15" fill="rgb(233,74,16)" fg:x="801025129" fg:w="2718516"/><text x="47.7698%" y="2319.50"></text></g><g><title>alloc::alloc::alloc (2,718,516 samples, 0.16%)</title><rect x="47.5198%" y="2293" width="0.1613%" height="15" fill="rgb(208,58,18)" fg:x="801025129" fg:w="2718516"/><text x="47.7698%" y="2303.50"></text></g><g><title>malloc (2,718,516 samples, 0.16%)</title><rect x="47.5198%" y="2277" width="0.1613%" height="15" fill="rgb(242,225,1)" fg:x="801025129" fg:w="2718516"/><text x="47.7698%" y="2287.50"></text></g><g><title>[libc.so.6] (2,718,516 samples, 0.16%)</title><rect x="47.5198%" y="2261" width="0.1613%" height="15" fill="rgb(249,39,40)" fg:x="801025129" fg:w="2718516"/><text x="47.7698%" y="2271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (564,529,735 samples, 33.49%)</title><rect x="14.3568%" y="2565" width="33.4900%" height="15" fill="rgb(207,72,44)" fg:x="242008195" fg:w="564529735"/><text x="14.6068%" y="2575.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (564,529,735 samples, 33.49%)</title><rect x="14.3568%" y="2549" width="33.4900%" height="15" fill="rgb(215,193,12)" fg:x="242008195" fg:w="564529735"/><text x="14.6068%" y="2559.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (564,529,735 samples, 33.49%)</title><rect x="14.3568%" y="2533" width="33.4900%" height="15" fill="rgb(248,41,39)" fg:x="242008195" fg:w="564529735"/><text x="14.6068%" y="2543.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (564,529,735 samples, 33.49%)</title><rect x="14.3568%" y="2517" width="33.4900%" height="15" fill="rgb(253,85,4)" fg:x="242008195" fg:w="564529735"/><text x="14.6068%" y="2527.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (564,529,735 samples, 33.49%)</title><rect x="14.3568%" y="2501" width="33.4900%" height="15" fill="rgb(243,70,31)" fg:x="242008195" fg:w="564529735"/><text x="14.6068%" y="2511.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clon..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2485" width="0.1658%" height="15" fill="rgb(253,195,26)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2495.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2469" width="0.1658%" height="15" fill="rgb(243,42,11)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2453" width="0.1658%" height="15" fill="rgb(239,66,17)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2437" width="0.1658%" height="15" fill="rgb(217,132,21)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2421" width="0.1658%" height="15" fill="rgb(252,202,21)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2405" width="0.1658%" height="15" fill="rgb(233,98,36)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2415.50"></text></g><g><title>core::clone::Clone::clone (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2389" width="0.1658%" height="15" fill="rgb(216,153,54)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2373" width="0.1658%" height="15" fill="rgb(250,99,7)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2357" width="0.1658%" height="15" fill="rgb(207,56,50)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2341" width="0.1658%" height="15" fill="rgb(244,61,34)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2351.50"></text></g><g><title>alloc::slice::hack::to_vec (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2325" width="0.1658%" height="15" fill="rgb(241,50,38)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2309" width="0.1658%" height="15" fill="rgb(212,166,30)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2293" width="0.1658%" height="15" fill="rgb(249,127,32)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2277" width="0.1658%" height="15" fill="rgb(209,103,0)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2261" width="0.1658%" height="15" fill="rgb(238,209,51)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2245" width="0.1658%" height="15" fill="rgb(237,56,23)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2229" width="0.1658%" height="15" fill="rgb(215,153,46)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2213" width="0.1658%" height="15" fill="rgb(224,49,31)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2223.50"></text></g><g><title>alloc::alloc::alloc (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2197" width="0.1658%" height="15" fill="rgb(250,18,42)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2207.50"></text></g><g><title>malloc (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2181" width="0.1658%" height="15" fill="rgb(215,176,39)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2191.50"></text></g><g><title>[libc.so.6] (2,794,285 samples, 0.17%)</title><rect x="47.6810%" y="2165" width="0.1658%" height="15" fill="rgb(223,77,29)" fg:x="803743645" fg:w="2794285"/><text x="47.9310%" y="2175.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (569,550,207 samples, 33.79%)</title><rect x="14.2152%" y="2581" width="33.7878%" height="15" fill="rgb(234,94,52)" fg:x="239621757" fg:w="569550207"/><text x="14.4652%" y="2591.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,634,034 samples, 0.16%)</title><rect x="47.8468%" y="2565" width="0.1563%" height="15" fill="rgb(220,154,50)" fg:x="806537930" fg:w="2634034"/><text x="48.0968%" y="2575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,634,034 samples, 0.16%)</title><rect x="47.8468%" y="2549" width="0.1563%" height="15" fill="rgb(212,11,10)" fg:x="806537930" fg:w="2634034"/><text x="48.0968%" y="2559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,634,034 samples, 0.16%)</title><rect x="47.8468%" y="2533" width="0.1563%" height="15" fill="rgb(205,166,19)" fg:x="806537930" fg:w="2634034"/><text x="48.0968%" y="2543.50"></text></g><g><title>alloc::slice::hack::to_vec (2,634,034 samples, 0.16%)</title><rect x="47.8468%" y="2517" width="0.1563%" height="15" fill="rgb(244,198,16)" fg:x="806537930" fg:w="2634034"/><text x="48.0968%" y="2527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,634,034 samples, 0.16%)</title><rect x="47.8468%" y="2501" width="0.1563%" height="15" fill="rgb(219,69,12)" fg:x="806537930" fg:w="2634034"/><text x="48.0968%" y="2511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,634,034 samples, 0.16%)</title><rect x="47.8468%" y="2485" width="0.1563%" height="15" fill="rgb(245,30,7)" fg:x="806537930" fg:w="2634034"/><text x="48.0968%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,634,034 samples, 0.16%)</title><rect x="47.8468%" y="2469" width="0.1563%" height="15" fill="rgb(218,221,48)" fg:x="806537930" fg:w="2634034"/><text x="48.0968%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,634,034 samples, 0.16%)</title><rect x="47.8468%" y="2453" width="0.1563%" height="15" fill="rgb(216,66,15)" fg:x="806537930" fg:w="2634034"/><text x="48.0968%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,634,034 samples, 0.16%)</title><rect x="47.8468%" y="2437" width="0.1563%" height="15" fill="rgb(226,122,50)" fg:x="806537930" fg:w="2634034"/><text x="48.0968%" y="2447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,634,034 samples, 0.16%)</title><rect x="47.8468%" y="2421" width="0.1563%" height="15" fill="rgb(239,156,16)" fg:x="806537930" fg:w="2634034"/><text x="48.0968%" y="2431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,634,034 samples, 0.16%)</title><rect x="47.8468%" y="2405" width="0.1563%" height="15" fill="rgb(224,27,38)" fg:x="806537930" fg:w="2634034"/><text x="48.0968%" y="2415.50"></text></g><g><title>alloc::alloc::alloc (2,634,034 samples, 0.16%)</title><rect x="47.8468%" y="2389" width="0.1563%" height="15" fill="rgb(224,39,27)" fg:x="806537930" fg:w="2634034"/><text x="48.0968%" y="2399.50"></text></g><g><title>malloc (2,634,034 samples, 0.16%)</title><rect x="47.8468%" y="2373" width="0.1563%" height="15" fill="rgb(215,92,29)" fg:x="806537930" fg:w="2634034"/><text x="48.0968%" y="2383.50"></text></g><g><title>[libc.so.6] (2,634,034 samples, 0.16%)</title><rect x="47.8468%" y="2357" width="0.1563%" height="15" fill="rgb(207,159,16)" fg:x="806537930" fg:w="2634034"/><text x="48.0968%" y="2367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (781,318,581 samples, 46.35%)</title><rect x="14.2152%" y="2645" width="46.3507%" height="15" fill="rgb(238,163,47)" fg:x="239621757" fg:w="781318581"/><text x="14.4652%" y="2655.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (781,318,581 samples, 46.35%)</title><rect x="14.2152%" y="2629" width="46.3507%" height="15" fill="rgb(219,91,49)" fg:x="239621757" fg:w="781318581"/><text x="14.4652%" y="2639.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (781,318,581 samples, 46.35%)</title><rect x="14.2152%" y="2613" width="46.3507%" height="15" fill="rgb(227,167,31)" fg:x="239621757" fg:w="781318581"/><text x="14.4652%" y="2623.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (781,318,581 samples, 46.35%)</title><rect x="14.2152%" y="2597" width="46.3507%" height="15" fill="rgb(234,80,54)" fg:x="239621757" fg:w="781318581"/><text x="14.4652%" y="2607.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (211,768,374 samples, 12.56%)</title><rect x="48.0031%" y="2581" width="12.5629%" height="15" fill="rgb(212,114,2)" fg:x="809171964" fg:w="211768374"/><text x="48.2531%" y="2591.50">alloc::vec::Vec&lt;T,A..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (211,768,374 samples, 12.56%)</title><rect x="48.0031%" y="2565" width="12.5629%" height="15" fill="rgb(234,50,24)" fg:x="809171964" fg:w="211768374"/><text x="48.2531%" y="2575.50">alloc::raw_vec::Raw..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (211,768,374 samples, 12.56%)</title><rect x="48.0031%" y="2549" width="12.5629%" height="15" fill="rgb(221,68,8)" fg:x="809171964" fg:w="211768374"/><text x="48.2531%" y="2559.50">alloc::raw_vec::Raw..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (211,768,374 samples, 12.56%)</title><rect x="48.0031%" y="2533" width="12.5629%" height="15" fill="rgb(254,180,31)" fg:x="809171964" fg:w="211768374"/><text x="48.2531%" y="2543.50">alloc::raw_vec::Raw..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (211,768,374 samples, 12.56%)</title><rect x="48.0031%" y="2517" width="12.5629%" height="15" fill="rgb(247,130,50)" fg:x="809171964" fg:w="211768374"/><text x="48.2531%" y="2527.50">&lt;alloc::alloc::Glob..</text></g><g><title>alloc::alloc::Global::alloc_impl (211,768,374 samples, 12.56%)</title><rect x="48.0031%" y="2501" width="12.5629%" height="15" fill="rgb(211,109,4)" fg:x="809171964" fg:w="211768374"/><text x="48.2531%" y="2511.50">alloc::alloc::Globa..</text></g><g><title>alloc::alloc::alloc (211,768,374 samples, 12.56%)</title><rect x="48.0031%" y="2485" width="12.5629%" height="15" fill="rgb(238,50,21)" fg:x="809171964" fg:w="211768374"/><text x="48.2531%" y="2495.50">alloc::alloc::alloc</text></g><g><title>malloc (211,768,374 samples, 12.56%)</title><rect x="48.0031%" y="2469" width="12.5629%" height="15" fill="rgb(225,57,45)" fg:x="809171964" fg:w="211768374"/><text x="48.2531%" y="2479.50">malloc</text></g><g><title>[libc.so.6] (211,768,374 samples, 12.56%)</title><rect x="48.0031%" y="2453" width="12.5629%" height="15" fill="rgb(209,196,50)" fg:x="809171964" fg:w="211768374"/><text x="48.2531%" y="2463.50">[libc.so.6]</text></g><g><title>[libc.so.6] (206,117,719 samples, 12.23%)</title><rect x="48.3383%" y="2437" width="12.2277%" height="15" fill="rgb(242,140,13)" fg:x="814822619" fg:w="206117719"/><text x="48.5883%" y="2447.50">[libc.so.6]</text></g><g><title>[libc.so.6] (72,750,605 samples, 4.32%)</title><rect x="56.2501%" y="2421" width="4.3158%" height="15" fill="rgb(217,111,7)" fg:x="948189733" fg:w="72750605"/><text x="56.5001%" y="2431.50">[libc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (783,678,931 samples, 46.49%)</title><rect x="14.2152%" y="2805" width="46.4907%" height="15" fill="rgb(253,193,51)" fg:x="239621757" fg:w="783678931"/><text x="14.4652%" y="2815.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (783,678,931 samples, 46.49%)</title><rect x="14.2152%" y="2789" width="46.4907%" height="15" fill="rgb(252,70,29)" fg:x="239621757" fg:w="783678931"/><text x="14.4652%" y="2799.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (783,678,931 samples, 46.49%)</title><rect x="14.2152%" y="2773" width="46.4907%" height="15" fill="rgb(232,127,12)" fg:x="239621757" fg:w="783678931"/><text x="14.4652%" y="2783.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (783,678,931 samples, 46.49%)</title><rect x="14.2152%" y="2757" width="46.4907%" height="15" fill="rgb(211,180,21)" fg:x="239621757" fg:w="783678931"/><text x="14.4652%" y="2767.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (783,678,931 samples, 46.49%)</title><rect x="14.2152%" y="2741" width="46.4907%" height="15" fill="rgb(229,72,13)" fg:x="239621757" fg:w="783678931"/><text x="14.4652%" y="2751.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (783,678,931 samples, 46.49%)</title><rect x="14.2152%" y="2725" width="46.4907%" height="15" fill="rgb(240,211,49)" fg:x="239621757" fg:w="783678931"/><text x="14.4652%" y="2735.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (783,678,931 samples, 46.49%)</title><rect x="14.2152%" y="2709" width="46.4907%" height="15" fill="rgb(219,149,40)" fg:x="239621757" fg:w="783678931"/><text x="14.4652%" y="2719.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (783,678,931 samples, 46.49%)</title><rect x="14.2152%" y="2693" width="46.4907%" height="15" fill="rgb(210,127,46)" fg:x="239621757" fg:w="783678931"/><text x="14.4652%" y="2703.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (783,678,931 samples, 46.49%)</title><rect x="14.2152%" y="2677" width="46.4907%" height="15" fill="rgb(220,106,7)" fg:x="239621757" fg:w="783678931"/><text x="14.4652%" y="2687.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (783,678,931 samples, 46.49%)</title><rect x="14.2152%" y="2661" width="46.4907%" height="15" fill="rgb(249,31,22)" fg:x="239621757" fg:w="783678931"/><text x="14.4652%" y="2671.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,360,350 samples, 0.14%)</title><rect x="60.5659%" y="2645" width="0.1400%" height="15" fill="rgb(253,1,49)" fg:x="1020940338" fg:w="2360350"/><text x="60.8159%" y="2655.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,360,350 samples, 0.14%)</title><rect x="60.5659%" y="2629" width="0.1400%" height="15" fill="rgb(227,144,33)" fg:x="1020940338" fg:w="2360350"/><text x="60.8159%" y="2639.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,360,350 samples, 0.14%)</title><rect x="60.5659%" y="2613" width="0.1400%" height="15" fill="rgb(249,163,44)" fg:x="1020940338" fg:w="2360350"/><text x="60.8159%" y="2623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,360,350 samples, 0.14%)</title><rect x="60.5659%" y="2597" width="0.1400%" height="15" fill="rgb(234,15,39)" fg:x="1020940338" fg:w="2360350"/><text x="60.8159%" y="2607.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (786,419,731 samples, 46.65%)</title><rect x="14.2152%" y="2901" width="46.6533%" height="15" fill="rgb(207,66,16)" fg:x="239621757" fg:w="786419731"/><text x="14.4652%" y="2911.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (786,419,731 samples, 46.65%)</title><rect x="14.2152%" y="2885" width="46.6533%" height="15" fill="rgb(233,112,24)" fg:x="239621757" fg:w="786419731"/><text x="14.4652%" y="2895.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (786,419,731 samples, 46.65%)</title><rect x="14.2152%" y="2869" width="46.6533%" height="15" fill="rgb(230,90,22)" fg:x="239621757" fg:w="786419731"/><text x="14.4652%" y="2879.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (786,419,731 samples, 46.65%)</title><rect x="14.2152%" y="2853" width="46.6533%" height="15" fill="rgb(229,61,13)" fg:x="239621757" fg:w="786419731"/><text x="14.4652%" y="2863.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (786,419,731 samples, 46.65%)</title><rect x="14.2152%" y="2837" width="46.6533%" height="15" fill="rgb(225,57,24)" fg:x="239621757" fg:w="786419731"/><text x="14.4652%" y="2847.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (786,419,731 samples, 46.65%)</title><rect x="14.2152%" y="2821" width="46.6533%" height="15" fill="rgb(208,169,48)" fg:x="239621757" fg:w="786419731"/><text x="14.4652%" y="2831.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,740,800 samples, 0.16%)</title><rect x="60.7060%" y="2805" width="0.1626%" height="15" fill="rgb(244,218,51)" fg:x="1023300688" fg:w="2740800"/><text x="60.9560%" y="2815.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,740,800 samples, 0.16%)</title><rect x="60.7060%" y="2789" width="0.1626%" height="15" fill="rgb(214,148,10)" fg:x="1023300688" fg:w="2740800"/><text x="60.9560%" y="2799.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,740,800 samples, 0.16%)</title><rect x="60.7060%" y="2773" width="0.1626%" height="15" fill="rgb(225,174,27)" fg:x="1023300688" fg:w="2740800"/><text x="60.9560%" y="2783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,740,800 samples, 0.16%)</title><rect x="60.7060%" y="2757" width="0.1626%" height="15" fill="rgb(230,96,26)" fg:x="1023300688" fg:w="2740800"/><text x="60.9560%" y="2767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,740,800 samples, 0.16%)</title><rect x="60.7060%" y="2741" width="0.1626%" height="15" fill="rgb(232,10,30)" fg:x="1023300688" fg:w="2740800"/><text x="60.9560%" y="2751.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,740,800 samples, 0.16%)</title><rect x="60.7060%" y="2725" width="0.1626%" height="15" fill="rgb(222,8,50)" fg:x="1023300688" fg:w="2740800"/><text x="60.9560%" y="2735.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,740,800 samples, 0.16%)</title><rect x="60.7060%" y="2709" width="0.1626%" height="15" fill="rgb(213,81,27)" fg:x="1023300688" fg:w="2740800"/><text x="60.9560%" y="2719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,740,800 samples, 0.16%)</title><rect x="60.7060%" y="2693" width="0.1626%" height="15" fill="rgb(245,50,10)" fg:x="1023300688" fg:w="2740800"/><text x="60.9560%" y="2703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,740,800 samples, 0.16%)</title><rect x="60.7060%" y="2677" width="0.1626%" height="15" fill="rgb(216,100,18)" fg:x="1023300688" fg:w="2740800"/><text x="60.9560%" y="2687.50"></text></g><g><title>alloc::alloc::alloc (2,740,800 samples, 0.16%)</title><rect x="60.7060%" y="2661" width="0.1626%" height="15" fill="rgb(236,147,54)" fg:x="1023300688" fg:w="2740800"/><text x="60.9560%" y="2671.50"></text></g><g><title>malloc (2,740,800 samples, 0.16%)</title><rect x="60.7060%" y="2645" width="0.1626%" height="15" fill="rgb(205,143,26)" fg:x="1023300688" fg:w="2740800"/><text x="60.9560%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,652,108 samples, 0.16%)</title><rect x="60.8686%" y="2437" width="0.1573%" height="15" fill="rgb(236,26,9)" fg:x="1026041488" fg:w="2652108"/><text x="61.1186%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,652,108 samples, 0.16%)</title><rect x="60.8686%" y="2421" width="0.1573%" height="15" fill="rgb(221,165,53)" fg:x="1026041488" fg:w="2652108"/><text x="61.1186%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,652,108 samples, 0.16%)</title><rect x="60.8686%" y="2405" width="0.1573%" height="15" fill="rgb(214,110,17)" fg:x="1026041488" fg:w="2652108"/><text x="61.1186%" y="2415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,652,108 samples, 0.16%)</title><rect x="60.8686%" y="2389" width="0.1573%" height="15" fill="rgb(237,197,12)" fg:x="1026041488" fg:w="2652108"/><text x="61.1186%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,652,108 samples, 0.16%)</title><rect x="60.8686%" y="2373" width="0.1573%" height="15" fill="rgb(205,84,17)" fg:x="1026041488" fg:w="2652108"/><text x="61.1186%" y="2383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,652,108 samples, 0.16%)</title><rect x="60.8686%" y="2357" width="0.1573%" height="15" fill="rgb(237,18,45)" fg:x="1026041488" fg:w="2652108"/><text x="61.1186%" y="2367.50"></text></g><g><title>alloc::alloc::dealloc (2,652,108 samples, 0.16%)</title><rect x="60.8686%" y="2341" width="0.1573%" height="15" fill="rgb(221,87,14)" fg:x="1026041488" fg:w="2652108"/><text x="61.1186%" y="2351.50"></text></g><g><title>cfree (2,652,108 samples, 0.16%)</title><rect x="60.8686%" y="2325" width="0.1573%" height="15" fill="rgb(238,186,15)" fg:x="1026041488" fg:w="2652108"/><text x="61.1186%" y="2335.50"></text></g><g><title>[libc.so.6] (2,652,108 samples, 0.16%)</title><rect x="60.8686%" y="2309" width="0.1573%" height="15" fill="rgb(208,115,11)" fg:x="1026041488" fg:w="2652108"/><text x="61.1186%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,830,028 samples, 0.17%)</title><rect x="61.0259%" y="2373" width="0.1679%" height="15" fill="rgb(254,175,0)" fg:x="1028693596" fg:w="2830028"/><text x="61.2759%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,830,028 samples, 0.17%)</title><rect x="61.0259%" y="2357" width="0.1679%" height="15" fill="rgb(227,24,42)" fg:x="1028693596" fg:w="2830028"/><text x="61.2759%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,830,028 samples, 0.17%)</title><rect x="61.0259%" y="2341" width="0.1679%" height="15" fill="rgb(223,211,37)" fg:x="1028693596" fg:w="2830028"/><text x="61.2759%" y="2351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,830,028 samples, 0.17%)</title><rect x="61.0259%" y="2325" width="0.1679%" height="15" fill="rgb(235,49,27)" fg:x="1028693596" fg:w="2830028"/><text x="61.2759%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,830,028 samples, 0.17%)</title><rect x="61.0259%" y="2309" width="0.1679%" height="15" fill="rgb(254,97,51)" fg:x="1028693596" fg:w="2830028"/><text x="61.2759%" y="2319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,830,028 samples, 0.17%)</title><rect x="61.0259%" y="2293" width="0.1679%" height="15" fill="rgb(249,51,40)" fg:x="1028693596" fg:w="2830028"/><text x="61.2759%" y="2303.50"></text></g><g><title>alloc::alloc::dealloc (2,830,028 samples, 0.17%)</title><rect x="61.0259%" y="2277" width="0.1679%" height="15" fill="rgb(210,128,45)" fg:x="1028693596" fg:w="2830028"/><text x="61.2759%" y="2287.50"></text></g><g><title>cfree (2,830,028 samples, 0.17%)</title><rect x="61.0259%" y="2261" width="0.1679%" height="15" fill="rgb(224,137,50)" fg:x="1028693596" fg:w="2830028"/><text x="61.2759%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5,226,789 samples, 0.31%)</title><rect x="61.1938%" y="2309" width="0.3101%" height="15" fill="rgb(242,15,9)" fg:x="1031523624" fg:w="5226789"/><text x="61.4438%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5,226,789 samples, 0.31%)</title><rect x="61.1938%" y="2293" width="0.3101%" height="15" fill="rgb(233,187,41)" fg:x="1031523624" fg:w="5226789"/><text x="61.4438%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5,226,789 samples, 0.31%)</title><rect x="61.1938%" y="2277" width="0.3101%" height="15" fill="rgb(227,2,29)" fg:x="1031523624" fg:w="5226789"/><text x="61.4438%" y="2287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,226,789 samples, 0.31%)</title><rect x="61.1938%" y="2261" width="0.3101%" height="15" fill="rgb(222,70,3)" fg:x="1031523624" fg:w="5226789"/><text x="61.4438%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,226,789 samples, 0.31%)</title><rect x="61.1938%" y="2245" width="0.3101%" height="15" fill="rgb(213,11,42)" fg:x="1031523624" fg:w="5226789"/><text x="61.4438%" y="2255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,226,789 samples, 0.31%)</title><rect x="61.1938%" y="2229" width="0.3101%" height="15" fill="rgb(225,150,9)" fg:x="1031523624" fg:w="5226789"/><text x="61.4438%" y="2239.50"></text></g><g><title>alloc::alloc::dealloc (5,226,789 samples, 0.31%)</title><rect x="61.1938%" y="2213" width="0.3101%" height="15" fill="rgb(230,162,45)" fg:x="1031523624" fg:w="5226789"/><text x="61.4438%" y="2223.50"></text></g><g><title>cfree (5,226,789 samples, 0.31%)</title><rect x="61.1938%" y="2197" width="0.3101%" height="15" fill="rgb(222,14,52)" fg:x="1031523624" fg:w="5226789"/><text x="61.4438%" y="2207.50"></text></g><g><title>[libc.so.6] (2,840,050 samples, 0.17%)</title><rect x="61.3354%" y="2181" width="0.1685%" height="15" fill="rgb(254,198,14)" fg:x="1033910363" fg:w="2840050"/><text x="61.5854%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,209,985 samples, 0.13%)</title><rect x="61.5039%" y="2181" width="0.1311%" height="15" fill="rgb(220,217,30)" fg:x="1036750413" fg:w="2209985"/><text x="61.7539%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,209,985 samples, 0.13%)</title><rect x="61.5039%" y="2165" width="0.1311%" height="15" fill="rgb(215,146,41)" fg:x="1036750413" fg:w="2209985"/><text x="61.7539%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,209,985 samples, 0.13%)</title><rect x="61.5039%" y="2149" width="0.1311%" height="15" fill="rgb(217,27,36)" fg:x="1036750413" fg:w="2209985"/><text x="61.7539%" y="2159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,209,985 samples, 0.13%)</title><rect x="61.5039%" y="2133" width="0.1311%" height="15" fill="rgb(219,218,39)" fg:x="1036750413" fg:w="2209985"/><text x="61.7539%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,209,985 samples, 0.13%)</title><rect x="61.5039%" y="2117" width="0.1311%" height="15" fill="rgb(219,4,42)" fg:x="1036750413" fg:w="2209985"/><text x="61.7539%" y="2127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,209,985 samples, 0.13%)</title><rect x="61.5039%" y="2101" width="0.1311%" height="15" fill="rgb(249,119,36)" fg:x="1036750413" fg:w="2209985"/><text x="61.7539%" y="2111.50"></text></g><g><title>alloc::alloc::dealloc (2,209,985 samples, 0.13%)</title><rect x="61.5039%" y="2085" width="0.1311%" height="15" fill="rgb(209,23,33)" fg:x="1036750413" fg:w="2209985"/><text x="61.7539%" y="2095.50"></text></g><g><title>cfree (2,209,985 samples, 0.13%)</title><rect x="61.5039%" y="2069" width="0.1311%" height="15" fill="rgb(211,10,0)" fg:x="1036750413" fg:w="2209985"/><text x="61.7539%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (8,168,763 samples, 0.48%)</title><rect x="61.6350%" y="2053" width="0.4846%" height="15" fill="rgb(208,99,37)" fg:x="1038960398" fg:w="8168763"/><text x="61.8850%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8,168,763 samples, 0.48%)</title><rect x="61.6350%" y="2037" width="0.4846%" height="15" fill="rgb(213,132,31)" fg:x="1038960398" fg:w="8168763"/><text x="61.8850%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8,168,763 samples, 0.48%)</title><rect x="61.6350%" y="2021" width="0.4846%" height="15" fill="rgb(243,129,40)" fg:x="1038960398" fg:w="8168763"/><text x="61.8850%" y="2031.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,168,763 samples, 0.48%)</title><rect x="61.6350%" y="2005" width="0.4846%" height="15" fill="rgb(210,66,33)" fg:x="1038960398" fg:w="8168763"/><text x="61.8850%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (8,168,763 samples, 0.48%)</title><rect x="61.6350%" y="1989" width="0.4846%" height="15" fill="rgb(209,189,4)" fg:x="1038960398" fg:w="8168763"/><text x="61.8850%" y="1999.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,168,763 samples, 0.48%)</title><rect x="61.6350%" y="1973" width="0.4846%" height="15" fill="rgb(214,107,37)" fg:x="1038960398" fg:w="8168763"/><text x="61.8850%" y="1983.50"></text></g><g><title>alloc::alloc::dealloc (8,168,763 samples, 0.48%)</title><rect x="61.6350%" y="1957" width="0.4846%" height="15" fill="rgb(245,88,54)" fg:x="1038960398" fg:w="8168763"/><text x="61.8850%" y="1967.50"></text></g><g><title>cfree (8,168,763 samples, 0.48%)</title><rect x="61.6350%" y="1941" width="0.4846%" height="15" fill="rgb(205,146,20)" fg:x="1038960398" fg:w="8168763"/><text x="61.8850%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,378,497 samples, 0.14%)</title><rect x="62.1196%" y="1925" width="0.1411%" height="15" fill="rgb(220,161,25)" fg:x="1047129161" fg:w="2378497"/><text x="62.3696%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,378,497 samples, 0.14%)</title><rect x="62.1196%" y="1909" width="0.1411%" height="15" fill="rgb(215,152,15)" fg:x="1047129161" fg:w="2378497"/><text x="62.3696%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,378,497 samples, 0.14%)</title><rect x="62.1196%" y="1893" width="0.1411%" height="15" fill="rgb(233,192,44)" fg:x="1047129161" fg:w="2378497"/><text x="62.3696%" y="1903.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,378,497 samples, 0.14%)</title><rect x="62.1196%" y="1877" width="0.1411%" height="15" fill="rgb(240,170,46)" fg:x="1047129161" fg:w="2378497"/><text x="62.3696%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,378,497 samples, 0.14%)</title><rect x="62.1196%" y="1861" width="0.1411%" height="15" fill="rgb(207,104,33)" fg:x="1047129161" fg:w="2378497"/><text x="62.3696%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,378,497 samples, 0.14%)</title><rect x="62.1196%" y="1845" width="0.1411%" height="15" fill="rgb(219,21,39)" fg:x="1047129161" fg:w="2378497"/><text x="62.3696%" y="1855.50"></text></g><g><title>alloc::alloc::dealloc (2,378,497 samples, 0.14%)</title><rect x="62.1196%" y="1829" width="0.1411%" height="15" fill="rgb(214,133,29)" fg:x="1047129161" fg:w="2378497"/><text x="62.3696%" y="1839.50"></text></g><g><title>cfree (2,378,497 samples, 0.14%)</title><rect x="62.1196%" y="1813" width="0.1411%" height="15" fill="rgb(226,93,6)" fg:x="1047129161" fg:w="2378497"/><text x="62.3696%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,839,537 samples, 0.17%)</title><rect x="62.2607%" y="1845" width="0.1685%" height="15" fill="rgb(252,222,34)" fg:x="1049507658" fg:w="2839537"/><text x="62.5107%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,839,537 samples, 0.17%)</title><rect x="62.2607%" y="1829" width="0.1685%" height="15" fill="rgb(252,92,48)" fg:x="1049507658" fg:w="2839537"/><text x="62.5107%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,839,537 samples, 0.17%)</title><rect x="62.2607%" y="1813" width="0.1685%" height="15" fill="rgb(245,223,24)" fg:x="1049507658" fg:w="2839537"/><text x="62.5107%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,839,537 samples, 0.17%)</title><rect x="62.2607%" y="1797" width="0.1685%" height="15" fill="rgb(205,176,3)" fg:x="1049507658" fg:w="2839537"/><text x="62.5107%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,839,537 samples, 0.17%)</title><rect x="62.2607%" y="1781" width="0.1685%" height="15" fill="rgb(235,151,15)" fg:x="1049507658" fg:w="2839537"/><text x="62.5107%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,839,537 samples, 0.17%)</title><rect x="62.2607%" y="1765" width="0.1685%" height="15" fill="rgb(237,209,11)" fg:x="1049507658" fg:w="2839537"/><text x="62.5107%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,839,537 samples, 0.17%)</title><rect x="62.2607%" y="1749" width="0.1685%" height="15" fill="rgb(243,227,24)" fg:x="1049507658" fg:w="2839537"/><text x="62.5107%" y="1759.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,839,537 samples, 0.17%)</title><rect x="62.2607%" y="1733" width="0.1685%" height="15" fill="rgb(239,193,16)" fg:x="1049507658" fg:w="2839537"/><text x="62.5107%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,839,537 samples, 0.17%)</title><rect x="62.2607%" y="1717" width="0.1685%" height="15" fill="rgb(231,27,9)" fg:x="1049507658" fg:w="2839537"/><text x="62.5107%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,839,537 samples, 0.17%)</title><rect x="62.2607%" y="1701" width="0.1685%" height="15" fill="rgb(219,169,10)" fg:x="1049507658" fg:w="2839537"/><text x="62.5107%" y="1711.50"></text></g><g><title>alloc::alloc::dealloc (2,839,537 samples, 0.17%)</title><rect x="62.2607%" y="1685" width="0.1685%" height="15" fill="rgb(244,229,43)" fg:x="1049507658" fg:w="2839537"/><text x="62.5107%" y="1695.50"></text></g><g><title>cfree (2,839,537 samples, 0.17%)</title><rect x="62.2607%" y="1669" width="0.1685%" height="15" fill="rgb(254,38,20)" fg:x="1049507658" fg:w="2839537"/><text x="62.5107%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (8,026,939 samples, 0.48%)</title><rect x="62.2607%" y="1861" width="0.4762%" height="15" fill="rgb(250,47,30)" fg:x="1049507658" fg:w="8026939"/><text x="62.5107%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,187,402 samples, 0.31%)</title><rect x="62.4291%" y="1845" width="0.3077%" height="15" fill="rgb(224,124,36)" fg:x="1052347195" fg:w="5187402"/><text x="62.6791%" y="1855.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,187,402 samples, 0.31%)</title><rect x="62.4291%" y="1829" width="0.3077%" height="15" fill="rgb(246,68,51)" fg:x="1052347195" fg:w="5187402"/><text x="62.6791%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,187,402 samples, 0.31%)</title><rect x="62.4291%" y="1813" width="0.3077%" height="15" fill="rgb(253,43,49)" fg:x="1052347195" fg:w="5187402"/><text x="62.6791%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,187,402 samples, 0.31%)</title><rect x="62.4291%" y="1797" width="0.3077%" height="15" fill="rgb(219,54,36)" fg:x="1052347195" fg:w="5187402"/><text x="62.6791%" y="1807.50"></text></g><g><title>alloc::alloc::dealloc (5,187,402 samples, 0.31%)</title><rect x="62.4291%" y="1781" width="0.3077%" height="15" fill="rgb(227,133,34)" fg:x="1052347195" fg:w="5187402"/><text x="62.6791%" y="1791.50"></text></g><g><title>cfree (5,187,402 samples, 0.31%)</title><rect x="62.4291%" y="1765" width="0.3077%" height="15" fill="rgb(247,227,15)" fg:x="1052347195" fg:w="5187402"/><text x="62.6791%" y="1775.50"></text></g><g><title>[libc.so.6] (2,777,150 samples, 0.16%)</title><rect x="62.5721%" y="1749" width="0.1648%" height="15" fill="rgb(229,96,14)" fg:x="1054757447" fg:w="2777150"/><text x="62.8221%" y="1759.50"></text></g><g><title>[libc.so.6] (2,777,150 samples, 0.16%)</title><rect x="62.5721%" y="1733" width="0.1648%" height="15" fill="rgb(220,79,17)" fg:x="1054757447" fg:w="2777150"/><text x="62.8221%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (10,595,212 samples, 0.63%)</title><rect x="62.2607%" y="1925" width="0.6285%" height="15" fill="rgb(205,131,53)" fg:x="1049507658" fg:w="10595212"/><text x="62.5107%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,595,212 samples, 0.63%)</title><rect x="62.2607%" y="1909" width="0.6285%" height="15" fill="rgb(209,50,29)" fg:x="1049507658" fg:w="10595212"/><text x="62.5107%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (10,595,212 samples, 0.63%)</title><rect x="62.2607%" y="1893" width="0.6285%" height="15" fill="rgb(245,86,46)" fg:x="1049507658" fg:w="10595212"/><text x="62.5107%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (10,595,212 samples, 0.63%)</title><rect x="62.2607%" y="1877" width="0.6285%" height="15" fill="rgb(235,66,46)" fg:x="1049507658" fg:w="10595212"/><text x="62.5107%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,568,273 samples, 0.15%)</title><rect x="62.7369%" y="1861" width="0.1524%" height="15" fill="rgb(232,148,31)" fg:x="1057534597" fg:w="2568273"/><text x="62.9869%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,568,273 samples, 0.15%)</title><rect x="62.7369%" y="1845" width="0.1524%" height="15" fill="rgb(217,149,8)" fg:x="1057534597" fg:w="2568273"/><text x="62.9869%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,568,273 samples, 0.15%)</title><rect x="62.7369%" y="1829" width="0.1524%" height="15" fill="rgb(209,183,11)" fg:x="1057534597" fg:w="2568273"/><text x="62.9869%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,568,273 samples, 0.15%)</title><rect x="62.7369%" y="1813" width="0.1524%" height="15" fill="rgb(208,55,20)" fg:x="1057534597" fg:w="2568273"/><text x="62.9869%" y="1823.50"></text></g><g><title>cfree (2,568,273 samples, 0.15%)</title><rect x="62.7369%" y="1797" width="0.1524%" height="15" fill="rgb(218,39,14)" fg:x="1057534597" fg:w="2568273"/><text x="62.9869%" y="1807.50"></text></g><g><title>[libc.so.6] (2,568,273 samples, 0.15%)</title><rect x="62.7369%" y="1781" width="0.1524%" height="15" fill="rgb(216,169,33)" fg:x="1057534597" fg:w="2568273"/><text x="62.9869%" y="1791.50"></text></g><g><title>cfree (4,335,611 samples, 0.26%)</title><rect x="62.8892%" y="1797" width="0.2572%" height="15" fill="rgb(233,80,24)" fg:x="1060102870" fg:w="4335611"/><text x="63.1392%" y="1807.50"></text></g><g><title>[libc.so.6] (4,335,611 samples, 0.26%)</title><rect x="62.8892%" y="1781" width="0.2572%" height="15" fill="rgb(213,179,31)" fg:x="1060102870" fg:w="4335611"/><text x="63.1392%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (6,630,873 samples, 0.39%)</title><rect x="62.8892%" y="1925" width="0.3934%" height="15" fill="rgb(209,19,5)" fg:x="1060102870" fg:w="6630873"/><text x="63.1392%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6,630,873 samples, 0.39%)</title><rect x="62.8892%" y="1909" width="0.3934%" height="15" fill="rgb(219,18,35)" fg:x="1060102870" fg:w="6630873"/><text x="63.1392%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6,630,873 samples, 0.39%)</title><rect x="62.8892%" y="1893" width="0.3934%" height="15" fill="rgb(209,169,16)" fg:x="1060102870" fg:w="6630873"/><text x="63.1392%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6,630,873 samples, 0.39%)</title><rect x="62.8892%" y="1877" width="0.3934%" height="15" fill="rgb(245,90,51)" fg:x="1060102870" fg:w="6630873"/><text x="63.1392%" y="1887.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,630,873 samples, 0.39%)</title><rect x="62.8892%" y="1861" width="0.3934%" height="15" fill="rgb(220,99,45)" fg:x="1060102870" fg:w="6630873"/><text x="63.1392%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,630,873 samples, 0.39%)</title><rect x="62.8892%" y="1845" width="0.3934%" height="15" fill="rgb(249,89,25)" fg:x="1060102870" fg:w="6630873"/><text x="63.1392%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,630,873 samples, 0.39%)</title><rect x="62.8892%" y="1829" width="0.3934%" height="15" fill="rgb(239,193,0)" fg:x="1060102870" fg:w="6630873"/><text x="63.1392%" y="1839.50"></text></g><g><title>alloc::alloc::dealloc (6,630,873 samples, 0.39%)</title><rect x="62.8892%" y="1813" width="0.3934%" height="15" fill="rgb(231,126,1)" fg:x="1060102870" fg:w="6630873"/><text x="63.1392%" y="1823.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_from_scratch (2,295,262 samples, 0.14%)</title><rect x="63.1464%" y="1797" width="0.1362%" height="15" fill="rgb(243,166,3)" fg:x="1064438481" fg:w="2295262"/><text x="63.3964%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,568,955 samples, 0.15%)</title><rect x="63.2826%" y="1925" width="0.1524%" height="15" fill="rgb(223,22,34)" fg:x="1066733743" fg:w="2568955"/><text x="63.5326%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,568,955 samples, 0.15%)</title><rect x="63.2826%" y="1909" width="0.1524%" height="15" fill="rgb(251,52,51)" fg:x="1066733743" fg:w="2568955"/><text x="63.5326%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,568,955 samples, 0.15%)</title><rect x="63.2826%" y="1893" width="0.1524%" height="15" fill="rgb(221,165,28)" fg:x="1066733743" fg:w="2568955"/><text x="63.5326%" y="1903.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,568,955 samples, 0.15%)</title><rect x="63.2826%" y="1877" width="0.1524%" height="15" fill="rgb(218,121,47)" fg:x="1066733743" fg:w="2568955"/><text x="63.5326%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,568,955 samples, 0.15%)</title><rect x="63.2826%" y="1861" width="0.1524%" height="15" fill="rgb(209,120,9)" fg:x="1066733743" fg:w="2568955"/><text x="63.5326%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,568,955 samples, 0.15%)</title><rect x="63.2826%" y="1845" width="0.1524%" height="15" fill="rgb(236,68,12)" fg:x="1066733743" fg:w="2568955"/><text x="63.5326%" y="1855.50"></text></g><g><title>alloc::alloc::dealloc (2,568,955 samples, 0.15%)</title><rect x="63.2826%" y="1829" width="0.1524%" height="15" fill="rgb(225,194,26)" fg:x="1066733743" fg:w="2568955"/><text x="63.5326%" y="1839.50"></text></g><g><title>cfree (2,568,955 samples, 0.15%)</title><rect x="63.2826%" y="1813" width="0.1524%" height="15" fill="rgb(231,84,39)" fg:x="1066733743" fg:w="2568955"/><text x="63.5326%" y="1823.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,688,790 samples, 0.16%)</title><rect x="63.4350%" y="1829" width="0.1595%" height="15" fill="rgb(210,11,45)" fg:x="1069302698" fg:w="2688790"/><text x="63.6850%" y="1839.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,688,790 samples, 0.16%)</title><rect x="63.4350%" y="1813" width="0.1595%" height="15" fill="rgb(224,54,52)" fg:x="1069302698" fg:w="2688790"/><text x="63.6850%" y="1823.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,688,790 samples, 0.16%)</title><rect x="63.4350%" y="1797" width="0.1595%" height="15" fill="rgb(238,102,14)" fg:x="1069302698" fg:w="2688790"/><text x="63.6850%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,688,790 samples, 0.16%)</title><rect x="63.4350%" y="1781" width="0.1595%" height="15" fill="rgb(243,160,52)" fg:x="1069302698" fg:w="2688790"/><text x="63.6850%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,688,790 samples, 0.16%)</title><rect x="63.4350%" y="1765" width="0.1595%" height="15" fill="rgb(216,114,19)" fg:x="1069302698" fg:w="2688790"/><text x="63.6850%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,688,790 samples, 0.16%)</title><rect x="63.4350%" y="1749" width="0.1595%" height="15" fill="rgb(244,166,37)" fg:x="1069302698" fg:w="2688790"/><text x="63.6850%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,688,790 samples, 0.16%)</title><rect x="63.4350%" y="1733" width="0.1595%" height="15" fill="rgb(246,29,44)" fg:x="1069302698" fg:w="2688790"/><text x="63.6850%" y="1743.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,688,790 samples, 0.16%)</title><rect x="63.4350%" y="1717" width="0.1595%" height="15" fill="rgb(215,56,53)" fg:x="1069302698" fg:w="2688790"/><text x="63.6850%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,688,790 samples, 0.16%)</title><rect x="63.4350%" y="1701" width="0.1595%" height="15" fill="rgb(217,60,2)" fg:x="1069302698" fg:w="2688790"/><text x="63.6850%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,688,790 samples, 0.16%)</title><rect x="63.4350%" y="1685" width="0.1595%" height="15" fill="rgb(207,26,24)" fg:x="1069302698" fg:w="2688790"/><text x="63.6850%" y="1695.50"></text></g><g><title>alloc::alloc::dealloc (2,688,790 samples, 0.16%)</title><rect x="63.4350%" y="1669" width="0.1595%" height="15" fill="rgb(252,210,15)" fg:x="1069302698" fg:w="2688790"/><text x="63.6850%" y="1679.50"></text></g><g><title>__rdl_dealloc (2,688,790 samples, 0.16%)</title><rect x="63.4350%" y="1653" width="0.1595%" height="15" fill="rgb(253,209,26)" fg:x="1069302698" fg:w="2688790"/><text x="63.6850%" y="1663.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,688,790 samples, 0.16%)</title><rect x="63.4350%" y="1637" width="0.1595%" height="15" fill="rgb(238,170,14)" fg:x="1069302698" fg:w="2688790"/><text x="63.6850%" y="1647.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,285,162 samples, 0.31%)</title><rect x="63.4350%" y="1861" width="0.3135%" height="15" fill="rgb(216,178,15)" fg:x="1069302698" fg:w="5285162"/><text x="63.6850%" y="1871.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (5,285,162 samples, 0.31%)</title><rect x="63.4350%" y="1845" width="0.3135%" height="15" fill="rgb(250,197,2)" fg:x="1069302698" fg:w="5285162"/><text x="63.6850%" y="1855.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (2,596,372 samples, 0.15%)</title><rect x="63.5945%" y="1829" width="0.1540%" height="15" fill="rgb(212,70,42)" fg:x="1071991488" fg:w="2596372"/><text x="63.8445%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (30,128,773 samples, 1.79%)</title><rect x="62.1196%" y="1989" width="1.7873%" height="15" fill="rgb(227,213,9)" fg:x="1047129161" fg:w="30128773"/><text x="62.3696%" y="1999.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30,128,773 samples, 1.79%)</title><rect x="62.1196%" y="1973" width="1.7873%" height="15" fill="rgb(245,99,25)" fg:x="1047129161" fg:w="30128773"/><text x="62.3696%" y="1983.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (30,128,773 samples, 1.79%)</title><rect x="62.1196%" y="1957" width="1.7873%" height="15" fill="rgb(250,82,29)" fg:x="1047129161" fg:w="30128773"/><text x="62.3696%" y="1967.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (30,128,773 samples, 1.79%)</title><rect x="62.1196%" y="1941" width="1.7873%" height="15" fill="rgb(241,226,54)" fg:x="1047129161" fg:w="30128773"/><text x="62.3696%" y="1951.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (7,955,236 samples, 0.47%)</title><rect x="63.4350%" y="1925" width="0.4719%" height="15" fill="rgb(221,99,41)" fg:x="1069302698" fg:w="7955236"/><text x="63.6850%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (7,955,236 samples, 0.47%)</title><rect x="63.4350%" y="1909" width="0.4719%" height="15" fill="rgb(213,90,21)" fg:x="1069302698" fg:w="7955236"/><text x="63.6850%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (7,955,236 samples, 0.47%)</title><rect x="63.4350%" y="1893" width="0.4719%" height="15" fill="rgb(205,208,24)" fg:x="1069302698" fg:w="7955236"/><text x="63.6850%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (7,955,236 samples, 0.47%)</title><rect x="63.4350%" y="1877" width="0.4719%" height="15" fill="rgb(246,31,12)" fg:x="1069302698" fg:w="7955236"/><text x="63.6850%" y="1887.50"></text></g><g><title>cfree (2,670,074 samples, 0.16%)</title><rect x="63.7485%" y="1861" width="0.1584%" height="15" fill="rgb(213,154,6)" fg:x="1074587860" fg:w="2670074"/><text x="63.9985%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,530,872 samples, 0.15%)</title><rect x="63.9069%" y="1989" width="0.1501%" height="15" fill="rgb(222,163,29)" fg:x="1077257934" fg:w="2530872"/><text x="64.1569%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,530,872 samples, 0.15%)</title><rect x="63.9069%" y="1973" width="0.1501%" height="15" fill="rgb(227,201,8)" fg:x="1077257934" fg:w="2530872"/><text x="64.1569%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,530,872 samples, 0.15%)</title><rect x="63.9069%" y="1957" width="0.1501%" height="15" fill="rgb(233,9,32)" fg:x="1077257934" fg:w="2530872"/><text x="64.1569%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,530,872 samples, 0.15%)</title><rect x="63.9069%" y="1941" width="0.1501%" height="15" fill="rgb(217,54,24)" fg:x="1077257934" fg:w="2530872"/><text x="64.1569%" y="1951.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,530,872 samples, 0.15%)</title><rect x="63.9069%" y="1925" width="0.1501%" height="15" fill="rgb(235,192,0)" fg:x="1077257934" fg:w="2530872"/><text x="64.1569%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,530,872 samples, 0.15%)</title><rect x="63.9069%" y="1909" width="0.1501%" height="15" fill="rgb(235,45,9)" fg:x="1077257934" fg:w="2530872"/><text x="64.1569%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,530,872 samples, 0.15%)</title><rect x="63.9069%" y="1893" width="0.1501%" height="15" fill="rgb(246,42,40)" fg:x="1077257934" fg:w="2530872"/><text x="64.1569%" y="1903.50"></text></g><g><title>alloc::alloc::dealloc (2,530,872 samples, 0.15%)</title><rect x="63.9069%" y="1877" width="0.1501%" height="15" fill="rgb(248,111,24)" fg:x="1077257934" fg:w="2530872"/><text x="64.1569%" y="1887.50"></text></g><g><title>__rdl_dealloc (2,530,872 samples, 0.15%)</title><rect x="63.9069%" y="1861" width="0.1501%" height="15" fill="rgb(249,65,22)" fg:x="1077257934" fg:w="2530872"/><text x="64.1569%" y="1871.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,530,872 samples, 0.15%)</title><rect x="63.9069%" y="1845" width="0.1501%" height="15" fill="rgb(238,111,51)" fg:x="1077257934" fg:w="2530872"/><text x="64.1569%" y="1855.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,784,296 samples, 0.64%)</title><rect x="64.0571%" y="1925" width="0.6398%" height="15" fill="rgb(250,118,22)" fg:x="1079788806" fg:w="10784296"/><text x="64.3071%" y="1935.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (10,784,296 samples, 0.64%)</title><rect x="64.0571%" y="1909" width="0.6398%" height="15" fill="rgb(234,84,26)" fg:x="1079788806" fg:w="10784296"/><text x="64.3071%" y="1919.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (8,022,913 samples, 0.48%)</title><rect x="64.2209%" y="1893" width="0.4759%" height="15" fill="rgb(243,172,12)" fg:x="1082550189" fg:w="8022913"/><text x="64.4709%" y="1903.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (8,022,913 samples, 0.48%)</title><rect x="64.2209%" y="1877" width="0.4759%" height="15" fill="rgb(236,150,49)" fg:x="1082550189" fg:w="8022913"/><text x="64.4709%" y="1887.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (8,022,913 samples, 0.48%)</title><rect x="64.2209%" y="1861" width="0.4759%" height="15" fill="rgb(225,197,26)" fg:x="1082550189" fg:w="8022913"/><text x="64.4709%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (8,022,913 samples, 0.48%)</title><rect x="64.2209%" y="1845" width="0.4759%" height="15" fill="rgb(214,17,42)" fg:x="1082550189" fg:w="8022913"/><text x="64.4709%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (8,022,913 samples, 0.48%)</title><rect x="64.2209%" y="1829" width="0.4759%" height="15" fill="rgb(224,165,40)" fg:x="1082550189" fg:w="8022913"/><text x="64.4709%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8,022,913 samples, 0.48%)</title><rect x="64.2209%" y="1813" width="0.4759%" height="15" fill="rgb(246,100,4)" fg:x="1082550189" fg:w="8022913"/><text x="64.4709%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8,022,913 samples, 0.48%)</title><rect x="64.2209%" y="1797" width="0.4759%" height="15" fill="rgb(222,103,0)" fg:x="1082550189" fg:w="8022913"/><text x="64.4709%" y="1807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,022,913 samples, 0.48%)</title><rect x="64.2209%" y="1781" width="0.4759%" height="15" fill="rgb(227,189,26)" fg:x="1082550189" fg:w="8022913"/><text x="64.4709%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (8,022,913 samples, 0.48%)</title><rect x="64.2209%" y="1765" width="0.4759%" height="15" fill="rgb(214,202,17)" fg:x="1082550189" fg:w="8022913"/><text x="64.4709%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,022,913 samples, 0.48%)</title><rect x="64.2209%" y="1749" width="0.4759%" height="15" fill="rgb(229,111,3)" fg:x="1082550189" fg:w="8022913"/><text x="64.4709%" y="1759.50"></text></g><g><title>alloc::alloc::dealloc (8,022,913 samples, 0.48%)</title><rect x="64.2209%" y="1733" width="0.4759%" height="15" fill="rgb(229,172,15)" fg:x="1082550189" fg:w="8022913"/><text x="64.4709%" y="1743.50"></text></g><g><title>cfree (5,724,302 samples, 0.34%)</title><rect x="64.3572%" y="1717" width="0.3396%" height="15" fill="rgb(230,224,35)" fg:x="1084848800" fg:w="5724302"/><text x="64.6072%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (45,859,481 samples, 2.72%)</title><rect x="62.1196%" y="2053" width="2.7206%" height="15" fill="rgb(251,141,6)" fg:x="1047129161" fg:w="45859481"/><text x="62.3696%" y="2063.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45,859,481 samples, 2.72%)</title><rect x="62.1196%" y="2037" width="2.7206%" height="15" fill="rgb(225,208,6)" fg:x="1047129161" fg:w="45859481"/><text x="62.3696%" y="2047.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (45,859,481 samples, 2.72%)</title><rect x="62.1196%" y="2021" width="2.7206%" height="15" fill="rgb(246,181,16)" fg:x="1047129161" fg:w="45859481"/><text x="62.3696%" y="2031.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (45,859,481 samples, 2.72%)</title><rect x="62.1196%" y="2005" width="2.7206%" height="15" fill="rgb(227,129,36)" fg:x="1047129161" fg:w="45859481"/><text x="62.3696%" y="2015.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (13,199,836 samples, 0.78%)</title><rect x="64.0571%" y="1989" width="0.7831%" height="15" fill="rgb(248,117,24)" fg:x="1079788806" fg:w="13199836"/><text x="64.3071%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (13,199,836 samples, 0.78%)</title><rect x="64.0571%" y="1973" width="0.7831%" height="15" fill="rgb(214,185,35)" fg:x="1079788806" fg:w="13199836"/><text x="64.3071%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (13,199,836 samples, 0.78%)</title><rect x="64.0571%" y="1957" width="0.7831%" height="15" fill="rgb(236,150,34)" fg:x="1079788806" fg:w="13199836"/><text x="64.3071%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (13,199,836 samples, 0.78%)</title><rect x="64.0571%" y="1941" width="0.7831%" height="15" fill="rgb(243,228,27)" fg:x="1079788806" fg:w="13199836"/><text x="64.3071%" y="1951.50"></text></g><g><title>cfree (2,415,540 samples, 0.14%)</title><rect x="64.6968%" y="1925" width="0.1433%" height="15" fill="rgb(245,77,44)" fg:x="1090573102" fg:w="2415540"/><text x="64.9468%" y="1935.50"></text></g><g><title>[libc.so.6] (2,415,540 samples, 0.14%)</title><rect x="64.6968%" y="1909" width="0.1433%" height="15" fill="rgb(235,214,42)" fg:x="1090573102" fg:w="2415540"/><text x="64.9468%" y="1919.50"></text></g><g><title>[libc.so.6] (2,415,540 samples, 0.14%)</title><rect x="64.6968%" y="1893" width="0.1433%" height="15" fill="rgb(221,74,3)" fg:x="1090573102" fg:w="2415540"/><text x="64.9468%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,901,336 samples, 0.17%)</title><rect x="64.8401%" y="2053" width="0.1721%" height="15" fill="rgb(206,121,29)" fg:x="1092988642" fg:w="2901336"/><text x="65.0901%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,901,336 samples, 0.17%)</title><rect x="64.8401%" y="2037" width="0.1721%" height="15" fill="rgb(249,131,53)" fg:x="1092988642" fg:w="2901336"/><text x="65.0901%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,901,336 samples, 0.17%)</title><rect x="64.8401%" y="2021" width="0.1721%" height="15" fill="rgb(236,170,29)" fg:x="1092988642" fg:w="2901336"/><text x="65.0901%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,901,336 samples, 0.17%)</title><rect x="64.8401%" y="2005" width="0.1721%" height="15" fill="rgb(247,96,15)" fg:x="1092988642" fg:w="2901336"/><text x="65.0901%" y="2015.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,901,336 samples, 0.17%)</title><rect x="64.8401%" y="1989" width="0.1721%" height="15" fill="rgb(211,210,7)" fg:x="1092988642" fg:w="2901336"/><text x="65.0901%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,901,336 samples, 0.17%)</title><rect x="64.8401%" y="1973" width="0.1721%" height="15" fill="rgb(240,88,50)" fg:x="1092988642" fg:w="2901336"/><text x="65.0901%" y="1983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,901,336 samples, 0.17%)</title><rect x="64.8401%" y="1957" width="0.1721%" height="15" fill="rgb(209,229,26)" fg:x="1092988642" fg:w="2901336"/><text x="65.0901%" y="1967.50"></text></g><g><title>alloc::alloc::dealloc (2,901,336 samples, 0.17%)</title><rect x="64.8401%" y="1941" width="0.1721%" height="15" fill="rgb(210,68,23)" fg:x="1092988642" fg:w="2901336"/><text x="65.0901%" y="1951.50"></text></g><g><title>cfree (2,901,336 samples, 0.17%)</title><rect x="64.8401%" y="1925" width="0.1721%" height="15" fill="rgb(229,180,13)" fg:x="1092988642" fg:w="2901336"/><text x="65.0901%" y="1935.50"></text></g><g><title>[libc.so.6] (2,901,336 samples, 0.17%)</title><rect x="64.8401%" y="1909" width="0.1721%" height="15" fill="rgb(236,53,44)" fg:x="1092988642" fg:w="2901336"/><text x="65.0901%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,422,066 samples, 0.14%)</title><rect x="65.0122%" y="2053" width="0.1437%" height="15" fill="rgb(244,214,29)" fg:x="1095889978" fg:w="2422066"/><text x="65.2622%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,422,066 samples, 0.14%)</title><rect x="65.0122%" y="2037" width="0.1437%" height="15" fill="rgb(220,75,29)" fg:x="1095889978" fg:w="2422066"/><text x="65.2622%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,422,066 samples, 0.14%)</title><rect x="65.0122%" y="2021" width="0.1437%" height="15" fill="rgb(214,183,37)" fg:x="1095889978" fg:w="2422066"/><text x="65.2622%" y="2031.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,422,066 samples, 0.14%)</title><rect x="65.0122%" y="2005" width="0.1437%" height="15" fill="rgb(239,117,29)" fg:x="1095889978" fg:w="2422066"/><text x="65.2622%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,422,066 samples, 0.14%)</title><rect x="65.0122%" y="1989" width="0.1437%" height="15" fill="rgb(237,171,35)" fg:x="1095889978" fg:w="2422066"/><text x="65.2622%" y="1999.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,422,066 samples, 0.14%)</title><rect x="65.0122%" y="1973" width="0.1437%" height="15" fill="rgb(229,178,53)" fg:x="1095889978" fg:w="2422066"/><text x="65.2622%" y="1983.50"></text></g><g><title>alloc::alloc::dealloc (2,422,066 samples, 0.14%)</title><rect x="65.0122%" y="1957" width="0.1437%" height="15" fill="rgb(210,102,19)" fg:x="1095889978" fg:w="2422066"/><text x="65.2622%" y="1967.50"></text></g><g><title>cfree (2,422,066 samples, 0.14%)</title><rect x="65.0122%" y="1941" width="0.1437%" height="15" fill="rgb(235,127,22)" fg:x="1095889978" fg:w="2422066"/><text x="65.2622%" y="1951.50"></text></g><g><title>[libc.so.6] (2,422,066 samples, 0.14%)</title><rect x="65.0122%" y="1925" width="0.1437%" height="15" fill="rgb(244,31,31)" fg:x="1095889978" fg:w="2422066"/><text x="65.2622%" y="1935.50"></text></g><g><title>__rdl_dealloc (2,622,275 samples, 0.16%)</title><rect x="65.4751%" y="1781" width="0.1556%" height="15" fill="rgb(231,43,21)" fg:x="1103692936" fg:w="2622275"/><text x="65.7251%" y="1791.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,622,275 samples, 0.16%)</title><rect x="65.4751%" y="1765" width="0.1556%" height="15" fill="rgb(217,131,35)" fg:x="1103692936" fg:w="2622275"/><text x="65.7251%" y="1775.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,937,970 samples, 1.12%)</title><rect x="65.1559%" y="1989" width="1.1235%" height="15" fill="rgb(221,149,4)" fg:x="1098312044" fg:w="18937970"/><text x="65.4059%" y="1999.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (18,937,970 samples, 1.12%)</title><rect x="65.1559%" y="1973" width="1.1235%" height="15" fill="rgb(232,170,28)" fg:x="1098312044" fg:w="18937970"/><text x="65.4059%" y="1983.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (18,937,970 samples, 1.12%)</title><rect x="65.1559%" y="1957" width="1.1235%" height="15" fill="rgb(238,56,10)" fg:x="1098312044" fg:w="18937970"/><text x="65.4059%" y="1967.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (16,368,310 samples, 0.97%)</title><rect x="65.3084%" y="1941" width="0.9710%" height="15" fill="rgb(235,196,14)" fg:x="1100881704" fg:w="16368310"/><text x="65.5584%" y="1951.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (16,368,310 samples, 0.97%)</title><rect x="65.3084%" y="1925" width="0.9710%" height="15" fill="rgb(216,45,48)" fg:x="1100881704" fg:w="16368310"/><text x="65.5584%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (16,368,310 samples, 0.97%)</title><rect x="65.3084%" y="1909" width="0.9710%" height="15" fill="rgb(238,213,17)" fg:x="1100881704" fg:w="16368310"/><text x="65.5584%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (16,368,310 samples, 0.97%)</title><rect x="65.3084%" y="1893" width="0.9710%" height="15" fill="rgb(212,13,2)" fg:x="1100881704" fg:w="16368310"/><text x="65.5584%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (16,368,310 samples, 0.97%)</title><rect x="65.3084%" y="1877" width="0.9710%" height="15" fill="rgb(240,114,20)" fg:x="1100881704" fg:w="16368310"/><text x="65.5584%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (16,368,310 samples, 0.97%)</title><rect x="65.3084%" y="1861" width="0.9710%" height="15" fill="rgb(228,41,40)" fg:x="1100881704" fg:w="16368310"/><text x="65.5584%" y="1871.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,368,310 samples, 0.97%)</title><rect x="65.3084%" y="1845" width="0.9710%" height="15" fill="rgb(244,132,35)" fg:x="1100881704" fg:w="16368310"/><text x="65.5584%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (16,368,310 samples, 0.97%)</title><rect x="65.3084%" y="1829" width="0.9710%" height="15" fill="rgb(253,189,4)" fg:x="1100881704" fg:w="16368310"/><text x="65.5584%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16,368,310 samples, 0.97%)</title><rect x="65.3084%" y="1813" width="0.9710%" height="15" fill="rgb(224,37,19)" fg:x="1100881704" fg:w="16368310"/><text x="65.5584%" y="1823.50"></text></g><g><title>alloc::alloc::dealloc (16,368,310 samples, 0.97%)</title><rect x="65.3084%" y="1797" width="0.9710%" height="15" fill="rgb(235,223,18)" fg:x="1100881704" fg:w="16368310"/><text x="65.5584%" y="1807.50"></text></g><g><title>cfree (10,934,803 samples, 0.65%)</title><rect x="65.6307%" y="1781" width="0.6487%" height="15" fill="rgb(235,163,25)" fg:x="1106315211" fg:w="10934803"/><text x="65.8807%" y="1791.50"></text></g><g><title>[libc.so.6] (5,257,639 samples, 0.31%)</title><rect x="65.9675%" y="1765" width="0.3119%" height="15" fill="rgb(217,145,28)" fg:x="1111992375" fg:w="5257639"/><text x="66.2175%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (81,109,413 samples, 4.81%)</title><rect x="61.6350%" y="2117" width="4.8117%" height="15" fill="rgb(223,223,32)" fg:x="1038960398" fg:w="81109413"/><text x="61.8850%" y="2127.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81,109,413 samples, 4.81%)</title><rect x="61.6350%" y="2101" width="4.8117%" height="15" fill="rgb(227,189,39)" fg:x="1038960398" fg:w="81109413"/><text x="61.8850%" y="2111.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (81,109,413 samples, 4.81%)</title><rect x="61.6350%" y="2085" width="4.8117%" height="15" fill="rgb(248,10,22)" fg:x="1038960398" fg:w="81109413"/><text x="61.8850%" y="2095.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (81,109,413 samples, 4.81%)</title><rect x="61.6350%" y="2069" width="4.8117%" height="15" fill="rgb(248,46,39)" fg:x="1038960398" fg:w="81109413"/><text x="61.8850%" y="2079.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (21,757,767 samples, 1.29%)</title><rect x="65.1559%" y="2053" width="1.2908%" height="15" fill="rgb(248,113,48)" fg:x="1098312044" fg:w="21757767"/><text x="65.4059%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (21,757,767 samples, 1.29%)</title><rect x="65.1559%" y="2037" width="1.2908%" height="15" fill="rgb(245,16,25)" fg:x="1098312044" fg:w="21757767"/><text x="65.4059%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (21,757,767 samples, 1.29%)</title><rect x="65.1559%" y="2021" width="1.2908%" height="15" fill="rgb(249,152,16)" fg:x="1098312044" fg:w="21757767"/><text x="65.4059%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (21,757,767 samples, 1.29%)</title><rect x="65.1559%" y="2005" width="1.2908%" height="15" fill="rgb(250,16,1)" fg:x="1098312044" fg:w="21757767"/><text x="65.4059%" y="2015.50"></text></g><g><title>cfree (2,819,797 samples, 0.17%)</title><rect x="66.2794%" y="1989" width="0.1673%" height="15" fill="rgb(249,138,3)" fg:x="1117250014" fg:w="2819797"/><text x="66.5294%" y="1999.50"></text></g><g><title>[libc.so.6] (2,819,797 samples, 0.17%)</title><rect x="66.2794%" y="1973" width="0.1673%" height="15" fill="rgb(227,71,41)" fg:x="1117250014" fg:w="2819797"/><text x="66.5294%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,932,237 samples, 0.17%)</title><rect x="66.4467%" y="2117" width="0.1740%" height="15" fill="rgb(209,184,23)" fg:x="1120069811" fg:w="2932237"/><text x="66.6967%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,932,237 samples, 0.17%)</title><rect x="66.4467%" y="2101" width="0.1740%" height="15" fill="rgb(223,215,31)" fg:x="1120069811" fg:w="2932237"/><text x="66.6967%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,932,237 samples, 0.17%)</title><rect x="66.4467%" y="2085" width="0.1740%" height="15" fill="rgb(210,146,28)" fg:x="1120069811" fg:w="2932237"/><text x="66.6967%" y="2095.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,932,237 samples, 0.17%)</title><rect x="66.4467%" y="2069" width="0.1740%" height="15" fill="rgb(209,183,41)" fg:x="1120069811" fg:w="2932237"/><text x="66.6967%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,932,237 samples, 0.17%)</title><rect x="66.4467%" y="2053" width="0.1740%" height="15" fill="rgb(209,224,45)" fg:x="1120069811" fg:w="2932237"/><text x="66.6967%" y="2063.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,932,237 samples, 0.17%)</title><rect x="66.4467%" y="2037" width="0.1740%" height="15" fill="rgb(224,209,51)" fg:x="1120069811" fg:w="2932237"/><text x="66.6967%" y="2047.50"></text></g><g><title>alloc::alloc::dealloc (2,932,237 samples, 0.17%)</title><rect x="66.4467%" y="2021" width="0.1740%" height="15" fill="rgb(223,17,39)" fg:x="1120069811" fg:w="2932237"/><text x="66.6967%" y="2031.50"></text></g><g><title>cfree (2,932,237 samples, 0.17%)</title><rect x="66.4467%" y="2005" width="0.1740%" height="15" fill="rgb(234,204,37)" fg:x="1120069811" fg:w="2932237"/><text x="66.6967%" y="2015.50"></text></g><g><title>[libc.so.6] (2,932,237 samples, 0.17%)</title><rect x="66.4467%" y="1989" width="0.1740%" height="15" fill="rgb(236,120,5)" fg:x="1120069811" fg:w="2932237"/><text x="66.6967%" y="1999.50"></text></g><g><title>__rdl_dealloc (2,336,629 samples, 0.14%)</title><rect x="66.9147%" y="1845" width="0.1386%" height="15" fill="rgb(248,97,27)" fg:x="1127958841" fg:w="2336629"/><text x="67.1647%" y="1855.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,336,629 samples, 0.14%)</title><rect x="66.9147%" y="1829" width="0.1386%" height="15" fill="rgb(240,66,17)" fg:x="1127958841" fg:w="2336629"/><text x="67.1647%" y="1839.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (12,474,893 samples, 0.74%)</title><rect x="66.6206%" y="2021" width="0.7401%" height="15" fill="rgb(210,79,3)" fg:x="1123002048" fg:w="12474893"/><text x="66.8706%" y="2031.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (12,474,893 samples, 0.74%)</title><rect x="66.6206%" y="2005" width="0.7401%" height="15" fill="rgb(214,176,27)" fg:x="1123002048" fg:w="12474893"/><text x="66.8706%" y="2015.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (12,474,893 samples, 0.74%)</title><rect x="66.6206%" y="1989" width="0.7401%" height="15" fill="rgb(235,185,3)" fg:x="1123002048" fg:w="12474893"/><text x="66.8706%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (12,474,893 samples, 0.74%)</title><rect x="66.6206%" y="1973" width="0.7401%" height="15" fill="rgb(227,24,12)" fg:x="1123002048" fg:w="12474893"/><text x="66.8706%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12,474,893 samples, 0.74%)</title><rect x="66.6206%" y="1957" width="0.7401%" height="15" fill="rgb(252,169,48)" fg:x="1123002048" fg:w="12474893"/><text x="66.8706%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12,474,893 samples, 0.74%)</title><rect x="66.6206%" y="1941" width="0.7401%" height="15" fill="rgb(212,65,1)" fg:x="1123002048" fg:w="12474893"/><text x="66.8706%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12,474,893 samples, 0.74%)</title><rect x="66.6206%" y="1925" width="0.7401%" height="15" fill="rgb(242,39,24)" fg:x="1123002048" fg:w="12474893"/><text x="66.8706%" y="1935.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,474,893 samples, 0.74%)</title><rect x="66.6206%" y="1909" width="0.7401%" height="15" fill="rgb(249,32,23)" fg:x="1123002048" fg:w="12474893"/><text x="66.8706%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10,032,637 samples, 0.60%)</title><rect x="66.7655%" y="1893" width="0.5952%" height="15" fill="rgb(251,195,23)" fg:x="1125444304" fg:w="10032637"/><text x="67.0155%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,032,637 samples, 0.60%)</title><rect x="66.7655%" y="1877" width="0.5952%" height="15" fill="rgb(236,174,8)" fg:x="1125444304" fg:w="10032637"/><text x="67.0155%" y="1887.50"></text></g><g><title>alloc::alloc::dealloc (10,032,637 samples, 0.60%)</title><rect x="66.7655%" y="1861" width="0.5952%" height="15" fill="rgb(220,197,8)" fg:x="1125444304" fg:w="10032637"/><text x="67.0155%" y="1871.50"></text></g><g><title>cfree (5,181,471 samples, 0.31%)</title><rect x="67.0533%" y="1845" width="0.3074%" height="15" fill="rgb(240,108,37)" fg:x="1130295470" fg:w="5181471"/><text x="67.3033%" y="1855.50"></text></g><g><title>[libc.so.6] (5,181,471 samples, 0.31%)</title><rect x="67.0533%" y="1829" width="0.3074%" height="15" fill="rgb(232,176,24)" fg:x="1130295470" fg:w="5181471"/><text x="67.3033%" y="1839.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,748,717 samples, 0.87%)</title><rect x="66.6206%" y="2053" width="0.8749%" height="15" fill="rgb(243,35,29)" fg:x="1123002048" fg:w="14748717"/><text x="66.8706%" y="2063.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (14,748,717 samples, 0.87%)</title><rect x="66.6206%" y="2037" width="0.8749%" height="15" fill="rgb(210,37,18)" fg:x="1123002048" fg:w="14748717"/><text x="66.8706%" y="2047.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2,273,824 samples, 0.13%)</title><rect x="67.3607%" y="2021" width="0.1349%" height="15" fill="rgb(224,184,40)" fg:x="1135476941" fg:w="2273824"/><text x="67.6107%" y="2031.50"></text></g><g><title>hashbrown::raw::RawTableInner::allocation_info (2,273,824 samples, 0.13%)</title><rect x="67.3607%" y="2005" width="0.1349%" height="15" fill="rgb(236,39,29)" fg:x="1135476941" fg:w="2273824"/><text x="67.6107%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (101,709,298 samples, 6.03%)</title><rect x="61.6350%" y="2165" width="6.0338%" height="15" fill="rgb(232,48,39)" fg:x="1038960398" fg:w="101709298"/><text x="61.8850%" y="2175.50">&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (101,709,298 samples, 6.03%)</title><rect x="61.6350%" y="2149" width="6.0338%" height="15" fill="rgb(236,34,42)" fg:x="1038960398" fg:w="101709298"/><text x="61.8850%" y="2159.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (101,709,298 samples, 6.03%)</title><rect x="61.6350%" y="2133" width="6.0338%" height="15" fill="rgb(243,106,37)" fg:x="1038960398" fg:w="101709298"/><text x="61.8850%" y="2143.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (17,667,648 samples, 1.05%)</title><rect x="66.6206%" y="2117" width="1.0481%" height="15" fill="rgb(218,96,6)" fg:x="1123002048" fg:w="17667648"/><text x="66.8706%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (17,667,648 samples, 1.05%)</title><rect x="66.6206%" y="2101" width="1.0481%" height="15" fill="rgb(235,130,12)" fg:x="1123002048" fg:w="17667648"/><text x="66.8706%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (17,667,648 samples, 1.05%)</title><rect x="66.6206%" y="2085" width="1.0481%" height="15" fill="rgb(231,95,0)" fg:x="1123002048" fg:w="17667648"/><text x="66.8706%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (17,667,648 samples, 1.05%)</title><rect x="66.6206%" y="2069" width="1.0481%" height="15" fill="rgb(228,12,23)" fg:x="1123002048" fg:w="17667648"/><text x="66.8706%" y="2079.50"></text></g><g><title>cfree (2,918,931 samples, 0.17%)</title><rect x="67.4956%" y="2053" width="0.1732%" height="15" fill="rgb(216,12,1)" fg:x="1137750765" fg:w="2918931"/><text x="67.7456%" y="2063.50"></text></g><g><title>[libc.so.6] (2,918,931 samples, 0.17%)</title><rect x="67.4956%" y="2037" width="0.1732%" height="15" fill="rgb(219,59,3)" fg:x="1137750765" fg:w="2918931"/><text x="67.7456%" y="2047.50"></text></g><g><title>cfree (2,596,541 samples, 0.15%)</title><rect x="67.6687%" y="2085" width="0.1540%" height="15" fill="rgb(215,208,46)" fg:x="1140669696" fg:w="2596541"/><text x="67.9187%" y="2095.50"></text></g><g><title>[libc.so.6] (2,596,541 samples, 0.15%)</title><rect x="67.6687%" y="2069" width="0.1540%" height="15" fill="rgb(254,224,29)" fg:x="1140669696" fg:w="2596541"/><text x="67.9187%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (107,252,227 samples, 6.36%)</title><rect x="61.6350%" y="2181" width="6.3626%" height="15" fill="rgb(232,14,29)" fg:x="1038960398" fg:w="107252227"/><text x="61.8850%" y="2191.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,542,929 samples, 0.33%)</title><rect x="67.6687%" y="2165" width="0.3288%" height="15" fill="rgb(208,45,52)" fg:x="1140669696" fg:w="5542929"/><text x="67.9187%" y="2175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,542,929 samples, 0.33%)</title><rect x="67.6687%" y="2149" width="0.3288%" height="15" fill="rgb(234,191,28)" fg:x="1140669696" fg:w="5542929"/><text x="67.9187%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,542,929 samples, 0.33%)</title><rect x="67.6687%" y="2133" width="0.3288%" height="15" fill="rgb(244,67,43)" fg:x="1140669696" fg:w="5542929"/><text x="67.9187%" y="2143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,542,929 samples, 0.33%)</title><rect x="67.6687%" y="2117" width="0.3288%" height="15" fill="rgb(236,189,24)" fg:x="1140669696" fg:w="5542929"/><text x="67.9187%" y="2127.50"></text></g><g><title>alloc::alloc::dealloc (5,542,929 samples, 0.33%)</title><rect x="67.6687%" y="2101" width="0.3288%" height="15" fill="rgb(239,214,33)" fg:x="1140669696" fg:w="5542929"/><text x="67.9187%" y="2111.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_from_scratch (2,946,388 samples, 0.17%)</title><rect x="67.8228%" y="2085" width="0.1748%" height="15" fill="rgb(226,176,41)" fg:x="1143266237" fg:w="2946388"/><text x="68.0728%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,138,905 samples, 0.13%)</title><rect x="67.9976%" y="2181" width="0.1269%" height="15" fill="rgb(248,47,8)" fg:x="1146212625" fg:w="2138905"/><text x="68.2476%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,138,905 samples, 0.13%)</title><rect x="67.9976%" y="2165" width="0.1269%" height="15" fill="rgb(218,81,44)" fg:x="1146212625" fg:w="2138905"/><text x="68.2476%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,138,905 samples, 0.13%)</title><rect x="67.9976%" y="2149" width="0.1269%" height="15" fill="rgb(213,98,6)" fg:x="1146212625" fg:w="2138905"/><text x="68.2476%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,138,905 samples, 0.13%)</title><rect x="67.9976%" y="2133" width="0.1269%" height="15" fill="rgb(222,85,22)" fg:x="1146212625" fg:w="2138905"/><text x="68.2476%" y="2143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,138,905 samples, 0.13%)</title><rect x="67.9976%" y="2117" width="0.1269%" height="15" fill="rgb(239,46,39)" fg:x="1146212625" fg:w="2138905"/><text x="68.2476%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,138,905 samples, 0.13%)</title><rect x="67.9976%" y="2101" width="0.1269%" height="15" fill="rgb(237,12,29)" fg:x="1146212625" fg:w="2138905"/><text x="68.2476%" y="2111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,138,905 samples, 0.13%)</title><rect x="67.9976%" y="2085" width="0.1269%" height="15" fill="rgb(214,77,8)" fg:x="1146212625" fg:w="2138905"/><text x="68.2476%" y="2095.50"></text></g><g><title>alloc::alloc::dealloc (2,138,905 samples, 0.13%)</title><rect x="67.9976%" y="2069" width="0.1269%" height="15" fill="rgb(217,168,37)" fg:x="1146212625" fg:w="2138905"/><text x="68.2476%" y="2079.50"></text></g><g><title>cfree (2,138,905 samples, 0.13%)</title><rect x="67.9976%" y="2053" width="0.1269%" height="15" fill="rgb(221,217,23)" fg:x="1146212625" fg:w="2138905"/><text x="68.2476%" y="2063.50"></text></g><g><title>[libc.so.6] (2,138,905 samples, 0.13%)</title><rect x="67.9976%" y="2037" width="0.1269%" height="15" fill="rgb(243,229,36)" fg:x="1146212625" fg:w="2138905"/><text x="68.2476%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,485,237 samples, 0.15%)</title><rect x="68.1244%" y="2181" width="0.1474%" height="15" fill="rgb(251,163,40)" fg:x="1148351530" fg:w="2485237"/><text x="68.3744%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,485,237 samples, 0.15%)</title><rect x="68.1244%" y="2165" width="0.1474%" height="15" fill="rgb(237,222,12)" fg:x="1148351530" fg:w="2485237"/><text x="68.3744%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,485,237 samples, 0.15%)</title><rect x="68.1244%" y="2149" width="0.1474%" height="15" fill="rgb(248,132,6)" fg:x="1148351530" fg:w="2485237"/><text x="68.3744%" y="2159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,485,237 samples, 0.15%)</title><rect x="68.1244%" y="2133" width="0.1474%" height="15" fill="rgb(227,167,50)" fg:x="1148351530" fg:w="2485237"/><text x="68.3744%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,485,237 samples, 0.15%)</title><rect x="68.1244%" y="2117" width="0.1474%" height="15" fill="rgb(242,84,37)" fg:x="1148351530" fg:w="2485237"/><text x="68.3744%" y="2127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,485,237 samples, 0.15%)</title><rect x="68.1244%" y="2101" width="0.1474%" height="15" fill="rgb(212,4,50)" fg:x="1148351530" fg:w="2485237"/><text x="68.3744%" y="2111.50"></text></g><g><title>alloc::alloc::dealloc (2,485,237 samples, 0.15%)</title><rect x="68.1244%" y="2085" width="0.1474%" height="15" fill="rgb(230,228,32)" fg:x="1148351530" fg:w="2485237"/><text x="68.3744%" y="2095.50"></text></g><g><title>cfree (2,485,237 samples, 0.15%)</title><rect x="68.1244%" y="2069" width="0.1474%" height="15" fill="rgb(248,217,23)" fg:x="1148351530" fg:w="2485237"/><text x="68.3744%" y="2079.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (119,789,462 samples, 7.11%)</title><rect x="61.5039%" y="2229" width="7.1064%" height="15" fill="rgb(238,197,32)" fg:x="1036750413" fg:w="119789462"/><text x="61.7539%" y="2239.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (119,789,462 samples, 7.11%)</title><rect x="61.5039%" y="2213" width="7.1064%" height="15" fill="rgb(236,106,1)" fg:x="1036750413" fg:w="119789462"/><text x="61.7539%" y="2223.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (119,789,462 samples, 7.11%)</title><rect x="61.5039%" y="2197" width="7.1064%" height="15" fill="rgb(219,228,13)" fg:x="1036750413" fg:w="119789462"/><text x="61.7539%" y="2207.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (5,703,108 samples, 0.34%)</title><rect x="68.2719%" y="2181" width="0.3383%" height="15" fill="rgb(238,30,35)" fg:x="1150836767" fg:w="5703108"/><text x="68.5219%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (5,703,108 samples, 0.34%)</title><rect x="68.2719%" y="2165" width="0.3383%" height="15" fill="rgb(236,70,23)" fg:x="1150836767" fg:w="5703108"/><text x="68.5219%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (5,703,108 samples, 0.34%)</title><rect x="68.2719%" y="2149" width="0.3383%" height="15" fill="rgb(249,104,48)" fg:x="1150836767" fg:w="5703108"/><text x="68.5219%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (5,703,108 samples, 0.34%)</title><rect x="68.2719%" y="2133" width="0.3383%" height="15" fill="rgb(254,117,50)" fg:x="1150836767" fg:w="5703108"/><text x="68.5219%" y="2143.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,703,108 samples, 0.34%)</title><rect x="68.2719%" y="2117" width="0.3383%" height="15" fill="rgb(223,152,4)" fg:x="1150836767" fg:w="5703108"/><text x="68.5219%" y="2127.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (5,703,108 samples, 0.34%)</title><rect x="68.2719%" y="2101" width="0.3383%" height="15" fill="rgb(245,6,2)" fg:x="1150836767" fg:w="5703108"/><text x="68.5219%" y="2111.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,757,803 samples, 0.16%)</title><rect x="68.4466%" y="2085" width="0.1636%" height="15" fill="rgb(249,150,24)" fg:x="1153782072" fg:w="2757803"/><text x="68.6966%" y="2095.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,757,803 samples, 0.16%)</title><rect x="68.4466%" y="2069" width="0.1636%" height="15" fill="rgb(228,185,42)" fg:x="1153782072" fg:w="2757803"/><text x="68.6966%" y="2079.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,757,803 samples, 0.16%)</title><rect x="68.4466%" y="2053" width="0.1636%" height="15" fill="rgb(226,39,33)" fg:x="1153782072" fg:w="2757803"/><text x="68.6966%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,757,803 samples, 0.16%)</title><rect x="68.4466%" y="2037" width="0.1636%" height="15" fill="rgb(221,166,19)" fg:x="1153782072" fg:w="2757803"/><text x="68.6966%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,757,803 samples, 0.16%)</title><rect x="68.4466%" y="2021" width="0.1636%" height="15" fill="rgb(209,109,2)" fg:x="1153782072" fg:w="2757803"/><text x="68.6966%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,757,803 samples, 0.16%)</title><rect x="68.4466%" y="2005" width="0.1636%" height="15" fill="rgb(252,216,26)" fg:x="1153782072" fg:w="2757803"/><text x="68.6966%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,757,803 samples, 0.16%)</title><rect x="68.4466%" y="1989" width="0.1636%" height="15" fill="rgb(227,173,36)" fg:x="1153782072" fg:w="2757803"/><text x="68.6966%" y="1999.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,757,803 samples, 0.16%)</title><rect x="68.4466%" y="1973" width="0.1636%" height="15" fill="rgb(209,90,7)" fg:x="1153782072" fg:w="2757803"/><text x="68.6966%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,757,803 samples, 0.16%)</title><rect x="68.4466%" y="1957" width="0.1636%" height="15" fill="rgb(250,194,11)" fg:x="1153782072" fg:w="2757803"/><text x="68.6966%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,757,803 samples, 0.16%)</title><rect x="68.4466%" y="1941" width="0.1636%" height="15" fill="rgb(220,72,50)" fg:x="1153782072" fg:w="2757803"/><text x="68.6966%" y="1951.50"></text></g><g><title>alloc::alloc::dealloc (2,757,803 samples, 0.16%)</title><rect x="68.4466%" y="1925" width="0.1636%" height="15" fill="rgb(222,106,48)" fg:x="1153782072" fg:w="2757803"/><text x="68.6966%" y="1935.50"></text></g><g><title>cfree (2,757,803 samples, 0.16%)</title><rect x="68.4466%" y="1909" width="0.1636%" height="15" fill="rgb(216,220,45)" fg:x="1153782072" fg:w="2757803"/><text x="68.6966%" y="1919.50"></text></g><g><title>[libc.so.6] (2,757,803 samples, 0.16%)</title><rect x="68.4466%" y="1893" width="0.1636%" height="15" fill="rgb(234,112,18)" fg:x="1153782072" fg:w="2757803"/><text x="68.6966%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (124,751,385 samples, 7.40%)</title><rect x="61.5039%" y="2245" width="7.4007%" height="15" fill="rgb(206,179,9)" fg:x="1036750413" fg:w="124751385"/><text x="61.7539%" y="2255.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (4,961,923 samples, 0.29%)</title><rect x="68.6102%" y="2229" width="0.2944%" height="15" fill="rgb(215,115,40)" fg:x="1156539875" fg:w="4961923"/><text x="68.8602%" y="2239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,961,923 samples, 0.29%)</title><rect x="68.6102%" y="2213" width="0.2944%" height="15" fill="rgb(222,69,34)" fg:x="1156539875" fg:w="4961923"/><text x="68.8602%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,961,923 samples, 0.29%)</title><rect x="68.6102%" y="2197" width="0.2944%" height="15" fill="rgb(209,161,10)" fg:x="1156539875" fg:w="4961923"/><text x="68.8602%" y="2207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,961,923 samples, 0.29%)</title><rect x="68.6102%" y="2181" width="0.2944%" height="15" fill="rgb(217,6,38)" fg:x="1156539875" fg:w="4961923"/><text x="68.8602%" y="2191.50"></text></g><g><title>alloc::alloc::dealloc (4,961,923 samples, 0.29%)</title><rect x="68.6102%" y="2165" width="0.2944%" height="15" fill="rgb(229,229,48)" fg:x="1156539875" fg:w="4961923"/><text x="68.8602%" y="2175.50"></text></g><g><title>cfree (4,961,923 samples, 0.29%)</title><rect x="68.6102%" y="2149" width="0.2944%" height="15" fill="rgb(225,21,28)" fg:x="1156539875" fg:w="4961923"/><text x="68.8602%" y="2159.50"></text></g><g><title>[libc.so.6] (4,961,923 samples, 0.29%)</title><rect x="68.6102%" y="2133" width="0.2944%" height="15" fill="rgb(206,33,13)" fg:x="1156539875" fg:w="4961923"/><text x="68.8602%" y="2143.50"></text></g><g><title>[libc.so.6] (2,587,310 samples, 0.15%)</title><rect x="68.7511%" y="2117" width="0.1535%" height="15" fill="rgb(242,178,17)" fg:x="1158914488" fg:w="2587310"/><text x="69.0011%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,797,785 samples, 0.17%)</title><rect x="68.9046%" y="2245" width="0.1660%" height="15" fill="rgb(220,162,5)" fg:x="1161501798" fg:w="2797785"/><text x="69.1546%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,797,785 samples, 0.17%)</title><rect x="68.9046%" y="2229" width="0.1660%" height="15" fill="rgb(210,33,43)" fg:x="1161501798" fg:w="2797785"/><text x="69.1546%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,797,785 samples, 0.17%)</title><rect x="68.9046%" y="2213" width="0.1660%" height="15" fill="rgb(216,116,54)" fg:x="1161501798" fg:w="2797785"/><text x="69.1546%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,797,785 samples, 0.17%)</title><rect x="68.9046%" y="2197" width="0.1660%" height="15" fill="rgb(249,92,24)" fg:x="1161501798" fg:w="2797785"/><text x="69.1546%" y="2207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,797,785 samples, 0.17%)</title><rect x="68.9046%" y="2181" width="0.1660%" height="15" fill="rgb(231,189,14)" fg:x="1161501798" fg:w="2797785"/><text x="69.1546%" y="2191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,797,785 samples, 0.17%)</title><rect x="68.9046%" y="2165" width="0.1660%" height="15" fill="rgb(230,8,41)" fg:x="1161501798" fg:w="2797785"/><text x="69.1546%" y="2175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,797,785 samples, 0.17%)</title><rect x="68.9046%" y="2149" width="0.1660%" height="15" fill="rgb(249,7,27)" fg:x="1161501798" fg:w="2797785"/><text x="69.1546%" y="2159.50"></text></g><g><title>alloc::alloc::dealloc (2,797,785 samples, 0.17%)</title><rect x="68.9046%" y="2133" width="0.1660%" height="15" fill="rgb(232,86,5)" fg:x="1161501798" fg:w="2797785"/><text x="69.1546%" y="2143.50"></text></g><g><title>cfree (2,797,785 samples, 0.17%)</title><rect x="68.9046%" y="2117" width="0.1660%" height="15" fill="rgb(224,175,18)" fg:x="1161501798" fg:w="2797785"/><text x="69.1546%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (5,203,979 samples, 0.31%)</title><rect x="69.0705%" y="2245" width="0.3087%" height="15" fill="rgb(220,129,12)" fg:x="1164299583" fg:w="5203979"/><text x="69.3205%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5,203,979 samples, 0.31%)</title><rect x="69.0705%" y="2229" width="0.3087%" height="15" fill="rgb(210,19,36)" fg:x="1164299583" fg:w="5203979"/><text x="69.3205%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5,203,979 samples, 0.31%)</title><rect x="69.0705%" y="2213" width="0.3087%" height="15" fill="rgb(219,96,14)" fg:x="1164299583" fg:w="5203979"/><text x="69.3205%" y="2223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,203,979 samples, 0.31%)</title><rect x="69.0705%" y="2197" width="0.3087%" height="15" fill="rgb(249,106,1)" fg:x="1164299583" fg:w="5203979"/><text x="69.3205%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,203,979 samples, 0.31%)</title><rect x="69.0705%" y="2181" width="0.3087%" height="15" fill="rgb(249,155,20)" fg:x="1164299583" fg:w="5203979"/><text x="69.3205%" y="2191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,203,979 samples, 0.31%)</title><rect x="69.0705%" y="2165" width="0.3087%" height="15" fill="rgb(244,168,9)" fg:x="1164299583" fg:w="5203979"/><text x="69.3205%" y="2175.50"></text></g><g><title>alloc::alloc::dealloc (5,203,979 samples, 0.31%)</title><rect x="69.0705%" y="2149" width="0.3087%" height="15" fill="rgb(216,23,50)" fg:x="1164299583" fg:w="5203979"/><text x="69.3205%" y="2159.50"></text></g><g><title>cfree (5,203,979 samples, 0.31%)</title><rect x="69.0705%" y="2133" width="0.3087%" height="15" fill="rgb(224,219,20)" fg:x="1164299583" fg:w="5203979"/><text x="69.3205%" y="2143.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (9,904,489 samples, 0.59%)</title><rect x="69.3793%" y="2133" width="0.5876%" height="15" fill="rgb(222,156,15)" fg:x="1169503562" fg:w="9904489"/><text x="69.6293%" y="2143.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (9,904,489 samples, 0.59%)</title><rect x="69.3793%" y="2117" width="0.5876%" height="15" fill="rgb(231,97,17)" fg:x="1169503562" fg:w="9904489"/><text x="69.6293%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (9,904,489 samples, 0.59%)</title><rect x="69.3793%" y="2101" width="0.5876%" height="15" fill="rgb(218,70,48)" fg:x="1169503562" fg:w="9904489"/><text x="69.6293%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (9,904,489 samples, 0.59%)</title><rect x="69.3793%" y="2085" width="0.5876%" height="15" fill="rgb(212,196,52)" fg:x="1169503562" fg:w="9904489"/><text x="69.6293%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9,904,489 samples, 0.59%)</title><rect x="69.3793%" y="2069" width="0.5876%" height="15" fill="rgb(243,203,18)" fg:x="1169503562" fg:w="9904489"/><text x="69.6293%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9,904,489 samples, 0.59%)</title><rect x="69.3793%" y="2053" width="0.5876%" height="15" fill="rgb(252,125,41)" fg:x="1169503562" fg:w="9904489"/><text x="69.6293%" y="2063.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,904,489 samples, 0.59%)</title><rect x="69.3793%" y="2037" width="0.5876%" height="15" fill="rgb(223,180,33)" fg:x="1169503562" fg:w="9904489"/><text x="69.6293%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7,104,701 samples, 0.42%)</title><rect x="69.5454%" y="2021" width="0.4215%" height="15" fill="rgb(254,159,46)" fg:x="1172303350" fg:w="7104701"/><text x="69.7954%" y="2031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,104,701 samples, 0.42%)</title><rect x="69.5454%" y="2005" width="0.4215%" height="15" fill="rgb(254,38,10)" fg:x="1172303350" fg:w="7104701"/><text x="69.7954%" y="2015.50"></text></g><g><title>alloc::alloc::dealloc (7,104,701 samples, 0.42%)</title><rect x="69.5454%" y="1989" width="0.4215%" height="15" fill="rgb(208,217,32)" fg:x="1172303350" fg:w="7104701"/><text x="69.7954%" y="1999.50"></text></g><g><title>cfree (4,402,574 samples, 0.26%)</title><rect x="69.7057%" y="1973" width="0.2612%" height="15" fill="rgb(221,120,13)" fg:x="1175005477" fg:w="4402574"/><text x="69.9557%" y="1983.50"></text></g><g><title>[libc.so.6] (2,321,997 samples, 0.14%)</title><rect x="69.8291%" y="1957" width="0.1377%" height="15" fill="rgb(246,54,52)" fg:x="1177086054" fg:w="2321997"/><text x="70.0791%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (145,007,607 samples, 8.60%)</title><rect x="61.5039%" y="2293" width="8.6024%" height="15" fill="rgb(242,34,25)" fg:x="1036750413" fg:w="145007607"/><text x="61.7539%" y="2303.50">&lt;alloc::vec:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (145,007,607 samples, 8.60%)</title><rect x="61.5039%" y="2277" width="8.6024%" height="15" fill="rgb(247,209,9)" fg:x="1036750413" fg:w="145007607"/><text x="61.7539%" y="2287.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (145,007,607 samples, 8.60%)</title><rect x="61.5039%" y="2261" width="8.6024%" height="15" fill="rgb(228,71,26)" fg:x="1036750413" fg:w="145007607"/><text x="61.7539%" y="2271.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (12,254,458 samples, 0.73%)</title><rect x="69.3793%" y="2245" width="0.7270%" height="15" fill="rgb(222,145,49)" fg:x="1169503562" fg:w="12254458"/><text x="69.6293%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (12,254,458 samples, 0.73%)</title><rect x="69.3793%" y="2229" width="0.7270%" height="15" fill="rgb(218,121,17)" fg:x="1169503562" fg:w="12254458"/><text x="69.6293%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (12,254,458 samples, 0.73%)</title><rect x="69.3793%" y="2213" width="0.7270%" height="15" fill="rgb(244,50,7)" fg:x="1169503562" fg:w="12254458"/><text x="69.6293%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (12,254,458 samples, 0.73%)</title><rect x="69.3793%" y="2197" width="0.7270%" height="15" fill="rgb(246,229,37)" fg:x="1169503562" fg:w="12254458"/><text x="69.6293%" y="2207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,254,458 samples, 0.73%)</title><rect x="69.3793%" y="2181" width="0.7270%" height="15" fill="rgb(225,18,5)" fg:x="1169503562" fg:w="12254458"/><text x="69.6293%" y="2191.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (12,254,458 samples, 0.73%)</title><rect x="69.3793%" y="2165" width="0.7270%" height="15" fill="rgb(213,204,8)" fg:x="1169503562" fg:w="12254458"/><text x="69.6293%" y="2175.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (12,254,458 samples, 0.73%)</title><rect x="69.3793%" y="2149" width="0.7270%" height="15" fill="rgb(238,103,6)" fg:x="1169503562" fg:w="12254458"/><text x="69.6293%" y="2159.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (2,349,969 samples, 0.14%)</title><rect x="69.9668%" y="2133" width="0.1394%" height="15" fill="rgb(222,25,35)" fg:x="1179408051" fg:w="2349969"/><text x="70.2168%" y="2143.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2,349,969 samples, 0.14%)</title><rect x="69.9668%" y="2117" width="0.1394%" height="15" fill="rgb(213,203,35)" fg:x="1179408051" fg:w="2349969"/><text x="70.2168%" y="2127.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (2,349,969 samples, 0.14%)</title><rect x="69.9668%" y="2101" width="0.1394%" height="15" fill="rgb(221,79,53)" fg:x="1179408051" fg:w="2349969"/><text x="70.2168%" y="2111.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (2,349,969 samples, 0.14%)</title><rect x="69.9668%" y="2085" width="0.1394%" height="15" fill="rgb(243,200,35)" fg:x="1179408051" fg:w="2349969"/><text x="70.2168%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (150,683,398 samples, 8.94%)</title><rect x="61.5039%" y="2309" width="8.9391%" height="15" fill="rgb(248,60,25)" fg:x="1036750413" fg:w="150683398"/><text x="61.7539%" y="2319.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,675,791 samples, 0.34%)</title><rect x="70.1062%" y="2293" width="0.3367%" height="15" fill="rgb(227,53,46)" fg:x="1181758020" fg:w="5675791"/><text x="70.3562%" y="2303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,675,791 samples, 0.34%)</title><rect x="70.1062%" y="2277" width="0.3367%" height="15" fill="rgb(216,120,32)" fg:x="1181758020" fg:w="5675791"/><text x="70.3562%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,675,791 samples, 0.34%)</title><rect x="70.1062%" y="2261" width="0.3367%" height="15" fill="rgb(220,134,1)" fg:x="1181758020" fg:w="5675791"/><text x="70.3562%" y="2271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,675,791 samples, 0.34%)</title><rect x="70.1062%" y="2245" width="0.3367%" height="15" fill="rgb(237,168,5)" fg:x="1181758020" fg:w="5675791"/><text x="70.3562%" y="2255.50"></text></g><g><title>alloc::alloc::dealloc (5,675,791 samples, 0.34%)</title><rect x="70.1062%" y="2229" width="0.3367%" height="15" fill="rgb(231,100,33)" fg:x="1181758020" fg:w="5675791"/><text x="70.3562%" y="2239.50"></text></g><g><title>cfree (5,675,791 samples, 0.34%)</title><rect x="70.1062%" y="2213" width="0.3367%" height="15" fill="rgb(236,177,47)" fg:x="1181758020" fg:w="5675791"/><text x="70.3562%" y="2223.50"></text></g><g><title>[libc.so.6] (5,675,791 samples, 0.34%)</title><rect x="70.1062%" y="2197" width="0.3367%" height="15" fill="rgb(235,7,49)" fg:x="1181758020" fg:w="5675791"/><text x="70.3562%" y="2207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,300,312 samples, 0.31%)</title><rect x="70.4430%" y="2245" width="0.3144%" height="15" fill="rgb(232,119,22)" fg:x="1187433811" fg:w="5300312"/><text x="70.6930%" y="2255.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (5,300,312 samples, 0.31%)</title><rect x="70.4430%" y="2229" width="0.3144%" height="15" fill="rgb(254,73,53)" fg:x="1187433811" fg:w="5300312"/><text x="70.6930%" y="2239.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (5,300,312 samples, 0.31%)</title><rect x="70.4430%" y="2213" width="0.3144%" height="15" fill="rgb(251,35,20)" fg:x="1187433811" fg:w="5300312"/><text x="70.6930%" y="2223.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5,300,312 samples, 0.31%)</title><rect x="70.4430%" y="2197" width="0.3144%" height="15" fill="rgb(241,119,20)" fg:x="1187433811" fg:w="5300312"/><text x="70.6930%" y="2207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (5,300,312 samples, 0.31%)</title><rect x="70.4430%" y="2181" width="0.3144%" height="15" fill="rgb(207,102,14)" fg:x="1187433811" fg:w="5300312"/><text x="70.6930%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (5,300,312 samples, 0.31%)</title><rect x="70.4430%" y="2165" width="0.3144%" height="15" fill="rgb(248,201,50)" fg:x="1187433811" fg:w="5300312"/><text x="70.6930%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5,300,312 samples, 0.31%)</title><rect x="70.4430%" y="2149" width="0.3144%" height="15" fill="rgb(222,185,44)" fg:x="1187433811" fg:w="5300312"/><text x="70.6930%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5,300,312 samples, 0.31%)</title><rect x="70.4430%" y="2133" width="0.3144%" height="15" fill="rgb(218,107,18)" fg:x="1187433811" fg:w="5300312"/><text x="70.6930%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5,300,312 samples, 0.31%)</title><rect x="70.4430%" y="2117" width="0.3144%" height="15" fill="rgb(237,177,39)" fg:x="1187433811" fg:w="5300312"/><text x="70.6930%" y="2127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,300,312 samples, 0.31%)</title><rect x="70.4430%" y="2101" width="0.3144%" height="15" fill="rgb(246,69,6)" fg:x="1187433811" fg:w="5300312"/><text x="70.6930%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,402,581 samples, 0.14%)</title><rect x="70.6149%" y="2085" width="0.1425%" height="15" fill="rgb(234,208,37)" fg:x="1190331542" fg:w="2402581"/><text x="70.8649%" y="2095.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,402,581 samples, 0.14%)</title><rect x="70.6149%" y="2069" width="0.1425%" height="15" fill="rgb(225,4,6)" fg:x="1190331542" fg:w="2402581"/><text x="70.8649%" y="2079.50"></text></g><g><title>alloc::alloc::dealloc (2,402,581 samples, 0.14%)</title><rect x="70.6149%" y="2053" width="0.1425%" height="15" fill="rgb(233,45,0)" fg:x="1190331542" fg:w="2402581"/><text x="70.8649%" y="2063.50"></text></g><g><title>cfree (2,402,581 samples, 0.14%)</title><rect x="70.6149%" y="2037" width="0.1425%" height="15" fill="rgb(226,136,5)" fg:x="1190331542" fg:w="2402581"/><text x="70.8649%" y="2047.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (163,926,076 samples, 9.72%)</title><rect x="61.1938%" y="2357" width="9.7247%" height="15" fill="rgb(211,91,47)" fg:x="1031523624" fg:w="163926076"/><text x="61.4438%" y="2367.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (163,926,076 samples, 9.72%)</title><rect x="61.1938%" y="2341" width="9.7247%" height="15" fill="rgb(242,88,51)" fg:x="1031523624" fg:w="163926076"/><text x="61.4438%" y="2351.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (163,926,076 samples, 9.72%)</title><rect x="61.1938%" y="2325" width="9.7247%" height="15" fill="rgb(230,91,28)" fg:x="1031523624" fg:w="163926076"/><text x="61.4438%" y="2335.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (8,015,889 samples, 0.48%)</title><rect x="70.4430%" y="2309" width="0.4755%" height="15" fill="rgb(254,186,29)" fg:x="1187433811" fg:w="8015889"/><text x="70.6930%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (8,015,889 samples, 0.48%)</title><rect x="70.4430%" y="2293" width="0.4755%" height="15" fill="rgb(238,6,4)" fg:x="1187433811" fg:w="8015889"/><text x="70.6930%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (8,015,889 samples, 0.48%)</title><rect x="70.4430%" y="2277" width="0.4755%" height="15" fill="rgb(221,151,16)" fg:x="1187433811" fg:w="8015889"/><text x="70.6930%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (8,015,889 samples, 0.48%)</title><rect x="70.4430%" y="2261" width="0.4755%" height="15" fill="rgb(251,143,52)" fg:x="1187433811" fg:w="8015889"/><text x="70.6930%" y="2271.50"></text></g><g><title>cfree (2,715,577 samples, 0.16%)</title><rect x="70.7574%" y="2245" width="0.1611%" height="15" fill="rgb(206,90,15)" fg:x="1192734123" fg:w="2715577"/><text x="71.0074%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (166,681,057 samples, 9.89%)</title><rect x="61.1938%" y="2373" width="9.8881%" height="15" fill="rgb(218,35,8)" fg:x="1031523624" fg:w="166681057"/><text x="61.4438%" y="2383.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,754,981 samples, 0.16%)</title><rect x="70.9185%" y="2357" width="0.1634%" height="15" fill="rgb(239,215,6)" fg:x="1195449700" fg:w="2754981"/><text x="71.1685%" y="2367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,754,981 samples, 0.16%)</title><rect x="70.9185%" y="2341" width="0.1634%" height="15" fill="rgb(245,116,39)" fg:x="1195449700" fg:w="2754981"/><text x="71.1685%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,754,981 samples, 0.16%)</title><rect x="70.9185%" y="2325" width="0.1634%" height="15" fill="rgb(242,65,28)" fg:x="1195449700" fg:w="2754981"/><text x="71.1685%" y="2335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,754,981 samples, 0.16%)</title><rect x="70.9185%" y="2309" width="0.1634%" height="15" fill="rgb(252,132,53)" fg:x="1195449700" fg:w="2754981"/><text x="71.1685%" y="2319.50"></text></g><g><title>alloc::alloc::dealloc (2,754,981 samples, 0.16%)</title><rect x="70.9185%" y="2293" width="0.1634%" height="15" fill="rgb(224,159,50)" fg:x="1195449700" fg:w="2754981"/><text x="71.1685%" y="2303.50"></text></g><g><title>cfree (2,754,981 samples, 0.16%)</title><rect x="70.9185%" y="2277" width="0.1634%" height="15" fill="rgb(224,93,4)" fg:x="1195449700" fg:w="2754981"/><text x="71.1685%" y="2287.50"></text></g><g><title>[libc.so.6] (2,754,981 samples, 0.16%)</title><rect x="70.9185%" y="2261" width="0.1634%" height="15" fill="rgb(208,81,34)" fg:x="1195449700" fg:w="2754981"/><text x="71.1685%" y="2271.50"></text></g><g><title>[libc.so.6] (2,754,981 samples, 0.16%)</title><rect x="70.9185%" y="2245" width="0.1634%" height="15" fill="rgb(233,92,54)" fg:x="1195449700" fg:w="2754981"/><text x="71.1685%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (4,974,132 samples, 0.30%)</title><rect x="71.0819%" y="2373" width="0.2951%" height="15" fill="rgb(237,21,14)" fg:x="1198204681" fg:w="4974132"/><text x="71.3319%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4,974,132 samples, 0.30%)</title><rect x="71.0819%" y="2357" width="0.2951%" height="15" fill="rgb(249,128,51)" fg:x="1198204681" fg:w="4974132"/><text x="71.3319%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4,974,132 samples, 0.30%)</title><rect x="71.0819%" y="2341" width="0.2951%" height="15" fill="rgb(223,129,24)" fg:x="1198204681" fg:w="4974132"/><text x="71.3319%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4,974,132 samples, 0.30%)</title><rect x="71.0819%" y="2325" width="0.2951%" height="15" fill="rgb(231,168,25)" fg:x="1198204681" fg:w="4974132"/><text x="71.3319%" y="2335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,974,132 samples, 0.30%)</title><rect x="71.0819%" y="2309" width="0.2951%" height="15" fill="rgb(224,39,20)" fg:x="1198204681" fg:w="4974132"/><text x="71.3319%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,974,132 samples, 0.30%)</title><rect x="71.0819%" y="2293" width="0.2951%" height="15" fill="rgb(225,152,53)" fg:x="1198204681" fg:w="4974132"/><text x="71.3319%" y="2303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,974,132 samples, 0.30%)</title><rect x="71.0819%" y="2277" width="0.2951%" height="15" fill="rgb(252,17,24)" fg:x="1198204681" fg:w="4974132"/><text x="71.3319%" y="2287.50"></text></g><g><title>alloc::alloc::dealloc (4,974,132 samples, 0.30%)</title><rect x="71.0819%" y="2261" width="0.2951%" height="15" fill="rgb(250,114,30)" fg:x="1198204681" fg:w="4974132"/><text x="71.3319%" y="2271.50"></text></g><g><title>cfree (4,974,132 samples, 0.30%)</title><rect x="71.0819%" y="2245" width="0.2951%" height="15" fill="rgb(229,5,4)" fg:x="1198204681" fg:w="4974132"/><text x="71.3319%" y="2255.50"></text></g><g><title>[libc.so.6] (4,974,132 samples, 0.30%)</title><rect x="71.0819%" y="2229" width="0.2951%" height="15" fill="rgb(225,176,49)" fg:x="1198204681" fg:w="4974132"/><text x="71.3319%" y="2239.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,706,699 samples, 0.16%)</title><rect x="71.3770%" y="2261" width="0.1606%" height="15" fill="rgb(224,221,49)" fg:x="1203178813" fg:w="2706699"/><text x="71.6270%" y="2271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,706,699 samples, 0.16%)</title><rect x="71.3770%" y="2245" width="0.1606%" height="15" fill="rgb(253,169,27)" fg:x="1203178813" fg:w="2706699"/><text x="71.6270%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,706,699 samples, 0.16%)</title><rect x="71.3770%" y="2229" width="0.1606%" height="15" fill="rgb(211,206,16)" fg:x="1203178813" fg:w="2706699"/><text x="71.6270%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,706,699 samples, 0.16%)</title><rect x="71.3770%" y="2213" width="0.1606%" height="15" fill="rgb(244,87,35)" fg:x="1203178813" fg:w="2706699"/><text x="71.6270%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,706,699 samples, 0.16%)</title><rect x="71.3770%" y="2197" width="0.1606%" height="15" fill="rgb(246,28,10)" fg:x="1203178813" fg:w="2706699"/><text x="71.6270%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,706,699 samples, 0.16%)</title><rect x="71.3770%" y="2181" width="0.1606%" height="15" fill="rgb(229,12,44)" fg:x="1203178813" fg:w="2706699"/><text x="71.6270%" y="2191.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,706,699 samples, 0.16%)</title><rect x="71.3770%" y="2165" width="0.1606%" height="15" fill="rgb(210,145,37)" fg:x="1203178813" fg:w="2706699"/><text x="71.6270%" y="2175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2,992,717 samples, 0.18%)</title><rect x="71.5376%" y="2229" width="0.1775%" height="15" fill="rgb(227,112,52)" fg:x="1205885512" fg:w="2992717"/><text x="71.7876%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (185,525,122 samples, 11.01%)</title><rect x="60.8686%" y="2501" width="11.0060%" height="15" fill="rgb(238,155,34)" fg:x="1026041488" fg:w="185525122"/><text x="61.1186%" y="2511.50">core::ptr::drop_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (185,525,122 samples, 11.01%)</title><rect x="60.8686%" y="2485" width="11.0060%" height="15" fill="rgb(239,226,36)" fg:x="1026041488" fg:w="185525122"/><text x="61.1186%" y="2495.50">&lt;alloc::vec::Vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (185,525,122 samples, 11.01%)</title><rect x="60.8686%" y="2469" width="11.0060%" height="15" fill="rgb(230,16,23)" fg:x="1026041488" fg:w="185525122"/><text x="61.1186%" y="2479.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (185,525,122 samples, 11.01%)</title><rect x="60.8686%" y="2453" width="11.0060%" height="15" fill="rgb(236,171,36)" fg:x="1026041488" fg:w="185525122"/><text x="61.1186%" y="2463.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (182,873,014 samples, 10.85%)</title><rect x="61.0259%" y="2437" width="10.8487%" height="15" fill="rgb(221,22,14)" fg:x="1028693596" fg:w="182873014"/><text x="61.2759%" y="2447.50">core::ptr::drop_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (182,873,014 samples, 10.85%)</title><rect x="61.0259%" y="2421" width="10.8487%" height="15" fill="rgb(242,43,11)" fg:x="1028693596" fg:w="182873014"/><text x="61.2759%" y="2431.50">&lt;alloc::vec::Vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (182,873,014 samples, 10.85%)</title><rect x="61.0259%" y="2405" width="10.8487%" height="15" fill="rgb(232,69,23)" fg:x="1028693596" fg:w="182873014"/><text x="61.2759%" y="2415.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (182,873,014 samples, 10.85%)</title><rect x="61.0259%" y="2389" width="10.8487%" height="15" fill="rgb(216,180,54)" fg:x="1028693596" fg:w="182873014"/><text x="61.2759%" y="2399.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (8,387,797 samples, 0.50%)</title><rect x="71.3770%" y="2373" width="0.4976%" height="15" fill="rgb(216,5,24)" fg:x="1203178813" fg:w="8387797"/><text x="71.6270%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (8,387,797 samples, 0.50%)</title><rect x="71.3770%" y="2357" width="0.4976%" height="15" fill="rgb(225,89,9)" fg:x="1203178813" fg:w="8387797"/><text x="71.6270%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (8,387,797 samples, 0.50%)</title><rect x="71.3770%" y="2341" width="0.4976%" height="15" fill="rgb(243,75,33)" fg:x="1203178813" fg:w="8387797"/><text x="71.6270%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (8,387,797 samples, 0.50%)</title><rect x="71.3770%" y="2325" width="0.4976%" height="15" fill="rgb(247,141,45)" fg:x="1203178813" fg:w="8387797"/><text x="71.6270%" y="2335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,387,797 samples, 0.50%)</title><rect x="71.3770%" y="2309" width="0.4976%" height="15" fill="rgb(232,177,36)" fg:x="1203178813" fg:w="8387797"/><text x="71.6270%" y="2319.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (8,387,797 samples, 0.50%)</title><rect x="71.3770%" y="2293" width="0.4976%" height="15" fill="rgb(219,125,36)" fg:x="1203178813" fg:w="8387797"/><text x="71.6270%" y="2303.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (8,387,797 samples, 0.50%)</title><rect x="71.3770%" y="2277" width="0.4976%" height="15" fill="rgb(227,94,9)" fg:x="1203178813" fg:w="8387797"/><text x="71.6270%" y="2287.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (5,681,098 samples, 0.34%)</title><rect x="71.5376%" y="2261" width="0.3370%" height="15" fill="rgb(240,34,52)" fg:x="1205885512" fg:w="5681098"/><text x="71.7876%" y="2271.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (5,681,098 samples, 0.34%)</title><rect x="71.5376%" y="2245" width="0.3370%" height="15" fill="rgb(216,45,12)" fg:x="1205885512" fg:w="5681098"/><text x="71.7876%" y="2255.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (2,688,381 samples, 0.16%)</title><rect x="71.7151%" y="2229" width="0.1595%" height="15" fill="rgb(246,21,19)" fg:x="1208878229" fg:w="2688381"/><text x="71.9651%" y="2239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (2,688,381 samples, 0.16%)</title><rect x="71.7151%" y="2213" width="0.1595%" height="15" fill="rgb(213,98,42)" fg:x="1208878229" fg:w="2688381"/><text x="71.9651%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (188,352,600 samples, 11.17%)</title><rect x="60.8686%" y="2565" width="11.1738%" height="15" fill="rgb(250,136,47)" fg:x="1026041488" fg:w="188352600"/><text x="61.1186%" y="2575.50">core::ptr::drop_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (188,352,600 samples, 11.17%)</title><rect x="60.8686%" y="2549" width="11.1738%" height="15" fill="rgb(251,124,27)" fg:x="1026041488" fg:w="188352600"/><text x="61.1186%" y="2559.50">&lt;alloc::vec::Vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (188,352,600 samples, 11.17%)</title><rect x="60.8686%" y="2533" width="11.1738%" height="15" fill="rgb(229,180,14)" fg:x="1026041488" fg:w="188352600"/><text x="61.1186%" y="2543.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (188,352,600 samples, 11.17%)</title><rect x="60.8686%" y="2517" width="11.1738%" height="15" fill="rgb(245,216,25)" fg:x="1026041488" fg:w="188352600"/><text x="61.1186%" y="2527.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,827,478 samples, 0.17%)</title><rect x="71.8746%" y="2501" width="0.1677%" height="15" fill="rgb(251,43,5)" fg:x="1211566610" fg:w="2827478"/><text x="72.1246%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,827,478 samples, 0.17%)</title><rect x="71.8746%" y="2485" width="0.1677%" height="15" fill="rgb(250,128,24)" fg:x="1211566610" fg:w="2827478"/><text x="72.1246%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,827,478 samples, 0.17%)</title><rect x="71.8746%" y="2469" width="0.1677%" height="15" fill="rgb(217,117,27)" fg:x="1211566610" fg:w="2827478"/><text x="72.1246%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,827,478 samples, 0.17%)</title><rect x="71.8746%" y="2453" width="0.1677%" height="15" fill="rgb(245,147,4)" fg:x="1211566610" fg:w="2827478"/><text x="72.1246%" y="2463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,827,478 samples, 0.17%)</title><rect x="71.8746%" y="2437" width="0.1677%" height="15" fill="rgb(242,201,35)" fg:x="1211566610" fg:w="2827478"/><text x="72.1246%" y="2447.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,827,478 samples, 0.17%)</title><rect x="71.8746%" y="2421" width="0.1677%" height="15" fill="rgb(218,181,1)" fg:x="1211566610" fg:w="2827478"/><text x="72.1246%" y="2431.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,827,478 samples, 0.17%)</title><rect x="71.8746%" y="2405" width="0.1677%" height="15" fill="rgb(222,6,29)" fg:x="1211566610" fg:w="2827478"/><text x="72.1246%" y="2415.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,827,478 samples, 0.17%)</title><rect x="71.8746%" y="2389" width="0.1677%" height="15" fill="rgb(208,186,3)" fg:x="1211566610" fg:w="2827478"/><text x="72.1246%" y="2399.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2,827,478 samples, 0.17%)</title><rect x="71.8746%" y="2373" width="0.1677%" height="15" fill="rgb(216,36,26)" fg:x="1211566610" fg:w="2827478"/><text x="72.1246%" y="2383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (2,827,478 samples, 0.17%)</title><rect x="71.8746%" y="2357" width="0.1677%" height="15" fill="rgb(248,201,23)" fg:x="1211566610" fg:w="2827478"/><text x="72.1246%" y="2367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2,827,478 samples, 0.17%)</title><rect x="71.8746%" y="2341" width="0.1677%" height="15" fill="rgb(251,170,31)" fg:x="1211566610" fg:w="2827478"/><text x="72.1246%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (191,199,628 samples, 11.34%)</title><rect x="60.8686%" y="2629" width="11.3427%" height="15" fill="rgb(207,110,25)" fg:x="1026041488" fg:w="191199628"/><text x="61.1186%" y="2639.50">core::ptr::drop_i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (191,199,628 samples, 11.34%)</title><rect x="60.8686%" y="2613" width="11.3427%" height="15" fill="rgb(250,54,15)" fg:x="1026041488" fg:w="191199628"/><text x="61.1186%" y="2623.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (191,199,628 samples, 11.34%)</title><rect x="60.8686%" y="2597" width="11.3427%" height="15" fill="rgb(227,68,33)" fg:x="1026041488" fg:w="191199628"/><text x="61.1186%" y="2607.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (191,199,628 samples, 11.34%)</title><rect x="60.8686%" y="2581" width="11.3427%" height="15" fill="rgb(238,34,41)" fg:x="1026041488" fg:w="191199628"/><text x="61.1186%" y="2591.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,847,028 samples, 0.17%)</title><rect x="72.0423%" y="2565" width="0.1689%" height="15" fill="rgb(220,11,15)" fg:x="1214394088" fg:w="2847028"/><text x="72.2923%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,847,028 samples, 0.17%)</title><rect x="72.0423%" y="2549" width="0.1689%" height="15" fill="rgb(246,111,35)" fg:x="1214394088" fg:w="2847028"/><text x="72.2923%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,847,028 samples, 0.17%)</title><rect x="72.0423%" y="2533" width="0.1689%" height="15" fill="rgb(209,88,53)" fg:x="1214394088" fg:w="2847028"/><text x="72.2923%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,847,028 samples, 0.17%)</title><rect x="72.0423%" y="2517" width="0.1689%" height="15" fill="rgb(231,185,47)" fg:x="1214394088" fg:w="2847028"/><text x="72.2923%" y="2527.50"></text></g><g><title>cfree (2,847,028 samples, 0.17%)</title><rect x="72.0423%" y="2501" width="0.1689%" height="15" fill="rgb(233,154,1)" fg:x="1214394088" fg:w="2847028"/><text x="72.2923%" y="2511.50"></text></g><g><title>[libc.so.6] (2,847,028 samples, 0.17%)</title><rect x="72.0423%" y="2485" width="0.1689%" height="15" fill="rgb(225,15,46)" fg:x="1214394088" fg:w="2847028"/><text x="72.2923%" y="2495.50"></text></g><g><title>[libc.so.6] (2,847,028 samples, 0.17%)</title><rect x="72.0423%" y="2469" width="0.1689%" height="15" fill="rgb(211,135,41)" fg:x="1214394088" fg:w="2847028"/><text x="72.2923%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2901" width="11.5007%" height="15" fill="rgb(208,54,0)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2911.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2885" width="11.5007%" height="15" fill="rgb(244,136,14)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2895.50">core::ptr::drop_i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2869" width="11.5007%" height="15" fill="rgb(241,56,14)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2879.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2853" width="11.5007%" height="15" fill="rgb(205,80,24)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2863.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2837" width="11.5007%" height="15" fill="rgb(220,57,4)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2847.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2821" width="11.5007%" height="15" fill="rgb(226,193,50)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2831.50">core::ptr::drop_i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2805" width="11.5007%" height="15" fill="rgb(231,168,22)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2815.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2789" width="11.5007%" height="15" fill="rgb(254,215,14)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2799.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2773" width="11.5007%" height="15" fill="rgb(211,115,16)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2783.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2757" width="11.5007%" height="15" fill="rgb(236,210,16)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2767.50">core::ptr::drop_i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2741" width="11.5007%" height="15" fill="rgb(221,94,12)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2751.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2725" width="11.5007%" height="15" fill="rgb(235,218,49)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2735.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2709" width="11.5007%" height="15" fill="rgb(217,114,14)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2719.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2693" width="11.5007%" height="15" fill="rgb(216,145,22)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2703.50">core::ptr::drop_i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2677" width="11.5007%" height="15" fill="rgb(217,112,39)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2687.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2661" width="11.5007%" height="15" fill="rgb(225,85,32)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2671.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (193,863,915 samples, 11.50%)</title><rect x="60.8686%" y="2645" width="11.5007%" height="15" fill="rgb(245,209,47)" fg:x="1026041488" fg:w="193863915"/><text x="61.1186%" y="2655.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,664,287 samples, 0.16%)</title><rect x="72.2112%" y="2629" width="0.1581%" height="15" fill="rgb(218,220,15)" fg:x="1217241116" fg:w="2664287"/><text x="72.4612%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,664,287 samples, 0.16%)</title><rect x="72.2112%" y="2613" width="0.1581%" height="15" fill="rgb(222,202,31)" fg:x="1217241116" fg:w="2664287"/><text x="72.4612%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,664,287 samples, 0.16%)</title><rect x="72.2112%" y="2597" width="0.1581%" height="15" fill="rgb(243,203,4)" fg:x="1217241116" fg:w="2664287"/><text x="72.4612%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,664,287 samples, 0.16%)</title><rect x="72.2112%" y="2581" width="0.1581%" height="15" fill="rgb(237,92,17)" fg:x="1217241116" fg:w="2664287"/><text x="72.4612%" y="2591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,664,287 samples, 0.16%)</title><rect x="72.2112%" y="2565" width="0.1581%" height="15" fill="rgb(231,119,7)" fg:x="1217241116" fg:w="2664287"/><text x="72.4612%" y="2575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,664,287 samples, 0.16%)</title><rect x="72.2112%" y="2549" width="0.1581%" height="15" fill="rgb(237,82,41)" fg:x="1217241116" fg:w="2664287"/><text x="72.4612%" y="2559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,664,287 samples, 0.16%)</title><rect x="72.2112%" y="2533" width="0.1581%" height="15" fill="rgb(226,81,48)" fg:x="1217241116" fg:w="2664287"/><text x="72.4612%" y="2543.50"></text></g><g><title>alloc::alloc::dealloc (2,664,287 samples, 0.16%)</title><rect x="72.2112%" y="2517" width="0.1581%" height="15" fill="rgb(234,70,51)" fg:x="1217241116" fg:w="2664287"/><text x="72.4612%" y="2527.50"></text></g><g><title>cfree (2,664,287 samples, 0.16%)</title><rect x="72.2112%" y="2501" width="0.1581%" height="15" fill="rgb(251,86,4)" fg:x="1217241116" fg:w="2664287"/><text x="72.4612%" y="2511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,305,278 samples, 0.14%)</title><rect x="72.6733%" y="2661" width="0.1368%" height="15" fill="rgb(244,144,28)" fg:x="1225029457" fg:w="2305278"/><text x="72.9233%" y="2671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,305,278 samples, 0.14%)</title><rect x="72.6733%" y="2645" width="0.1368%" height="15" fill="rgb(232,161,39)" fg:x="1225029457" fg:w="2305278"/><text x="72.9233%" y="2655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,648,989 samples, 0.16%)</title><rect x="72.8100%" y="2645" width="0.1571%" height="15" fill="rgb(247,34,51)" fg:x="1227334735" fg:w="2648989"/><text x="73.0600%" y="2655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,648,989 samples, 0.16%)</title><rect x="72.8100%" y="2629" width="0.1571%" height="15" fill="rgb(225,132,2)" fg:x="1227334735" fg:w="2648989"/><text x="73.0600%" y="2639.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (12,587,006 samples, 0.75%)</title><rect x="72.3693%" y="2901" width="0.7467%" height="15" fill="rgb(209,159,44)" fg:x="1219905403" fg:w="12587006"/><text x="72.6193%" y="2911.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (12,587,006 samples, 0.75%)</title><rect x="72.3693%" y="2885" width="0.7467%" height="15" fill="rgb(251,214,1)" fg:x="1219905403" fg:w="12587006"/><text x="72.6193%" y="2895.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (12,587,006 samples, 0.75%)</title><rect x="72.3693%" y="2869" width="0.7467%" height="15" fill="rgb(247,84,47)" fg:x="1219905403" fg:w="12587006"/><text x="72.6193%" y="2879.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (12,587,006 samples, 0.75%)</title><rect x="72.3693%" y="2853" width="0.7467%" height="15" fill="rgb(240,111,43)" fg:x="1219905403" fg:w="12587006"/><text x="72.6193%" y="2863.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (12,587,006 samples, 0.75%)</title><rect x="72.3693%" y="2837" width="0.7467%" height="15" fill="rgb(215,214,35)" fg:x="1219905403" fg:w="12587006"/><text x="72.6193%" y="2847.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (12,587,006 samples, 0.75%)</title><rect x="72.3693%" y="2821" width="0.7467%" height="15" fill="rgb(248,207,23)" fg:x="1219905403" fg:w="12587006"/><text x="72.6193%" y="2831.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (12,587,006 samples, 0.75%)</title><rect x="72.3693%" y="2805" width="0.7467%" height="15" fill="rgb(214,186,4)" fg:x="1219905403" fg:w="12587006"/><text x="72.6193%" y="2815.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (12,587,006 samples, 0.75%)</title><rect x="72.3693%" y="2789" width="0.7467%" height="15" fill="rgb(220,133,22)" fg:x="1219905403" fg:w="12587006"/><text x="72.6193%" y="2799.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (10,072,994 samples, 0.60%)</title><rect x="72.5184%" y="2773" width="0.5976%" height="15" fill="rgb(239,134,19)" fg:x="1222419415" fg:w="10072994"/><text x="72.7684%" y="2783.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (10,072,994 samples, 0.60%)</title><rect x="72.5184%" y="2757" width="0.5976%" height="15" fill="rgb(250,140,9)" fg:x="1222419415" fg:w="10072994"/><text x="72.7684%" y="2767.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (10,072,994 samples, 0.60%)</title><rect x="72.5184%" y="2741" width="0.5976%" height="15" fill="rgb(225,59,14)" fg:x="1222419415" fg:w="10072994"/><text x="72.7684%" y="2751.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (10,072,994 samples, 0.60%)</title><rect x="72.5184%" y="2725" width="0.5976%" height="15" fill="rgb(214,152,51)" fg:x="1222419415" fg:w="10072994"/><text x="72.7684%" y="2735.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (10,072,994 samples, 0.60%)</title><rect x="72.5184%" y="2709" width="0.5976%" height="15" fill="rgb(251,227,43)" fg:x="1222419415" fg:w="10072994"/><text x="72.7684%" y="2719.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (7,462,952 samples, 0.44%)</title><rect x="72.6733%" y="2693" width="0.4427%" height="15" fill="rgb(241,96,17)" fg:x="1225029457" fg:w="7462952"/><text x="72.9233%" y="2703.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (7,462,952 samples, 0.44%)</title><rect x="72.6733%" y="2677" width="0.4427%" height="15" fill="rgb(234,198,43)" fg:x="1225029457" fg:w="7462952"/><text x="72.9233%" y="2687.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (5,157,674 samples, 0.31%)</title><rect x="72.8100%" y="2661" width="0.3060%" height="15" fill="rgb(220,108,29)" fg:x="1227334735" fg:w="5157674"/><text x="73.0600%" y="2671.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,508,685 samples, 0.15%)</title><rect x="72.9672%" y="2645" width="0.1488%" height="15" fill="rgb(226,163,33)" fg:x="1229983724" fg:w="2508685"/><text x="73.2172%" y="2655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,508,685 samples, 0.15%)</title><rect x="72.9672%" y="2629" width="0.1488%" height="15" fill="rgb(205,194,45)" fg:x="1229983724" fg:w="2508685"/><text x="73.2172%" y="2639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,508,685 samples, 0.15%)</title><rect x="72.9672%" y="2613" width="0.1488%" height="15" fill="rgb(206,143,44)" fg:x="1229983724" fg:w="2508685"/><text x="73.2172%" y="2623.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::mark_dirty (2,343,429 samples, 0.14%)</title><rect x="73.1160%" y="2885" width="0.1390%" height="15" fill="rgb(236,136,36)" fg:x="1232492409" fg:w="2343429"/><text x="73.3660%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;css_bitvector_compiler::BitVector&gt;&gt; (2,343,429 samples, 0.14%)</title><rect x="73.1160%" y="2869" width="0.1390%" height="15" fill="rgb(249,172,42)" fg:x="1232492409" fg:w="2343429"/><text x="73.3660%" y="2879.50"></text></g><g><title>main::benchmark::extract_path_from_command (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2885" width="0.1416%" height="15" fill="rgb(216,139,23)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2869" width="0.1416%" height="15" fill="rgb(207,166,20)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2879.50"></text></g><g><title>main::benchmark::extract_path_from_command::_{{closure}} (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2853" width="0.1416%" height="15" fill="rgb(210,209,22)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2837" width="0.1416%" height="15" fill="rgb(232,118,20)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2821" width="0.1416%" height="15" fill="rgb(238,113,42)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2805" width="0.1416%" height="15" fill="rgb(231,42,5)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2789" width="0.1416%" height="15" fill="rgb(243,166,24)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2773" width="0.1416%" height="15" fill="rgb(237,226,12)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2757" width="0.1416%" height="15" fill="rgb(229,133,24)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2741" width="0.1416%" height="15" fill="rgb(238,33,43)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2725" width="0.1416%" height="15" fill="rgb(227,59,38)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2709" width="0.1416%" height="15" fill="rgb(230,97,0)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2693" width="0.1416%" height="15" fill="rgb(250,173,50)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2677" width="0.1416%" height="15" fill="rgb(240,15,50)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2687.50"></text></g><g><title>alloc::alloc::alloc (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2661" width="0.1416%" height="15" fill="rgb(221,93,22)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2671.50"></text></g><g><title>malloc (2,387,492 samples, 0.14%)</title><rect x="73.2550%" y="2645" width="0.1416%" height="15" fill="rgb(245,180,53)" fg:x="1234835838" fg:w="2387492"/><text x="73.5050%" y="2655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2725" width="0.1013%" height="15" fill="rgb(231,88,51)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2709" width="0.1013%" height="15" fill="rgb(240,58,21)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2693" width="0.1013%" height="15" fill="rgb(237,21,10)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2703.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2677" width="0.1013%" height="15" fill="rgb(218,43,11)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2661" width="0.1013%" height="15" fill="rgb(218,221,29)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2645" width="0.1013%" height="15" fill="rgb(214,118,42)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2629" width="0.1013%" height="15" fill="rgb(251,200,26)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2613" width="0.1013%" height="15" fill="rgb(237,101,39)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2597" width="0.1013%" height="15" fill="rgb(251,117,11)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2607.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2581" width="0.1013%" height="15" fill="rgb(216,223,23)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2591.50"></text></g><g><title>main::benchmark::json_to_html_node::_{{closure}} (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2565" width="0.1013%" height="15" fill="rgb(251,54,12)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2575.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2549" width="0.1013%" height="15" fill="rgb(254,176,54)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2559.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2533" width="0.1013%" height="15" fill="rgb(210,32,8)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2543.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2517" width="0.1013%" height="15" fill="rgb(235,52,38)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2527.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2501" width="0.1013%" height="15" fill="rgb(231,4,44)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2511.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2485" width="0.1013%" height="15" fill="rgb(249,2,32)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2469" width="0.1013%" height="15" fill="rgb(224,65,26)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2453" width="0.1013%" height="15" fill="rgb(250,73,40)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2463.50"></text></g><g><title>alloc::slice::hack::to_vec (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2437" width="0.1013%" height="15" fill="rgb(253,177,16)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2421" width="0.1013%" height="15" fill="rgb(217,32,34)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2405" width="0.1013%" height="15" fill="rgb(212,7,10)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2389" width="0.1013%" height="15" fill="rgb(245,89,8)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2373" width="0.1013%" height="15" fill="rgb(237,16,53)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2357" width="0.1013%" height="15" fill="rgb(250,204,30)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2341" width="0.1013%" height="15" fill="rgb(208,77,27)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2325" width="0.1013%" height="15" fill="rgb(250,204,28)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2335.50"></text></g><g><title>alloc::alloc::alloc (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2309" width="0.1013%" height="15" fill="rgb(244,63,21)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2319.50"></text></g><g><title>malloc (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2293" width="0.1013%" height="15" fill="rgb(236,85,44)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2303.50"></text></g><g><title>[libc.so.6] (1,707,802 samples, 0.10%)</title><rect x="73.3967%" y="2277" width="0.1013%" height="15" fill="rgb(215,98,4)" fg:x="1237223330" fg:w="1707802"/><text x="73.6467%" y="2287.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (1,667,712 samples, 0.10%)</title><rect x="73.4980%" y="2709" width="0.0989%" height="15" fill="rgb(235,38,11)" fg:x="1238931132" fg:w="1667712"/><text x="73.7480%" y="2719.50"></text></g><g><title>css_bitvector_compiler::BitVector::new (1,667,712 samples, 0.10%)</title><rect x="73.4980%" y="2693" width="0.0989%" height="15" fill="rgb(254,186,25)" fg:x="1238931132" fg:w="1667712"/><text x="73.7480%" y="2703.50"></text></g><g><title>alloc::vec::from_elem (1,667,712 samples, 0.10%)</title><rect x="73.4980%" y="2677" width="0.0989%" height="15" fill="rgb(225,55,31)" fg:x="1238931132" fg:w="1667712"/><text x="73.7480%" y="2687.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,667,712 samples, 0.10%)</title><rect x="73.4980%" y="2661" width="0.0989%" height="15" fill="rgb(211,15,21)" fg:x="1238931132" fg:w="1667712"/><text x="73.7480%" y="2671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,667,712 samples, 0.10%)</title><rect x="73.4980%" y="2645" width="0.0989%" height="15" fill="rgb(215,187,41)" fg:x="1238931132" fg:w="1667712"/><text x="73.7480%" y="2655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,667,712 samples, 0.10%)</title><rect x="73.4980%" y="2629" width="0.0989%" height="15" fill="rgb(248,69,32)" fg:x="1238931132" fg:w="1667712"/><text x="73.7480%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,667,712 samples, 0.10%)</title><rect x="73.4980%" y="2613" width="0.0989%" height="15" fill="rgb(252,102,52)" fg:x="1238931132" fg:w="1667712"/><text x="73.7480%" y="2623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,667,712 samples, 0.10%)</title><rect x="73.4980%" y="2597" width="0.0989%" height="15" fill="rgb(253,140,32)" fg:x="1238931132" fg:w="1667712"/><text x="73.7480%" y="2607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,667,712 samples, 0.10%)</title><rect x="73.4980%" y="2581" width="0.0989%" height="15" fill="rgb(216,56,42)" fg:x="1238931132" fg:w="1667712"/><text x="73.7480%" y="2591.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,667,712 samples, 0.10%)</title><rect x="73.4980%" y="2565" width="0.0989%" height="15" fill="rgb(216,184,14)" fg:x="1238931132" fg:w="1667712"/><text x="73.7480%" y="2575.50"></text></g><g><title>__rdl_alloc_zeroed (1,667,712 samples, 0.10%)</title><rect x="73.4980%" y="2549" width="0.0989%" height="15" fill="rgb(237,187,27)" fg:x="1238931132" fg:w="1667712"/><text x="73.7480%" y="2559.50"></text></g><g><title>main::benchmark::json_to_html_node (3,112,964 samples, 0.18%)</title><rect x="73.4980%" y="2725" width="0.1847%" height="15" fill="rgb(219,65,3)" fg:x="1238931132" fg:w="3112964"/><text x="73.7480%" y="2735.50"></text></g><g><title>main::benchmark::json_to_html_node (1,445,252 samples, 0.09%)</title><rect x="73.5969%" y="2709" width="0.0857%" height="15" fill="rgb(245,83,25)" fg:x="1240598844" fg:w="1445252"/><text x="73.8469%" y="2719.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,445,252 samples, 0.09%)</title><rect x="73.5969%" y="2693" width="0.0857%" height="15" fill="rgb(214,205,45)" fg:x="1240598844" fg:w="1445252"/><text x="73.8469%" y="2703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,445,252 samples, 0.09%)</title><rect x="73.5969%" y="2677" width="0.0857%" height="15" fill="rgb(241,20,18)" fg:x="1240598844" fg:w="1445252"/><text x="73.8469%" y="2687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,445,252 samples, 0.09%)</title><rect x="73.5969%" y="2661" width="0.0857%" height="15" fill="rgb(232,163,23)" fg:x="1240598844" fg:w="1445252"/><text x="73.8469%" y="2671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,445,252 samples, 0.09%)</title><rect x="73.5969%" y="2645" width="0.0857%" height="15" fill="rgb(214,5,46)" fg:x="1240598844" fg:w="1445252"/><text x="73.8469%" y="2655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,445,252 samples, 0.09%)</title><rect x="73.5969%" y="2629" width="0.0857%" height="15" fill="rgb(229,78,17)" fg:x="1240598844" fg:w="1445252"/><text x="73.8469%" y="2639.50"></text></g><g><title>serde_json::value::Value::as_u64 (1,222,962 samples, 0.07%)</title><rect x="73.6826%" y="2725" width="0.0726%" height="15" fill="rgb(248,89,10)" fg:x="1242044096" fg:w="1222962"/><text x="73.9326%" y="2735.50"></text></g><g><title>main::benchmark::json_to_html_node (7,564,081 samples, 0.45%)</title><rect x="73.3967%" y="2885" width="0.4487%" height="15" fill="rgb(248,54,15)" fg:x="1237223330" fg:w="7564081"/><text x="73.6467%" y="2895.50"></text></g><g><title>main::benchmark::json_to_html_node (7,564,081 samples, 0.45%)</title><rect x="73.3967%" y="2869" width="0.4487%" height="15" fill="rgb(223,116,6)" fg:x="1237223330" fg:w="7564081"/><text x="73.6467%" y="2879.50"></text></g><g><title>main::benchmark::json_to_html_node (7,564,081 samples, 0.45%)</title><rect x="73.3967%" y="2853" width="0.4487%" height="15" fill="rgb(205,125,38)" fg:x="1237223330" fg:w="7564081"/><text x="73.6467%" y="2863.50"></text></g><g><title>main::benchmark::json_to_html_node (7,564,081 samples, 0.45%)</title><rect x="73.3967%" y="2837" width="0.4487%" height="15" fill="rgb(251,78,38)" fg:x="1237223330" fg:w="7564081"/><text x="73.6467%" y="2847.50"></text></g><g><title>main::benchmark::json_to_html_node (7,564,081 samples, 0.45%)</title><rect x="73.3967%" y="2821" width="0.4487%" height="15" fill="rgb(253,78,28)" fg:x="1237223330" fg:w="7564081"/><text x="73.6467%" y="2831.50"></text></g><g><title>main::benchmark::json_to_html_node (7,564,081 samples, 0.45%)</title><rect x="73.3967%" y="2805" width="0.4487%" height="15" fill="rgb(209,120,3)" fg:x="1237223330" fg:w="7564081"/><text x="73.6467%" y="2815.50"></text></g><g><title>main::benchmark::json_to_html_node (7,564,081 samples, 0.45%)</title><rect x="73.3967%" y="2789" width="0.4487%" height="15" fill="rgb(238,229,9)" fg:x="1237223330" fg:w="7564081"/><text x="73.6467%" y="2799.50"></text></g><g><title>main::benchmark::json_to_html_node (7,564,081 samples, 0.45%)</title><rect x="73.3967%" y="2773" width="0.4487%" height="15" fill="rgb(253,159,18)" fg:x="1237223330" fg:w="7564081"/><text x="73.6467%" y="2783.50"></text></g><g><title>main::benchmark::json_to_html_node (7,564,081 samples, 0.45%)</title><rect x="73.3967%" y="2757" width="0.4487%" height="15" fill="rgb(244,42,34)" fg:x="1237223330" fg:w="7564081"/><text x="73.6467%" y="2767.50"></text></g><g><title>main::benchmark::json_to_html_node (7,564,081 samples, 0.45%)</title><rect x="73.3967%" y="2741" width="0.4487%" height="15" fill="rgb(224,8,7)" fg:x="1237223330" fg:w="7564081"/><text x="73.6467%" y="2751.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,520,353 samples, 0.09%)</title><rect x="73.7552%" y="2725" width="0.0902%" height="15" fill="rgb(210,201,45)" fg:x="1243267058" fg:w="1520353"/><text x="74.0052%" y="2735.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,520,353 samples, 0.09%)</title><rect x="73.7552%" y="2709" width="0.0902%" height="15" fill="rgb(252,185,21)" fg:x="1243267058" fg:w="1520353"/><text x="74.0052%" y="2719.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,520,353 samples, 0.09%)</title><rect x="73.7552%" y="2693" width="0.0902%" height="15" fill="rgb(223,131,1)" fg:x="1243267058" fg:w="1520353"/><text x="74.0052%" y="2703.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,520,353 samples, 0.09%)</title><rect x="73.7552%" y="2677" width="0.0902%" height="15" fill="rgb(245,141,16)" fg:x="1243267058" fg:w="1520353"/><text x="74.0052%" y="2687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,520,353 samples, 0.09%)</title><rect x="73.7552%" y="2661" width="0.0902%" height="15" fill="rgb(229,55,45)" fg:x="1243267058" fg:w="1520353"/><text x="74.0052%" y="2671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,520,353 samples, 0.09%)</title><rect x="73.7552%" y="2645" width="0.0902%" height="15" fill="rgb(208,92,15)" fg:x="1243267058" fg:w="1520353"/><text x="74.0052%" y="2655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,520,353 samples, 0.09%)</title><rect x="73.7552%" y="2629" width="0.0902%" height="15" fill="rgb(234,185,47)" fg:x="1243267058" fg:w="1520353"/><text x="74.0052%" y="2639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,520,353 samples, 0.09%)</title><rect x="73.7552%" y="2613" width="0.0902%" height="15" fill="rgb(253,104,50)" fg:x="1243267058" fg:w="1520353"/><text x="74.0052%" y="2623.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,520,353 samples, 0.09%)</title><rect x="73.7552%" y="2597" width="0.0902%" height="15" fill="rgb(205,70,7)" fg:x="1243267058" fg:w="1520353"/><text x="74.0052%" y="2607.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,520,353 samples, 0.09%)</title><rect x="73.7552%" y="2581" width="0.0902%" height="15" fill="rgb(240,178,43)" fg:x="1243267058" fg:w="1520353"/><text x="74.0052%" y="2591.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,520,353 samples, 0.09%)</title><rect x="73.7552%" y="2565" width="0.0902%" height="15" fill="rgb(214,112,2)" fg:x="1243267058" fg:w="1520353"/><text x="74.0052%" y="2575.50"></text></g><g><title>[libc.so.6] (1,520,353 samples, 0.09%)</title><rect x="73.7552%" y="2549" width="0.0902%" height="15" fill="rgb(206,46,17)" fg:x="1243267058" fg:w="1520353"/><text x="74.0052%" y="2559.50"></text></g><g><title>main::benchmark::apply_frame_modifications (14,077,026 samples, 0.84%)</title><rect x="73.1160%" y="2901" width="0.8351%" height="15" fill="rgb(225,220,16)" fg:x="1232492409" fg:w="14077026"/><text x="73.3660%" y="2911.50"></text></g><g><title>std::io::stdio::_print (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2885" width="0.1057%" height="15" fill="rgb(238,65,40)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2895.50"></text></g><g><title>std::io::stdio::print_to (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2869" width="0.1057%" height="15" fill="rgb(230,151,21)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2879.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2853" width="0.1057%" height="15" fill="rgb(218,58,49)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2863.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2837" width="0.1057%" height="15" fill="rgb(219,179,14)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2847.50"></text></g><g><title>std::io::Write::write_fmt (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2821" width="0.1057%" height="15" fill="rgb(223,72,1)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2831.50"></text></g><g><title>core::fmt::write (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2805" width="0.1057%" height="15" fill="rgb(238,126,10)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2815.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2789" width="0.1057%" height="15" fill="rgb(224,206,38)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2773" width="0.1057%" height="15" fill="rgb(212,201,54)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2783.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2757" width="0.1057%" height="15" fill="rgb(218,154,48)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2767.50"></text></g><g><title>core::fmt::builders::DebugList::entries (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2741" width="0.1057%" height="15" fill="rgb(232,93,24)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2751.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2725" width="0.1057%" height="15" fill="rgb(245,30,21)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2735.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2709" width="0.1057%" height="15" fill="rgb(242,148,29)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2693" width="0.1057%" height="15" fill="rgb(244,153,54)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2703.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with::_{{closure}} (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2677" width="0.1057%" height="15" fill="rgb(252,87,22)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2687.50"></text></g><g><title>core::fmt::Formatter::write_str (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2661" width="0.1057%" height="15" fill="rgb(210,51,29)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2671.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2645" width="0.1057%" height="15" fill="rgb(242,136,47)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2655.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2629" width="0.1057%" height="15" fill="rgb(238,68,4)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2639.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2613" width="0.1057%" height="15" fill="rgb(242,161,30)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2623.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2597" width="0.1057%" height="15" fill="rgb(218,58,44)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2607.50"></text></g><g><title>core::cell::BorrowRefMut::new (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2581" width="0.1057%" height="15" fill="rgb(252,125,32)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2565" width="0.1057%" height="15" fill="rgb(219,178,0)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2549" width="0.1057%" height="15" fill="rgb(213,152,7)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2559.50"></text></g><g><title>core::mem::replace (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2533" width="0.1057%" height="15" fill="rgb(249,109,34)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2543.50"></text></g><g><title>core::ptr::write (1,782,024 samples, 0.11%)</title><rect x="73.8454%" y="2517" width="0.1057%" height="15" fill="rgb(232,96,21)" fg:x="1244787411" fg:w="1782024"/><text x="74.0954%" y="2527.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,209,885 samples, 0.13%)</title><rect x="74.1085%" y="2725" width="0.1311%" height="15" fill="rgb(228,27,39)" fg:x="1249222339" fg:w="2209885"/><text x="74.3585%" y="2735.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (2,209,885 samples, 0.13%)</title><rect x="74.1085%" y="2709" width="0.1311%" height="15" fill="rgb(211,182,52)" fg:x="1249222339" fg:w="2209885"/><text x="74.3585%" y="2719.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (2,209,885 samples, 0.13%)</title><rect x="74.1085%" y="2693" width="0.1311%" height="15" fill="rgb(234,178,38)" fg:x="1249222339" fg:w="2209885"/><text x="74.3585%" y="2703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2,209,885 samples, 0.13%)</title><rect x="74.1085%" y="2677" width="0.1311%" height="15" fill="rgb(221,111,3)" fg:x="1249222339" fg:w="2209885"/><text x="74.3585%" y="2687.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5,516,352 samples, 0.33%)</title><rect x="74.2396%" y="2709" width="0.3273%" height="15" fill="rgb(228,175,21)" fg:x="1251432224" fg:w="5516352"/><text x="74.4896%" y="2719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (5,516,352 samples, 0.33%)</title><rect x="74.2396%" y="2693" width="0.3273%" height="15" fill="rgb(228,174,43)" fg:x="1251432224" fg:w="5516352"/><text x="74.4896%" y="2703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (5,516,352 samples, 0.33%)</title><rect x="74.2396%" y="2677" width="0.3273%" height="15" fill="rgb(211,191,0)" fg:x="1251432224" fg:w="5516352"/><text x="74.4896%" y="2687.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,841,832 samples, 0.17%)</title><rect x="74.5668%" y="2709" width="0.1686%" height="15" fill="rgb(253,117,3)" fg:x="1256948576" fg:w="2841832"/><text x="74.8168%" y="2719.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,446,845 samples, 0.15%)</title><rect x="74.8854%" y="2693" width="0.1452%" height="15" fill="rgb(241,127,19)" fg:x="1262318744" fg:w="2446845"/><text x="75.1354%" y="2703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,446,845 samples, 0.15%)</title><rect x="74.8854%" y="2677" width="0.1452%" height="15" fill="rgb(218,103,12)" fg:x="1262318744" fg:w="2446845"/><text x="75.1354%" y="2687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,446,845 samples, 0.15%)</title><rect x="74.8854%" y="2661" width="0.1452%" height="15" fill="rgb(236,214,43)" fg:x="1262318744" fg:w="2446845"/><text x="75.1354%" y="2671.50"></text></g><g><title>main::benchmark::clear_dirty_flags (28,446,278 samples, 1.69%)</title><rect x="73.9511%" y="2901" width="1.6875%" height="15" fill="rgb(244,144,19)" fg:x="1246569435" fg:w="28446278"/><text x="74.2011%" y="2911.50"></text></g><g><title>main::benchmark::clear_dirty_flags (28,446,278 samples, 1.69%)</title><rect x="73.9511%" y="2885" width="1.6875%" height="15" fill="rgb(246,188,10)" fg:x="1246569435" fg:w="28446278"/><text x="74.2011%" y="2895.50"></text></g><g><title>main::benchmark::clear_dirty_flags (28,446,278 samples, 1.69%)</title><rect x="73.9511%" y="2869" width="1.6875%" height="15" fill="rgb(212,193,33)" fg:x="1246569435" fg:w="28446278"/><text x="74.2011%" y="2879.50"></text></g><g><title>main::benchmark::clear_dirty_flags (28,446,278 samples, 1.69%)</title><rect x="73.9511%" y="2853" width="1.6875%" height="15" fill="rgb(241,51,29)" fg:x="1246569435" fg:w="28446278"/><text x="74.2011%" y="2863.50"></text></g><g><title>main::benchmark::clear_dirty_flags (28,446,278 samples, 1.69%)</title><rect x="73.9511%" y="2837" width="1.6875%" height="15" fill="rgb(211,58,19)" fg:x="1246569435" fg:w="28446278"/><text x="74.2011%" y="2847.50"></text></g><g><title>main::benchmark::clear_dirty_flags (28,446,278 samples, 1.69%)</title><rect x="73.9511%" y="2821" width="1.6875%" height="15" fill="rgb(229,111,26)" fg:x="1246569435" fg:w="28446278"/><text x="74.2011%" y="2831.50"></text></g><g><title>main::benchmark::clear_dirty_flags (28,446,278 samples, 1.69%)</title><rect x="73.9511%" y="2805" width="1.6875%" height="15" fill="rgb(213,115,40)" fg:x="1246569435" fg:w="28446278"/><text x="74.2011%" y="2815.50"></text></g><g><title>main::benchmark::clear_dirty_flags (28,446,278 samples, 1.69%)</title><rect x="73.9511%" y="2789" width="1.6875%" height="15" fill="rgb(209,56,44)" fg:x="1246569435" fg:w="28446278"/><text x="74.2011%" y="2799.50"></text></g><g><title>main::benchmark::clear_dirty_flags (25,793,374 samples, 1.53%)</title><rect x="74.1085%" y="2773" width="1.5302%" height="15" fill="rgb(230,108,32)" fg:x="1249222339" fg:w="25793374"/><text x="74.3585%" y="2783.50"></text></g><g><title>main::benchmark::clear_dirty_flags (25,793,374 samples, 1.53%)</title><rect x="74.1085%" y="2757" width="1.5302%" height="15" fill="rgb(216,165,31)" fg:x="1249222339" fg:w="25793374"/><text x="74.3585%" y="2767.50"></text></g><g><title>main::benchmark::clear_dirty_flags (25,793,374 samples, 1.53%)</title><rect x="74.1085%" y="2741" width="1.5302%" height="15" fill="rgb(218,122,21)" fg:x="1249222339" fg:w="25793374"/><text x="74.3585%" y="2751.50"></text></g><g><title>main::benchmark::clear_dirty_flags (23,583,489 samples, 1.40%)</title><rect x="74.2396%" y="2725" width="1.3991%" height="15" fill="rgb(223,224,47)" fg:x="1251432224" fg:w="23583489"/><text x="74.4896%" y="2735.50"></text></g><g><title>main::benchmark::clear_dirty_flags (15,225,305 samples, 0.90%)</title><rect x="74.7354%" y="2709" width="0.9032%" height="15" fill="rgb(238,102,44)" fg:x="1259790408" fg:w="15225305"/><text x="74.9854%" y="2719.50"></text></g><g><title>main::benchmark::clear_dirty_flags (10,250,124 samples, 0.61%)</title><rect x="75.0306%" y="2693" width="0.6081%" height="15" fill="rgb(236,46,40)" fg:x="1264765589" fg:w="10250124"/><text x="75.2806%" y="2703.50"></text></g><g><title>main::benchmark::clear_dirty_flags (7,409,180 samples, 0.44%)</title><rect x="75.1991%" y="2677" width="0.4395%" height="15" fill="rgb(247,202,50)" fg:x="1267606533" fg:w="7409180"/><text x="75.4491%" y="2687.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,708,650 samples, 0.16%)</title><rect x="75.4779%" y="2661" width="0.1607%" height="15" fill="rgb(209,99,20)" fg:x="1272307063" fg:w="2708650"/><text x="75.7279%" y="2671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,708,650 samples, 0.16%)</title><rect x="75.4779%" y="2645" width="0.1607%" height="15" fill="rgb(252,27,34)" fg:x="1272307063" fg:w="2708650"/><text x="75.7279%" y="2655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,708,650 samples, 0.16%)</title><rect x="75.4779%" y="2629" width="0.1607%" height="15" fill="rgb(215,206,23)" fg:x="1272307063" fg:w="2708650"/><text x="75.7279%" y="2639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4,500,248 samples, 0.27%)</title><rect x="75.7851%" y="1765" width="0.2670%" height="15" fill="rgb(212,135,36)" fg:x="1277485322" fg:w="4500248"/><text x="76.0351%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (4,500,248 samples, 0.27%)</title><rect x="75.7851%" y="1749" width="0.2670%" height="15" fill="rgb(240,189,1)" fg:x="1277485322" fg:w="4500248"/><text x="76.0351%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,861,985 samples, 0.17%)</title><rect x="76.0521%" y="1653" width="0.1698%" height="15" fill="rgb(242,56,20)" fg:x="1281985570" fg:w="2861985"/><text x="76.3021%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,861,985 samples, 0.17%)</title><rect x="76.0521%" y="1637" width="0.1698%" height="15" fill="rgb(247,132,33)" fg:x="1281985570" fg:w="2861985"/><text x="76.3021%" y="1647.50"></text></g><g><title>main::benchmark::count_nodes (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2901" width="0.7458%" height="15" fill="rgb(208,149,11)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2885" width="0.7458%" height="15" fill="rgb(211,33,11)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2895.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2869" width="0.7458%" height="15" fill="rgb(221,29,38)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2853" width="0.7458%" height="15" fill="rgb(206,182,49)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2837" width="0.7458%" height="15" fill="rgb(216,140,1)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2847.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2821" width="0.7458%" height="15" fill="rgb(232,57,40)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2831.50"></text></g><g><title>core::ops::function::FnMut::call_mut (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2805" width="0.7458%" height="15" fill="rgb(224,186,18)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2815.50"></text></g><g><title>main::benchmark::count_nodes (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2789" width="0.7458%" height="15" fill="rgb(215,121,11)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2773" width="0.7458%" height="15" fill="rgb(245,147,10)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2783.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2757" width="0.7458%" height="15" fill="rgb(238,153,13)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2741" width="0.7458%" height="15" fill="rgb(233,108,0)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2725" width="0.7458%" height="15" fill="rgb(212,157,17)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2735.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2709" width="0.7458%" height="15" fill="rgb(225,213,38)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2719.50"></text></g><g><title>core::ops::function::FnMut::call_mut (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2693" width="0.7458%" height="15" fill="rgb(248,16,11)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2703.50"></text></g><g><title>main::benchmark::count_nodes (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2677" width="0.7458%" height="15" fill="rgb(241,33,4)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2661" width="0.7458%" height="15" fill="rgb(222,26,43)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2671.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2645" width="0.7458%" height="15" fill="rgb(243,29,36)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2629" width="0.7458%" height="15" fill="rgb(241,9,27)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2613" width="0.7458%" height="15" fill="rgb(205,117,26)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2623.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2597" width="0.7458%" height="15" fill="rgb(209,80,39)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2581" width="0.7458%" height="15" fill="rgb(239,155,6)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2591.50"></text></g><g><title>main::benchmark::count_nodes (12,572,329 samples, 0.75%)</title><rect x="75.6386%" y="2565" width="0.7458%" height="15" fill="rgb(212,104,12)" fg:x="1275015713" fg:w="12572329"/><text x="75.8886%" y="2575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2549" width="0.5993%" height="15" fill="rgb(234,204,3)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2559.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2533" width="0.5993%" height="15" fill="rgb(251,218,7)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2517" width="0.5993%" height="15" fill="rgb(221,81,32)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2501" width="0.5993%" height="15" fill="rgb(214,152,26)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2511.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2485" width="0.5993%" height="15" fill="rgb(223,22,3)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2469" width="0.5993%" height="15" fill="rgb(207,174,7)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2479.50"></text></g><g><title>main::benchmark::count_nodes (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2453" width="0.5993%" height="15" fill="rgb(224,19,52)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2437" width="0.5993%" height="15" fill="rgb(228,24,14)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2447.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2421" width="0.5993%" height="15" fill="rgb(230,153,43)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2405" width="0.5993%" height="15" fill="rgb(231,106,12)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2389" width="0.5993%" height="15" fill="rgb(215,92,2)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2399.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2373" width="0.5993%" height="15" fill="rgb(249,143,25)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2357" width="0.5993%" height="15" fill="rgb(252,7,35)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2367.50"></text></g><g><title>main::benchmark::count_nodes (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2341" width="0.5993%" height="15" fill="rgb(216,69,40)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2325" width="0.5993%" height="15" fill="rgb(240,36,33)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2335.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2309" width="0.5993%" height="15" fill="rgb(231,128,14)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2293" width="0.5993%" height="15" fill="rgb(245,143,14)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2277" width="0.5993%" height="15" fill="rgb(222,130,28)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2287.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2261" width="0.5993%" height="15" fill="rgb(212,10,48)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2271.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2245" width="0.5993%" height="15" fill="rgb(254,118,45)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2255.50"></text></g><g><title>main::benchmark::count_nodes (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2229" width="0.5993%" height="15" fill="rgb(228,6,45)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2213" width="0.5993%" height="15" fill="rgb(241,18,35)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2223.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2197" width="0.5993%" height="15" fill="rgb(227,214,53)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2181" width="0.5993%" height="15" fill="rgb(224,107,51)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2165" width="0.5993%" height="15" fill="rgb(248,60,28)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2175.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2149" width="0.5993%" height="15" fill="rgb(249,101,23)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2159.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2133" width="0.5993%" height="15" fill="rgb(228,51,19)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2143.50"></text></g><g><title>main::benchmark::count_nodes (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2117" width="0.5993%" height="15" fill="rgb(213,20,6)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2101" width="0.5993%" height="15" fill="rgb(212,124,10)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2111.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2085" width="0.5993%" height="15" fill="rgb(248,3,40)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2095.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2069" width="0.5993%" height="15" fill="rgb(223,178,23)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2079.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2053" width="0.5993%" height="15" fill="rgb(240,132,45)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2063.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2037" width="0.5993%" height="15" fill="rgb(245,164,36)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2047.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2021" width="0.5993%" height="15" fill="rgb(231,188,53)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2031.50"></text></g><g><title>main::benchmark::count_nodes (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="2005" width="0.5993%" height="15" fill="rgb(237,198,39)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="2015.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="1989" width="0.5993%" height="15" fill="rgb(223,120,35)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="1999.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="1973" width="0.5993%" height="15" fill="rgb(253,107,49)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="1957" width="0.5993%" height="15" fill="rgb(216,44,31)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="1967.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="1941" width="0.5993%" height="15" fill="rgb(253,87,21)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="1951.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="1925" width="0.5993%" height="15" fill="rgb(226,18,2)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="1935.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="1909" width="0.5993%" height="15" fill="rgb(216,8,46)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="1919.50"></text></g><g><title>main::benchmark::count_nodes (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="1893" width="0.5993%" height="15" fill="rgb(226,140,39)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="1903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="1877" width="0.5993%" height="15" fill="rgb(221,194,54)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="1887.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="1861" width="0.5993%" height="15" fill="rgb(213,92,11)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="1845" width="0.5993%" height="15" fill="rgb(229,162,46)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="1855.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="1829" width="0.5993%" height="15" fill="rgb(214,111,36)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="1839.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="1813" width="0.5993%" height="15" fill="rgb(207,6,21)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="1823.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="1797" width="0.5993%" height="15" fill="rgb(213,127,38)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="1807.50"></text></g><g><title>main::benchmark::count_nodes (10,102,720 samples, 0.60%)</title><rect x="75.7851%" y="1781" width="0.5993%" height="15" fill="rgb(238,118,32)" fg:x="1277485322" fg:w="10102720"/><text x="76.0351%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (5,602,472 samples, 0.33%)</title><rect x="76.0521%" y="1765" width="0.3324%" height="15" fill="rgb(240,139,39)" fg:x="1281985570" fg:w="5602472"/><text x="76.3021%" y="1775.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (5,602,472 samples, 0.33%)</title><rect x="76.0521%" y="1749" width="0.3324%" height="15" fill="rgb(235,10,37)" fg:x="1281985570" fg:w="5602472"/><text x="76.3021%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,602,472 samples, 0.33%)</title><rect x="76.0521%" y="1733" width="0.3324%" height="15" fill="rgb(249,171,38)" fg:x="1281985570" fg:w="5602472"/><text x="76.3021%" y="1743.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,602,472 samples, 0.33%)</title><rect x="76.0521%" y="1717" width="0.3324%" height="15" fill="rgb(242,144,32)" fg:x="1281985570" fg:w="5602472"/><text x="76.3021%" y="1727.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (5,602,472 samples, 0.33%)</title><rect x="76.0521%" y="1701" width="0.3324%" height="15" fill="rgb(217,117,21)" fg:x="1281985570" fg:w="5602472"/><text x="76.3021%" y="1711.50"></text></g><g><title>core::ops::function::FnMut::call_mut (5,602,472 samples, 0.33%)</title><rect x="76.0521%" y="1685" width="0.3324%" height="15" fill="rgb(249,87,1)" fg:x="1281985570" fg:w="5602472"/><text x="76.3021%" y="1695.50"></text></g><g><title>main::benchmark::count_nodes (5,602,472 samples, 0.33%)</title><rect x="76.0521%" y="1669" width="0.3324%" height="15" fill="rgb(248,196,48)" fg:x="1281985570" fg:w="5602472"/><text x="76.3021%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1653" width="0.1626%" height="15" fill="rgb(251,206,33)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1663.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1637" width="0.1626%" height="15" fill="rgb(232,141,28)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1621" width="0.1626%" height="15" fill="rgb(209,167,14)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1631.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1605" width="0.1626%" height="15" fill="rgb(225,11,50)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1615.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1589" width="0.1626%" height="15" fill="rgb(209,50,20)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1599.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1573" width="0.1626%" height="15" fill="rgb(212,17,46)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1583.50"></text></g><g><title>main::benchmark::count_nodes (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1557" width="0.1626%" height="15" fill="rgb(216,101,39)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1541" width="0.1626%" height="15" fill="rgb(212,228,48)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1551.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1525" width="0.1626%" height="15" fill="rgb(250,6,50)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1535.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1509" width="0.1626%" height="15" fill="rgb(250,160,48)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1519.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1493" width="0.1626%" height="15" fill="rgb(244,216,33)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1503.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1477" width="0.1626%" height="15" fill="rgb(207,157,5)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1487.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1461" width="0.1626%" height="15" fill="rgb(228,199,8)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1471.50"></text></g><g><title>main::benchmark::count_nodes (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1445" width="0.1626%" height="15" fill="rgb(227,80,20)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1429" width="0.1626%" height="15" fill="rgb(222,9,33)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1439.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1413" width="0.1626%" height="15" fill="rgb(239,44,28)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1397" width="0.1626%" height="15" fill="rgb(249,187,43)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1407.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1381" width="0.1626%" height="15" fill="rgb(216,141,28)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1391.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1365" width="0.1626%" height="15" fill="rgb(230,154,53)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1375.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1349" width="0.1626%" height="15" fill="rgb(227,82,4)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1359.50"></text></g><g><title>main::benchmark::count_nodes (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1333" width="0.1626%" height="15" fill="rgb(220,107,16)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1317" width="0.1626%" height="15" fill="rgb(207,187,2)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1327.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1301" width="0.1626%" height="15" fill="rgb(210,162,52)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1285" width="0.1626%" height="15" fill="rgb(217,216,49)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1295.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1269" width="0.1626%" height="15" fill="rgb(218,146,49)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1279.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1253" width="0.1626%" height="15" fill="rgb(216,55,40)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1263.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1237" width="0.1626%" height="15" fill="rgb(208,196,21)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1247.50"></text></g><g><title>main::benchmark::count_nodes (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1221" width="0.1626%" height="15" fill="rgb(242,117,42)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1205" width="0.1626%" height="15" fill="rgb(210,11,23)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,740,487 samples, 0.16%)</title><rect x="76.2219%" y="1189" width="0.1626%" height="15" fill="rgb(217,110,2)" fg:x="1284847555" fg:w="2740487"/><text x="76.4719%" y="1199.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_node_generated_bitvector_incremental (17,552,458 samples, 1.04%)</title><rect x="76.3845%" y="2853" width="1.0413%" height="15" fill="rgb(229,77,54)" fg:x="1287588042" fg:w="17552458"/><text x="76.6345%" y="2863.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (10,079,356 samples, 0.60%)</title><rect x="76.8278%" y="2837" width="0.5979%" height="15" fill="rgb(218,53,16)" fg:x="1295061144" fg:w="10079356"/><text x="77.0778%" y="2847.50"></text></g><g><title>css_bitvector_compiler::BitVector::with_capacity (2,658,481 samples, 0.16%)</title><rect x="77.4257%" y="2821" width="0.1577%" height="15" fill="rgb(215,38,13)" fg:x="1305140500" fg:w="2658481"/><text x="77.6757%" y="2831.50"></text></g><g><title>alloc::vec::from_elem (2,658,481 samples, 0.16%)</title><rect x="77.4257%" y="2805" width="0.1577%" height="15" fill="rgb(235,42,18)" fg:x="1305140500" fg:w="2658481"/><text x="77.6757%" y="2815.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2,658,481 samples, 0.16%)</title><rect x="77.4257%" y="2789" width="0.1577%" height="15" fill="rgb(219,66,54)" fg:x="1305140500" fg:w="2658481"/><text x="77.6757%" y="2799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (2,658,481 samples, 0.16%)</title><rect x="77.4257%" y="2773" width="0.1577%" height="15" fill="rgb(222,205,4)" fg:x="1305140500" fg:w="2658481"/><text x="77.6757%" y="2783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (2,658,481 samples, 0.16%)</title><rect x="77.4257%" y="2757" width="0.1577%" height="15" fill="rgb(227,213,46)" fg:x="1305140500" fg:w="2658481"/><text x="77.6757%" y="2767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,658,481 samples, 0.16%)</title><rect x="77.4257%" y="2741" width="0.1577%" height="15" fill="rgb(250,145,42)" fg:x="1305140500" fg:w="2658481"/><text x="77.6757%" y="2751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (2,658,481 samples, 0.16%)</title><rect x="77.4257%" y="2725" width="0.1577%" height="15" fill="rgb(219,15,2)" fg:x="1305140500" fg:w="2658481"/><text x="77.6757%" y="2735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,658,481 samples, 0.16%)</title><rect x="77.4257%" y="2709" width="0.1577%" height="15" fill="rgb(231,181,52)" fg:x="1305140500" fg:w="2658481"/><text x="77.6757%" y="2719.50"></text></g><g><title>alloc::alloc::alloc_zeroed (2,658,481 samples, 0.16%)</title><rect x="77.4257%" y="2693" width="0.1577%" height="15" fill="rgb(235,1,42)" fg:x="1305140500" fg:w="2658481"/><text x="77.6757%" y="2703.50"></text></g><g><title>__libc_calloc (2,658,481 samples, 0.16%)</title><rect x="77.4257%" y="2677" width="0.1577%" height="15" fill="rgb(249,88,27)" fg:x="1305140500" fg:w="2658481"/><text x="77.6757%" y="2687.50"></text></g><g><title>[libc.so.6] (2,658,481 samples, 0.16%)</title><rect x="77.4257%" y="2661" width="0.1577%" height="15" fill="rgb(235,145,16)" fg:x="1305140500" fg:w="2658481"/><text x="77.6757%" y="2671.50"></text></g><g><title>[libc.so.6] (2,658,481 samples, 0.16%)</title><rect x="77.4257%" y="2645" width="0.1577%" height="15" fill="rgb(237,114,19)" fg:x="1305140500" fg:w="2658481"/><text x="77.6757%" y="2655.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,637,463 samples, 0.16%)</title><rect x="77.5835%" y="2789" width="0.1565%" height="15" fill="rgb(238,51,50)" fg:x="1307798981" fg:w="2637463"/><text x="77.8335%" y="2799.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,637,463 samples, 0.16%)</title><rect x="77.5835%" y="2773" width="0.1565%" height="15" fill="rgb(205,194,25)" fg:x="1307798981" fg:w="2637463"/><text x="77.8335%" y="2783.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,637,463 samples, 0.16%)</title><rect x="77.5835%" y="2757" width="0.1565%" height="15" fill="rgb(215,203,17)" fg:x="1307798981" fg:w="2637463"/><text x="77.8335%" y="2767.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,637,463 samples, 0.16%)</title><rect x="77.5835%" y="2741" width="0.1565%" height="15" fill="rgb(233,112,49)" fg:x="1307798981" fg:w="2637463"/><text x="77.8335%" y="2751.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,637,463 samples, 0.16%)</title><rect x="77.5835%" y="2725" width="0.1565%" height="15" fill="rgb(241,130,26)" fg:x="1307798981" fg:w="2637463"/><text x="77.8335%" y="2735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,929,875 samples, 0.17%)</title><rect x="78.2225%" y="2645" width="0.1738%" height="15" fill="rgb(252,223,19)" fg:x="1318571390" fg:w="2929875"/><text x="78.4725%" y="2655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7,871,746 samples, 0.47%)</title><rect x="78.0713%" y="2661" width="0.4670%" height="15" fill="rgb(211,95,25)" fg:x="1316022014" fg:w="7871746"/><text x="78.3213%" y="2671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2,392,495 samples, 0.14%)</title><rect x="78.3963%" y="2645" width="0.1419%" height="15" fill="rgb(251,182,27)" fg:x="1321501265" fg:w="2392495"/><text x="78.6463%" y="2655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15,629,176 samples, 0.93%)</title><rect x="78.7076%" y="2645" width="0.9272%" height="15" fill="rgb(238,24,4)" fg:x="1326747927" fg:w="15629176"/><text x="78.9576%" y="2655.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (34,724,172 samples, 2.06%)</title><rect x="77.7399%" y="2709" width="2.0600%" height="15" fill="rgb(224,220,25)" fg:x="1310436444" fg:w="34724172"/><text x="77.9899%" y="2719.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (34,724,172 samples, 2.06%)</title><rect x="77.7399%" y="2693" width="2.0600%" height="15" fill="rgb(239,133,26)" fg:x="1310436444" fg:w="34724172"/><text x="77.9899%" y="2703.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (34,724,172 samples, 2.06%)</title><rect x="77.7399%" y="2677" width="2.0600%" height="15" fill="rgb(211,94,48)" fg:x="1310436444" fg:w="34724172"/><text x="77.9899%" y="2687.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21,266,856 samples, 1.26%)</title><rect x="78.5383%" y="2661" width="1.2616%" height="15" fill="rgb(239,87,6)" fg:x="1323893760" fg:w="21266856"/><text x="78.7883%" y="2671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2,783,513 samples, 0.17%)</title><rect x="79.6348%" y="2645" width="0.1651%" height="15" fill="rgb(227,62,0)" fg:x="1342377103" fg:w="2783513"/><text x="79.8848%" y="2655.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (6,743,239 samples, 0.40%)</title><rect x="79.7999%" y="2709" width="0.4000%" height="15" fill="rgb(211,226,4)" fg:x="1345160616" fg:w="6743239"/><text x="80.0499%" y="2719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5,206,173 samples, 0.31%)</title><rect x="82.7709%" y="2613" width="0.3088%" height="15" fill="rgb(253,38,52)" fg:x="1395242366" fg:w="5206173"/><text x="83.0209%" y="2623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (56,888,415 samples, 3.37%)</title><rect x="80.6896%" y="2629" width="3.3748%" height="15" fill="rgb(229,126,40)" fg:x="1360158957" fg:w="56888415"/><text x="80.9396%" y="2639.50">&lt;co..</text></g><g><title>core::hash::sip::u8to64_le (16,598,833 samples, 0.98%)</title><rect x="83.0798%" y="2613" width="0.9847%" height="15" fill="rgb(229,165,44)" fg:x="1400448539" fg:w="16598833"/><text x="83.3298%" y="2623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,833,056 samples, 0.17%)</title><rect x="83.8964%" y="2597" width="0.1681%" height="15" fill="rgb(247,95,47)" fg:x="1414214316" fg:w="2833056"/><text x="84.1464%" y="2607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5,121,377 samples, 0.30%)</title><rect x="84.9715%" y="2597" width="0.3038%" height="15" fill="rgb(216,140,30)" fg:x="1432337285" fg:w="5121377"/><text x="85.2215%" y="2607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,484,175 samples, 0.15%)</title><rect x="85.1280%" y="2581" width="0.1474%" height="15" fill="rgb(246,214,8)" fg:x="1434974487" fg:w="2484175"/><text x="85.3780%" y="2591.50"></text></g><g><title>core::cmp::min (8,060,080 samples, 0.48%)</title><rect x="85.2753%" y="2597" width="0.4782%" height="15" fill="rgb(227,224,15)" fg:x="1437458662" fg:w="8060080"/><text x="85.5253%" y="2607.50"></text></g><g><title>core::cmp::Ord::min (8,060,080 samples, 0.48%)</title><rect x="85.2753%" y="2581" width="0.4782%" height="15" fill="rgb(233,175,4)" fg:x="1437458662" fg:w="8060080"/><text x="85.5253%" y="2591.50"></text></g><g><title>hashbrown::map::make_hash (142,931,941 samples, 8.48%)</title><rect x="77.7399%" y="2741" width="8.4792%" height="15" fill="rgb(221,66,45)" fg:x="1310436444" fg:w="142931941"/><text x="77.9899%" y="2751.50">hashbrown::m..</text></g><g><title>core::hash::BuildHasher::hash_one (142,931,941 samples, 8.48%)</title><rect x="77.7399%" y="2725" width="8.4792%" height="15" fill="rgb(221,178,18)" fg:x="1310436444" fg:w="142931941"/><text x="77.9899%" y="2735.50">core::hash::..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (101,464,530 samples, 6.02%)</title><rect x="80.1999%" y="2709" width="6.0193%" height="15" fill="rgb(213,81,29)" fg:x="1351903855" fg:w="101464530"/><text x="80.4499%" y="2719.50">core::ha..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (101,464,530 samples, 6.02%)</title><rect x="80.1999%" y="2693" width="6.0193%" height="15" fill="rgb(220,89,49)" fg:x="1351903855" fg:w="101464530"/><text x="80.4499%" y="2703.50">core::ha..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (101,464,530 samples, 6.02%)</title><rect x="80.1999%" y="2677" width="6.0193%" height="15" fill="rgb(227,60,33)" fg:x="1351903855" fg:w="101464530"/><text x="80.4499%" y="2687.50">&lt;std::ha..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (101,464,530 samples, 6.02%)</title><rect x="80.1999%" y="2661" width="6.0193%" height="15" fill="rgb(205,113,12)" fg:x="1351903855" fg:w="101464530"/><text x="80.4499%" y="2671.50">&lt;core::h..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (101,464,530 samples, 6.02%)</title><rect x="80.1999%" y="2645" width="6.0193%" height="15" fill="rgb(211,32,1)" fg:x="1351903855" fg:w="101464530"/><text x="80.4499%" y="2655.50">&lt;core::h..</text></g><g><title>core::hash::Hasher::write_u8 (36,321,013 samples, 2.15%)</title><rect x="84.0645%" y="2629" width="2.1547%" height="15" fill="rgb(246,2,12)" fg:x="1417047372" fg:w="36321013"/><text x="84.3145%" y="2639.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (36,321,013 samples, 2.15%)</title><rect x="84.0645%" y="2613" width="2.1547%" height="15" fill="rgb(243,37,27)" fg:x="1417047372" fg:w="36321013"/><text x="84.3145%" y="2623.50">&lt;..</text></g><g><title>core::hash::sip::u8to64_le (7,849,643 samples, 0.47%)</title><rect x="85.7535%" y="2597" width="0.4657%" height="15" fill="rgb(248,211,31)" fg:x="1445518742" fg:w="7849643"/><text x="86.0035%" y="2607.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (7,601,312 samples, 0.45%)</title><rect x="86.2192%" y="2693" width="0.4509%" height="15" fill="rgb(242,146,47)" fg:x="1453368385" fg:w="7601312"/><text x="86.4692%" y="2703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7,601,312 samples, 0.45%)</title><rect x="86.2192%" y="2677" width="0.4509%" height="15" fill="rgb(206,70,20)" fg:x="1453368385" fg:w="7601312"/><text x="86.4692%" y="2687.50"></text></g><g><title>hashbrown::control::tag::Tag::full (5,696,239 samples, 0.34%)</title><rect x="86.6701%" y="2693" width="0.3379%" height="15" fill="rgb(215,10,51)" fg:x="1460969697" fg:w="5696239"/><text x="86.9201%" y="2703.50"></text></g><g><title>main::benchmark::invoke_bitvector_layout (181,438,612 samples, 10.76%)</title><rect x="76.3845%" y="2901" width="10.7636%" height="15" fill="rgb(243,178,53)" fg:x="1287588042" fg:w="181438612"/><text x="76.6345%" y="2911.50">main::benchmark:..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_bitvector_incremental_with_stats (181,438,612 samples, 10.76%)</title><rect x="76.3845%" y="2885" width="10.7636%" height="15" fill="rgb(233,221,20)" fg:x="1287588042" fg:w="181438612"/><text x="76.6345%" y="2895.50">css_bitvector_co..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_recursive_bitvector_incremental (181,438,612 samples, 10.76%)</title><rect x="76.3845%" y="2869" width="10.7636%" height="15" fill="rgb(218,95,35)" fg:x="1287588042" fg:w="181438612"/><text x="76.6345%" y="2879.50">css_bitvector_co..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_recursive_bitvector_incremental (163,886,154 samples, 9.72%)</title><rect x="77.4257%" y="2853" width="9.7223%" height="15" fill="rgb(229,13,5)" fg:x="1305140500" fg:w="163886154"/><text x="77.6757%" y="2863.50">css_bitvector_..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_node_generated_bitvector_incremental (163,886,154 samples, 9.72%)</title><rect x="77.4257%" y="2837" width="9.7223%" height="15" fill="rgb(252,164,30)" fg:x="1305140500" fg:w="163886154"/><text x="77.6757%" y="2847.50">css_bitvector_..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::matches_class_id (161,227,673 samples, 9.56%)</title><rect x="77.5835%" y="2821" width="9.5646%" height="15" fill="rgb(232,68,36)" fg:x="1307798981" fg:w="161227673"/><text x="77.8335%" y="2831.50">css_bitvector_..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::node_has_class_id (161,227,673 samples, 9.56%)</title><rect x="77.5835%" y="2805" width="9.5646%" height="15" fill="rgb(219,59,54)" fg:x="1307798981" fg:w="161227673"/><text x="77.8335%" y="2815.50">css_bitvector_..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (158,590,210 samples, 9.41%)</title><rect x="77.7399%" y="2789" width="9.4082%" height="15" fill="rgb(250,92,33)" fg:x="1310436444" fg:w="158590210"/><text x="77.9899%" y="2799.50">std::collecti..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (158,590,210 samples, 9.41%)</title><rect x="77.7399%" y="2773" width="9.4082%" height="15" fill="rgb(229,162,54)" fg:x="1310436444" fg:w="158590210"/><text x="77.9899%" y="2783.50">hashbrown::ma..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (158,590,210 samples, 9.41%)</title><rect x="77.7399%" y="2757" width="9.4082%" height="15" fill="rgb(244,114,52)" fg:x="1310436444" fg:w="158590210"/><text x="77.9899%" y="2767.50">hashbrown::ma..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15,658,269 samples, 0.93%)</title><rect x="86.2192%" y="2741" width="0.9289%" height="15" fill="rgb(212,211,43)" fg:x="1453368385" fg:w="15658269"/><text x="86.4692%" y="2751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15,658,269 samples, 0.93%)</title><rect x="86.2192%" y="2725" width="0.9289%" height="15" fill="rgb(226,147,8)" fg:x="1453368385" fg:w="15658269"/><text x="86.4692%" y="2735.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (15,658,269 samples, 0.93%)</title><rect x="86.2192%" y="2709" width="0.9289%" height="15" fill="rgb(226,23,13)" fg:x="1453368385" fg:w="15658269"/><text x="86.4692%" y="2719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (2,360,718 samples, 0.14%)</title><rect x="87.0080%" y="2693" width="0.1400%" height="15" fill="rgb(240,63,4)" fg:x="1466665936" fg:w="2360718"/><text x="87.2580%" y="2703.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (2,360,718 samples, 0.14%)</title><rect x="87.0080%" y="2677" width="0.1400%" height="15" fill="rgb(221,1,32)" fg:x="1466665936" fg:w="2360718"/><text x="87.2580%" y="2687.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2,360,718 samples, 0.14%)</title><rect x="87.0080%" y="2661" width="0.1400%" height="15" fill="rgb(242,117,10)" fg:x="1466665936" fg:w="2360718"/><text x="87.2580%" y="2671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,360,718 samples, 0.14%)</title><rect x="87.0080%" y="2645" width="0.1400%" height="15" fill="rgb(249,172,44)" fg:x="1466665936" fg:w="2360718"/><text x="87.2580%" y="2655.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2,360,718 samples, 0.14%)</title><rect x="87.0080%" y="2629" width="0.1400%" height="15" fill="rgb(244,46,45)" fg:x="1466665936" fg:w="2360718"/><text x="87.2580%" y="2639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,360,718 samples, 0.14%)</title><rect x="87.0080%" y="2613" width="0.1400%" height="15" fill="rgb(206,43,17)" fg:x="1466665936" fg:w="2360718"/><text x="87.2580%" y="2623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (2,360,718 samples, 0.14%)</title><rect x="87.0080%" y="2597" width="0.1400%" height="15" fill="rgb(239,218,39)" fg:x="1466665936" fg:w="2360718"/><text x="87.2580%" y="2607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2,360,718 samples, 0.14%)</title><rect x="87.0080%" y="2581" width="0.1400%" height="15" fill="rgb(208,169,54)" fg:x="1466665936" fg:w="2360718"/><text x="87.2580%" y="2591.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (11,617,485 samples, 0.69%)</title><rect x="87.1481%" y="2837" width="0.6892%" height="15" fill="rgb(247,25,42)" fg:x="1469026654" fg:w="11617485"/><text x="87.3981%" y="2847.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_incremental (15,661,584 samples, 0.93%)</title><rect x="87.1481%" y="2853" width="0.9291%" height="15" fill="rgb(226,23,31)" fg:x="1469026654" fg:w="15661584"/><text x="87.3981%" y="2863.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::matches_class_id (4,044,099 samples, 0.24%)</title><rect x="87.8373%" y="2837" width="0.2399%" height="15" fill="rgb(247,16,28)" fg:x="1480644139" fg:w="4044099"/><text x="88.0873%" y="2847.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::node_has_class_id (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2821" width="0.1009%" height="15" fill="rgb(231,147,38)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2831.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::get_string_to_id_map (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2805" width="0.1009%" height="15" fill="rgb(253,81,48)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2815.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2789" width="0.1009%" height="15" fill="rgb(249,222,43)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2799.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2773" width="0.1009%" height="15" fill="rgb(221,3,27)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2783.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_from_scratch (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2757" width="0.1009%" height="15" fill="rgb(228,180,5)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2767.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_from_scratch (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2741" width="0.1009%" height="15" fill="rgb(227,131,42)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2751.50"></text></g><g><title>std::sync::poison::once::Once::call_once_force::_{{closure}} (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2725" width="0.1009%" height="15" fill="rgb(212,3,39)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2735.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::initialize::_{{closure}} (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2709" width="0.1009%" height="15" fill="rgb(226,45,5)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2719.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init::_{{closure}} (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2693" width="0.1009%" height="15" fill="rgb(215,167,45)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2703.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::get_string_to_id_map::_{{closure}} (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2677" width="0.1009%" height="15" fill="rgb(250,218,53)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2661" width="0.1009%" height="15" fill="rgb(207,140,0)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2645" width="0.1009%" height="15" fill="rgb(238,133,51)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2629" width="0.1009%" height="15" fill="rgb(218,203,53)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2613" width="0.1009%" height="15" fill="rgb(226,184,25)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2597" width="0.1009%" height="15" fill="rgb(231,121,21)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2607.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_from_scratch (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2581" width="0.1009%" height="15" fill="rgb(251,14,34)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2565" width="0.1009%" height="15" fill="rgb(249,193,11)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2549" width="0.1009%" height="15" fill="rgb(220,172,37)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2533" width="0.1009%" height="15" fill="rgb(231,229,43)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2517" width="0.1009%" height="15" fill="rgb(250,161,5)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2527.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2501" width="0.1009%" height="15" fill="rgb(218,225,18)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2485" width="0.1009%" height="15" fill="rgb(245,45,42)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2469" width="0.1009%" height="15" fill="rgb(211,115,1)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,700,814 samples, 0.10%)</title><rect x="87.9763%" y="2453" width="0.1009%" height="15" fill="rgb(248,133,52)" fg:x="1482987424" fg:w="1700814"/><text x="88.2263%" y="2463.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,507,033 samples, 0.15%)</title><rect x="88.0772%" y="2789" width="0.1487%" height="15" fill="rgb(238,100,21)" fg:x="1484688238" fg:w="2507033"/><text x="88.3272%" y="2799.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,507,033 samples, 0.15%)</title><rect x="88.0772%" y="2773" width="0.1487%" height="15" fill="rgb(247,144,11)" fg:x="1484688238" fg:w="2507033"/><text x="88.3272%" y="2783.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,507,033 samples, 0.15%)</title><rect x="88.0772%" y="2757" width="0.1487%" height="15" fill="rgb(206,164,16)" fg:x="1484688238" fg:w="2507033"/><text x="88.3272%" y="2767.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,507,033 samples, 0.15%)</title><rect x="88.0772%" y="2741" width="0.1487%" height="15" fill="rgb(222,34,3)" fg:x="1484688238" fg:w="2507033"/><text x="88.3272%" y="2751.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,507,033 samples, 0.15%)</title><rect x="88.0772%" y="2725" width="0.1487%" height="15" fill="rgb(248,82,4)" fg:x="1484688238" fg:w="2507033"/><text x="88.3272%" y="2735.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2,507,033 samples, 0.15%)</title><rect x="88.0772%" y="2709" width="0.1487%" height="15" fill="rgb(228,81,46)" fg:x="1484688238" fg:w="2507033"/><text x="88.3272%" y="2719.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2,507,033 samples, 0.15%)</title><rect x="88.0772%" y="2693" width="0.1487%" height="15" fill="rgb(227,67,47)" fg:x="1484688238" fg:w="2507033"/><text x="88.3272%" y="2703.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (2,507,033 samples, 0.15%)</title><rect x="88.0772%" y="2677" width="0.1487%" height="15" fill="rgb(215,93,53)" fg:x="1484688238" fg:w="2507033"/><text x="88.3272%" y="2687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5,334,666 samples, 0.32%)</title><rect x="88.9516%" y="2645" width="0.3165%" height="15" fill="rgb(248,194,39)" fg:x="1499428147" fg:w="5334666"/><text x="89.2016%" y="2655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13,912,396 samples, 0.83%)</title><rect x="88.6868%" y="2661" width="0.8253%" height="15" fill="rgb(215,5,19)" fg:x="1494964156" fg:w="13912396"/><text x="88.9368%" y="2671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,113,739 samples, 0.24%)</title><rect x="89.2681%" y="2645" width="0.2440%" height="15" fill="rgb(226,215,51)" fg:x="1504762813" fg:w="4113739"/><text x="89.5181%" y="2655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12,894,645 samples, 0.76%)</title><rect x="89.9913%" y="2645" width="0.7650%" height="15" fill="rgb(225,56,26)" fg:x="1516953441" fg:w="12894645"/><text x="90.2413%" y="2655.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (45,256,377 samples, 2.68%)</title><rect x="88.5338%" y="2709" width="2.6848%" height="15" fill="rgb(222,75,29)" fg:x="1492385066" fg:w="45256377"/><text x="88.7838%" y="2719.50">&lt;s..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (45,256,377 samples, 2.68%)</title><rect x="88.5338%" y="2693" width="2.6848%" height="15" fill="rgb(236,139,6)" fg:x="1492385066" fg:w="45256377"/><text x="88.7838%" y="2703.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (45,256,377 samples, 2.68%)</title><rect x="88.5338%" y="2677" width="2.6848%" height="15" fill="rgb(223,137,36)" fg:x="1492385066" fg:w="45256377"/><text x="88.7838%" y="2687.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (28,764,891 samples, 1.71%)</title><rect x="89.5121%" y="2661" width="1.7064%" height="15" fill="rgb(226,99,2)" fg:x="1508876552" fg:w="28764891"/><text x="89.7621%" y="2671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7,793,357 samples, 0.46%)</title><rect x="90.7562%" y="2645" width="0.4623%" height="15" fill="rgb(206,133,23)" fg:x="1529848086" fg:w="7793357"/><text x="91.0062%" y="2655.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (7,582,524 samples, 0.45%)</title><rect x="91.2186%" y="2709" width="0.4498%" height="15" fill="rgb(243,173,15)" fg:x="1537641443" fg:w="7582524"/><text x="91.4686%" y="2719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7,872,194 samples, 0.47%)</title><rect x="92.9914%" y="2613" width="0.4670%" height="15" fill="rgb(228,69,28)" fg:x="1567525617" fg:w="7872194"/><text x="93.2414%" y="2623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,437,655 samples, 0.14%)</title><rect x="93.3138%" y="2597" width="0.1446%" height="15" fill="rgb(212,51,22)" fg:x="1572960156" fg:w="2437655"/><text x="93.5638%" y="2607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (38,858,502 samples, 2.31%)</title><rect x="91.9234%" y="2629" width="2.3052%" height="15" fill="rgb(227,113,0)" fg:x="1549523253" fg:w="38858502"/><text x="92.1734%" y="2639.50">&lt;..</text></g><g><title>core::hash::sip::u8to64_le (12,983,944 samples, 0.77%)</title><rect x="93.4584%" y="2613" width="0.7703%" height="15" fill="rgb(252,84,27)" fg:x="1575397811" fg:w="12983944"/><text x="93.7084%" y="2623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5,211,111 samples, 0.31%)</title><rect x="94.9726%" y="2597" width="0.3091%" height="15" fill="rgb(223,145,39)" fg:x="1600921946" fg:w="5211111"/><text x="95.2226%" y="2607.50"></text></g><g><title>core::cmp::min (2,854,092 samples, 0.17%)</title><rect x="95.2817%" y="2597" width="0.1693%" height="15" fill="rgb(239,219,30)" fg:x="1606133057" fg:w="2854092"/><text x="95.5317%" y="2607.50"></text></g><g><title>core::cmp::Ord::min (2,854,092 samples, 0.17%)</title><rect x="95.2817%" y="2581" width="0.1693%" height="15" fill="rgb(224,196,39)" fg:x="1606133057" fg:w="2854092"/><text x="95.5317%" y="2591.50"></text></g><g><title>hashbrown::map::make_hash (132,443,045 samples, 7.86%)</title><rect x="88.2259%" y="2741" width="7.8570%" height="15" fill="rgb(205,35,43)" fg:x="1487195271" fg:w="132443045"/><text x="88.4759%" y="2751.50">hashbrown::..</text></g><g><title>core::hash::BuildHasher::hash_one (129,937,466 samples, 7.71%)</title><rect x="88.3745%" y="2725" width="7.7084%" height="15" fill="rgb(228,201,21)" fg:x="1489700850" fg:w="129937466"/><text x="88.6245%" y="2735.50">core::hash:..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (74,414,349 samples, 4.41%)</title><rect x="91.6684%" y="2709" width="4.4145%" height="15" fill="rgb(237,118,16)" fg:x="1545223967" fg:w="74414349"/><text x="91.9184%" y="2719.50">core:..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (74,414,349 samples, 4.41%)</title><rect x="91.6684%" y="2693" width="4.4145%" height="15" fill="rgb(241,17,19)" fg:x="1545223967" fg:w="74414349"/><text x="91.9184%" y="2703.50">core:..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (74,414,349 samples, 4.41%)</title><rect x="91.6684%" y="2677" width="4.4145%" height="15" fill="rgb(214,10,25)" fg:x="1545223967" fg:w="74414349"/><text x="91.9184%" y="2687.50">&lt;std:..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (74,414,349 samples, 4.41%)</title><rect x="91.6684%" y="2661" width="4.4145%" height="15" fill="rgb(238,37,29)" fg:x="1545223967" fg:w="74414349"/><text x="91.9184%" y="2671.50">&lt;core..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (74,414,349 samples, 4.41%)</title><rect x="91.6684%" y="2645" width="4.4145%" height="15" fill="rgb(253,83,25)" fg:x="1545223967" fg:w="74414349"/><text x="91.9184%" y="2655.50">&lt;core..</text></g><g><title>core::hash::Hasher::write_u8 (31,256,561 samples, 1.85%)</title><rect x="94.2287%" y="2629" width="1.8543%" height="15" fill="rgb(234,192,12)" fg:x="1588381755" fg:w="31256561"/><text x="94.4787%" y="2639.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (31,256,561 samples, 1.85%)</title><rect x="94.2287%" y="2613" width="1.8543%" height="15" fill="rgb(241,216,45)" fg:x="1588381755" fg:w="31256561"/><text x="94.4787%" y="2623.50">&lt;..</text></g><g><title>core::hash::sip::u8to64_le (10,651,167 samples, 0.63%)</title><rect x="95.4511%" y="2597" width="0.6319%" height="15" fill="rgb(242,22,33)" fg:x="1608987149" fg:w="10651167"/><text x="95.7011%" y="2607.50"></text></g><g><title>core::intrinsics::likely (2,887,205 samples, 0.17%)</title><rect x="96.0829%" y="2693" width="0.1713%" height="15" fill="rgb(231,105,49)" fg:x="1619638316" fg:w="2887205"/><text x="96.3329%" y="2703.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (2,198,969 samples, 0.13%)</title><rect x="96.2542%" y="2693" width="0.1305%" height="15" fill="rgb(218,204,15)" fg:x="1622525521" fg:w="2198969"/><text x="96.5042%" y="2703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2,198,969 samples, 0.13%)</title><rect x="96.2542%" y="2677" width="0.1305%" height="15" fill="rgb(235,138,41)" fg:x="1622525521" fg:w="2198969"/><text x="96.5042%" y="2687.50"></text></g><g><title>hashbrown::control::tag::Tag::full (10,915,084 samples, 0.65%)</title><rect x="96.3846%" y="2693" width="0.6475%" height="15" fill="rgb(246,0,9)" fg:x="1624724490" fg:w="10915084"/><text x="96.6346%" y="2703.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::matches_class_id (153,348,603 samples, 9.10%)</title><rect x="88.0772%" y="2821" width="9.0972%" height="15" fill="rgb(210,74,4)" fg:x="1484688238" fg:w="153348603"/><text x="88.3272%" y="2831.50">css_bitvector..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::node_has_class_id (153,348,603 samples, 9.10%)</title><rect x="88.0772%" y="2805" width="9.0972%" height="15" fill="rgb(250,60,41)" fg:x="1484688238" fg:w="153348603"/><text x="88.3272%" y="2815.50">css_bitvector..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (150,841,570 samples, 8.95%)</title><rect x="88.2259%" y="2789" width="8.9485%" height="15" fill="rgb(220,115,12)" fg:x="1487195271" fg:w="150841570"/><text x="88.4759%" y="2799.50">std::collecti..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (150,841,570 samples, 8.95%)</title><rect x="88.2259%" y="2773" width="8.9485%" height="15" fill="rgb(237,100,13)" fg:x="1487195271" fg:w="150841570"/><text x="88.4759%" y="2783.50">hashbrown::ma..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (150,841,570 samples, 8.95%)</title><rect x="88.2259%" y="2757" width="8.9485%" height="15" fill="rgb(213,55,26)" fg:x="1487195271" fg:w="150841570"/><text x="88.4759%" y="2767.50">hashbrown::ma..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (18,398,525 samples, 1.09%)</title><rect x="96.0829%" y="2741" width="1.0915%" height="15" fill="rgb(216,17,4)" fg:x="1619638316" fg:w="18398525"/><text x="96.3329%" y="2751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18,398,525 samples, 1.09%)</title><rect x="96.0829%" y="2725" width="1.0915%" height="15" fill="rgb(220,153,47)" fg:x="1619638316" fg:w="18398525"/><text x="96.3329%" y="2735.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (18,398,525 samples, 1.09%)</title><rect x="96.0829%" y="2709" width="1.0915%" height="15" fill="rgb(215,131,9)" fg:x="1619638316" fg:w="18398525"/><text x="96.3329%" y="2719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (2,397,267 samples, 0.14%)</title><rect x="97.0322%" y="2693" width="0.1422%" height="15" fill="rgb(233,46,42)" fg:x="1635639574" fg:w="2397267"/><text x="97.2822%" y="2703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2,397,267 samples, 0.14%)</title><rect x="97.0322%" y="2677" width="0.1422%" height="15" fill="rgb(226,86,7)" fg:x="1635639574" fg:w="2397267"/><text x="97.2822%" y="2687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2,397,267 samples, 0.14%)</title><rect x="97.0322%" y="2661" width="0.1422%" height="15" fill="rgb(239,226,21)" fg:x="1635639574" fg:w="2397267"/><text x="97.2822%" y="2671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2,397,267 samples, 0.14%)</title><rect x="97.0322%" y="2645" width="0.1422%" height="15" fill="rgb(244,137,22)" fg:x="1635639574" fg:w="2397267"/><text x="97.2822%" y="2655.50"></text></g><g><title>main::benchmark::benchmark_accumulated_modifications (1,401,340,256 samples, 83.13%)</title><rect x="14.2152%" y="2917" width="83.1327%" height="15" fill="rgb(211,139,35)" fg:x="239621757" fg:w="1401340256"/><text x="14.4652%" y="2927.50">main::benchmark::benchmark_accumulated_modifications</text></g><g><title>main::benchmark::invoke_trivector_layout (171,935,359 samples, 10.20%)</title><rect x="87.1481%" y="2901" width="10.1998%" height="15" fill="rgb(214,62,50)" fg:x="1469026654" fg:w="171935359"/><text x="87.3981%" y="2911.50">main::benchmark..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_tree_incremental_with_stats (171,935,359 samples, 10.20%)</title><rect x="87.1481%" y="2885" width="10.1998%" height="15" fill="rgb(212,113,44)" fg:x="1469026654" fg:w="171935359"/><text x="87.3981%" y="2895.50">css_bitvector_c..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_tree_recursive_incremental (171,935,359 samples, 10.20%)</title><rect x="87.1481%" y="2869" width="10.1998%" height="15" fill="rgb(226,150,43)" fg:x="1469026654" fg:w="171935359"/><text x="87.3981%" y="2879.50">css_bitvector_c..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_tree_recursive_incremental (156,273,775 samples, 9.27%)</title><rect x="88.0772%" y="2853" width="9.2707%" height="15" fill="rgb(250,71,37)" fg:x="1484688238" fg:w="156273775"/><text x="88.3272%" y="2863.50">css_bitvector..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_incremental (156,273,775 samples, 9.27%)</title><rect x="88.0772%" y="2837" width="9.2707%" height="15" fill="rgb(219,76,19)" fg:x="1484688238" fg:w="156273775"/><text x="88.3272%" y="2847.50">css_bitvector..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::matches_id_id (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2821" width="0.1735%" height="15" fill="rgb(250,39,11)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2831.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::get_node_id_id (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2805" width="0.1735%" height="15" fill="rgb(230,64,31)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2815.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2789" width="0.1735%" height="15" fill="rgb(208,222,23)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2799.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::get_node_id_id::_{{closure}} (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2773" width="0.1735%" height="15" fill="rgb(227,125,18)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2757" width="0.1735%" height="15" fill="rgb(234,210,9)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2741" width="0.1735%" height="15" fill="rgb(217,127,24)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2725" width="0.1735%" height="15" fill="rgb(239,141,48)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2735.50"></text></g><g><title>hashbrown::map::make_hash (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2709" width="0.1735%" height="15" fill="rgb(227,109,8)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2693" width="0.1735%" height="15" fill="rgb(235,184,23)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2677" width="0.1735%" height="15" fill="rgb(227,226,48)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2661" width="0.1735%" height="15" fill="rgb(206,150,11)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2671.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2645" width="0.1735%" height="15" fill="rgb(254,2,33)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2629" width="0.1735%" height="15" fill="rgb(243,160,20)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2613" width="0.1735%" height="15" fill="rgb(218,208,30)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2597" width="0.1735%" height="15" fill="rgb(224,120,49)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2607.50"></text></g><g><title>core::hash::sip::u8to64_le (2,925,172 samples, 0.17%)</title><rect x="97.1744%" y="2581" width="0.1735%" height="15" fill="rgb(246,12,2)" fg:x="1638036841" fg:w="2925172"/><text x="97.4244%" y="2591.50"></text></g><g><title>main::benchmark::generate_web_layout_csv (3,043,406 samples, 0.18%)</title><rect x="97.3479%" y="2917" width="0.1805%" height="15" fill="rgb(236,117,3)" fg:x="1640962013" fg:w="3043406"/><text x="97.5979%" y="2927.50"></text></g><g><title>alloc::fmt::format (3,043,406 samples, 0.18%)</title><rect x="97.3479%" y="2901" width="0.1805%" height="15" fill="rgb(216,128,52)" fg:x="1640962013" fg:w="3043406"/><text x="97.5979%" y="2911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (3,043,406 samples, 0.18%)</title><rect x="97.3479%" y="2885" width="0.1805%" height="15" fill="rgb(246,145,19)" fg:x="1640962013" fg:w="3043406"/><text x="97.5979%" y="2895.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (3,043,406 samples, 0.18%)</title><rect x="97.3479%" y="2869" width="0.1805%" height="15" fill="rgb(222,11,46)" fg:x="1640962013" fg:w="3043406"/><text x="97.5979%" y="2879.50"></text></g><g><title>alloc::fmt::format::format_inner (3,043,406 samples, 0.18%)</title><rect x="97.3479%" y="2853" width="0.1805%" height="15" fill="rgb(245,82,36)" fg:x="1640962013" fg:w="3043406"/><text x="97.5979%" y="2863.50"></text></g><g><title>core::fmt::Write::write_fmt (3,043,406 samples, 0.18%)</title><rect x="97.3479%" y="2837" width="0.1805%" height="15" fill="rgb(250,73,51)" fg:x="1640962013" fg:w="3043406"/><text x="97.5979%" y="2847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (3,043,406 samples, 0.18%)</title><rect x="97.3479%" y="2821" width="0.1805%" height="15" fill="rgb(221,189,23)" fg:x="1640962013" fg:w="3043406"/><text x="97.5979%" y="2831.50"></text></g><g><title>core::fmt::write (3,043,406 samples, 0.18%)</title><rect x="97.3479%" y="2805" width="0.1805%" height="15" fill="rgb(210,33,7)" fg:x="1640962013" fg:w="3043406"/><text x="97.5979%" y="2815.50"></text></g><g><title>core::fmt::run (3,043,406 samples, 0.18%)</title><rect x="97.3479%" y="2789" width="0.1805%" height="15" fill="rgb(210,107,22)" fg:x="1640962013" fg:w="3043406"/><text x="97.5979%" y="2799.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3,043,406 samples, 0.18%)</title><rect x="97.3479%" y="2773" width="0.1805%" height="15" fill="rgb(222,116,37)" fg:x="1640962013" fg:w="3043406"/><text x="97.5979%" y="2783.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (3,043,406 samples, 0.18%)</title><rect x="97.3479%" y="2757" width="0.1805%" height="15" fill="rgb(254,17,48)" fg:x="1640962013" fg:w="3043406"/><text x="97.5979%" y="2767.50"></text></g><g><title>core::fmt::Formatter::pad_integral (3,043,406 samples, 0.18%)</title><rect x="97.3479%" y="2741" width="0.1805%" height="15" fill="rgb(224,36,32)" fg:x="1640962013" fg:w="3043406"/><text x="97.5979%" y="2751.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,867,411 samples, 0.11%)</title><rect x="97.5540%" y="2821" width="0.1108%" height="15" fill="rgb(232,90,46)" fg:x="1644435451" fg:w="1867411"/><text x="97.8040%" y="2831.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1,867,411 samples, 0.11%)</title><rect x="97.5540%" y="2805" width="0.1108%" height="15" fill="rgb(241,66,40)" fg:x="1644435451" fg:w="1867411"/><text x="97.8040%" y="2815.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,516,526 samples, 0.21%)</title><rect x="97.6648%" y="2773" width="0.2086%" height="15" fill="rgb(249,184,29)" fg:x="1646302862" fg:w="3516526"/><text x="97.9148%" y="2783.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (3,516,526 samples, 0.21%)</title><rect x="97.6648%" y="2757" width="0.2086%" height="15" fill="rgb(231,181,1)" fg:x="1646302862" fg:w="3516526"/><text x="97.9148%" y="2767.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (3,516,526 samples, 0.21%)</title><rect x="97.6648%" y="2741" width="0.2086%" height="15" fill="rgb(224,94,2)" fg:x="1646302862" fg:w="3516526"/><text x="97.9148%" y="2751.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,516,526 samples, 0.21%)</title><rect x="97.6648%" y="2725" width="0.2086%" height="15" fill="rgb(229,170,15)" fg:x="1646302862" fg:w="3516526"/><text x="97.9148%" y="2735.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3,516,526 samples, 0.21%)</title><rect x="97.6648%" y="2709" width="0.2086%" height="15" fill="rgb(240,127,35)" fg:x="1646302862" fg:w="3516526"/><text x="97.9148%" y="2719.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (3,516,526 samples, 0.21%)</title><rect x="97.6648%" y="2693" width="0.2086%" height="15" fill="rgb(248,196,34)" fg:x="1646302862" fg:w="3516526"/><text x="97.9148%" y="2703.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (7,125,675 samples, 0.42%)</title><rect x="97.6648%" y="2789" width="0.4227%" height="15" fill="rgb(236,137,7)" fg:x="1646302862" fg:w="7125675"/><text x="97.9148%" y="2799.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (3,609,149 samples, 0.21%)</title><rect x="97.8734%" y="2773" width="0.2141%" height="15" fill="rgb(235,127,16)" fg:x="1649819388" fg:w="3609149"/><text x="98.1234%" y="2783.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (3,609,149 samples, 0.21%)</title><rect x="97.8734%" y="2757" width="0.2141%" height="15" fill="rgb(250,192,54)" fg:x="1649819388" fg:w="3609149"/><text x="98.1234%" y="2767.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (3,609,149 samples, 0.21%)</title><rect x="97.8734%" y="2741" width="0.2141%" height="15" fill="rgb(218,98,20)" fg:x="1649819388" fg:w="3609149"/><text x="98.1234%" y="2751.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (3,609,149 samples, 0.21%)</title><rect x="97.8734%" y="2725" width="0.2141%" height="15" fill="rgb(230,176,47)" fg:x="1649819388" fg:w="3609149"/><text x="98.1234%" y="2735.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (3,609,149 samples, 0.21%)</title><rect x="97.8734%" y="2709" width="0.2141%" height="15" fill="rgb(244,2,33)" fg:x="1649819388" fg:w="3609149"/><text x="98.1234%" y="2719.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,752,591 samples, 0.10%)</title><rect x="98.0875%" y="2709" width="0.1040%" height="15" fill="rgb(231,100,17)" fg:x="1653428537" fg:w="1752591"/><text x="98.3375%" y="2719.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1,752,591 samples, 0.10%)</title><rect x="98.0875%" y="2693" width="0.1040%" height="15" fill="rgb(245,23,12)" fg:x="1653428537" fg:w="1752591"/><text x="98.3375%" y="2703.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1,752,591 samples, 0.10%)</title><rect x="98.0875%" y="2677" width="0.1040%" height="15" fill="rgb(249,55,22)" fg:x="1653428537" fg:w="1752591"/><text x="98.3375%" y="2687.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,752,591 samples, 0.10%)</title><rect x="98.0875%" y="2661" width="0.1040%" height="15" fill="rgb(207,134,9)" fg:x="1653428537" fg:w="1752591"/><text x="98.3375%" y="2671.50"></text></g><g><title>malloc (1,752,591 samples, 0.10%)</title><rect x="98.0875%" y="2645" width="0.1040%" height="15" fill="rgb(218,134,0)" fg:x="1653428537" fg:w="1752591"/><text x="98.3375%" y="2655.50"></text></g><g><title>[libc.so.6] (1,752,591 samples, 0.10%)</title><rect x="98.0875%" y="2629" width="0.1040%" height="15" fill="rgb(213,212,33)" fg:x="1653428537" fg:w="1752591"/><text x="98.3375%" y="2639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2661" width="0.1070%" height="15" fill="rgb(252,106,18)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2671.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2645" width="0.1070%" height="15" fill="rgb(208,126,42)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2655.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2629" width="0.1070%" height="15" fill="rgb(246,175,29)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2639.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2613" width="0.1070%" height="15" fill="rgb(215,13,50)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2623.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2597" width="0.1070%" height="15" fill="rgb(216,172,15)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2607.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2581" width="0.1070%" height="15" fill="rgb(212,103,13)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2591.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2565" width="0.1070%" height="15" fill="rgb(231,171,36)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2549" width="0.1070%" height="15" fill="rgb(250,123,20)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2533" width="0.1070%" height="15" fill="rgb(212,53,50)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2543.50"></text></g><g><title>alloc::slice::hack::to_vec (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2517" width="0.1070%" height="15" fill="rgb(243,54,12)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2501" width="0.1070%" height="15" fill="rgb(234,101,34)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2485" width="0.1070%" height="15" fill="rgb(254,67,22)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2469" width="0.1070%" height="15" fill="rgb(250,35,47)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2453" width="0.1070%" height="15" fill="rgb(226,126,38)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2437" width="0.1070%" height="15" fill="rgb(216,138,53)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2421" width="0.1070%" height="15" fill="rgb(246,199,43)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2405" width="0.1070%" height="15" fill="rgb(232,125,11)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2415.50"></text></g><g><title>alloc::alloc::alloc (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2389" width="0.1070%" height="15" fill="rgb(218,219,45)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2399.50"></text></g><g><title>malloc (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2373" width="0.1070%" height="15" fill="rgb(216,102,54)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2383.50"></text></g><g><title>[libc.so.6] (1,803,362 samples, 0.11%)</title><rect x="98.1914%" y="2357" width="0.1070%" height="15" fill="rgb(250,228,7)" fg:x="1655181128" fg:w="1803362"/><text x="98.4414%" y="2367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3,668,213 samples, 0.22%)</title><rect x="98.1914%" y="2677" width="0.2176%" height="15" fill="rgb(226,125,25)" fg:x="1655181128" fg:w="3668213"/><text x="98.4414%" y="2687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (1,864,851 samples, 0.11%)</title><rect x="98.2984%" y="2661" width="0.1106%" height="15" fill="rgb(224,165,27)" fg:x="1656984490" fg:w="1864851"/><text x="98.5484%" y="2671.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1,864,851 samples, 0.11%)</title><rect x="98.2984%" y="2645" width="0.1106%" height="15" fill="rgb(233,86,3)" fg:x="1656984490" fg:w="1864851"/><text x="98.5484%" y="2655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (684,666 samples, 0.04%)</title><rect x="98.4091%" y="2613" width="0.0406%" height="15" fill="rgb(228,116,20)" fg:x="1658849341" fg:w="684666"/><text x="98.6591%" y="2623.50"></text></g><g><title>serde::de::MapAccess::next_entry (684,666 samples, 0.04%)</title><rect x="98.4091%" y="2597" width="0.0406%" height="15" fill="rgb(209,192,17)" fg:x="1658849341" fg:w="684666"/><text x="98.6591%" y="2607.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (684,666 samples, 0.04%)</title><rect x="98.4091%" y="2581" width="0.0406%" height="15" fill="rgb(224,88,34)" fg:x="1658849341" fg:w="684666"/><text x="98.6591%" y="2591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (684,666 samples, 0.04%)</title><rect x="98.4091%" y="2565" width="0.0406%" height="15" fill="rgb(233,38,6)" fg:x="1658849341" fg:w="684666"/><text x="98.6591%" y="2575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (684,666 samples, 0.04%)</title><rect x="98.4091%" y="2549" width="0.0406%" height="15" fill="rgb(212,59,30)" fg:x="1658849341" fg:w="684666"/><text x="98.6591%" y="2559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (684,666 samples, 0.04%)</title><rect x="98.4091%" y="2533" width="0.0406%" height="15" fill="rgb(213,80,3)" fg:x="1658849341" fg:w="684666"/><text x="98.6591%" y="2543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (684,666 samples, 0.04%)</title><rect x="98.4091%" y="2517" width="0.0406%" height="15" fill="rgb(251,178,7)" fg:x="1658849341" fg:w="684666"/><text x="98.6591%" y="2527.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (684,666 samples, 0.04%)</title><rect x="98.4091%" y="2501" width="0.0406%" height="15" fill="rgb(213,154,26)" fg:x="1658849341" fg:w="684666"/><text x="98.6591%" y="2511.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (684,666 samples, 0.04%)</title><rect x="98.4091%" y="2485" width="0.0406%" height="15" fill="rgb(238,165,49)" fg:x="1658849341" fg:w="684666"/><text x="98.6591%" y="2495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (684,666 samples, 0.04%)</title><rect x="98.4091%" y="2469" width="0.0406%" height="15" fill="rgb(248,91,46)" fg:x="1658849341" fg:w="684666"/><text x="98.6591%" y="2479.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (684,666 samples, 0.04%)</title><rect x="98.4091%" y="2453" width="0.0406%" height="15" fill="rgb(244,21,52)" fg:x="1658849341" fg:w="684666"/><text x="98.6591%" y="2463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,331,788 samples, 0.08%)</title><rect x="98.4497%" y="949" width="0.0790%" height="15" fill="rgb(247,122,20)" fg:x="1659534007" fg:w="1331788"/><text x="98.6997%" y="959.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,331,788 samples, 0.08%)</title><rect x="98.4497%" y="933" width="0.0790%" height="15" fill="rgb(218,27,9)" fg:x="1659534007" fg:w="1331788"/><text x="98.6997%" y="943.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,331,788 samples, 0.08%)</title><rect x="98.4497%" y="917" width="0.0790%" height="15" fill="rgb(246,7,6)" fg:x="1659534007" fg:w="1331788"/><text x="98.6997%" y="927.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="517" width="0.0938%" height="15" fill="rgb(227,135,54)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="527.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="501" width="0.0938%" height="15" fill="rgb(247,14,11)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="485" width="0.0938%" height="15" fill="rgb(206,149,34)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="469" width="0.0938%" height="15" fill="rgb(227,228,4)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="453" width="0.0938%" height="15" fill="rgb(238,218,28)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="437" width="0.0938%" height="15" fill="rgb(252,86,40)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="421" width="0.0938%" height="15" fill="rgb(251,225,11)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="405" width="0.0938%" height="15" fill="rgb(206,46,49)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="389" width="0.0938%" height="15" fill="rgb(245,128,24)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="373" width="0.0938%" height="15" fill="rgb(219,177,34)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="357" width="0.0938%" height="15" fill="rgb(218,60,48)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="341" width="0.0938%" height="15" fill="rgb(221,11,5)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="325" width="0.0938%" height="15" fill="rgb(220,148,13)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="309" width="0.0938%" height="15" fill="rgb(210,16,3)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="319.50"></text></g><g><title>malloc (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="293" width="0.0938%" height="15" fill="rgb(236,80,2)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="303.50"></text></g><g><title>[libc.so.6] (1,581,236 samples, 0.09%)</title><rect x="98.6269%" y="277" width="0.0938%" height="15" fill="rgb(239,129,19)" fg:x="1662520768" fg:w="1581236"/><text x="98.8769%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,826,119 samples, 0.17%)</title><rect x="98.6269%" y="597" width="0.1677%" height="15" fill="rgb(220,106,35)" fg:x="1662520768" fg:w="2826119"/><text x="98.8769%" y="607.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,826,119 samples, 0.17%)</title><rect x="98.6269%" y="581" width="0.1677%" height="15" fill="rgb(252,139,45)" fg:x="1662520768" fg:w="2826119"/><text x="98.8769%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2,826,119 samples, 0.17%)</title><rect x="98.6269%" y="565" width="0.1677%" height="15" fill="rgb(229,8,36)" fg:x="1662520768" fg:w="2826119"/><text x="98.8769%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,826,119 samples, 0.17%)</title><rect x="98.6269%" y="549" width="0.1677%" height="15" fill="rgb(230,126,33)" fg:x="1662520768" fg:w="2826119"/><text x="98.8769%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,826,119 samples, 0.17%)</title><rect x="98.6269%" y="533" width="0.1677%" height="15" fill="rgb(239,140,21)" fg:x="1662520768" fg:w="2826119"/><text x="98.8769%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,244,883 samples, 0.07%)</title><rect x="98.7207%" y="517" width="0.0739%" height="15" fill="rgb(254,104,9)" fg:x="1664102004" fg:w="1244883"/><text x="98.9707%" y="527.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,244,883 samples, 0.07%)</title><rect x="98.7207%" y="501" width="0.0739%" height="15" fill="rgb(239,52,14)" fg:x="1664102004" fg:w="1244883"/><text x="98.9707%" y="511.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,244,883 samples, 0.07%)</title><rect x="98.7207%" y="485" width="0.0739%" height="15" fill="rgb(208,227,44)" fg:x="1664102004" fg:w="1244883"/><text x="98.9707%" y="495.50"></text></g><g><title>serde::de::MapAccess::next_entry (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1253" width="0.5340%" height="15" fill="rgb(246,18,19)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1263.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1237" width="0.5340%" height="15" fill="rgb(235,228,25)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1247.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1221" width="0.5340%" height="15" fill="rgb(240,156,20)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1231.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1205" width="0.5340%" height="15" fill="rgb(224,8,20)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1215.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1189" width="0.5340%" height="15" fill="rgb(214,12,52)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1199.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1173" width="0.5340%" height="15" fill="rgb(211,220,47)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1183.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1157" width="0.5340%" height="15" fill="rgb(250,173,5)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1167.50"></text></g><g><title>serde::de::SeqAccess::next_element (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1141" width="0.5340%" height="15" fill="rgb(250,125,52)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1151.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1125" width="0.5340%" height="15" fill="rgb(209,133,18)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1135.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1109" width="0.5340%" height="15" fill="rgb(216,173,22)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1119.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1093" width="0.5340%" height="15" fill="rgb(205,3,22)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1103.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1077" width="0.5340%" height="15" fill="rgb(248,22,20)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1087.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1061" width="0.5340%" height="15" fill="rgb(233,6,29)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1071.50"></text></g><g><title>serde::de::MapAccess::next_entry (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1045" width="0.5340%" height="15" fill="rgb(240,22,54)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1055.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1029" width="0.5340%" height="15" fill="rgb(231,133,32)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1039.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="1013" width="0.5340%" height="15" fill="rgb(248,193,4)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1023.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="997" width="0.5340%" height="15" fill="rgb(211,178,46)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="1007.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="981" width="0.5340%" height="15" fill="rgb(224,5,42)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="991.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,000,962 samples, 0.53%)</title><rect x="98.4497%" y="965" width="0.5340%" height="15" fill="rgb(239,176,25)" fg:x="1659534007" fg:w="9000962"/><text x="98.6997%" y="975.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,669,174 samples, 0.45%)</title><rect x="98.5287%" y="949" width="0.4550%" height="15" fill="rgb(245,187,50)" fg:x="1660865795" fg:w="7669174"/><text x="98.7787%" y="959.50"></text></g><g><title>serde::de::SeqAccess::next_element (7,669,174 samples, 0.45%)</title><rect x="98.5287%" y="933" width="0.4550%" height="15" fill="rgb(248,24,15)" fg:x="1660865795" fg:w="7669174"/><text x="98.7787%" y="943.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,669,174 samples, 0.45%)</title><rect x="98.5287%" y="917" width="0.4550%" height="15" fill="rgb(205,166,13)" fg:x="1660865795" fg:w="7669174"/><text x="98.7787%" y="927.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,669,174 samples, 0.45%)</title><rect x="98.5287%" y="901" width="0.4550%" height="15" fill="rgb(208,114,23)" fg:x="1660865795" fg:w="7669174"/><text x="98.7787%" y="911.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,669,174 samples, 0.45%)</title><rect x="98.5287%" y="885" width="0.4550%" height="15" fill="rgb(239,127,18)" fg:x="1660865795" fg:w="7669174"/><text x="98.7787%" y="895.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,669,174 samples, 0.45%)</title><rect x="98.5287%" y="869" width="0.4550%" height="15" fill="rgb(219,154,28)" fg:x="1660865795" fg:w="7669174"/><text x="98.7787%" y="879.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,669,174 samples, 0.45%)</title><rect x="98.5287%" y="853" width="0.4550%" height="15" fill="rgb(225,157,23)" fg:x="1660865795" fg:w="7669174"/><text x="98.7787%" y="863.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,669,174 samples, 0.45%)</title><rect x="98.5287%" y="837" width="0.4550%" height="15" fill="rgb(219,8,6)" fg:x="1660865795" fg:w="7669174"/><text x="98.7787%" y="847.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (7,669,174 samples, 0.45%)</title><rect x="98.5287%" y="821" width="0.4550%" height="15" fill="rgb(212,47,6)" fg:x="1660865795" fg:w="7669174"/><text x="98.7787%" y="831.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,669,174 samples, 0.45%)</title><rect x="98.5287%" y="805" width="0.4550%" height="15" fill="rgb(224,190,4)" fg:x="1660865795" fg:w="7669174"/><text x="98.7787%" y="815.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,669,174 samples, 0.45%)</title><rect x="98.5287%" y="789" width="0.4550%" height="15" fill="rgb(239,183,29)" fg:x="1660865795" fg:w="7669174"/><text x="98.7787%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,669,174 samples, 0.45%)</title><rect x="98.5287%" y="773" width="0.4550%" height="15" fill="rgb(213,57,7)" fg:x="1660865795" fg:w="7669174"/><text x="98.7787%" y="783.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,669,174 samples, 0.45%)</title><rect x="98.5287%" y="757" width="0.4550%" height="15" fill="rgb(216,148,1)" fg:x="1660865795" fg:w="7669174"/><text x="98.7787%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,014,201 samples, 0.36%)</title><rect x="98.6269%" y="741" width="0.3568%" height="15" fill="rgb(236,182,29)" fg:x="1662520768" fg:w="6014201"/><text x="98.8769%" y="751.50"></text></g><g><title>serde::de::SeqAccess::next_element (6,014,201 samples, 0.36%)</title><rect x="98.6269%" y="725" width="0.3568%" height="15" fill="rgb(244,120,48)" fg:x="1662520768" fg:w="6014201"/><text x="98.8769%" y="735.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,014,201 samples, 0.36%)</title><rect x="98.6269%" y="709" width="0.3568%" height="15" fill="rgb(206,71,34)" fg:x="1662520768" fg:w="6014201"/><text x="98.8769%" y="719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,014,201 samples, 0.36%)</title><rect x="98.6269%" y="693" width="0.3568%" height="15" fill="rgb(242,32,6)" fg:x="1662520768" fg:w="6014201"/><text x="98.8769%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,014,201 samples, 0.36%)</title><rect x="98.6269%" y="677" width="0.3568%" height="15" fill="rgb(241,35,3)" fg:x="1662520768" fg:w="6014201"/><text x="98.8769%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,014,201 samples, 0.36%)</title><rect x="98.6269%" y="661" width="0.3568%" height="15" fill="rgb(222,62,19)" fg:x="1662520768" fg:w="6014201"/><text x="98.8769%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,014,201 samples, 0.36%)</title><rect x="98.6269%" y="645" width="0.3568%" height="15" fill="rgb(223,110,41)" fg:x="1662520768" fg:w="6014201"/><text x="98.8769%" y="655.50"></text></g><g><title>serde::de::MapAccess::next_entry (6,014,201 samples, 0.36%)</title><rect x="98.6269%" y="629" width="0.3568%" height="15" fill="rgb(208,224,4)" fg:x="1662520768" fg:w="6014201"/><text x="98.8769%" y="639.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (6,014,201 samples, 0.36%)</title><rect x="98.6269%" y="613" width="0.3568%" height="15" fill="rgb(241,137,19)" fg:x="1662520768" fg:w="6014201"/><text x="98.8769%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="597" width="0.1891%" height="15" fill="rgb(244,24,17)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="607.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="581" width="0.1891%" height="15" fill="rgb(245,178,49)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="565" width="0.1891%" height="15" fill="rgb(219,160,38)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="549" width="0.1891%" height="15" fill="rgb(228,137,14)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="533" width="0.1891%" height="15" fill="rgb(237,134,11)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="543.50"></text></g><g><title>serde::de::SeqAccess::next_element (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="517" width="0.1891%" height="15" fill="rgb(211,126,44)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="527.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="501" width="0.1891%" height="15" fill="rgb(226,171,33)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="485" width="0.1891%" height="15" fill="rgb(253,99,13)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="469" width="0.1891%" height="15" fill="rgb(244,48,7)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="453" width="0.1891%" height="15" fill="rgb(244,217,54)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="437" width="0.1891%" height="15" fill="rgb(224,15,18)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="447.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="421" width="0.1891%" height="15" fill="rgb(244,99,12)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="431.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="405" width="0.1891%" height="15" fill="rgb(233,226,8)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="389" width="0.1891%" height="15" fill="rgb(229,211,3)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="399.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="373" width="0.1891%" height="15" fill="rgb(216,140,21)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="357" width="0.1891%" height="15" fill="rgb(234,122,30)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,188,082 samples, 0.19%)</title><rect x="98.7945%" y="341" width="0.1891%" height="15" fill="rgb(236,25,46)" fg:x="1665346887" fg:w="3188082"/><text x="99.0445%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="325" width="0.0873%" height="15" fill="rgb(217,52,54)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="335.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="309" width="0.0873%" height="15" fill="rgb(222,29,26)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="319.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="293" width="0.0873%" height="15" fill="rgb(216,177,29)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="303.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="277" width="0.0873%" height="15" fill="rgb(247,136,51)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="261" width="0.0873%" height="15" fill="rgb(231,47,47)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="245" width="0.0873%" height="15" fill="rgb(211,192,36)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="229" width="0.0873%" height="15" fill="rgb(229,156,32)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="239.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="213" width="0.0873%" height="15" fill="rgb(248,213,20)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="223.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="197" width="0.0873%" height="15" fill="rgb(217,64,7)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="181" width="0.0873%" height="15" fill="rgb(232,142,8)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="191.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="165" width="0.0873%" height="15" fill="rgb(224,92,44)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="149" width="0.0873%" height="15" fill="rgb(214,169,17)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="133" width="0.0873%" height="15" fill="rgb(210,59,37)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="143.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="117" width="0.0873%" height="15" fill="rgb(214,116,48)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="127.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="101" width="0.0873%" height="15" fill="rgb(244,191,6)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="111.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,471,535 samples, 0.09%)</title><rect x="98.8964%" y="85" width="0.0873%" height="15" fill="rgb(241,50,52)" fg:x="1667063434" fg:w="1471535"/><text x="99.1464%" y="95.50"></text></g><g><title>serde::de::MapAccess::next_entry (14,976,788 samples, 0.89%)</title><rect x="98.1914%" y="2709" width="0.8885%" height="15" fill="rgb(236,75,39)" fg:x="1655181128" fg:w="14976788"/><text x="98.4414%" y="2719.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (14,976,788 samples, 0.89%)</title><rect x="98.1914%" y="2693" width="0.8885%" height="15" fill="rgb(236,99,0)" fg:x="1655181128" fg:w="14976788"/><text x="98.4414%" y="2703.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,308,575 samples, 0.67%)</title><rect x="98.4091%" y="2677" width="0.6709%" height="15" fill="rgb(207,202,15)" fg:x="1658849341" fg:w="11308575"/><text x="98.6591%" y="2687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,308,575 samples, 0.67%)</title><rect x="98.4091%" y="2661" width="0.6709%" height="15" fill="rgb(233,207,14)" fg:x="1658849341" fg:w="11308575"/><text x="98.6591%" y="2671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,308,575 samples, 0.67%)</title><rect x="98.4091%" y="2645" width="0.6709%" height="15" fill="rgb(226,27,51)" fg:x="1658849341" fg:w="11308575"/><text x="98.6591%" y="2655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,308,575 samples, 0.67%)</title><rect x="98.4091%" y="2629" width="0.6709%" height="15" fill="rgb(206,104,42)" fg:x="1658849341" fg:w="11308575"/><text x="98.6591%" y="2639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2613" width="0.6302%" height="15" fill="rgb(212,225,4)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2623.50"></text></g><g><title>serde::de::SeqAccess::next_element (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2597" width="0.6302%" height="15" fill="rgb(233,96,42)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2607.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2581" width="0.6302%" height="15" fill="rgb(229,21,32)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2591.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2565" width="0.6302%" height="15" fill="rgb(226,216,24)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2549" width="0.6302%" height="15" fill="rgb(221,163,17)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2533" width="0.6302%" height="15" fill="rgb(216,216,42)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2517" width="0.6302%" height="15" fill="rgb(240,118,7)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2527.50"></text></g><g><title>serde::de::MapAccess::next_entry (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2501" width="0.6302%" height="15" fill="rgb(221,67,37)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2511.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2485" width="0.6302%" height="15" fill="rgb(241,32,44)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2469" width="0.6302%" height="15" fill="rgb(235,204,43)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2479.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2453" width="0.6302%" height="15" fill="rgb(213,116,10)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2437" width="0.6302%" height="15" fill="rgb(239,15,48)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2421" width="0.6302%" height="15" fill="rgb(207,123,36)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2405" width="0.6302%" height="15" fill="rgb(209,103,30)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2415.50"></text></g><g><title>serde::de::SeqAccess::next_element (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2389" width="0.6302%" height="15" fill="rgb(238,100,19)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2399.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2373" width="0.6302%" height="15" fill="rgb(244,30,14)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2383.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2357" width="0.6302%" height="15" fill="rgb(249,174,6)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2341" width="0.6302%" height="15" fill="rgb(235,213,41)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2325" width="0.6302%" height="15" fill="rgb(213,118,6)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2309" width="0.6302%" height="15" fill="rgb(235,44,51)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2319.50"></text></g><g><title>serde::de::MapAccess::next_entry (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2293" width="0.6302%" height="15" fill="rgb(217,9,53)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2303.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2277" width="0.6302%" height="15" fill="rgb(237,172,34)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2261" width="0.6302%" height="15" fill="rgb(206,206,11)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2271.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2245" width="0.6302%" height="15" fill="rgb(214,149,29)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2229" width="0.6302%" height="15" fill="rgb(208,123,3)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2213" width="0.6302%" height="15" fill="rgb(229,126,4)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2197" width="0.6302%" height="15" fill="rgb(222,92,36)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2207.50"></text></g><g><title>serde::de::SeqAccess::next_element (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2181" width="0.6302%" height="15" fill="rgb(216,39,41)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2191.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2165" width="0.6302%" height="15" fill="rgb(253,127,28)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2175.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2149" width="0.6302%" height="15" fill="rgb(249,152,51)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2133" width="0.6302%" height="15" fill="rgb(209,123,42)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2117" width="0.6302%" height="15" fill="rgb(241,118,22)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2101" width="0.6302%" height="15" fill="rgb(208,25,7)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2111.50"></text></g><g><title>serde::de::MapAccess::next_entry (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2085" width="0.6302%" height="15" fill="rgb(243,144,39)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2095.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2069" width="0.6302%" height="15" fill="rgb(250,50,5)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2079.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2053" width="0.6302%" height="15" fill="rgb(207,67,11)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2063.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2037" width="0.6302%" height="15" fill="rgb(245,204,40)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2047.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2021" width="0.6302%" height="15" fill="rgb(238,228,24)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2031.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="2005" width="0.6302%" height="15" fill="rgb(217,116,22)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="2015.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1989" width="0.6302%" height="15" fill="rgb(234,98,12)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1999.50"></text></g><g><title>serde::de::SeqAccess::next_element (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1973" width="0.6302%" height="15" fill="rgb(242,170,50)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1983.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1957" width="0.6302%" height="15" fill="rgb(235,7,5)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1967.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1941" width="0.6302%" height="15" fill="rgb(241,114,28)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1951.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1925" width="0.6302%" height="15" fill="rgb(246,112,42)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1935.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1909" width="0.6302%" height="15" fill="rgb(248,228,14)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1919.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1893" width="0.6302%" height="15" fill="rgb(208,133,18)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1903.50"></text></g><g><title>serde::de::MapAccess::next_entry (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1877" width="0.6302%" height="15" fill="rgb(207,35,49)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1887.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1861" width="0.6302%" height="15" fill="rgb(205,68,36)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1871.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1845" width="0.6302%" height="15" fill="rgb(245,62,40)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1855.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1829" width="0.6302%" height="15" fill="rgb(228,27,24)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1839.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1813" width="0.6302%" height="15" fill="rgb(253,19,12)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1823.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1797" width="0.6302%" height="15" fill="rgb(232,28,20)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1807.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1781" width="0.6302%" height="15" fill="rgb(218,35,51)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1791.50"></text></g><g><title>serde::de::SeqAccess::next_element (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1765" width="0.6302%" height="15" fill="rgb(212,90,40)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1775.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1749" width="0.6302%" height="15" fill="rgb(220,172,12)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1759.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1733" width="0.6302%" height="15" fill="rgb(226,159,20)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1743.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1717" width="0.6302%" height="15" fill="rgb(234,205,16)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1727.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1701" width="0.6302%" height="15" fill="rgb(207,9,39)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1711.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1685" width="0.6302%" height="15" fill="rgb(249,143,15)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1695.50"></text></g><g><title>serde::de::MapAccess::next_entry (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1669" width="0.6302%" height="15" fill="rgb(253,133,29)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1679.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1653" width="0.6302%" height="15" fill="rgb(221,187,0)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1663.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1637" width="0.6302%" height="15" fill="rgb(205,204,26)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1647.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1621" width="0.6302%" height="15" fill="rgb(224,68,54)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1631.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1605" width="0.6302%" height="15" fill="rgb(209,67,4)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1615.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1589" width="0.6302%" height="15" fill="rgb(228,229,18)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1599.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1573" width="0.6302%" height="15" fill="rgb(231,89,13)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1583.50"></text></g><g><title>serde::de::SeqAccess::next_element (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1557" width="0.6302%" height="15" fill="rgb(210,182,18)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1567.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1541" width="0.6302%" height="15" fill="rgb(240,105,2)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1551.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1525" width="0.6302%" height="15" fill="rgb(207,170,50)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1535.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1509" width="0.6302%" height="15" fill="rgb(232,133,24)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1519.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1493" width="0.6302%" height="15" fill="rgb(235,166,27)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1503.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1477" width="0.6302%" height="15" fill="rgb(209,19,13)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1487.50"></text></g><g><title>serde::de::MapAccess::next_entry (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1461" width="0.6302%" height="15" fill="rgb(226,79,39)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1471.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1445" width="0.6302%" height="15" fill="rgb(222,163,10)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1455.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1429" width="0.6302%" height="15" fill="rgb(214,44,19)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1439.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1413" width="0.6302%" height="15" fill="rgb(210,217,13)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1423.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1397" width="0.6302%" height="15" fill="rgb(237,61,54)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1407.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1381" width="0.6302%" height="15" fill="rgb(226,184,24)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1391.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1365" width="0.6302%" height="15" fill="rgb(223,226,4)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1375.50"></text></g><g><title>serde::de::SeqAccess::next_element (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1349" width="0.6302%" height="15" fill="rgb(210,26,41)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1359.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1333" width="0.6302%" height="15" fill="rgb(220,221,6)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1343.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1317" width="0.6302%" height="15" fill="rgb(225,89,49)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1327.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1301" width="0.6302%" height="15" fill="rgb(218,70,45)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1311.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1285" width="0.6302%" height="15" fill="rgb(238,166,21)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1295.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,623,909 samples, 0.63%)</title><rect x="98.4497%" y="1269" width="0.6302%" height="15" fill="rgb(224,141,44)" fg:x="1659534007" fg:w="10623909"/><text x="98.6997%" y="1279.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,622,947 samples, 0.10%)</title><rect x="98.9836%" y="1253" width="0.0963%" height="15" fill="rgb(230,12,49)" fg:x="1668534969" fg:w="1622947"/><text x="99.2336%" y="1263.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,622,947 samples, 0.10%)</title><rect x="98.9836%" y="1237" width="0.0963%" height="15" fill="rgb(212,174,12)" fg:x="1668534969" fg:w="1622947"/><text x="99.2336%" y="1247.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,622,947 samples, 0.10%)</title><rect x="98.9836%" y="1221" width="0.0963%" height="15" fill="rgb(246,67,9)" fg:x="1668534969" fg:w="1622947"/><text x="99.2336%" y="1231.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,622,947 samples, 0.10%)</title><rect x="98.9836%" y="1205" width="0.0963%" height="15" fill="rgb(239,35,23)" fg:x="1668534969" fg:w="1622947"/><text x="99.2336%" y="1215.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1,622,947 samples, 0.10%)</title><rect x="98.9836%" y="1189" width="0.0963%" height="15" fill="rgb(211,167,0)" fg:x="1668534969" fg:w="1622947"/><text x="99.2336%" y="1199.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1,622,947 samples, 0.10%)</title><rect x="98.9836%" y="1173" width="0.0963%" height="15" fill="rgb(225,119,45)" fg:x="1668534969" fg:w="1622947"/><text x="99.2336%" y="1183.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1,622,947 samples, 0.10%)</title><rect x="98.9836%" y="1157" width="0.0963%" height="15" fill="rgb(210,162,6)" fg:x="1668534969" fg:w="1622947"/><text x="99.2336%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (1,622,947 samples, 0.10%)</title><rect x="98.9836%" y="1141" width="0.0963%" height="15" fill="rgb(208,118,35)" fg:x="1668534969" fg:w="1622947"/><text x="99.2336%" y="1151.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,622,947 samples, 0.10%)</title><rect x="98.9836%" y="1125" width="0.0963%" height="15" fill="rgb(239,4,53)" fg:x="1668534969" fg:w="1622947"/><text x="99.2336%" y="1135.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20,356,600 samples, 1.21%)</title><rect x="98.0875%" y="2725" width="1.2076%" height="15" fill="rgb(213,130,21)" fg:x="1653428537" fg:w="20356600"/><text x="98.3375%" y="2735.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (3,627,221 samples, 0.22%)</title><rect x="99.0799%" y="2709" width="0.2152%" height="15" fill="rgb(235,148,0)" fg:x="1670157916" fg:w="3627221"/><text x="99.3299%" y="2719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3,627,221 samples, 0.22%)</title><rect x="99.0799%" y="2693" width="0.2152%" height="15" fill="rgb(244,224,18)" fg:x="1670157916" fg:w="3627221"/><text x="99.3299%" y="2703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3,627,221 samples, 0.22%)</title><rect x="99.0799%" y="2677" width="0.2152%" height="15" fill="rgb(211,214,4)" fg:x="1670157916" fg:w="3627221"/><text x="99.3299%" y="2687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (3,627,221 samples, 0.22%)</title><rect x="99.0799%" y="2661" width="0.2152%" height="15" fill="rgb(206,119,25)" fg:x="1670157916" fg:w="3627221"/><text x="99.3299%" y="2671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1,779,788 samples, 0.11%)</title><rect x="99.1895%" y="2645" width="0.1056%" height="15" fill="rgb(243,93,47)" fg:x="1672005349" fg:w="1779788"/><text x="99.4395%" y="2655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1,779,788 samples, 0.11%)</title><rect x="99.1895%" y="2629" width="0.1056%" height="15" fill="rgb(224,194,6)" fg:x="1672005349" fg:w="1779788"/><text x="99.4395%" y="2639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1,779,788 samples, 0.11%)</title><rect x="99.1895%" y="2613" width="0.1056%" height="15" fill="rgb(243,229,6)" fg:x="1672005349" fg:w="1779788"/><text x="99.4395%" y="2623.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (1,779,788 samples, 0.11%)</title><rect x="99.1895%" y="2597" width="0.1056%" height="15" fill="rgb(207,23,50)" fg:x="1672005349" fg:w="1779788"/><text x="99.4395%" y="2607.50"></text></g><g><title>core::intrinsics::copy (1,779,788 samples, 0.11%)</title><rect x="99.1895%" y="2581" width="0.1056%" height="15" fill="rgb(253,192,32)" fg:x="1672005349" fg:w="1779788"/><text x="99.4395%" y="2591.50"></text></g><g><title>serde_json::de::from_str (31,471,873 samples, 1.87%)</title><rect x="97.5285%" y="2901" width="1.8670%" height="15" fill="rgb(213,21,6)" fg:x="1644005419" fg:w="31471873"/><text x="97.7785%" y="2911.50">s..</text></g><g><title>serde_json::de::from_trait (31,471,873 samples, 1.87%)</title><rect x="97.5285%" y="2885" width="1.8670%" height="15" fill="rgb(243,151,13)" fg:x="1644005419" fg:w="31471873"/><text x="97.7785%" y="2895.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (31,471,873 samples, 1.87%)</title><rect x="97.5285%" y="2869" width="1.8670%" height="15" fill="rgb(233,165,41)" fg:x="1644005419" fg:w="31471873"/><text x="97.7785%" y="2879.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (31,471,873 samples, 1.87%)</title><rect x="97.5285%" y="2853" width="1.8670%" height="15" fill="rgb(246,176,45)" fg:x="1644005419" fg:w="31471873"/><text x="97.7785%" y="2863.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (31,041,841 samples, 1.84%)</title><rect x="97.5540%" y="2837" width="1.8415%" height="15" fill="rgb(217,170,52)" fg:x="1644435451" fg:w="31041841"/><text x="97.8040%" y="2847.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (29,174,430 samples, 1.73%)</title><rect x="97.6648%" y="2821" width="1.7307%" height="15" fill="rgb(214,203,54)" fg:x="1646302862" fg:w="29174430"/><text x="97.9148%" y="2831.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (29,174,430 samples, 1.73%)</title><rect x="97.6648%" y="2805" width="1.7307%" height="15" fill="rgb(248,215,49)" fg:x="1646302862" fg:w="29174430"/><text x="97.9148%" y="2815.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (22,048,755 samples, 1.31%)</title><rect x="98.0875%" y="2789" width="1.3080%" height="15" fill="rgb(208,46,10)" fg:x="1653428537" fg:w="22048755"/><text x="98.3375%" y="2799.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (22,048,755 samples, 1.31%)</title><rect x="98.0875%" y="2773" width="1.3080%" height="15" fill="rgb(254,5,31)" fg:x="1653428537" fg:w="22048755"/><text x="98.3375%" y="2783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (22,048,755 samples, 1.31%)</title><rect x="98.0875%" y="2757" width="1.3080%" height="15" fill="rgb(222,104,33)" fg:x="1653428537" fg:w="22048755"/><text x="98.3375%" y="2767.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22,048,755 samples, 1.31%)</title><rect x="98.0875%" y="2741" width="1.3080%" height="15" fill="rgb(248,49,16)" fg:x="1653428537" fg:w="22048755"/><text x="98.3375%" y="2751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,692,155 samples, 0.10%)</title><rect x="99.2951%" y="2725" width="0.1004%" height="15" fill="rgb(232,198,41)" fg:x="1673785137" fg:w="1692155"/><text x="99.5451%" y="2735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,692,155 samples, 0.10%)</title><rect x="99.2951%" y="2709" width="0.1004%" height="15" fill="rgb(214,125,3)" fg:x="1673785137" fg:w="1692155"/><text x="99.5451%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,692,155 samples, 0.10%)</title><rect x="99.2951%" y="2693" width="0.1004%" height="15" fill="rgb(229,220,28)" fg:x="1673785137" fg:w="1692155"/><text x="99.5451%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,692,155 samples, 0.10%)</title><rect x="99.2951%" y="2677" width="0.1004%" height="15" fill="rgb(222,64,37)" fg:x="1673785137" fg:w="1692155"/><text x="99.5451%" y="2687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,692,155 samples, 0.10%)</title><rect x="99.2951%" y="2661" width="0.1004%" height="15" fill="rgb(249,184,13)" fg:x="1673785137" fg:w="1692155"/><text x="99.5451%" y="2671.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_from_scratch (1,692,155 samples, 0.10%)</title><rect x="99.2951%" y="2645" width="0.1004%" height="15" fill="rgb(252,176,6)" fg:x="1673785137" fg:w="1692155"/><text x="99.5451%" y="2655.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_from_scratch (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="3205" width="89.2160%" height="15" fill="rgb(228,153,7)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="3215.50">css_bitvector_compiler::generated_istate_functions::process_node_generated_from_scratch</text></g><g><title>__libc_start_main (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="3189" width="89.2160%" height="15" fill="rgb(242,193,5)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="3199.50">__libc_start_main</text></g><g><title>[libc.so.6] (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="3173" width="89.2160%" height="15" fill="rgb(232,140,9)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="3183.50">[libc.so.6]</text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_from_scratch (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="3157" width="89.2160%" height="15" fill="rgb(213,222,16)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="3167.50">css_bitvector_compiler::generated_istate_functions::process_node_generated_from_scratch</text></g><g><title>std::rt::lang_start_internal (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="3141" width="89.2160%" height="15" fill="rgb(222,75,50)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="3151.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="3125" width="89.2160%" height="15" fill="rgb(205,180,2)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="3135.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="3109" width="89.2160%" height="15" fill="rgb(216,34,7)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="3119.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="3093" width="89.2160%" height="15" fill="rgb(253,16,32)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="3103.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="3077" width="89.2160%" height="15" fill="rgb(208,97,28)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="3087.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="3061" width="89.2160%" height="15" fill="rgb(225,92,11)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="3071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="3045" width="89.2160%" height="15" fill="rgb(243,38,12)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="3055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="3029" width="89.2160%" height="15" fill="rgb(208,139,16)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="3039.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="3013" width="89.2160%" height="15" fill="rgb(227,24,9)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="3023.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="2997" width="89.2160%" height="15" fill="rgb(206,62,11)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="3007.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="2981" width="89.2160%" height="15" fill="rgb(228,134,27)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="2991.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="2965" width="89.2160%" height="15" fill="rgb(205,55,33)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="2975.50">core::ops::function::FnOnce::call_once</text></g><g><title>main::main (1,503,884,953 samples, 89.22%)</title><rect x="10.2047%" y="2949" width="89.2160%" height="15" fill="rgb(243,75,43)" fg:x="172016571" fg:w="1503884953"/><text x="10.4547%" y="2959.50">main::main</text></g><g><title>main::benchmark::run_web_browser_layout_trace_benchmark (1,498,041,214 samples, 88.87%)</title><rect x="10.5513%" y="2933" width="88.8693%" height="15" fill="rgb(223,27,42)" fg:x="177860310" fg:w="1498041214"/><text x="10.8013%" y="2943.50">main::benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>main::benchmark::parse_web_layout_trace (31,896,105 samples, 1.89%)</title><rect x="97.5285%" y="2917" width="1.8922%" height="15" fill="rgb(232,189,33)" fg:x="1644005419" fg:w="31896105"/><text x="97.7785%" y="2927.50">m..</text></g><g><title>std::fs::read_to_string (424,232 samples, 0.03%)</title><rect x="99.3955%" y="2901" width="0.0252%" height="15" fill="rgb(210,9,39)" fg:x="1675477292" fg:w="424232"/><text x="99.6455%" y="2911.50"></text></g><g><title>std::fs::read_to_string::inner (424,232 samples, 0.03%)</title><rect x="99.3955%" y="2885" width="0.0252%" height="15" fill="rgb(242,85,26)" fg:x="1675477292" fg:w="424232"/><text x="99.6455%" y="2895.50"></text></g><g><title>std::io::default_read_to_string (424,232 samples, 0.03%)</title><rect x="99.3955%" y="2869" width="0.0252%" height="15" fill="rgb(248,44,4)" fg:x="1675477292" fg:w="424232"/><text x="99.6455%" y="2879.50"></text></g><g><title>std::io::append_to_string (424,232 samples, 0.03%)</title><rect x="99.3955%" y="2853" width="0.0252%" height="15" fill="rgb(250,96,46)" fg:x="1675477292" fg:w="424232"/><text x="99.6455%" y="2863.50"></text></g><g><title>core::str::converts::from_utf8 (424,232 samples, 0.03%)</title><rect x="99.3955%" y="2837" width="0.0252%" height="15" fill="rgb(229,116,26)" fg:x="1675477292" fg:w="424232"/><text x="99.6455%" y="2847.50"></text></g><g><title>core::str::validations::run_utf8_validation (424,232 samples, 0.03%)</title><rect x="99.3955%" y="2821" width="0.0252%" height="15" fill="rgb(246,94,34)" fg:x="1675477292" fg:w="424232"/><text x="99.6455%" y="2831.50"></text></g><g><title>malloc (7,923,520 samples, 0.47%)</title><rect x="99.4207%" y="3205" width="0.4701%" height="15" fill="rgb(251,73,21)" fg:x="1675901524" fg:w="7923520"/><text x="99.6707%" y="3215.50"></text></g><g><title>all (1,685,667,291 samples, 100%)</title><rect x="0.0000%" y="3237" width="100.0000%" height="15" fill="rgb(254,121,25)" fg:x="0" fg:w="1685667291"/><text x="0.2500%" y="3247.50"></text></g><g><title>main (1,685,667,291 samples, 100.00%)</title><rect x="0.0000%" y="3221" width="100.0000%" height="15" fill="rgb(215,161,49)" fg:x="0" fg:w="1685667291"/><text x="0.2500%" y="3231.50">main</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,842,247 samples, 0.11%)</title><rect x="99.8907%" y="3205" width="0.1093%" height="15" fill="rgb(221,43,13)" fg:x="1683825044" fg:w="1842247"/><text x="100.1407%" y="3215.50"></text></g></svg></svg>