<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2486" onload="init(evt)" viewBox="0 0 1200 2486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2486" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2469.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2469.00"> </text><svg id="frames" x="10" width="1180" total_samples="244327928"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,276,701 samples, 0.52%)</title><rect x="0.0000%" y="2405" width="0.5225%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1276701"/><text x="0.2500%" y="2415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,276,701 samples, 0.52%)</title><rect x="0.0000%" y="2389" width="0.5225%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1276701"/><text x="0.2500%" y="2399.50"></text></g><g><title>alloc::slice::hack::to_vec (1,276,701 samples, 0.52%)</title><rect x="0.0000%" y="2373" width="0.5225%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1276701"/><text x="0.2500%" y="2383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,276,701 samples, 0.52%)</title><rect x="0.0000%" y="2357" width="0.5225%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1276701"/><text x="0.2500%" y="2367.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,276,701 samples, 0.52%)</title><rect x="0.0000%" y="2341" width="0.5225%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1276701"/><text x="0.2500%" y="2351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,099,455 samples, 0.45%)</title><rect x="0.5225%" y="2405" width="0.4500%" height="15" fill="rgb(232,128,0)" fg:x="1276701" fg:w="1099455"/><text x="0.7725%" y="2415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (606,011 samples, 0.25%)</title><rect x="0.9725%" y="2405" width="0.2480%" height="15" fill="rgb(207,160,47)" fg:x="2376156" fg:w="606011"/><text x="1.2225%" y="2415.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (606,011 samples, 0.25%)</title><rect x="0.9725%" y="2389" width="0.2480%" height="15" fill="rgb(228,23,34)" fg:x="2376156" fg:w="606011"/><text x="1.2225%" y="2399.50"></text></g><g><title>[libc.so.6] (4,838,770 samples, 1.98%)</title><rect x="1.2206%" y="2405" width="1.9804%" height="15" fill="rgb(218,30,26)" fg:x="2982167" fg:w="4838770"/><text x="1.4706%" y="2415.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,639,009 samples, 1.08%)</title><rect x="4.2128%" y="2389" width="1.0801%" height="15" fill="rgb(220,122,19)" fg:x="10293120" fg:w="2639009"/><text x="4.4628%" y="2399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,639,009 samples, 1.08%)</title><rect x="4.2128%" y="2373" width="1.0801%" height="15" fill="rgb(250,228,42)" fg:x="10293120" fg:w="2639009"/><text x="4.4628%" y="2383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,639,009 samples, 1.08%)</title><rect x="4.2128%" y="2357" width="1.0801%" height="15" fill="rgb(240,193,28)" fg:x="10293120" fg:w="2639009"/><text x="4.4628%" y="2367.50"></text></g><g><title>[libc.so.6] (1,109,747 samples, 0.45%)</title><rect x="5.2929%" y="2389" width="0.4542%" height="15" fill="rgb(216,20,37)" fg:x="12932129" fg:w="1109747"/><text x="5.5429%" y="2399.50"></text></g><g><title>benchmark::clear_dirty_flags (1,181,610 samples, 0.48%)</title><rect x="5.7471%" y="2389" width="0.4836%" height="15" fill="rgb(206,188,39)" fg:x="14041876" fg:w="1181610"/><text x="5.9971%" y="2399.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,329,610 samples, 0.54%)</title><rect x="6.2308%" y="2389" width="0.5442%" height="15" fill="rgb(217,207,13)" fg:x="15223486" fg:w="1329610"/><text x="6.4808%" y="2399.50"></text></g><g><title>[unknown] (9,996,480 samples, 4.09%)</title><rect x="3.2010%" y="2405" width="4.0914%" height="15" fill="rgb(231,73,38)" fg:x="7820937" fg:w="9996480"/><text x="3.4510%" y="2415.50">[unk..</text></g><g><title>malloc (1,264,321 samples, 0.52%)</title><rect x="6.7750%" y="2389" width="0.5175%" height="15" fill="rgb(225,20,46)" fg:x="16553096" fg:w="1264321"/><text x="7.0250%" y="2399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (967,931 samples, 0.40%)</title><rect x="7.2924%" y="2021" width="0.3962%" height="15" fill="rgb(210,31,41)" fg:x="17817417" fg:w="967931"/><text x="7.5424%" y="2031.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (967,931 samples, 0.40%)</title><rect x="7.2924%" y="2005" width="0.3962%" height="15" fill="rgb(221,200,47)" fg:x="17817417" fg:w="967931"/><text x="7.5424%" y="2015.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (967,931 samples, 0.40%)</title><rect x="7.2924%" y="1989" width="0.3962%" height="15" fill="rgb(226,26,5)" fg:x="17817417" fg:w="967931"/><text x="7.5424%" y="1999.50"></text></g><g><title>alloc::slice::hack::to_vec (967,931 samples, 0.40%)</title><rect x="7.2924%" y="1973" width="0.3962%" height="15" fill="rgb(249,33,26)" fg:x="17817417" fg:w="967931"/><text x="7.5424%" y="1983.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (967,931 samples, 0.40%)</title><rect x="7.2924%" y="1957" width="0.3962%" height="15" fill="rgb(235,183,28)" fg:x="17817417" fg:w="967931"/><text x="7.5424%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (967,931 samples, 0.40%)</title><rect x="7.2924%" y="1941" width="0.3962%" height="15" fill="rgb(221,5,38)" fg:x="17817417" fg:w="967931"/><text x="7.5424%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (967,931 samples, 0.40%)</title><rect x="7.2924%" y="1925" width="0.3962%" height="15" fill="rgb(247,18,42)" fg:x="17817417" fg:w="967931"/><text x="7.5424%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (967,931 samples, 0.40%)</title><rect x="7.2924%" y="1909" width="0.3962%" height="15" fill="rgb(241,131,45)" fg:x="17817417" fg:w="967931"/><text x="7.5424%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (967,931 samples, 0.40%)</title><rect x="7.2924%" y="1893" width="0.3962%" height="15" fill="rgb(249,31,29)" fg:x="17817417" fg:w="967931"/><text x="7.5424%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (967,931 samples, 0.40%)</title><rect x="7.2924%" y="1877" width="0.3962%" height="15" fill="rgb(225,111,53)" fg:x="17817417" fg:w="967931"/><text x="7.5424%" y="1887.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (967,931 samples, 0.40%)</title><rect x="7.2924%" y="1861" width="0.3962%" height="15" fill="rgb(238,160,17)" fg:x="17817417" fg:w="967931"/><text x="7.5424%" y="1871.50"></text></g><g><title>alloc::alloc::alloc (967,931 samples, 0.40%)</title><rect x="7.2924%" y="1845" width="0.3962%" height="15" fill="rgb(214,148,48)" fg:x="17817417" fg:w="967931"/><text x="7.5424%" y="1855.50"></text></g><g><title>core::ptr::read_volatile (967,931 samples, 0.40%)</title><rect x="7.2924%" y="1829" width="0.3962%" height="15" fill="rgb(232,36,49)" fg:x="17817417" fg:w="967931"/><text x="7.5424%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,257,196 samples, 0.51%)</title><rect x="7.6886%" y="1381" width="0.5146%" height="15" fill="rgb(209,103,24)" fg:x="18785348" fg:w="1257196"/><text x="7.9386%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,257,196 samples, 0.51%)</title><rect x="7.6886%" y="1365" width="0.5146%" height="15" fill="rgb(229,88,8)" fg:x="18785348" fg:w="1257196"/><text x="7.9386%" y="1375.50"></text></g><g><title>alloc::slice::hack::to_vec (1,257,196 samples, 0.51%)</title><rect x="7.6886%" y="1349" width="0.5146%" height="15" fill="rgb(213,181,19)" fg:x="18785348" fg:w="1257196"/><text x="7.9386%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,257,196 samples, 0.51%)</title><rect x="7.6886%" y="1333" width="0.5146%" height="15" fill="rgb(254,191,54)" fg:x="18785348" fg:w="1257196"/><text x="7.9386%" y="1343.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,257,196 samples, 0.51%)</title><rect x="7.6886%" y="1317" width="0.5146%" height="15" fill="rgb(241,83,37)" fg:x="18785348" fg:w="1257196"/><text x="7.9386%" y="1327.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,257,196 samples, 0.51%)</title><rect x="7.6886%" y="1301" width="0.5146%" height="15" fill="rgb(233,36,39)" fg:x="18785348" fg:w="1257196"/><text x="7.9386%" y="1311.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,257,196 samples, 0.51%)</title><rect x="7.6886%" y="1285" width="0.5146%" height="15" fill="rgb(226,3,54)" fg:x="18785348" fg:w="1257196"/><text x="7.9386%" y="1295.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,257,196 samples, 0.51%)</title><rect x="7.6886%" y="1269" width="0.5146%" height="15" fill="rgb(245,192,40)" fg:x="18785348" fg:w="1257196"/><text x="7.9386%" y="1279.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,257,196 samples, 0.51%)</title><rect x="7.6886%" y="1253" width="0.5146%" height="15" fill="rgb(238,167,29)" fg:x="18785348" fg:w="1257196"/><text x="7.9386%" y="1263.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,257,196 samples, 0.51%)</title><rect x="7.6886%" y="1237" width="0.5146%" height="15" fill="rgb(232,182,51)" fg:x="18785348" fg:w="1257196"/><text x="7.9386%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,257,196 samples, 0.51%)</title><rect x="7.6886%" y="1221" width="0.5146%" height="15" fill="rgb(231,60,39)" fg:x="18785348" fg:w="1257196"/><text x="7.9386%" y="1231.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,257,196 samples, 0.51%)</title><rect x="7.6886%" y="1205" width="0.5146%" height="15" fill="rgb(208,69,12)" fg:x="18785348" fg:w="1257196"/><text x="7.9386%" y="1215.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,257,196 samples, 0.51%)</title><rect x="7.6886%" y="1189" width="0.5146%" height="15" fill="rgb(235,93,37)" fg:x="18785348" fg:w="1257196"/><text x="7.9386%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1669" width="0.9258%" height="15" fill="rgb(213,116,39)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1653" width="0.9258%" height="15" fill="rgb(222,207,29)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1637" width="0.9258%" height="15" fill="rgb(206,96,30)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1621" width="0.9258%" height="15" fill="rgb(218,138,4)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1631.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1605" width="0.9258%" height="15" fill="rgb(250,191,14)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1615.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1589" width="0.9258%" height="15" fill="rgb(239,60,40)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1599.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1573" width="0.9258%" height="15" fill="rgb(206,27,48)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1557" width="0.9258%" height="15" fill="rgb(225,35,8)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1567.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1541" width="0.9258%" height="15" fill="rgb(250,213,24)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1525" width="0.9258%" height="15" fill="rgb(247,123,22)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1535.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1509" width="0.9258%" height="15" fill="rgb(231,138,38)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1519.50"></text></g><g><title>alloc::slice::hack::to_vec (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1493" width="0.9258%" height="15" fill="rgb(231,145,46)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1477" width="0.9258%" height="15" fill="rgb(251,118,11)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1487.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1461" width="0.9258%" height="15" fill="rgb(217,147,25)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1471.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1445" width="0.9258%" height="15" fill="rgb(247,81,37)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1429" width="0.9258%" height="15" fill="rgb(209,12,38)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1439.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1413" width="0.9258%" height="15" fill="rgb(227,1,9)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1423.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,261,903 samples, 0.93%)</title><rect x="7.6886%" y="1397" width="0.9258%" height="15" fill="rgb(248,47,43)" fg:x="18785348" fg:w="2261903"/><text x="7.9386%" y="1407.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,004,707 samples, 0.41%)</title><rect x="8.2031%" y="1381" width="0.4112%" height="15" fill="rgb(221,10,30)" fg:x="20042544" fg:w="1004707"/><text x="8.4531%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,004,707 samples, 0.41%)</title><rect x="8.2031%" y="1365" width="0.4112%" height="15" fill="rgb(210,229,1)" fg:x="20042544" fg:w="1004707"/><text x="8.4531%" y="1375.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,004,707 samples, 0.41%)</title><rect x="8.2031%" y="1349" width="0.4112%" height="15" fill="rgb(222,148,37)" fg:x="20042544" fg:w="1004707"/><text x="8.4531%" y="1359.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,004,707 samples, 0.41%)</title><rect x="8.2031%" y="1333" width="0.4112%" height="15" fill="rgb(234,67,33)" fg:x="20042544" fg:w="1004707"/><text x="8.4531%" y="1343.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,004,707 samples, 0.41%)</title><rect x="8.2031%" y="1317" width="0.4112%" height="15" fill="rgb(247,98,35)" fg:x="20042544" fg:w="1004707"/><text x="8.4531%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,004,707 samples, 0.41%)</title><rect x="8.2031%" y="1301" width="0.4112%" height="15" fill="rgb(247,138,52)" fg:x="20042544" fg:w="1004707"/><text x="8.4531%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,004,707 samples, 0.41%)</title><rect x="8.2031%" y="1285" width="0.4112%" height="15" fill="rgb(213,79,30)" fg:x="20042544" fg:w="1004707"/><text x="8.4531%" y="1295.50"></text></g><g><title>alloc::slice::hack::to_vec (1,004,707 samples, 0.41%)</title><rect x="8.2031%" y="1269" width="0.4112%" height="15" fill="rgb(246,177,23)" fg:x="20042544" fg:w="1004707"/><text x="8.4531%" y="1279.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,004,707 samples, 0.41%)</title><rect x="8.2031%" y="1253" width="0.4112%" height="15" fill="rgb(230,62,27)" fg:x="20042544" fg:w="1004707"/><text x="8.4531%" y="1263.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,004,707 samples, 0.41%)</title><rect x="8.2031%" y="1237" width="0.4112%" height="15" fill="rgb(216,154,8)" fg:x="20042544" fg:w="1004707"/><text x="8.4531%" y="1247.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,004,707 samples, 0.41%)</title><rect x="8.2031%" y="1221" width="0.4112%" height="15" fill="rgb(244,35,45)" fg:x="20042544" fg:w="1004707"/><text x="8.4531%" y="1231.50"></text></g><g><title>[libc.so.6] (1,004,707 samples, 0.41%)</title><rect x="8.2031%" y="1205" width="0.4112%" height="15" fill="rgb(251,115,12)" fg:x="20042544" fg:w="1004707"/><text x="8.4531%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,556,102 samples, 1.46%)</title><rect x="7.6886%" y="1813" width="1.4555%" height="15" fill="rgb(240,54,50)" fg:x="18785348" fg:w="3556102"/><text x="7.9386%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,556,102 samples, 1.46%)</title><rect x="7.6886%" y="1797" width="1.4555%" height="15" fill="rgb(233,84,52)" fg:x="18785348" fg:w="3556102"/><text x="7.9386%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (3,556,102 samples, 1.46%)</title><rect x="7.6886%" y="1781" width="1.4555%" height="15" fill="rgb(207,117,47)" fg:x="18785348" fg:w="3556102"/><text x="7.9386%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,556,102 samples, 1.46%)</title><rect x="7.6886%" y="1765" width="1.4555%" height="15" fill="rgb(249,43,39)" fg:x="18785348" fg:w="3556102"/><text x="7.9386%" y="1775.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,556,102 samples, 1.46%)</title><rect x="7.6886%" y="1749" width="1.4555%" height="15" fill="rgb(209,38,44)" fg:x="18785348" fg:w="3556102"/><text x="7.9386%" y="1759.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,556,102 samples, 1.46%)</title><rect x="7.6886%" y="1733" width="1.4555%" height="15" fill="rgb(236,212,23)" fg:x="18785348" fg:w="3556102"/><text x="7.9386%" y="1743.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,556,102 samples, 1.46%)</title><rect x="7.6886%" y="1717" width="1.4555%" height="15" fill="rgb(242,79,21)" fg:x="18785348" fg:w="3556102"/><text x="7.9386%" y="1727.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,556,102 samples, 1.46%)</title><rect x="7.6886%" y="1701" width="1.4555%" height="15" fill="rgb(211,96,35)" fg:x="18785348" fg:w="3556102"/><text x="7.9386%" y="1711.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,556,102 samples, 1.46%)</title><rect x="7.6886%" y="1685" width="1.4555%" height="15" fill="rgb(253,215,40)" fg:x="18785348" fg:w="3556102"/><text x="7.9386%" y="1695.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,294,199 samples, 0.53%)</title><rect x="8.6143%" y="1669" width="0.5297%" height="15" fill="rgb(211,81,21)" fg:x="21047251" fg:w="1294199"/><text x="8.8643%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,294,199 samples, 0.53%)</title><rect x="8.6143%" y="1653" width="0.5297%" height="15" fill="rgb(208,190,38)" fg:x="21047251" fg:w="1294199"/><text x="8.8643%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,294,199 samples, 0.53%)</title><rect x="8.6143%" y="1637" width="0.5297%" height="15" fill="rgb(235,213,38)" fg:x="21047251" fg:w="1294199"/><text x="8.8643%" y="1647.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,294,199 samples, 0.53%)</title><rect x="8.6143%" y="1621" width="0.5297%" height="15" fill="rgb(237,122,38)" fg:x="21047251" fg:w="1294199"/><text x="8.8643%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,294,199 samples, 0.53%)</title><rect x="8.6143%" y="1605" width="0.5297%" height="15" fill="rgb(244,218,35)" fg:x="21047251" fg:w="1294199"/><text x="8.8643%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,294,199 samples, 0.53%)</title><rect x="8.6143%" y="1589" width="0.5297%" height="15" fill="rgb(240,68,47)" fg:x="21047251" fg:w="1294199"/><text x="8.8643%" y="1599.50"></text></g><g><title>alloc::slice::hack::to_vec (1,294,199 samples, 0.53%)</title><rect x="8.6143%" y="1573" width="0.5297%" height="15" fill="rgb(210,16,53)" fg:x="21047251" fg:w="1294199"/><text x="8.8643%" y="1583.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,294,199 samples, 0.53%)</title><rect x="8.6143%" y="1557" width="0.5297%" height="15" fill="rgb(235,124,12)" fg:x="21047251" fg:w="1294199"/><text x="8.8643%" y="1567.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,294,199 samples, 0.53%)</title><rect x="8.6143%" y="1541" width="0.5297%" height="15" fill="rgb(224,169,11)" fg:x="21047251" fg:w="1294199"/><text x="8.8643%" y="1551.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,294,199 samples, 0.53%)</title><rect x="8.6143%" y="1525" width="0.5297%" height="15" fill="rgb(250,166,2)" fg:x="21047251" fg:w="1294199"/><text x="8.8643%" y="1535.50"></text></g><g><title>[libc.so.6] (1,294,199 samples, 0.53%)</title><rect x="8.6143%" y="1509" width="0.5297%" height="15" fill="rgb(242,216,29)" fg:x="21047251" fg:w="1294199"/><text x="8.8643%" y="1519.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (5,758,047 samples, 2.36%)</title><rect x="7.2924%" y="2117" width="2.3567%" height="15" fill="rgb(230,116,27)" fg:x="17817417" fg:w="5758047"/><text x="7.5424%" y="2127.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,758,047 samples, 2.36%)</title><rect x="7.2924%" y="2101" width="2.3567%" height="15" fill="rgb(228,99,48)" fg:x="17817417" fg:w="5758047"/><text x="7.5424%" y="2111.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,758,047 samples, 2.36%)</title><rect x="7.2924%" y="2085" width="2.3567%" height="15" fill="rgb(253,11,6)" fg:x="17817417" fg:w="5758047"/><text x="7.5424%" y="2095.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,758,047 samples, 2.36%)</title><rect x="7.2924%" y="2069" width="2.3567%" height="15" fill="rgb(247,143,39)" fg:x="17817417" fg:w="5758047"/><text x="7.5424%" y="2079.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,758,047 samples, 2.36%)</title><rect x="7.2924%" y="2053" width="2.3567%" height="15" fill="rgb(236,97,10)" fg:x="17817417" fg:w="5758047"/><text x="7.5424%" y="2063.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,758,047 samples, 2.36%)</title><rect x="7.2924%" y="2037" width="2.3567%" height="15" fill="rgb(233,208,19)" fg:x="17817417" fg:w="5758047"/><text x="7.5424%" y="2047.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,790,116 samples, 1.96%)</title><rect x="7.6886%" y="2021" width="1.9605%" height="15" fill="rgb(216,164,2)" fg:x="18785348" fg:w="4790116"/><text x="7.9386%" y="2031.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,790,116 samples, 1.96%)</title><rect x="7.6886%" y="2005" width="1.9605%" height="15" fill="rgb(220,129,5)" fg:x="18785348" fg:w="4790116"/><text x="7.9386%" y="2015.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,790,116 samples, 1.96%)</title><rect x="7.6886%" y="1989" width="1.9605%" height="15" fill="rgb(242,17,10)" fg:x="18785348" fg:w="4790116"/><text x="7.9386%" y="1999.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,790,116 samples, 1.96%)</title><rect x="7.6886%" y="1973" width="1.9605%" height="15" fill="rgb(242,107,0)" fg:x="18785348" fg:w="4790116"/><text x="7.9386%" y="1983.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,790,116 samples, 1.96%)</title><rect x="7.6886%" y="1957" width="1.9605%" height="15" fill="rgb(251,28,31)" fg:x="18785348" fg:w="4790116"/><text x="7.9386%" y="1967.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,790,116 samples, 1.96%)</title><rect x="7.6886%" y="1941" width="1.9605%" height="15" fill="rgb(233,223,10)" fg:x="18785348" fg:w="4790116"/><text x="7.9386%" y="1951.50">a..</text></g><g><title>alloc::slice::hack::to_vec (4,790,116 samples, 1.96%)</title><rect x="7.6886%" y="1925" width="1.9605%" height="15" fill="rgb(215,21,27)" fg:x="18785348" fg:w="4790116"/><text x="7.9386%" y="1935.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,790,116 samples, 1.96%)</title><rect x="7.6886%" y="1909" width="1.9605%" height="15" fill="rgb(232,23,21)" fg:x="18785348" fg:w="4790116"/><text x="7.9386%" y="1919.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,790,116 samples, 1.96%)</title><rect x="7.6886%" y="1893" width="1.9605%" height="15" fill="rgb(244,5,23)" fg:x="18785348" fg:w="4790116"/><text x="7.9386%" y="1903.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,790,116 samples, 1.96%)</title><rect x="7.6886%" y="1877" width="1.9605%" height="15" fill="rgb(226,81,46)" fg:x="18785348" fg:w="4790116"/><text x="7.9386%" y="1887.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,790,116 samples, 1.96%)</title><rect x="7.6886%" y="1861" width="1.9605%" height="15" fill="rgb(247,70,30)" fg:x="18785348" fg:w="4790116"/><text x="7.9386%" y="1871.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,790,116 samples, 1.96%)</title><rect x="7.6886%" y="1845" width="1.9605%" height="15" fill="rgb(212,68,19)" fg:x="18785348" fg:w="4790116"/><text x="7.9386%" y="1855.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,790,116 samples, 1.96%)</title><rect x="7.6886%" y="1829" width="1.9605%" height="15" fill="rgb(240,187,13)" fg:x="18785348" fg:w="4790116"/><text x="7.9386%" y="1839.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,234,014 samples, 0.51%)</title><rect x="9.1440%" y="1813" width="0.5051%" height="15" fill="rgb(223,113,26)" fg:x="22341450" fg:w="1234014"/><text x="9.3940%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,234,014 samples, 0.51%)</title><rect x="9.1440%" y="1797" width="0.5051%" height="15" fill="rgb(206,192,2)" fg:x="22341450" fg:w="1234014"/><text x="9.3940%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,234,014 samples, 0.51%)</title><rect x="9.1440%" y="1781" width="0.5051%" height="15" fill="rgb(241,108,4)" fg:x="22341450" fg:w="1234014"/><text x="9.3940%" y="1791.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,234,014 samples, 0.51%)</title><rect x="9.1440%" y="1765" width="0.5051%" height="15" fill="rgb(247,173,49)" fg:x="22341450" fg:w="1234014"/><text x="9.3940%" y="1775.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,234,014 samples, 0.51%)</title><rect x="9.1440%" y="1749" width="0.5051%" height="15" fill="rgb(224,114,35)" fg:x="22341450" fg:w="1234014"/><text x="9.3940%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,234,014 samples, 0.51%)</title><rect x="9.1440%" y="1733" width="0.5051%" height="15" fill="rgb(245,159,27)" fg:x="22341450" fg:w="1234014"/><text x="9.3940%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,234,014 samples, 0.51%)</title><rect x="9.1440%" y="1717" width="0.5051%" height="15" fill="rgb(245,172,44)" fg:x="22341450" fg:w="1234014"/><text x="9.3940%" y="1727.50"></text></g><g><title>alloc::slice::hack::to_vec (1,234,014 samples, 0.51%)</title><rect x="9.1440%" y="1701" width="0.5051%" height="15" fill="rgb(236,23,11)" fg:x="22341450" fg:w="1234014"/><text x="9.3940%" y="1711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,234,014 samples, 0.51%)</title><rect x="9.1440%" y="1685" width="0.5051%" height="15" fill="rgb(205,117,38)" fg:x="22341450" fg:w="1234014"/><text x="9.3940%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,234,014 samples, 0.51%)</title><rect x="9.1440%" y="1669" width="0.5051%" height="15" fill="rgb(237,72,25)" fg:x="22341450" fg:w="1234014"/><text x="9.3940%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,234,014 samples, 0.51%)</title><rect x="9.1440%" y="1653" width="0.5051%" height="15" fill="rgb(244,70,9)" fg:x="22341450" fg:w="1234014"/><text x="9.3940%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,234,014 samples, 0.51%)</title><rect x="9.1440%" y="1637" width="0.5051%" height="15" fill="rgb(217,125,39)" fg:x="22341450" fg:w="1234014"/><text x="9.3940%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,234,014 samples, 0.51%)</title><rect x="9.1440%" y="1621" width="0.5051%" height="15" fill="rgb(235,36,10)" fg:x="22341450" fg:w="1234014"/><text x="9.3940%" y="1631.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,170,522 samples, 0.48%)</title><rect x="9.6491%" y="1285" width="0.4791%" height="15" fill="rgb(251,123,47)" fg:x="23575464" fg:w="1170522"/><text x="9.8991%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,170,522 samples, 0.48%)</title><rect x="9.6491%" y="1269" width="0.4791%" height="15" fill="rgb(221,13,13)" fg:x="23575464" fg:w="1170522"/><text x="9.8991%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,170,522 samples, 0.48%)</title><rect x="9.6491%" y="1253" width="0.4791%" height="15" fill="rgb(238,131,9)" fg:x="23575464" fg:w="1170522"/><text x="9.8991%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,170,522 samples, 0.48%)</title><rect x="9.6491%" y="1237" width="0.4791%" height="15" fill="rgb(211,50,8)" fg:x="23575464" fg:w="1170522"/><text x="9.8991%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,170,522 samples, 0.48%)</title><rect x="9.6491%" y="1221" width="0.4791%" height="15" fill="rgb(245,182,24)" fg:x="23575464" fg:w="1170522"/><text x="9.8991%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,170,522 samples, 0.48%)</title><rect x="9.6491%" y="1205" width="0.4791%" height="15" fill="rgb(242,14,37)" fg:x="23575464" fg:w="1170522"/><text x="9.8991%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,170,522 samples, 0.48%)</title><rect x="9.6491%" y="1189" width="0.4791%" height="15" fill="rgb(246,228,12)" fg:x="23575464" fg:w="1170522"/><text x="9.8991%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (1,170,522 samples, 0.48%)</title><rect x="9.6491%" y="1173" width="0.4791%" height="15" fill="rgb(213,55,15)" fg:x="23575464" fg:w="1170522"/><text x="9.8991%" y="1183.50"></text></g><g><title>cfree (1,170,522 samples, 0.48%)</title><rect x="9.6491%" y="1157" width="0.4791%" height="15" fill="rgb(209,9,3)" fg:x="23575464" fg:w="1170522"/><text x="9.8991%" y="1167.50"></text></g><g><title>[libc.so.6] (1,170,522 samples, 0.48%)</title><rect x="9.6491%" y="1141" width="0.4791%" height="15" fill="rgb(230,59,30)" fg:x="23575464" fg:w="1170522"/><text x="9.8991%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="2117" width="0.9952%" height="15" fill="rgb(209,121,21)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="2101" width="0.9952%" height="15" fill="rgb(220,109,13)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="2085" width="0.9952%" height="15" fill="rgb(232,18,1)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="2069" width="0.9952%" height="15" fill="rgb(215,41,42)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="2053" width="0.9952%" height="15" fill="rgb(224,123,36)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="2037" width="0.9952%" height="15" fill="rgb(240,125,3)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="2047.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="2021" width="0.9952%" height="15" fill="rgb(205,98,50)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="2031.50"></text></g><g><title>core::mem::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="2005" width="0.9952%" height="15" fill="rgb(205,185,37)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1989" width="0.9952%" height="15" fill="rgb(238,207,15)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1999.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1973" width="0.9952%" height="15" fill="rgb(213,199,42)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1957" width="0.9952%" height="15" fill="rgb(235,201,11)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1941" width="0.9952%" height="15" fill="rgb(207,46,11)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1925" width="0.9952%" height="15" fill="rgb(241,35,35)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1935.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1909" width="0.9952%" height="15" fill="rgb(243,32,47)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1893" width="0.9952%" height="15" fill="rgb(247,202,23)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1877" width="0.9952%" height="15" fill="rgb(219,102,11)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1861" width="0.9952%" height="15" fill="rgb(243,110,44)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1845" width="0.9952%" height="15" fill="rgb(222,74,54)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1855.50"></text></g><g><title>core::mem::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1829" width="0.9952%" height="15" fill="rgb(216,99,12)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1813" width="0.9952%" height="15" fill="rgb(226,22,26)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1797" width="0.9952%" height="15" fill="rgb(217,163,10)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1807.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1781" width="0.9952%" height="15" fill="rgb(213,25,53)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1765" width="0.9952%" height="15" fill="rgb(252,105,26)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1775.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1749" width="0.9952%" height="15" fill="rgb(220,39,43)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1759.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1733" width="0.9952%" height="15" fill="rgb(229,68,48)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1717" width="0.9952%" height="15" fill="rgb(252,8,32)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1701" width="0.9952%" height="15" fill="rgb(223,20,43)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1685" width="0.9952%" height="15" fill="rgb(229,81,49)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1669" width="0.9952%" height="15" fill="rgb(236,28,36)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1653" width="0.9952%" height="15" fill="rgb(249,185,26)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1637" width="0.9952%" height="15" fill="rgb(249,174,33)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1621" width="0.9952%" height="15" fill="rgb(233,201,37)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1605" width="0.9952%" height="15" fill="rgb(221,78,26)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1615.50"></text></g><g><title>core::mem::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1589" width="0.9952%" height="15" fill="rgb(250,127,30)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1573" width="0.9952%" height="15" fill="rgb(230,49,44)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1557" width="0.9952%" height="15" fill="rgb(229,67,23)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1541" width="0.9952%" height="15" fill="rgb(249,83,47)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1525" width="0.9952%" height="15" fill="rgb(215,43,3)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1535.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1509" width="0.9952%" height="15" fill="rgb(238,154,13)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1519.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1493" width="0.9952%" height="15" fill="rgb(219,56,2)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1477" width="0.9952%" height="15" fill="rgb(233,0,4)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1461" width="0.9952%" height="15" fill="rgb(235,30,7)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1445" width="0.9952%" height="15" fill="rgb(250,79,13)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1429" width="0.9952%" height="15" fill="rgb(211,146,34)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1413" width="0.9952%" height="15" fill="rgb(228,22,38)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1397" width="0.9952%" height="15" fill="rgb(235,168,5)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1381" width="0.9952%" height="15" fill="rgb(221,155,16)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1365" width="0.9952%" height="15" fill="rgb(215,215,53)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1375.50"></text></g><g><title>core::mem::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1349" width="0.9952%" height="15" fill="rgb(223,4,10)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1333" width="0.9952%" height="15" fill="rgb(234,103,6)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1317" width="0.9952%" height="15" fill="rgb(227,97,0)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1327.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,431,470 samples, 1.00%)</title><rect x="9.6491%" y="1301" width="0.9952%" height="15" fill="rgb(234,150,53)" fg:x="23575464" fg:w="2431470"/><text x="9.8991%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1285" width="0.5161%" height="15" fill="rgb(228,201,54)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1295.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1269" width="0.5161%" height="15" fill="rgb(222,22,37)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1279.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1253" width="0.5161%" height="15" fill="rgb(237,53,32)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1237" width="0.5161%" height="15" fill="rgb(233,25,53)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1221" width="0.5161%" height="15" fill="rgb(210,40,34)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1205" width="0.5161%" height="15" fill="rgb(241,220,44)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1189" width="0.5161%" height="15" fill="rgb(235,28,35)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1173" width="0.5161%" height="15" fill="rgb(210,56,17)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1157" width="0.5161%" height="15" fill="rgb(224,130,29)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1141" width="0.5161%" height="15" fill="rgb(235,212,8)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1125" width="0.5161%" height="15" fill="rgb(223,33,50)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1135.50"></text></g><g><title>core::mem::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1109" width="0.5161%" height="15" fill="rgb(219,149,13)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1093" width="0.5161%" height="15" fill="rgb(250,156,29)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1077" width="0.5161%" height="15" fill="rgb(216,193,19)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1061" width="0.5161%" height="15" fill="rgb(216,135,14)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1045" width="0.5161%" height="15" fill="rgb(241,47,5)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1029" width="0.5161%" height="15" fill="rgb(233,42,35)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1039.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="1013" width="0.5161%" height="15" fill="rgb(231,13,6)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="997" width="0.5161%" height="15" fill="rgb(207,181,40)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="981" width="0.5161%" height="15" fill="rgb(254,173,49)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="965" width="0.5161%" height="15" fill="rgb(221,1,38)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="949" width="0.5161%" height="15" fill="rgb(206,124,46)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="933" width="0.5161%" height="15" fill="rgb(249,21,11)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="917" width="0.5161%" height="15" fill="rgb(222,201,40)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="901" width="0.5161%" height="15" fill="rgb(235,61,29)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="885" width="0.5161%" height="15" fill="rgb(219,207,3)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="895.50"></text></g><g><title>core::mem::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="869" width="0.5161%" height="15" fill="rgb(222,56,46)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="853" width="0.5161%" height="15" fill="rgb(239,76,54)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="837" width="0.5161%" height="15" fill="rgb(231,124,27)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="847.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="821" width="0.5161%" height="15" fill="rgb(249,195,6)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="805" width="0.5161%" height="15" fill="rgb(237,174,47)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="789" width="0.5161%" height="15" fill="rgb(206,201,31)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="799.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="773" width="0.5161%" height="15" fill="rgb(231,57,52)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="757" width="0.5161%" height="15" fill="rgb(248,177,22)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="741" width="0.5161%" height="15" fill="rgb(215,211,37)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="725" width="0.5161%" height="15" fill="rgb(241,128,51)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="709" width="0.5161%" height="15" fill="rgb(227,165,31)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="693" width="0.5161%" height="15" fill="rgb(228,167,24)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="677" width="0.5161%" height="15" fill="rgb(228,143,12)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="661" width="0.5161%" height="15" fill="rgb(249,149,8)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="645" width="0.5161%" height="15" fill="rgb(243,35,44)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="655.50"></text></g><g><title>core::mem::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="629" width="0.5161%" height="15" fill="rgb(246,89,9)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="613" width="0.5161%" height="15" fill="rgb(233,213,13)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="597" width="0.5161%" height="15" fill="rgb(233,141,41)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="581" width="0.5161%" height="15" fill="rgb(239,167,4)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="565" width="0.5161%" height="15" fill="rgb(209,217,16)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="549" width="0.5161%" height="15" fill="rgb(219,88,35)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="533" width="0.5161%" height="15" fill="rgb(220,193,23)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="517" width="0.5161%" height="15" fill="rgb(230,90,52)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="501" width="0.5161%" height="15" fill="rgb(252,106,19)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="485" width="0.5161%" height="15" fill="rgb(206,74,20)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="469" width="0.5161%" height="15" fill="rgb(230,138,44)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="453" width="0.5161%" height="15" fill="rgb(235,182,43)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="437" width="0.5161%" height="15" fill="rgb(242,16,51)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="421" width="0.5161%" height="15" fill="rgb(248,9,4)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="405" width="0.5161%" height="15" fill="rgb(210,31,22)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="415.50"></text></g><g><title>core::mem::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="389" width="0.5161%" height="15" fill="rgb(239,54,39)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="373" width="0.5161%" height="15" fill="rgb(230,99,41)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="357" width="0.5161%" height="15" fill="rgb(253,106,12)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="341" width="0.5161%" height="15" fill="rgb(213,46,41)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="325" width="0.5161%" height="15" fill="rgb(215,133,35)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="309" width="0.5161%" height="15" fill="rgb(213,28,5)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="319.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="293" width="0.5161%" height="15" fill="rgb(215,77,49)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="277" width="0.5161%" height="15" fill="rgb(248,100,22)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="261" width="0.5161%" height="15" fill="rgb(208,67,9)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="245" width="0.5161%" height="15" fill="rgb(219,133,21)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="229" width="0.5161%" height="15" fill="rgb(246,46,29)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="239.50"></text></g><g><title>core::mem::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="213" width="0.5161%" height="15" fill="rgb(246,185,52)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="197" width="0.5161%" height="15" fill="rgb(252,136,11)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="181" width="0.5161%" height="15" fill="rgb(219,138,53)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="165" width="0.5161%" height="15" fill="rgb(211,51,23)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="175.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="149" width="0.5161%" height="15" fill="rgb(247,221,28)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="159.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="133" width="0.5161%" height="15" fill="rgb(251,222,45)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="143.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="117" width="0.5161%" height="15" fill="rgb(217,162,53)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="101" width="0.5161%" height="15" fill="rgb(229,93,14)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="111.50"></text></g><g><title>alloc::alloc::dealloc (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="85" width="0.5161%" height="15" fill="rgb(209,67,49)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="95.50"></text></g><g><title>cfree (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="69" width="0.5161%" height="15" fill="rgb(213,87,29)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="79.50"></text></g><g><title>[libc.so.6] (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="53" width="0.5161%" height="15" fill="rgb(205,151,52)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="63.50"></text></g><g><title>[libc.so.6] (1,260,948 samples, 0.52%)</title><rect x="10.1282%" y="37" width="0.5161%" height="15" fill="rgb(253,215,39)" fg:x="24745986" fg:w="1260948"/><text x="10.3782%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,333,579 samples, 0.55%)</title><rect x="10.6443%" y="2117" width="0.5458%" height="15" fill="rgb(221,220,41)" fg:x="26006934" fg:w="1333579"/><text x="10.8943%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,333,579 samples, 0.55%)</title><rect x="10.6443%" y="2101" width="0.5458%" height="15" fill="rgb(218,133,21)" fg:x="26006934" fg:w="1333579"/><text x="10.8943%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,333,579 samples, 0.55%)</title><rect x="10.6443%" y="2085" width="0.5458%" height="15" fill="rgb(221,193,43)" fg:x="26006934" fg:w="1333579"/><text x="10.8943%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,333,579 samples, 0.55%)</title><rect x="10.6443%" y="2069" width="0.5458%" height="15" fill="rgb(240,128,52)" fg:x="26006934" fg:w="1333579"/><text x="10.8943%" y="2079.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,333,579 samples, 0.55%)</title><rect x="10.6443%" y="2053" width="0.5458%" height="15" fill="rgb(253,114,12)" fg:x="26006934" fg:w="1333579"/><text x="10.8943%" y="2063.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,333,579 samples, 0.55%)</title><rect x="10.6443%" y="2037" width="0.5458%" height="15" fill="rgb(215,223,47)" fg:x="26006934" fg:w="1333579"/><text x="10.8943%" y="2047.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,333,579 samples, 0.55%)</title><rect x="10.6443%" y="2021" width="0.5458%" height="15" fill="rgb(248,225,23)" fg:x="26006934" fg:w="1333579"/><text x="10.8943%" y="2031.50"></text></g><g><title>alloc::alloc::realloc (1,333,579 samples, 0.55%)</title><rect x="10.6443%" y="2005" width="0.5458%" height="15" fill="rgb(250,108,0)" fg:x="26006934" fg:w="1333579"/><text x="10.8943%" y="2015.50"></text></g><g><title>realloc (1,333,579 samples, 0.55%)</title><rect x="10.6443%" y="1989" width="0.5458%" height="15" fill="rgb(228,208,7)" fg:x="26006934" fg:w="1333579"/><text x="10.8943%" y="1999.50"></text></g><g><title>[libc.so.6] (1,333,579 samples, 0.55%)</title><rect x="10.6443%" y="1973" width="0.5458%" height="15" fill="rgb(244,45,10)" fg:x="26006934" fg:w="1333579"/><text x="10.8943%" y="1983.50"></text></g><g><title>[libc.so.6] (1,333,579 samples, 0.55%)</title><rect x="10.6443%" y="1957" width="0.5458%" height="15" fill="rgb(207,125,25)" fg:x="26006934" fg:w="1333579"/><text x="10.8943%" y="1967.50"></text></g><g><title>[libc.so.6] (1,333,579 samples, 0.55%)</title><rect x="10.6443%" y="1941" width="0.5458%" height="15" fill="rgb(210,195,18)" fg:x="26006934" fg:w="1333579"/><text x="10.8943%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,933,537 samples, 1.61%)</title><rect x="11.1901%" y="2085" width="1.6099%" height="15" fill="rgb(249,80,12)" fg:x="27340513" fg:w="3933537"/><text x="11.4401%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,933,537 samples, 1.61%)</title><rect x="11.1901%" y="2069" width="1.6099%" height="15" fill="rgb(221,65,9)" fg:x="27340513" fg:w="3933537"/><text x="11.4401%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,933,537 samples, 1.61%)</title><rect x="11.1901%" y="2053" width="1.6099%" height="15" fill="rgb(235,49,36)" fg:x="27340513" fg:w="3933537"/><text x="11.4401%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,933,537 samples, 1.61%)</title><rect x="11.1901%" y="2037" width="1.6099%" height="15" fill="rgb(225,32,20)" fg:x="27340513" fg:w="3933537"/><text x="11.4401%" y="2047.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,933,537 samples, 1.61%)</title><rect x="11.1901%" y="2021" width="1.6099%" height="15" fill="rgb(215,141,46)" fg:x="27340513" fg:w="3933537"/><text x="11.4401%" y="2031.50"></text></g><g><title>malloc (3,933,537 samples, 1.61%)</title><rect x="11.1901%" y="2005" width="1.6099%" height="15" fill="rgb(250,160,47)" fg:x="27340513" fg:w="3933537"/><text x="11.4401%" y="2015.50"></text></g><g><title>[libc.so.6] (3,933,537 samples, 1.61%)</title><rect x="11.1901%" y="1989" width="1.6099%" height="15" fill="rgb(216,222,40)" fg:x="27340513" fg:w="3933537"/><text x="11.4401%" y="1999.50"></text></g><g><title>[libc.so.6] (3,933,537 samples, 1.61%)</title><rect x="11.1901%" y="1973" width="1.6099%" height="15" fill="rgb(234,217,39)" fg:x="27340513" fg:w="3933537"/><text x="11.4401%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,489,235 samples, 1.02%)</title><rect x="12.8000%" y="2069" width="1.0188%" height="15" fill="rgb(207,178,40)" fg:x="31274050" fg:w="2489235"/><text x="13.0500%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,489,235 samples, 1.02%)</title><rect x="12.8000%" y="2053" width="1.0188%" height="15" fill="rgb(221,136,13)" fg:x="31274050" fg:w="2489235"/><text x="13.0500%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,489,235 samples, 1.02%)</title><rect x="12.8000%" y="2037" width="1.0188%" height="15" fill="rgb(249,199,10)" fg:x="31274050" fg:w="2489235"/><text x="13.0500%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,489,235 samples, 1.02%)</title><rect x="12.8000%" y="2021" width="1.0188%" height="15" fill="rgb(249,222,13)" fg:x="31274050" fg:w="2489235"/><text x="13.0500%" y="2031.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,489,235 samples, 1.02%)</title><rect x="12.8000%" y="2005" width="1.0188%" height="15" fill="rgb(244,185,38)" fg:x="31274050" fg:w="2489235"/><text x="13.0500%" y="2015.50"></text></g><g><title>malloc (2,489,235 samples, 1.02%)</title><rect x="12.8000%" y="1989" width="1.0188%" height="15" fill="rgb(236,202,9)" fg:x="31274050" fg:w="2489235"/><text x="13.0500%" y="1999.50"></text></g><g><title>[libc.so.6] (2,489,235 samples, 1.02%)</title><rect x="12.8000%" y="1973" width="1.0188%" height="15" fill="rgb(250,229,37)" fg:x="31274050" fg:w="2489235"/><text x="13.0500%" y="1983.50"></text></g><g><title>[libc.so.6] (2,489,235 samples, 1.02%)</title><rect x="12.8000%" y="1957" width="1.0188%" height="15" fill="rgb(206,174,23)" fg:x="31274050" fg:w="2489235"/><text x="13.0500%" y="1967.50"></text></g><g><title>[libc.so.6] (1,199,975 samples, 0.49%)</title><rect x="13.3277%" y="1941" width="0.4911%" height="15" fill="rgb(211,33,43)" fg:x="32563310" fg:w="1199975"/><text x="13.5777%" y="1951.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (921,362 samples, 0.38%)</title><rect x="13.8188%" y="2037" width="0.3771%" height="15" fill="rgb(245,58,50)" fg:x="33763285" fg:w="921362"/><text x="14.0688%" y="2047.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (921,362 samples, 0.38%)</title><rect x="13.8188%" y="2021" width="0.3771%" height="15" fill="rgb(244,68,36)" fg:x="33763285" fg:w="921362"/><text x="14.0688%" y="2031.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (921,362 samples, 0.38%)</title><rect x="13.8188%" y="2005" width="0.3771%" height="15" fill="rgb(232,229,15)" fg:x="33763285" fg:w="921362"/><text x="14.0688%" y="2015.50"></text></g><g><title>core::fmt::Formatter::pad_integral (921,362 samples, 0.38%)</title><rect x="13.8188%" y="1989" width="0.3771%" height="15" fill="rgb(254,30,23)" fg:x="33763285" fg:w="921362"/><text x="14.0688%" y="1999.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (921,362 samples, 0.38%)</title><rect x="13.8188%" y="1973" width="0.3771%" height="15" fill="rgb(235,160,14)" fg:x="33763285" fg:w="921362"/><text x="14.0688%" y="1983.50"></text></g><g><title>benchmark::json_to_html_node (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="2005" width="0.5033%" height="15" fill="rgb(212,155,44)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="2015.50"></text></g><g><title>benchmark::json_to_html_node (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="1989" width="0.5033%" height="15" fill="rgb(226,2,50)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="1999.50"></text></g><g><title>benchmark::json_to_html_node (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="1973" width="0.5033%" height="15" fill="rgb(234,177,6)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="1983.50"></text></g><g><title>benchmark::json_to_html_node (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="1957" width="0.5033%" height="15" fill="rgb(217,24,9)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="1967.50"></text></g><g><title>serde_json::value::Value::get (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="1941" width="0.5033%" height="15" fill="rgb(220,13,46)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="1951.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="1925" width="0.5033%" height="15" fill="rgb(239,221,27)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="1935.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="1909" width="0.5033%" height="15" fill="rgb(222,198,25)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="1919.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="1893" width="0.5033%" height="15" fill="rgb(211,99,13)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="1903.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="1877" width="0.5033%" height="15" fill="rgb(232,111,31)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="1887.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="1861" width="0.5033%" height="15" fill="rgb(245,82,37)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="1871.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="1845" width="0.5033%" height="15" fill="rgb(227,149,46)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="1855.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="1829" width="0.5033%" height="15" fill="rgb(218,36,50)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="1839.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="1813" width="0.5033%" height="15" fill="rgb(226,80,48)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="1823.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="1797" width="0.5033%" height="15" fill="rgb(238,224,15)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="1807.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="1781" width="0.5033%" height="15" fill="rgb(241,136,10)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="1791.50"></text></g><g><title>[libc.so.6] (1,229,821 samples, 0.50%)</title><rect x="14.1959%" y="1765" width="0.5033%" height="15" fill="rgb(208,32,45)" fg:x="34684647" fg:w="1229821"/><text x="14.4459%" y="1775.50"></text></g><g><title>benchmark::json_to_html_node (2,202,852 samples, 0.90%)</title><rect x="14.1959%" y="2021" width="0.9016%" height="15" fill="rgb(207,135,9)" fg:x="34684647" fg:w="2202852"/><text x="14.4459%" y="2031.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (973,031 samples, 0.40%)</title><rect x="14.6993%" y="2005" width="0.3982%" height="15" fill="rgb(206,86,44)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="2015.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1989" width="0.3982%" height="15" fill="rgb(245,177,15)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1999.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1973" width="0.3982%" height="15" fill="rgb(206,64,50)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1983.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1957" width="0.3982%" height="15" fill="rgb(234,36,40)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1967.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1941" width="0.3982%" height="15" fill="rgb(213,64,8)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1925" width="0.3982%" height="15" fill="rgb(210,75,36)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1935.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1909" width="0.3982%" height="15" fill="rgb(229,88,21)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1893" width="0.3982%" height="15" fill="rgb(252,204,47)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1877" width="0.3982%" height="15" fill="rgb(208,77,27)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1887.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1861" width="0.3982%" height="15" fill="rgb(221,76,26)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1871.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1845" width="0.3982%" height="15" fill="rgb(225,139,18)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1829" width="0.3982%" height="15" fill="rgb(230,137,11)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1839.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1813" width="0.3982%" height="15" fill="rgb(212,28,1)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1797" width="0.3982%" height="15" fill="rgb(248,164,17)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1781" width="0.3982%" height="15" fill="rgb(222,171,42)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1765" width="0.3982%" height="15" fill="rgb(243,84,45)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl_hash (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1749" width="0.3982%" height="15" fill="rgb(252,49,23)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTableInner::set_ctrl (973,031 samples, 0.40%)</title><rect x="14.6993%" y="1733" width="0.3982%" height="15" fill="rgb(215,19,7)" fg:x="35914468" fg:w="973031"/><text x="14.9493%" y="1743.50"></text></g><g><title>benchmark::apply_frame_modifications (10,674,603 samples, 4.37%)</title><rect x="11.1901%" y="2117" width="4.3690%" height="15" fill="rgb(238,81,41)" fg:x="27340513" fg:w="10674603"/><text x="11.4401%" y="2127.50">bench..</text></g><g><title>benchmark::json_to_html_node (10,674,603 samples, 4.37%)</title><rect x="11.1901%" y="2101" width="4.3690%" height="15" fill="rgb(210,199,37)" fg:x="27340513" fg:w="10674603"/><text x="11.4401%" y="2111.50">bench..</text></g><g><title>benchmark::json_to_html_node (6,741,066 samples, 2.76%)</title><rect x="12.8000%" y="2085" width="2.7590%" height="15" fill="rgb(244,192,49)" fg:x="31274050" fg:w="6741066"/><text x="13.0500%" y="2095.50">be..</text></g><g><title>benchmark::json_to_html_node (4,251,831 samples, 1.74%)</title><rect x="13.8188%" y="2069" width="1.7402%" height="15" fill="rgb(226,211,11)" fg:x="33763285" fg:w="4251831"/><text x="14.0688%" y="2079.50"></text></g><g><title>benchmark::json_to_html_node (4,251,831 samples, 1.74%)</title><rect x="13.8188%" y="2053" width="1.7402%" height="15" fill="rgb(236,162,54)" fg:x="33763285" fg:w="4251831"/><text x="14.0688%" y="2063.50"></text></g><g><title>benchmark::json_to_html_node (3,330,469 samples, 1.36%)</title><rect x="14.1959%" y="2037" width="1.3631%" height="15" fill="rgb(220,229,9)" fg:x="34684647" fg:w="3330469"/><text x="14.4459%" y="2047.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="2021" width="0.4615%" height="15" fill="rgb(250,87,22)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="2031.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="2005" width="0.4615%" height="15" fill="rgb(239,43,17)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="2015.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1989" width="0.4615%" height="15" fill="rgb(231,177,25)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1999.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1973" width="0.4615%" height="15" fill="rgb(219,179,1)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1983.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1957" width="0.4615%" height="15" fill="rgb(238,219,53)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1941" width="0.4615%" height="15" fill="rgb(232,167,36)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1925" width="0.4615%" height="15" fill="rgb(244,19,51)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1935.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1909" width="0.4615%" height="15" fill="rgb(224,6,22)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1893" width="0.4615%" height="15" fill="rgb(224,145,5)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1903.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1877" width="0.4615%" height="15" fill="rgb(234,130,49)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1887.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1861" width="0.4615%" height="15" fill="rgb(254,6,2)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1845" width="0.4615%" height="15" fill="rgb(208,96,46)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1855.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1829" width="0.4615%" height="15" fill="rgb(239,3,39)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1839.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1813" width="0.4615%" height="15" fill="rgb(233,210,1)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1797" width="0.4615%" height="15" fill="rgb(244,137,37)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1781" width="0.4615%" height="15" fill="rgb(240,136,2)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1765" width="0.4615%" height="15" fill="rgb(239,18,37)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1749" width="0.4615%" height="15" fill="rgb(218,185,22)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1733" width="0.4615%" height="15" fill="rgb(225,218,4)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1717" width="0.4615%" height="15" fill="rgb(230,182,32)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1701" width="0.4615%" height="15" fill="rgb(242,56,43)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1685" width="0.4615%" height="15" fill="rgb(233,99,24)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1669" width="0.4615%" height="15" fill="rgb(234,209,42)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1679.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (1,127,617 samples, 0.46%)</title><rect x="15.0975%" y="1653" width="0.4615%" height="15" fill="rgb(227,7,12)" fg:x="36887499" fg:w="1127617"/><text x="15.3475%" y="1663.50"></text></g><g><title>[libc.so.6] (1,253,049 samples, 0.51%)</title><rect x="16.1014%" y="1477" width="0.5129%" height="15" fill="rgb(245,203,43)" fg:x="39340241" fg:w="1253049"/><text x="16.3514%" y="1487.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,551,733 samples, 1.04%)</title><rect x="16.1014%" y="1685" width="1.0444%" height="15" fill="rgb(238,205,33)" fg:x="39340241" fg:w="2551733"/><text x="16.3514%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,551,733 samples, 1.04%)</title><rect x="16.1014%" y="1669" width="1.0444%" height="15" fill="rgb(231,56,7)" fg:x="39340241" fg:w="2551733"/><text x="16.3514%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,551,733 samples, 1.04%)</title><rect x="16.1014%" y="1653" width="1.0444%" height="15" fill="rgb(244,186,29)" fg:x="39340241" fg:w="2551733"/><text x="16.3514%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (2,551,733 samples, 1.04%)</title><rect x="16.1014%" y="1637" width="1.0444%" height="15" fill="rgb(234,111,31)" fg:x="39340241" fg:w="2551733"/><text x="16.3514%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,551,733 samples, 1.04%)</title><rect x="16.1014%" y="1621" width="1.0444%" height="15" fill="rgb(241,149,10)" fg:x="39340241" fg:w="2551733"/><text x="16.3514%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,551,733 samples, 1.04%)</title><rect x="16.1014%" y="1605" width="1.0444%" height="15" fill="rgb(249,206,44)" fg:x="39340241" fg:w="2551733"/><text x="16.3514%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,551,733 samples, 1.04%)</title><rect x="16.1014%" y="1589" width="1.0444%" height="15" fill="rgb(251,153,30)" fg:x="39340241" fg:w="2551733"/><text x="16.3514%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,551,733 samples, 1.04%)</title><rect x="16.1014%" y="1573" width="1.0444%" height="15" fill="rgb(239,152,38)" fg:x="39340241" fg:w="2551733"/><text x="16.3514%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,551,733 samples, 1.04%)</title><rect x="16.1014%" y="1557" width="1.0444%" height="15" fill="rgb(249,139,47)" fg:x="39340241" fg:w="2551733"/><text x="16.3514%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,551,733 samples, 1.04%)</title><rect x="16.1014%" y="1541" width="1.0444%" height="15" fill="rgb(244,64,35)" fg:x="39340241" fg:w="2551733"/><text x="16.3514%" y="1551.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,551,733 samples, 1.04%)</title><rect x="16.1014%" y="1525" width="1.0444%" height="15" fill="rgb(216,46,15)" fg:x="39340241" fg:w="2551733"/><text x="16.3514%" y="1535.50"></text></g><g><title>alloc::alloc::alloc (2,551,733 samples, 1.04%)</title><rect x="16.1014%" y="1509" width="1.0444%" height="15" fill="rgb(250,74,19)" fg:x="39340241" fg:w="2551733"/><text x="16.3514%" y="1519.50"></text></g><g><title>malloc (2,551,733 samples, 1.04%)</title><rect x="16.1014%" y="1493" width="1.0444%" height="15" fill="rgb(249,42,33)" fg:x="39340241" fg:w="2551733"/><text x="16.3514%" y="1503.50"></text></g><g><title>[unknown] (1,298,684 samples, 0.53%)</title><rect x="16.6143%" y="1477" width="0.5315%" height="15" fill="rgb(242,149,17)" fg:x="40593290" fg:w="1298684"/><text x="16.8643%" y="1487.50"></text></g><g><title>[libc.so.6] (1,298,684 samples, 0.53%)</title><rect x="16.6143%" y="1461" width="0.5315%" height="15" fill="rgb(244,29,21)" fg:x="40593290" fg:w="1298684"/><text x="16.8643%" y="1471.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,318,160 samples, 0.54%)</title><rect x="17.1458%" y="1525" width="0.5395%" height="15" fill="rgb(220,130,37)" fg:x="41891974" fg:w="1318160"/><text x="17.3958%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,318,160 samples, 0.54%)</title><rect x="17.1458%" y="1509" width="0.5395%" height="15" fill="rgb(211,67,2)" fg:x="41891974" fg:w="1318160"/><text x="17.3958%" y="1519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,318,160 samples, 0.54%)</title><rect x="17.1458%" y="1493" width="0.5395%" height="15" fill="rgb(235,68,52)" fg:x="41891974" fg:w="1318160"/><text x="17.3958%" y="1503.50"></text></g><g><title>alloc::slice::hack::to_vec (1,318,160 samples, 0.54%)</title><rect x="17.1458%" y="1477" width="0.5395%" height="15" fill="rgb(246,142,3)" fg:x="41891974" fg:w="1318160"/><text x="17.3958%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,318,160 samples, 0.54%)</title><rect x="17.1458%" y="1461" width="0.5395%" height="15" fill="rgb(241,25,7)" fg:x="41891974" fg:w="1318160"/><text x="17.3958%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,318,160 samples, 0.54%)</title><rect x="17.1458%" y="1445" width="0.5395%" height="15" fill="rgb(242,119,39)" fg:x="41891974" fg:w="1318160"/><text x="17.3958%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,318,160 samples, 0.54%)</title><rect x="17.1458%" y="1429" width="0.5395%" height="15" fill="rgb(241,98,45)" fg:x="41891974" fg:w="1318160"/><text x="17.3958%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,318,160 samples, 0.54%)</title><rect x="17.1458%" y="1413" width="0.5395%" height="15" fill="rgb(254,28,30)" fg:x="41891974" fg:w="1318160"/><text x="17.3958%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,318,160 samples, 0.54%)</title><rect x="17.1458%" y="1397" width="0.5395%" height="15" fill="rgb(241,142,54)" fg:x="41891974" fg:w="1318160"/><text x="17.3958%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,318,160 samples, 0.54%)</title><rect x="17.1458%" y="1381" width="0.5395%" height="15" fill="rgb(222,85,15)" fg:x="41891974" fg:w="1318160"/><text x="17.3958%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,318,160 samples, 0.54%)</title><rect x="17.1458%" y="1365" width="0.5395%" height="15" fill="rgb(210,85,47)" fg:x="41891974" fg:w="1318160"/><text x="17.3958%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (1,318,160 samples, 0.54%)</title><rect x="17.1458%" y="1349" width="0.5395%" height="15" fill="rgb(224,206,25)" fg:x="41891974" fg:w="1318160"/><text x="17.3958%" y="1359.50"></text></g><g><title>malloc (1,318,160 samples, 0.54%)</title><rect x="17.1458%" y="1333" width="0.5395%" height="15" fill="rgb(243,201,19)" fg:x="41891974" fg:w="1318160"/><text x="17.3958%" y="1343.50"></text></g><g><title>[libc.so.6] (1,318,160 samples, 0.54%)</title><rect x="17.1458%" y="1317" width="0.5395%" height="15" fill="rgb(236,59,4)" fg:x="41891974" fg:w="1318160"/><text x="17.3958%" y="1327.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,317,508 samples, 0.54%)</title><rect x="17.6853%" y="1445" width="0.5392%" height="15" fill="rgb(254,179,45)" fg:x="43210134" fg:w="1317508"/><text x="17.9353%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,317,508 samples, 0.54%)</title><rect x="17.6853%" y="1429" width="0.5392%" height="15" fill="rgb(226,14,10)" fg:x="43210134" fg:w="1317508"/><text x="17.9353%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,317,508 samples, 0.54%)</title><rect x="17.6853%" y="1413" width="0.5392%" height="15" fill="rgb(244,27,41)" fg:x="43210134" fg:w="1317508"/><text x="17.9353%" y="1423.50"></text></g><g><title>alloc::slice::hack::to_vec (1,317,508 samples, 0.54%)</title><rect x="17.6853%" y="1397" width="0.5392%" height="15" fill="rgb(235,35,32)" fg:x="43210134" fg:w="1317508"/><text x="17.9353%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,317,508 samples, 0.54%)</title><rect x="17.6853%" y="1381" width="0.5392%" height="15" fill="rgb(218,68,31)" fg:x="43210134" fg:w="1317508"/><text x="17.9353%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,317,508 samples, 0.54%)</title><rect x="17.6853%" y="1365" width="0.5392%" height="15" fill="rgb(207,120,37)" fg:x="43210134" fg:w="1317508"/><text x="17.9353%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,317,508 samples, 0.54%)</title><rect x="17.6853%" y="1349" width="0.5392%" height="15" fill="rgb(227,98,0)" fg:x="43210134" fg:w="1317508"/><text x="17.9353%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,317,508 samples, 0.54%)</title><rect x="17.6853%" y="1333" width="0.5392%" height="15" fill="rgb(207,7,3)" fg:x="43210134" fg:w="1317508"/><text x="17.9353%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,317,508 samples, 0.54%)</title><rect x="17.6853%" y="1317" width="0.5392%" height="15" fill="rgb(206,98,19)" fg:x="43210134" fg:w="1317508"/><text x="17.9353%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,317,508 samples, 0.54%)</title><rect x="17.6853%" y="1301" width="0.5392%" height="15" fill="rgb(217,5,26)" fg:x="43210134" fg:w="1317508"/><text x="17.9353%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,317,508 samples, 0.54%)</title><rect x="17.6853%" y="1285" width="0.5392%" height="15" fill="rgb(235,190,38)" fg:x="43210134" fg:w="1317508"/><text x="17.9353%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (1,317,508 samples, 0.54%)</title><rect x="17.6853%" y="1269" width="0.5392%" height="15" fill="rgb(247,86,24)" fg:x="43210134" fg:w="1317508"/><text x="17.9353%" y="1279.50"></text></g><g><title>malloc (1,317,508 samples, 0.54%)</title><rect x="17.6853%" y="1253" width="0.5392%" height="15" fill="rgb(205,101,16)" fg:x="43210134" fg:w="1317508"/><text x="17.9353%" y="1263.50"></text></g><g><title>[libc.so.6] (1,317,508 samples, 0.54%)</title><rect x="17.6853%" y="1237" width="0.5392%" height="15" fill="rgb(246,168,33)" fg:x="43210134" fg:w="1317508"/><text x="17.9353%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,329,718 samples, 0.54%)</title><rect x="18.2245%" y="1381" width="0.5442%" height="15" fill="rgb(231,114,1)" fg:x="44527642" fg:w="1329718"/><text x="18.4745%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,329,718 samples, 0.54%)</title><rect x="18.2245%" y="1365" width="0.5442%" height="15" fill="rgb(207,184,53)" fg:x="44527642" fg:w="1329718"/><text x="18.4745%" y="1375.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,329,718 samples, 0.54%)</title><rect x="18.2245%" y="1349" width="0.5442%" height="15" fill="rgb(224,95,51)" fg:x="44527642" fg:w="1329718"/><text x="18.4745%" y="1359.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,329,718 samples, 0.54%)</title><rect x="18.2245%" y="1333" width="0.5442%" height="15" fill="rgb(212,188,45)" fg:x="44527642" fg:w="1329718"/><text x="18.4745%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,317,243 samples, 0.54%)</title><rect x="18.7688%" y="1221" width="0.5391%" height="15" fill="rgb(223,154,38)" fg:x="45857360" fg:w="1317243"/><text x="19.0188%" y="1231.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,280,284 samples, 0.52%)</title><rect x="19.3079%" y="1205" width="0.5240%" height="15" fill="rgb(251,22,52)" fg:x="47174603" fg:w="1280284"/><text x="19.5579%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,280,284 samples, 0.52%)</title><rect x="19.3079%" y="1189" width="0.5240%" height="15" fill="rgb(229,209,22)" fg:x="47174603" fg:w="1280284"/><text x="19.5579%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,280,284 samples, 0.52%)</title><rect x="19.3079%" y="1173" width="0.5240%" height="15" fill="rgb(234,138,34)" fg:x="47174603" fg:w="1280284"/><text x="19.5579%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (1,280,284 samples, 0.52%)</title><rect x="19.3079%" y="1157" width="0.5240%" height="15" fill="rgb(212,95,11)" fg:x="47174603" fg:w="1280284"/><text x="19.5579%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,280,284 samples, 0.52%)</title><rect x="19.3079%" y="1141" width="0.5240%" height="15" fill="rgb(240,179,47)" fg:x="47174603" fg:w="1280284"/><text x="19.5579%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,280,284 samples, 0.52%)</title><rect x="19.3079%" y="1125" width="0.5240%" height="15" fill="rgb(240,163,11)" fg:x="47174603" fg:w="1280284"/><text x="19.5579%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,280,284 samples, 0.52%)</title><rect x="19.3079%" y="1109" width="0.5240%" height="15" fill="rgb(236,37,12)" fg:x="47174603" fg:w="1280284"/><text x="19.5579%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,280,284 samples, 0.52%)</title><rect x="19.3079%" y="1093" width="0.5240%" height="15" fill="rgb(232,164,16)" fg:x="47174603" fg:w="1280284"/><text x="19.5579%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,280,284 samples, 0.52%)</title><rect x="19.3079%" y="1077" width="0.5240%" height="15" fill="rgb(244,205,15)" fg:x="47174603" fg:w="1280284"/><text x="19.5579%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,280,284 samples, 0.52%)</title><rect x="19.3079%" y="1061" width="0.5240%" height="15" fill="rgb(223,117,47)" fg:x="47174603" fg:w="1280284"/><text x="19.5579%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,280,284 samples, 0.52%)</title><rect x="19.3079%" y="1045" width="0.5240%" height="15" fill="rgb(244,107,35)" fg:x="47174603" fg:w="1280284"/><text x="19.5579%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1,280,284 samples, 0.52%)</title><rect x="19.3079%" y="1029" width="0.5240%" height="15" fill="rgb(205,140,8)" fg:x="47174603" fg:w="1280284"/><text x="19.5579%" y="1039.50"></text></g><g><title>malloc (1,280,284 samples, 0.52%)</title><rect x="19.3079%" y="1013" width="0.5240%" height="15" fill="rgb(228,84,46)" fg:x="47174603" fg:w="1280284"/><text x="19.5579%" y="1023.50"></text></g><g><title>[libc.so.6] (1,280,284 samples, 0.52%)</title><rect x="19.3079%" y="997" width="0.5240%" height="15" fill="rgb(254,188,9)" fg:x="47174603" fg:w="1280284"/><text x="19.5579%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="645" width="0.5500%" height="15" fill="rgb(206,112,54)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="629" width="0.5500%" height="15" fill="rgb(216,84,49)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="613" width="0.5500%" height="15" fill="rgb(214,194,35)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="597" width="0.5500%" height="15" fill="rgb(249,28,3)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="607.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="581" width="0.5500%" height="15" fill="rgb(222,56,52)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="565" width="0.5500%" height="15" fill="rgb(245,217,50)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="549" width="0.5500%" height="15" fill="rgb(213,201,24)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="533" width="0.5500%" height="15" fill="rgb(248,116,28)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="517" width="0.5500%" height="15" fill="rgb(219,72,43)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="501" width="0.5500%" height="15" fill="rgb(209,138,14)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="485" width="0.5500%" height="15" fill="rgb(222,18,33)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="469" width="0.5500%" height="15" fill="rgb(213,199,7)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="453" width="0.5500%" height="15" fill="rgb(250,110,10)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="437" width="0.5500%" height="15" fill="rgb(248,123,6)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="421" width="0.5500%" height="15" fill="rgb(206,91,31)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="405" width="0.5500%" height="15" fill="rgb(211,154,13)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="389" width="0.5500%" height="15" fill="rgb(225,148,7)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="399.50"></text></g><g><title>malloc (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="373" width="0.5500%" height="15" fill="rgb(220,160,43)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="383.50"></text></g><g><title>[libc.so.6] (1,343,738 samples, 0.55%)</title><rect x="20.3572%" y="357" width="0.5500%" height="15" fill="rgb(213,52,39)" fg:x="49738372" fg:w="1343738"/><text x="20.6072%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,894,477 samples, 1.59%)</title><rect x="20.3572%" y="725" width="1.5940%" height="15" fill="rgb(243,137,7)" fg:x="49738372" fg:w="3894477"/><text x="20.6072%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,894,477 samples, 1.59%)</title><rect x="20.3572%" y="709" width="1.5940%" height="15" fill="rgb(230,79,13)" fg:x="49738372" fg:w="3894477"/><text x="20.6072%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (3,894,477 samples, 1.59%)</title><rect x="20.3572%" y="693" width="1.5940%" height="15" fill="rgb(247,105,23)" fg:x="49738372" fg:w="3894477"/><text x="20.6072%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,894,477 samples, 1.59%)</title><rect x="20.3572%" y="677" width="1.5940%" height="15" fill="rgb(223,179,41)" fg:x="49738372" fg:w="3894477"/><text x="20.6072%" y="687.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,894,477 samples, 1.59%)</title><rect x="20.3572%" y="661" width="1.5940%" height="15" fill="rgb(218,9,34)" fg:x="49738372" fg:w="3894477"/><text x="20.6072%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,550,739 samples, 1.04%)</title><rect x="20.9072%" y="645" width="1.0440%" height="15" fill="rgb(222,106,8)" fg:x="51082110" fg:w="2550739"/><text x="21.1572%" y="655.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,550,739 samples, 1.04%)</title><rect x="20.9072%" y="629" width="1.0440%" height="15" fill="rgb(211,220,0)" fg:x="51082110" fg:w="2550739"/><text x="21.1572%" y="639.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,258,891 samples, 0.52%)</title><rect x="21.4359%" y="613" width="0.5152%" height="15" fill="rgb(229,52,16)" fg:x="52373958" fg:w="1258891"/><text x="21.6859%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,141,088 samples, 2.10%)</title><rect x="20.3572%" y="805" width="2.1042%" height="15" fill="rgb(212,155,18)" fg:x="49738372" fg:w="5141088"/><text x="20.6072%" y="815.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,141,088 samples, 2.10%)</title><rect x="20.3572%" y="789" width="2.1042%" height="15" fill="rgb(242,21,14)" fg:x="49738372" fg:w="5141088"/><text x="20.6072%" y="799.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,141,088 samples, 2.10%)</title><rect x="20.3572%" y="773" width="2.1042%" height="15" fill="rgb(222,19,48)" fg:x="49738372" fg:w="5141088"/><text x="20.6072%" y="783.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,141,088 samples, 2.10%)</title><rect x="20.3572%" y="757" width="2.1042%" height="15" fill="rgb(232,45,27)" fg:x="49738372" fg:w="5141088"/><text x="20.6072%" y="767.50">&lt;..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (5,141,088 samples, 2.10%)</title><rect x="20.3572%" y="741" width="2.1042%" height="15" fill="rgb(249,103,42)" fg:x="49738372" fg:w="5141088"/><text x="20.6072%" y="751.50">&lt;..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,246,611 samples, 0.51%)</title><rect x="21.9512%" y="725" width="0.5102%" height="15" fill="rgb(246,81,33)" fg:x="53632849" fg:w="1246611"/><text x="22.2012%" y="735.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,246,611 samples, 0.51%)</title><rect x="21.9512%" y="709" width="0.5102%" height="15" fill="rgb(252,33,42)" fg:x="53632849" fg:w="1246611"/><text x="22.2012%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,246,611 samples, 0.51%)</title><rect x="21.9512%" y="693" width="0.5102%" height="15" fill="rgb(209,212,41)" fg:x="53632849" fg:w="1246611"/><text x="22.2012%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,246,611 samples, 0.51%)</title><rect x="21.9512%" y="677" width="0.5102%" height="15" fill="rgb(207,154,6)" fg:x="53632849" fg:w="1246611"/><text x="22.2012%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,246,611 samples, 0.51%)</title><rect x="21.9512%" y="661" width="0.5102%" height="15" fill="rgb(223,64,47)" fg:x="53632849" fg:w="1246611"/><text x="22.2012%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,246,611 samples, 0.51%)</title><rect x="21.9512%" y="645" width="0.5102%" height="15" fill="rgb(211,161,38)" fg:x="53632849" fg:w="1246611"/><text x="22.2012%" y="655.50"></text></g><g><title>core::clone::Clone::clone (1,246,611 samples, 0.51%)</title><rect x="21.9512%" y="629" width="0.5102%" height="15" fill="rgb(219,138,40)" fg:x="53632849" fg:w="1246611"/><text x="22.2012%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,246,611 samples, 0.51%)</title><rect x="21.9512%" y="613" width="0.5102%" height="15" fill="rgb(241,228,46)" fg:x="53632849" fg:w="1246611"/><text x="22.2012%" y="623.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,327,870 samples, 0.54%)</title><rect x="22.4614%" y="805" width="0.5435%" height="15" fill="rgb(223,209,38)" fg:x="54879460" fg:w="1327870"/><text x="22.7114%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,327,870 samples, 0.54%)</title><rect x="22.4614%" y="789" width="0.5435%" height="15" fill="rgb(236,164,45)" fg:x="54879460" fg:w="1327870"/><text x="22.7114%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,327,870 samples, 0.54%)</title><rect x="22.4614%" y="773" width="0.5435%" height="15" fill="rgb(231,15,5)" fg:x="54879460" fg:w="1327870"/><text x="22.7114%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1,327,870 samples, 0.54%)</title><rect x="22.4614%" y="757" width="0.5435%" height="15" fill="rgb(252,35,15)" fg:x="54879460" fg:w="1327870"/><text x="22.7114%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,327,870 samples, 0.54%)</title><rect x="22.4614%" y="741" width="0.5435%" height="15" fill="rgb(248,181,18)" fg:x="54879460" fg:w="1327870"/><text x="22.7114%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,327,870 samples, 0.54%)</title><rect x="22.4614%" y="725" width="0.5435%" height="15" fill="rgb(233,39,42)" fg:x="54879460" fg:w="1327870"/><text x="22.7114%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,327,870 samples, 0.54%)</title><rect x="22.4614%" y="709" width="0.5435%" height="15" fill="rgb(238,110,33)" fg:x="54879460" fg:w="1327870"/><text x="22.7114%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,327,870 samples, 0.54%)</title><rect x="22.4614%" y="693" width="0.5435%" height="15" fill="rgb(233,195,10)" fg:x="54879460" fg:w="1327870"/><text x="22.7114%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,327,870 samples, 0.54%)</title><rect x="22.4614%" y="677" width="0.5435%" height="15" fill="rgb(254,105,3)" fg:x="54879460" fg:w="1327870"/><text x="22.7114%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,327,870 samples, 0.54%)</title><rect x="22.4614%" y="661" width="0.5435%" height="15" fill="rgb(221,225,9)" fg:x="54879460" fg:w="1327870"/><text x="22.7114%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,327,870 samples, 0.54%)</title><rect x="22.4614%" y="645" width="0.5435%" height="15" fill="rgb(224,227,45)" fg:x="54879460" fg:w="1327870"/><text x="22.7114%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1,327,870 samples, 0.54%)</title><rect x="22.4614%" y="629" width="0.5435%" height="15" fill="rgb(229,198,43)" fg:x="54879460" fg:w="1327870"/><text x="22.7114%" y="639.50"></text></g><g><title>malloc (1,327,870 samples, 0.54%)</title><rect x="22.4614%" y="613" width="0.5435%" height="15" fill="rgb(206,209,35)" fg:x="54879460" fg:w="1327870"/><text x="22.7114%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,044,431 samples, 3.70%)</title><rect x="19.8319%" y="885" width="3.7018%" height="15" fill="rgb(245,195,53)" fg:x="48454887" fg:w="9044431"/><text x="20.0819%" y="895.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,044,431 samples, 3.70%)</title><rect x="19.8319%" y="869" width="3.7018%" height="15" fill="rgb(240,92,26)" fg:x="48454887" fg:w="9044431"/><text x="20.0819%" y="879.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,044,431 samples, 3.70%)</title><rect x="19.8319%" y="853" width="3.7018%" height="15" fill="rgb(207,40,23)" fg:x="48454887" fg:w="9044431"/><text x="20.0819%" y="863.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,044,431 samples, 3.70%)</title><rect x="19.8319%" y="837" width="3.7018%" height="15" fill="rgb(223,111,35)" fg:x="48454887" fg:w="9044431"/><text x="20.0819%" y="847.50">&lt;T a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (7,760,946 samples, 3.18%)</title><rect x="20.3572%" y="821" width="3.1764%" height="15" fill="rgb(229,147,28)" fg:x="49738372" fg:w="7760946"/><text x="20.6072%" y="831.50">&lt;cs..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,291,988 samples, 0.53%)</title><rect x="23.0049%" y="805" width="0.5288%" height="15" fill="rgb(211,29,28)" fg:x="56207330" fg:w="1291988"/><text x="23.2549%" y="815.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,291,988 samples, 0.53%)</title><rect x="23.0049%" y="789" width="0.5288%" height="15" fill="rgb(228,72,33)" fg:x="56207330" fg:w="1291988"/><text x="23.2549%" y="799.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,291,988 samples, 0.53%)</title><rect x="23.0049%" y="773" width="0.5288%" height="15" fill="rgb(205,214,31)" fg:x="56207330" fg:w="1291988"/><text x="23.2549%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,291,988 samples, 0.53%)</title><rect x="23.0049%" y="757" width="0.5288%" height="15" fill="rgb(224,111,15)" fg:x="56207330" fg:w="1291988"/><text x="23.2549%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,291,988 samples, 0.53%)</title><rect x="23.0049%" y="741" width="0.5288%" height="15" fill="rgb(253,21,26)" fg:x="56207330" fg:w="1291988"/><text x="23.2549%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,291,988 samples, 0.53%)</title><rect x="23.0049%" y="725" width="0.5288%" height="15" fill="rgb(245,139,43)" fg:x="56207330" fg:w="1291988"/><text x="23.2549%" y="735.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,291,988 samples, 0.53%)</title><rect x="23.0049%" y="709" width="0.5288%" height="15" fill="rgb(252,170,7)" fg:x="56207330" fg:w="1291988"/><text x="23.2549%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,291,988 samples, 0.53%)</title><rect x="23.0049%" y="693" width="0.5288%" height="15" fill="rgb(231,118,14)" fg:x="56207330" fg:w="1291988"/><text x="23.2549%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,291,988 samples, 0.53%)</title><rect x="23.0049%" y="677" width="0.5288%" height="15" fill="rgb(238,83,0)" fg:x="56207330" fg:w="1291988"/><text x="23.2549%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1,291,988 samples, 0.53%)</title><rect x="23.0049%" y="661" width="0.5288%" height="15" fill="rgb(221,39,39)" fg:x="56207330" fg:w="1291988"/><text x="23.2549%" y="671.50"></text></g><g><title>malloc (1,291,988 samples, 0.53%)</title><rect x="23.0049%" y="645" width="0.5288%" height="15" fill="rgb(222,119,46)" fg:x="56207330" fg:w="1291988"/><text x="23.2549%" y="655.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,285,134 samples, 0.53%)</title><rect x="23.5337%" y="885" width="0.5260%" height="15" fill="rgb(222,165,49)" fg:x="57499318" fg:w="1285134"/><text x="23.7837%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,285,134 samples, 0.53%)</title><rect x="23.5337%" y="869" width="0.5260%" height="15" fill="rgb(219,113,52)" fg:x="57499318" fg:w="1285134"/><text x="23.7837%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,285,134 samples, 0.53%)</title><rect x="23.5337%" y="853" width="0.5260%" height="15" fill="rgb(214,7,15)" fg:x="57499318" fg:w="1285134"/><text x="23.7837%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1,285,134 samples, 0.53%)</title><rect x="23.5337%" y="837" width="0.5260%" height="15" fill="rgb(235,32,4)" fg:x="57499318" fg:w="1285134"/><text x="23.7837%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,285,134 samples, 0.53%)</title><rect x="23.5337%" y="821" width="0.5260%" height="15" fill="rgb(238,90,54)" fg:x="57499318" fg:w="1285134"/><text x="23.7837%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,285,134 samples, 0.53%)</title><rect x="23.5337%" y="805" width="0.5260%" height="15" fill="rgb(213,208,19)" fg:x="57499318" fg:w="1285134"/><text x="23.7837%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,285,134 samples, 0.53%)</title><rect x="23.5337%" y="789" width="0.5260%" height="15" fill="rgb(233,156,4)" fg:x="57499318" fg:w="1285134"/><text x="23.7837%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,285,134 samples, 0.53%)</title><rect x="23.5337%" y="773" width="0.5260%" height="15" fill="rgb(207,194,5)" fg:x="57499318" fg:w="1285134"/><text x="23.7837%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,285,134 samples, 0.53%)</title><rect x="23.5337%" y="757" width="0.5260%" height="15" fill="rgb(206,111,30)" fg:x="57499318" fg:w="1285134"/><text x="23.7837%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,285,134 samples, 0.53%)</title><rect x="23.5337%" y="741" width="0.5260%" height="15" fill="rgb(243,70,54)" fg:x="57499318" fg:w="1285134"/><text x="23.7837%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,285,134 samples, 0.53%)</title><rect x="23.5337%" y="725" width="0.5260%" height="15" fill="rgb(242,28,8)" fg:x="57499318" fg:w="1285134"/><text x="23.7837%" y="735.50"></text></g><g><title>alloc::alloc::alloc (1,285,134 samples, 0.53%)</title><rect x="23.5337%" y="709" width="0.5260%" height="15" fill="rgb(219,106,18)" fg:x="57499318" fg:w="1285134"/><text x="23.7837%" y="719.50"></text></g><g><title>malloc (1,285,134 samples, 0.53%)</title><rect x="23.5337%" y="693" width="0.5260%" height="15" fill="rgb(244,222,10)" fg:x="57499318" fg:w="1285134"/><text x="23.7837%" y="703.50"></text></g><g><title>[libc.so.6] (1,285,134 samples, 0.53%)</title><rect x="23.5337%" y="677" width="0.5260%" height="15" fill="rgb(236,179,52)" fg:x="57499318" fg:w="1285134"/><text x="23.7837%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,595,674 samples, 4.75%)</title><rect x="19.8319%" y="965" width="4.7459%" height="15" fill="rgb(213,23,39)" fg:x="48454887" fg:w="11595674"/><text x="20.0819%" y="975.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11,595,674 samples, 4.75%)</title><rect x="19.8319%" y="949" width="4.7459%" height="15" fill="rgb(238,48,10)" fg:x="48454887" fg:w="11595674"/><text x="20.0819%" y="959.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (11,595,674 samples, 4.75%)</title><rect x="19.8319%" y="933" width="4.7459%" height="15" fill="rgb(251,196,23)" fg:x="48454887" fg:w="11595674"/><text x="20.0819%" y="943.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11,595,674 samples, 4.75%)</title><rect x="19.8319%" y="917" width="4.7459%" height="15" fill="rgb(250,152,24)" fg:x="48454887" fg:w="11595674"/><text x="20.0819%" y="927.50">&lt;T as ..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (11,595,674 samples, 4.75%)</title><rect x="19.8319%" y="901" width="4.7459%" height="15" fill="rgb(209,150,17)" fg:x="48454887" fg:w="11595674"/><text x="20.0819%" y="911.50">&lt;css_b..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="885" width="0.5182%" height="15" fill="rgb(234,202,34)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="895.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="869" width="0.5182%" height="15" fill="rgb(253,148,53)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="853" width="0.5182%" height="15" fill="rgb(218,129,16)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="837" width="0.5182%" height="15" fill="rgb(216,85,19)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="821" width="0.5182%" height="15" fill="rgb(235,228,7)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="805" width="0.5182%" height="15" fill="rgb(245,175,0)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="815.50"></text></g><g><title>core::clone::Clone::clone (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="789" width="0.5182%" height="15" fill="rgb(208,168,36)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="773" width="0.5182%" height="15" fill="rgb(246,171,24)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="757" width="0.5182%" height="15" fill="rgb(215,142,24)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="741" width="0.5182%" height="15" fill="rgb(250,187,7)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="725" width="0.5182%" height="15" fill="rgb(228,66,33)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="709" width="0.5182%" height="15" fill="rgb(234,215,21)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="693" width="0.5182%" height="15" fill="rgb(222,191,20)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="677" width="0.5182%" height="15" fill="rgb(245,79,54)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="661" width="0.5182%" height="15" fill="rgb(240,10,37)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="645" width="0.5182%" height="15" fill="rgb(214,192,32)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="629" width="0.5182%" height="15" fill="rgb(209,36,54)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="613" width="0.5182%" height="15" fill="rgb(220,10,11)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="597" width="0.5182%" height="15" fill="rgb(221,106,17)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="607.50"></text></g><g><title>malloc (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="581" width="0.5182%" height="15" fill="rgb(251,142,44)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="591.50"></text></g><g><title>[libc.so.6] (1,266,109 samples, 0.52%)</title><rect x="24.0597%" y="565" width="0.5182%" height="15" fill="rgb(238,13,15)" fg:x="58784452" fg:w="1266109"/><text x="24.3097%" y="575.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (12,943,332 samples, 5.30%)</title><rect x="19.8319%" y="981" width="5.2975%" height="15" fill="rgb(208,107,27)" fg:x="48454887" fg:w="12943332"/><text x="20.0819%" y="991.50">&lt;css_b..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="965" width="0.5516%" height="15" fill="rgb(205,136,37)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="975.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="949" width="0.5516%" height="15" fill="rgb(250,205,27)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="959.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="933" width="0.5516%" height="15" fill="rgb(210,80,43)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="917" width="0.5516%" height="15" fill="rgb(247,160,36)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="901" width="0.5516%" height="15" fill="rgb(234,13,49)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="885" width="0.5516%" height="15" fill="rgb(234,122,0)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="895.50"></text></g><g><title>core::clone::Clone::clone (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="869" width="0.5516%" height="15" fill="rgb(207,146,38)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="853" width="0.5516%" height="15" fill="rgb(207,177,25)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="837" width="0.5516%" height="15" fill="rgb(211,178,42)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="821" width="0.5516%" height="15" fill="rgb(230,69,54)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="805" width="0.5516%" height="15" fill="rgb(214,135,41)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="789" width="0.5516%" height="15" fill="rgb(237,67,25)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="773" width="0.5516%" height="15" fill="rgb(222,189,50)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="757" width="0.5516%" height="15" fill="rgb(245,148,34)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="741" width="0.5516%" height="15" fill="rgb(222,29,6)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="725" width="0.5516%" height="15" fill="rgb(221,189,43)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="709" width="0.5516%" height="15" fill="rgb(207,36,27)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="693" width="0.5516%" height="15" fill="rgb(217,90,24)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="703.50"></text></g><g><title>alloc::alloc::alloc (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="677" width="0.5516%" height="15" fill="rgb(224,66,35)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="687.50"></text></g><g><title>malloc (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="661" width="0.5516%" height="15" fill="rgb(221,13,50)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="671.50"></text></g><g><title>[libc.so.6] (1,347,658 samples, 0.55%)</title><rect x="24.5779%" y="645" width="0.5516%" height="15" fill="rgb(236,68,49)" fg:x="60050561" fg:w="1347658"/><text x="24.8279%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14,182,265 samples, 5.80%)</title><rect x="19.8319%" y="1045" width="5.8046%" height="15" fill="rgb(229,146,28)" fg:x="48454887" fg:w="14182265"/><text x="20.0819%" y="1055.50">&lt;alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14,182,265 samples, 5.80%)</title><rect x="19.8319%" y="1029" width="5.8046%" height="15" fill="rgb(225,31,38)" fg:x="48454887" fg:w="14182265"/><text x="20.0819%" y="1039.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (14,182,265 samples, 5.80%)</title><rect x="19.8319%" y="1013" width="5.8046%" height="15" fill="rgb(250,208,3)" fg:x="48454887" fg:w="14182265"/><text x="20.0819%" y="1023.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14,182,265 samples, 5.80%)</title><rect x="19.8319%" y="997" width="5.8046%" height="15" fill="rgb(246,54,23)" fg:x="48454887" fg:w="14182265"/><text x="20.0819%" y="1007.50">&lt;T as a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,238,933 samples, 0.51%)</title><rect x="25.1294%" y="981" width="0.5071%" height="15" fill="rgb(243,76,11)" fg:x="61398219" fg:w="1238933"/><text x="25.3794%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,324,013 samples, 0.54%)</title><rect x="25.6365%" y="1045" width="0.5419%" height="15" fill="rgb(245,21,50)" fg:x="62637152" fg:w="1324013"/><text x="25.8865%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,802,416 samples, 6.88%)</title><rect x="19.8319%" y="1125" width="6.8770%" height="15" fill="rgb(228,9,43)" fg:x="48454887" fg:w="16802416"/><text x="20.0819%" y="1135.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,802,416 samples, 6.88%)</title><rect x="19.8319%" y="1109" width="6.8770%" height="15" fill="rgb(208,100,47)" fg:x="48454887" fg:w="16802416"/><text x="20.0819%" y="1119.50">alloc::sl..</text></g><g><title>alloc::slice::hack::to_vec (16,802,416 samples, 6.88%)</title><rect x="19.8319%" y="1093" width="6.8770%" height="15" fill="rgb(232,26,8)" fg:x="48454887" fg:w="16802416"/><text x="20.0819%" y="1103.50">alloc::sl..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16,802,416 samples, 6.88%)</title><rect x="19.8319%" y="1077" width="6.8770%" height="15" fill="rgb(216,166,38)" fg:x="48454887" fg:w="16802416"/><text x="20.0819%" y="1087.50">&lt;T as all..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (16,802,416 samples, 6.88%)</title><rect x="19.8319%" y="1061" width="6.8770%" height="15" fill="rgb(251,202,51)" fg:x="48454887" fg:w="16802416"/><text x="20.0819%" y="1071.50">&lt;css_bitv..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="1045" width="0.5305%" height="15" fill="rgb(254,216,34)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="1055.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="1029" width="0.5305%" height="15" fill="rgb(251,32,27)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="1039.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="1013" width="0.5305%" height="15" fill="rgb(208,127,28)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="997" width="0.5305%" height="15" fill="rgb(224,137,22)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="981" width="0.5305%" height="15" fill="rgb(254,70,32)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="965" width="0.5305%" height="15" fill="rgb(229,75,37)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="975.50"></text></g><g><title>core::clone::Clone::clone (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="949" width="0.5305%" height="15" fill="rgb(252,64,23)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="933" width="0.5305%" height="15" fill="rgb(232,162,48)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="917" width="0.5305%" height="15" fill="rgb(246,160,12)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="901" width="0.5305%" height="15" fill="rgb(247,166,0)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="885" width="0.5305%" height="15" fill="rgb(249,219,21)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="869" width="0.5305%" height="15" fill="rgb(205,209,3)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="853" width="0.5305%" height="15" fill="rgb(243,44,1)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="837" width="0.5305%" height="15" fill="rgb(206,159,16)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="821" width="0.5305%" height="15" fill="rgb(244,77,30)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="805" width="0.5305%" height="15" fill="rgb(218,69,12)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="789" width="0.5305%" height="15" fill="rgb(212,87,7)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="773" width="0.5305%" height="15" fill="rgb(245,114,25)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="783.50"></text></g><g><title>alloc::alloc::alloc (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="757" width="0.5305%" height="15" fill="rgb(210,61,42)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="767.50"></text></g><g><title>malloc (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="741" width="0.5305%" height="15" fill="rgb(211,52,33)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="751.50"></text></g><g><title>[libc.so.6] (1,296,138 samples, 0.53%)</title><rect x="26.1784%" y="725" width="0.5305%" height="15" fill="rgb(234,58,33)" fg:x="63961165" fg:w="1296138"/><text x="26.4284%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="1061" width="0.5301%" height="15" fill="rgb(220,115,36)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="1045" width="0.5301%" height="15" fill="rgb(243,153,54)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="1055.50"></text></g><g><title>core::clone::Clone::clone (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="1029" width="0.5301%" height="15" fill="rgb(251,47,18)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="1013" width="0.5301%" height="15" fill="rgb(242,102,42)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="997" width="0.5301%" height="15" fill="rgb(234,31,38)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="981" width="0.5301%" height="15" fill="rgb(221,117,51)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="965" width="0.5301%" height="15" fill="rgb(212,20,18)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="949" width="0.5301%" height="15" fill="rgb(245,133,36)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="933" width="0.5301%" height="15" fill="rgb(212,6,19)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="917" width="0.5301%" height="15" fill="rgb(218,1,36)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="901" width="0.5301%" height="15" fill="rgb(246,84,54)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="885" width="0.5301%" height="15" fill="rgb(242,110,6)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="869" width="0.5301%" height="15" fill="rgb(214,47,5)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="853" width="0.5301%" height="15" fill="rgb(218,159,25)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="837" width="0.5301%" height="15" fill="rgb(215,211,28)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="847.50"></text></g><g><title>malloc (1,295,137 samples, 0.53%)</title><rect x="26.7089%" y="821" width="0.5301%" height="15" fill="rgb(238,59,32)" fg:x="65257303" fg:w="1295137"/><text x="26.9589%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,392,420 samples, 7.94%)</title><rect x="19.8319%" y="1205" width="7.9370%" height="15" fill="rgb(226,82,3)" fg:x="48454887" fg:w="19392420"/><text x="20.0819%" y="1215.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,392,420 samples, 7.94%)</title><rect x="19.8319%" y="1189" width="7.9370%" height="15" fill="rgb(240,164,32)" fg:x="48454887" fg:w="19392420"/><text x="20.0819%" y="1199.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (19,392,420 samples, 7.94%)</title><rect x="19.8319%" y="1173" width="7.9370%" height="15" fill="rgb(232,46,7)" fg:x="48454887" fg:w="19392420"/><text x="20.0819%" y="1183.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,392,420 samples, 7.94%)</title><rect x="19.8319%" y="1157" width="7.9370%" height="15" fill="rgb(229,129,53)" fg:x="48454887" fg:w="19392420"/><text x="20.0819%" y="1167.50">&lt;T as alloc..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,392,420 samples, 7.94%)</title><rect x="19.8319%" y="1141" width="7.9370%" height="15" fill="rgb(234,188,29)" fg:x="48454887" fg:w="19392420"/><text x="20.0819%" y="1151.50">&lt;css_bitvec..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,590,004 samples, 1.06%)</title><rect x="26.7089%" y="1125" width="1.0601%" height="15" fill="rgb(246,141,4)" fg:x="65257303" fg:w="2590004"/><text x="26.9589%" y="1135.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,590,004 samples, 1.06%)</title><rect x="26.7089%" y="1109" width="1.0601%" height="15" fill="rgb(229,23,39)" fg:x="65257303" fg:w="2590004"/><text x="26.9589%" y="1119.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,590,004 samples, 1.06%)</title><rect x="26.7089%" y="1093" width="1.0601%" height="15" fill="rgb(206,12,3)" fg:x="65257303" fg:w="2590004"/><text x="26.9589%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,590,004 samples, 1.06%)</title><rect x="26.7089%" y="1077" width="1.0601%" height="15" fill="rgb(252,226,20)" fg:x="65257303" fg:w="2590004"/><text x="26.9589%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,294,867 samples, 0.53%)</title><rect x="27.2390%" y="1061" width="0.5300%" height="15" fill="rgb(216,123,35)" fg:x="66552440" fg:w="1294867"/><text x="27.4890%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,294,867 samples, 0.53%)</title><rect x="27.2390%" y="1045" width="0.5300%" height="15" fill="rgb(212,68,40)" fg:x="66552440" fg:w="1294867"/><text x="27.4890%" y="1055.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,294,867 samples, 0.53%)</title><rect x="27.2390%" y="1029" width="0.5300%" height="15" fill="rgb(254,125,32)" fg:x="66552440" fg:w="1294867"/><text x="27.4890%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,294,867 samples, 0.53%)</title><rect x="27.2390%" y="1013" width="0.5300%" height="15" fill="rgb(253,97,22)" fg:x="66552440" fg:w="1294867"/><text x="27.4890%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,294,867 samples, 0.53%)</title><rect x="27.2390%" y="997" width="0.5300%" height="15" fill="rgb(241,101,14)" fg:x="66552440" fg:w="1294867"/><text x="27.4890%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1,294,867 samples, 0.53%)</title><rect x="27.2390%" y="981" width="0.5300%" height="15" fill="rgb(238,103,29)" fg:x="66552440" fg:w="1294867"/><text x="27.4890%" y="991.50"></text></g><g><title>malloc (1,294,867 samples, 0.53%)</title><rect x="27.2390%" y="965" width="0.5300%" height="15" fill="rgb(233,195,47)" fg:x="66552440" fg:w="1294867"/><text x="27.4890%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23,302,837 samples, 9.54%)</title><rect x="18.7688%" y="1285" width="9.5375%" height="15" fill="rgb(246,218,30)" fg:x="45857360" fg:w="23302837"/><text x="19.0188%" y="1295.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23,302,837 samples, 9.54%)</title><rect x="18.7688%" y="1269" width="9.5375%" height="15" fill="rgb(219,145,47)" fg:x="45857360" fg:w="23302837"/><text x="19.0188%" y="1279.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (23,302,837 samples, 9.54%)</title><rect x="18.7688%" y="1253" width="9.5375%" height="15" fill="rgb(243,12,26)" fg:x="45857360" fg:w="23302837"/><text x="19.0188%" y="1263.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23,302,837 samples, 9.54%)</title><rect x="18.7688%" y="1237" width="9.5375%" height="15" fill="rgb(214,87,16)" fg:x="45857360" fg:w="23302837"/><text x="19.0188%" y="1247.50">&lt;T as alloc::s..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (21,985,594 samples, 9.00%)</title><rect x="19.3079%" y="1221" width="8.9984%" height="15" fill="rgb(208,99,42)" fg:x="47174603" fg:w="21985594"/><text x="19.5579%" y="1231.50">&lt;css_bitvecto..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,312,890 samples, 0.54%)</title><rect x="27.7690%" y="1205" width="0.5373%" height="15" fill="rgb(253,99,2)" fg:x="67847307" fg:w="1312890"/><text x="28.0190%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,312,890 samples, 0.54%)</title><rect x="27.7690%" y="1189" width="0.5373%" height="15" fill="rgb(220,168,23)" fg:x="67847307" fg:w="1312890"/><text x="28.0190%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,312,890 samples, 0.54%)</title><rect x="27.7690%" y="1173" width="0.5373%" height="15" fill="rgb(242,38,24)" fg:x="67847307" fg:w="1312890"/><text x="28.0190%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (1,312,890 samples, 0.54%)</title><rect x="27.7690%" y="1157" width="0.5373%" height="15" fill="rgb(225,182,9)" fg:x="67847307" fg:w="1312890"/><text x="28.0190%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,312,890 samples, 0.54%)</title><rect x="27.7690%" y="1141" width="0.5373%" height="15" fill="rgb(243,178,37)" fg:x="67847307" fg:w="1312890"/><text x="28.0190%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,312,890 samples, 0.54%)</title><rect x="27.7690%" y="1125" width="0.5373%" height="15" fill="rgb(232,139,19)" fg:x="67847307" fg:w="1312890"/><text x="28.0190%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,312,890 samples, 0.54%)</title><rect x="27.7690%" y="1109" width="0.5373%" height="15" fill="rgb(225,201,24)" fg:x="67847307" fg:w="1312890"/><text x="28.0190%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,312,890 samples, 0.54%)</title><rect x="27.7690%" y="1093" width="0.5373%" height="15" fill="rgb(221,47,46)" fg:x="67847307" fg:w="1312890"/><text x="28.0190%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,312,890 samples, 0.54%)</title><rect x="27.7690%" y="1077" width="0.5373%" height="15" fill="rgb(249,23,13)" fg:x="67847307" fg:w="1312890"/><text x="28.0190%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,312,890 samples, 0.54%)</title><rect x="27.7690%" y="1061" width="0.5373%" height="15" fill="rgb(219,9,5)" fg:x="67847307" fg:w="1312890"/><text x="28.0190%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,312,890 samples, 0.54%)</title><rect x="27.7690%" y="1045" width="0.5373%" height="15" fill="rgb(254,171,16)" fg:x="67847307" fg:w="1312890"/><text x="28.0190%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1,312,890 samples, 0.54%)</title><rect x="27.7690%" y="1029" width="0.5373%" height="15" fill="rgb(230,171,20)" fg:x="67847307" fg:w="1312890"/><text x="28.0190%" y="1039.50"></text></g><g><title>malloc (1,312,890 samples, 0.54%)</title><rect x="27.7690%" y="1013" width="0.5373%" height="15" fill="rgb(210,71,41)" fg:x="67847307" fg:w="1312890"/><text x="28.0190%" y="1023.50"></text></g><g><title>[libc.so.6] (1,312,890 samples, 0.54%)</title><rect x="27.7690%" y="997" width="0.5373%" height="15" fill="rgb(206,173,20)" fg:x="67847307" fg:w="1312890"/><text x="28.0190%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,308,191 samples, 0.54%)</title><rect x="28.3063%" y="1285" width="0.5354%" height="15" fill="rgb(233,88,34)" fg:x="69160197" fg:w="1308191"/><text x="28.5563%" y="1295.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,308,191 samples, 0.54%)</title><rect x="28.3063%" y="1269" width="0.5354%" height="15" fill="rgb(223,209,46)" fg:x="69160197" fg:w="1308191"/><text x="28.5563%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,308,191 samples, 0.54%)</title><rect x="28.3063%" y="1253" width="0.5354%" height="15" fill="rgb(250,43,18)" fg:x="69160197" fg:w="1308191"/><text x="28.5563%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,308,191 samples, 0.54%)</title><rect x="28.3063%" y="1237" width="0.5354%" height="15" fill="rgb(208,13,10)" fg:x="69160197" fg:w="1308191"/><text x="28.5563%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (1,308,191 samples, 0.54%)</title><rect x="28.3063%" y="1221" width="0.5354%" height="15" fill="rgb(212,200,36)" fg:x="69160197" fg:w="1308191"/><text x="28.5563%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,308,191 samples, 0.54%)</title><rect x="28.3063%" y="1205" width="0.5354%" height="15" fill="rgb(225,90,30)" fg:x="69160197" fg:w="1308191"/><text x="28.5563%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,308,191 samples, 0.54%)</title><rect x="28.3063%" y="1189" width="0.5354%" height="15" fill="rgb(236,182,39)" fg:x="69160197" fg:w="1308191"/><text x="28.5563%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,308,191 samples, 0.54%)</title><rect x="28.3063%" y="1173" width="0.5354%" height="15" fill="rgb(212,144,35)" fg:x="69160197" fg:w="1308191"/><text x="28.5563%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,308,191 samples, 0.54%)</title><rect x="28.3063%" y="1157" width="0.5354%" height="15" fill="rgb(228,63,44)" fg:x="69160197" fg:w="1308191"/><text x="28.5563%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,308,191 samples, 0.54%)</title><rect x="28.3063%" y="1141" width="0.5354%" height="15" fill="rgb(228,109,6)" fg:x="69160197" fg:w="1308191"/><text x="28.5563%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,308,191 samples, 0.54%)</title><rect x="28.3063%" y="1125" width="0.5354%" height="15" fill="rgb(238,117,24)" fg:x="69160197" fg:w="1308191"/><text x="28.5563%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,308,191 samples, 0.54%)</title><rect x="28.3063%" y="1109" width="0.5354%" height="15" fill="rgb(242,26,26)" fg:x="69160197" fg:w="1308191"/><text x="28.5563%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (1,308,191 samples, 0.54%)</title><rect x="28.3063%" y="1093" width="0.5354%" height="15" fill="rgb(221,92,48)" fg:x="69160197" fg:w="1308191"/><text x="28.5563%" y="1103.50"></text></g><g><title>__rust_alloc (1,308,191 samples, 0.54%)</title><rect x="28.3063%" y="1077" width="0.5354%" height="15" fill="rgb(209,209,32)" fg:x="69160197" fg:w="1308191"/><text x="28.5563%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,301,066 samples, 0.53%)</title><rect x="29.3898%" y="1221" width="0.5325%" height="15" fill="rgb(221,70,22)" fg:x="71807447" fg:w="1301066"/><text x="29.6398%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,301,066 samples, 0.53%)</title><rect x="29.3898%" y="1205" width="0.5325%" height="15" fill="rgb(248,145,5)" fg:x="71807447" fg:w="1301066"/><text x="29.6398%" y="1215.50"></text></g><g><title>core::clone::Clone::clone (1,301,066 samples, 0.53%)</title><rect x="29.3898%" y="1189" width="0.5325%" height="15" fill="rgb(226,116,26)" fg:x="71807447" fg:w="1301066"/><text x="29.6398%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,301,066 samples, 0.53%)</title><rect x="29.3898%" y="1173" width="0.5325%" height="15" fill="rgb(244,5,17)" fg:x="71807447" fg:w="1301066"/><text x="29.6398%" y="1183.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (29,877,979 samples, 12.23%)</title><rect x="18.7688%" y="1301" width="12.2286%" height="15" fill="rgb(252,159,33)" fg:x="45857360" fg:w="29877979"/><text x="19.0188%" y="1311.50">&lt;css_bitvector_com..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5,266,951 samples, 2.16%)</title><rect x="28.8417%" y="1285" width="2.1557%" height="15" fill="rgb(206,71,0)" fg:x="70468388" fg:w="5266951"/><text x="29.0917%" y="1295.50">&lt;..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5,266,951 samples, 2.16%)</title><rect x="28.8417%" y="1269" width="2.1557%" height="15" fill="rgb(233,118,54)" fg:x="70468388" fg:w="5266951"/><text x="29.0917%" y="1279.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5,266,951 samples, 2.16%)</title><rect x="28.8417%" y="1253" width="2.1557%" height="15" fill="rgb(234,83,48)" fg:x="70468388" fg:w="5266951"/><text x="29.0917%" y="1263.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,927,892 samples, 1.61%)</title><rect x="29.3898%" y="1237" width="1.6076%" height="15" fill="rgb(228,3,54)" fg:x="71807447" fg:w="3927892"/><text x="29.6398%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,626,826 samples, 1.08%)</title><rect x="29.9223%" y="1221" width="1.0751%" height="15" fill="rgb(226,155,13)" fg:x="73108513" fg:w="2626826"/><text x="30.1723%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,626,826 samples, 1.08%)</title><rect x="29.9223%" y="1205" width="1.0751%" height="15" fill="rgb(241,28,37)" fg:x="73108513" fg:w="2626826"/><text x="30.1723%" y="1215.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,626,826 samples, 1.08%)</title><rect x="29.9223%" y="1189" width="1.0751%" height="15" fill="rgb(233,93,10)" fg:x="73108513" fg:w="2626826"/><text x="30.1723%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,626,826 samples, 1.08%)</title><rect x="29.9223%" y="1173" width="1.0751%" height="15" fill="rgb(225,113,19)" fg:x="73108513" fg:w="2626826"/><text x="30.1723%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,626,826 samples, 1.08%)</title><rect x="29.9223%" y="1157" width="1.0751%" height="15" fill="rgb(241,2,18)" fg:x="73108513" fg:w="2626826"/><text x="30.1723%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (2,626,826 samples, 1.08%)</title><rect x="29.9223%" y="1141" width="1.0751%" height="15" fill="rgb(228,207,21)" fg:x="73108513" fg:w="2626826"/><text x="30.1723%" y="1151.50"></text></g><g><title>malloc (2,626,826 samples, 1.08%)</title><rect x="29.9223%" y="1125" width="1.0751%" height="15" fill="rgb(213,211,35)" fg:x="73108513" fg:w="2626826"/><text x="30.1723%" y="1135.50"></text></g><g><title>[libc.so.6] (2,626,826 samples, 1.08%)</title><rect x="29.9223%" y="1109" width="1.0751%" height="15" fill="rgb(209,83,10)" fg:x="73108513" fg:w="2626826"/><text x="30.1723%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31,115,918 samples, 12.74%)</title><rect x="18.7688%" y="1365" width="12.7353%" height="15" fill="rgb(209,164,1)" fg:x="45857360" fg:w="31115918"/><text x="19.0188%" y="1375.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31,115,918 samples, 12.74%)</title><rect x="18.7688%" y="1349" width="12.7353%" height="15" fill="rgb(213,184,43)" fg:x="45857360" fg:w="31115918"/><text x="19.0188%" y="1359.50">alloc::slice::&lt;impl..</text></g><g><title>alloc::slice::hack::to_vec (31,115,918 samples, 12.74%)</title><rect x="18.7688%" y="1333" width="12.7353%" height="15" fill="rgb(231,61,34)" fg:x="45857360" fg:w="31115918"/><text x="19.0188%" y="1343.50">alloc::slice::hack:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31,115,918 samples, 12.74%)</title><rect x="18.7688%" y="1317" width="12.7353%" height="15" fill="rgb(235,75,3)" fg:x="45857360" fg:w="31115918"/><text x="19.0188%" y="1327.50">&lt;T as alloc::slice:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,237,939 samples, 0.51%)</title><rect x="30.9974%" y="1301" width="0.5067%" height="15" fill="rgb(220,106,47)" fg:x="75735339" fg:w="1237939"/><text x="31.2474%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,237,939 samples, 0.51%)</title><rect x="30.9974%" y="1285" width="0.5067%" height="15" fill="rgb(210,196,33)" fg:x="75735339" fg:w="1237939"/><text x="31.2474%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,237,939 samples, 0.51%)</title><rect x="30.9974%" y="1269" width="0.5067%" height="15" fill="rgb(229,154,42)" fg:x="75735339" fg:w="1237939"/><text x="31.2474%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,237,939 samples, 0.51%)</title><rect x="30.9974%" y="1253" width="0.5067%" height="15" fill="rgb(228,114,26)" fg:x="75735339" fg:w="1237939"/><text x="31.2474%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,237,939 samples, 0.51%)</title><rect x="30.9974%" y="1237" width="0.5067%" height="15" fill="rgb(208,144,1)" fg:x="75735339" fg:w="1237939"/><text x="31.2474%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,237,939 samples, 0.51%)</title><rect x="30.9974%" y="1221" width="0.5067%" height="15" fill="rgb(239,112,37)" fg:x="75735339" fg:w="1237939"/><text x="31.2474%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (1,237,939 samples, 0.51%)</title><rect x="30.9974%" y="1205" width="0.5067%" height="15" fill="rgb(210,96,50)" fg:x="75735339" fg:w="1237939"/><text x="31.2474%" y="1215.50"></text></g><g><title>malloc (1,237,939 samples, 0.51%)</title><rect x="30.9974%" y="1189" width="0.5067%" height="15" fill="rgb(222,178,2)" fg:x="75735339" fg:w="1237939"/><text x="31.2474%" y="1199.50"></text></g><g><title>[libc.so.6] (1,237,939 samples, 0.51%)</title><rect x="30.9974%" y="1173" width="0.5067%" height="15" fill="rgb(226,74,18)" fg:x="75735339" fg:w="1237939"/><text x="31.2474%" y="1183.50"></text></g><g><title>[libc.so.6] (1,237,939 samples, 0.51%)</title><rect x="30.9974%" y="1157" width="0.5067%" height="15" fill="rgb(225,67,54)" fg:x="75735339" fg:w="1237939"/><text x="31.2474%" y="1167.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,555,939 samples, 1.05%)</title><rect x="31.5041%" y="1365" width="1.0461%" height="15" fill="rgb(251,92,32)" fg:x="76973278" fg:w="2555939"/><text x="31.7541%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,555,939 samples, 1.05%)</title><rect x="31.5041%" y="1349" width="1.0461%" height="15" fill="rgb(228,149,22)" fg:x="76973278" fg:w="2555939"/><text x="31.7541%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,555,939 samples, 1.05%)</title><rect x="31.5041%" y="1333" width="1.0461%" height="15" fill="rgb(243,54,13)" fg:x="76973278" fg:w="2555939"/><text x="31.7541%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (2,555,939 samples, 1.05%)</title><rect x="31.5041%" y="1317" width="1.0461%" height="15" fill="rgb(243,180,28)" fg:x="76973278" fg:w="2555939"/><text x="31.7541%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,555,939 samples, 1.05%)</title><rect x="31.5041%" y="1301" width="1.0461%" height="15" fill="rgb(208,167,24)" fg:x="76973278" fg:w="2555939"/><text x="31.7541%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,555,939 samples, 1.05%)</title><rect x="31.5041%" y="1285" width="1.0461%" height="15" fill="rgb(245,73,45)" fg:x="76973278" fg:w="2555939"/><text x="31.7541%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,555,939 samples, 1.05%)</title><rect x="31.5041%" y="1269" width="1.0461%" height="15" fill="rgb(237,203,48)" fg:x="76973278" fg:w="2555939"/><text x="31.7541%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,555,939 samples, 1.05%)</title><rect x="31.5041%" y="1253" width="1.0461%" height="15" fill="rgb(211,197,16)" fg:x="76973278" fg:w="2555939"/><text x="31.7541%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,555,939 samples, 1.05%)</title><rect x="31.5041%" y="1237" width="1.0461%" height="15" fill="rgb(243,99,51)" fg:x="76973278" fg:w="2555939"/><text x="31.7541%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,300,113 samples, 0.53%)</title><rect x="32.0181%" y="1221" width="0.5321%" height="15" fill="rgb(215,123,29)" fg:x="78229104" fg:w="1300113"/><text x="32.2681%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,300,113 samples, 0.53%)</title><rect x="32.0181%" y="1205" width="0.5321%" height="15" fill="rgb(239,186,37)" fg:x="78229104" fg:w="1300113"/><text x="32.2681%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (1,300,113 samples, 0.53%)</title><rect x="32.0181%" y="1189" width="0.5321%" height="15" fill="rgb(252,136,39)" fg:x="78229104" fg:w="1300113"/><text x="32.2681%" y="1199.50"></text></g><g><title>[libc.so.6] (1,300,113 samples, 0.53%)</title><rect x="32.0181%" y="1173" width="0.5321%" height="15" fill="rgb(223,213,32)" fg:x="78229104" fg:w="1300113"/><text x="32.2681%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (36,336,890 samples, 14.87%)</title><rect x="18.2245%" y="1445" width="14.8722%" height="15" fill="rgb(233,115,5)" fg:x="44527642" fg:w="36336890"/><text x="18.4745%" y="1455.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (36,336,890 samples, 14.87%)</title><rect x="18.2245%" y="1429" width="14.8722%" height="15" fill="rgb(207,226,44)" fg:x="44527642" fg:w="36336890"/><text x="18.4745%" y="1439.50">alloc::slice::&lt;impl [T]..</text></g><g><title>alloc::slice::hack::to_vec (36,336,890 samples, 14.87%)</title><rect x="18.2245%" y="1413" width="14.8722%" height="15" fill="rgb(208,126,0)" fg:x="44527642" fg:w="36336890"/><text x="18.4745%" y="1423.50">alloc::slice::hack::to_..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (36,336,890 samples, 14.87%)</title><rect x="18.2245%" y="1397" width="14.8722%" height="15" fill="rgb(244,66,21)" fg:x="44527642" fg:w="36336890"/><text x="18.4745%" y="1407.50">&lt;T as alloc::slice::hac..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (35,007,172 samples, 14.33%)</title><rect x="18.7688%" y="1381" width="14.3279%" height="15" fill="rgb(222,97,12)" fg:x="45857360" fg:w="35007172"/><text x="19.0188%" y="1391.50">&lt;css_bitvector_compile..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,335,315 samples, 0.55%)</title><rect x="32.5502%" y="1365" width="0.5465%" height="15" fill="rgb(219,213,19)" fg:x="79529217" fg:w="1335315"/><text x="32.8002%" y="1375.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,335,315 samples, 0.55%)</title><rect x="32.5502%" y="1349" width="0.5465%" height="15" fill="rgb(252,169,30)" fg:x="79529217" fg:w="1335315"/><text x="32.8002%" y="1359.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,335,315 samples, 0.55%)</title><rect x="32.5502%" y="1333" width="0.5465%" height="15" fill="rgb(206,32,51)" fg:x="79529217" fg:w="1335315"/><text x="32.8002%" y="1343.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,335,315 samples, 0.55%)</title><rect x="32.5502%" y="1317" width="0.5465%" height="15" fill="rgb(250,172,42)" fg:x="79529217" fg:w="1335315"/><text x="32.8002%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,335,315 samples, 0.55%)</title><rect x="32.5502%" y="1301" width="0.5465%" height="15" fill="rgb(209,34,43)" fg:x="79529217" fg:w="1335315"/><text x="32.8002%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,335,315 samples, 0.55%)</title><rect x="32.5502%" y="1285" width="0.5465%" height="15" fill="rgb(223,11,35)" fg:x="79529217" fg:w="1335315"/><text x="32.8002%" y="1295.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,335,315 samples, 0.55%)</title><rect x="32.5502%" y="1269" width="0.5465%" height="15" fill="rgb(251,219,26)" fg:x="79529217" fg:w="1335315"/><text x="32.8002%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,335,315 samples, 0.55%)</title><rect x="32.5502%" y="1253" width="0.5465%" height="15" fill="rgb(231,119,3)" fg:x="79529217" fg:w="1335315"/><text x="32.8002%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,335,315 samples, 0.55%)</title><rect x="32.5502%" y="1237" width="0.5465%" height="15" fill="rgb(216,97,11)" fg:x="79529217" fg:w="1335315"/><text x="32.8002%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (1,335,315 samples, 0.55%)</title><rect x="32.5502%" y="1221" width="0.5465%" height="15" fill="rgb(223,59,9)" fg:x="79529217" fg:w="1335315"/><text x="32.8002%" y="1231.50"></text></g><g><title>[libc.so.6] (1,335,315 samples, 0.55%)</title><rect x="32.5502%" y="1205" width="0.5465%" height="15" fill="rgb(233,93,31)" fg:x="79529217" fg:w="1335315"/><text x="32.8002%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (40,193,181 samples, 16.45%)</title><rect x="17.6853%" y="1525" width="16.4505%" height="15" fill="rgb(239,81,33)" fg:x="43210134" fg:w="40193181"/><text x="17.9353%" y="1535.50">&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (40,193,181 samples, 16.45%)</title><rect x="17.6853%" y="1509" width="16.4505%" height="15" fill="rgb(213,120,34)" fg:x="43210134" fg:w="40193181"/><text x="17.9353%" y="1519.50">alloc::slice::&lt;impl [T]&gt;:..</text></g><g><title>alloc::slice::hack::to_vec (40,193,181 samples, 16.45%)</title><rect x="17.6853%" y="1493" width="16.4505%" height="15" fill="rgb(243,49,53)" fg:x="43210134" fg:w="40193181"/><text x="17.9353%" y="1503.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (40,193,181 samples, 16.45%)</title><rect x="17.6853%" y="1477" width="16.4505%" height="15" fill="rgb(247,216,33)" fg:x="43210134" fg:w="40193181"/><text x="17.9353%" y="1487.50">&lt;T as alloc::slice::hack:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (40,193,181 samples, 16.45%)</title><rect x="17.6853%" y="1461" width="16.4505%" height="15" fill="rgb(226,26,14)" fg:x="43210134" fg:w="40193181"/><text x="17.9353%" y="1471.50">&lt;css_bitvector_compiler::..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,538,783 samples, 1.04%)</title><rect x="33.0967%" y="1445" width="1.0391%" height="15" fill="rgb(215,49,53)" fg:x="80864532" fg:w="2538783"/><text x="33.3467%" y="1455.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,538,783 samples, 1.04%)</title><rect x="33.0967%" y="1429" width="1.0391%" height="15" fill="rgb(245,162,40)" fg:x="80864532" fg:w="2538783"/><text x="33.3467%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,538,783 samples, 1.04%)</title><rect x="33.0967%" y="1413" width="1.0391%" height="15" fill="rgb(229,68,17)" fg:x="80864532" fg:w="2538783"/><text x="33.3467%" y="1423.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,538,783 samples, 1.04%)</title><rect x="33.0967%" y="1397" width="1.0391%" height="15" fill="rgb(213,182,10)" fg:x="80864532" fg:w="2538783"/><text x="33.3467%" y="1407.50"></text></g><g><title>alloc::slice::hack::to_vec (2,538,783 samples, 1.04%)</title><rect x="33.0967%" y="1381" width="1.0391%" height="15" fill="rgb(245,125,30)" fg:x="80864532" fg:w="2538783"/><text x="33.3467%" y="1391.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,538,783 samples, 1.04%)</title><rect x="33.0967%" y="1365" width="1.0391%" height="15" fill="rgb(232,202,2)" fg:x="80864532" fg:w="2538783"/><text x="33.3467%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,538,783 samples, 1.04%)</title><rect x="33.0967%" y="1349" width="1.0391%" height="15" fill="rgb(237,140,51)" fg:x="80864532" fg:w="2538783"/><text x="33.3467%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,538,783 samples, 1.04%)</title><rect x="33.0967%" y="1333" width="1.0391%" height="15" fill="rgb(236,157,25)" fg:x="80864532" fg:w="2538783"/><text x="33.3467%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,538,783 samples, 1.04%)</title><rect x="33.0967%" y="1317" width="1.0391%" height="15" fill="rgb(219,209,0)" fg:x="80864532" fg:w="2538783"/><text x="33.3467%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,538,783 samples, 1.04%)</title><rect x="33.0967%" y="1301" width="1.0391%" height="15" fill="rgb(240,116,54)" fg:x="80864532" fg:w="2538783"/><text x="33.3467%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,538,783 samples, 1.04%)</title><rect x="33.0967%" y="1285" width="1.0391%" height="15" fill="rgb(216,10,36)" fg:x="80864532" fg:w="2538783"/><text x="33.3467%" y="1295.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,538,783 samples, 1.04%)</title><rect x="33.0967%" y="1269" width="1.0391%" height="15" fill="rgb(222,72,44)" fg:x="80864532" fg:w="2538783"/><text x="33.3467%" y="1279.50"></text></g><g><title>alloc::alloc::alloc (2,538,783 samples, 1.04%)</title><rect x="33.0967%" y="1253" width="1.0391%" height="15" fill="rgb(232,159,9)" fg:x="80864532" fg:w="2538783"/><text x="33.3467%" y="1263.50"></text></g><g><title>malloc (2,538,783 samples, 1.04%)</title><rect x="33.0967%" y="1237" width="1.0391%" height="15" fill="rgb(210,39,32)" fg:x="80864532" fg:w="2538783"/><text x="33.3467%" y="1247.50"></text></g><g><title>[libc.so.6] (2,538,783 samples, 1.04%)</title><rect x="33.0967%" y="1221" width="1.0391%" height="15" fill="rgb(216,194,45)" fg:x="80864532" fg:w="2538783"/><text x="33.3467%" y="1231.50"></text></g><g><title>__rust_alloc (1,275,604 samples, 0.52%)</title><rect x="34.1358%" y="1317" width="0.5221%" height="15" fill="rgb(218,18,35)" fg:x="83403315" fg:w="1275604"/><text x="34.3858%" y="1327.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,875,389 samples, 1.59%)</title><rect x="34.1358%" y="1525" width="1.5861%" height="15" fill="rgb(207,83,51)" fg:x="83403315" fg:w="3875389"/><text x="34.3858%" y="1535.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,875,389 samples, 1.59%)</title><rect x="34.1358%" y="1509" width="1.5861%" height="15" fill="rgb(225,63,43)" fg:x="83403315" fg:w="3875389"/><text x="34.3858%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,875,389 samples, 1.59%)</title><rect x="34.1358%" y="1493" width="1.5861%" height="15" fill="rgb(207,57,36)" fg:x="83403315" fg:w="3875389"/><text x="34.3858%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,875,389 samples, 1.59%)</title><rect x="34.1358%" y="1477" width="1.5861%" height="15" fill="rgb(216,99,33)" fg:x="83403315" fg:w="3875389"/><text x="34.3858%" y="1487.50"></text></g><g><title>alloc::slice::hack::to_vec (3,875,389 samples, 1.59%)</title><rect x="34.1358%" y="1461" width="1.5861%" height="15" fill="rgb(225,42,16)" fg:x="83403315" fg:w="3875389"/><text x="34.3858%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,875,389 samples, 1.59%)</title><rect x="34.1358%" y="1445" width="1.5861%" height="15" fill="rgb(220,201,45)" fg:x="83403315" fg:w="3875389"/><text x="34.3858%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,875,389 samples, 1.59%)</title><rect x="34.1358%" y="1429" width="1.5861%" height="15" fill="rgb(225,33,4)" fg:x="83403315" fg:w="3875389"/><text x="34.3858%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,875,389 samples, 1.59%)</title><rect x="34.1358%" y="1413" width="1.5861%" height="15" fill="rgb(224,33,50)" fg:x="83403315" fg:w="3875389"/><text x="34.3858%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,875,389 samples, 1.59%)</title><rect x="34.1358%" y="1397" width="1.5861%" height="15" fill="rgb(246,198,51)" fg:x="83403315" fg:w="3875389"/><text x="34.3858%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,875,389 samples, 1.59%)</title><rect x="34.1358%" y="1381" width="1.5861%" height="15" fill="rgb(205,22,4)" fg:x="83403315" fg:w="3875389"/><text x="34.3858%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,875,389 samples, 1.59%)</title><rect x="34.1358%" y="1365" width="1.5861%" height="15" fill="rgb(206,3,8)" fg:x="83403315" fg:w="3875389"/><text x="34.3858%" y="1375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,875,389 samples, 1.59%)</title><rect x="34.1358%" y="1349" width="1.5861%" height="15" fill="rgb(251,23,15)" fg:x="83403315" fg:w="3875389"/><text x="34.3858%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (3,875,389 samples, 1.59%)</title><rect x="34.1358%" y="1333" width="1.5861%" height="15" fill="rgb(252,88,28)" fg:x="83403315" fg:w="3875389"/><text x="34.3858%" y="1343.50"></text></g><g><title>malloc (2,599,785 samples, 1.06%)</title><rect x="34.6579%" y="1317" width="1.0641%" height="15" fill="rgb(212,127,14)" fg:x="84678919" fg:w="2599785"/><text x="34.9079%" y="1327.50"></text></g><g><title>[libc.so.6] (1,257,661 samples, 0.51%)</title><rect x="35.2072%" y="1301" width="0.5147%" height="15" fill="rgb(247,145,37)" fg:x="86021043" fg:w="1257661"/><text x="35.4572%" y="1311.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,258,910 samples, 0.52%)</title><rect x="35.7220%" y="1525" width="0.5153%" height="15" fill="rgb(209,117,53)" fg:x="87278704" fg:w="1258910"/><text x="35.9720%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,258,910 samples, 0.52%)</title><rect x="35.7220%" y="1509" width="0.5153%" height="15" fill="rgb(212,90,42)" fg:x="87278704" fg:w="1258910"/><text x="35.9720%" y="1519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,258,910 samples, 0.52%)</title><rect x="35.7220%" y="1493" width="0.5153%" height="15" fill="rgb(218,164,37)" fg:x="87278704" fg:w="1258910"/><text x="35.9720%" y="1503.50"></text></g><g><title>alloc::slice::hack::to_vec (1,258,910 samples, 0.52%)</title><rect x="35.7220%" y="1477" width="0.5153%" height="15" fill="rgb(246,65,34)" fg:x="87278704" fg:w="1258910"/><text x="35.9720%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,258,910 samples, 0.52%)</title><rect x="35.7220%" y="1461" width="0.5153%" height="15" fill="rgb(231,100,33)" fg:x="87278704" fg:w="1258910"/><text x="35.9720%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,258,910 samples, 0.52%)</title><rect x="35.7220%" y="1445" width="0.5153%" height="15" fill="rgb(228,126,14)" fg:x="87278704" fg:w="1258910"/><text x="35.9720%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,258,910 samples, 0.52%)</title><rect x="35.7220%" y="1429" width="0.5153%" height="15" fill="rgb(215,173,21)" fg:x="87278704" fg:w="1258910"/><text x="35.9720%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,258,910 samples, 0.52%)</title><rect x="35.7220%" y="1413" width="0.5153%" height="15" fill="rgb(210,6,40)" fg:x="87278704" fg:w="1258910"/><text x="35.9720%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,258,910 samples, 0.52%)</title><rect x="35.7220%" y="1397" width="0.5153%" height="15" fill="rgb(212,48,18)" fg:x="87278704" fg:w="1258910"/><text x="35.9720%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,258,910 samples, 0.52%)</title><rect x="35.7220%" y="1381" width="0.5153%" height="15" fill="rgb(230,214,11)" fg:x="87278704" fg:w="1258910"/><text x="35.9720%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,258,910 samples, 0.52%)</title><rect x="35.7220%" y="1365" width="0.5153%" height="15" fill="rgb(254,105,39)" fg:x="87278704" fg:w="1258910"/><text x="35.9720%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (1,258,910 samples, 0.52%)</title><rect x="35.7220%" y="1349" width="0.5153%" height="15" fill="rgb(245,158,5)" fg:x="87278704" fg:w="1258910"/><text x="35.9720%" y="1359.50"></text></g><g><title>malloc (1,258,910 samples, 0.52%)</title><rect x="35.7220%" y="1333" width="0.5153%" height="15" fill="rgb(249,208,11)" fg:x="87278704" fg:w="1258910"/><text x="35.9720%" y="1343.50"></text></g><g><title>[libc.so.6] (1,258,910 samples, 0.52%)</title><rect x="35.7220%" y="1317" width="0.5153%" height="15" fill="rgb(210,39,28)" fg:x="87278704" fg:w="1258910"/><text x="35.9720%" y="1327.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,298,143 samples, 0.53%)</title><rect x="36.2372%" y="1525" width="0.5313%" height="15" fill="rgb(211,56,53)" fg:x="88537614" fg:w="1298143"/><text x="36.4872%" y="1535.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,298,143 samples, 0.53%)</title><rect x="36.2372%" y="1509" width="0.5313%" height="15" fill="rgb(226,201,30)" fg:x="88537614" fg:w="1298143"/><text x="36.4872%" y="1519.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,298,143 samples, 0.53%)</title><rect x="36.2372%" y="1493" width="0.5313%" height="15" fill="rgb(239,101,34)" fg:x="88537614" fg:w="1298143"/><text x="36.4872%" y="1503.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,298,143 samples, 0.53%)</title><rect x="36.2372%" y="1477" width="0.5313%" height="15" fill="rgb(226,209,5)" fg:x="88537614" fg:w="1298143"/><text x="36.4872%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,298,143 samples, 0.53%)</title><rect x="36.2372%" y="1461" width="0.5313%" height="15" fill="rgb(250,105,47)" fg:x="88537614" fg:w="1298143"/><text x="36.4872%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,298,143 samples, 0.53%)</title><rect x="36.2372%" y="1445" width="0.5313%" height="15" fill="rgb(230,72,3)" fg:x="88537614" fg:w="1298143"/><text x="36.4872%" y="1455.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,298,143 samples, 0.53%)</title><rect x="36.2372%" y="1429" width="0.5313%" height="15" fill="rgb(232,218,39)" fg:x="88537614" fg:w="1298143"/><text x="36.4872%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,298,143 samples, 0.53%)</title><rect x="36.2372%" y="1413" width="0.5313%" height="15" fill="rgb(248,166,6)" fg:x="88537614" fg:w="1298143"/><text x="36.4872%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,298,143 samples, 0.53%)</title><rect x="36.2372%" y="1397" width="0.5313%" height="15" fill="rgb(247,89,20)" fg:x="88537614" fg:w="1298143"/><text x="36.4872%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (1,298,143 samples, 0.53%)</title><rect x="36.2372%" y="1381" width="0.5313%" height="15" fill="rgb(248,130,54)" fg:x="88537614" fg:w="1298143"/><text x="36.4872%" y="1391.50"></text></g><g><title>malloc (1,298,143 samples, 0.53%)</title><rect x="36.2372%" y="1365" width="0.5313%" height="15" fill="rgb(234,196,4)" fg:x="88537614" fg:w="1298143"/><text x="36.4872%" y="1375.50"></text></g><g><title>[libc.so.6] (1,298,143 samples, 0.53%)</title><rect x="36.2372%" y="1349" width="0.5313%" height="15" fill="rgb(250,143,31)" fg:x="88537614" fg:w="1298143"/><text x="36.4872%" y="1359.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (49,254,569 samples, 20.16%)</title><rect x="17.1458%" y="1541" width="20.1592%" height="15" fill="rgb(211,110,34)" fg:x="41891974" fg:w="49254569"/><text x="17.3958%" y="1551.50">&lt;css_bitvector_compiler::HtmlNod..</text></g><g><title>[libc.so.6] (1,310,786 samples, 0.54%)</title><rect x="36.7685%" y="1525" width="0.5365%" height="15" fill="rgb(215,124,48)" fg:x="89835757" fg:w="1310786"/><text x="37.0185%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (53,157,971 samples, 21.76%)</title><rect x="17.1458%" y="1605" width="21.7568%" height="15" fill="rgb(216,46,13)" fg:x="41891974" fg:w="53157971"/><text x="17.3958%" y="1615.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (53,157,971 samples, 21.76%)</title><rect x="17.1458%" y="1589" width="21.7568%" height="15" fill="rgb(205,184,25)" fg:x="41891974" fg:w="53157971"/><text x="17.3958%" y="1599.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (53,157,971 samples, 21.76%)</title><rect x="17.1458%" y="1573" width="21.7568%" height="15" fill="rgb(228,1,10)" fg:x="41891974" fg:w="53157971"/><text x="17.3958%" y="1583.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (53,157,971 samples, 21.76%)</title><rect x="17.1458%" y="1557" width="21.7568%" height="15" fill="rgb(213,116,27)" fg:x="41891974" fg:w="53157971"/><text x="17.3958%" y="1567.50">&lt;T as alloc::slice::hack::ConvertV..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,903,402 samples, 1.60%)</title><rect x="37.3050%" y="1541" width="1.5976%" height="15" fill="rgb(241,95,50)" fg:x="91146543" fg:w="3903402"/><text x="37.5550%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,903,402 samples, 1.60%)</title><rect x="37.3050%" y="1525" width="1.5976%" height="15" fill="rgb(238,48,32)" fg:x="91146543" fg:w="3903402"/><text x="37.5550%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,903,402 samples, 1.60%)</title><rect x="37.3050%" y="1509" width="1.5976%" height="15" fill="rgb(235,113,49)" fg:x="91146543" fg:w="3903402"/><text x="37.5550%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,903,402 samples, 1.60%)</title><rect x="37.3050%" y="1493" width="1.5976%" height="15" fill="rgb(205,127,43)" fg:x="91146543" fg:w="3903402"/><text x="37.5550%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,903,402 samples, 1.60%)</title><rect x="37.3050%" y="1477" width="1.5976%" height="15" fill="rgb(250,162,2)" fg:x="91146543" fg:w="3903402"/><text x="37.5550%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,903,402 samples, 1.60%)</title><rect x="37.3050%" y="1461" width="1.5976%" height="15" fill="rgb(220,13,41)" fg:x="91146543" fg:w="3903402"/><text x="37.5550%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (3,903,402 samples, 1.60%)</title><rect x="37.3050%" y="1445" width="1.5976%" height="15" fill="rgb(249,221,25)" fg:x="91146543" fg:w="3903402"/><text x="37.5550%" y="1455.50"></text></g><g><title>malloc (2,598,221 samples, 1.06%)</title><rect x="37.8392%" y="1429" width="1.0634%" height="15" fill="rgb(215,208,19)" fg:x="92451724" fg:w="2598221"/><text x="38.0892%" y="1439.50"></text></g><g><title>[libc.so.6] (2,598,221 samples, 1.06%)</title><rect x="37.8392%" y="1413" width="1.0634%" height="15" fill="rgb(236,175,2)" fg:x="92451724" fg:w="2598221"/><text x="38.0892%" y="1423.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,348,071 samples, 0.55%)</title><rect x="38.9026%" y="1605" width="0.5517%" height="15" fill="rgb(241,52,2)" fg:x="95049945" fg:w="1348071"/><text x="39.1526%" y="1615.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,348,071 samples, 0.55%)</title><rect x="38.9026%" y="1589" width="0.5517%" height="15" fill="rgb(248,140,14)" fg:x="95049945" fg:w="1348071"/><text x="39.1526%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,348,071 samples, 0.55%)</title><rect x="38.9026%" y="1573" width="0.5517%" height="15" fill="rgb(253,22,42)" fg:x="95049945" fg:w="1348071"/><text x="39.1526%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,348,071 samples, 0.55%)</title><rect x="38.9026%" y="1557" width="0.5517%" height="15" fill="rgb(234,61,47)" fg:x="95049945" fg:w="1348071"/><text x="39.1526%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (1,348,071 samples, 0.55%)</title><rect x="38.9026%" y="1541" width="0.5517%" height="15" fill="rgb(208,226,15)" fg:x="95049945" fg:w="1348071"/><text x="39.1526%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,348,071 samples, 0.55%)</title><rect x="38.9026%" y="1525" width="0.5517%" height="15" fill="rgb(217,221,4)" fg:x="95049945" fg:w="1348071"/><text x="39.1526%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,348,071 samples, 0.55%)</title><rect x="38.9026%" y="1509" width="0.5517%" height="15" fill="rgb(212,174,34)" fg:x="95049945" fg:w="1348071"/><text x="39.1526%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,348,071 samples, 0.55%)</title><rect x="38.9026%" y="1493" width="0.5517%" height="15" fill="rgb(253,83,4)" fg:x="95049945" fg:w="1348071"/><text x="39.1526%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,348,071 samples, 0.55%)</title><rect x="38.9026%" y="1477" width="0.5517%" height="15" fill="rgb(250,195,49)" fg:x="95049945" fg:w="1348071"/><text x="39.1526%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,348,071 samples, 0.55%)</title><rect x="38.9026%" y="1461" width="0.5517%" height="15" fill="rgb(241,192,25)" fg:x="95049945" fg:w="1348071"/><text x="39.1526%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,348,071 samples, 0.55%)</title><rect x="38.9026%" y="1445" width="0.5517%" height="15" fill="rgb(208,124,10)" fg:x="95049945" fg:w="1348071"/><text x="39.1526%" y="1455.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,348,071 samples, 0.55%)</title><rect x="38.9026%" y="1429" width="0.5517%" height="15" fill="rgb(222,33,0)" fg:x="95049945" fg:w="1348071"/><text x="39.1526%" y="1439.50"></text></g><g><title>alloc::alloc::alloc (1,348,071 samples, 0.55%)</title><rect x="38.9026%" y="1413" width="0.5517%" height="15" fill="rgb(234,209,28)" fg:x="95049945" fg:w="1348071"/><text x="39.1526%" y="1423.50"></text></g><g><title>malloc (1,348,071 samples, 0.55%)</title><rect x="38.9026%" y="1397" width="0.5517%" height="15" fill="rgb(224,11,23)" fg:x="95049945" fg:w="1348071"/><text x="39.1526%" y="1407.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,605,850 samples, 1.07%)</title><rect x="39.4544%" y="1605" width="1.0665%" height="15" fill="rgb(232,99,1)" fg:x="96398016" fg:w="2605850"/><text x="39.7044%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,605,850 samples, 1.07%)</title><rect x="39.4544%" y="1589" width="1.0665%" height="15" fill="rgb(237,95,45)" fg:x="96398016" fg:w="2605850"/><text x="39.7044%" y="1599.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,605,850 samples, 1.07%)</title><rect x="39.4544%" y="1573" width="1.0665%" height="15" fill="rgb(208,109,11)" fg:x="96398016" fg:w="2605850"/><text x="39.7044%" y="1583.50"></text></g><g><title>alloc::slice::hack::to_vec (2,605,850 samples, 1.07%)</title><rect x="39.4544%" y="1557" width="1.0665%" height="15" fill="rgb(216,190,48)" fg:x="96398016" fg:w="2605850"/><text x="39.7044%" y="1567.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,605,850 samples, 1.07%)</title><rect x="39.4544%" y="1541" width="1.0665%" height="15" fill="rgb(251,171,36)" fg:x="96398016" fg:w="2605850"/><text x="39.7044%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,605,850 samples, 1.07%)</title><rect x="39.4544%" y="1525" width="1.0665%" height="15" fill="rgb(230,62,22)" fg:x="96398016" fg:w="2605850"/><text x="39.7044%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,605,850 samples, 1.07%)</title><rect x="39.4544%" y="1509" width="1.0665%" height="15" fill="rgb(225,114,35)" fg:x="96398016" fg:w="2605850"/><text x="39.7044%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,605,850 samples, 1.07%)</title><rect x="39.4544%" y="1493" width="1.0665%" height="15" fill="rgb(215,118,42)" fg:x="96398016" fg:w="2605850"/><text x="39.7044%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,605,850 samples, 1.07%)</title><rect x="39.4544%" y="1477" width="1.0665%" height="15" fill="rgb(243,119,21)" fg:x="96398016" fg:w="2605850"/><text x="39.7044%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,605,850 samples, 1.07%)</title><rect x="39.4544%" y="1461" width="1.0665%" height="15" fill="rgb(252,177,53)" fg:x="96398016" fg:w="2605850"/><text x="39.7044%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,605,850 samples, 1.07%)</title><rect x="39.4544%" y="1445" width="1.0665%" height="15" fill="rgb(237,209,29)" fg:x="96398016" fg:w="2605850"/><text x="39.7044%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (2,605,850 samples, 1.07%)</title><rect x="39.4544%" y="1429" width="1.0665%" height="15" fill="rgb(212,65,23)" fg:x="96398016" fg:w="2605850"/><text x="39.7044%" y="1439.50"></text></g><g><title>malloc (2,605,850 samples, 1.07%)</title><rect x="39.4544%" y="1413" width="1.0665%" height="15" fill="rgb(230,222,46)" fg:x="96398016" fg:w="2605850"/><text x="39.7044%" y="1423.50"></text></g><g><title>[libc.so.6] (1,324,549 samples, 0.54%)</title><rect x="39.9788%" y="1397" width="0.5421%" height="15" fill="rgb(215,135,32)" fg:x="97679317" fg:w="1324549"/><text x="40.2288%" y="1407.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (58,425,448 samples, 23.91%)</title><rect x="17.1458%" y="1621" width="23.9127%" height="15" fill="rgb(246,101,22)" fg:x="41891974" fg:w="58425448"/><text x="17.3958%" y="1631.50">&lt;css_bitvector_compiler::HtmlNode as c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,313,556 samples, 0.54%)</title><rect x="40.5209%" y="1605" width="0.5376%" height="15" fill="rgb(206,107,13)" fg:x="99003866" fg:w="1313556"/><text x="40.7709%" y="1615.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,313,556 samples, 0.54%)</title><rect x="40.5209%" y="1589" width="0.5376%" height="15" fill="rgb(250,100,44)" fg:x="99003866" fg:w="1313556"/><text x="40.7709%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,286,486 samples, 0.53%)</title><rect x="41.0585%" y="1621" width="0.5265%" height="15" fill="rgb(231,147,38)" fg:x="100317422" fg:w="1286486"/><text x="41.3085%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,286,486 samples, 0.53%)</title><rect x="41.0585%" y="1605" width="0.5265%" height="15" fill="rgb(229,8,40)" fg:x="100317422" fg:w="1286486"/><text x="41.3085%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,286,486 samples, 0.53%)</title><rect x="41.0585%" y="1589" width="0.5265%" height="15" fill="rgb(221,135,30)" fg:x="100317422" fg:w="1286486"/><text x="41.3085%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,286,486 samples, 0.53%)</title><rect x="41.0585%" y="1573" width="0.5265%" height="15" fill="rgb(249,193,18)" fg:x="100317422" fg:w="1286486"/><text x="41.3085%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,286,486 samples, 0.53%)</title><rect x="41.0585%" y="1557" width="0.5265%" height="15" fill="rgb(209,133,39)" fg:x="100317422" fg:w="1286486"/><text x="41.3085%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,286,486 samples, 0.53%)</title><rect x="41.0585%" y="1541" width="0.5265%" height="15" fill="rgb(232,100,14)" fg:x="100317422" fg:w="1286486"/><text x="41.3085%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (1,286,486 samples, 0.53%)</title><rect x="41.0585%" y="1525" width="0.5265%" height="15" fill="rgb(224,185,1)" fg:x="100317422" fg:w="1286486"/><text x="41.3085%" y="1535.50"></text></g><g><title>malloc (1,286,486 samples, 0.53%)</title><rect x="41.0585%" y="1509" width="0.5265%" height="15" fill="rgb(223,139,8)" fg:x="100317422" fg:w="1286486"/><text x="41.3085%" y="1519.50"></text></g><g><title>[libc.so.6] (1,286,486 samples, 0.53%)</title><rect x="41.0585%" y="1493" width="0.5265%" height="15" fill="rgb(232,213,38)" fg:x="100317422" fg:w="1286486"/><text x="41.3085%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (61,048,681 samples, 24.99%)</title><rect x="17.1458%" y="1685" width="24.9864%" height="15" fill="rgb(207,94,22)" fg:x="41891974" fg:w="61048681"/><text x="17.3958%" y="1695.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (61,048,681 samples, 24.99%)</title><rect x="17.1458%" y="1669" width="24.9864%" height="15" fill="rgb(219,183,54)" fg:x="41891974" fg:w="61048681"/><text x="17.3958%" y="1679.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (61,048,681 samples, 24.99%)</title><rect x="17.1458%" y="1653" width="24.9864%" height="15" fill="rgb(216,185,54)" fg:x="41891974" fg:w="61048681"/><text x="17.3958%" y="1663.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (61,048,681 samples, 24.99%)</title><rect x="17.1458%" y="1637" width="24.9864%" height="15" fill="rgb(254,217,39)" fg:x="41891974" fg:w="61048681"/><text x="17.3958%" y="1647.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::t..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,336,747 samples, 0.55%)</title><rect x="41.5851%" y="1621" width="0.5471%" height="15" fill="rgb(240,178,23)" fg:x="101603908" fg:w="1336747"/><text x="41.8351%" y="1631.50"></text></g><g><title>core::ptr::read_volatile (1,032,957 samples, 0.42%)</title><rect x="42.1322%" y="1477" width="0.4228%" height="15" fill="rgb(218,11,47)" fg:x="102940655" fg:w="1032957"/><text x="42.3822%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (65,896,036 samples, 26.97%)</title><rect x="16.1014%" y="1765" width="26.9703%" height="15" fill="rgb(218,51,51)" fg:x="39340241" fg:w="65896036"/><text x="16.3514%" y="1775.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (65,896,036 samples, 26.97%)</title><rect x="16.1014%" y="1749" width="26.9703%" height="15" fill="rgb(238,126,27)" fg:x="39340241" fg:w="65896036"/><text x="16.3514%" y="1759.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (65,896,036 samples, 26.97%)</title><rect x="16.1014%" y="1733" width="26.9703%" height="15" fill="rgb(249,202,22)" fg:x="39340241" fg:w="65896036"/><text x="16.3514%" y="1743.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (65,896,036 samples, 26.97%)</title><rect x="16.1014%" y="1717" width="26.9703%" height="15" fill="rgb(254,195,49)" fg:x="39340241" fg:w="65896036"/><text x="16.3514%" y="1727.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_v..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (65,896,036 samples, 26.97%)</title><rect x="16.1014%" y="1701" width="26.9703%" height="15" fill="rgb(208,123,14)" fg:x="39340241" fg:w="65896036"/><text x="16.3514%" y="1711.50">&lt;css_bitvector_compiler::HtmlNode as core::..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,295,622 samples, 0.94%)</title><rect x="42.1322%" y="1685" width="0.9396%" height="15" fill="rgb(224,200,8)" fg:x="102940655" fg:w="2295622"/><text x="42.3822%" y="1695.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,295,622 samples, 0.94%)</title><rect x="42.1322%" y="1669" width="0.9396%" height="15" fill="rgb(217,61,36)" fg:x="102940655" fg:w="2295622"/><text x="42.3822%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,295,622 samples, 0.94%)</title><rect x="42.1322%" y="1653" width="0.9396%" height="15" fill="rgb(206,35,45)" fg:x="102940655" fg:w="2295622"/><text x="42.3822%" y="1663.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,295,622 samples, 0.94%)</title><rect x="42.1322%" y="1637" width="0.9396%" height="15" fill="rgb(217,65,33)" fg:x="102940655" fg:w="2295622"/><text x="42.3822%" y="1647.50"></text></g><g><title>alloc::slice::hack::to_vec (2,295,622 samples, 0.94%)</title><rect x="42.1322%" y="1621" width="0.9396%" height="15" fill="rgb(222,158,48)" fg:x="102940655" fg:w="2295622"/><text x="42.3822%" y="1631.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,295,622 samples, 0.94%)</title><rect x="42.1322%" y="1605" width="0.9396%" height="15" fill="rgb(254,2,54)" fg:x="102940655" fg:w="2295622"/><text x="42.3822%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,295,622 samples, 0.94%)</title><rect x="42.1322%" y="1589" width="0.9396%" height="15" fill="rgb(250,143,38)" fg:x="102940655" fg:w="2295622"/><text x="42.3822%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,295,622 samples, 0.94%)</title><rect x="42.1322%" y="1573" width="0.9396%" height="15" fill="rgb(248,25,0)" fg:x="102940655" fg:w="2295622"/><text x="42.3822%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,295,622 samples, 0.94%)</title><rect x="42.1322%" y="1557" width="0.9396%" height="15" fill="rgb(206,152,27)" fg:x="102940655" fg:w="2295622"/><text x="42.3822%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,295,622 samples, 0.94%)</title><rect x="42.1322%" y="1541" width="0.9396%" height="15" fill="rgb(240,77,30)" fg:x="102940655" fg:w="2295622"/><text x="42.3822%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,295,622 samples, 0.94%)</title><rect x="42.1322%" y="1525" width="0.9396%" height="15" fill="rgb(231,5,3)" fg:x="102940655" fg:w="2295622"/><text x="42.3822%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,295,622 samples, 0.94%)</title><rect x="42.1322%" y="1509" width="0.9396%" height="15" fill="rgb(207,226,32)" fg:x="102940655" fg:w="2295622"/><text x="42.3822%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (2,295,622 samples, 0.94%)</title><rect x="42.1322%" y="1493" width="0.9396%" height="15" fill="rgb(222,207,47)" fg:x="102940655" fg:w="2295622"/><text x="42.3822%" y="1503.50"></text></g><g><title>malloc (1,262,665 samples, 0.52%)</title><rect x="42.5549%" y="1477" width="0.5168%" height="15" fill="rgb(229,115,45)" fg:x="103973612" fg:w="1262665"/><text x="42.8049%" y="1487.50"></text></g><g><title>[libc.so.6] (1,262,665 samples, 0.52%)</title><rect x="42.5549%" y="1461" width="0.5168%" height="15" fill="rgb(224,191,6)" fg:x="103973612" fg:w="1262665"/><text x="42.8049%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (67,110,623 samples, 27.47%)</title><rect x="16.1014%" y="1845" width="27.4674%" height="15" fill="rgb(230,227,24)" fg:x="39340241" fg:w="67110623"/><text x="16.3514%" y="1855.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (67,110,623 samples, 27.47%)</title><rect x="16.1014%" y="1829" width="27.4674%" height="15" fill="rgb(228,80,19)" fg:x="39340241" fg:w="67110623"/><text x="16.3514%" y="1839.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (67,110,623 samples, 27.47%)</title><rect x="16.1014%" y="1813" width="27.4674%" height="15" fill="rgb(247,229,0)" fg:x="39340241" fg:w="67110623"/><text x="16.3514%" y="1823.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (67,110,623 samples, 27.47%)</title><rect x="16.1014%" y="1797" width="27.4674%" height="15" fill="rgb(237,194,15)" fg:x="39340241" fg:w="67110623"/><text x="16.3514%" y="1807.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (67,110,623 samples, 27.47%)</title><rect x="16.1014%" y="1781" width="27.4674%" height="15" fill="rgb(219,203,20)" fg:x="39340241" fg:w="67110623"/><text x="16.3514%" y="1791.50">&lt;css_bitvector_compiler::HtmlNode as core::c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,214,587 samples, 0.50%)</title><rect x="43.0717%" y="1765" width="0.4971%" height="15" fill="rgb(234,128,8)" fg:x="105236277" fg:w="1214587"/><text x="43.3217%" y="1775.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,214,587 samples, 0.50%)</title><rect x="43.0717%" y="1749" width="0.4971%" height="15" fill="rgb(248,202,8)" fg:x="105236277" fg:w="1214587"/><text x="43.3217%" y="1759.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,214,587 samples, 0.50%)</title><rect x="43.0717%" y="1733" width="0.4971%" height="15" fill="rgb(206,104,37)" fg:x="105236277" fg:w="1214587"/><text x="43.3217%" y="1743.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,214,587 samples, 0.50%)</title><rect x="43.0717%" y="1717" width="0.4971%" height="15" fill="rgb(223,8,27)" fg:x="105236277" fg:w="1214587"/><text x="43.3217%" y="1727.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,214,587 samples, 0.50%)</title><rect x="43.0717%" y="1701" width="0.4971%" height="15" fill="rgb(216,217,28)" fg:x="105236277" fg:w="1214587"/><text x="43.3217%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,214,587 samples, 0.50%)</title><rect x="43.0717%" y="1685" width="0.4971%" height="15" fill="rgb(249,199,1)" fg:x="105236277" fg:w="1214587"/><text x="43.3217%" y="1695.50"></text></g><g><title>core::clone::Clone::clone (1,214,587 samples, 0.50%)</title><rect x="43.0717%" y="1669" width="0.4971%" height="15" fill="rgb(240,85,17)" fg:x="105236277" fg:w="1214587"/><text x="43.3217%" y="1679.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,214,587 samples, 0.50%)</title><rect x="43.0717%" y="1653" width="0.4971%" height="15" fill="rgb(206,108,45)" fg:x="105236277" fg:w="1214587"/><text x="43.3217%" y="1663.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,282,901 samples, 0.53%)</title><rect x="43.5688%" y="1845" width="0.5251%" height="15" fill="rgb(245,210,41)" fg:x="106450864" fg:w="1282901"/><text x="43.8188%" y="1855.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,282,901 samples, 0.53%)</title><rect x="43.5688%" y="1829" width="0.5251%" height="15" fill="rgb(206,13,37)" fg:x="106450864" fg:w="1282901"/><text x="43.8188%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,282,901 samples, 0.53%)</title><rect x="43.5688%" y="1813" width="0.5251%" height="15" fill="rgb(250,61,18)" fg:x="106450864" fg:w="1282901"/><text x="43.8188%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,282,901 samples, 0.53%)</title><rect x="43.5688%" y="1797" width="0.5251%" height="15" fill="rgb(235,172,48)" fg:x="106450864" fg:w="1282901"/><text x="43.8188%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (1,282,901 samples, 0.53%)</title><rect x="43.5688%" y="1781" width="0.5251%" height="15" fill="rgb(249,201,17)" fg:x="106450864" fg:w="1282901"/><text x="43.8188%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,282,901 samples, 0.53%)</title><rect x="43.5688%" y="1765" width="0.5251%" height="15" fill="rgb(219,208,6)" fg:x="106450864" fg:w="1282901"/><text x="43.8188%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,282,901 samples, 0.53%)</title><rect x="43.5688%" y="1749" width="0.5251%" height="15" fill="rgb(248,31,23)" fg:x="106450864" fg:w="1282901"/><text x="43.8188%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,282,901 samples, 0.53%)</title><rect x="43.5688%" y="1733" width="0.5251%" height="15" fill="rgb(245,15,42)" fg:x="106450864" fg:w="1282901"/><text x="43.8188%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,282,901 samples, 0.53%)</title><rect x="43.5688%" y="1717" width="0.5251%" height="15" fill="rgb(222,217,39)" fg:x="106450864" fg:w="1282901"/><text x="43.8188%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,282,901 samples, 0.53%)</title><rect x="43.5688%" y="1701" width="0.5251%" height="15" fill="rgb(210,219,27)" fg:x="106450864" fg:w="1282901"/><text x="43.8188%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,282,901 samples, 0.53%)</title><rect x="43.5688%" y="1685" width="0.5251%" height="15" fill="rgb(252,166,36)" fg:x="106450864" fg:w="1282901"/><text x="43.8188%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,282,901 samples, 0.53%)</title><rect x="43.5688%" y="1669" width="0.5251%" height="15" fill="rgb(245,132,34)" fg:x="106450864" fg:w="1282901"/><text x="43.8188%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (1,282,901 samples, 0.53%)</title><rect x="43.5688%" y="1653" width="0.5251%" height="15" fill="rgb(236,54,3)" fg:x="106450864" fg:w="1282901"/><text x="43.8188%" y="1663.50"></text></g><g><title>malloc (1,282,901 samples, 0.53%)</title><rect x="43.5688%" y="1637" width="0.5251%" height="15" fill="rgb(241,173,43)" fg:x="106450864" fg:w="1282901"/><text x="43.8188%" y="1647.50"></text></g><g><title>[libc.so.6] (1,282,901 samples, 0.53%)</title><rect x="43.5688%" y="1621" width="0.5251%" height="15" fill="rgb(215,190,9)" fg:x="106450864" fg:w="1282901"/><text x="43.8188%" y="1631.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,802,524 samples, 1.56%)</title><rect x="44.0939%" y="1845" width="1.5563%" height="15" fill="rgb(242,101,16)" fg:x="107733765" fg:w="3802524"/><text x="44.3439%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,802,524 samples, 1.56%)</title><rect x="44.0939%" y="1829" width="1.5563%" height="15" fill="rgb(223,190,21)" fg:x="107733765" fg:w="3802524"/><text x="44.3439%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,802,524 samples, 1.56%)</title><rect x="44.0939%" y="1813" width="1.5563%" height="15" fill="rgb(215,228,25)" fg:x="107733765" fg:w="3802524"/><text x="44.3439%" y="1823.50"></text></g><g><title>alloc::slice::hack::to_vec (3,802,524 samples, 1.56%)</title><rect x="44.0939%" y="1797" width="1.5563%" height="15" fill="rgb(225,36,22)" fg:x="107733765" fg:w="3802524"/><text x="44.3439%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,802,524 samples, 1.56%)</title><rect x="44.0939%" y="1781" width="1.5563%" height="15" fill="rgb(251,106,46)" fg:x="107733765" fg:w="3802524"/><text x="44.3439%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,802,524 samples, 1.56%)</title><rect x="44.0939%" y="1765" width="1.5563%" height="15" fill="rgb(208,90,1)" fg:x="107733765" fg:w="3802524"/><text x="44.3439%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,802,524 samples, 1.56%)</title><rect x="44.0939%" y="1749" width="1.5563%" height="15" fill="rgb(243,10,4)" fg:x="107733765" fg:w="3802524"/><text x="44.3439%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,802,524 samples, 1.56%)</title><rect x="44.0939%" y="1733" width="1.5563%" height="15" fill="rgb(212,137,27)" fg:x="107733765" fg:w="3802524"/><text x="44.3439%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,802,524 samples, 1.56%)</title><rect x="44.0939%" y="1717" width="1.5563%" height="15" fill="rgb(231,220,49)" fg:x="107733765" fg:w="3802524"/><text x="44.3439%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,802,524 samples, 1.56%)</title><rect x="44.0939%" y="1701" width="1.5563%" height="15" fill="rgb(237,96,20)" fg:x="107733765" fg:w="3802524"/><text x="44.3439%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,802,524 samples, 1.56%)</title><rect x="44.0939%" y="1685" width="1.5563%" height="15" fill="rgb(239,229,30)" fg:x="107733765" fg:w="3802524"/><text x="44.3439%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (3,802,524 samples, 1.56%)</title><rect x="44.0939%" y="1669" width="1.5563%" height="15" fill="rgb(219,65,33)" fg:x="107733765" fg:w="3802524"/><text x="44.3439%" y="1679.50"></text></g><g><title>malloc (3,802,524 samples, 1.56%)</title><rect x="44.0939%" y="1653" width="1.5563%" height="15" fill="rgb(243,134,7)" fg:x="107733765" fg:w="3802524"/><text x="44.3439%" y="1663.50"></text></g><g><title>[libc.so.6] (1,261,793 samples, 0.52%)</title><rect x="45.1338%" y="1637" width="0.5164%" height="15" fill="rgb(216,177,54)" fg:x="110274496" fg:w="1261793"/><text x="45.3838%" y="1647.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (74,818,755 samples, 30.62%)</title><rect x="15.5591%" y="1861" width="30.6223%" height="15" fill="rgb(211,160,20)" fg:x="38015116" fg:w="74818755"/><text x="15.8091%" y="1871.50">&lt;css_bitvector_compiler::HtmlNode as core::clone:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1845" width="0.5311%" height="15" fill="rgb(239,85,39)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1855.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1829" width="0.5311%" height="15" fill="rgb(232,125,22)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1839.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1813" width="0.5311%" height="15" fill="rgb(244,57,34)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1823.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1797" width="0.5311%" height="15" fill="rgb(214,203,32)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1807.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1781" width="0.5311%" height="15" fill="rgb(207,58,43)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1765" width="0.5311%" height="15" fill="rgb(215,193,15)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1775.50"></text></g><g><title>core::clone::Clone::clone (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1749" width="0.5311%" height="15" fill="rgb(232,15,44)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1759.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1733" width="0.5311%" height="15" fill="rgb(212,3,48)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1717" width="0.5311%" height="15" fill="rgb(218,128,7)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1701" width="0.5311%" height="15" fill="rgb(226,216,39)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1711.50"></text></g><g><title>alloc::slice::hack::to_vec (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1685" width="0.5311%" height="15" fill="rgb(243,47,51)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1695.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1669" width="0.5311%" height="15" fill="rgb(241,183,40)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1653" width="0.5311%" height="15" fill="rgb(231,217,32)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1637" width="0.5311%" height="15" fill="rgb(229,61,38)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1621" width="0.5311%" height="15" fill="rgb(225,210,5)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1605" width="0.5311%" height="15" fill="rgb(231,79,45)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1589" width="0.5311%" height="15" fill="rgb(224,100,7)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1599.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1573" width="0.5311%" height="15" fill="rgb(241,198,18)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1583.50"></text></g><g><title>alloc::alloc::alloc (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1557" width="0.5311%" height="15" fill="rgb(252,97,53)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1567.50"></text></g><g><title>malloc (1,297,582 samples, 0.53%)</title><rect x="45.6502%" y="1541" width="0.5311%" height="15" fill="rgb(220,88,7)" fg:x="111536289" fg:w="1297582"/><text x="45.9002%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,859,109 samples, 1.58%)</title><rect x="46.1813%" y="1861" width="1.5795%" height="15" fill="rgb(213,176,14)" fg:x="112833871" fg:w="3859109"/><text x="46.4313%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,859,109 samples, 1.58%)</title><rect x="46.1813%" y="1845" width="1.5795%" height="15" fill="rgb(246,73,7)" fg:x="112833871" fg:w="3859109"/><text x="46.4313%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,859,109 samples, 1.58%)</title><rect x="46.1813%" y="1829" width="1.5795%" height="15" fill="rgb(245,64,36)" fg:x="112833871" fg:w="3859109"/><text x="46.4313%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,859,109 samples, 1.58%)</title><rect x="46.1813%" y="1813" width="1.5795%" height="15" fill="rgb(245,80,10)" fg:x="112833871" fg:w="3859109"/><text x="46.4313%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,859,109 samples, 1.58%)</title><rect x="46.1813%" y="1797" width="1.5795%" height="15" fill="rgb(232,107,50)" fg:x="112833871" fg:w="3859109"/><text x="46.4313%" y="1807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,859,109 samples, 1.58%)</title><rect x="46.1813%" y="1781" width="1.5795%" height="15" fill="rgb(253,3,0)" fg:x="112833871" fg:w="3859109"/><text x="46.4313%" y="1791.50"></text></g><g><title>alloc::alloc::alloc (3,859,109 samples, 1.58%)</title><rect x="46.1813%" y="1765" width="1.5795%" height="15" fill="rgb(212,99,53)" fg:x="112833871" fg:w="3859109"/><text x="46.4313%" y="1775.50"></text></g><g><title>malloc (3,859,109 samples, 1.58%)</title><rect x="46.1813%" y="1749" width="1.5795%" height="15" fill="rgb(249,111,54)" fg:x="112833871" fg:w="3859109"/><text x="46.4313%" y="1759.50"></text></g><g><title>[libc.so.6] (3,859,109 samples, 1.58%)</title><rect x="46.1813%" y="1733" width="1.5795%" height="15" fill="rgb(249,55,30)" fg:x="112833871" fg:w="3859109"/><text x="46.4313%" y="1743.50"></text></g><g><title>[libc.so.6] (3,859,109 samples, 1.58%)</title><rect x="46.1813%" y="1717" width="1.5795%" height="15" fill="rgb(237,47,42)" fg:x="112833871" fg:w="3859109"/><text x="46.4313%" y="1727.50"></text></g><g><title>[libc.so.6] (2,589,140 samples, 1.06%)</title><rect x="46.7011%" y="1701" width="1.0597%" height="15" fill="rgb(211,20,18)" fg:x="114103840" fg:w="2589140"/><text x="46.9511%" y="1711.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (79,953,523 samples, 32.72%)</title><rect x="15.5591%" y="2101" width="32.7239%" height="15" fill="rgb(231,203,46)" fg:x="38015116" fg:w="79953523"/><text x="15.8091%" y="2111.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (79,953,523 samples, 32.72%)</title><rect x="15.5591%" y="2085" width="32.7239%" height="15" fill="rgb(237,142,3)" fg:x="38015116" fg:w="79953523"/><text x="15.8091%" y="2095.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (79,953,523 samples, 32.72%)</title><rect x="15.5591%" y="2069" width="32.7239%" height="15" fill="rgb(241,107,1)" fg:x="38015116" fg:w="79953523"/><text x="15.8091%" y="2079.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (79,953,523 samples, 32.72%)</title><rect x="15.5591%" y="2053" width="32.7239%" height="15" fill="rgb(229,83,13)" fg:x="38015116" fg:w="79953523"/><text x="15.8091%" y="2063.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (79,953,523 samples, 32.72%)</title><rect x="15.5591%" y="2037" width="32.7239%" height="15" fill="rgb(241,91,40)" fg:x="38015116" fg:w="79953523"/><text x="15.8091%" y="2047.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (79,953,523 samples, 32.72%)</title><rect x="15.5591%" y="2021" width="32.7239%" height="15" fill="rgb(225,3,45)" fg:x="38015116" fg:w="79953523"/><text x="15.8091%" y="2031.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (79,953,523 samples, 32.72%)</title><rect x="15.5591%" y="2005" width="32.7239%" height="15" fill="rgb(244,223,14)" fg:x="38015116" fg:w="79953523"/><text x="15.8091%" y="2015.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (79,953,523 samples, 32.72%)</title><rect x="15.5591%" y="1989" width="32.7239%" height="15" fill="rgb(224,124,37)" fg:x="38015116" fg:w="79953523"/><text x="15.8091%" y="1999.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (79,953,523 samples, 32.72%)</title><rect x="15.5591%" y="1973" width="32.7239%" height="15" fill="rgb(251,171,30)" fg:x="38015116" fg:w="79953523"/><text x="15.8091%" y="1983.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (79,953,523 samples, 32.72%)</title><rect x="15.5591%" y="1957" width="32.7239%" height="15" fill="rgb(236,46,54)" fg:x="38015116" fg:w="79953523"/><text x="15.8091%" y="1967.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (79,953,523 samples, 32.72%)</title><rect x="15.5591%" y="1941" width="32.7239%" height="15" fill="rgb(245,213,5)" fg:x="38015116" fg:w="79953523"/><text x="15.8091%" y="1951.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (79,953,523 samples, 32.72%)</title><rect x="15.5591%" y="1925" width="32.7239%" height="15" fill="rgb(230,144,27)" fg:x="38015116" fg:w="79953523"/><text x="15.8091%" y="1935.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (79,953,523 samples, 32.72%)</title><rect x="15.5591%" y="1909" width="32.7239%" height="15" fill="rgb(220,86,6)" fg:x="38015116" fg:w="79953523"/><text x="15.8091%" y="1919.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (79,953,523 samples, 32.72%)</title><rect x="15.5591%" y="1893" width="32.7239%" height="15" fill="rgb(240,20,13)" fg:x="38015116" fg:w="79953523"/><text x="15.8091%" y="1903.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (79,953,523 samples, 32.72%)</title><rect x="15.5591%" y="1877" width="32.7239%" height="15" fill="rgb(217,89,34)" fg:x="38015116" fg:w="79953523"/><text x="15.8091%" y="1887.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,275,659 samples, 0.52%)</title><rect x="47.7608%" y="1861" width="0.5221%" height="15" fill="rgb(229,13,5)" fg:x="116692980" fg:w="1275659"/><text x="48.0108%" y="1871.50"></text></g><g><title>benchmark::extract_path_from_command (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="2085" width="0.5380%" height="15" fill="rgb(244,67,35)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="2095.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="2069" width="0.5380%" height="15" fill="rgb(221,40,2)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="2079.50"></text></g><g><title>benchmark::extract_path_from_command::_{{closure}} (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="2053" width="0.5380%" height="15" fill="rgb(237,157,21)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="2063.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="2037" width="0.5380%" height="15" fill="rgb(222,94,11)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="2047.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="2021" width="0.5380%" height="15" fill="rgb(249,113,6)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="2031.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="2005" width="0.5380%" height="15" fill="rgb(238,137,36)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="1989" width="0.5380%" height="15" fill="rgb(210,102,26)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="1973" width="0.5380%" height="15" fill="rgb(218,30,30)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="1957" width="0.5380%" height="15" fill="rgb(214,67,26)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="1941" width="0.5380%" height="15" fill="rgb(251,9,53)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="1925" width="0.5380%" height="15" fill="rgb(228,204,25)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="1909" width="0.5380%" height="15" fill="rgb(207,153,8)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="1893" width="0.5380%" height="15" fill="rgb(242,9,16)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="1877" width="0.5380%" height="15" fill="rgb(217,211,10)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="1887.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="1861" width="0.5380%" height="15" fill="rgb(219,228,52)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="1845" width="0.5380%" height="15" fill="rgb(231,92,29)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="1855.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="1829" width="0.5380%" height="15" fill="rgb(232,8,23)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="1839.50"></text></g><g><title>alloc::alloc::realloc (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="1813" width="0.5380%" height="15" fill="rgb(216,211,34)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="1823.50"></text></g><g><title>realloc (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="1797" width="0.5380%" height="15" fill="rgb(236,151,0)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="1807.50"></text></g><g><title>[libc.so.6] (1,314,559 samples, 0.54%)</title><rect x="48.2829%" y="1781" width="0.5380%" height="15" fill="rgb(209,168,3)" fg:x="117968639" fg:w="1314559"/><text x="48.5329%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (997,190 samples, 0.41%)</title><rect x="48.8209%" y="2069" width="0.4081%" height="15" fill="rgb(208,129,28)" fg:x="119283198" fg:w="997190"/><text x="49.0709%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (997,190 samples, 0.41%)</title><rect x="48.8209%" y="2053" width="0.4081%" height="15" fill="rgb(229,78,22)" fg:x="119283198" fg:w="997190"/><text x="49.0709%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (997,190 samples, 0.41%)</title><rect x="48.8209%" y="2037" width="0.4081%" height="15" fill="rgb(228,187,13)" fg:x="119283198" fg:w="997190"/><text x="49.0709%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (997,190 samples, 0.41%)</title><rect x="48.8209%" y="2021" width="0.4081%" height="15" fill="rgb(240,119,24)" fg:x="119283198" fg:w="997190"/><text x="49.0709%" y="2031.50"></text></g><g><title>alloc::raw_vec::finish_grow (997,190 samples, 0.41%)</title><rect x="48.8209%" y="2005" width="0.4081%" height="15" fill="rgb(209,194,42)" fg:x="119283198" fg:w="997190"/><text x="49.0709%" y="2015.50"></text></g><g><title>malloc (997,190 samples, 0.41%)</title><rect x="48.8209%" y="1989" width="0.4081%" height="15" fill="rgb(247,200,46)" fg:x="119283198" fg:w="997190"/><text x="49.0709%" y="1999.50"></text></g><g><title>[libc.so.6] (997,190 samples, 0.41%)</title><rect x="48.8209%" y="1973" width="0.4081%" height="15" fill="rgb(218,76,16)" fg:x="119283198" fg:w="997190"/><text x="49.0709%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1957" width="0.5388%" height="15" fill="rgb(225,21,48)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1967.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1941" width="0.5388%" height="15" fill="rgb(239,223,50)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1951.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1925" width="0.5388%" height="15" fill="rgb(244,45,21)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1935.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1909" width="0.5388%" height="15" fill="rgb(232,33,43)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1919.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1893" width="0.5388%" height="15" fill="rgb(209,8,3)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1877" width="0.5388%" height="15" fill="rgb(214,25,53)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1861" width="0.5388%" height="15" fill="rgb(254,186,54)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1845" width="0.5388%" height="15" fill="rgb(208,174,49)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1829" width="0.5388%" height="15" fill="rgb(233,191,51)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1839.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1813" width="0.5388%" height="15" fill="rgb(222,134,10)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1823.50"></text></g><g><title>benchmark::json_to_html_node::_{{closure}} (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1797" width="0.5388%" height="15" fill="rgb(230,226,20)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1807.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1781" width="0.5388%" height="15" fill="rgb(251,111,25)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1791.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1765" width="0.5388%" height="15" fill="rgb(224,40,46)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1775.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1749" width="0.5388%" height="15" fill="rgb(236,108,47)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1759.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1733" width="0.5388%" height="15" fill="rgb(234,93,0)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1717" width="0.5388%" height="15" fill="rgb(224,213,32)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1701" width="0.5388%" height="15" fill="rgb(251,11,48)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1685" width="0.5388%" height="15" fill="rgb(236,173,5)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1669" width="0.5388%" height="15" fill="rgb(230,95,12)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1653" width="0.5388%" height="15" fill="rgb(232,209,1)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1637" width="0.5388%" height="15" fill="rgb(232,6,1)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1621" width="0.5388%" height="15" fill="rgb(210,224,50)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1605" width="0.5388%" height="15" fill="rgb(228,127,35)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1589" width="0.5388%" height="15" fill="rgb(245,102,45)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1573" width="0.5388%" height="15" fill="rgb(214,1,49)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1557" width="0.5388%" height="15" fill="rgb(226,163,40)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1541" width="0.5388%" height="15" fill="rgb(239,212,28)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1551.50"></text></g><g><title>malloc (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1525" width="0.5388%" height="15" fill="rgb(220,20,13)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1535.50"></text></g><g><title>[libc.so.6] (1,316,376 samples, 0.54%)</title><rect x="49.2291%" y="1509" width="0.5388%" height="15" fill="rgb(210,164,35)" fg:x="120280388" fg:w="1316376"/><text x="49.4791%" y="1519.50"></text></g><g><title>benchmark::json_to_html_node (2,248,352 samples, 0.92%)</title><rect x="49.2291%" y="1973" width="0.9202%" height="15" fill="rgb(248,109,41)" fg:x="120280388" fg:w="2248352"/><text x="49.4791%" y="1983.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (931,976 samples, 0.38%)</title><rect x="49.7679%" y="1957" width="0.3814%" height="15" fill="rgb(238,23,50)" fg:x="121596764" fg:w="931976"/><text x="50.0179%" y="1967.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (931,976 samples, 0.38%)</title><rect x="49.7679%" y="1941" width="0.3814%" height="15" fill="rgb(211,48,49)" fg:x="121596764" fg:w="931976"/><text x="50.0179%" y="1951.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (931,976 samples, 0.38%)</title><rect x="49.7679%" y="1925" width="0.3814%" height="15" fill="rgb(223,36,21)" fg:x="121596764" fg:w="931976"/><text x="50.0179%" y="1935.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (931,976 samples, 0.38%)</title><rect x="49.7679%" y="1909" width="0.3814%" height="15" fill="rgb(207,123,46)" fg:x="121596764" fg:w="931976"/><text x="50.0179%" y="1919.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (931,976 samples, 0.38%)</title><rect x="49.7679%" y="1893" width="0.3814%" height="15" fill="rgb(240,218,32)" fg:x="121596764" fg:w="931976"/><text x="50.0179%" y="1903.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1,137,836 samples, 0.47%)</title><rect x="50.1493%" y="1957" width="0.4657%" height="15" fill="rgb(252,5,43)" fg:x="122528740" fg:w="1137836"/><text x="50.3993%" y="1967.50"></text></g><g><title>alloc::str::convert_while_ascii (1,137,836 samples, 0.47%)</title><rect x="50.1493%" y="1941" width="0.4657%" height="15" fill="rgb(252,84,19)" fg:x="122528740" fg:w="1137836"/><text x="50.3993%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,137,836 samples, 0.47%)</title><rect x="50.1493%" y="1925" width="0.4657%" height="15" fill="rgb(243,152,39)" fg:x="122528740" fg:w="1137836"/><text x="50.3993%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,137,836 samples, 0.47%)</title><rect x="50.1493%" y="1909" width="0.4657%" height="15" fill="rgb(234,160,15)" fg:x="122528740" fg:w="1137836"/><text x="50.3993%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,137,836 samples, 0.47%)</title><rect x="50.1493%" y="1893" width="0.4657%" height="15" fill="rgb(237,34,20)" fg:x="122528740" fg:w="1137836"/><text x="50.3993%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,137,836 samples, 0.47%)</title><rect x="50.1493%" y="1877" width="0.4657%" height="15" fill="rgb(229,97,13)" fg:x="122528740" fg:w="1137836"/><text x="50.3993%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,137,836 samples, 0.47%)</title><rect x="50.1493%" y="1861" width="0.4657%" height="15" fill="rgb(234,71,50)" fg:x="122528740" fg:w="1137836"/><text x="50.3993%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,137,836 samples, 0.47%)</title><rect x="50.1493%" y="1845" width="0.4657%" height="15" fill="rgb(253,155,4)" fg:x="122528740" fg:w="1137836"/><text x="50.3993%" y="1855.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,137,836 samples, 0.47%)</title><rect x="50.1493%" y="1829" width="0.4657%" height="15" fill="rgb(222,185,37)" fg:x="122528740" fg:w="1137836"/><text x="50.3993%" y="1839.50"></text></g><g><title>alloc::alloc::alloc (1,137,836 samples, 0.47%)</title><rect x="50.1493%" y="1813" width="0.4657%" height="15" fill="rgb(251,177,13)" fg:x="122528740" fg:w="1137836"/><text x="50.3993%" y="1823.50"></text></g><g><title>malloc (1,137,836 samples, 0.47%)</title><rect x="50.1493%" y="1797" width="0.4657%" height="15" fill="rgb(250,179,40)" fg:x="122528740" fg:w="1137836"/><text x="50.3993%" y="1807.50"></text></g><g><title>[unknown] (1,137,836 samples, 0.47%)</title><rect x="50.1493%" y="1781" width="0.4657%" height="15" fill="rgb(242,44,2)" fg:x="122528740" fg:w="1137836"/><text x="50.3993%" y="1791.50"></text></g><g><title>[libc.so.6] (1,137,836 samples, 0.47%)</title><rect x="50.1493%" y="1765" width="0.4657%" height="15" fill="rgb(216,177,13)" fg:x="122528740" fg:w="1137836"/><text x="50.3993%" y="1775.50"></text></g><g><title>benchmark::json_to_html_node (4,664,236 samples, 1.91%)</title><rect x="49.2291%" y="1989" width="1.9090%" height="15" fill="rgb(216,106,43)" fg:x="120280388" fg:w="4664236"/><text x="49.4791%" y="1999.50">b..</text></g><g><title>css_bitvector_compiler::HtmlNode::new (2,415,884 samples, 0.99%)</title><rect x="50.1493%" y="1973" width="0.9888%" height="15" fill="rgb(216,183,2)" fg:x="122528740" fg:w="2415884"/><text x="50.3993%" y="1983.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::new (1,278,048 samples, 0.52%)</title><rect x="50.6150%" y="1957" width="0.5231%" height="15" fill="rgb(249,75,3)" fg:x="123666576" fg:w="1278048"/><text x="50.8650%" y="1967.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (1,278,048 samples, 0.52%)</title><rect x="50.6150%" y="1941" width="0.5231%" height="15" fill="rgb(219,67,39)" fg:x="123666576" fg:w="1278048"/><text x="50.8650%" y="1951.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (1,278,048 samples, 0.52%)</title><rect x="50.6150%" y="1925" width="0.5231%" height="15" fill="rgb(253,228,2)" fg:x="123666576" fg:w="1278048"/><text x="50.8650%" y="1935.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (1,278,048 samples, 0.52%)</title><rect x="50.6150%" y="1909" width="0.5231%" height="15" fill="rgb(235,138,27)" fg:x="123666576" fg:w="1278048"/><text x="50.8650%" y="1919.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::default::Default&gt;::default (1,278,048 samples, 0.52%)</title><rect x="50.6150%" y="1893" width="0.5231%" height="15" fill="rgb(236,97,51)" fg:x="123666576" fg:w="1278048"/><text x="50.8650%" y="1903.50"></text></g><g><title>std::hash::random::RandomState::new (1,278,048 samples, 0.52%)</title><rect x="50.6150%" y="1877" width="0.5231%" height="15" fill="rgb(240,80,30)" fg:x="123666576" fg:w="1278048"/><text x="50.8650%" y="1887.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,278,048 samples, 0.52%)</title><rect x="50.6150%" y="1861" width="0.5231%" height="15" fill="rgb(230,178,19)" fg:x="123666576" fg:w="1278048"/><text x="50.8650%" y="1871.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,278,048 samples, 0.52%)</title><rect x="50.6150%" y="1845" width="0.5231%" height="15" fill="rgb(210,190,27)" fg:x="123666576" fg:w="1278048"/><text x="50.8650%" y="1855.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,278,048 samples, 0.52%)</title><rect x="50.6150%" y="1829" width="0.5231%" height="15" fill="rgb(222,107,31)" fg:x="123666576" fg:w="1278048"/><text x="50.8650%" y="1839.50"></text></g><g><title>std::hash::random::RandomState::new::KEYS::_{{constant}}::_{{closure}} (1,278,048 samples, 0.52%)</title><rect x="50.6150%" y="1813" width="0.5231%" height="15" fill="rgb(216,127,34)" fg:x="123666576" fg:w="1278048"/><text x="50.8650%" y="1823.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (1,278,048 samples, 0.52%)</title><rect x="50.6150%" y="1797" width="0.5231%" height="15" fill="rgb(234,116,52)" fg:x="123666576" fg:w="1278048"/><text x="50.8650%" y="1807.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1,327,012 samples, 0.54%)</title><rect x="51.1381%" y="1845" width="0.5431%" height="15" fill="rgb(222,124,15)" fg:x="124944624" fg:w="1327012"/><text x="51.3881%" y="1855.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,327,012 samples, 0.54%)</title><rect x="51.1381%" y="1829" width="0.5431%" height="15" fill="rgb(231,179,28)" fg:x="124944624" fg:w="1327012"/><text x="51.3881%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,327,012 samples, 0.54%)</title><rect x="51.1381%" y="1813" width="0.5431%" height="15" fill="rgb(226,93,45)" fg:x="124944624" fg:w="1327012"/><text x="51.3881%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,327,012 samples, 0.54%)</title><rect x="51.1381%" y="1797" width="0.5431%" height="15" fill="rgb(215,8,51)" fg:x="124944624" fg:w="1327012"/><text x="51.3881%" y="1807.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,327,012 samples, 0.54%)</title><rect x="51.1381%" y="1781" width="0.5431%" height="15" fill="rgb(223,106,5)" fg:x="124944624" fg:w="1327012"/><text x="51.3881%" y="1791.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1,327,012 samples, 0.54%)</title><rect x="51.1381%" y="1765" width="0.5431%" height="15" fill="rgb(250,191,5)" fg:x="124944624" fg:w="1327012"/><text x="51.3881%" y="1775.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (1,327,012 samples, 0.54%)</title><rect x="51.1381%" y="1749" width="0.5431%" height="15" fill="rgb(242,132,44)" fg:x="124944624" fg:w="1327012"/><text x="51.3881%" y="1759.50"></text></g><g><title>core::str::pattern::Searcher::next_match (1,327,012 samples, 0.54%)</title><rect x="51.1381%" y="1733" width="0.5431%" height="15" fill="rgb(251,152,29)" fg:x="124944624" fg:w="1327012"/><text x="51.3881%" y="1743.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1,327,012 samples, 0.54%)</title><rect x="51.1381%" y="1717" width="0.5431%" height="15" fill="rgb(218,179,5)" fg:x="124944624" fg:w="1327012"/><text x="51.3881%" y="1727.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (1,327,012 samples, 0.54%)</title><rect x="51.1381%" y="1701" width="0.5431%" height="15" fill="rgb(227,67,19)" fg:x="124944624" fg:w="1327012"/><text x="51.3881%" y="1711.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (1,327,012 samples, 0.54%)</title><rect x="51.1381%" y="1685" width="0.5431%" height="15" fill="rgb(233,119,31)" fg:x="124944624" fg:w="1327012"/><text x="51.3881%" y="1695.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (1,327,012 samples, 0.54%)</title><rect x="51.1381%" y="1669" width="0.5431%" height="15" fill="rgb(241,120,22)" fg:x="124944624" fg:w="1327012"/><text x="51.3881%" y="1679.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (1,327,012 samples, 0.54%)</title><rect x="51.1381%" y="1653" width="0.5431%" height="15" fill="rgb(224,102,30)" fg:x="124944624" fg:w="1327012"/><text x="51.3881%" y="1663.50"></text></g><g><title>benchmark::json_to_html_node (7,206,720 samples, 2.95%)</title><rect x="49.2291%" y="2005" width="2.9496%" height="15" fill="rgb(210,164,37)" fg:x="120280388" fg:w="7206720"/><text x="49.4791%" y="2015.50">be..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,542,484 samples, 1.04%)</title><rect x="51.1381%" y="1989" width="1.0406%" height="15" fill="rgb(226,191,16)" fg:x="124944624" fg:w="2542484"/><text x="51.3881%" y="1999.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,542,484 samples, 1.04%)</title><rect x="51.1381%" y="1973" width="1.0406%" height="15" fill="rgb(214,40,45)" fg:x="124944624" fg:w="2542484"/><text x="51.3881%" y="1983.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,542,484 samples, 1.04%)</title><rect x="51.1381%" y="1957" width="1.0406%" height="15" fill="rgb(244,29,26)" fg:x="124944624" fg:w="2542484"/><text x="51.3881%" y="1967.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,542,484 samples, 1.04%)</title><rect x="51.1381%" y="1941" width="1.0406%" height="15" fill="rgb(216,16,5)" fg:x="124944624" fg:w="2542484"/><text x="51.3881%" y="1951.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2,542,484 samples, 1.04%)</title><rect x="51.1381%" y="1925" width="1.0406%" height="15" fill="rgb(249,76,35)" fg:x="124944624" fg:w="2542484"/><text x="51.3881%" y="1935.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,542,484 samples, 1.04%)</title><rect x="51.1381%" y="1909" width="1.0406%" height="15" fill="rgb(207,11,44)" fg:x="124944624" fg:w="2542484"/><text x="51.3881%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,542,484 samples, 1.04%)</title><rect x="51.1381%" y="1893" width="1.0406%" height="15" fill="rgb(228,190,49)" fg:x="124944624" fg:w="2542484"/><text x="51.3881%" y="1903.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,542,484 samples, 1.04%)</title><rect x="51.1381%" y="1877" width="1.0406%" height="15" fill="rgb(214,173,12)" fg:x="124944624" fg:w="2542484"/><text x="51.3881%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,542,484 samples, 1.04%)</title><rect x="51.1381%" y="1861" width="1.0406%" height="15" fill="rgb(218,26,35)" fg:x="124944624" fg:w="2542484"/><text x="51.3881%" y="1871.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,215,472 samples, 0.50%)</title><rect x="51.6812%" y="1845" width="0.4975%" height="15" fill="rgb(220,200,19)" fg:x="126271636" fg:w="1215472"/><text x="51.9312%" y="1855.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,215,472 samples, 0.50%)</title><rect x="51.6812%" y="1829" width="0.4975%" height="15" fill="rgb(239,95,49)" fg:x="126271636" fg:w="1215472"/><text x="51.9312%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,215,472 samples, 0.50%)</title><rect x="51.6812%" y="1813" width="0.4975%" height="15" fill="rgb(235,85,53)" fg:x="126271636" fg:w="1215472"/><text x="51.9312%" y="1823.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1,215,472 samples, 0.50%)</title><rect x="51.6812%" y="1797" width="0.4975%" height="15" fill="rgb(233,133,31)" fg:x="126271636" fg:w="1215472"/><text x="51.9312%" y="1807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,215,472 samples, 0.50%)</title><rect x="51.6812%" y="1781" width="0.4975%" height="15" fill="rgb(218,25,20)" fg:x="126271636" fg:w="1215472"/><text x="51.9312%" y="1791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (1,215,472 samples, 0.50%)</title><rect x="51.6812%" y="1765" width="0.4975%" height="15" fill="rgb(252,210,38)" fg:x="126271636" fg:w="1215472"/><text x="51.9312%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,215,472 samples, 0.50%)</title><rect x="51.6812%" y="1749" width="0.4975%" height="15" fill="rgb(242,134,21)" fg:x="126271636" fg:w="1215472"/><text x="51.9312%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1,215,472 samples, 0.50%)</title><rect x="51.6812%" y="1733" width="0.4975%" height="15" fill="rgb(213,28,48)" fg:x="126271636" fg:w="1215472"/><text x="51.9312%" y="1743.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (1,215,472 samples, 0.50%)</title><rect x="51.6812%" y="1717" width="0.4975%" height="15" fill="rgb(250,196,2)" fg:x="126271636" fg:w="1215472"/><text x="51.9312%" y="1727.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,215,472 samples, 0.50%)</title><rect x="51.6812%" y="1701" width="0.4975%" height="15" fill="rgb(227,5,17)" fg:x="126271636" fg:w="1215472"/><text x="51.9312%" y="1711.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,215,472 samples, 0.50%)</title><rect x="51.6812%" y="1685" width="0.4975%" height="15" fill="rgb(221,226,24)" fg:x="126271636" fg:w="1215472"/><text x="51.9312%" y="1695.50"></text></g><g><title>benchmark::json_to_html_node (8,243,368 samples, 3.37%)</title><rect x="49.2291%" y="2053" width="3.3739%" height="15" fill="rgb(211,5,48)" fg:x="120280388" fg:w="8243368"/><text x="49.4791%" y="2063.50">ben..</text></g><g><title>benchmark::json_to_html_node (8,243,368 samples, 3.37%)</title><rect x="49.2291%" y="2037" width="3.3739%" height="15" fill="rgb(219,150,6)" fg:x="120280388" fg:w="8243368"/><text x="49.4791%" y="2047.50">ben..</text></g><g><title>benchmark::json_to_html_node (8,243,368 samples, 3.37%)</title><rect x="49.2291%" y="2021" width="3.3739%" height="15" fill="rgb(251,46,16)" fg:x="120280388" fg:w="8243368"/><text x="49.4791%" y="2031.50">ben..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,036,648 samples, 0.42%)</title><rect x="52.1787%" y="2005" width="0.4243%" height="15" fill="rgb(220,204,40)" fg:x="127487108" fg:w="1036648"/><text x="52.4287%" y="2015.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,036,648 samples, 0.42%)</title><rect x="52.1787%" y="1989" width="0.4243%" height="15" fill="rgb(211,85,2)" fg:x="127487108" fg:w="1036648"/><text x="52.4287%" y="1999.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,036,648 samples, 0.42%)</title><rect x="52.1787%" y="1973" width="0.4243%" height="15" fill="rgb(229,17,7)" fg:x="127487108" fg:w="1036648"/><text x="52.4287%" y="1983.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,036,648 samples, 0.42%)</title><rect x="52.1787%" y="1957" width="0.4243%" height="15" fill="rgb(239,72,28)" fg:x="127487108" fg:w="1036648"/><text x="52.4287%" y="1967.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,036,648 samples, 0.42%)</title><rect x="52.1787%" y="1941" width="0.4243%" height="15" fill="rgb(230,47,54)" fg:x="127487108" fg:w="1036648"/><text x="52.4287%" y="1951.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,036,648 samples, 0.42%)</title><rect x="52.1787%" y="1925" width="0.4243%" height="15" fill="rgb(214,50,8)" fg:x="127487108" fg:w="1036648"/><text x="52.4287%" y="1935.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,036,648 samples, 0.42%)</title><rect x="52.1787%" y="1909" width="0.4243%" height="15" fill="rgb(216,198,43)" fg:x="127487108" fg:w="1036648"/><text x="52.4287%" y="1919.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,036,648 samples, 0.42%)</title><rect x="52.1787%" y="1893" width="0.4243%" height="15" fill="rgb(234,20,35)" fg:x="127487108" fg:w="1036648"/><text x="52.4287%" y="1903.50"></text></g><g><title>[libc.so.6] (1,036,648 samples, 0.42%)</title><rect x="52.1787%" y="1877" width="0.4243%" height="15" fill="rgb(254,45,19)" fg:x="127487108" fg:w="1036648"/><text x="52.4287%" y="1887.50"></text></g><g><title>benchmark::json_to_html_node (9,470,008 samples, 3.88%)</title><rect x="49.2291%" y="2069" width="3.8759%" height="15" fill="rgb(219,14,44)" fg:x="120280388" fg:w="9470008"/><text x="49.4791%" y="2079.50">benc..</text></g><g><title>css_bitvector_compiler::HtmlNode::new (1,226,640 samples, 0.50%)</title><rect x="52.6030%" y="2053" width="0.5020%" height="15" fill="rgb(217,220,26)" fg:x="128523756" fg:w="1226640"/><text x="52.8530%" y="2063.50"></text></g><g><title>css_bitvector_compiler::BitVector::new (1,226,640 samples, 0.50%)</title><rect x="52.6030%" y="2037" width="0.5020%" height="15" fill="rgb(213,158,28)" fg:x="128523756" fg:w="1226640"/><text x="52.8530%" y="2047.50"></text></g><g><title>alloc::vec::from_elem (1,226,640 samples, 0.50%)</title><rect x="52.6030%" y="2021" width="0.5020%" height="15" fill="rgb(252,51,52)" fg:x="128523756" fg:w="1226640"/><text x="52.8530%" y="2031.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,226,640 samples, 0.50%)</title><rect x="52.6030%" y="2005" width="0.5020%" height="15" fill="rgb(246,89,16)" fg:x="128523756" fg:w="1226640"/><text x="52.8530%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,226,640 samples, 0.50%)</title><rect x="52.6030%" y="1989" width="0.5020%" height="15" fill="rgb(216,158,49)" fg:x="128523756" fg:w="1226640"/><text x="52.8530%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,226,640 samples, 0.50%)</title><rect x="52.6030%" y="1973" width="0.5020%" height="15" fill="rgb(236,107,19)" fg:x="128523756" fg:w="1226640"/><text x="52.8530%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,226,640 samples, 0.50%)</title><rect x="52.6030%" y="1957" width="0.5020%" height="15" fill="rgb(228,185,30)" fg:x="128523756" fg:w="1226640"/><text x="52.8530%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,226,640 samples, 0.50%)</title><rect x="52.6030%" y="1941" width="0.5020%" height="15" fill="rgb(246,134,8)" fg:x="128523756" fg:w="1226640"/><text x="52.8530%" y="1951.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,226,640 samples, 0.50%)</title><rect x="52.6030%" y="1925" width="0.5020%" height="15" fill="rgb(214,143,50)" fg:x="128523756" fg:w="1226640"/><text x="52.8530%" y="1935.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,226,640 samples, 0.50%)</title><rect x="52.6030%" y="1909" width="0.5020%" height="15" fill="rgb(228,75,8)" fg:x="128523756" fg:w="1226640"/><text x="52.8530%" y="1919.50"></text></g><g><title>__libc_calloc (1,226,640 samples, 0.50%)</title><rect x="52.6030%" y="1893" width="0.5020%" height="15" fill="rgb(207,175,4)" fg:x="128523756" fg:w="1226640"/><text x="52.8530%" y="1903.50"></text></g><g><title>[libc.so.6] (1,226,640 samples, 0.50%)</title><rect x="52.6030%" y="1877" width="0.5020%" height="15" fill="rgb(205,108,24)" fg:x="128523756" fg:w="1226640"/><text x="52.8530%" y="1887.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1,264,275 samples, 0.52%)</title><rect x="53.1050%" y="1925" width="0.5175%" height="15" fill="rgb(244,120,49)" fg:x="129750396" fg:w="1264275"/><text x="53.3550%" y="1935.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,264,275 samples, 0.52%)</title><rect x="53.1050%" y="1909" width="0.5175%" height="15" fill="rgb(223,47,38)" fg:x="129750396" fg:w="1264275"/><text x="53.3550%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,264,275 samples, 0.52%)</title><rect x="53.1050%" y="1893" width="0.5175%" height="15" fill="rgb(229,179,11)" fg:x="129750396" fg:w="1264275"/><text x="53.3550%" y="1903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,264,275 samples, 0.52%)</title><rect x="53.1050%" y="1877" width="0.5175%" height="15" fill="rgb(231,122,1)" fg:x="129750396" fg:w="1264275"/><text x="53.3550%" y="1887.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,264,275 samples, 0.52%)</title><rect x="53.1050%" y="1861" width="0.5175%" height="15" fill="rgb(245,119,9)" fg:x="129750396" fg:w="1264275"/><text x="53.3550%" y="1871.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1,264,275 samples, 0.52%)</title><rect x="53.1050%" y="1845" width="0.5175%" height="15" fill="rgb(241,163,25)" fg:x="129750396" fg:w="1264275"/><text x="53.3550%" y="1855.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (1,264,275 samples, 0.52%)</title><rect x="53.1050%" y="1829" width="0.5175%" height="15" fill="rgb(217,214,3)" fg:x="129750396" fg:w="1264275"/><text x="53.3550%" y="1839.50"></text></g><g><title>core::str::pattern::Searcher::next_match (1,264,275 samples, 0.52%)</title><rect x="53.1050%" y="1813" width="0.5175%" height="15" fill="rgb(240,86,28)" fg:x="129750396" fg:w="1264275"/><text x="53.3550%" y="1823.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1,264,275 samples, 0.52%)</title><rect x="53.1050%" y="1797" width="0.5175%" height="15" fill="rgb(215,47,9)" fg:x="129750396" fg:w="1264275"/><text x="53.3550%" y="1807.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (1,264,275 samples, 0.52%)</title><rect x="53.1050%" y="1781" width="0.5175%" height="15" fill="rgb(252,25,45)" fg:x="129750396" fg:w="1264275"/><text x="53.3550%" y="1791.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (1,264,275 samples, 0.52%)</title><rect x="53.1050%" y="1765" width="0.5175%" height="15" fill="rgb(251,164,9)" fg:x="129750396" fg:w="1264275"/><text x="53.3550%" y="1775.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (1,264,275 samples, 0.52%)</title><rect x="53.1050%" y="1749" width="0.5175%" height="15" fill="rgb(233,194,0)" fg:x="129750396" fg:w="1264275"/><text x="53.3550%" y="1759.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (1,264,275 samples, 0.52%)</title><rect x="53.1050%" y="1733" width="0.5175%" height="15" fill="rgb(249,111,24)" fg:x="129750396" fg:w="1264275"/><text x="53.3550%" y="1743.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (1,330,367 samples, 0.54%)</title><rect x="53.6225%" y="1845" width="0.5445%" height="15" fill="rgb(250,223,3)" fg:x="131014671" fg:w="1330367"/><text x="53.8725%" y="1855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,330,367 samples, 0.54%)</title><rect x="53.6225%" y="1829" width="0.5445%" height="15" fill="rgb(236,178,37)" fg:x="131014671" fg:w="1330367"/><text x="53.8725%" y="1839.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,330,367 samples, 0.54%)</title><rect x="53.6225%" y="1813" width="0.5445%" height="15" fill="rgb(241,158,50)" fg:x="131014671" fg:w="1330367"/><text x="53.8725%" y="1823.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,330,367 samples, 0.54%)</title><rect x="53.6225%" y="1797" width="0.5445%" height="15" fill="rgb(213,121,41)" fg:x="131014671" fg:w="1330367"/><text x="53.8725%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1,330,367 samples, 0.54%)</title><rect x="53.6225%" y="1781" width="0.5445%" height="15" fill="rgb(240,92,3)" fg:x="131014671" fg:w="1330367"/><text x="53.8725%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1,330,367 samples, 0.54%)</title><rect x="53.6225%" y="1765" width="0.5445%" height="15" fill="rgb(205,123,3)" fg:x="131014671" fg:w="1330367"/><text x="53.8725%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1,330,367 samples, 0.54%)</title><rect x="53.6225%" y="1749" width="0.5445%" height="15" fill="rgb(205,97,47)" fg:x="131014671" fg:w="1330367"/><text x="53.8725%" y="1759.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1,330,367 samples, 0.54%)</title><rect x="53.6225%" y="1733" width="0.5445%" height="15" fill="rgb(247,152,14)" fg:x="131014671" fg:w="1330367"/><text x="53.8725%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,330,367 samples, 0.54%)</title><rect x="53.6225%" y="1717" width="0.5445%" height="15" fill="rgb(248,195,53)" fg:x="131014671" fg:w="1330367"/><text x="53.8725%" y="1727.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,330,367 samples, 0.54%)</title><rect x="53.6225%" y="1701" width="0.5445%" height="15" fill="rgb(226,201,16)" fg:x="131014671" fg:w="1330367"/><text x="53.8725%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,330,367 samples, 0.54%)</title><rect x="53.6225%" y="1685" width="0.5445%" height="15" fill="rgb(205,98,0)" fg:x="131014671" fg:w="1330367"/><text x="53.8725%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,330,367 samples, 0.54%)</title><rect x="53.6225%" y="1669" width="0.5445%" height="15" fill="rgb(214,191,48)" fg:x="131014671" fg:w="1330367"/><text x="53.8725%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (1,330,367 samples, 0.54%)</title><rect x="53.6225%" y="1653" width="0.5445%" height="15" fill="rgb(237,112,39)" fg:x="131014671" fg:w="1330367"/><text x="53.8725%" y="1663.50"></text></g><g><title>malloc (1,330,367 samples, 0.54%)</title><rect x="53.6225%" y="1637" width="0.5445%" height="15" fill="rgb(247,203,27)" fg:x="131014671" fg:w="1330367"/><text x="53.8725%" y="1647.50"></text></g><g><title>[libc.so.6] (1,330,367 samples, 0.54%)</title><rect x="53.6225%" y="1621" width="0.5445%" height="15" fill="rgb(235,124,28)" fg:x="131014671" fg:w="1330367"/><text x="53.8725%" y="1631.50"></text></g><g><title>benchmark::json_to_html_node (14,360,201 samples, 5.88%)</title><rect x="48.8209%" y="2085" width="5.8774%" height="15" fill="rgb(208,207,46)" fg:x="119283198" fg:w="14360201"/><text x="49.0709%" y="2095.50">benchma..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,893,003 samples, 1.59%)</title><rect x="53.1050%" y="2069" width="1.5934%" height="15" fill="rgb(234,176,4)" fg:x="129750396" fg:w="3893003"/><text x="53.3550%" y="2079.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,893,003 samples, 1.59%)</title><rect x="53.1050%" y="2053" width="1.5934%" height="15" fill="rgb(230,133,28)" fg:x="129750396" fg:w="3893003"/><text x="53.3550%" y="2063.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,893,003 samples, 1.59%)</title><rect x="53.1050%" y="2037" width="1.5934%" height="15" fill="rgb(211,137,40)" fg:x="129750396" fg:w="3893003"/><text x="53.3550%" y="2047.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,893,003 samples, 1.59%)</title><rect x="53.1050%" y="2021" width="1.5934%" height="15" fill="rgb(254,35,13)" fg:x="129750396" fg:w="3893003"/><text x="53.3550%" y="2031.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3,893,003 samples, 1.59%)</title><rect x="53.1050%" y="2005" width="1.5934%" height="15" fill="rgb(225,49,51)" fg:x="129750396" fg:w="3893003"/><text x="53.3550%" y="2015.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,893,003 samples, 1.59%)</title><rect x="53.1050%" y="1989" width="1.5934%" height="15" fill="rgb(251,10,15)" fg:x="129750396" fg:w="3893003"/><text x="53.3550%" y="1999.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,893,003 samples, 1.59%)</title><rect x="53.1050%" y="1973" width="1.5934%" height="15" fill="rgb(228,207,15)" fg:x="129750396" fg:w="3893003"/><text x="53.3550%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,893,003 samples, 1.59%)</title><rect x="53.1050%" y="1957" width="1.5934%" height="15" fill="rgb(241,99,19)" fg:x="129750396" fg:w="3893003"/><text x="53.3550%" y="1967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,893,003 samples, 1.59%)</title><rect x="53.1050%" y="1941" width="1.5934%" height="15" fill="rgb(207,104,49)" fg:x="129750396" fg:w="3893003"/><text x="53.3550%" y="1951.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,628,728 samples, 1.08%)</title><rect x="53.6225%" y="1925" width="1.0759%" height="15" fill="rgb(234,99,18)" fg:x="131014671" fg:w="2628728"/><text x="53.8725%" y="1935.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,628,728 samples, 1.08%)</title><rect x="53.6225%" y="1909" width="1.0759%" height="15" fill="rgb(213,191,49)" fg:x="131014671" fg:w="2628728"/><text x="53.8725%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2,628,728 samples, 1.08%)</title><rect x="53.6225%" y="1893" width="1.0759%" height="15" fill="rgb(210,226,19)" fg:x="131014671" fg:w="2628728"/><text x="53.8725%" y="1903.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (2,628,728 samples, 1.08%)</title><rect x="53.6225%" y="1877" width="1.0759%" height="15" fill="rgb(229,97,18)" fg:x="131014671" fg:w="2628728"/><text x="53.8725%" y="1887.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,628,728 samples, 1.08%)</title><rect x="53.6225%" y="1861" width="1.0759%" height="15" fill="rgb(211,167,15)" fg:x="131014671" fg:w="2628728"/><text x="53.8725%" y="1871.50"></text></g><g><title>hashbrown::map::make_hash (1,298,361 samples, 0.53%)</title><rect x="54.1670%" y="1845" width="0.5314%" height="15" fill="rgb(210,169,34)" fg:x="132345038" fg:w="1298361"/><text x="54.4170%" y="1855.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,298,361 samples, 0.53%)</title><rect x="54.1670%" y="1829" width="0.5314%" height="15" fill="rgb(241,121,31)" fg:x="132345038" fg:w="1298361"/><text x="54.4170%" y="1839.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,298,361 samples, 0.53%)</title><rect x="54.1670%" y="1813" width="0.5314%" height="15" fill="rgb(232,40,11)" fg:x="132345038" fg:w="1298361"/><text x="54.4170%" y="1823.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,298,361 samples, 0.53%)</title><rect x="54.1670%" y="1797" width="0.5314%" height="15" fill="rgb(205,86,26)" fg:x="132345038" fg:w="1298361"/><text x="54.4170%" y="1807.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,298,361 samples, 0.53%)</title><rect x="54.1670%" y="1781" width="0.5314%" height="15" fill="rgb(231,126,28)" fg:x="132345038" fg:w="1298361"/><text x="54.4170%" y="1791.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::remove_child (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="2085" width="0.5152%" height="15" fill="rgb(219,221,18)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="2069" width="0.5152%" height="15" fill="rgb(211,40,0)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="2053" width="0.5152%" height="15" fill="rgb(239,85,43)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="2063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="2037" width="0.5152%" height="15" fill="rgb(231,55,21)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="2021" width="0.5152%" height="15" fill="rgb(225,184,43)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="2005" width="0.5152%" height="15" fill="rgb(251,158,41)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1989" width="0.5152%" height="15" fill="rgb(234,159,37)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1973" width="0.5152%" height="15" fill="rgb(216,204,22)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1957" width="0.5152%" height="15" fill="rgb(214,17,3)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1941" width="0.5152%" height="15" fill="rgb(212,111,17)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1925" width="0.5152%" height="15" fill="rgb(221,157,24)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1909" width="0.5152%" height="15" fill="rgb(252,16,13)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1893" width="0.5152%" height="15" fill="rgb(221,62,2)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1877" width="0.5152%" height="15" fill="rgb(247,87,22)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1861" width="0.5152%" height="15" fill="rgb(215,73,9)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1845" width="0.5152%" height="15" fill="rgb(207,175,33)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1829" width="0.5152%" height="15" fill="rgb(243,129,54)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1813" width="0.5152%" height="15" fill="rgb(227,119,45)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1797" width="0.5152%" height="15" fill="rgb(205,109,36)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1781" width="0.5152%" height="15" fill="rgb(205,6,39)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1765" width="0.5152%" height="15" fill="rgb(221,32,16)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1749" width="0.5152%" height="15" fill="rgb(228,144,50)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1733" width="0.5152%" height="15" fill="rgb(229,201,53)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1717" width="0.5152%" height="15" fill="rgb(249,153,27)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1701" width="0.5152%" height="15" fill="rgb(227,106,25)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1685" width="0.5152%" height="15" fill="rgb(230,65,29)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1669" width="0.5152%" height="15" fill="rgb(221,57,46)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1653" width="0.5152%" height="15" fill="rgb(229,161,17)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1637" width="0.5152%" height="15" fill="rgb(222,213,11)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1621" width="0.5152%" height="15" fill="rgb(235,35,13)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1631.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1605" width="0.5152%" height="15" fill="rgb(233,158,34)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1589" width="0.5152%" height="15" fill="rgb(215,151,48)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,258,790 samples, 0.52%)</title><rect x="54.6984%" y="1573" width="0.5152%" height="15" fill="rgb(229,84,14)" fg:x="133643399" fg:w="1258790"/><text x="54.9484%" y="1583.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (1,283,470 samples, 0.53%)</title><rect x="55.2136%" y="2037" width="0.5253%" height="15" fill="rgb(229,68,14)" fg:x="134902189" fg:w="1283470"/><text x="55.4636%" y="2047.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,283,470 samples, 0.53%)</title><rect x="55.2136%" y="2021" width="0.5253%" height="15" fill="rgb(243,106,26)" fg:x="134902189" fg:w="1283470"/><text x="55.4636%" y="2031.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,283,470 samples, 0.53%)</title><rect x="55.2136%" y="2005" width="0.5253%" height="15" fill="rgb(206,45,38)" fg:x="134902189" fg:w="1283470"/><text x="55.4636%" y="2015.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,283,470 samples, 0.53%)</title><rect x="55.2136%" y="1989" width="0.5253%" height="15" fill="rgb(226,6,15)" fg:x="134902189" fg:w="1283470"/><text x="55.4636%" y="1999.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1,283,470 samples, 0.53%)</title><rect x="55.2136%" y="1973" width="0.5253%" height="15" fill="rgb(232,22,54)" fg:x="134902189" fg:w="1283470"/><text x="55.4636%" y="1983.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1,283,470 samples, 0.53%)</title><rect x="55.2136%" y="1957" width="0.5253%" height="15" fill="rgb(229,222,32)" fg:x="134902189" fg:w="1283470"/><text x="55.4636%" y="1967.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1,283,470 samples, 0.53%)</title><rect x="55.2136%" y="1941" width="0.5253%" height="15" fill="rgb(228,62,29)" fg:x="134902189" fg:w="1283470"/><text x="55.4636%" y="1951.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1,283,470 samples, 0.53%)</title><rect x="55.2136%" y="1925" width="0.5253%" height="15" fill="rgb(251,103,34)" fg:x="134902189" fg:w="1283470"/><text x="55.4636%" y="1935.50"></text></g><g><title>hashbrown::map::make_hash (1,283,470 samples, 0.53%)</title><rect x="55.2136%" y="1909" width="0.5253%" height="15" fill="rgb(233,12,30)" fg:x="134902189" fg:w="1283470"/><text x="55.4636%" y="1919.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,283,470 samples, 0.53%)</title><rect x="55.2136%" y="1893" width="0.5253%" height="15" fill="rgb(238,52,0)" fg:x="134902189" fg:w="1283470"/><text x="55.4636%" y="1903.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,283,470 samples, 0.53%)</title><rect x="55.2136%" y="1877" width="0.5253%" height="15" fill="rgb(223,98,5)" fg:x="134902189" fg:w="1283470"/><text x="55.4636%" y="1887.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,283,470 samples, 0.53%)</title><rect x="55.2136%" y="1861" width="0.5253%" height="15" fill="rgb(228,75,37)" fg:x="134902189" fg:w="1283470"/><text x="55.4636%" y="1871.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,283,470 samples, 0.53%)</title><rect x="55.2136%" y="1845" width="0.5253%" height="15" fill="rgb(205,115,49)" fg:x="134902189" fg:w="1283470"/><text x="55.4636%" y="1855.50"></text></g><g><title>benchmark::apply_frame_modifications (19,500,178 samples, 7.98%)</title><rect x="48.2829%" y="2101" width="7.9811%" height="15" fill="rgb(250,154,43)" fg:x="117968639" fg:w="19500178"/><text x="48.5329%" y="2111.50">benchmark::..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2,566,628 samples, 1.05%)</title><rect x="55.2136%" y="2085" width="1.0505%" height="15" fill="rgb(226,43,29)" fg:x="134902189" fg:w="2566628"/><text x="55.4636%" y="2095.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2,566,628 samples, 1.05%)</title><rect x="55.2136%" y="2069" width="1.0505%" height="15" fill="rgb(249,228,39)" fg:x="134902189" fg:w="2566628"/><text x="55.4636%" y="2079.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,566,628 samples, 1.05%)</title><rect x="55.2136%" y="2053" width="1.0505%" height="15" fill="rgb(216,79,43)" fg:x="134902189" fg:w="2566628"/><text x="55.4636%" y="2063.50"></text></g><g><title>hashbrown::map::make_hash (1,283,158 samples, 0.53%)</title><rect x="55.7389%" y="2037" width="0.5252%" height="15" fill="rgb(228,95,12)" fg:x="136185659" fg:w="1283158"/><text x="55.9889%" y="2047.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,283,158 samples, 0.53%)</title><rect x="55.7389%" y="2021" width="0.5252%" height="15" fill="rgb(249,221,15)" fg:x="136185659" fg:w="1283158"/><text x="55.9889%" y="2031.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,283,158 samples, 0.53%)</title><rect x="55.7389%" y="2005" width="0.5252%" height="15" fill="rgb(233,34,13)" fg:x="136185659" fg:w="1283158"/><text x="55.9889%" y="2015.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1,283,158 samples, 0.53%)</title><rect x="55.7389%" y="1989" width="0.5252%" height="15" fill="rgb(214,103,39)" fg:x="136185659" fg:w="1283158"/><text x="55.9889%" y="1999.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,283,158 samples, 0.53%)</title><rect x="55.7389%" y="1973" width="0.5252%" height="15" fill="rgb(251,126,39)" fg:x="136185659" fg:w="1283158"/><text x="55.9889%" y="1983.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,283,158 samples, 0.53%)</title><rect x="55.7389%" y="1957" width="0.5252%" height="15" fill="rgb(214,216,36)" fg:x="136185659" fg:w="1283158"/><text x="55.9889%" y="1967.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,283,158 samples, 0.53%)</title><rect x="55.7389%" y="1941" width="0.5252%" height="15" fill="rgb(220,221,8)" fg:x="136185659" fg:w="1283158"/><text x="55.9889%" y="1951.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,283,158 samples, 0.53%)</title><rect x="55.7389%" y="1925" width="0.5252%" height="15" fill="rgb(240,216,3)" fg:x="136185659" fg:w="1283158"/><text x="55.9889%" y="1935.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,283,158 samples, 0.53%)</title><rect x="55.7389%" y="1909" width="0.5252%" height="15" fill="rgb(232,218,17)" fg:x="136185659" fg:w="1283158"/><text x="55.9889%" y="1919.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,283,158 samples, 0.53%)</title><rect x="55.7389%" y="1893" width="0.5252%" height="15" fill="rgb(229,163,45)" fg:x="136185659" fg:w="1283158"/><text x="55.9889%" y="1903.50"></text></g><g><title>core::hash::sip::u8to64_le (1,283,158 samples, 0.53%)</title><rect x="55.7389%" y="1877" width="0.5252%" height="15" fill="rgb(231,110,42)" fg:x="136185659" fg:w="1283158"/><text x="55.9889%" y="1887.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,275,888 samples, 0.52%)</title><rect x="56.2641%" y="1973" width="0.5222%" height="15" fill="rgb(208,170,48)" fg:x="137468817" fg:w="1275888"/><text x="56.5141%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,275,888 samples, 0.52%)</title><rect x="56.2641%" y="1957" width="0.5222%" height="15" fill="rgb(239,116,25)" fg:x="137468817" fg:w="1275888"/><text x="56.5141%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,275,888 samples, 0.52%)</title><rect x="56.2641%" y="1941" width="0.5222%" height="15" fill="rgb(219,200,50)" fg:x="137468817" fg:w="1275888"/><text x="56.5141%" y="1951.50"></text></g><g><title>benchmark::clear_dirty_flags (2,541,723 samples, 1.04%)</title><rect x="56.2641%" y="2101" width="1.0403%" height="15" fill="rgb(245,200,0)" fg:x="137468817" fg:w="2541723"/><text x="56.5141%" y="2111.50"></text></g><g><title>benchmark::clear_dirty_flags (2,541,723 samples, 1.04%)</title><rect x="56.2641%" y="2085" width="1.0403%" height="15" fill="rgb(245,119,33)" fg:x="137468817" fg:w="2541723"/><text x="56.5141%" y="2095.50"></text></g><g><title>benchmark::clear_dirty_flags (2,541,723 samples, 1.04%)</title><rect x="56.2641%" y="2069" width="1.0403%" height="15" fill="rgb(231,125,12)" fg:x="137468817" fg:w="2541723"/><text x="56.5141%" y="2079.50"></text></g><g><title>benchmark::clear_dirty_flags (2,541,723 samples, 1.04%)</title><rect x="56.2641%" y="2053" width="1.0403%" height="15" fill="rgb(216,96,41)" fg:x="137468817" fg:w="2541723"/><text x="56.5141%" y="2063.50"></text></g><g><title>benchmark::clear_dirty_flags (2,541,723 samples, 1.04%)</title><rect x="56.2641%" y="2037" width="1.0403%" height="15" fill="rgb(248,43,45)" fg:x="137468817" fg:w="2541723"/><text x="56.5141%" y="2047.50"></text></g><g><title>benchmark::clear_dirty_flags (2,541,723 samples, 1.04%)</title><rect x="56.2641%" y="2021" width="1.0403%" height="15" fill="rgb(217,222,7)" fg:x="137468817" fg:w="2541723"/><text x="56.5141%" y="2031.50"></text></g><g><title>benchmark::clear_dirty_flags (2,541,723 samples, 1.04%)</title><rect x="56.2641%" y="2005" width="1.0403%" height="15" fill="rgb(233,28,6)" fg:x="137468817" fg:w="2541723"/><text x="56.5141%" y="2015.50"></text></g><g><title>benchmark::clear_dirty_flags (2,541,723 samples, 1.04%)</title><rect x="56.2641%" y="1989" width="1.0403%" height="15" fill="rgb(231,218,15)" fg:x="137468817" fg:w="2541723"/><text x="56.5141%" y="1999.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,265,835 samples, 0.52%)</title><rect x="56.7863%" y="1973" width="0.5181%" height="15" fill="rgb(226,171,48)" fg:x="138744705" fg:w="1265835"/><text x="57.0363%" y="1983.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,265,835 samples, 0.52%)</title><rect x="56.7863%" y="1957" width="0.5181%" height="15" fill="rgb(235,201,9)" fg:x="138744705" fg:w="1265835"/><text x="57.0363%" y="1967.50"></text></g><g><title>__rust_dealloc (1,334,421 samples, 0.55%)</title><rect x="57.3044%" y="1717" width="0.5462%" height="15" fill="rgb(217,80,15)" fg:x="140010540" fg:w="1334421"/><text x="57.5544%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,637,403 samples, 1.08%)</title><rect x="57.3044%" y="1829" width="1.0795%" height="15" fill="rgb(219,152,8)" fg:x="140010540" fg:w="2637403"/><text x="57.5544%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,637,403 samples, 1.08%)</title><rect x="57.3044%" y="1813" width="1.0795%" height="15" fill="rgb(243,107,38)" fg:x="140010540" fg:w="2637403"/><text x="57.5544%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,637,403 samples, 1.08%)</title><rect x="57.3044%" y="1797" width="1.0795%" height="15" fill="rgb(231,17,5)" fg:x="140010540" fg:w="2637403"/><text x="57.5544%" y="1807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,637,403 samples, 1.08%)</title><rect x="57.3044%" y="1781" width="1.0795%" height="15" fill="rgb(209,25,54)" fg:x="140010540" fg:w="2637403"/><text x="57.5544%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,637,403 samples, 1.08%)</title><rect x="57.3044%" y="1765" width="1.0795%" height="15" fill="rgb(219,0,2)" fg:x="140010540" fg:w="2637403"/><text x="57.5544%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,637,403 samples, 1.08%)</title><rect x="57.3044%" y="1749" width="1.0795%" height="15" fill="rgb(246,9,5)" fg:x="140010540" fg:w="2637403"/><text x="57.5544%" y="1759.50"></text></g><g><title>alloc::alloc::dealloc (2,637,403 samples, 1.08%)</title><rect x="57.3044%" y="1733" width="1.0795%" height="15" fill="rgb(226,159,4)" fg:x="140010540" fg:w="2637403"/><text x="57.5544%" y="1743.50"></text></g><g><title>cfree (1,302,982 samples, 0.53%)</title><rect x="57.8505%" y="1717" width="0.5333%" height="15" fill="rgb(219,175,34)" fg:x="141344961" fg:w="1302982"/><text x="58.1005%" y="1727.50"></text></g><g><title>[libc.so.6] (1,302,982 samples, 0.53%)</title><rect x="57.8505%" y="1701" width="0.5333%" height="15" fill="rgb(236,10,46)" fg:x="141344961" fg:w="1302982"/><text x="58.1005%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,291,591 samples, 0.53%)</title><rect x="58.3838%" y="1637" width="0.5286%" height="15" fill="rgb(240,211,16)" fg:x="142647943" fg:w="1291591"/><text x="58.6338%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,291,591 samples, 0.53%)</title><rect x="58.3838%" y="1621" width="0.5286%" height="15" fill="rgb(205,3,43)" fg:x="142647943" fg:w="1291591"/><text x="58.6338%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,291,591 samples, 0.53%)</title><rect x="58.3838%" y="1605" width="0.5286%" height="15" fill="rgb(245,7,22)" fg:x="142647943" fg:w="1291591"/><text x="58.6338%" y="1615.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,291,591 samples, 0.53%)</title><rect x="58.3838%" y="1589" width="0.5286%" height="15" fill="rgb(239,132,32)" fg:x="142647943" fg:w="1291591"/><text x="58.6338%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,291,591 samples, 0.53%)</title><rect x="58.3838%" y="1573" width="0.5286%" height="15" fill="rgb(228,202,34)" fg:x="142647943" fg:w="1291591"/><text x="58.6338%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,291,591 samples, 0.53%)</title><rect x="58.3838%" y="1557" width="0.5286%" height="15" fill="rgb(254,200,22)" fg:x="142647943" fg:w="1291591"/><text x="58.6338%" y="1567.50"></text></g><g><title>alloc::alloc::dealloc (1,291,591 samples, 0.53%)</title><rect x="58.3838%" y="1541" width="0.5286%" height="15" fill="rgb(219,10,39)" fg:x="142647943" fg:w="1291591"/><text x="58.6338%" y="1551.50"></text></g><g><title>cfree (1,291,591 samples, 0.53%)</title><rect x="58.3838%" y="1525" width="0.5286%" height="15" fill="rgb(226,210,39)" fg:x="142647943" fg:w="1291591"/><text x="58.6338%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,260,715 samples, 0.52%)</title><rect x="58.9124%" y="1509" width="0.5160%" height="15" fill="rgb(208,219,16)" fg:x="143939534" fg:w="1260715"/><text x="59.1624%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,260,715 samples, 0.52%)</title><rect x="58.9124%" y="1493" width="0.5160%" height="15" fill="rgb(216,158,51)" fg:x="143939534" fg:w="1260715"/><text x="59.1624%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,260,715 samples, 0.52%)</title><rect x="58.9124%" y="1477" width="0.5160%" height="15" fill="rgb(233,14,44)" fg:x="143939534" fg:w="1260715"/><text x="59.1624%" y="1487.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,715 samples, 0.52%)</title><rect x="58.9124%" y="1461" width="0.5160%" height="15" fill="rgb(237,97,39)" fg:x="143939534" fg:w="1260715"/><text x="59.1624%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,260,715 samples, 0.52%)</title><rect x="58.9124%" y="1445" width="0.5160%" height="15" fill="rgb(218,198,43)" fg:x="143939534" fg:w="1260715"/><text x="59.1624%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,260,715 samples, 0.52%)</title><rect x="58.9124%" y="1429" width="0.5160%" height="15" fill="rgb(231,104,20)" fg:x="143939534" fg:w="1260715"/><text x="59.1624%" y="1439.50"></text></g><g><title>alloc::alloc::dealloc (1,260,715 samples, 0.52%)</title><rect x="58.9124%" y="1413" width="0.5160%" height="15" fill="rgb(254,36,13)" fg:x="143939534" fg:w="1260715"/><text x="59.1624%" y="1423.50"></text></g><g><title>cfree (1,260,715 samples, 0.52%)</title><rect x="58.9124%" y="1397" width="0.5160%" height="15" fill="rgb(248,14,50)" fg:x="143939534" fg:w="1260715"/><text x="59.1624%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="997" width="0.5234%" height="15" fill="rgb(217,107,29)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="981" width="0.5234%" height="15" fill="rgb(251,169,33)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="965" width="0.5234%" height="15" fill="rgb(217,108,32)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="949" width="0.5234%" height="15" fill="rgb(219,66,42)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="933" width="0.5234%" height="15" fill="rgb(206,180,7)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="917" width="0.5234%" height="15" fill="rgb(208,226,31)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="901" width="0.5234%" height="15" fill="rgb(218,26,49)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="885" width="0.5234%" height="15" fill="rgb(233,197,48)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="869" width="0.5234%" height="15" fill="rgb(252,181,51)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="853" width="0.5234%" height="15" fill="rgb(253,90,19)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="837" width="0.5234%" height="15" fill="rgb(215,171,30)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="821" width="0.5234%" height="15" fill="rgb(214,222,9)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="805" width="0.5234%" height="15" fill="rgb(223,3,22)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="789" width="0.5234%" height="15" fill="rgb(225,196,46)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="773" width="0.5234%" height="15" fill="rgb(209,110,37)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="757" width="0.5234%" height="15" fill="rgb(249,89,12)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="741" width="0.5234%" height="15" fill="rgb(226,27,33)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="725" width="0.5234%" height="15" fill="rgb(213,82,22)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="709" width="0.5234%" height="15" fill="rgb(248,140,0)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="693" width="0.5234%" height="15" fill="rgb(228,106,3)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="677" width="0.5234%" height="15" fill="rgb(209,23,37)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="661" width="0.5234%" height="15" fill="rgb(241,93,50)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="645" width="0.5234%" height="15" fill="rgb(253,46,43)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="629" width="0.5234%" height="15" fill="rgb(226,206,43)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="613" width="0.5234%" height="15" fill="rgb(217,54,7)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="597" width="0.5234%" height="15" fill="rgb(223,5,52)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="581" width="0.5234%" height="15" fill="rgb(206,52,46)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="565" width="0.5234%" height="15" fill="rgb(253,136,11)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="549" width="0.5234%" height="15" fill="rgb(208,106,33)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="533" width="0.5234%" height="15" fill="rgb(206,54,4)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="517" width="0.5234%" height="15" fill="rgb(213,3,15)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::allocation_info (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="501" width="0.5234%" height="15" fill="rgb(252,211,39)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="511.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1,278,865 samples, 0.52%)</title><rect x="59.4284%" y="485" width="0.5234%" height="15" fill="rgb(223,6,36)" fg:x="145200249" fg:w="1278865"/><text x="59.6784%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,738,461 samples, 1.53%)</title><rect x="59.4284%" y="1125" width="1.5301%" height="15" fill="rgb(252,169,45)" fg:x="145200249" fg:w="3738461"/><text x="59.6784%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,738,461 samples, 1.53%)</title><rect x="59.4284%" y="1109" width="1.5301%" height="15" fill="rgb(212,48,26)" fg:x="145200249" fg:w="3738461"/><text x="59.6784%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,738,461 samples, 1.53%)</title><rect x="59.4284%" y="1093" width="1.5301%" height="15" fill="rgb(251,102,48)" fg:x="145200249" fg:w="3738461"/><text x="59.6784%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,738,461 samples, 1.53%)</title><rect x="59.4284%" y="1077" width="1.5301%" height="15" fill="rgb(243,208,16)" fg:x="145200249" fg:w="3738461"/><text x="59.6784%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,738,461 samples, 1.53%)</title><rect x="59.4284%" y="1061" width="1.5301%" height="15" fill="rgb(219,96,24)" fg:x="145200249" fg:w="3738461"/><text x="59.6784%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,738,461 samples, 1.53%)</title><rect x="59.4284%" y="1045" width="1.5301%" height="15" fill="rgb(219,33,29)" fg:x="145200249" fg:w="3738461"/><text x="59.6784%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,738,461 samples, 1.53%)</title><rect x="59.4284%" y="1029" width="1.5301%" height="15" fill="rgb(223,176,5)" fg:x="145200249" fg:w="3738461"/><text x="59.6784%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,738,461 samples, 1.53%)</title><rect x="59.4284%" y="1013" width="1.5301%" height="15" fill="rgb(228,140,14)" fg:x="145200249" fg:w="3738461"/><text x="59.6784%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,459,596 samples, 1.01%)</title><rect x="59.9519%" y="997" width="1.0067%" height="15" fill="rgb(217,179,31)" fg:x="146479114" fg:w="2459596"/><text x="60.2019%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,459,596 samples, 1.01%)</title><rect x="59.9519%" y="981" width="1.0067%" height="15" fill="rgb(230,9,30)" fg:x="146479114" fg:w="2459596"/><text x="60.2019%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,459,596 samples, 1.01%)</title><rect x="59.9519%" y="965" width="1.0067%" height="15" fill="rgb(230,136,20)" fg:x="146479114" fg:w="2459596"/><text x="60.2019%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,459,596 samples, 1.01%)</title><rect x="59.9519%" y="949" width="1.0067%" height="15" fill="rgb(215,210,22)" fg:x="146479114" fg:w="2459596"/><text x="60.2019%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,459,596 samples, 1.01%)</title><rect x="59.9519%" y="933" width="1.0067%" height="15" fill="rgb(218,43,5)" fg:x="146479114" fg:w="2459596"/><text x="60.2019%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,459,596 samples, 1.01%)</title><rect x="59.9519%" y="917" width="1.0067%" height="15" fill="rgb(216,11,5)" fg:x="146479114" fg:w="2459596"/><text x="60.2019%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,459,596 samples, 1.01%)</title><rect x="59.9519%" y="901" width="1.0067%" height="15" fill="rgb(209,82,29)" fg:x="146479114" fg:w="2459596"/><text x="60.2019%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,286,198 samples, 0.53%)</title><rect x="60.4321%" y="885" width="0.5264%" height="15" fill="rgb(244,115,12)" fg:x="147652512" fg:w="1286198"/><text x="60.6821%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,286,198 samples, 0.53%)</title><rect x="60.4321%" y="869" width="0.5264%" height="15" fill="rgb(222,82,18)" fg:x="147652512" fg:w="1286198"/><text x="60.6821%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1,286,198 samples, 0.53%)</title><rect x="60.4321%" y="853" width="0.5264%" height="15" fill="rgb(249,227,8)" fg:x="147652512" fg:w="1286198"/><text x="60.6821%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,037,190 samples, 2.06%)</title><rect x="59.4284%" y="1237" width="2.0617%" height="15" fill="rgb(253,141,45)" fg:x="145200249" fg:w="5037190"/><text x="59.6784%" y="1247.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,037,190 samples, 2.06%)</title><rect x="59.4284%" y="1221" width="2.0617%" height="15" fill="rgb(234,184,4)" fg:x="145200249" fg:w="5037190"/><text x="59.6784%" y="1231.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,037,190 samples, 2.06%)</title><rect x="59.4284%" y="1205" width="2.0617%" height="15" fill="rgb(218,194,23)" fg:x="145200249" fg:w="5037190"/><text x="59.6784%" y="1215.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,037,190 samples, 2.06%)</title><rect x="59.4284%" y="1189" width="2.0617%" height="15" fill="rgb(235,66,41)" fg:x="145200249" fg:w="5037190"/><text x="59.6784%" y="1199.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,037,190 samples, 2.06%)</title><rect x="59.4284%" y="1173" width="2.0617%" height="15" fill="rgb(245,217,1)" fg:x="145200249" fg:w="5037190"/><text x="59.6784%" y="1183.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,037,190 samples, 2.06%)</title><rect x="59.4284%" y="1157" width="2.0617%" height="15" fill="rgb(229,91,1)" fg:x="145200249" fg:w="5037190"/><text x="59.6784%" y="1167.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,037,190 samples, 2.06%)</title><rect x="59.4284%" y="1141" width="2.0617%" height="15" fill="rgb(207,101,30)" fg:x="145200249" fg:w="5037190"/><text x="59.6784%" y="1151.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="1125" width="0.5316%" height="15" fill="rgb(223,82,49)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="1109" width="0.5316%" height="15" fill="rgb(218,167,17)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="1093" width="0.5316%" height="15" fill="rgb(208,103,14)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="1077" width="0.5316%" height="15" fill="rgb(238,20,8)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="1061" width="0.5316%" height="15" fill="rgb(218,80,54)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="1045" width="0.5316%" height="15" fill="rgb(240,144,17)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="1029" width="0.5316%" height="15" fill="rgb(245,27,50)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="1013" width="0.5316%" height="15" fill="rgb(251,51,7)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="997" width="0.5316%" height="15" fill="rgb(245,217,29)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="981" width="0.5316%" height="15" fill="rgb(221,176,29)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="965" width="0.5316%" height="15" fill="rgb(212,180,24)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="949" width="0.5316%" height="15" fill="rgb(254,24,2)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="933" width="0.5316%" height="15" fill="rgb(230,100,2)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="917" width="0.5316%" height="15" fill="rgb(219,142,25)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="901" width="0.5316%" height="15" fill="rgb(240,73,43)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="885" width="0.5316%" height="15" fill="rgb(214,114,15)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="869" width="0.5316%" height="15" fill="rgb(207,130,4)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="879.50"></text></g><g><title>cfree (1,298,729 samples, 0.53%)</title><rect x="60.9585%" y="853" width="0.5316%" height="15" fill="rgb(221,25,40)" fg:x="148938710" fg:w="1298729"/><text x="61.2085%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,384,732 samples, 2.61%)</title><rect x="59.4284%" y="1253" width="2.6132%" height="15" fill="rgb(241,184,7)" fg:x="145200249" fg:w="6384732"/><text x="59.6784%" y="1263.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,347,542 samples, 0.55%)</title><rect x="61.4901%" y="1237" width="0.5515%" height="15" fill="rgb(235,159,4)" fg:x="150237439" fg:w="1347542"/><text x="61.7401%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,347,542 samples, 0.55%)</title><rect x="61.4901%" y="1221" width="0.5515%" height="15" fill="rgb(214,87,48)" fg:x="150237439" fg:w="1347542"/><text x="61.7401%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,347,542 samples, 0.55%)</title><rect x="61.4901%" y="1205" width="0.5515%" height="15" fill="rgb(246,198,24)" fg:x="150237439" fg:w="1347542"/><text x="61.7401%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,347,542 samples, 0.55%)</title><rect x="61.4901%" y="1189" width="0.5515%" height="15" fill="rgb(209,66,40)" fg:x="150237439" fg:w="1347542"/><text x="61.7401%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (1,347,542 samples, 0.55%)</title><rect x="61.4901%" y="1173" width="0.5515%" height="15" fill="rgb(233,147,39)" fg:x="150237439" fg:w="1347542"/><text x="61.7401%" y="1183.50"></text></g><g><title>cfree (1,347,542 samples, 0.55%)</title><rect x="61.4901%" y="1157" width="0.5515%" height="15" fill="rgb(231,145,52)" fg:x="150237439" fg:w="1347542"/><text x="61.7401%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,715,771 samples, 3.16%)</title><rect x="59.4284%" y="1317" width="3.1580%" height="15" fill="rgb(206,20,26)" fg:x="145200249" fg:w="7715771"/><text x="59.6784%" y="1327.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,715,771 samples, 3.16%)</title><rect x="59.4284%" y="1301" width="3.1580%" height="15" fill="rgb(238,220,4)" fg:x="145200249" fg:w="7715771"/><text x="59.6784%" y="1311.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,715,771 samples, 3.16%)</title><rect x="59.4284%" y="1285" width="3.1580%" height="15" fill="rgb(252,195,42)" fg:x="145200249" fg:w="7715771"/><text x="59.6784%" y="1295.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,715,771 samples, 3.16%)</title><rect x="59.4284%" y="1269" width="3.1580%" height="15" fill="rgb(209,10,6)" fg:x="145200249" fg:w="7715771"/><text x="59.6784%" y="1279.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,331,039 samples, 0.54%)</title><rect x="62.0416%" y="1253" width="0.5448%" height="15" fill="rgb(229,3,52)" fg:x="151584981" fg:w="1331039"/><text x="62.2916%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,331,039 samples, 0.54%)</title><rect x="62.0416%" y="1237" width="0.5448%" height="15" fill="rgb(253,49,37)" fg:x="151584981" fg:w="1331039"/><text x="62.2916%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,331,039 samples, 0.54%)</title><rect x="62.0416%" y="1221" width="0.5448%" height="15" fill="rgb(240,103,49)" fg:x="151584981" fg:w="1331039"/><text x="62.2916%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,331,039 samples, 0.54%)</title><rect x="62.0416%" y="1205" width="0.5448%" height="15" fill="rgb(250,182,30)" fg:x="151584981" fg:w="1331039"/><text x="62.2916%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,331,039 samples, 0.54%)</title><rect x="62.0416%" y="1189" width="0.5448%" height="15" fill="rgb(248,8,30)" fg:x="151584981" fg:w="1331039"/><text x="62.2916%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,331,039 samples, 0.54%)</title><rect x="62.0416%" y="1173" width="0.5448%" height="15" fill="rgb(237,120,30)" fg:x="151584981" fg:w="1331039"/><text x="62.2916%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,331,039 samples, 0.54%)</title><rect x="62.0416%" y="1157" width="0.5448%" height="15" fill="rgb(221,146,34)" fg:x="151584981" fg:w="1331039"/><text x="62.2916%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (1,331,039 samples, 0.54%)</title><rect x="62.0416%" y="1141" width="0.5448%" height="15" fill="rgb(242,55,13)" fg:x="151584981" fg:w="1331039"/><text x="62.2916%" y="1151.50"></text></g><g><title>__rdl_dealloc (1,331,039 samples, 0.54%)</title><rect x="62.0416%" y="1125" width="0.5448%" height="15" fill="rgb(242,112,31)" fg:x="151584981" fg:w="1331039"/><text x="62.2916%" y="1135.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,331,039 samples, 0.54%)</title><rect x="62.0416%" y="1109" width="0.5448%" height="15" fill="rgb(249,192,27)" fg:x="151584981" fg:w="1331039"/><text x="62.2916%" y="1119.50"></text></g><g><title>__rust_dealloc (1,290,811 samples, 0.53%)</title><rect x="62.5864%" y="1045" width="0.5283%" height="15" fill="rgb(208,204,44)" fg:x="152916020" fg:w="1290811"/><text x="62.8364%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,271,164 samples, 4.20%)</title><rect x="59.4284%" y="1493" width="4.2038%" height="15" fill="rgb(208,93,54)" fg:x="145200249" fg:w="10271164"/><text x="59.6784%" y="1503.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (10,271,164 samples, 4.20%)</title><rect x="59.4284%" y="1477" width="4.2038%" height="15" fill="rgb(242,1,31)" fg:x="145200249" fg:w="10271164"/><text x="59.6784%" y="1487.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (10,271,164 samples, 4.20%)</title><rect x="59.4284%" y="1461" width="4.2038%" height="15" fill="rgb(241,83,25)" fg:x="145200249" fg:w="10271164"/><text x="59.6784%" y="1471.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (10,271,164 samples, 4.20%)</title><rect x="59.4284%" y="1445" width="4.2038%" height="15" fill="rgb(205,169,50)" fg:x="145200249" fg:w="10271164"/><text x="59.6784%" y="1455.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,271,164 samples, 4.20%)</title><rect x="59.4284%" y="1429" width="4.2038%" height="15" fill="rgb(239,186,37)" fg:x="145200249" fg:w="10271164"/><text x="59.6784%" y="1439.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (10,271,164 samples, 4.20%)</title><rect x="59.4284%" y="1413" width="4.2038%" height="15" fill="rgb(205,221,10)" fg:x="145200249" fg:w="10271164"/><text x="59.6784%" y="1423.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (10,271,164 samples, 4.20%)</title><rect x="59.4284%" y="1397" width="4.2038%" height="15" fill="rgb(218,196,15)" fg:x="145200249" fg:w="10271164"/><text x="59.6784%" y="1407.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (10,271,164 samples, 4.20%)</title><rect x="59.4284%" y="1381" width="4.2038%" height="15" fill="rgb(218,196,35)" fg:x="145200249" fg:w="10271164"/><text x="59.6784%" y="1391.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,271,164 samples, 4.20%)</title><rect x="59.4284%" y="1365" width="4.2038%" height="15" fill="rgb(233,63,24)" fg:x="145200249" fg:w="10271164"/><text x="59.6784%" y="1375.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (10,271,164 samples, 4.20%)</title><rect x="59.4284%" y="1349" width="4.2038%" height="15" fill="rgb(225,8,4)" fg:x="145200249" fg:w="10271164"/><text x="59.6784%" y="1359.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (10,271,164 samples, 4.20%)</title><rect x="59.4284%" y="1333" width="4.2038%" height="15" fill="rgb(234,105,35)" fg:x="145200249" fg:w="10271164"/><text x="59.6784%" y="1343.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1317" width="1.0459%" height="15" fill="rgb(236,21,32)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1301" width="1.0459%" height="15" fill="rgb(228,109,6)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1285" width="1.0459%" height="15" fill="rgb(229,215,31)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1269" width="1.0459%" height="15" fill="rgb(221,52,54)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1279.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1253" width="1.0459%" height="15" fill="rgb(252,129,43)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1237" width="1.0459%" height="15" fill="rgb(248,183,27)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1221" width="1.0459%" height="15" fill="rgb(250,0,22)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1231.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1205" width="1.0459%" height="15" fill="rgb(213,166,10)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1215.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1189" width="1.0459%" height="15" fill="rgb(207,163,36)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1173" width="1.0459%" height="15" fill="rgb(208,122,22)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1157" width="1.0459%" height="15" fill="rgb(207,104,49)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1141" width="1.0459%" height="15" fill="rgb(248,211,50)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1125" width="1.0459%" height="15" fill="rgb(217,13,45)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1109" width="1.0459%" height="15" fill="rgb(211,216,49)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1093" width="1.0459%" height="15" fill="rgb(221,58,53)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1077" width="1.0459%" height="15" fill="rgb(220,112,41)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (2,555,393 samples, 1.05%)</title><rect x="62.5864%" y="1061" width="1.0459%" height="15" fill="rgb(236,38,28)" fg:x="152916020" fg:w="2555393"/><text x="62.8364%" y="1071.50"></text></g><g><title>cfree (1,264,582 samples, 0.52%)</title><rect x="63.1147%" y="1045" width="0.5176%" height="15" fill="rgb(227,195,22)" fg:x="154206831" fg:w="1264582"/><text x="63.3647%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (11,583,566 samples, 4.74%)</title><rect x="59.4284%" y="1509" width="4.7410%" height="15" fill="rgb(214,55,33)" fg:x="145200249" fg:w="11583566"/><text x="59.6784%" y="1519.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,312,402 samples, 0.54%)</title><rect x="63.6323%" y="1493" width="0.5371%" height="15" fill="rgb(248,80,13)" fg:x="155471413" fg:w="1312402"/><text x="63.8823%" y="1503.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,312,402 samples, 0.54%)</title><rect x="63.6323%" y="1477" width="0.5371%" height="15" fill="rgb(238,52,6)" fg:x="155471413" fg:w="1312402"/><text x="63.8823%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,312,402 samples, 0.54%)</title><rect x="63.6323%" y="1461" width="0.5371%" height="15" fill="rgb(224,198,47)" fg:x="155471413" fg:w="1312402"/><text x="63.8823%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,312,402 samples, 0.54%)</title><rect x="63.6323%" y="1445" width="0.5371%" height="15" fill="rgb(233,171,20)" fg:x="155471413" fg:w="1312402"/><text x="63.8823%" y="1455.50"></text></g><g><title>alloc::alloc::dealloc (1,312,402 samples, 0.54%)</title><rect x="63.6323%" y="1429" width="0.5371%" height="15" fill="rgb(241,30,25)" fg:x="155471413" fg:w="1312402"/><text x="63.8823%" y="1439.50"></text></g><g><title>cfree (1,312,402 samples, 0.54%)</title><rect x="63.6323%" y="1413" width="0.5371%" height="15" fill="rgb(207,171,38)" fg:x="155471413" fg:w="1312402"/><text x="63.8823%" y="1423.50"></text></g><g><title>[libc.so.6] (1,312,402 samples, 0.54%)</title><rect x="63.6323%" y="1397" width="0.5371%" height="15" fill="rgb(234,70,1)" fg:x="155471413" fg:w="1312402"/><text x="63.8823%" y="1407.50"></text></g><g><title>[libc.so.6] (1,312,402 samples, 0.54%)</title><rect x="63.6323%" y="1381" width="0.5371%" height="15" fill="rgb(232,178,18)" fg:x="155471413" fg:w="1312402"/><text x="63.8823%" y="1391.50"></text></g><g><title>[libc.so.6] (1,312,402 samples, 0.54%)</title><rect x="63.6323%" y="1365" width="0.5371%" height="15" fill="rgb(241,78,40)" fg:x="155471413" fg:w="1312402"/><text x="63.8823%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (14,132,754 samples, 5.78%)</title><rect x="58.9124%" y="1573" width="5.7843%" height="15" fill="rgb(222,35,25)" fg:x="143939534" fg:w="14132754"/><text x="59.1624%" y="1583.50">core::p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,132,754 samples, 5.78%)</title><rect x="58.9124%" y="1557" width="5.7843%" height="15" fill="rgb(207,92,16)" fg:x="143939534" fg:w="14132754"/><text x="59.1624%" y="1567.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (14,132,754 samples, 5.78%)</title><rect x="58.9124%" y="1541" width="5.7843%" height="15" fill="rgb(216,59,51)" fg:x="143939534" fg:w="14132754"/><text x="59.1624%" y="1551.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (14,132,754 samples, 5.78%)</title><rect x="58.9124%" y="1525" width="5.7843%" height="15" fill="rgb(213,80,28)" fg:x="143939534" fg:w="14132754"/><text x="59.1624%" y="1535.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1509" width="0.5274%" height="15" fill="rgb(220,93,7)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1493" width="0.5274%" height="15" fill="rgb(225,24,44)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1477" width="0.5274%" height="15" fill="rgb(243,74,40)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1461" width="0.5274%" height="15" fill="rgb(228,39,7)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1471.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1445" width="0.5274%" height="15" fill="rgb(227,79,8)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1429" width="0.5274%" height="15" fill="rgb(236,58,11)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1413" width="0.5274%" height="15" fill="rgb(249,63,35)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1423.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1397" width="0.5274%" height="15" fill="rgb(252,114,16)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1407.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1381" width="0.5274%" height="15" fill="rgb(254,151,24)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1365" width="0.5274%" height="15" fill="rgb(253,54,39)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1349" width="0.5274%" height="15" fill="rgb(243,25,45)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1333" width="0.5274%" height="15" fill="rgb(234,134,9)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1317" width="0.5274%" height="15" fill="rgb(227,166,31)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1301" width="0.5274%" height="15" fill="rgb(245,143,41)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1285" width="0.5274%" height="15" fill="rgb(238,181,32)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1269" width="0.5274%" height="15" fill="rgb(224,113,18)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1253" width="0.5274%" height="15" fill="rgb(240,229,28)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1263.50"></text></g><g><title>cfree (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1237" width="0.5274%" height="15" fill="rgb(250,185,3)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1247.50"></text></g><g><title>[libc.so.6] (1,288,473 samples, 0.53%)</title><rect x="64.1694%" y="1221" width="0.5274%" height="15" fill="rgb(212,59,25)" fg:x="156783815" fg:w="1288473"/><text x="64.4194%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (15,396,764 samples, 6.30%)</title><rect x="58.9124%" y="1637" width="6.3017%" height="15" fill="rgb(221,87,20)" fg:x="143939534" fg:w="15396764"/><text x="59.1624%" y="1647.50">core::pt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15,396,764 samples, 6.30%)</title><rect x="58.9124%" y="1621" width="6.3017%" height="15" fill="rgb(213,74,28)" fg:x="143939534" fg:w="15396764"/><text x="59.1624%" y="1631.50">&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (15,396,764 samples, 6.30%)</title><rect x="58.9124%" y="1605" width="6.3017%" height="15" fill="rgb(224,132,34)" fg:x="143939534" fg:w="15396764"/><text x="59.1624%" y="1615.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (15,396,764 samples, 6.30%)</title><rect x="58.9124%" y="1589" width="6.3017%" height="15" fill="rgb(222,101,24)" fg:x="143939534" fg:w="15396764"/><text x="59.1624%" y="1599.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1573" width="0.5173%" height="15" fill="rgb(254,142,4)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1557" width="0.5173%" height="15" fill="rgb(230,229,49)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1541" width="0.5173%" height="15" fill="rgb(238,70,47)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1525" width="0.5173%" height="15" fill="rgb(231,160,17)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1535.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1509" width="0.5173%" height="15" fill="rgb(218,68,53)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1493" width="0.5173%" height="15" fill="rgb(236,111,10)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1477" width="0.5173%" height="15" fill="rgb(224,34,41)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1487.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1461" width="0.5173%" height="15" fill="rgb(241,118,19)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1471.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1445" width="0.5173%" height="15" fill="rgb(238,129,25)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1429" width="0.5173%" height="15" fill="rgb(238,22,31)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1413" width="0.5173%" height="15" fill="rgb(222,174,48)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1397" width="0.5173%" height="15" fill="rgb(206,152,40)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1381" width="0.5173%" height="15" fill="rgb(218,99,54)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1391.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1365" width="0.5173%" height="15" fill="rgb(220,174,26)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1349" width="0.5173%" height="15" fill="rgb(245,116,9)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1333" width="0.5173%" height="15" fill="rgb(209,72,35)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1343.50"></text></g><g><title>alloc::alloc::dealloc (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1317" width="0.5173%" height="15" fill="rgb(226,126,21)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1327.50"></text></g><g><title>__rust_dealloc (1,264,010 samples, 0.52%)</title><rect x="64.6968%" y="1301" width="0.5173%" height="15" fill="rgb(227,192,1)" fg:x="158072288" fg:w="1264010"/><text x="64.9468%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,521,070 samples, 1.03%)</title><rect x="65.2141%" y="1637" width="1.0318%" height="15" fill="rgb(237,180,29)" fg:x="159336298" fg:w="2521070"/><text x="65.4641%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,521,070 samples, 1.03%)</title><rect x="65.2141%" y="1621" width="1.0318%" height="15" fill="rgb(230,197,35)" fg:x="159336298" fg:w="2521070"/><text x="65.4641%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,521,070 samples, 1.03%)</title><rect x="65.2141%" y="1605" width="1.0318%" height="15" fill="rgb(246,193,31)" fg:x="159336298" fg:w="2521070"/><text x="65.4641%" y="1615.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,521,070 samples, 1.03%)</title><rect x="65.2141%" y="1589" width="1.0318%" height="15" fill="rgb(241,36,4)" fg:x="159336298" fg:w="2521070"/><text x="65.4641%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,521,070 samples, 1.03%)</title><rect x="65.2141%" y="1573" width="1.0318%" height="15" fill="rgb(241,130,17)" fg:x="159336298" fg:w="2521070"/><text x="65.4641%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,521,070 samples, 1.03%)</title><rect x="65.2141%" y="1557" width="1.0318%" height="15" fill="rgb(206,137,32)" fg:x="159336298" fg:w="2521070"/><text x="65.4641%" y="1567.50"></text></g><g><title>alloc::alloc::dealloc (2,521,070 samples, 1.03%)</title><rect x="65.2141%" y="1541" width="1.0318%" height="15" fill="rgb(237,228,51)" fg:x="159336298" fg:w="2521070"/><text x="65.4641%" y="1551.50"></text></g><g><title>cfree (2,521,070 samples, 1.03%)</title><rect x="65.2141%" y="1525" width="1.0318%" height="15" fill="rgb(243,6,42)" fg:x="159336298" fg:w="2521070"/><text x="65.4641%" y="1535.50"></text></g><g><title>[libc.so.6] (2,521,070 samples, 1.03%)</title><rect x="65.2141%" y="1509" width="1.0318%" height="15" fill="rgb(251,74,28)" fg:x="159336298" fg:w="2521070"/><text x="65.4641%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,488,406 samples, 8.39%)</title><rect x="58.3838%" y="1685" width="8.3856%" height="15" fill="rgb(218,20,49)" fg:x="142647943" fg:w="20488406"/><text x="58.6338%" y="1695.50">&lt;alloc::vec:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (20,488,406 samples, 8.39%)</title><rect x="58.3838%" y="1669" width="8.3856%" height="15" fill="rgb(238,28,14)" fg:x="142647943" fg:w="20488406"/><text x="58.6338%" y="1679.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (20,488,406 samples, 8.39%)</title><rect x="58.3838%" y="1653" width="8.3856%" height="15" fill="rgb(229,40,46)" fg:x="142647943" fg:w="20488406"/><text x="58.6338%" y="1663.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1637" width="0.5235%" height="15" fill="rgb(244,195,20)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1621" width="0.5235%" height="15" fill="rgb(253,56,35)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1605" width="0.5235%" height="15" fill="rgb(210,149,44)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1589" width="0.5235%" height="15" fill="rgb(240,135,12)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1599.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1573" width="0.5235%" height="15" fill="rgb(251,24,50)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1557" width="0.5235%" height="15" fill="rgb(243,200,47)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1541" width="0.5235%" height="15" fill="rgb(224,166,26)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1551.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1525" width="0.5235%" height="15" fill="rgb(233,0,47)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1535.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1509" width="0.5235%" height="15" fill="rgb(253,80,5)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1493" width="0.5235%" height="15" fill="rgb(214,133,25)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1477" width="0.5235%" height="15" fill="rgb(209,27,14)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1461" width="0.5235%" height="15" fill="rgb(219,102,51)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1445" width="0.5235%" height="15" fill="rgb(237,18,16)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1455.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1429" width="0.5235%" height="15" fill="rgb(241,85,17)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1413" width="0.5235%" height="15" fill="rgb(236,90,42)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1397" width="0.5235%" height="15" fill="rgb(249,57,21)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1381" width="0.5235%" height="15" fill="rgb(243,12,36)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1391.50"></text></g><g><title>cfree (1,278,981 samples, 0.52%)</title><rect x="66.2460%" y="1365" width="0.5235%" height="15" fill="rgb(253,128,47)" fg:x="161857368" fg:w="1278981"/><text x="66.4960%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (21,785,610 samples, 8.92%)</title><rect x="58.3838%" y="1701" width="8.9165%" height="15" fill="rgb(207,33,20)" fg:x="142647943" fg:w="21785610"/><text x="58.6338%" y="1711.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,297,204 samples, 0.53%)</title><rect x="66.7694%" y="1685" width="0.5309%" height="15" fill="rgb(233,215,35)" fg:x="163136349" fg:w="1297204"/><text x="67.0194%" y="1695.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,297,204 samples, 0.53%)</title><rect x="66.7694%" y="1669" width="0.5309%" height="15" fill="rgb(249,188,52)" fg:x="163136349" fg:w="1297204"/><text x="67.0194%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,297,204 samples, 0.53%)</title><rect x="66.7694%" y="1653" width="0.5309%" height="15" fill="rgb(225,12,32)" fg:x="163136349" fg:w="1297204"/><text x="67.0194%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,297,204 samples, 0.53%)</title><rect x="66.7694%" y="1637" width="0.5309%" height="15" fill="rgb(247,98,14)" fg:x="163136349" fg:w="1297204"/><text x="67.0194%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (1,297,204 samples, 0.53%)</title><rect x="66.7694%" y="1621" width="0.5309%" height="15" fill="rgb(247,219,48)" fg:x="163136349" fg:w="1297204"/><text x="67.0194%" y="1631.50"></text></g><g><title>cfree (1,297,204 samples, 0.53%)</title><rect x="66.7694%" y="1605" width="0.5309%" height="15" fill="rgb(253,60,48)" fg:x="163136349" fg:w="1297204"/><text x="67.0194%" y="1615.50"></text></g><g><title>[libc.so.6] (1,297,204 samples, 0.53%)</title><rect x="66.7694%" y="1589" width="0.5309%" height="15" fill="rgb(245,15,52)" fg:x="163136349" fg:w="1297204"/><text x="67.0194%" y="1599.50"></text></g><g><title>[libc.so.6] (1,297,204 samples, 0.53%)</title><rect x="66.7694%" y="1573" width="0.5309%" height="15" fill="rgb(220,133,28)" fg:x="163136349" fg:w="1297204"/><text x="67.0194%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23,040,618 samples, 9.43%)</title><rect x="58.3838%" y="1749" width="9.4302%" height="15" fill="rgb(217,180,4)" fg:x="142647943" fg:w="23040618"/><text x="58.6338%" y="1759.50">&lt;alloc::vec::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (23,040,618 samples, 9.43%)</title><rect x="58.3838%" y="1733" width="9.4302%" height="15" fill="rgb(251,24,1)" fg:x="142647943" fg:w="23040618"/><text x="58.6338%" y="1743.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (23,040,618 samples, 9.43%)</title><rect x="58.3838%" y="1717" width="9.4302%" height="15" fill="rgb(212,185,49)" fg:x="142647943" fg:w="23040618"/><text x="58.6338%" y="1727.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,255,008 samples, 0.51%)</title><rect x="67.3004%" y="1701" width="0.5137%" height="15" fill="rgb(215,175,22)" fg:x="164433553" fg:w="1255008"/><text x="67.5504%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,255,008 samples, 0.51%)</title><rect x="67.3004%" y="1685" width="0.5137%" height="15" fill="rgb(250,205,14)" fg:x="164433553" fg:w="1255008"/><text x="67.5504%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,255,008 samples, 0.51%)</title><rect x="67.3004%" y="1669" width="0.5137%" height="15" fill="rgb(225,211,22)" fg:x="164433553" fg:w="1255008"/><text x="67.5504%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,255,008 samples, 0.51%)</title><rect x="67.3004%" y="1653" width="0.5137%" height="15" fill="rgb(251,179,42)" fg:x="164433553" fg:w="1255008"/><text x="67.5504%" y="1663.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,255,008 samples, 0.51%)</title><rect x="67.3004%" y="1637" width="0.5137%" height="15" fill="rgb(208,216,51)" fg:x="164433553" fg:w="1255008"/><text x="67.5504%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,255,008 samples, 0.51%)</title><rect x="67.3004%" y="1621" width="0.5137%" height="15" fill="rgb(235,36,11)" fg:x="164433553" fg:w="1255008"/><text x="67.5504%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,255,008 samples, 0.51%)</title><rect x="67.3004%" y="1605" width="0.5137%" height="15" fill="rgb(213,189,28)" fg:x="164433553" fg:w="1255008"/><text x="67.5504%" y="1615.50"></text></g><g><title>alloc::alloc::dealloc (1,255,008 samples, 0.51%)</title><rect x="67.3004%" y="1589" width="0.5137%" height="15" fill="rgb(227,203,42)" fg:x="164433553" fg:w="1255008"/><text x="67.5504%" y="1599.50"></text></g><g><title>cfree (1,255,008 samples, 0.51%)</title><rect x="67.3004%" y="1573" width="0.5137%" height="15" fill="rgb(244,72,36)" fg:x="164433553" fg:w="1255008"/><text x="67.5504%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (42,161,161 samples, 17.26%)</title><rect x="58.3838%" y="1765" width="17.2560%" height="15" fill="rgb(213,53,17)" fg:x="142647943" fg:w="42161161"/><text x="58.6338%" y="1775.50">core::ptr::drop_in_place&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (19,120,543 samples, 7.83%)</title><rect x="67.8140%" y="1749" width="7.8258%" height="15" fill="rgb(207,167,3)" fg:x="165688561" fg:w="19120543"/><text x="68.0640%" y="1759.50">core::ptr::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19,120,543 samples, 7.83%)</title><rect x="67.8140%" y="1733" width="7.8258%" height="15" fill="rgb(216,98,30)" fg:x="165688561" fg:w="19120543"/><text x="68.0640%" y="1743.50">&lt;alloc::raw..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (19,120,543 samples, 7.83%)</title><rect x="67.8140%" y="1717" width="7.8258%" height="15" fill="rgb(236,123,15)" fg:x="165688561" fg:w="19120543"/><text x="68.0640%" y="1727.50">alloc::raw_..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19,120,543 samples, 7.83%)</title><rect x="67.8140%" y="1701" width="7.8258%" height="15" fill="rgb(248,81,50)" fg:x="165688561" fg:w="19120543"/><text x="68.0640%" y="1711.50">&lt;alloc::all..</text></g><g><title>alloc::alloc::dealloc (19,120,543 samples, 7.83%)</title><rect x="67.8140%" y="1685" width="7.8258%" height="15" fill="rgb(214,120,4)" fg:x="165688561" fg:w="19120543"/><text x="68.0640%" y="1695.50">alloc::allo..</text></g><g><title>cfree (19,120,543 samples, 7.83%)</title><rect x="67.8140%" y="1669" width="7.8258%" height="15" fill="rgb(208,179,34)" fg:x="165688561" fg:w="19120543"/><text x="68.0640%" y="1679.50">cfree</text></g><g><title>[libc.so.6] (17,866,475 samples, 7.31%)</title><rect x="68.3273%" y="1653" width="7.3125%" height="15" fill="rgb(227,140,7)" fg:x="166942629" fg:w="17866475"/><text x="68.5773%" y="1663.50">[libc.so.6]</text></g><g><title>[libc.so.6] (17,866,475 samples, 7.31%)</title><rect x="68.3273%" y="1637" width="7.3125%" height="15" fill="rgb(214,22,6)" fg:x="166942629" fg:w="17866475"/><text x="68.5773%" y="1647.50">[libc.so.6]</text></g><g><title>[libc.so.6] (5,227,489 samples, 2.14%)</title><rect x="73.5002%" y="1621" width="2.1395%" height="15" fill="rgb(207,137,27)" fg:x="179581615" fg:w="5227489"/><text x="73.7502%" y="1631.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43,108,547 samples, 17.64%)</title><rect x="58.3838%" y="1813" width="17.6437%" height="15" fill="rgb(210,8,46)" fg:x="142647943" fg:w="43108547"/><text x="58.6338%" y="1823.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (43,108,547 samples, 17.64%)</title><rect x="58.3838%" y="1797" width="17.6437%" height="15" fill="rgb(240,16,54)" fg:x="142647943" fg:w="43108547"/><text x="58.6338%" y="1807.50">core::ptr::drop_in_place&lt;[c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (43,108,547 samples, 17.64%)</title><rect x="58.3838%" y="1781" width="17.6437%" height="15" fill="rgb(211,209,29)" fg:x="142647943" fg:w="43108547"/><text x="58.6338%" y="1791.50">core::ptr::drop_in_place&lt;cs..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;css_bitvector_compiler::BitVector&gt;&gt; (947,386 samples, 0.39%)</title><rect x="75.6398%" y="1765" width="0.3878%" height="15" fill="rgb(226,228,24)" fg:x="184809104" fg:w="947386"/><text x="75.8898%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (45,622,034 samples, 18.67%)</title><rect x="58.3838%" y="1829" width="18.6725%" height="15" fill="rgb(222,84,9)" fg:x="142647943" fg:w="45622034"/><text x="58.6338%" y="1839.50">core::ptr::drop_in_place&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,513,487 samples, 1.03%)</title><rect x="76.0275%" y="1813" width="1.0287%" height="15" fill="rgb(234,203,30)" fg:x="185756490" fg:w="2513487"/><text x="76.2775%" y="1823.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,513,487 samples, 1.03%)</title><rect x="76.0275%" y="1797" width="1.0287%" height="15" fill="rgb(238,109,14)" fg:x="185756490" fg:w="2513487"/><text x="76.2775%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,513,487 samples, 1.03%)</title><rect x="76.0275%" y="1781" width="1.0287%" height="15" fill="rgb(233,206,34)" fg:x="185756490" fg:w="2513487"/><text x="76.2775%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,513,487 samples, 1.03%)</title><rect x="76.0275%" y="1765" width="1.0287%" height="15" fill="rgb(220,167,47)" fg:x="185756490" fg:w="2513487"/><text x="76.2775%" y="1775.50"></text></g><g><title>alloc::alloc::dealloc (2,513,487 samples, 1.03%)</title><rect x="76.0275%" y="1749" width="1.0287%" height="15" fill="rgb(238,105,10)" fg:x="185756490" fg:w="2513487"/><text x="76.2775%" y="1759.50"></text></g><g><title>cfree (2,513,487 samples, 1.03%)</title><rect x="76.0275%" y="1733" width="1.0287%" height="15" fill="rgb(213,227,17)" fg:x="185756490" fg:w="2513487"/><text x="76.2775%" y="1743.50"></text></g><g><title>[libc.so.6] (1,309,834 samples, 0.54%)</title><rect x="76.5202%" y="1717" width="0.5361%" height="15" fill="rgb(217,132,38)" fg:x="186960143" fg:w="1309834"/><text x="76.7702%" y="1727.50"></text></g><g><title>[libc.so.6] (1,309,834 samples, 0.54%)</title><rect x="76.5202%" y="1701" width="0.5361%" height="15" fill="rgb(242,146,4)" fg:x="186960143" fg:w="1309834"/><text x="76.7702%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (49,585,889 samples, 20.29%)</title><rect x="57.3044%" y="1893" width="20.2948%" height="15" fill="rgb(212,61,9)" fg:x="140010540" fg:w="49585889"/><text x="57.5544%" y="1903.50">core::ptr::drop_in_place&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49,585,889 samples, 20.29%)</title><rect x="57.3044%" y="1877" width="20.2948%" height="15" fill="rgb(247,126,22)" fg:x="140010540" fg:w="49585889"/><text x="57.5544%" y="1887.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (49,585,889 samples, 20.29%)</title><rect x="57.3044%" y="1861" width="20.2948%" height="15" fill="rgb(220,196,2)" fg:x="140010540" fg:w="49585889"/><text x="57.5544%" y="1871.50">core::ptr::drop_in_place&lt;[css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (49,585,889 samples, 20.29%)</title><rect x="57.3044%" y="1845" width="20.2948%" height="15" fill="rgb(208,46,4)" fg:x="140010540" fg:w="49585889"/><text x="57.5544%" y="1855.50">core::ptr::drop_in_place&lt;css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,326,452 samples, 0.54%)</title><rect x="77.0563%" y="1829" width="0.5429%" height="15" fill="rgb(252,104,46)" fg:x="188269977" fg:w="1326452"/><text x="77.3063%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,326,452 samples, 0.54%)</title><rect x="77.0563%" y="1813" width="0.5429%" height="15" fill="rgb(237,152,48)" fg:x="188269977" fg:w="1326452"/><text x="77.3063%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,326,452 samples, 0.54%)</title><rect x="77.0563%" y="1797" width="0.5429%" height="15" fill="rgb(221,59,37)" fg:x="188269977" fg:w="1326452"/><text x="77.3063%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,326,452 samples, 0.54%)</title><rect x="77.0563%" y="1781" width="0.5429%" height="15" fill="rgb(209,202,51)" fg:x="188269977" fg:w="1326452"/><text x="77.3063%" y="1791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,326,452 samples, 0.54%)</title><rect x="77.0563%" y="1765" width="0.5429%" height="15" fill="rgb(228,81,30)" fg:x="188269977" fg:w="1326452"/><text x="77.3063%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,326,452 samples, 0.54%)</title><rect x="77.0563%" y="1749" width="0.5429%" height="15" fill="rgb(227,42,39)" fg:x="188269977" fg:w="1326452"/><text x="77.3063%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,326,452 samples, 0.54%)</title><rect x="77.0563%" y="1733" width="0.5429%" height="15" fill="rgb(221,26,2)" fg:x="188269977" fg:w="1326452"/><text x="77.3063%" y="1743.50"></text></g><g><title>alloc::alloc::dealloc (1,326,452 samples, 0.54%)</title><rect x="77.0563%" y="1717" width="0.5429%" height="15" fill="rgb(254,61,31)" fg:x="188269977" fg:w="1326452"/><text x="77.3063%" y="1727.50"></text></g><g><title>cfree (1,326,452 samples, 0.54%)</title><rect x="77.0563%" y="1701" width="0.5429%" height="15" fill="rgb(222,173,38)" fg:x="188269977" fg:w="1326452"/><text x="77.3063%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (50,870,359 samples, 20.82%)</title><rect x="57.3044%" y="2101" width="20.8205%" height="15" fill="rgb(218,50,12)" fg:x="140010540" fg:w="50870359"/><text x="57.5544%" y="2111.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (50,870,359 samples, 20.82%)</title><rect x="57.3044%" y="2085" width="20.8205%" height="15" fill="rgb(223,88,40)" fg:x="140010540" fg:w="50870359"/><text x="57.5544%" y="2095.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50,870,359 samples, 20.82%)</title><rect x="57.3044%" y="2069" width="20.8205%" height="15" fill="rgb(237,54,19)" fg:x="140010540" fg:w="50870359"/><text x="57.5544%" y="2079.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (50,870,359 samples, 20.82%)</title><rect x="57.3044%" y="2053" width="20.8205%" height="15" fill="rgb(251,129,25)" fg:x="140010540" fg:w="50870359"/><text x="57.5544%" y="2063.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (50,870,359 samples, 20.82%)</title><rect x="57.3044%" y="2037" width="20.8205%" height="15" fill="rgb(238,97,19)" fg:x="140010540" fg:w="50870359"/><text x="57.5544%" y="2047.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (50,870,359 samples, 20.82%)</title><rect x="57.3044%" y="2021" width="20.8205%" height="15" fill="rgb(240,169,18)" fg:x="140010540" fg:w="50870359"/><text x="57.5544%" y="2031.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50,870,359 samples, 20.82%)</title><rect x="57.3044%" y="2005" width="20.8205%" height="15" fill="rgb(230,187,49)" fg:x="140010540" fg:w="50870359"/><text x="57.5544%" y="2015.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (50,870,359 samples, 20.82%)</title><rect x="57.3044%" y="1989" width="20.8205%" height="15" fill="rgb(209,44,26)" fg:x="140010540" fg:w="50870359"/><text x="57.5544%" y="1999.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (50,870,359 samples, 20.82%)</title><rect x="57.3044%" y="1973" width="20.8205%" height="15" fill="rgb(244,0,6)" fg:x="140010540" fg:w="50870359"/><text x="57.5544%" y="1983.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (50,870,359 samples, 20.82%)</title><rect x="57.3044%" y="1957" width="20.8205%" height="15" fill="rgb(248,18,21)" fg:x="140010540" fg:w="50870359"/><text x="57.5544%" y="1967.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50,870,359 samples, 20.82%)</title><rect x="57.3044%" y="1941" width="20.8205%" height="15" fill="rgb(245,180,19)" fg:x="140010540" fg:w="50870359"/><text x="57.5544%" y="1951.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (50,870,359 samples, 20.82%)</title><rect x="57.3044%" y="1925" width="20.8205%" height="15" fill="rgb(252,118,36)" fg:x="140010540" fg:w="50870359"/><text x="57.5544%" y="1935.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (50,870,359 samples, 20.82%)</title><rect x="57.3044%" y="1909" width="20.8205%" height="15" fill="rgb(210,224,19)" fg:x="140010540" fg:w="50870359"/><text x="57.5544%" y="1919.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,284,470 samples, 0.53%)</title><rect x="77.5992%" y="1893" width="0.5257%" height="15" fill="rgb(218,30,24)" fg:x="189596429" fg:w="1284470"/><text x="77.8492%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,284,470 samples, 0.53%)</title><rect x="77.5992%" y="1877" width="0.5257%" height="15" fill="rgb(219,75,50)" fg:x="189596429" fg:w="1284470"/><text x="77.8492%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,284,470 samples, 0.53%)</title><rect x="77.5992%" y="1861" width="0.5257%" height="15" fill="rgb(234,72,50)" fg:x="189596429" fg:w="1284470"/><text x="77.8492%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,284,470 samples, 0.53%)</title><rect x="77.5992%" y="1845" width="0.5257%" height="15" fill="rgb(219,100,48)" fg:x="189596429" fg:w="1284470"/><text x="77.8492%" y="1855.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,284,470 samples, 0.53%)</title><rect x="77.5992%" y="1829" width="0.5257%" height="15" fill="rgb(253,5,41)" fg:x="189596429" fg:w="1284470"/><text x="77.8492%" y="1839.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,284,470 samples, 0.53%)</title><rect x="77.5992%" y="1813" width="0.5257%" height="15" fill="rgb(247,181,11)" fg:x="189596429" fg:w="1284470"/><text x="77.8492%" y="1823.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,284,470 samples, 0.53%)</title><rect x="77.5992%" y="1797" width="0.5257%" height="15" fill="rgb(222,223,25)" fg:x="189596429" fg:w="1284470"/><text x="77.8492%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,284,470 samples, 0.53%)</title><rect x="77.5992%" y="1781" width="0.5257%" height="15" fill="rgb(214,198,28)" fg:x="189596429" fg:w="1284470"/><text x="77.8492%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (1,284,470 samples, 0.53%)</title><rect x="77.5992%" y="1765" width="0.5257%" height="15" fill="rgb(230,46,43)" fg:x="189596429" fg:w="1284470"/><text x="77.8492%" y="1775.50"></text></g><g><title>cfree (1,284,470 samples, 0.53%)</title><rect x="77.5992%" y="1749" width="0.5257%" height="15" fill="rgb(233,65,53)" fg:x="189596429" fg:w="1284470"/><text x="77.8492%" y="1759.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (154,151,098 samples, 63.09%)</title><rect x="15.5591%" y="2117" width="63.0919%" height="15" fill="rgb(221,121,27)" fg:x="38015116" fg:w="154151098"/><text x="15.8091%" y="2127.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,285,315 samples, 0.53%)</title><rect x="78.1249%" y="2101" width="0.5261%" height="15" fill="rgb(247,70,47)" fg:x="190880899" fg:w="1285315"/><text x="78.3749%" y="2111.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,285,315 samples, 0.53%)</title><rect x="78.1249%" y="2085" width="0.5261%" height="15" fill="rgb(228,85,35)" fg:x="190880899" fg:w="1285315"/><text x="78.3749%" y="2095.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,285,315 samples, 0.53%)</title><rect x="78.1249%" y="2069" width="0.5261%" height="15" fill="rgb(209,50,18)" fg:x="190880899" fg:w="1285315"/><text x="78.3749%" y="2079.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,285,315 samples, 0.53%)</title><rect x="78.1249%" y="2053" width="0.5261%" height="15" fill="rgb(250,19,35)" fg:x="190880899" fg:w="1285315"/><text x="78.3749%" y="2063.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,285,315 samples, 0.53%)</title><rect x="78.1249%" y="2037" width="0.5261%" height="15" fill="rgb(253,107,29)" fg:x="190880899" fg:w="1285315"/><text x="78.3749%" y="2047.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,285,315 samples, 0.53%)</title><rect x="78.1249%" y="2021" width="0.5261%" height="15" fill="rgb(252,179,29)" fg:x="190880899" fg:w="1285315"/><text x="78.3749%" y="2031.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,285,315 samples, 0.53%)</title><rect x="78.1249%" y="2005" width="0.5261%" height="15" fill="rgb(238,194,6)" fg:x="190880899" fg:w="1285315"/><text x="78.3749%" y="2015.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim (1,073,714 samples, 0.44%)</title><rect x="78.6509%" y="2101" width="0.4395%" height="15" fill="rgb(238,164,29)" fg:x="192166214" fg:w="1073714"/><text x="78.9009%" y="2111.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (1,073,714 samples, 0.44%)</title><rect x="78.6509%" y="2085" width="0.4395%" height="15" fill="rgb(224,25,9)" fg:x="192166214" fg:w="1073714"/><text x="78.9009%" y="2095.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_reject (1,073,714 samples, 0.44%)</title><rect x="78.6509%" y="2069" width="0.4395%" height="15" fill="rgb(244,153,23)" fg:x="192166214" fg:w="1073714"/><text x="78.9009%" y="2079.50"></text></g><g><title>core::str::pattern::Searcher::next_reject (1,073,714 samples, 0.44%)</title><rect x="78.6509%" y="2053" width="0.4395%" height="15" fill="rgb(212,203,14)" fg:x="192166214" fg:w="1073714"/><text x="78.9009%" y="2063.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1,073,714 samples, 0.44%)</title><rect x="78.6509%" y="2037" width="0.4395%" height="15" fill="rgb(220,164,20)" fg:x="192166214" fg:w="1073714"/><text x="78.9009%" y="2047.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,129,630 samples, 0.46%)</title><rect x="79.0904%" y="2021" width="0.4623%" height="15" fill="rgb(222,203,48)" fg:x="193239928" fg:w="1129630"/><text x="79.3404%" y="2031.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1,129,630 samples, 0.46%)</title><rect x="79.0904%" y="2005" width="0.4623%" height="15" fill="rgb(215,159,22)" fg:x="193239928" fg:w="1129630"/><text x="79.3404%" y="2015.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1,129,630 samples, 0.46%)</title><rect x="79.0904%" y="1989" width="0.4623%" height="15" fill="rgb(216,183,47)" fg:x="193239928" fg:w="1129630"/><text x="79.3404%" y="1999.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,129,630 samples, 0.46%)</title><rect x="79.0904%" y="1973" width="0.4623%" height="15" fill="rgb(229,195,25)" fg:x="193239928" fg:w="1129630"/><text x="79.3404%" y="1983.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,129,630 samples, 0.46%)</title><rect x="79.0904%" y="1957" width="0.4623%" height="15" fill="rgb(224,132,51)" fg:x="193239928" fg:w="1129630"/><text x="79.3404%" y="1967.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,129,630 samples, 0.46%)</title><rect x="79.0904%" y="1941" width="0.4623%" height="15" fill="rgb(240,63,7)" fg:x="193239928" fg:w="1129630"/><text x="79.3404%" y="1951.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,129,630 samples, 0.46%)</title><rect x="79.0904%" y="1925" width="0.4623%" height="15" fill="rgb(249,182,41)" fg:x="193239928" fg:w="1129630"/><text x="79.3404%" y="1935.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,129,630 samples, 0.46%)</title><rect x="79.0904%" y="1909" width="0.4623%" height="15" fill="rgb(243,47,26)" fg:x="193239928" fg:w="1129630"/><text x="79.3404%" y="1919.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,077,672 samples, 0.44%)</title><rect x="79.5527%" y="1877" width="0.4411%" height="15" fill="rgb(233,48,2)" fg:x="194369558" fg:w="1077672"/><text x="79.8027%" y="1887.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,077,672 samples, 0.44%)</title><rect x="79.5527%" y="1861" width="0.4411%" height="15" fill="rgb(244,165,34)" fg:x="194369558" fg:w="1077672"/><text x="79.8027%" y="1871.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,077,672 samples, 0.44%)</title><rect x="79.5527%" y="1845" width="0.4411%" height="15" fill="rgb(207,89,7)" fg:x="194369558" fg:w="1077672"/><text x="79.8027%" y="1855.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,077,672 samples, 0.44%)</title><rect x="79.5527%" y="1829" width="0.4411%" height="15" fill="rgb(244,117,36)" fg:x="194369558" fg:w="1077672"/><text x="79.8027%" y="1839.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,077,672 samples, 0.44%)</title><rect x="79.5527%" y="1813" width="0.4411%" height="15" fill="rgb(226,144,34)" fg:x="194369558" fg:w="1077672"/><text x="79.8027%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (1,077,672 samples, 0.44%)</title><rect x="79.5527%" y="1797" width="0.4411%" height="15" fill="rgb(213,23,19)" fg:x="194369558" fg:w="1077672"/><text x="79.8027%" y="1807.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,126,696 samples, 0.46%)</title><rect x="79.9938%" y="1813" width="0.4611%" height="15" fill="rgb(217,75,12)" fg:x="195447230" fg:w="1126696"/><text x="80.2438%" y="1823.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,126,696 samples, 0.46%)</title><rect x="79.9938%" y="1797" width="0.4611%" height="15" fill="rgb(224,159,17)" fg:x="195447230" fg:w="1126696"/><text x="80.2438%" y="1807.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1813" width="0.4171%" height="15" fill="rgb(217,118,1)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1823.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1797" width="0.4171%" height="15" fill="rgb(232,180,48)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1807.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1781" width="0.4171%" height="15" fill="rgb(230,27,33)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1791.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1765" width="0.4171%" height="15" fill="rgb(205,31,21)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1775.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1749" width="0.4171%" height="15" fill="rgb(253,59,4)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1759.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1733" width="0.4171%" height="15" fill="rgb(224,201,9)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1743.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1717" width="0.4171%" height="15" fill="rgb(229,206,30)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1727.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1701" width="0.4171%" height="15" fill="rgb(212,67,47)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1711.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1685" width="0.4171%" height="15" fill="rgb(211,96,50)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1695.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1669" width="0.4171%" height="15" fill="rgb(252,114,18)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1653" width="0.4171%" height="15" fill="rgb(223,58,37)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1663.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1637" width="0.4171%" height="15" fill="rgb(237,70,4)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1621" width="0.4171%" height="15" fill="rgb(244,85,46)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1605" width="0.4171%" height="15" fill="rgb(223,39,52)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1589" width="0.4171%" height="15" fill="rgb(218,200,14)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1573" width="0.4171%" height="15" fill="rgb(208,171,16)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1557" width="0.4171%" height="15" fill="rgb(234,200,18)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1541" width="0.4171%" height="15" fill="rgb(228,45,11)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1525" width="0.4171%" height="15" fill="rgb(237,182,11)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1509" width="0.4171%" height="15" fill="rgb(241,175,49)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1493" width="0.4171%" height="15" fill="rgb(247,38,35)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1477" width="0.4171%" height="15" fill="rgb(228,39,49)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1487.50"></text></g><g><title>malloc (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1461" width="0.4171%" height="15" fill="rgb(226,101,26)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1471.50"></text></g><g><title>[libc.so.6] (1,019,027 samples, 0.42%)</title><rect x="80.4550%" y="1445" width="0.4171%" height="15" fill="rgb(206,141,19)" fg:x="196573926" fg:w="1019027"/><text x="80.7050%" y="1455.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1669" width="0.3859%" height="15" fill="rgb(211,200,13)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1679.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1653" width="0.3859%" height="15" fill="rgb(241,121,6)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1663.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1637" width="0.3859%" height="15" fill="rgb(234,221,29)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1647.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1621" width="0.3859%" height="15" fill="rgb(229,136,5)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1631.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1605" width="0.3859%" height="15" fill="rgb(238,36,11)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1615.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1589" width="0.3859%" height="15" fill="rgb(251,55,41)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1599.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1573" width="0.3859%" height="15" fill="rgb(242,34,40)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1557" width="0.3859%" height="15" fill="rgb(215,42,17)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1567.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1541" width="0.3859%" height="15" fill="rgb(207,44,46)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1551.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1525" width="0.3859%" height="15" fill="rgb(211,206,28)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1535.50"></text></g><g><title>alloc::slice::hack::to_vec (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1509" width="0.3859%" height="15" fill="rgb(237,167,16)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1519.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1493" width="0.3859%" height="15" fill="rgb(233,66,6)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1477" width="0.3859%" height="15" fill="rgb(246,123,29)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1461" width="0.3859%" height="15" fill="rgb(209,62,40)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1445" width="0.3859%" height="15" fill="rgb(218,4,25)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1429" width="0.3859%" height="15" fill="rgb(253,91,49)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1413" width="0.3859%" height="15" fill="rgb(228,155,29)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1397" width="0.3859%" height="15" fill="rgb(243,57,37)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1381" width="0.3859%" height="15" fill="rgb(244,167,17)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1391.50"></text></g><g><title>malloc (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1365" width="0.3859%" height="15" fill="rgb(207,181,38)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1375.50"></text></g><g><title>[libc.so.6] (942,806 samples, 0.39%)</title><rect x="80.8720%" y="1349" width="0.3859%" height="15" fill="rgb(211,8,23)" fg:x="197592953" fg:w="942806"/><text x="81.1220%" y="1359.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (958,237 samples, 0.39%)</title><rect x="81.6217%" y="1605" width="0.3922%" height="15" fill="rgb(235,11,44)" fg:x="199424532" fg:w="958237"/><text x="81.8717%" y="1615.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (958,237 samples, 0.39%)</title><rect x="81.6217%" y="1589" width="0.3922%" height="15" fill="rgb(248,18,52)" fg:x="199424532" fg:w="958237"/><text x="81.8717%" y="1599.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (958,237 samples, 0.39%)</title><rect x="81.6217%" y="1573" width="0.3922%" height="15" fill="rgb(208,4,7)" fg:x="199424532" fg:w="958237"/><text x="81.8717%" y="1583.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::chunks_exact (443,364 samples, 0.18%)</title><rect x="81.8324%" y="1557" width="0.1815%" height="15" fill="rgb(240,17,39)" fg:x="199939405" fg:w="443364"/><text x="82.0824%" y="1567.50"></text></g><g><title>core::slice::iter::ChunksExact&lt;T&gt;::new (443,364 samples, 0.18%)</title><rect x="81.8324%" y="1541" width="0.1815%" height="15" fill="rgb(207,170,3)" fg:x="199939405" fg:w="443364"/><text x="82.0824%" y="1551.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1605" width="0.2670%" height="15" fill="rgb(236,100,52)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1615.50"></text></g><g><title>serde::de::MapAccess::next_entry (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1589" width="0.2670%" height="15" fill="rgb(246,78,51)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1599.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1573" width="0.2670%" height="15" fill="rgb(211,17,15)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1583.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1557" width="0.2670%" height="15" fill="rgb(209,59,46)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1567.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1541" width="0.2670%" height="15" fill="rgb(210,92,25)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1551.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1525" width="0.2670%" height="15" fill="rgb(238,174,52)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1535.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1509" width="0.2670%" height="15" fill="rgb(230,73,7)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1519.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1493" width="0.2670%" height="15" fill="rgb(243,124,40)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1503.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1477" width="0.2670%" height="15" fill="rgb(244,170,11)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1487.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1461" width="0.2670%" height="15" fill="rgb(207,114,54)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1471.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1445" width="0.2670%" height="15" fill="rgb(205,42,20)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1429" width="0.2670%" height="15" fill="rgb(230,30,28)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1413" width="0.2670%" height="15" fill="rgb(205,73,54)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1423.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1397" width="0.2670%" height="15" fill="rgb(254,227,23)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1407.50"></text></g><g><title>alloc::slice::hack::to_vec (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1381" width="0.2670%" height="15" fill="rgb(228,202,34)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1391.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1365" width="0.2670%" height="15" fill="rgb(222,225,37)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1349" width="0.2670%" height="15" fill="rgb(221,14,54)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1333" width="0.2670%" height="15" fill="rgb(254,102,2)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1317" width="0.2670%" height="15" fill="rgb(232,104,17)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1301" width="0.2670%" height="15" fill="rgb(250,220,14)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1285" width="0.2670%" height="15" fill="rgb(241,158,9)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1295.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1269" width="0.2670%" height="15" fill="rgb(246,9,43)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1279.50"></text></g><g><title>alloc::alloc::alloc (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1253" width="0.2670%" height="15" fill="rgb(206,73,33)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1263.50"></text></g><g><title>malloc (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1237" width="0.2670%" height="15" fill="rgb(222,79,8)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1247.50"></text></g><g><title>[libc.so.6] (652,400 samples, 0.27%)</title><rect x="82.0139%" y="1221" width="0.2670%" height="15" fill="rgb(234,8,54)" fg:x="200382769" fg:w="652400"/><text x="82.2639%" y="1231.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (999,464 samples, 0.41%)</title><rect x="82.2809%" y="1397" width="0.4091%" height="15" fill="rgb(209,134,38)" fg:x="201035169" fg:w="999464"/><text x="82.5309%" y="1407.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (798,613 samples, 0.33%)</title><rect x="83.0365%" y="1173" width="0.3269%" height="15" fill="rgb(230,127,29)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="1183.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (798,613 samples, 0.33%)</title><rect x="83.0365%" y="1157" width="0.3269%" height="15" fill="rgb(242,44,41)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (798,613 samples, 0.33%)</title><rect x="83.0365%" y="1141" width="0.3269%" height="15" fill="rgb(222,56,43)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (798,613 samples, 0.33%)</title><rect x="83.0365%" y="1125" width="0.3269%" height="15" fill="rgb(238,39,47)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (798,613 samples, 0.33%)</title><rect x="83.0365%" y="1109" width="0.3269%" height="15" fill="rgb(226,79,43)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (798,613 samples, 0.33%)</title><rect x="83.0365%" y="1093" width="0.3269%" height="15" fill="rgb(242,105,53)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (798,613 samples, 0.33%)</title><rect x="83.0365%" y="1077" width="0.3269%" height="15" fill="rgb(251,132,46)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (798,613 samples, 0.33%)</title><rect x="83.0365%" y="1061" width="0.3269%" height="15" fill="rgb(231,77,14)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (798,613 samples, 0.33%)</title><rect x="83.0365%" y="1045" width="0.3269%" height="15" fill="rgb(240,135,9)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (798,613 samples, 0.33%)</title><rect x="83.0365%" y="1029" width="0.3269%" height="15" fill="rgb(248,109,14)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (798,613 samples, 0.33%)</title><rect x="83.0365%" y="1013" width="0.3269%" height="15" fill="rgb(227,146,52)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (798,613 samples, 0.33%)</title><rect x="83.0365%" y="997" width="0.3269%" height="15" fill="rgb(232,54,3)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (798,613 samples, 0.33%)</title><rect x="83.0365%" y="981" width="0.3269%" height="15" fill="rgb(229,201,43)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="991.50"></text></g><g><title>alloc::alloc::alloc (798,613 samples, 0.33%)</title><rect x="83.0365%" y="965" width="0.3269%" height="15" fill="rgb(252,161,33)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="975.50"></text></g><g><title>malloc (798,613 samples, 0.33%)</title><rect x="83.0365%" y="949" width="0.3269%" height="15" fill="rgb(226,146,40)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="959.50"></text></g><g><title>[libc.so.6] (798,613 samples, 0.33%)</title><rect x="83.0365%" y="933" width="0.3269%" height="15" fill="rgb(219,47,25)" fg:x="202881443" fg:w="798613"/><text x="83.2865%" y="943.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,541,125 samples, 0.63%)</title><rect x="83.0365%" y="1253" width="0.6308%" height="15" fill="rgb(250,135,13)" fg:x="202881443" fg:w="1541125"/><text x="83.2865%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,541,125 samples, 0.63%)</title><rect x="83.0365%" y="1237" width="0.6308%" height="15" fill="rgb(219,229,18)" fg:x="202881443" fg:w="1541125"/><text x="83.2865%" y="1247.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,541,125 samples, 0.63%)</title><rect x="83.0365%" y="1221" width="0.6308%" height="15" fill="rgb(217,152,27)" fg:x="202881443" fg:w="1541125"/><text x="83.2865%" y="1231.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,541,125 samples, 0.63%)</title><rect x="83.0365%" y="1205" width="0.6308%" height="15" fill="rgb(225,71,47)" fg:x="202881443" fg:w="1541125"/><text x="83.2865%" y="1215.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,541,125 samples, 0.63%)</title><rect x="83.0365%" y="1189" width="0.6308%" height="15" fill="rgb(220,139,14)" fg:x="202881443" fg:w="1541125"/><text x="83.2865%" y="1199.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (742,512 samples, 0.30%)</title><rect x="83.3634%" y="1173" width="0.3039%" height="15" fill="rgb(247,54,32)" fg:x="203680056" fg:w="742512"/><text x="83.6134%" y="1183.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (742,512 samples, 0.30%)</title><rect x="83.3634%" y="1157" width="0.3039%" height="15" fill="rgb(252,131,39)" fg:x="203680056" fg:w="742512"/><text x="83.6134%" y="1167.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (742,512 samples, 0.30%)</title><rect x="83.3634%" y="1141" width="0.3039%" height="15" fill="rgb(210,108,39)" fg:x="203680056" fg:w="742512"/><text x="83.6134%" y="1151.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (742,512 samples, 0.30%)</title><rect x="83.3634%" y="1125" width="0.3039%" height="15" fill="rgb(205,23,29)" fg:x="203680056" fg:w="742512"/><text x="83.6134%" y="1135.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (742,512 samples, 0.30%)</title><rect x="83.3634%" y="1109" width="0.3039%" height="15" fill="rgb(246,139,46)" fg:x="203680056" fg:w="742512"/><text x="83.6134%" y="1119.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (742,512 samples, 0.30%)</title><rect x="83.3634%" y="1093" width="0.3039%" height="15" fill="rgb(250,81,26)" fg:x="203680056" fg:w="742512"/><text x="83.6134%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (742,512 samples, 0.30%)</title><rect x="83.3634%" y="1077" width="0.3039%" height="15" fill="rgb(214,104,7)" fg:x="203680056" fg:w="742512"/><text x="83.6134%" y="1087.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (742,512 samples, 0.30%)</title><rect x="83.3634%" y="1061" width="0.3039%" height="15" fill="rgb(233,189,8)" fg:x="203680056" fg:w="742512"/><text x="83.6134%" y="1071.50"></text></g><g><title>core::slice::index::get_noubcheck (742,512 samples, 0.30%)</title><rect x="83.3634%" y="1045" width="0.3039%" height="15" fill="rgb(228,141,17)" fg:x="203680056" fg:w="742512"/><text x="83.6134%" y="1055.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,050,600 samples, 0.43%)</title><rect x="83.6673%" y="1189" width="0.4300%" height="15" fill="rgb(247,157,1)" fg:x="204422568" fg:w="1050600"/><text x="83.9173%" y="1199.50"></text></g><g><title>serde::de::MapAccess::next_value (1,050,600 samples, 0.43%)</title><rect x="83.6673%" y="1173" width="0.4300%" height="15" fill="rgb(249,225,5)" fg:x="204422568" fg:w="1050600"/><text x="83.9173%" y="1183.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,050,600 samples, 0.43%)</title><rect x="83.6673%" y="1157" width="0.4300%" height="15" fill="rgb(242,55,13)" fg:x="204422568" fg:w="1050600"/><text x="83.9173%" y="1167.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,050,600 samples, 0.43%)</title><rect x="83.6673%" y="1141" width="0.4300%" height="15" fill="rgb(230,49,50)" fg:x="204422568" fg:w="1050600"/><text x="83.9173%" y="1151.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,050,600 samples, 0.43%)</title><rect x="83.6673%" y="1125" width="0.4300%" height="15" fill="rgb(241,111,38)" fg:x="204422568" fg:w="1050600"/><text x="83.9173%" y="1135.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,050,600 samples, 0.43%)</title><rect x="83.6673%" y="1109" width="0.4300%" height="15" fill="rgb(252,155,4)" fg:x="204422568" fg:w="1050600"/><text x="83.9173%" y="1119.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,050,600 samples, 0.43%)</title><rect x="83.6673%" y="1093" width="0.4300%" height="15" fill="rgb(212,69,32)" fg:x="204422568" fg:w="1050600"/><text x="83.9173%" y="1103.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,050,600 samples, 0.43%)</title><rect x="83.6673%" y="1077" width="0.4300%" height="15" fill="rgb(243,107,47)" fg:x="204422568" fg:w="1050600"/><text x="83.9173%" y="1087.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,050,600 samples, 0.43%)</title><rect x="83.6673%" y="1061" width="0.4300%" height="15" fill="rgb(247,130,12)" fg:x="204422568" fg:w="1050600"/><text x="83.9173%" y="1071.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1,050,600 samples, 0.43%)</title><rect x="83.6673%" y="1045" width="0.4300%" height="15" fill="rgb(233,74,16)" fg:x="204422568" fg:w="1050600"/><text x="83.9173%" y="1055.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,003,708 samples, 0.41%)</title><rect x="84.0973%" y="629" width="0.4108%" height="15" fill="rgb(208,58,18)" fg:x="205473168" fg:w="1003708"/><text x="84.3473%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,003,708 samples, 0.41%)</title><rect x="84.0973%" y="613" width="0.4108%" height="15" fill="rgb(242,225,1)" fg:x="205473168" fg:w="1003708"/><text x="84.3473%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,003,708 samples, 0.41%)</title><rect x="84.0973%" y="597" width="0.4108%" height="15" fill="rgb(249,39,40)" fg:x="205473168" fg:w="1003708"/><text x="84.3473%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,003,708 samples, 0.41%)</title><rect x="84.0973%" y="581" width="0.4108%" height="15" fill="rgb(207,72,44)" fg:x="205473168" fg:w="1003708"/><text x="84.3473%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,003,708 samples, 0.41%)</title><rect x="84.0973%" y="565" width="0.4108%" height="15" fill="rgb(215,193,12)" fg:x="205473168" fg:w="1003708"/><text x="84.3473%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,003,708 samples, 0.41%)</title><rect x="84.0973%" y="549" width="0.4108%" height="15" fill="rgb(248,41,39)" fg:x="205473168" fg:w="1003708"/><text x="84.3473%" y="559.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,003,708 samples, 0.41%)</title><rect x="84.0973%" y="533" width="0.4108%" height="15" fill="rgb(253,85,4)" fg:x="205473168" fg:w="1003708"/><text x="84.3473%" y="543.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,003,708 samples, 0.41%)</title><rect x="84.0973%" y="517" width="0.4108%" height="15" fill="rgb(243,70,31)" fg:x="205473168" fg:w="1003708"/><text x="84.3473%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,003,708 samples, 0.41%)</title><rect x="84.0973%" y="501" width="0.4108%" height="15" fill="rgb(253,195,26)" fg:x="205473168" fg:w="1003708"/><text x="84.3473%" y="511.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,003,708 samples, 0.41%)</title><rect x="84.0973%" y="485" width="0.4108%" height="15" fill="rgb(243,42,11)" fg:x="205473168" fg:w="1003708"/><text x="84.3473%" y="495.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,003,708 samples, 0.41%)</title><rect x="84.0973%" y="469" width="0.4108%" height="15" fill="rgb(239,66,17)" fg:x="205473168" fg:w="1003708"/><text x="84.3473%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,003,708 samples, 0.41%)</title><rect x="84.0973%" y="453" width="0.4108%" height="15" fill="rgb(217,132,21)" fg:x="205473168" fg:w="1003708"/><text x="84.3473%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="565" width="0.4150%" height="15" fill="rgb(252,202,21)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="575.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="549" width="0.4150%" height="15" fill="rgb(233,98,36)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="559.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="533" width="0.4150%" height="15" fill="rgb(216,153,54)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="517" width="0.4150%" height="15" fill="rgb(250,99,7)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="501" width="0.4150%" height="15" fill="rgb(207,56,50)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="485" width="0.4150%" height="15" fill="rgb(244,61,34)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="469" width="0.4150%" height="15" fill="rgb(241,50,38)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="479.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="453" width="0.4150%" height="15" fill="rgb(212,166,30)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="437" width="0.4150%" height="15" fill="rgb(249,127,32)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="421" width="0.4150%" height="15" fill="rgb(209,103,0)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="431.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="405" width="0.4150%" height="15" fill="rgb(238,209,51)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="389" width="0.4150%" height="15" fill="rgb(237,56,23)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="373" width="0.4150%" height="15" fill="rgb(215,153,46)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="357" width="0.4150%" height="15" fill="rgb(224,49,31)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="341" width="0.4150%" height="15" fill="rgb(250,18,42)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="325" width="0.4150%" height="15" fill="rgb(215,176,39)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="309" width="0.4150%" height="15" fill="rgb(223,77,29)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="293" width="0.4150%" height="15" fill="rgb(234,94,52)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="277" width="0.4150%" height="15" fill="rgb(220,154,50)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="261" width="0.4150%" height="15" fill="rgb(212,11,10)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="245" width="0.4150%" height="15" fill="rgb(205,166,19)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="229" width="0.4150%" height="15" fill="rgb(244,198,16)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="213" width="0.4150%" height="15" fill="rgb(219,69,12)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="223.50"></text></g><g><title>malloc (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="197" width="0.4150%" height="15" fill="rgb(245,30,7)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="207.50"></text></g><g><title>[libc.so.6] (1,013,945 samples, 0.41%)</title><rect x="84.5081%" y="181" width="0.4150%" height="15" fill="rgb(218,221,48)" fg:x="206476876" fg:w="1013945"/><text x="84.7581%" y="191.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,308,498 samples, 2.99%)</title><rect x="83.0365%" y="1285" width="2.9913%" height="15" fill="rgb(216,66,15)" fg:x="202881443" fg:w="7308498"/><text x="83.2865%" y="1295.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (7,308,498 samples, 2.99%)</title><rect x="83.0365%" y="1269" width="2.9913%" height="15" fill="rgb(226,122,50)" fg:x="202881443" fg:w="7308498"/><text x="83.2865%" y="1279.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,767,373 samples, 2.36%)</title><rect x="83.6673%" y="1253" width="2.3605%" height="15" fill="rgb(239,156,16)" fg:x="204422568" fg:w="5767373"/><text x="83.9173%" y="1263.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,767,373 samples, 2.36%)</title><rect x="83.6673%" y="1237" width="2.3605%" height="15" fill="rgb(224,27,38)" fg:x="204422568" fg:w="5767373"/><text x="83.9173%" y="1247.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,767,373 samples, 2.36%)</title><rect x="83.6673%" y="1221" width="2.3605%" height="15" fill="rgb(224,39,27)" fg:x="204422568" fg:w="5767373"/><text x="83.9173%" y="1231.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,767,373 samples, 2.36%)</title><rect x="83.6673%" y="1205" width="2.3605%" height="15" fill="rgb(215,92,29)" fg:x="204422568" fg:w="5767373"/><text x="83.9173%" y="1215.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="1189" width="1.9305%" height="15" fill="rgb(207,159,16)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="1199.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="1173" width="1.9305%" height="15" fill="rgb(238,163,47)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="1183.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="1157" width="1.9305%" height="15" fill="rgb(219,91,49)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="1167.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="1141" width="1.9305%" height="15" fill="rgb(227,167,31)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="1151.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="1125" width="1.9305%" height="15" fill="rgb(234,80,54)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="1135.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="1109" width="1.9305%" height="15" fill="rgb(212,114,2)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="1119.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="1093" width="1.9305%" height="15" fill="rgb(234,50,24)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="1103.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="1077" width="1.9305%" height="15" fill="rgb(221,68,8)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="1087.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="1061" width="1.9305%" height="15" fill="rgb(254,180,31)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="1071.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="1045" width="1.9305%" height="15" fill="rgb(247,130,50)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="1055.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="1029" width="1.9305%" height="15" fill="rgb(211,109,4)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="1039.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="1013" width="1.9305%" height="15" fill="rgb(238,50,21)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="1023.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="997" width="1.9305%" height="15" fill="rgb(225,57,45)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="1007.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="981" width="1.9305%" height="15" fill="rgb(209,196,50)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="991.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="965" width="1.9305%" height="15" fill="rgb(242,140,13)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="975.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="949" width="1.9305%" height="15" fill="rgb(217,111,7)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="959.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="933" width="1.9305%" height="15" fill="rgb(253,193,51)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="943.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="917" width="1.9305%" height="15" fill="rgb(252,70,29)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="927.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="901" width="1.9305%" height="15" fill="rgb(232,127,12)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="911.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="885" width="1.9305%" height="15" fill="rgb(211,180,21)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="895.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="869" width="1.9305%" height="15" fill="rgb(229,72,13)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="879.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="853" width="1.9305%" height="15" fill="rgb(240,211,49)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="863.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="837" width="1.9305%" height="15" fill="rgb(219,149,40)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="847.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="821" width="1.9305%" height="15" fill="rgb(210,127,46)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="831.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="805" width="1.9305%" height="15" fill="rgb(220,106,7)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="815.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="789" width="1.9305%" height="15" fill="rgb(249,31,22)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="799.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="773" width="1.9305%" height="15" fill="rgb(253,1,49)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="783.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="757" width="1.9305%" height="15" fill="rgb(227,144,33)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="767.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="741" width="1.9305%" height="15" fill="rgb(249,163,44)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="751.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="725" width="1.9305%" height="15" fill="rgb(234,15,39)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="735.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="709" width="1.9305%" height="15" fill="rgb(207,66,16)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="719.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="693" width="1.9305%" height="15" fill="rgb(233,112,24)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="703.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="677" width="1.9305%" height="15" fill="rgb(230,90,22)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="687.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="661" width="1.9305%" height="15" fill="rgb(229,61,13)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="671.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (4,716,773 samples, 1.93%)</title><rect x="84.0973%" y="645" width="1.9305%" height="15" fill="rgb(225,57,24)" fg:x="205473168" fg:w="4716773"/><text x="84.3473%" y="655.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,713,065 samples, 1.52%)</title><rect x="84.5081%" y="629" width="1.5197%" height="15" fill="rgb(208,169,48)" fg:x="206476876" fg:w="3713065"/><text x="84.7581%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,713,065 samples, 1.52%)</title><rect x="84.5081%" y="613" width="1.5197%" height="15" fill="rgb(244,218,51)" fg:x="206476876" fg:w="3713065"/><text x="84.7581%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,713,065 samples, 1.52%)</title><rect x="84.5081%" y="597" width="1.5197%" height="15" fill="rgb(214,148,10)" fg:x="206476876" fg:w="3713065"/><text x="84.7581%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,713,065 samples, 1.52%)</title><rect x="84.5081%" y="581" width="1.5197%" height="15" fill="rgb(225,174,27)" fg:x="206476876" fg:w="3713065"/><text x="84.7581%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,699,120 samples, 1.10%)</title><rect x="84.9231%" y="565" width="1.1047%" height="15" fill="rgb(230,96,26)" fg:x="207490821" fg:w="2699120"/><text x="85.1731%" y="575.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,699,120 samples, 1.10%)</title><rect x="84.9231%" y="549" width="1.1047%" height="15" fill="rgb(232,10,30)" fg:x="207490821" fg:w="2699120"/><text x="85.1731%" y="559.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,699,120 samples, 1.10%)</title><rect x="84.9231%" y="533" width="1.1047%" height="15" fill="rgb(222,8,50)" fg:x="207490821" fg:w="2699120"/><text x="85.1731%" y="543.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,699,120 samples, 1.10%)</title><rect x="84.9231%" y="517" width="1.1047%" height="15" fill="rgb(213,81,27)" fg:x="207490821" fg:w="2699120"/><text x="85.1731%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,699,120 samples, 1.10%)</title><rect x="84.9231%" y="501" width="1.1047%" height="15" fill="rgb(245,50,10)" fg:x="207490821" fg:w="2699120"/><text x="85.1731%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,699,120 samples, 1.10%)</title><rect x="84.9231%" y="485" width="1.1047%" height="15" fill="rgb(216,100,18)" fg:x="207490821" fg:w="2699120"/><text x="85.1731%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,592,665 samples, 0.65%)</title><rect x="85.3759%" y="469" width="0.6519%" height="15" fill="rgb(236,147,54)" fg:x="208597276" fg:w="1592665"/><text x="85.6259%" y="479.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,592,665 samples, 0.65%)</title><rect x="85.3759%" y="453" width="0.6519%" height="15" fill="rgb(205,143,26)" fg:x="208597276" fg:w="1592665"/><text x="85.6259%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,592,665 samples, 0.65%)</title><rect x="85.3759%" y="437" width="0.6519%" height="15" fill="rgb(236,26,9)" fg:x="208597276" fg:w="1592665"/><text x="85.6259%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,592,665 samples, 0.65%)</title><rect x="85.3759%" y="421" width="0.6519%" height="15" fill="rgb(221,165,53)" fg:x="208597276" fg:w="1592665"/><text x="85.6259%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,592,665 samples, 0.65%)</title><rect x="85.3759%" y="405" width="0.6519%" height="15" fill="rgb(214,110,17)" fg:x="208597276" fg:w="1592665"/><text x="85.6259%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (901,529 samples, 0.37%)</title><rect x="85.6588%" y="389" width="0.3690%" height="15" fill="rgb(237,197,12)" fg:x="209288412" fg:w="901529"/><text x="85.9088%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (901,529 samples, 0.37%)</title><rect x="85.6588%" y="373" width="0.3690%" height="15" fill="rgb(205,84,17)" fg:x="209288412" fg:w="901529"/><text x="85.9088%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (901,529 samples, 0.37%)</title><rect x="85.6588%" y="357" width="0.3690%" height="15" fill="rgb(237,18,45)" fg:x="209288412" fg:w="901529"/><text x="85.9088%" y="367.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (901,529 samples, 0.37%)</title><rect x="85.6588%" y="341" width="0.3690%" height="15" fill="rgb(221,87,14)" fg:x="209288412" fg:w="901529"/><text x="85.9088%" y="351.50"></text></g><g><title>core::intrinsics::copy (901,529 samples, 0.37%)</title><rect x="85.6588%" y="325" width="0.3690%" height="15" fill="rgb(238,186,15)" fg:x="209288412" fg:w="901529"/><text x="85.9088%" y="335.50"></text></g><g><title>[libc.so.6] (901,529 samples, 0.37%)</title><rect x="85.6588%" y="309" width="0.3690%" height="15" fill="rgb(208,115,11)" fg:x="209288412" fg:w="901529"/><text x="85.9088%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (882,803 samples, 0.36%)</title><rect x="86.0278%" y="1253" width="0.3613%" height="15" fill="rgb(254,175,0)" fg:x="210189941" fg:w="882803"/><text x="86.2778%" y="1263.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (882,803 samples, 0.36%)</title><rect x="86.0278%" y="1237" width="0.3613%" height="15" fill="rgb(227,24,42)" fg:x="210189941" fg:w="882803"/><text x="86.2778%" y="1247.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (882,803 samples, 0.36%)</title><rect x="86.0278%" y="1221" width="0.3613%" height="15" fill="rgb(223,211,37)" fg:x="210189941" fg:w="882803"/><text x="86.2778%" y="1231.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (882,803 samples, 0.36%)</title><rect x="86.0278%" y="1205" width="0.3613%" height="15" fill="rgb(235,49,27)" fg:x="210189941" fg:w="882803"/><text x="86.2778%" y="1215.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,106,062 samples, 4.55%)</title><rect x="82.2809%" y="1605" width="4.5456%" height="15" fill="rgb(254,97,51)" fg:x="201035169" fg:w="11106062"/><text x="82.5309%" y="1615.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (11,106,062 samples, 4.55%)</title><rect x="82.2809%" y="1589" width="4.5456%" height="15" fill="rgb(249,51,40)" fg:x="201035169" fg:w="11106062"/><text x="82.5309%" y="1599.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11,106,062 samples, 4.55%)</title><rect x="82.2809%" y="1573" width="4.5456%" height="15" fill="rgb(210,128,45)" fg:x="201035169" fg:w="11106062"/><text x="82.5309%" y="1583.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,106,062 samples, 4.55%)</title><rect x="82.2809%" y="1557" width="4.5456%" height="15" fill="rgb(224,137,50)" fg:x="201035169" fg:w="11106062"/><text x="82.5309%" y="1567.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,106,062 samples, 4.55%)</title><rect x="82.2809%" y="1541" width="4.5456%" height="15" fill="rgb(242,15,9)" fg:x="201035169" fg:w="11106062"/><text x="82.5309%" y="1551.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,106,062 samples, 4.55%)</title><rect x="82.2809%" y="1525" width="4.5456%" height="15" fill="rgb(233,187,41)" fg:x="201035169" fg:w="11106062"/><text x="82.5309%" y="1535.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,106,062 samples, 4.55%)</title><rect x="82.2809%" y="1509" width="4.5456%" height="15" fill="rgb(227,2,29)" fg:x="201035169" fg:w="11106062"/><text x="82.5309%" y="1519.50">&lt;serd..</text></g><g><title>serde::de::MapAccess::next_entry (11,106,062 samples, 4.55%)</title><rect x="82.2809%" y="1493" width="4.5456%" height="15" fill="rgb(222,70,3)" fg:x="201035169" fg:w="11106062"/><text x="82.5309%" y="1503.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,106,062 samples, 4.55%)</title><rect x="82.2809%" y="1477" width="4.5456%" height="15" fill="rgb(213,11,42)" fg:x="201035169" fg:w="11106062"/><text x="82.5309%" y="1487.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,106,062 samples, 4.55%)</title><rect x="82.2809%" y="1461" width="4.5456%" height="15" fill="rgb(225,150,9)" fg:x="201035169" fg:w="11106062"/><text x="82.5309%" y="1471.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,106,062 samples, 4.55%)</title><rect x="82.2809%" y="1445" width="4.5456%" height="15" fill="rgb(230,162,45)" fg:x="201035169" fg:w="11106062"/><text x="82.5309%" y="1455.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,106,062 samples, 4.55%)</title><rect x="82.2809%" y="1429" width="4.5456%" height="15" fill="rgb(222,14,52)" fg:x="201035169" fg:w="11106062"/><text x="82.5309%" y="1439.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,106,062 samples, 4.55%)</title><rect x="82.2809%" y="1413" width="4.5456%" height="15" fill="rgb(254,198,14)" fg:x="201035169" fg:w="11106062"/><text x="82.5309%" y="1423.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (10,106,598 samples, 4.14%)</title><rect x="82.6899%" y="1397" width="4.1365%" height="15" fill="rgb(220,217,30)" fg:x="202034633" fg:w="10106598"/><text x="82.9399%" y="1407.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (10,106,598 samples, 4.14%)</title><rect x="82.6899%" y="1381" width="4.1365%" height="15" fill="rgb(215,146,41)" fg:x="202034633" fg:w="10106598"/><text x="82.9399%" y="1391.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (10,106,598 samples, 4.14%)</title><rect x="82.6899%" y="1365" width="4.1365%" height="15" fill="rgb(217,27,36)" fg:x="202034633" fg:w="10106598"/><text x="82.9399%" y="1375.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,106,598 samples, 4.14%)</title><rect x="82.6899%" y="1349" width="4.1365%" height="15" fill="rgb(219,218,39)" fg:x="202034633" fg:w="10106598"/><text x="82.9399%" y="1359.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,106,598 samples, 4.14%)</title><rect x="82.6899%" y="1333" width="4.1365%" height="15" fill="rgb(219,4,42)" fg:x="202034633" fg:w="10106598"/><text x="82.9399%" y="1343.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,106,598 samples, 4.14%)</title><rect x="82.6899%" y="1317" width="4.1365%" height="15" fill="rgb(249,119,36)" fg:x="202034633" fg:w="10106598"/><text x="82.9399%" y="1327.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,106,598 samples, 4.14%)</title><rect x="82.6899%" y="1301" width="4.1365%" height="15" fill="rgb(209,23,33)" fg:x="202034633" fg:w="10106598"/><text x="82.9399%" y="1311.50">&lt;serd..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,951,290 samples, 0.80%)</title><rect x="86.0278%" y="1285" width="0.7986%" height="15" fill="rgb(211,10,0)" fg:x="210189941" fg:w="1951290"/><text x="86.2778%" y="1295.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,951,290 samples, 0.80%)</title><rect x="86.0278%" y="1269" width="0.7986%" height="15" fill="rgb(208,99,37)" fg:x="210189941" fg:w="1951290"/><text x="86.2778%" y="1279.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,068,487 samples, 0.44%)</title><rect x="86.3891%" y="1253" width="0.4373%" height="15" fill="rgb(213,132,31)" fg:x="211072744" fg:w="1068487"/><text x="86.6391%" y="1263.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,068,487 samples, 0.44%)</title><rect x="86.3891%" y="1237" width="0.4373%" height="15" fill="rgb(243,129,40)" fg:x="211072744" fg:w="1068487"/><text x="86.6391%" y="1247.50"></text></g><g><title>serde::de::MapAccess::next_entry (15,475,345 samples, 6.33%)</title><rect x="80.8720%" y="1701" width="6.3338%" height="15" fill="rgb(210,66,33)" fg:x="197592953" fg:w="15475345"/><text x="81.1220%" y="1711.50">serde::d..</text></g><g><title>serde::de::MapAccess::next_entry_seed (15,475,345 samples, 6.33%)</title><rect x="80.8720%" y="1685" width="6.3338%" height="15" fill="rgb(209,189,4)" fg:x="197592953" fg:w="15475345"/><text x="81.1220%" y="1695.50">serde::d..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (14,532,539 samples, 5.95%)</title><rect x="81.2579%" y="1669" width="5.9480%" height="15" fill="rgb(214,107,37)" fg:x="198535759" fg:w="14532539"/><text x="81.5079%" y="1679.50">&lt;serde_j..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14,532,539 samples, 5.95%)</title><rect x="81.2579%" y="1653" width="5.9480%" height="15" fill="rgb(245,88,54)" fg:x="198535759" fg:w="14532539"/><text x="81.5079%" y="1663.50">&lt;core::m..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,532,539 samples, 5.95%)</title><rect x="81.2579%" y="1637" width="5.9480%" height="15" fill="rgb(205,146,20)" fg:x="198535759" fg:w="14532539"/><text x="81.5079%" y="1647.50">serde_js..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,532,539 samples, 5.95%)</title><rect x="81.2579%" y="1621" width="5.9480%" height="15" fill="rgb(220,161,25)" fg:x="198535759" fg:w="14532539"/><text x="81.5079%" y="1631.50">&lt;&amp;mut se..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_any_number (927,067 samples, 0.38%)</title><rect x="86.8264%" y="1605" width="0.3794%" height="15" fill="rgb(215,152,15)" fg:x="212141231" fg:w="927067"/><text x="87.0764%" y="1615.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (927,067 samples, 0.38%)</title><rect x="86.8264%" y="1589" width="0.3794%" height="15" fill="rgb(233,192,44)" fg:x="212141231" fg:w="927067"/><text x="87.0764%" y="1599.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (927,067 samples, 0.38%)</title><rect x="86.8264%" y="1573" width="0.3794%" height="15" fill="rgb(240,170,46)" fg:x="212141231" fg:w="927067"/><text x="87.0764%" y="1583.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (927,067 samples, 0.38%)</title><rect x="86.8264%" y="1557" width="0.3794%" height="15" fill="rgb(207,104,33)" fg:x="212141231" fg:w="927067"/><text x="87.0764%" y="1567.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (927,067 samples, 0.38%)</title><rect x="86.8264%" y="1541" width="0.3794%" height="15" fill="rgb(219,21,39)" fg:x="212141231" fg:w="927067"/><text x="87.0764%" y="1551.50"></text></g><g><title>serde::de::MapAccess::next_entry (19,820,703 samples, 8.11%)</title><rect x="79.5527%" y="2021" width="8.1123%" height="15" fill="rgb(214,133,29)" fg:x="194369558" fg:w="19820703"/><text x="79.8027%" y="2031.50">serde::de::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (19,820,703 samples, 8.11%)</title><rect x="79.5527%" y="2005" width="8.1123%" height="15" fill="rgb(226,93,6)" fg:x="194369558" fg:w="19820703"/><text x="79.8027%" y="2015.50">serde::de::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (19,820,703 samples, 8.11%)</title><rect x="79.5527%" y="1989" width="8.1123%" height="15" fill="rgb(252,222,34)" fg:x="194369558" fg:w="19820703"/><text x="79.8027%" y="1999.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19,820,703 samples, 8.11%)</title><rect x="79.5527%" y="1973" width="8.1123%" height="15" fill="rgb(252,92,48)" fg:x="194369558" fg:w="19820703"/><text x="79.8027%" y="1983.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,820,703 samples, 8.11%)</title><rect x="79.5527%" y="1957" width="8.1123%" height="15" fill="rgb(245,223,24)" fg:x="194369558" fg:w="19820703"/><text x="79.8027%" y="1967.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,820,703 samples, 8.11%)</title><rect x="79.5527%" y="1941" width="8.1123%" height="15" fill="rgb(205,176,3)" fg:x="194369558" fg:w="19820703"/><text x="79.8027%" y="1951.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19,820,703 samples, 8.11%)</title><rect x="79.5527%" y="1925" width="8.1123%" height="15" fill="rgb(235,151,15)" fg:x="194369558" fg:w="19820703"/><text x="79.8027%" y="1935.50">&lt;serde_json..</text></g><g><title>serde::de::MapAccess::next_entry (19,820,703 samples, 8.11%)</title><rect x="79.5527%" y="1909" width="8.1123%" height="15" fill="rgb(237,209,11)" fg:x="194369558" fg:w="19820703"/><text x="79.8027%" y="1919.50">serde::de::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (19,820,703 samples, 8.11%)</title><rect x="79.5527%" y="1893" width="8.1123%" height="15" fill="rgb(243,227,24)" fg:x="194369558" fg:w="19820703"/><text x="79.8027%" y="1903.50">serde::de::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (18,743,031 samples, 7.67%)</title><rect x="79.9938%" y="1877" width="7.6713%" height="15" fill="rgb(239,193,16)" fg:x="195447230" fg:w="18743031"/><text x="80.2438%" y="1887.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18,743,031 samples, 7.67%)</title><rect x="79.9938%" y="1861" width="7.6713%" height="15" fill="rgb(231,27,9)" fg:x="195447230" fg:w="18743031"/><text x="80.2438%" y="1871.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18,743,031 samples, 7.67%)</title><rect x="79.9938%" y="1845" width="7.6713%" height="15" fill="rgb(219,169,10)" fg:x="195447230" fg:w="18743031"/><text x="80.2438%" y="1855.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18,743,031 samples, 7.67%)</title><rect x="79.9938%" y="1829" width="7.6713%" height="15" fill="rgb(244,229,43)" fg:x="195447230" fg:w="18743031"/><text x="80.2438%" y="1839.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (16,597,308 samples, 6.79%)</title><rect x="80.8720%" y="1813" width="6.7930%" height="15" fill="rgb(254,38,20)" fg:x="197592953" fg:w="16597308"/><text x="81.1220%" y="1823.50">&lt;serde_js..</text></g><g><title>serde::de::SeqAccess::next_element (16,597,308 samples, 6.79%)</title><rect x="80.8720%" y="1797" width="6.7930%" height="15" fill="rgb(250,47,30)" fg:x="197592953" fg:w="16597308"/><text x="81.1220%" y="1807.50">serde::de..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (16,597,308 samples, 6.79%)</title><rect x="80.8720%" y="1781" width="6.7930%" height="15" fill="rgb(224,124,36)" fg:x="197592953" fg:w="16597308"/><text x="81.1220%" y="1791.50">&lt;serde_js..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (16,597,308 samples, 6.79%)</title><rect x="80.8720%" y="1765" width="6.7930%" height="15" fill="rgb(246,68,51)" fg:x="197592953" fg:w="16597308"/><text x="81.1220%" y="1775.50">&lt;core::ma..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (16,597,308 samples, 6.79%)</title><rect x="80.8720%" y="1749" width="6.7930%" height="15" fill="rgb(253,43,49)" fg:x="197592953" fg:w="16597308"/><text x="81.1220%" y="1759.50">serde_jso..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16,597,308 samples, 6.79%)</title><rect x="80.8720%" y="1733" width="6.7930%" height="15" fill="rgb(219,54,36)" fg:x="197592953" fg:w="16597308"/><text x="81.1220%" y="1743.50">&lt;&amp;mut ser..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16,597,308 samples, 6.79%)</title><rect x="80.8720%" y="1717" width="6.7930%" height="15" fill="rgb(227,133,34)" fg:x="197592953" fg:w="16597308"/><text x="81.1220%" y="1727.50">&lt;serde_js..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,121,963 samples, 0.46%)</title><rect x="87.2059%" y="1701" width="0.4592%" height="15" fill="rgb(247,227,15)" fg:x="213068298" fg:w="1121963"/><text x="87.4559%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,121,963 samples, 0.46%)</title><rect x="87.2059%" y="1685" width="0.4592%" height="15" fill="rgb(229,96,14)" fg:x="213068298" fg:w="1121963"/><text x="87.4559%" y="1695.50"></text></g><g><title>benchmark::parse_web_layout_trace (24,285,970 samples, 9.94%)</title><rect x="78.6509%" y="2117" width="9.9399%" height="15" fill="rgb(220,79,17)" fg:x="192166214" fg:w="24285970"/><text x="78.9009%" y="2127.50">benchmark::par..</text></g><g><title>serde_json::de::from_str (23,212,256 samples, 9.50%)</title><rect x="79.0904%" y="2101" width="9.5005%" height="15" fill="rgb(205,131,53)" fg:x="193239928" fg:w="23212256"/><text x="79.3404%" y="2111.50">serde_json::de..</text></g><g><title>serde_json::de::from_trait (23,212,256 samples, 9.50%)</title><rect x="79.0904%" y="2085" width="9.5005%" height="15" fill="rgb(209,50,29)" fg:x="193239928" fg:w="23212256"/><text x="79.3404%" y="2095.50">serde_json::de..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (23,212,256 samples, 9.50%)</title><rect x="79.0904%" y="2069" width="9.5005%" height="15" fill="rgb(245,86,46)" fg:x="193239928" fg:w="23212256"/><text x="79.3404%" y="2079.50">serde_json::va..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23,212,256 samples, 9.50%)</title><rect x="79.0904%" y="2053" width="9.5005%" height="15" fill="rgb(235,66,46)" fg:x="193239928" fg:w="23212256"/><text x="79.3404%" y="2063.50">&lt;&amp;mut serde_js..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23,212,256 samples, 9.50%)</title><rect x="79.0904%" y="2037" width="9.5005%" height="15" fill="rgb(232,148,31)" fg:x="193239928" fg:w="23212256"/><text x="79.3404%" y="2047.50">&lt;serde_json::v..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,261,923 samples, 0.93%)</title><rect x="87.6651%" y="2021" width="0.9258%" height="15" fill="rgb(217,149,8)" fg:x="214190261" fg:w="2261923"/><text x="87.9151%" y="2031.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,261,923 samples, 0.93%)</title><rect x="87.6651%" y="2005" width="0.9258%" height="15" fill="rgb(209,183,11)" fg:x="214190261" fg:w="2261923"/><text x="87.9151%" y="2015.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2,261,923 samples, 0.93%)</title><rect x="87.6651%" y="1989" width="0.9258%" height="15" fill="rgb(208,55,20)" fg:x="214190261" fg:w="2261923"/><text x="87.9151%" y="1999.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (2,261,923 samples, 0.93%)</title><rect x="87.6651%" y="1973" width="0.9258%" height="15" fill="rgb(218,39,14)" fg:x="214190261" fg:w="2261923"/><text x="87.9151%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2,261,923 samples, 0.93%)</title><rect x="87.6651%" y="1957" width="0.9258%" height="15" fill="rgb(216,169,33)" fg:x="214190261" fg:w="2261923"/><text x="87.9151%" y="1967.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1,132,742 samples, 0.46%)</title><rect x="88.1272%" y="1941" width="0.4636%" height="15" fill="rgb(233,80,24)" fg:x="215319442" fg:w="1132742"/><text x="88.3772%" y="1951.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,132,742 samples, 0.46%)</title><rect x="88.1272%" y="1925" width="0.4636%" height="15" fill="rgb(213,179,31)" fg:x="215319442" fg:w="1132742"/><text x="88.3772%" y="1935.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,223,853 samples, 0.50%)</title><rect x="88.5908%" y="1765" width="0.5009%" height="15" fill="rgb(209,19,5)" fg:x="216452184" fg:w="1223853"/><text x="88.8408%" y="1775.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,223,853 samples, 0.50%)</title><rect x="88.5908%" y="1749" width="0.5009%" height="15" fill="rgb(219,18,35)" fg:x="216452184" fg:w="1223853"/><text x="88.8408%" y="1759.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,223,853 samples, 0.50%)</title><rect x="88.5908%" y="1733" width="0.5009%" height="15" fill="rgb(209,169,16)" fg:x="216452184" fg:w="1223853"/><text x="88.8408%" y="1743.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,223,853 samples, 0.50%)</title><rect x="88.5908%" y="1717" width="0.5009%" height="15" fill="rgb(245,90,51)" fg:x="216452184" fg:w="1223853"/><text x="88.8408%" y="1727.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,223,853 samples, 0.50%)</title><rect x="88.5908%" y="1701" width="0.5009%" height="15" fill="rgb(220,99,45)" fg:x="216452184" fg:w="1223853"/><text x="88.8408%" y="1711.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,223,853 samples, 0.50%)</title><rect x="88.5908%" y="1685" width="0.5009%" height="15" fill="rgb(249,89,25)" fg:x="216452184" fg:w="1223853"/><text x="88.8408%" y="1695.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,223,853 samples, 0.50%)</title><rect x="88.5908%" y="1669" width="0.5009%" height="15" fill="rgb(239,193,0)" fg:x="216452184" fg:w="1223853"/><text x="88.8408%" y="1679.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,223,853 samples, 0.50%)</title><rect x="88.5908%" y="1653" width="0.5009%" height="15" fill="rgb(231,126,1)" fg:x="216452184" fg:w="1223853"/><text x="88.8408%" y="1663.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,234,410 samples, 0.51%)</title><rect x="89.0918%" y="1749" width="0.5052%" height="15" fill="rgb(243,166,3)" fg:x="217676037" fg:w="1234410"/><text x="89.3418%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,234,410 samples, 0.51%)</title><rect x="89.0918%" y="1733" width="0.5052%" height="15" fill="rgb(223,22,34)" fg:x="217676037" fg:w="1234410"/><text x="89.3418%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,234,410 samples, 0.51%)</title><rect x="89.0918%" y="1717" width="0.5052%" height="15" fill="rgb(251,52,51)" fg:x="217676037" fg:w="1234410"/><text x="89.3418%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,234,410 samples, 0.51%)</title><rect x="89.0918%" y="1701" width="0.5052%" height="15" fill="rgb(221,165,28)" fg:x="217676037" fg:w="1234410"/><text x="89.3418%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,234,410 samples, 0.51%)</title><rect x="89.0918%" y="1685" width="0.5052%" height="15" fill="rgb(218,121,47)" fg:x="217676037" fg:w="1234410"/><text x="89.3418%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,234,410 samples, 0.51%)</title><rect x="89.0918%" y="1669" width="0.5052%" height="15" fill="rgb(209,120,9)" fg:x="217676037" fg:w="1234410"/><text x="89.3418%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,234,410 samples, 0.51%)</title><rect x="89.0918%" y="1653" width="0.5052%" height="15" fill="rgb(236,68,12)" fg:x="217676037" fg:w="1234410"/><text x="89.3418%" y="1663.50"></text></g><g><title>alloc::alloc::dealloc (1,234,410 samples, 0.51%)</title><rect x="89.0918%" y="1637" width="0.5052%" height="15" fill="rgb(225,194,26)" fg:x="217676037" fg:w="1234410"/><text x="89.3418%" y="1647.50"></text></g><g><title>cfree (1,234,410 samples, 0.51%)</title><rect x="89.0918%" y="1621" width="0.5052%" height="15" fill="rgb(231,84,39)" fg:x="217676037" fg:w="1234410"/><text x="89.3418%" y="1631.50"></text></g><g><title>[libc.so.6] (1,234,410 samples, 0.51%)</title><rect x="89.0918%" y="1605" width="0.5052%" height="15" fill="rgb(210,11,45)" fg:x="217676037" fg:w="1234410"/><text x="89.3418%" y="1615.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,222,576 samples, 0.50%)</title><rect x="90.0988%" y="805" width="0.5004%" height="15" fill="rgb(224,54,52)" fg:x="220136479" fg:w="1222576"/><text x="90.3488%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,222,576 samples, 0.50%)</title><rect x="90.0988%" y="789" width="0.5004%" height="15" fill="rgb(238,102,14)" fg:x="220136479" fg:w="1222576"/><text x="90.3488%" y="799.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,222,576 samples, 0.50%)</title><rect x="90.0988%" y="773" width="0.5004%" height="15" fill="rgb(243,160,52)" fg:x="220136479" fg:w="1222576"/><text x="90.3488%" y="783.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,222,576 samples, 0.50%)</title><rect x="90.0988%" y="757" width="0.5004%" height="15" fill="rgb(216,114,19)" fg:x="220136479" fg:w="1222576"/><text x="90.3488%" y="767.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,222,576 samples, 0.50%)</title><rect x="90.0988%" y="741" width="0.5004%" height="15" fill="rgb(244,166,37)" fg:x="220136479" fg:w="1222576"/><text x="90.3488%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,222,576 samples, 0.50%)</title><rect x="90.0988%" y="725" width="0.5004%" height="15" fill="rgb(246,29,44)" fg:x="220136479" fg:w="1222576"/><text x="90.3488%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (1,222,576 samples, 0.50%)</title><rect x="90.0988%" y="709" width="0.5004%" height="15" fill="rgb(215,56,53)" fg:x="220136479" fg:w="1222576"/><text x="90.3488%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (1,222,576 samples, 0.50%)</title><rect x="90.0988%" y="693" width="0.5004%" height="15" fill="rgb(217,60,2)" fg:x="220136479" fg:w="1222576"/><text x="90.3488%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (1,222,576 samples, 0.50%)</title><rect x="90.0988%" y="677" width="0.5004%" height="15" fill="rgb(207,26,24)" fg:x="220136479" fg:w="1222576"/><text x="90.3488%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="2101" width="2.5160%" height="15" fill="rgb(252,210,15)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="2111.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="2085" width="2.5160%" height="15" fill="rgb(253,209,26)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="2095.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="2069" width="2.5160%" height="15" fill="rgb(238,170,14)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="2079.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="2053" width="2.5160%" height="15" fill="rgb(216,178,15)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="2063.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="2037" width="2.5160%" height="15" fill="rgb(250,197,2)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="2047.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="2021" width="2.5160%" height="15" fill="rgb(212,70,42)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="2031.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="2005" width="2.5160%" height="15" fill="rgb(227,213,9)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="2015.50">&lt;a..</text></g><g><title>core::mem::drop (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="1989" width="2.5160%" height="15" fill="rgb(245,99,25)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="1999.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="1973" width="2.5160%" height="15" fill="rgb(250,82,29)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="1983.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="1957" width="2.5160%" height="15" fill="rgb(241,226,54)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="1967.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="1941" width="2.5160%" height="15" fill="rgb(221,99,41)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="1951.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="1925" width="2.5160%" height="15" fill="rgb(213,90,21)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="1935.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="1909" width="2.5160%" height="15" fill="rgb(205,208,24)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="1919.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="1893" width="2.5160%" height="15" fill="rgb(246,31,12)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="1903.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="1877" width="2.5160%" height="15" fill="rgb(213,154,6)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="1887.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="1861" width="2.5160%" height="15" fill="rgb(222,163,29)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="1871.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="1845" width="2.5160%" height="15" fill="rgb(227,201,8)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="1855.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="1829" width="2.5160%" height="15" fill="rgb(233,9,32)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="1839.50">&lt;a..</text></g><g><title>core::mem::drop (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="1813" width="2.5160%" height="15" fill="rgb(217,54,24)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="1823.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="1797" width="2.5160%" height="15" fill="rgb(235,192,0)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="1807.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,147,257 samples, 2.52%)</title><rect x="88.5908%" y="1781" width="2.5160%" height="15" fill="rgb(235,45,9)" fg:x="216452184" fg:w="6147257"/><text x="88.8408%" y="1791.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,923,404 samples, 2.02%)</title><rect x="89.0918%" y="1765" width="2.0151%" height="15" fill="rgb(246,42,40)" fg:x="217676037" fg:w="4923404"/><text x="89.3418%" y="1775.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1749" width="1.5099%" height="15" fill="rgb(248,111,24)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1759.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1733" width="1.5099%" height="15" fill="rgb(249,65,22)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1743.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1717" width="1.5099%" height="15" fill="rgb(238,111,51)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1701" width="1.5099%" height="15" fill="rgb(250,118,22)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1685" width="1.5099%" height="15" fill="rgb(234,84,26)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1669" width="1.5099%" height="15" fill="rgb(243,172,12)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1653" width="1.5099%" height="15" fill="rgb(236,150,49)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1637" width="1.5099%" height="15" fill="rgb(225,197,26)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1621" width="1.5099%" height="15" fill="rgb(214,17,42)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1605" width="1.5099%" height="15" fill="rgb(224,165,40)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1589" width="1.5099%" height="15" fill="rgb(246,100,4)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1599.50"></text></g><g><title>core::mem::drop (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1573" width="1.5099%" height="15" fill="rgb(222,103,0)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1557" width="1.5099%" height="15" fill="rgb(227,189,26)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1541" width="1.5099%" height="15" fill="rgb(214,202,17)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1525" width="1.5099%" height="15" fill="rgb(229,111,3)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1509" width="1.5099%" height="15" fill="rgb(229,172,15)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1519.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1493" width="1.5099%" height="15" fill="rgb(230,224,35)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1503.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1477" width="1.5099%" height="15" fill="rgb(251,141,6)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1461" width="1.5099%" height="15" fill="rgb(225,208,6)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1445" width="1.5099%" height="15" fill="rgb(246,181,16)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1429" width="1.5099%" height="15" fill="rgb(227,129,36)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1413" width="1.5099%" height="15" fill="rgb(248,117,24)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1397" width="1.5099%" height="15" fill="rgb(214,185,35)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1381" width="1.5099%" height="15" fill="rgb(236,150,34)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1365" width="1.5099%" height="15" fill="rgb(243,228,27)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1375.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1349" width="1.5099%" height="15" fill="rgb(245,77,44)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1359.50"></text></g><g><title>core::mem::drop (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1333" width="1.5099%" height="15" fill="rgb(235,214,42)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1317" width="1.5099%" height="15" fill="rgb(221,74,3)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1327.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1301" width="1.5099%" height="15" fill="rgb(206,121,29)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1311.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1285" width="1.5099%" height="15" fill="rgb(249,131,53)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1269" width="1.5099%" height="15" fill="rgb(236,170,29)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1279.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1253" width="1.5099%" height="15" fill="rgb(247,96,15)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1263.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1237" width="1.5099%" height="15" fill="rgb(211,210,7)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1221" width="1.5099%" height="15" fill="rgb(240,88,50)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1205" width="1.5099%" height="15" fill="rgb(209,229,26)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1189" width="1.5099%" height="15" fill="rgb(210,68,23)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1173" width="1.5099%" height="15" fill="rgb(229,180,13)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,688,994 samples, 1.51%)</title><rect x="89.5970%" y="1157" width="1.5099%" height="15" fill="rgb(236,53,44)" fg:x="218910447" fg:w="3688994"/><text x="89.8470%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="1141" width="1.0081%" height="15" fill="rgb(244,214,29)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="1125" width="1.0081%" height="15" fill="rgb(220,75,29)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="1109" width="1.0081%" height="15" fill="rgb(214,183,37)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="1119.50"></text></g><g><title>core::mem::drop (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="1093" width="1.0081%" height="15" fill="rgb(239,117,29)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="1077" width="1.0081%" height="15" fill="rgb(237,171,35)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="1061" width="1.0081%" height="15" fill="rgb(229,178,53)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="1045" width="1.0081%" height="15" fill="rgb(210,102,19)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="1029" width="1.0081%" height="15" fill="rgb(235,127,22)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="1013" width="1.0081%" height="15" fill="rgb(244,31,31)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="1023.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="997" width="1.0081%" height="15" fill="rgb(231,43,21)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="981" width="1.0081%" height="15" fill="rgb(217,131,35)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="965" width="1.0081%" height="15" fill="rgb(221,149,4)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="949" width="1.0081%" height="15" fill="rgb(232,170,28)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="933" width="1.0081%" height="15" fill="rgb(238,56,10)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="917" width="1.0081%" height="15" fill="rgb(235,196,14)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="901" width="1.0081%" height="15" fill="rgb(216,45,48)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="885" width="1.0081%" height="15" fill="rgb(238,213,17)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="869" width="1.0081%" height="15" fill="rgb(212,13,2)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="879.50"></text></g><g><title>core::mem::drop (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="853" width="1.0081%" height="15" fill="rgb(240,114,20)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="837" width="1.0081%" height="15" fill="rgb(228,41,40)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,462,962 samples, 1.01%)</title><rect x="90.0988%" y="821" width="1.0081%" height="15" fill="rgb(244,132,35)" fg:x="220136479" fg:w="2462962"/><text x="90.3488%" y="831.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="805" width="0.5077%" height="15" fill="rgb(253,189,4)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="789" width="0.5077%" height="15" fill="rgb(224,37,19)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="773" width="0.5077%" height="15" fill="rgb(235,223,18)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="783.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="757" width="0.5077%" height="15" fill="rgb(235,163,25)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="741" width="0.5077%" height="15" fill="rgb(217,145,28)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="725" width="0.5077%" height="15" fill="rgb(223,223,32)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="709" width="0.5077%" height="15" fill="rgb(227,189,39)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="693" width="0.5077%" height="15" fill="rgb(248,10,22)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="677" width="0.5077%" height="15" fill="rgb(248,46,39)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="661" width="0.5077%" height="15" fill="rgb(248,113,48)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="645" width="0.5077%" height="15" fill="rgb(245,16,25)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="629" width="0.5077%" height="15" fill="rgb(249,152,16)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="639.50"></text></g><g><title>core::mem::drop (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="613" width="0.5077%" height="15" fill="rgb(250,16,1)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="597" width="0.5077%" height="15" fill="rgb(249,138,3)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="581" width="0.5077%" height="15" fill="rgb(227,71,41)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="565" width="0.5077%" height="15" fill="rgb(209,184,23)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="549" width="0.5077%" height="15" fill="rgb(223,215,31)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="533" width="0.5077%" height="15" fill="rgb(210,146,28)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="517" width="0.5077%" height="15" fill="rgb(209,183,41)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="501" width="0.5077%" height="15" fill="rgb(209,224,45)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="485" width="0.5077%" height="15" fill="rgb(224,209,51)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="469" width="0.5077%" height="15" fill="rgb(223,17,39)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="453" width="0.5077%" height="15" fill="rgb(234,204,37)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="437" width="0.5077%" height="15" fill="rgb(236,120,5)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="421" width="0.5077%" height="15" fill="rgb(248,97,27)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="405" width="0.5077%" height="15" fill="rgb(240,66,17)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="389" width="0.5077%" height="15" fill="rgb(210,79,3)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="399.50"></text></g><g><title>core::mem::drop (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="373" width="0.5077%" height="15" fill="rgb(214,176,27)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="357" width="0.5077%" height="15" fill="rgb(235,185,3)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="341" width="0.5077%" height="15" fill="rgb(227,24,12)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="325" width="0.5077%" height="15" fill="rgb(252,169,48)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="335.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="309" width="0.5077%" height="15" fill="rgb(212,65,1)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="293" width="0.5077%" height="15" fill="rgb(242,39,24)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="277" width="0.5077%" height="15" fill="rgb(249,32,23)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="261" width="0.5077%" height="15" fill="rgb(251,195,23)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="245" width="0.5077%" height="15" fill="rgb(236,174,8)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="229" width="0.5077%" height="15" fill="rgb(220,197,8)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="213" width="0.5077%" height="15" fill="rgb(240,108,37)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (1,240,386 samples, 0.51%)</title><rect x="90.5992%" y="197" width="0.5077%" height="15" fill="rgb(232,176,24)" fg:x="221359055" fg:w="1240386"/><text x="90.8492%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (12,392,860 samples, 5.07%)</title><rect x="88.5908%" y="2117" width="5.0722%" height="15" fill="rgb(243,35,29)" fg:x="216452184" fg:w="12392860"/><text x="88.8408%" y="2127.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (6,245,603 samples, 2.56%)</title><rect x="91.1068%" y="2101" width="2.5562%" height="15" fill="rgb(210,37,18)" fg:x="222599441" fg:w="6245603"/><text x="91.3568%" y="2111.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,245,603 samples, 2.56%)</title><rect x="91.1068%" y="2085" width="2.5562%" height="15" fill="rgb(224,184,40)" fg:x="222599441" fg:w="6245603"/><text x="91.3568%" y="2095.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,245,603 samples, 2.56%)</title><rect x="91.1068%" y="2069" width="2.5562%" height="15" fill="rgb(236,39,29)" fg:x="222599441" fg:w="6245603"/><text x="91.3568%" y="2079.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,245,603 samples, 2.56%)</title><rect x="91.1068%" y="2053" width="2.5562%" height="15" fill="rgb(232,48,39)" fg:x="222599441" fg:w="6245603"/><text x="91.3568%" y="2063.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (6,245,603 samples, 2.56%)</title><rect x="91.1068%" y="2037" width="2.5562%" height="15" fill="rgb(236,34,42)" fg:x="222599441" fg:w="6245603"/><text x="91.3568%" y="2047.50">al..</text></g><g><title>cfree (6,245,603 samples, 2.56%)</title><rect x="91.1068%" y="2021" width="2.5562%" height="15" fill="rgb(243,106,37)" fg:x="222599441" fg:w="6245603"/><text x="91.3568%" y="2031.50">cf..</text></g><g><title>[libc.so.6] (6,245,603 samples, 2.56%)</title><rect x="91.1068%" y="2005" width="2.5562%" height="15" fill="rgb(218,96,6)" fg:x="222599441" fg:w="6245603"/><text x="91.3568%" y="2015.50">[l..</text></g><g><title>[libc.so.6] (6,245,603 samples, 2.56%)</title><rect x="91.1068%" y="1989" width="2.5562%" height="15" fill="rgb(235,130,12)" fg:x="222599441" fg:w="6245603"/><text x="91.3568%" y="1999.50">[l..</text></g><g><title>[libc.so.6] (1,244,418 samples, 0.51%)</title><rect x="93.1537%" y="1973" width="0.5093%" height="15" fill="rgb(231,95,0)" fg:x="227600626" fg:w="1244418"/><text x="93.4037%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1909" width="0.5148%" height="15" fill="rgb(228,12,23)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1893" width="0.5148%" height="15" fill="rgb(216,12,1)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1877" width="0.5148%" height="15" fill="rgb(219,59,3)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1861" width="0.5148%" height="15" fill="rgb(215,208,46)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1845" width="0.5148%" height="15" fill="rgb(254,224,29)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1829" width="0.5148%" height="15" fill="rgb(232,14,29)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1813" width="0.5148%" height="15" fill="rgb(208,45,52)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1797" width="0.5148%" height="15" fill="rgb(234,191,28)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1781" width="0.5148%" height="15" fill="rgb(244,67,43)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1765" width="0.5148%" height="15" fill="rgb(236,189,24)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1749" width="0.5148%" height="15" fill="rgb(239,214,33)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1733" width="0.5148%" height="15" fill="rgb(226,176,41)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1717" width="0.5148%" height="15" fill="rgb(248,47,8)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1701" width="0.5148%" height="15" fill="rgb(218,81,44)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1685" width="0.5148%" height="15" fill="rgb(213,98,6)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1669" width="0.5148%" height="15" fill="rgb(222,85,22)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1653" width="0.5148%" height="15" fill="rgb(239,46,39)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1637" width="0.5148%" height="15" fill="rgb(237,12,29)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1621" width="0.5148%" height="15" fill="rgb(214,77,8)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1605" width="0.5148%" height="15" fill="rgb(217,168,37)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1589" width="0.5148%" height="15" fill="rgb(221,217,23)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1573" width="0.5148%" height="15" fill="rgb(243,229,36)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1557" width="0.5148%" height="15" fill="rgb(251,163,40)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1541" width="0.5148%" height="15" fill="rgb(237,222,12)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1525" width="0.5148%" height="15" fill="rgb(248,132,6)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1509" width="0.5148%" height="15" fill="rgb(227,167,50)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1493" width="0.5148%" height="15" fill="rgb(242,84,37)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1477" width="0.5148%" height="15" fill="rgb(212,4,50)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1461" width="0.5148%" height="15" fill="rgb(230,228,32)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1445" width="0.5148%" height="15" fill="rgb(248,217,23)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1429" width="0.5148%" height="15" fill="rgb(238,197,32)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1413" width="0.5148%" height="15" fill="rgb(236,106,1)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1397" width="0.5148%" height="15" fill="rgb(219,228,13)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1381" width="0.5148%" height="15" fill="rgb(238,30,35)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1365" width="0.5148%" height="15" fill="rgb(236,70,23)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1349" width="0.5148%" height="15" fill="rgb(249,104,48)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1333" width="0.5148%" height="15" fill="rgb(254,117,50)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1317" width="0.5148%" height="15" fill="rgb(223,152,4)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1301" width="0.5148%" height="15" fill="rgb(245,6,2)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1285" width="0.5148%" height="15" fill="rgb(249,150,24)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1269" width="0.5148%" height="15" fill="rgb(228,185,42)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1253" width="0.5148%" height="15" fill="rgb(226,39,33)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1237" width="0.5148%" height="15" fill="rgb(221,166,19)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1221" width="0.5148%" height="15" fill="rgb(209,109,2)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1205" width="0.5148%" height="15" fill="rgb(252,216,26)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1189" width="0.5148%" height="15" fill="rgb(227,173,36)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1173" width="0.5148%" height="15" fill="rgb(209,90,7)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1157" width="0.5148%" height="15" fill="rgb(250,194,11)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1141" width="0.5148%" height="15" fill="rgb(220,72,50)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1125" width="0.5148%" height="15" fill="rgb(222,106,48)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1109" width="0.5148%" height="15" fill="rgb(216,220,45)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1093" width="0.5148%" height="15" fill="rgb(234,112,18)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1077" width="0.5148%" height="15" fill="rgb(206,179,9)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1061" width="0.5148%" height="15" fill="rgb(215,115,40)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1045" width="0.5148%" height="15" fill="rgb(222,69,34)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1029" width="0.5148%" height="15" fill="rgb(209,161,10)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="1013" width="0.5148%" height="15" fill="rgb(217,6,38)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="997" width="0.5148%" height="15" fill="rgb(229,229,48)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="981" width="0.5148%" height="15" fill="rgb(225,21,28)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="965" width="0.5148%" height="15" fill="rgb(206,33,13)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="949" width="0.5148%" height="15" fill="rgb(242,178,17)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="933" width="0.5148%" height="15" fill="rgb(220,162,5)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="917" width="0.5148%" height="15" fill="rgb(210,33,43)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="901" width="0.5148%" height="15" fill="rgb(216,116,54)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="885" width="0.5148%" height="15" fill="rgb(249,92,24)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="869" width="0.5148%" height="15" fill="rgb(231,189,14)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="853" width="0.5148%" height="15" fill="rgb(230,8,41)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="837" width="0.5148%" height="15" fill="rgb(249,7,27)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="821" width="0.5148%" height="15" fill="rgb(232,86,5)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="805" width="0.5148%" height="15" fill="rgb(224,175,18)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="789" width="0.5148%" height="15" fill="rgb(220,129,12)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="773" width="0.5148%" height="15" fill="rgb(210,19,36)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="757" width="0.5148%" height="15" fill="rgb(219,96,14)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="741" width="0.5148%" height="15" fill="rgb(249,106,1)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="725" width="0.5148%" height="15" fill="rgb(249,155,20)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="709" width="0.5148%" height="15" fill="rgb(244,168,9)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="693" width="0.5148%" height="15" fill="rgb(216,23,50)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="677" width="0.5148%" height="15" fill="rgb(224,219,20)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="687.50"></text></g><g><title>cfree (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="661" width="0.5148%" height="15" fill="rgb(222,156,15)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="671.50"></text></g><g><title>[libc.so.6] (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="645" width="0.5148%" height="15" fill="rgb(231,97,17)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="655.50"></text></g><g><title>[libc.so.6] (1,257,749 samples, 0.51%)</title><rect x="93.6631%" y="629" width="0.5148%" height="15" fill="rgb(218,70,48)" fg:x="228845044" fg:w="1257749"/><text x="93.9131%" y="639.50"></text></g><g><title>std::panic::catch_unwind (213,593,137 samples, 87.42%)</title><rect x="7.2924%" y="2261" width="87.4207%" height="15" fill="rgb(212,196,52)" fg:x="17817417" fg:w="213593137"/><text x="7.5424%" y="2271.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (213,593,137 samples, 87.42%)</title><rect x="7.2924%" y="2245" width="87.4207%" height="15" fill="rgb(243,203,18)" fg:x="17817417" fg:w="213593137"/><text x="7.5424%" y="2255.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (213,593,137 samples, 87.42%)</title><rect x="7.2924%" y="2229" width="87.4207%" height="15" fill="rgb(252,125,41)" fg:x="17817417" fg:w="213593137"/><text x="7.5424%" y="2239.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (213,593,137 samples, 87.42%)</title><rect x="7.2924%" y="2213" width="87.4207%" height="15" fill="rgb(223,180,33)" fg:x="17817417" fg:w="213593137"/><text x="7.5424%" y="2223.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (213,593,137 samples, 87.42%)</title><rect x="7.2924%" y="2197" width="87.4207%" height="15" fill="rgb(254,159,46)" fg:x="17817417" fg:w="213593137"/><text x="7.5424%" y="2207.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (213,593,137 samples, 87.42%)</title><rect x="7.2924%" y="2181" width="87.4207%" height="15" fill="rgb(254,38,10)" fg:x="17817417" fg:w="213593137"/><text x="7.5424%" y="2191.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (213,593,137 samples, 87.42%)</title><rect x="7.2924%" y="2165" width="87.4207%" height="15" fill="rgb(208,217,32)" fg:x="17817417" fg:w="213593137"/><text x="7.5424%" y="2175.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (213,593,137 samples, 87.42%)</title><rect x="7.2924%" y="2149" width="87.4207%" height="15" fill="rgb(221,120,13)" fg:x="17817417" fg:w="213593137"/><text x="7.5424%" y="2159.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (213,593,137 samples, 87.42%)</title><rect x="7.2924%" y="2133" width="87.4207%" height="15" fill="rgb(246,54,52)" fg:x="17817417" fg:w="213593137"/><text x="7.5424%" y="2143.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,565,510 samples, 1.05%)</title><rect x="93.6631%" y="2117" width="1.0500%" height="15" fill="rgb(242,34,25)" fg:x="228845044" fg:w="2565510"/><text x="93.9131%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,565,510 samples, 1.05%)</title><rect x="93.6631%" y="2101" width="1.0500%" height="15" fill="rgb(247,209,9)" fg:x="228845044" fg:w="2565510"/><text x="93.9131%" y="2111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,565,510 samples, 1.05%)</title><rect x="93.6631%" y="2085" width="1.0500%" height="15" fill="rgb(228,71,26)" fg:x="228845044" fg:w="2565510"/><text x="93.9131%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,565,510 samples, 1.05%)</title><rect x="93.6631%" y="2069" width="1.0500%" height="15" fill="rgb(222,145,49)" fg:x="228845044" fg:w="2565510"/><text x="93.9131%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,565,510 samples, 1.05%)</title><rect x="93.6631%" y="2053" width="1.0500%" height="15" fill="rgb(218,121,17)" fg:x="228845044" fg:w="2565510"/><text x="93.9131%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,565,510 samples, 1.05%)</title><rect x="93.6631%" y="2037" width="1.0500%" height="15" fill="rgb(244,50,7)" fg:x="228845044" fg:w="2565510"/><text x="93.9131%" y="2047.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,565,510 samples, 1.05%)</title><rect x="93.6631%" y="2021" width="1.0500%" height="15" fill="rgb(246,229,37)" fg:x="228845044" fg:w="2565510"/><text x="93.9131%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,565,510 samples, 1.05%)</title><rect x="93.6631%" y="2005" width="1.0500%" height="15" fill="rgb(225,18,5)" fg:x="228845044" fg:w="2565510"/><text x="93.9131%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,565,510 samples, 1.05%)</title><rect x="93.6631%" y="1989" width="1.0500%" height="15" fill="rgb(213,204,8)" fg:x="228845044" fg:w="2565510"/><text x="93.9131%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,565,510 samples, 1.05%)</title><rect x="93.6631%" y="1973" width="1.0500%" height="15" fill="rgb(238,103,6)" fg:x="228845044" fg:w="2565510"/><text x="93.9131%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,565,510 samples, 1.05%)</title><rect x="93.6631%" y="1957" width="1.0500%" height="15" fill="rgb(222,25,35)" fg:x="228845044" fg:w="2565510"/><text x="93.9131%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,565,510 samples, 1.05%)</title><rect x="93.6631%" y="1941" width="1.0500%" height="15" fill="rgb(213,203,35)" fg:x="228845044" fg:w="2565510"/><text x="93.9131%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,565,510 samples, 1.05%)</title><rect x="93.6631%" y="1925" width="1.0500%" height="15" fill="rgb(221,79,53)" fg:x="228845044" fg:w="2565510"/><text x="93.9131%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,307,761 samples, 0.54%)</title><rect x="94.1779%" y="1909" width="0.5352%" height="15" fill="rgb(243,200,35)" fg:x="230102793" fg:w="1307761"/><text x="94.4279%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,307,761 samples, 0.54%)</title><rect x="94.1779%" y="1893" width="0.5352%" height="15" fill="rgb(248,60,25)" fg:x="230102793" fg:w="1307761"/><text x="94.4279%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,307,761 samples, 0.54%)</title><rect x="94.1779%" y="1877" width="0.5352%" height="15" fill="rgb(227,53,46)" fg:x="230102793" fg:w="1307761"/><text x="94.4279%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,307,761 samples, 0.54%)</title><rect x="94.1779%" y="1861" width="0.5352%" height="15" fill="rgb(216,120,32)" fg:x="230102793" fg:w="1307761"/><text x="94.4279%" y="1871.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,307,761 samples, 0.54%)</title><rect x="94.1779%" y="1845" width="0.5352%" height="15" fill="rgb(220,134,1)" fg:x="230102793" fg:w="1307761"/><text x="94.4279%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,307,761 samples, 0.54%)</title><rect x="94.1779%" y="1829" width="0.5352%" height="15" fill="rgb(237,168,5)" fg:x="230102793" fg:w="1307761"/><text x="94.4279%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,307,761 samples, 0.54%)</title><rect x="94.1779%" y="1813" width="0.5352%" height="15" fill="rgb(231,100,33)" fg:x="230102793" fg:w="1307761"/><text x="94.4279%" y="1823.50"></text></g><g><title>alloc::alloc::dealloc (1,307,761 samples, 0.54%)</title><rect x="94.1779%" y="1797" width="0.5352%" height="15" fill="rgb(236,177,47)" fg:x="230102793" fg:w="1307761"/><text x="94.4279%" y="1807.50"></text></g><g><title>cfree (1,307,761 samples, 0.54%)</title><rect x="94.1779%" y="1781" width="0.5352%" height="15" fill="rgb(235,7,49)" fg:x="230102793" fg:w="1307761"/><text x="94.4279%" y="1791.50"></text></g><g><title>_start (214,094,641 samples, 87.63%)</title><rect x="7.2924%" y="2405" width="87.6259%" height="15" fill="rgb(232,119,22)" fg:x="17817417" fg:w="214094641"/><text x="7.5424%" y="2415.50">_start</text></g><g><title>__libc_start_main (214,094,641 samples, 87.63%)</title><rect x="7.2924%" y="2389" width="87.6259%" height="15" fill="rgb(254,73,53)" fg:x="17817417" fg:w="214094641"/><text x="7.5424%" y="2399.50">__libc_start_main</text></g><g><title>[libc.so.6] (214,094,641 samples, 87.63%)</title><rect x="7.2924%" y="2373" width="87.6259%" height="15" fill="rgb(251,35,20)" fg:x="17817417" fg:w="214094641"/><text x="7.5424%" y="2383.50">[libc.so.6]</text></g><g><title>main (214,094,641 samples, 87.63%)</title><rect x="7.2924%" y="2357" width="87.6259%" height="15" fill="rgb(241,119,20)" fg:x="17817417" fg:w="214094641"/><text x="7.5424%" y="2367.50">main</text></g><g><title>std::rt::lang_start_internal (214,094,641 samples, 87.63%)</title><rect x="7.2924%" y="2341" width="87.6259%" height="15" fill="rgb(207,102,14)" fg:x="17817417" fg:w="214094641"/><text x="7.5424%" y="2351.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (214,094,641 samples, 87.63%)</title><rect x="7.2924%" y="2325" width="87.6259%" height="15" fill="rgb(248,201,50)" fg:x="17817417" fg:w="214094641"/><text x="7.5424%" y="2335.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (214,094,641 samples, 87.63%)</title><rect x="7.2924%" y="2309" width="87.6259%" height="15" fill="rgb(222,185,44)" fg:x="17817417" fg:w="214094641"/><text x="7.5424%" y="2319.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (214,094,641 samples, 87.63%)</title><rect x="7.2924%" y="2293" width="87.6259%" height="15" fill="rgb(218,107,18)" fg:x="17817417" fg:w="214094641"/><text x="7.5424%" y="2303.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (214,094,641 samples, 87.63%)</title><rect x="7.2924%" y="2277" width="87.6259%" height="15" fill="rgb(237,177,39)" fg:x="17817417" fg:w="214094641"/><text x="7.5424%" y="2287.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::rt::init (501,504 samples, 0.21%)</title><rect x="94.7131%" y="2261" width="0.2053%" height="15" fill="rgb(246,69,6)" fg:x="231410554" fg:w="501504"/><text x="94.9631%" y="2271.50"></text></g><g><title>std::sys::pal::unix::init (501,504 samples, 0.21%)</title><rect x="94.7131%" y="2245" width="0.2053%" height="15" fill="rgb(234,208,37)" fg:x="231410554" fg:w="501504"/><text x="94.9631%" y="2255.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::init (501,504 samples, 0.21%)</title><rect x="94.7131%" y="2229" width="0.2053%" height="15" fill="rgb(225,4,6)" fg:x="231410554" fg:w="501504"/><text x="94.9631%" y="2239.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard (501,504 samples, 0.21%)</title><rect x="94.7131%" y="2213" width="0.2053%" height="15" fill="rgb(233,45,0)" fg:x="231410554" fg:w="501504"/><text x="94.9631%" y="2223.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard_linux (501,504 samples, 0.21%)</title><rect x="94.7131%" y="2197" width="0.2053%" height="15" fill="rgb(226,136,5)" fg:x="231410554" fg:w="501504"/><text x="94.9631%" y="2207.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::stack_start_aligned (501,504 samples, 0.21%)</title><rect x="94.7131%" y="2181" width="0.2053%" height="15" fill="rgb(211,91,47)" fg:x="231410554" fg:w="501504"/><text x="94.9631%" y="2191.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack_start (501,504 samples, 0.21%)</title><rect x="94.7131%" y="2165" width="0.2053%" height="15" fill="rgb(242,88,51)" fg:x="231410554" fg:w="501504"/><text x="94.9631%" y="2175.50"></text></g><g><title>pthread_getattr_np (501,504 samples, 0.21%)</title><rect x="94.7131%" y="2149" width="0.2053%" height="15" fill="rgb(230,91,28)" fg:x="231410554" fg:w="501504"/><text x="94.9631%" y="2159.50"></text></g><g><title>__isoc23_sscanf (501,504 samples, 0.21%)</title><rect x="94.7131%" y="2133" width="0.2053%" height="15" fill="rgb(254,186,29)" fg:x="231410554" fg:w="501504"/><text x="94.9631%" y="2143.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.21%)</title><rect x="94.7131%" y="2117" width="0.2053%" height="15" fill="rgb(238,6,4)" fg:x="231410554" fg:w="501504"/><text x="94.9631%" y="2127.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.21%)</title><rect x="94.7131%" y="2101" width="0.2053%" height="15" fill="rgb(221,151,16)" fg:x="231410554" fg:w="501504"/><text x="94.9631%" y="2111.50"></text></g><g><title>benchmark::clear_dirty_flags (2,593,491 samples, 1.06%)</title><rect x="94.9184%" y="2405" width="1.0615%" height="15" fill="rgb(251,143,52)" fg:x="231912058" fg:w="2593491"/><text x="95.1684%" y="2415.50"></text></g><g><title>benchmark::count_nodes (1,322,940 samples, 0.54%)</title><rect x="95.9798%" y="2405" width="0.5415%" height="15" fill="rgb(206,90,15)" fg:x="234505549" fg:w="1322940"/><text x="96.2298%" y="2415.50"></text></g><g><title>benchmark::json_to_html_node (983,011 samples, 0.40%)</title><rect x="96.5213%" y="2405" width="0.4023%" height="15" fill="rgb(218,35,8)" fg:x="235828489" fg:w="983011"/><text x="96.7713%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (983,011 samples, 0.40%)</title><rect x="96.5213%" y="2389" width="0.4023%" height="15" fill="rgb(239,215,6)" fg:x="235828489" fg:w="983011"/><text x="96.7713%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (983,011 samples, 0.40%)</title><rect x="96.5213%" y="2373" width="0.4023%" height="15" fill="rgb(245,116,39)" fg:x="235828489" fg:w="983011"/><text x="96.7713%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (983,011 samples, 0.40%)</title><rect x="96.5213%" y="2357" width="0.4023%" height="15" fill="rgb(242,65,28)" fg:x="235828489" fg:w="983011"/><text x="96.7713%" y="2367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (983,011 samples, 0.40%)</title><rect x="96.5213%" y="2341" width="0.4023%" height="15" fill="rgb(252,132,53)" fg:x="235828489" fg:w="983011"/><text x="96.7713%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (983,011 samples, 0.40%)</title><rect x="96.5213%" y="2325" width="0.4023%" height="15" fill="rgb(224,159,50)" fg:x="235828489" fg:w="983011"/><text x="96.7713%" y="2335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (983,011 samples, 0.40%)</title><rect x="96.5213%" y="2309" width="0.4023%" height="15" fill="rgb(224,93,4)" fg:x="235828489" fg:w="983011"/><text x="96.7713%" y="2319.50"></text></g><g><title>alloc::alloc::dealloc (983,011 samples, 0.40%)</title><rect x="96.5213%" y="2293" width="0.4023%" height="15" fill="rgb(208,81,34)" fg:x="235828489" fg:w="983011"/><text x="96.7713%" y="2303.50"></text></g><g><title>cfree (1,339,799 samples, 0.55%)</title><rect x="96.9236%" y="2405" width="0.5484%" height="15" fill="rgb(233,92,54)" fg:x="236811500" fg:w="1339799"/><text x="97.1736%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,269,341 samples, 0.52%)</title><rect x="97.4720%" y="2405" width="0.5195%" height="15" fill="rgb(237,21,14)" fg:x="238151299" fg:w="1269341"/><text x="97.7220%" y="2415.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,583,098 samples, 1.06%)</title><rect x="97.9915%" y="2405" width="1.0572%" height="15" fill="rgb(249,128,51)" fg:x="239420640" fg:w="2583098"/><text x="98.2415%" y="2415.50"></text></g><g><title>malloc (1,305,059 samples, 0.53%)</title><rect x="99.0487%" y="2405" width="0.5341%" height="15" fill="rgb(223,129,24)" fg:x="242003738" fg:w="1305059"/><text x="99.2987%" y="2415.50"></text></g><g><title>all (244,327,928 samples, 100%)</title><rect x="0.0000%" y="2437" width="100.0000%" height="15" fill="rgb(231,168,25)" fg:x="0" fg:w="244327928"/><text x="0.2500%" y="2447.50"></text></g><g><title>benchmark (244,327,928 samples, 100.00%)</title><rect x="0.0000%" y="2421" width="100.0000%" height="15" fill="rgb(224,39,20)" fg:x="0" fg:w="244327928"/><text x="0.2500%" y="2431.50">benchmark</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,019,131 samples, 0.42%)</title><rect x="99.5829%" y="2405" width="0.4171%" height="15" fill="rgb(225,152,53)" fg:x="243308797" fg:w="1019131"/><text x="99.8329%" y="2415.50"></text></g></svg></svg>