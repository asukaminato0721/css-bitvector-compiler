<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="3926" onload="init(evt)" viewBox="0 0 1200 3926" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="3926" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="3909.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="3909.00"> </text><svg id="frames" x="10" width="1180" total_samples="1255324962"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,273,144 samples, 0.26%)</title><rect x="0.0000%" y="3845" width="0.2607%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3273144"/><text x="0.2500%" y="3855.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,363,669 samples, 0.27%)</title><rect x="0.2607%" y="3845" width="0.2680%" height="15" fill="rgb(217,0,24)" fg:x="3273144" fg:w="3363669"/><text x="0.5107%" y="3855.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,079,933 samples, 0.56%)</title><rect x="0.5287%" y="3845" width="0.5640%" height="15" fill="rgb(221,193,54)" fg:x="6636813" fg:w="7079933"/><text x="0.7787%" y="3855.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (2,688,467 samples, 0.21%)</title><rect x="1.0927%" y="3845" width="0.2142%" height="15" fill="rgb(248,212,6)" fg:x="13716746" fg:w="2688467"/><text x="1.3427%" y="3855.50"></text></g><g><title>[libc.so.6] (3,327,546 samples, 0.27%)</title><rect x="3.1358%" y="3829" width="0.2651%" height="15" fill="rgb(208,68,35)" fg:x="39365095" fg:w="3327546"/><text x="3.3858%" y="3839.50"></text></g><g><title>[libc.so.6] (29,561,212 samples, 2.35%)</title><rect x="1.3068%" y="3845" width="2.3549%" height="15" fill="rgb(232,128,0)" fg:x="16405213" fg:w="29561212"/><text x="1.5568%" y="3855.50">[..</text></g><g><title>malloc (3,273,784 samples, 0.26%)</title><rect x="3.4009%" y="3829" width="0.2608%" height="15" fill="rgb(207,160,47)" fg:x="42692641" fg:w="3273784"/><text x="3.6509%" y="3839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,299,763 samples, 0.26%)</title><rect x="4.0900%" y="3813" width="0.2629%" height="15" fill="rgb(228,23,34)" fg:x="51343197" fg:w="3299763"/><text x="4.3400%" y="3823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (3,299,763 samples, 0.26%)</title><rect x="4.0900%" y="3797" width="0.2629%" height="15" fill="rgb(218,30,26)" fg:x="51343197" fg:w="3299763"/><text x="4.3400%" y="3807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,574,824 samples, 0.52%)</title><rect x="4.0900%" y="3829" width="0.5238%" height="15" fill="rgb(220,122,19)" fg:x="51343197" fg:w="6574824"/><text x="4.3400%" y="3839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,275,061 samples, 0.26%)</title><rect x="4.3529%" y="3813" width="0.2609%" height="15" fill="rgb(250,228,42)" fg:x="54642960" fg:w="3275061"/><text x="4.6029%" y="3823.50"></text></g><g><title>alloc::slice::hack::to_vec (3,275,061 samples, 0.26%)</title><rect x="4.3529%" y="3797" width="0.2609%" height="15" fill="rgb(240,193,28)" fg:x="54642960" fg:w="3275061"/><text x="4.6029%" y="3807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,275,061 samples, 0.26%)</title><rect x="4.3529%" y="3781" width="0.2609%" height="15" fill="rgb(216,20,37)" fg:x="54642960" fg:w="3275061"/><text x="4.6029%" y="3791.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,275,061 samples, 0.26%)</title><rect x="4.3529%" y="3765" width="0.2609%" height="15" fill="rgb(206,188,39)" fg:x="54642960" fg:w="3275061"/><text x="4.6029%" y="3775.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,275,061 samples, 0.26%)</title><rect x="4.3529%" y="3749" width="0.2609%" height="15" fill="rgb(217,207,13)" fg:x="54642960" fg:w="3275061"/><text x="4.6029%" y="3759.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,206,783 samples, 0.26%)</title><rect x="4.6138%" y="3829" width="0.2555%" height="15" fill="rgb(231,73,38)" fg:x="57918021" fg:w="3206783"/><text x="4.8638%" y="3839.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,318,744 samples, 0.26%)</title><rect x="4.8692%" y="3829" width="0.2644%" height="15" fill="rgb(225,20,46)" fg:x="61124804" fg:w="3318744"/><text x="5.1192%" y="3839.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,318,744 samples, 0.26%)</title><rect x="4.8692%" y="3813" width="0.2644%" height="15" fill="rgb(210,31,41)" fg:x="61124804" fg:w="3318744"/><text x="5.1192%" y="3823.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,318,744 samples, 0.26%)</title><rect x="4.8692%" y="3797" width="0.2644%" height="15" fill="rgb(221,200,47)" fg:x="61124804" fg:w="3318744"/><text x="5.1192%" y="3807.50"></text></g><g><title>core::clone::Clone::clone (3,318,744 samples, 0.26%)</title><rect x="4.8692%" y="3781" width="0.2644%" height="15" fill="rgb(226,26,5)" fg:x="61124804" fg:w="3318744"/><text x="5.1192%" y="3791.50"></text></g><g><title>[unknown] (2,496,392 samples, 0.20%)</title><rect x="5.1336%" y="3829" width="0.1989%" height="15" fill="rgb(249,33,26)" fg:x="64443548" fg:w="2496392"/><text x="5.3836%" y="3839.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,496,392 samples, 0.20%)</title><rect x="5.1336%" y="3813" width="0.1989%" height="15" fill="rgb(235,183,28)" fg:x="64443548" fg:w="2496392"/><text x="5.3836%" y="3823.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,496,392 samples, 0.20%)</title><rect x="5.1336%" y="3797" width="0.1989%" height="15" fill="rgb(221,5,38)" fg:x="64443548" fg:w="2496392"/><text x="5.3836%" y="3807.50"></text></g><g><title>__rdl_dealloc (6,763,041 samples, 0.54%)</title><rect x="5.3325%" y="3829" width="0.5387%" height="15" fill="rgb(247,18,42)" fg:x="66939940" fg:w="6763041"/><text x="5.5825%" y="3839.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6,763,041 samples, 0.54%)</title><rect x="5.3325%" y="3813" width="0.5387%" height="15" fill="rgb(241,131,45)" fg:x="66939940" fg:w="6763041"/><text x="5.5825%" y="3823.50"></text></g><g><title>benchmark::clear_dirty_flags (3,453,838 samples, 0.28%)</title><rect x="5.8712%" y="3829" width="0.2751%" height="15" fill="rgb(249,31,29)" fg:x="73702981" fg:w="3453838"/><text x="6.1212%" y="3839.50"></text></g><g><title>benchmark::count_nodes (3,316,584 samples, 0.26%)</title><rect x="6.1464%" y="3829" width="0.2642%" height="15" fill="rgb(225,111,53)" fg:x="77156819" fg:w="3316584"/><text x="6.3964%" y="3839.50"></text></g><g><title>cfree (3,358,133 samples, 0.27%)</title><rect x="6.4106%" y="3829" width="0.2675%" height="15" fill="rgb(238,160,17)" fg:x="80473403" fg:w="3358133"/><text x="6.6606%" y="3839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,334,594 samples, 0.27%)</title><rect x="6.6781%" y="3829" width="0.2656%" height="15" fill="rgb(214,148,48)" fg:x="83831536" fg:w="3334594"/><text x="6.9281%" y="3839.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,334,594 samples, 0.27%)</title><rect x="6.6781%" y="3813" width="0.2656%" height="15" fill="rgb(232,36,49)" fg:x="83831536" fg:w="3334594"/><text x="6.9281%" y="3823.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,334,594 samples, 0.27%)</title><rect x="6.6781%" y="3797" width="0.2656%" height="15" fill="rgb(209,103,24)" fg:x="83831536" fg:w="3334594"/><text x="6.9281%" y="3807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,334,594 samples, 0.27%)</title><rect x="6.6781%" y="3781" width="0.2656%" height="15" fill="rgb(229,88,8)" fg:x="83831536" fg:w="3334594"/><text x="6.9281%" y="3791.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,334,594 samples, 0.27%)</title><rect x="6.6781%" y="3765" width="0.2656%" height="15" fill="rgb(213,181,19)" fg:x="83831536" fg:w="3334594"/><text x="6.9281%" y="3775.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,334,594 samples, 0.27%)</title><rect x="6.6781%" y="3749" width="0.2656%" height="15" fill="rgb(254,191,54)" fg:x="83831536" fg:w="3334594"/><text x="6.9281%" y="3759.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,659,558 samples, 0.53%)</title><rect x="6.9437%" y="3829" width="0.5305%" height="15" fill="rgb(241,83,37)" fg:x="87166130" fg:w="6659558"/><text x="7.1937%" y="3839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,323,331 samples, 0.26%)</title><rect x="7.2095%" y="3813" width="0.2647%" height="15" fill="rgb(233,36,39)" fg:x="90502357" fg:w="3323331"/><text x="7.4595%" y="3823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,323,331 samples, 0.26%)</title><rect x="7.2095%" y="3797" width="0.2647%" height="15" fill="rgb(226,3,54)" fg:x="90502357" fg:w="3323331"/><text x="7.4595%" y="3807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,323,331 samples, 0.26%)</title><rect x="7.2095%" y="3781" width="0.2647%" height="15" fill="rgb(245,192,40)" fg:x="90502357" fg:w="3323331"/><text x="7.4595%" y="3791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,323,331 samples, 0.26%)</title><rect x="7.2095%" y="3765" width="0.2647%" height="15" fill="rgb(238,167,29)" fg:x="90502357" fg:w="3323331"/><text x="7.4595%" y="3775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,323,331 samples, 0.26%)</title><rect x="7.2095%" y="3749" width="0.2647%" height="15" fill="rgb(232,182,51)" fg:x="90502357" fg:w="3323331"/><text x="7.4595%" y="3759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,323,331 samples, 0.26%)</title><rect x="7.2095%" y="3733" width="0.2647%" height="15" fill="rgb(231,60,39)" fg:x="90502357" fg:w="3323331"/><text x="7.4595%" y="3743.50"></text></g><g><title>alloc::alloc::dealloc (3,323,331 samples, 0.26%)</title><rect x="7.2095%" y="3717" width="0.2647%" height="15" fill="rgb(208,69,12)" fg:x="90502357" fg:w="3323331"/><text x="7.4595%" y="3727.50"></text></g><g><title>[unknown] (51,173,309 samples, 4.08%)</title><rect x="3.6617%" y="3845" width="4.0765%" height="15" fill="rgb(235,93,37)" fg:x="45966425" fg:w="51173309"/><text x="3.9117%" y="3855.50">[unk..</text></g><g><title>malloc (3,314,046 samples, 0.26%)</title><rect x="7.4742%" y="3829" width="0.2640%" height="15" fill="rgb(213,116,39)" fg:x="93825688" fg:w="3314046"/><text x="7.7242%" y="3839.50"></text></g><g><title>__rdl_dealloc (3,332,420 samples, 0.27%)</title><rect x="7.7382%" y="3845" width="0.2655%" height="15" fill="rgb(222,207,29)" fg:x="97139734" fg:w="3332420"/><text x="7.9882%" y="3855.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,332,420 samples, 0.27%)</title><rect x="7.7382%" y="3829" width="0.2655%" height="15" fill="rgb(206,96,30)" fg:x="97139734" fg:w="3332420"/><text x="7.9882%" y="3839.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,294,102 samples, 0.26%)</title><rect x="8.0037%" y="3541" width="0.2624%" height="15" fill="rgb(218,138,4)" fg:x="100472154" fg:w="3294102"/><text x="8.2537%" y="3551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,294,102 samples, 0.26%)</title><rect x="8.0037%" y="3525" width="0.2624%" height="15" fill="rgb(250,191,14)" fg:x="100472154" fg:w="3294102"/><text x="8.2537%" y="3535.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,294,102 samples, 0.26%)</title><rect x="8.0037%" y="3509" width="0.2624%" height="15" fill="rgb(239,60,40)" fg:x="100472154" fg:w="3294102"/><text x="8.2537%" y="3519.50"></text></g><g><title>alloc::slice::hack::to_vec (3,294,102 samples, 0.26%)</title><rect x="8.0037%" y="3493" width="0.2624%" height="15" fill="rgb(206,27,48)" fg:x="100472154" fg:w="3294102"/><text x="8.2537%" y="3503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,294,102 samples, 0.26%)</title><rect x="8.0037%" y="3477" width="0.2624%" height="15" fill="rgb(225,35,8)" fg:x="100472154" fg:w="3294102"/><text x="8.2537%" y="3487.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,294,102 samples, 0.26%)</title><rect x="8.0037%" y="3461" width="0.2624%" height="15" fill="rgb(250,213,24)" fg:x="100472154" fg:w="3294102"/><text x="8.2537%" y="3471.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,294,102 samples, 0.26%)</title><rect x="8.0037%" y="3445" width="0.2624%" height="15" fill="rgb(247,123,22)" fg:x="100472154" fg:w="3294102"/><text x="8.2537%" y="3455.50"></text></g><g><title>[libc.so.6] (3,294,102 samples, 0.26%)</title><rect x="8.0037%" y="3429" width="0.2624%" height="15" fill="rgb(231,138,38)" fg:x="100472154" fg:w="3294102"/><text x="8.2537%" y="3439.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,813,536 samples, 0.54%)</title><rect x="8.2661%" y="3477" width="0.5428%" height="15" fill="rgb(231,145,46)" fg:x="103766256" fg:w="6813536"/><text x="8.5161%" y="3487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,813,536 samples, 0.54%)</title><rect x="8.2661%" y="3461" width="0.5428%" height="15" fill="rgb(251,118,11)" fg:x="103766256" fg:w="6813536"/><text x="8.5161%" y="3471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,813,536 samples, 0.54%)</title><rect x="8.2661%" y="3445" width="0.5428%" height="15" fill="rgb(217,147,25)" fg:x="103766256" fg:w="6813536"/><text x="8.5161%" y="3455.50"></text></g><g><title>alloc::slice::hack::to_vec (6,813,536 samples, 0.54%)</title><rect x="8.2661%" y="3429" width="0.5428%" height="15" fill="rgb(247,81,37)" fg:x="103766256" fg:w="6813536"/><text x="8.5161%" y="3439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,813,536 samples, 0.54%)</title><rect x="8.2661%" y="3413" width="0.5428%" height="15" fill="rgb(209,12,38)" fg:x="103766256" fg:w="6813536"/><text x="8.5161%" y="3423.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6,813,536 samples, 0.54%)</title><rect x="8.2661%" y="3397" width="0.5428%" height="15" fill="rgb(227,1,9)" fg:x="103766256" fg:w="6813536"/><text x="8.5161%" y="3407.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6,813,536 samples, 0.54%)</title><rect x="8.2661%" y="3381" width="0.5428%" height="15" fill="rgb(248,47,43)" fg:x="103766256" fg:w="6813536"/><text x="8.5161%" y="3391.50"></text></g><g><title>[libc.so.6] (6,813,536 samples, 0.54%)</title><rect x="8.2661%" y="3365" width="0.5428%" height="15" fill="rgb(221,10,30)" fg:x="103766256" fg:w="6813536"/><text x="8.5161%" y="3375.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,276,800 samples, 0.26%)</title><rect x="8.8089%" y="3461" width="0.2610%" height="15" fill="rgb(210,229,1)" fg:x="110579792" fg:w="3276800"/><text x="9.0589%" y="3471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,276,800 samples, 0.26%)</title><rect x="8.8089%" y="3445" width="0.2610%" height="15" fill="rgb(222,148,37)" fg:x="110579792" fg:w="3276800"/><text x="9.0589%" y="3455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,276,800 samples, 0.26%)</title><rect x="8.8089%" y="3429" width="0.2610%" height="15" fill="rgb(234,67,33)" fg:x="110579792" fg:w="3276800"/><text x="9.0589%" y="3439.50"></text></g><g><title>alloc::slice::hack::to_vec (3,276,800 samples, 0.26%)</title><rect x="8.8089%" y="3413" width="0.2610%" height="15" fill="rgb(247,98,35)" fg:x="110579792" fg:w="3276800"/><text x="9.0589%" y="3423.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,276,800 samples, 0.26%)</title><rect x="8.8089%" y="3397" width="0.2610%" height="15" fill="rgb(247,138,52)" fg:x="110579792" fg:w="3276800"/><text x="9.0589%" y="3407.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,276,800 samples, 0.26%)</title><rect x="8.8089%" y="3381" width="0.2610%" height="15" fill="rgb(213,79,30)" fg:x="110579792" fg:w="3276800"/><text x="9.0589%" y="3391.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,276,800 samples, 0.26%)</title><rect x="8.8089%" y="3365" width="0.2610%" height="15" fill="rgb(246,177,23)" fg:x="110579792" fg:w="3276800"/><text x="9.0589%" y="3375.50"></text></g><g><title>[libc.so.6] (3,276,800 samples, 0.26%)</title><rect x="8.8089%" y="3349" width="0.2610%" height="15" fill="rgb(230,62,27)" fg:x="110579792" fg:w="3276800"/><text x="9.0589%" y="3359.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,786,457 samples, 0.22%)</title><rect x="9.0699%" y="1829" width="0.2220%" height="15" fill="rgb(216,154,8)" fg:x="113856592" fg:w="2786457"/><text x="9.3199%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,786,457 samples, 0.22%)</title><rect x="9.0699%" y="1813" width="0.2220%" height="15" fill="rgb(244,35,45)" fg:x="113856592" fg:w="2786457"/><text x="9.3199%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,786,457 samples, 0.22%)</title><rect x="9.0699%" y="1797" width="0.2220%" height="15" fill="rgb(251,115,12)" fg:x="113856592" fg:w="2786457"/><text x="9.3199%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (2,786,457 samples, 0.22%)</title><rect x="9.0699%" y="1781" width="0.2220%" height="15" fill="rgb(240,54,50)" fg:x="113856592" fg:w="2786457"/><text x="9.3199%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,786,457 samples, 0.22%)</title><rect x="9.0699%" y="1765" width="0.2220%" height="15" fill="rgb(233,84,52)" fg:x="113856592" fg:w="2786457"/><text x="9.3199%" y="1775.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,786,457 samples, 0.22%)</title><rect x="9.0699%" y="1749" width="0.2220%" height="15" fill="rgb(207,117,47)" fg:x="113856592" fg:w="2786457"/><text x="9.3199%" y="1759.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,786,457 samples, 0.22%)</title><rect x="9.0699%" y="1733" width="0.2220%" height="15" fill="rgb(249,43,39)" fg:x="113856592" fg:w="2786457"/><text x="9.3199%" y="1743.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,786,457 samples, 0.22%)</title><rect x="9.0699%" y="1717" width="0.2220%" height="15" fill="rgb(209,38,44)" fg:x="113856592" fg:w="2786457"/><text x="9.3199%" y="1727.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,786,457 samples, 0.22%)</title><rect x="9.0699%" y="1701" width="0.2220%" height="15" fill="rgb(236,212,23)" fg:x="113856592" fg:w="2786457"/><text x="9.3199%" y="1711.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,786,457 samples, 0.22%)</title><rect x="9.0699%" y="1685" width="0.2220%" height="15" fill="rgb(242,79,21)" fg:x="113856592" fg:w="2786457"/><text x="9.3199%" y="1695.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,786,457 samples, 0.22%)</title><rect x="9.0699%" y="1669" width="0.2220%" height="15" fill="rgb(211,96,35)" fg:x="113856592" fg:w="2786457"/><text x="9.3199%" y="1679.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (18,898,928 samples, 1.51%)</title><rect x="8.0037%" y="3557" width="1.5055%" height="15" fill="rgb(253,215,40)" fg:x="100472154" fg:w="18898928"/><text x="8.2537%" y="3567.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (15,604,826 samples, 1.24%)</title><rect x="8.2661%" y="3541" width="1.2431%" height="15" fill="rgb(211,81,21)" fg:x="103766256" fg:w="15604826"/><text x="8.5161%" y="3551.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (15,604,826 samples, 1.24%)</title><rect x="8.2661%" y="3525" width="1.2431%" height="15" fill="rgb(208,190,38)" fg:x="103766256" fg:w="15604826"/><text x="8.5161%" y="3535.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (15,604,826 samples, 1.24%)</title><rect x="8.2661%" y="3509" width="1.2431%" height="15" fill="rgb(235,213,38)" fg:x="103766256" fg:w="15604826"/><text x="8.5161%" y="3519.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (15,604,826 samples, 1.24%)</title><rect x="8.2661%" y="3493" width="1.2431%" height="15" fill="rgb(237,122,38)" fg:x="103766256" fg:w="15604826"/><text x="8.5161%" y="3503.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,791,290 samples, 0.70%)</title><rect x="8.8089%" y="3477" width="0.7003%" height="15" fill="rgb(244,218,35)" fg:x="110579792" fg:w="8791290"/><text x="9.0589%" y="3487.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3461" width="0.4393%" height="15" fill="rgb(240,68,47)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3471.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3445" width="0.4393%" height="15" fill="rgb(210,16,53)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3455.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3429" width="0.4393%" height="15" fill="rgb(235,124,12)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3439.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3413" width="0.4393%" height="15" fill="rgb(224,169,11)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3397" width="0.4393%" height="15" fill="rgb(250,166,2)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3381" width="0.4393%" height="15" fill="rgb(242,216,29)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3391.50"></text></g><g><title>alloc::slice::hack::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3365" width="0.4393%" height="15" fill="rgb(230,116,27)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3375.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3349" width="0.4393%" height="15" fill="rgb(228,99,48)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3359.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3333" width="0.4393%" height="15" fill="rgb(253,11,6)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3343.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3317" width="0.4393%" height="15" fill="rgb(247,143,39)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3327.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3301" width="0.4393%" height="15" fill="rgb(236,97,10)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3311.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3285" width="0.4393%" height="15" fill="rgb(233,208,19)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3295.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3269" width="0.4393%" height="15" fill="rgb(216,164,2)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3253" width="0.4393%" height="15" fill="rgb(220,129,5)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3237" width="0.4393%" height="15" fill="rgb(242,17,10)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3247.50"></text></g><g><title>alloc::slice::hack::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3221" width="0.4393%" height="15" fill="rgb(242,107,0)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3205" width="0.4393%" height="15" fill="rgb(251,28,31)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3215.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3189" width="0.4393%" height="15" fill="rgb(233,223,10)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3199.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3173" width="0.4393%" height="15" fill="rgb(215,21,27)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3183.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3157" width="0.4393%" height="15" fill="rgb(232,23,21)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3167.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3141" width="0.4393%" height="15" fill="rgb(244,5,23)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3151.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3125" width="0.4393%" height="15" fill="rgb(226,81,46)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3109" width="0.4393%" height="15" fill="rgb(247,70,30)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3093" width="0.4393%" height="15" fill="rgb(212,68,19)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3103.50"></text></g><g><title>alloc::slice::hack::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3077" width="0.4393%" height="15" fill="rgb(240,187,13)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3061" width="0.4393%" height="15" fill="rgb(223,113,26)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3071.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3045" width="0.4393%" height="15" fill="rgb(206,192,2)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3055.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3029" width="0.4393%" height="15" fill="rgb(241,108,4)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="3013" width="0.4393%" height="15" fill="rgb(247,173,49)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2997" width="0.4393%" height="15" fill="rgb(224,114,35)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="3007.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2981" width="0.4393%" height="15" fill="rgb(245,159,27)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2965" width="0.4393%" height="15" fill="rgb(245,172,44)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2949" width="0.4393%" height="15" fill="rgb(236,23,11)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2959.50"></text></g><g><title>alloc::slice::hack::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2933" width="0.4393%" height="15" fill="rgb(205,117,38)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2917" width="0.4393%" height="15" fill="rgb(237,72,25)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2927.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2901" width="0.4393%" height="15" fill="rgb(244,70,9)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2911.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2885" width="0.4393%" height="15" fill="rgb(217,125,39)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2869" width="0.4393%" height="15" fill="rgb(235,36,10)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2879.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2853" width="0.4393%" height="15" fill="rgb(251,123,47)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2863.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2837" width="0.4393%" height="15" fill="rgb(221,13,13)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2821" width="0.4393%" height="15" fill="rgb(238,131,9)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2805" width="0.4393%" height="15" fill="rgb(211,50,8)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2815.50"></text></g><g><title>alloc::slice::hack::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2789" width="0.4393%" height="15" fill="rgb(245,182,24)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2773" width="0.4393%" height="15" fill="rgb(242,14,37)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2783.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2757" width="0.4393%" height="15" fill="rgb(246,228,12)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2767.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2741" width="0.4393%" height="15" fill="rgb(213,55,15)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2725" width="0.4393%" height="15" fill="rgb(209,9,3)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2709" width="0.4393%" height="15" fill="rgb(230,59,30)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2719.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2693" width="0.4393%" height="15" fill="rgb(209,121,21)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2677" width="0.4393%" height="15" fill="rgb(220,109,13)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2661" width="0.4393%" height="15" fill="rgb(232,18,1)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2671.50"></text></g><g><title>alloc::slice::hack::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2645" width="0.4393%" height="15" fill="rgb(215,41,42)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2629" width="0.4393%" height="15" fill="rgb(224,123,36)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2639.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2613" width="0.4393%" height="15" fill="rgb(240,125,3)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2623.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2597" width="0.4393%" height="15" fill="rgb(205,98,50)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2581" width="0.4393%" height="15" fill="rgb(205,185,37)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2565" width="0.4393%" height="15" fill="rgb(238,207,15)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2575.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2549" width="0.4393%" height="15" fill="rgb(213,199,42)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2533" width="0.4393%" height="15" fill="rgb(235,201,11)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2517" width="0.4393%" height="15" fill="rgb(207,46,11)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2527.50"></text></g><g><title>alloc::slice::hack::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2501" width="0.4393%" height="15" fill="rgb(241,35,35)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2485" width="0.4393%" height="15" fill="rgb(243,32,47)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2495.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2469" width="0.4393%" height="15" fill="rgb(247,202,23)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2479.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2453" width="0.4393%" height="15" fill="rgb(219,102,11)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2437" width="0.4393%" height="15" fill="rgb(243,110,44)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2421" width="0.4393%" height="15" fill="rgb(222,74,54)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2431.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2405" width="0.4393%" height="15" fill="rgb(216,99,12)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2389" width="0.4393%" height="15" fill="rgb(226,22,26)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2373" width="0.4393%" height="15" fill="rgb(217,163,10)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2383.50"></text></g><g><title>alloc::slice::hack::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2357" width="0.4393%" height="15" fill="rgb(213,25,53)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2341" width="0.4393%" height="15" fill="rgb(252,105,26)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2351.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2325" width="0.4393%" height="15" fill="rgb(220,39,43)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2335.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2309" width="0.4393%" height="15" fill="rgb(229,68,48)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2293" width="0.4393%" height="15" fill="rgb(252,8,32)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2277" width="0.4393%" height="15" fill="rgb(223,20,43)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2287.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2261" width="0.4393%" height="15" fill="rgb(229,81,49)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2245" width="0.4393%" height="15" fill="rgb(236,28,36)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2229" width="0.4393%" height="15" fill="rgb(249,185,26)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2239.50"></text></g><g><title>alloc::slice::hack::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2213" width="0.4393%" height="15" fill="rgb(249,174,33)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2197" width="0.4393%" height="15" fill="rgb(233,201,37)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2207.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2181" width="0.4393%" height="15" fill="rgb(221,78,26)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2191.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2165" width="0.4393%" height="15" fill="rgb(250,127,30)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2149" width="0.4393%" height="15" fill="rgb(230,49,44)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2133" width="0.4393%" height="15" fill="rgb(229,67,23)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2143.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2117" width="0.4393%" height="15" fill="rgb(249,83,47)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2101" width="0.4393%" height="15" fill="rgb(215,43,3)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2111.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2085" width="0.4393%" height="15" fill="rgb(238,154,13)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2095.50"></text></g><g><title>alloc::slice::hack::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2069" width="0.4393%" height="15" fill="rgb(219,56,2)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2079.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2053" width="0.4393%" height="15" fill="rgb(233,0,4)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2063.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2037" width="0.4393%" height="15" fill="rgb(235,30,7)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2047.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2021" width="0.4393%" height="15" fill="rgb(250,79,13)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2031.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="2005" width="0.4393%" height="15" fill="rgb(211,146,34)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="2015.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="1989" width="0.4393%" height="15" fill="rgb(228,22,38)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="1999.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="1973" width="0.4393%" height="15" fill="rgb(235,168,5)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="1957" width="0.4393%" height="15" fill="rgb(221,155,16)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="1967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="1941" width="0.4393%" height="15" fill="rgb(215,215,53)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="1951.50"></text></g><g><title>alloc::slice::hack::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="1925" width="0.4393%" height="15" fill="rgb(223,4,10)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="1935.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="1909" width="0.4393%" height="15" fill="rgb(234,103,6)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="1919.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="1893" width="0.4393%" height="15" fill="rgb(227,97,0)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="1903.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="1877" width="0.4393%" height="15" fill="rgb(234,150,53)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="1861" width="0.4393%" height="15" fill="rgb(228,201,54)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,514,490 samples, 0.44%)</title><rect x="9.0699%" y="1845" width="0.4393%" height="15" fill="rgb(222,22,37)" fg:x="113856592" fg:w="5514490"/><text x="9.3199%" y="1855.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (2,728,033 samples, 0.22%)</title><rect x="9.2919%" y="1829" width="0.2173%" height="15" fill="rgb(237,53,32)" fg:x="116643049" fg:w="2728033"/><text x="9.5419%" y="1839.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (2,728,033 samples, 0.22%)</title><rect x="9.2919%" y="1813" width="0.2173%" height="15" fill="rgb(233,25,53)" fg:x="116643049" fg:w="2728033"/><text x="9.5419%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (2,728,033 samples, 0.22%)</title><rect x="9.2919%" y="1797" width="0.2173%" height="15" fill="rgb(210,40,34)" fg:x="116643049" fg:w="2728033"/><text x="9.5419%" y="1807.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (2,728,033 samples, 0.22%)</title><rect x="9.2919%" y="1781" width="0.2173%" height="15" fill="rgb(241,220,44)" fg:x="116643049" fg:w="2728033"/><text x="9.5419%" y="1791.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (2,728,033 samples, 0.22%)</title><rect x="9.2919%" y="1765" width="0.2173%" height="15" fill="rgb(235,28,35)" fg:x="116643049" fg:w="2728033"/><text x="9.5419%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,728,033 samples, 0.22%)</title><rect x="9.2919%" y="1749" width="0.2173%" height="15" fill="rgb(210,56,17)" fg:x="116643049" fg:w="2728033"/><text x="9.5419%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,728,033 samples, 0.22%)</title><rect x="9.2919%" y="1733" width="0.2173%" height="15" fill="rgb(224,130,29)" fg:x="116643049" fg:w="2728033"/><text x="9.5419%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (2,728,033 samples, 0.22%)</title><rect x="9.2919%" y="1717" width="0.2173%" height="15" fill="rgb(235,212,8)" fg:x="116643049" fg:w="2728033"/><text x="9.5419%" y="1727.50"></text></g><g><title>malloc (2,728,033 samples, 0.22%)</title><rect x="9.2919%" y="1701" width="0.2173%" height="15" fill="rgb(223,33,50)" fg:x="116643049" fg:w="2728033"/><text x="9.5419%" y="1711.50"></text></g><g><title>[libc.so.6] (2,728,033 samples, 0.22%)</title><rect x="9.2919%" y="1685" width="0.2173%" height="15" fill="rgb(219,149,13)" fg:x="116643049" fg:w="2728033"/><text x="9.5419%" y="1695.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,300,406 samples, 0.26%)</title><rect x="9.5092%" y="3381" width="0.2629%" height="15" fill="rgb(250,156,29)" fg:x="119371082" fg:w="3300406"/><text x="9.7592%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,300,406 samples, 0.26%)</title><rect x="9.5092%" y="3365" width="0.2629%" height="15" fill="rgb(216,193,19)" fg:x="119371082" fg:w="3300406"/><text x="9.7592%" y="3375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,300,406 samples, 0.26%)</title><rect x="9.5092%" y="3349" width="0.2629%" height="15" fill="rgb(216,135,14)" fg:x="119371082" fg:w="3300406"/><text x="9.7592%" y="3359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,300,406 samples, 0.26%)</title><rect x="9.5092%" y="3333" width="0.2629%" height="15" fill="rgb(241,47,5)" fg:x="119371082" fg:w="3300406"/><text x="9.7592%" y="3343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,300,406 samples, 0.26%)</title><rect x="9.5092%" y="3317" width="0.2629%" height="15" fill="rgb(233,42,35)" fg:x="119371082" fg:w="3300406"/><text x="9.7592%" y="3327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,300,406 samples, 0.26%)</title><rect x="9.5092%" y="3301" width="0.2629%" height="15" fill="rgb(231,13,6)" fg:x="119371082" fg:w="3300406"/><text x="9.7592%" y="3311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,300,406 samples, 0.26%)</title><rect x="9.5092%" y="3285" width="0.2629%" height="15" fill="rgb(207,181,40)" fg:x="119371082" fg:w="3300406"/><text x="9.7592%" y="3295.50"></text></g><g><title>alloc::alloc::dealloc (3,300,406 samples, 0.26%)</title><rect x="9.5092%" y="3269" width="0.2629%" height="15" fill="rgb(254,173,49)" fg:x="119371082" fg:w="3300406"/><text x="9.7592%" y="3279.50"></text></g><g><title>cfree (3,300,406 samples, 0.26%)</title><rect x="9.5092%" y="3253" width="0.2629%" height="15" fill="rgb(221,1,38)" fg:x="119371082" fg:w="3300406"/><text x="9.7592%" y="3263.50"></text></g><g><title>[libc.so.6] (3,300,406 samples, 0.26%)</title><rect x="9.5092%" y="3237" width="0.2629%" height="15" fill="rgb(206,124,46)" fg:x="119371082" fg:w="3300406"/><text x="9.7592%" y="3247.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,655,044 samples, 0.29%)</title><rect x="9.7721%" y="3205" width="0.2912%" height="15" fill="rgb(249,21,11)" fg:x="122671488" fg:w="3655044"/><text x="10.0221%" y="3215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,655,044 samples, 0.29%)</title><rect x="9.7721%" y="3189" width="0.2912%" height="15" fill="rgb(222,201,40)" fg:x="122671488" fg:w="3655044"/><text x="10.0221%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,655,044 samples, 0.29%)</title><rect x="9.7721%" y="3173" width="0.2912%" height="15" fill="rgb(235,61,29)" fg:x="122671488" fg:w="3655044"/><text x="10.0221%" y="3183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,655,044 samples, 0.29%)</title><rect x="9.7721%" y="3157" width="0.2912%" height="15" fill="rgb(219,207,3)" fg:x="122671488" fg:w="3655044"/><text x="10.0221%" y="3167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,655,044 samples, 0.29%)</title><rect x="9.7721%" y="3141" width="0.2912%" height="15" fill="rgb(222,56,46)" fg:x="122671488" fg:w="3655044"/><text x="10.0221%" y="3151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,655,044 samples, 0.29%)</title><rect x="9.7721%" y="3125" width="0.2912%" height="15" fill="rgb(239,76,54)" fg:x="122671488" fg:w="3655044"/><text x="10.0221%" y="3135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (3,655,044 samples, 0.29%)</title><rect x="9.7721%" y="3109" width="0.2912%" height="15" fill="rgb(231,124,27)" fg:x="122671488" fg:w="3655044"/><text x="10.0221%" y="3119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (10,019,487 samples, 0.80%)</title><rect x="9.5092%" y="3557" width="0.7982%" height="15" fill="rgb(249,195,6)" fg:x="119371082" fg:w="10019487"/><text x="9.7592%" y="3567.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (10,019,487 samples, 0.80%)</title><rect x="9.5092%" y="3541" width="0.7982%" height="15" fill="rgb(237,174,47)" fg:x="119371082" fg:w="10019487"/><text x="9.7592%" y="3551.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (10,019,487 samples, 0.80%)</title><rect x="9.5092%" y="3525" width="0.7982%" height="15" fill="rgb(206,201,31)" fg:x="119371082" fg:w="10019487"/><text x="9.7592%" y="3535.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10,019,487 samples, 0.80%)</title><rect x="9.5092%" y="3509" width="0.7982%" height="15" fill="rgb(231,57,52)" fg:x="119371082" fg:w="10019487"/><text x="9.7592%" y="3519.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10,019,487 samples, 0.80%)</title><rect x="9.5092%" y="3493" width="0.7982%" height="15" fill="rgb(248,177,22)" fg:x="119371082" fg:w="10019487"/><text x="9.7592%" y="3503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10,019,487 samples, 0.80%)</title><rect x="9.5092%" y="3477" width="0.7982%" height="15" fill="rgb(215,211,37)" fg:x="119371082" fg:w="10019487"/><text x="9.7592%" y="3487.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10,019,487 samples, 0.80%)</title><rect x="9.5092%" y="3461" width="0.7982%" height="15" fill="rgb(241,128,51)" fg:x="119371082" fg:w="10019487"/><text x="9.7592%" y="3471.50"></text></g><g><title>core::mem::drop (10,019,487 samples, 0.80%)</title><rect x="9.5092%" y="3445" width="0.7982%" height="15" fill="rgb(227,165,31)" fg:x="119371082" fg:w="10019487"/><text x="9.7592%" y="3455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10,019,487 samples, 0.80%)</title><rect x="9.5092%" y="3429" width="0.7982%" height="15" fill="rgb(228,167,24)" fg:x="119371082" fg:w="10019487"/><text x="9.7592%" y="3439.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10,019,487 samples, 0.80%)</title><rect x="9.5092%" y="3413" width="0.7982%" height="15" fill="rgb(228,143,12)" fg:x="119371082" fg:w="10019487"/><text x="9.7592%" y="3423.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (10,019,487 samples, 0.80%)</title><rect x="9.5092%" y="3397" width="0.7982%" height="15" fill="rgb(249,149,8)" fg:x="119371082" fg:w="10019487"/><text x="9.7592%" y="3407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,719,081 samples, 0.54%)</title><rect x="9.7721%" y="3381" width="0.5352%" height="15" fill="rgb(243,35,44)" fg:x="122671488" fg:w="6719081"/><text x="10.0221%" y="3391.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,719,081 samples, 0.54%)</title><rect x="9.7721%" y="3365" width="0.5352%" height="15" fill="rgb(246,89,9)" fg:x="122671488" fg:w="6719081"/><text x="10.0221%" y="3375.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,719,081 samples, 0.54%)</title><rect x="9.7721%" y="3349" width="0.5352%" height="15" fill="rgb(233,213,13)" fg:x="122671488" fg:w="6719081"/><text x="10.0221%" y="3359.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,719,081 samples, 0.54%)</title><rect x="9.7721%" y="3333" width="0.5352%" height="15" fill="rgb(233,141,41)" fg:x="122671488" fg:w="6719081"/><text x="10.0221%" y="3343.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,719,081 samples, 0.54%)</title><rect x="9.7721%" y="3317" width="0.5352%" height="15" fill="rgb(239,167,4)" fg:x="122671488" fg:w="6719081"/><text x="10.0221%" y="3327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,719,081 samples, 0.54%)</title><rect x="9.7721%" y="3301" width="0.5352%" height="15" fill="rgb(209,217,16)" fg:x="122671488" fg:w="6719081"/><text x="10.0221%" y="3311.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,719,081 samples, 0.54%)</title><rect x="9.7721%" y="3285" width="0.5352%" height="15" fill="rgb(219,88,35)" fg:x="122671488" fg:w="6719081"/><text x="10.0221%" y="3295.50"></text></g><g><title>core::mem::drop (6,719,081 samples, 0.54%)</title><rect x="9.7721%" y="3269" width="0.5352%" height="15" fill="rgb(220,193,23)" fg:x="122671488" fg:w="6719081"/><text x="10.0221%" y="3279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,719,081 samples, 0.54%)</title><rect x="9.7721%" y="3253" width="0.5352%" height="15" fill="rgb(230,90,52)" fg:x="122671488" fg:w="6719081"/><text x="10.0221%" y="3263.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,719,081 samples, 0.54%)</title><rect x="9.7721%" y="3237" width="0.5352%" height="15" fill="rgb(252,106,19)" fg:x="122671488" fg:w="6719081"/><text x="10.0221%" y="3247.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,719,081 samples, 0.54%)</title><rect x="9.7721%" y="3221" width="0.5352%" height="15" fill="rgb(206,74,20)" fg:x="122671488" fg:w="6719081"/><text x="10.0221%" y="3231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="3205" width="0.2441%" height="15" fill="rgb(230,138,44)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="3215.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="3189" width="0.2441%" height="15" fill="rgb(235,182,43)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="3199.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="3173" width="0.2441%" height="15" fill="rgb(242,16,51)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="3183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="3157" width="0.2441%" height="15" fill="rgb(248,9,4)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="3167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="3141" width="0.2441%" height="15" fill="rgb(210,31,22)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="3151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="3125" width="0.2441%" height="15" fill="rgb(239,54,39)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="3135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="3109" width="0.2441%" height="15" fill="rgb(230,99,41)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="3119.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="3093" width="0.2441%" height="15" fill="rgb(253,106,12)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="3103.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="3077" width="0.2441%" height="15" fill="rgb(213,46,41)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="3061" width="0.2441%" height="15" fill="rgb(215,133,35)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="3071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="3045" width="0.2441%" height="15" fill="rgb(213,28,5)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="3055.50"></text></g><g><title>core::mem::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="3029" width="0.2441%" height="15" fill="rgb(215,77,49)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="3039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="3013" width="0.2441%" height="15" fill="rgb(248,100,22)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="3023.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2997" width="0.2441%" height="15" fill="rgb(208,67,9)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="3007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2981" width="0.2441%" height="15" fill="rgb(219,133,21)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2965" width="0.2441%" height="15" fill="rgb(246,46,29)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2975.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2949" width="0.2441%" height="15" fill="rgb(246,185,52)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2933" width="0.2441%" height="15" fill="rgb(252,136,11)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2917" width="0.2441%" height="15" fill="rgb(219,138,53)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2901" width="0.2441%" height="15" fill="rgb(211,51,23)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2885" width="0.2441%" height="15" fill="rgb(247,221,28)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2869" width="0.2441%" height="15" fill="rgb(251,222,45)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2853" width="0.2441%" height="15" fill="rgb(217,162,53)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2837" width="0.2441%" height="15" fill="rgb(229,93,14)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2821" width="0.2441%" height="15" fill="rgb(209,67,49)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2831.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2805" width="0.2441%" height="15" fill="rgb(213,87,29)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2815.50"></text></g><g><title>core::mem::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2789" width="0.2441%" height="15" fill="rgb(205,151,52)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2773" width="0.2441%" height="15" fill="rgb(253,215,39)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2783.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2757" width="0.2441%" height="15" fill="rgb(221,220,41)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2767.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2741" width="0.2441%" height="15" fill="rgb(218,133,21)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2725" width="0.2441%" height="15" fill="rgb(221,193,43)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2735.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2709" width="0.2441%" height="15" fill="rgb(240,128,52)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2719.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2693" width="0.2441%" height="15" fill="rgb(253,114,12)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2677" width="0.2441%" height="15" fill="rgb(215,223,47)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2661" width="0.2441%" height="15" fill="rgb(248,225,23)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2645" width="0.2441%" height="15" fill="rgb(250,108,0)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2629" width="0.2441%" height="15" fill="rgb(228,208,7)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2613" width="0.2441%" height="15" fill="rgb(244,45,10)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2597" width="0.2441%" height="15" fill="rgb(207,125,25)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2581" width="0.2441%" height="15" fill="rgb(210,195,18)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2565" width="0.2441%" height="15" fill="rgb(249,80,12)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2575.50"></text></g><g><title>core::mem::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2549" width="0.2441%" height="15" fill="rgb(221,65,9)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2533" width="0.2441%" height="15" fill="rgb(235,49,36)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2517" width="0.2441%" height="15" fill="rgb(225,32,20)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2501" width="0.2441%" height="15" fill="rgb(215,141,46)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2485" width="0.2441%" height="15" fill="rgb(250,160,47)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2495.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2469" width="0.2441%" height="15" fill="rgb(216,222,40)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2479.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2453" width="0.2441%" height="15" fill="rgb(234,217,39)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2437" width="0.2441%" height="15" fill="rgb(207,178,40)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2421" width="0.2441%" height="15" fill="rgb(221,136,13)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2405" width="0.2441%" height="15" fill="rgb(249,199,10)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2389" width="0.2441%" height="15" fill="rgb(249,222,13)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2373" width="0.2441%" height="15" fill="rgb(244,185,38)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2357" width="0.2441%" height="15" fill="rgb(236,202,9)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2341" width="0.2441%" height="15" fill="rgb(250,229,37)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2325" width="0.2441%" height="15" fill="rgb(206,174,23)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2335.50"></text></g><g><title>core::mem::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2309" width="0.2441%" height="15" fill="rgb(211,33,43)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2293" width="0.2441%" height="15" fill="rgb(245,58,50)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2277" width="0.2441%" height="15" fill="rgb(244,68,36)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2261" width="0.2441%" height="15" fill="rgb(232,229,15)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2245" width="0.2441%" height="15" fill="rgb(254,30,23)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2255.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2229" width="0.2441%" height="15" fill="rgb(235,160,14)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2239.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2213" width="0.2441%" height="15" fill="rgb(212,155,44)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2197" width="0.2441%" height="15" fill="rgb(226,2,50)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2181" width="0.2441%" height="15" fill="rgb(234,177,6)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2165" width="0.2441%" height="15" fill="rgb(217,24,9)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2149" width="0.2441%" height="15" fill="rgb(220,13,46)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2133" width="0.2441%" height="15" fill="rgb(239,221,27)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2117" width="0.2441%" height="15" fill="rgb(222,198,25)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2101" width="0.2441%" height="15" fill="rgb(211,99,13)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2085" width="0.2441%" height="15" fill="rgb(232,111,31)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2095.50"></text></g><g><title>core::mem::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2069" width="0.2441%" height="15" fill="rgb(245,82,37)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2053" width="0.2441%" height="15" fill="rgb(227,149,46)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2063.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2037" width="0.2441%" height="15" fill="rgb(218,36,50)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2047.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2021" width="0.2441%" height="15" fill="rgb(226,80,48)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="2005" width="0.2441%" height="15" fill="rgb(238,224,15)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="2015.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1989" width="0.2441%" height="15" fill="rgb(241,136,10)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1999.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1973" width="0.2441%" height="15" fill="rgb(208,32,45)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1957" width="0.2441%" height="15" fill="rgb(207,135,9)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1941" width="0.2441%" height="15" fill="rgb(206,86,44)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1925" width="0.2441%" height="15" fill="rgb(245,177,15)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1909" width="0.2441%" height="15" fill="rgb(206,64,50)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1893" width="0.2441%" height="15" fill="rgb(234,36,40)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1877" width="0.2441%" height="15" fill="rgb(213,64,8)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1861" width="0.2441%" height="15" fill="rgb(210,75,36)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1845" width="0.2441%" height="15" fill="rgb(229,88,21)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1855.50"></text></g><g><title>core::mem::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1829" width="0.2441%" height="15" fill="rgb(252,204,47)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1813" width="0.2441%" height="15" fill="rgb(208,77,27)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1797" width="0.2441%" height="15" fill="rgb(221,76,26)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1807.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1781" width="0.2441%" height="15" fill="rgb(225,139,18)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1765" width="0.2441%" height="15" fill="rgb(230,137,11)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1775.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1749" width="0.2441%" height="15" fill="rgb(212,28,1)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1759.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1733" width="0.2441%" height="15" fill="rgb(248,164,17)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1717" width="0.2441%" height="15" fill="rgb(222,171,42)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1701" width="0.2441%" height="15" fill="rgb(243,84,45)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1685" width="0.2441%" height="15" fill="rgb(252,49,23)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1669" width="0.2441%" height="15" fill="rgb(215,19,7)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1653" width="0.2441%" height="15" fill="rgb(238,81,41)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1637" width="0.2441%" height="15" fill="rgb(210,199,37)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1621" width="0.2441%" height="15" fill="rgb(244,192,49)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1605" width="0.2441%" height="15" fill="rgb(226,211,11)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1615.50"></text></g><g><title>core::mem::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1589" width="0.2441%" height="15" fill="rgb(236,162,54)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1573" width="0.2441%" height="15" fill="rgb(220,229,9)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1557" width="0.2441%" height="15" fill="rgb(250,87,22)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1541" width="0.2441%" height="15" fill="rgb(239,43,17)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1525" width="0.2441%" height="15" fill="rgb(231,177,25)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1535.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1509" width="0.2441%" height="15" fill="rgb(219,179,1)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1519.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1493" width="0.2441%" height="15" fill="rgb(238,219,53)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1477" width="0.2441%" height="15" fill="rgb(232,167,36)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1461" width="0.2441%" height="15" fill="rgb(244,19,51)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1445" width="0.2441%" height="15" fill="rgb(224,6,22)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1429" width="0.2441%" height="15" fill="rgb(224,145,5)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1413" width="0.2441%" height="15" fill="rgb(234,130,49)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1397" width="0.2441%" height="15" fill="rgb(254,6,2)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1381" width="0.2441%" height="15" fill="rgb(208,96,46)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1365" width="0.2441%" height="15" fill="rgb(239,3,39)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1375.50"></text></g><g><title>core::mem::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1349" width="0.2441%" height="15" fill="rgb(233,210,1)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1333" width="0.2441%" height="15" fill="rgb(244,137,37)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1317" width="0.2441%" height="15" fill="rgb(240,136,2)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1327.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1301" width="0.2441%" height="15" fill="rgb(239,18,37)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1311.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1285" width="0.2441%" height="15" fill="rgb(218,185,22)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1269" width="0.2441%" height="15" fill="rgb(225,218,4)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1253" width="0.2441%" height="15" fill="rgb(230,182,32)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1237" width="0.2441%" height="15" fill="rgb(242,56,43)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1221" width="0.2441%" height="15" fill="rgb(233,99,24)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1205" width="0.2441%" height="15" fill="rgb(234,209,42)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1189" width="0.2441%" height="15" fill="rgb(227,7,12)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1173" width="0.2441%" height="15" fill="rgb(245,203,43)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1183.50"></text></g><g><title>cfree (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1157" width="0.2441%" height="15" fill="rgb(238,205,33)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1167.50"></text></g><g><title>[libc.so.6] (3,064,037 samples, 0.24%)</title><rect x="10.0633%" y="1141" width="0.2441%" height="15" fill="rgb(231,56,7)" fg:x="126326532" fg:w="3064037"/><text x="10.3133%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6,770,985 samples, 0.54%)</title><rect x="10.3073%" y="3557" width="0.5394%" height="15" fill="rgb(244,186,29)" fg:x="129390569" fg:w="6770985"/><text x="10.5573%" y="3567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6,770,985 samples, 0.54%)</title><rect x="10.3073%" y="3541" width="0.5394%" height="15" fill="rgb(234,111,31)" fg:x="129390569" fg:w="6770985"/><text x="10.5573%" y="3551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (6,770,985 samples, 0.54%)</title><rect x="10.3073%" y="3525" width="0.5394%" height="15" fill="rgb(241,149,10)" fg:x="129390569" fg:w="6770985"/><text x="10.5573%" y="3535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (6,770,985 samples, 0.54%)</title><rect x="10.3073%" y="3509" width="0.5394%" height="15" fill="rgb(249,206,44)" fg:x="129390569" fg:w="6770985"/><text x="10.5573%" y="3519.50"></text></g><g><title>alloc::raw_vec::finish_grow (6,770,985 samples, 0.54%)</title><rect x="10.3073%" y="3493" width="0.5394%" height="15" fill="rgb(251,153,30)" fg:x="129390569" fg:w="6770985"/><text x="10.5573%" y="3503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6,770,985 samples, 0.54%)</title><rect x="10.3073%" y="3477" width="0.5394%" height="15" fill="rgb(239,152,38)" fg:x="129390569" fg:w="6770985"/><text x="10.5573%" y="3487.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6,770,985 samples, 0.54%)</title><rect x="10.3073%" y="3461" width="0.5394%" height="15" fill="rgb(249,139,47)" fg:x="129390569" fg:w="6770985"/><text x="10.5573%" y="3471.50"></text></g><g><title>alloc::alloc::realloc (6,770,985 samples, 0.54%)</title><rect x="10.3073%" y="3445" width="0.5394%" height="15" fill="rgb(244,64,35)" fg:x="129390569" fg:w="6770985"/><text x="10.5573%" y="3455.50"></text></g><g><title>realloc (6,770,985 samples, 0.54%)</title><rect x="10.3073%" y="3429" width="0.5394%" height="15" fill="rgb(216,46,15)" fg:x="129390569" fg:w="6770985"/><text x="10.5573%" y="3439.50"></text></g><g><title>[libc.so.6] (6,770,985 samples, 0.54%)</title><rect x="10.3073%" y="3413" width="0.5394%" height="15" fill="rgb(250,74,19)" fg:x="129390569" fg:w="6770985"/><text x="10.5573%" y="3423.50"></text></g><g><title>[libc.so.6] (6,770,985 samples, 0.54%)</title><rect x="10.3073%" y="3397" width="0.5394%" height="15" fill="rgb(249,42,33)" fg:x="129390569" fg:w="6770985"/><text x="10.5573%" y="3407.50"></text></g><g><title>[libc.so.6] (6,770,985 samples, 0.54%)</title><rect x="10.3073%" y="3381" width="0.5394%" height="15" fill="rgb(242,149,17)" fg:x="129390569" fg:w="6770985"/><text x="10.5573%" y="3391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,348,670 samples, 0.27%)</title><rect x="10.8467%" y="3493" width="0.2668%" height="15" fill="rgb(244,29,21)" fg:x="136161554" fg:w="3348670"/><text x="11.0967%" y="3503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,348,670 samples, 0.27%)</title><rect x="10.8467%" y="3477" width="0.2668%" height="15" fill="rgb(220,130,37)" fg:x="136161554" fg:w="3348670"/><text x="11.0967%" y="3487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,348,670 samples, 0.27%)</title><rect x="10.8467%" y="3461" width="0.2668%" height="15" fill="rgb(211,67,2)" fg:x="136161554" fg:w="3348670"/><text x="11.0967%" y="3471.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,348,670 samples, 0.27%)</title><rect x="10.8467%" y="3445" width="0.2668%" height="15" fill="rgb(235,68,52)" fg:x="136161554" fg:w="3348670"/><text x="11.0967%" y="3455.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,348,670 samples, 0.27%)</title><rect x="10.8467%" y="3429" width="0.2668%" height="15" fill="rgb(246,142,3)" fg:x="136161554" fg:w="3348670"/><text x="11.0967%" y="3439.50"></text></g><g><title>malloc (3,348,670 samples, 0.27%)</title><rect x="10.8467%" y="3413" width="0.2668%" height="15" fill="rgb(241,25,7)" fg:x="136161554" fg:w="3348670"/><text x="11.0967%" y="3423.50"></text></g><g><title>[libc.so.6] (3,348,670 samples, 0.27%)</title><rect x="10.8467%" y="3397" width="0.2668%" height="15" fill="rgb(242,119,39)" fg:x="136161554" fg:w="3348670"/><text x="11.0967%" y="3407.50"></text></g><g><title>[libc.so.6] (3,348,670 samples, 0.27%)</title><rect x="10.8467%" y="3381" width="0.2668%" height="15" fill="rgb(241,98,45)" fg:x="136161554" fg:w="3348670"/><text x="11.0967%" y="3391.50"></text></g><g><title>benchmark::json_to_html_node (6,064,357 samples, 0.48%)</title><rect x="10.8467%" y="3541" width="0.4831%" height="15" fill="rgb(254,28,30)" fg:x="136161554" fg:w="6064357"/><text x="11.0967%" y="3551.50"></text></g><g><title>benchmark::json_to_html_node (6,064,357 samples, 0.48%)</title><rect x="10.8467%" y="3525" width="0.4831%" height="15" fill="rgb(241,142,54)" fg:x="136161554" fg:w="6064357"/><text x="11.0967%" y="3535.50"></text></g><g><title>benchmark::json_to_html_node (6,064,357 samples, 0.48%)</title><rect x="10.8467%" y="3509" width="0.4831%" height="15" fill="rgb(222,85,15)" fg:x="136161554" fg:w="6064357"/><text x="11.0967%" y="3519.50"></text></g><g><title>benchmark::json_to_html_node (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3493" width="0.2163%" height="15" fill="rgb(210,85,47)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3503.50"></text></g><g><title>benchmark::json_to_html_node (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3477" width="0.2163%" height="15" fill="rgb(224,206,25)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3487.50"></text></g><g><title>benchmark::json_to_html_node (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3461" width="0.2163%" height="15" fill="rgb(243,201,19)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3471.50"></text></g><g><title>benchmark::json_to_html_node (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3445" width="0.2163%" height="15" fill="rgb(236,59,4)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3455.50"></text></g><g><title>benchmark::json_to_html_node (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3429" width="0.2163%" height="15" fill="rgb(254,179,45)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3439.50"></text></g><g><title>benchmark::json_to_html_node (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3413" width="0.2163%" height="15" fill="rgb(226,14,10)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3423.50"></text></g><g><title>benchmark::json_to_html_node (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3397" width="0.2163%" height="15" fill="rgb(244,27,41)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3381" width="0.2163%" height="15" fill="rgb(235,35,32)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3391.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3365" width="0.2163%" height="15" fill="rgb(218,68,31)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3375.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3349" width="0.2163%" height="15" fill="rgb(207,120,37)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3359.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3333" width="0.2163%" height="15" fill="rgb(227,98,0)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3343.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3317" width="0.2163%" height="15" fill="rgb(207,7,3)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3301" width="0.2163%" height="15" fill="rgb(206,98,19)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3311.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3285" width="0.2163%" height="15" fill="rgb(217,5,26)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3295.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3269" width="0.2163%" height="15" fill="rgb(235,190,38)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3253" width="0.2163%" height="15" fill="rgb(247,86,24)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3263.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3237" width="0.2163%" height="15" fill="rgb(205,101,16)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3247.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3221" width="0.2163%" height="15" fill="rgb(246,168,33)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3205" width="0.2163%" height="15" fill="rgb(231,114,1)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3189" width="0.2163%" height="15" fill="rgb(207,184,53)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3199.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3173" width="0.2163%" height="15" fill="rgb(224,95,51)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3183.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3157" width="0.2163%" height="15" fill="rgb(212,188,45)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3167.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3141" width="0.2163%" height="15" fill="rgb(223,154,38)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3151.50"></text></g><g><title>core::str::pattern::Searcher::next_match (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3125" width="0.2163%" height="15" fill="rgb(251,22,52)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3135.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3109" width="0.2163%" height="15" fill="rgb(229,209,22)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3119.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3093" width="0.2163%" height="15" fill="rgb(234,138,34)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3103.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3077" width="0.2163%" height="15" fill="rgb(212,95,11)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3087.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3061" width="0.2163%" height="15" fill="rgb(240,179,47)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3071.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (2,715,687 samples, 0.22%)</title><rect x="11.1135%" y="3045" width="0.2163%" height="15" fill="rgb(240,163,11)" fg:x="139510224" fg:w="2715687"/><text x="11.3635%" y="3055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (3,328,025 samples, 0.27%)</title><rect x="11.3298%" y="3541" width="0.2651%" height="15" fill="rgb(236,37,12)" fg:x="142225911" fg:w="3328025"/><text x="11.5798%" y="3551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (3,328,025 samples, 0.27%)</title><rect x="11.3298%" y="3525" width="0.2651%" height="15" fill="rgb(232,164,16)" fg:x="142225911" fg:w="3328025"/><text x="11.5798%" y="3535.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,328,025 samples, 0.27%)</title><rect x="11.3298%" y="3509" width="0.2651%" height="15" fill="rgb(244,205,15)" fg:x="142225911" fg:w="3328025"/><text x="11.5798%" y="3519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,328,025 samples, 0.27%)</title><rect x="11.3298%" y="3493" width="0.2651%" height="15" fill="rgb(223,117,47)" fg:x="142225911" fg:w="3328025"/><text x="11.5798%" y="3503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,328,025 samples, 0.27%)</title><rect x="11.3298%" y="3477" width="0.2651%" height="15" fill="rgb(244,107,35)" fg:x="142225911" fg:w="3328025"/><text x="11.5798%" y="3487.50"></text></g><g><title>alloc::alloc::dealloc (3,328,025 samples, 0.27%)</title><rect x="11.3298%" y="3461" width="0.2651%" height="15" fill="rgb(205,140,8)" fg:x="142225911" fg:w="3328025"/><text x="11.5798%" y="3471.50"></text></g><g><title>cfree (3,328,025 samples, 0.27%)</title><rect x="11.3298%" y="3445" width="0.2651%" height="15" fill="rgb(228,84,46)" fg:x="142225911" fg:w="3328025"/><text x="11.5798%" y="3455.50"></text></g><g><title>benchmark::apply_frame_modifications (12,574,977 samples, 1.00%)</title><rect x="10.8467%" y="3557" width="1.0017%" height="15" fill="rgb(254,188,9)" fg:x="136161554" fg:w="12574977"/><text x="11.0967%" y="3567.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (3,182,595 samples, 0.25%)</title><rect x="11.5949%" y="3541" width="0.2535%" height="15" fill="rgb(206,112,54)" fg:x="145553936" fg:w="3182595"/><text x="11.8449%" y="3551.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (3,182,595 samples, 0.25%)</title><rect x="11.5949%" y="3525" width="0.2535%" height="15" fill="rgb(216,84,49)" fg:x="145553936" fg:w="3182595"/><text x="11.8449%" y="3535.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,182,595 samples, 0.25%)</title><rect x="11.5949%" y="3509" width="0.2535%" height="15" fill="rgb(214,194,35)" fg:x="145553936" fg:w="3182595"/><text x="11.8449%" y="3519.50"></text></g><g><title>hashbrown::map::make_hash (3,182,595 samples, 0.25%)</title><rect x="11.5949%" y="3493" width="0.2535%" height="15" fill="rgb(249,28,3)" fg:x="145553936" fg:w="3182595"/><text x="11.8449%" y="3503.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,182,595 samples, 0.25%)</title><rect x="11.5949%" y="3477" width="0.2535%" height="15" fill="rgb(222,56,52)" fg:x="145553936" fg:w="3182595"/><text x="11.8449%" y="3487.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3,182,595 samples, 0.25%)</title><rect x="11.5949%" y="3461" width="0.2535%" height="15" fill="rgb(245,217,50)" fg:x="145553936" fg:w="3182595"/><text x="11.8449%" y="3471.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,182,595 samples, 0.25%)</title><rect x="11.5949%" y="3445" width="0.2535%" height="15" fill="rgb(213,201,24)" fg:x="145553936" fg:w="3182595"/><text x="11.8449%" y="3455.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,182,595 samples, 0.25%)</title><rect x="11.5949%" y="3429" width="0.2535%" height="15" fill="rgb(248,116,28)" fg:x="145553936" fg:w="3182595"/><text x="11.8449%" y="3439.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3,182,595 samples, 0.25%)</title><rect x="11.5949%" y="3413" width="0.2535%" height="15" fill="rgb(219,72,43)" fg:x="145553936" fg:w="3182595"/><text x="11.8449%" y="3423.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3,182,595 samples, 0.25%)</title><rect x="11.5949%" y="3397" width="0.2535%" height="15" fill="rgb(209,138,14)" fg:x="145553936" fg:w="3182595"/><text x="11.8449%" y="3407.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,190,850 samples, 0.25%)</title><rect x="12.1089%" y="3205" width="0.2542%" height="15" fill="rgb(222,18,33)" fg:x="152006552" fg:w="3190850"/><text x="12.3589%" y="3215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,190,850 samples, 0.25%)</title><rect x="12.1089%" y="3189" width="0.2542%" height="15" fill="rgb(213,199,7)" fg:x="152006552" fg:w="3190850"/><text x="12.3589%" y="3199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,190,850 samples, 0.25%)</title><rect x="12.1089%" y="3173" width="0.2542%" height="15" fill="rgb(250,110,10)" fg:x="152006552" fg:w="3190850"/><text x="12.3589%" y="3183.50"></text></g><g><title>alloc::slice::hack::to_vec (3,190,850 samples, 0.25%)</title><rect x="12.1089%" y="3157" width="0.2542%" height="15" fill="rgb(248,123,6)" fg:x="152006552" fg:w="3190850"/><text x="12.3589%" y="3167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,190,850 samples, 0.25%)</title><rect x="12.1089%" y="3141" width="0.2542%" height="15" fill="rgb(206,91,31)" fg:x="152006552" fg:w="3190850"/><text x="12.3589%" y="3151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,190,850 samples, 0.25%)</title><rect x="12.1089%" y="3125" width="0.2542%" height="15" fill="rgb(211,154,13)" fg:x="152006552" fg:w="3190850"/><text x="12.3589%" y="3135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,190,850 samples, 0.25%)</title><rect x="12.1089%" y="3109" width="0.2542%" height="15" fill="rgb(225,148,7)" fg:x="152006552" fg:w="3190850"/><text x="12.3589%" y="3119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,190,850 samples, 0.25%)</title><rect x="12.1089%" y="3093" width="0.2542%" height="15" fill="rgb(220,160,43)" fg:x="152006552" fg:w="3190850"/><text x="12.3589%" y="3103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,190,850 samples, 0.25%)</title><rect x="12.1089%" y="3077" width="0.2542%" height="15" fill="rgb(213,52,39)" fg:x="152006552" fg:w="3190850"/><text x="12.3589%" y="3087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,190,850 samples, 0.25%)</title><rect x="12.1089%" y="3061" width="0.2542%" height="15" fill="rgb(243,137,7)" fg:x="152006552" fg:w="3190850"/><text x="12.3589%" y="3071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,190,850 samples, 0.25%)</title><rect x="12.1089%" y="3045" width="0.2542%" height="15" fill="rgb(230,79,13)" fg:x="152006552" fg:w="3190850"/><text x="12.3589%" y="3055.50"></text></g><g><title>alloc::alloc::alloc (3,190,850 samples, 0.25%)</title><rect x="12.1089%" y="3029" width="0.2542%" height="15" fill="rgb(247,105,23)" fg:x="152006552" fg:w="3190850"/><text x="12.3589%" y="3039.50"></text></g><g><title>malloc (3,190,850 samples, 0.25%)</title><rect x="12.1089%" y="3013" width="0.2542%" height="15" fill="rgb(223,179,41)" fg:x="152006552" fg:w="3190850"/><text x="12.3589%" y="3023.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,289,408 samples, 0.26%)</title><rect x="12.3631%" y="2965" width="0.2620%" height="15" fill="rgb(218,9,34)" fg:x="155197402" fg:w="3289408"/><text x="12.6131%" y="2975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,289,408 samples, 0.26%)</title><rect x="12.3631%" y="2949" width="0.2620%" height="15" fill="rgb(222,106,8)" fg:x="155197402" fg:w="3289408"/><text x="12.6131%" y="2959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,289,408 samples, 0.26%)</title><rect x="12.3631%" y="2933" width="0.2620%" height="15" fill="rgb(211,220,0)" fg:x="155197402" fg:w="3289408"/><text x="12.6131%" y="2943.50"></text></g><g><title>alloc::slice::hack::to_vec (3,289,408 samples, 0.26%)</title><rect x="12.3631%" y="2917" width="0.2620%" height="15" fill="rgb(229,52,16)" fg:x="155197402" fg:w="3289408"/><text x="12.6131%" y="2927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,289,408 samples, 0.26%)</title><rect x="12.3631%" y="2901" width="0.2620%" height="15" fill="rgb(212,155,18)" fg:x="155197402" fg:w="3289408"/><text x="12.6131%" y="2911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,289,408 samples, 0.26%)</title><rect x="12.3631%" y="2885" width="0.2620%" height="15" fill="rgb(242,21,14)" fg:x="155197402" fg:w="3289408"/><text x="12.6131%" y="2895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,289,408 samples, 0.26%)</title><rect x="12.3631%" y="2869" width="0.2620%" height="15" fill="rgb(222,19,48)" fg:x="155197402" fg:w="3289408"/><text x="12.6131%" y="2879.50"></text></g><g><title>[libc.so.6] (3,289,408 samples, 0.26%)</title><rect x="12.3631%" y="2853" width="0.2620%" height="15" fill="rgb(232,45,27)" fg:x="155197402" fg:w="3289408"/><text x="12.6131%" y="2863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,595,504 samples, 0.53%)</title><rect x="12.6252%" y="2885" width="0.5254%" height="15" fill="rgb(249,103,42)" fg:x="158486810" fg:w="6595504"/><text x="12.8752%" y="2895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,595,504 samples, 0.53%)</title><rect x="12.6252%" y="2869" width="0.5254%" height="15" fill="rgb(246,81,33)" fg:x="158486810" fg:w="6595504"/><text x="12.8752%" y="2879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,595,504 samples, 0.53%)</title><rect x="12.6252%" y="2853" width="0.5254%" height="15" fill="rgb(252,33,42)" fg:x="158486810" fg:w="6595504"/><text x="12.8752%" y="2863.50"></text></g><g><title>alloc::slice::hack::to_vec (6,595,504 samples, 0.53%)</title><rect x="12.6252%" y="2837" width="0.5254%" height="15" fill="rgb(209,212,41)" fg:x="158486810" fg:w="6595504"/><text x="12.8752%" y="2847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,595,504 samples, 0.53%)</title><rect x="12.6252%" y="2821" width="0.5254%" height="15" fill="rgb(207,154,6)" fg:x="158486810" fg:w="6595504"/><text x="12.8752%" y="2831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,595,504 samples, 0.53%)</title><rect x="12.6252%" y="2805" width="0.5254%" height="15" fill="rgb(223,64,47)" fg:x="158486810" fg:w="6595504"/><text x="12.8752%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,595,504 samples, 0.53%)</title><rect x="12.6252%" y="2789" width="0.5254%" height="15" fill="rgb(211,161,38)" fg:x="158486810" fg:w="6595504"/><text x="12.8752%" y="2799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,595,504 samples, 0.53%)</title><rect x="12.6252%" y="2773" width="0.5254%" height="15" fill="rgb(219,138,40)" fg:x="158486810" fg:w="6595504"/><text x="12.8752%" y="2783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,595,504 samples, 0.53%)</title><rect x="12.6252%" y="2757" width="0.5254%" height="15" fill="rgb(241,228,46)" fg:x="158486810" fg:w="6595504"/><text x="12.8752%" y="2767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,595,504 samples, 0.53%)</title><rect x="12.6252%" y="2741" width="0.5254%" height="15" fill="rgb(223,209,38)" fg:x="158486810" fg:w="6595504"/><text x="12.8752%" y="2751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,595,504 samples, 0.53%)</title><rect x="12.6252%" y="2725" width="0.5254%" height="15" fill="rgb(236,164,45)" fg:x="158486810" fg:w="6595504"/><text x="12.8752%" y="2735.50"></text></g><g><title>alloc::alloc::alloc (6,595,504 samples, 0.53%)</title><rect x="12.6252%" y="2709" width="0.5254%" height="15" fill="rgb(231,15,5)" fg:x="158486810" fg:w="6595504"/><text x="12.8752%" y="2719.50"></text></g><g><title>malloc (6,595,504 samples, 0.53%)</title><rect x="12.6252%" y="2693" width="0.5254%" height="15" fill="rgb(252,35,15)" fg:x="158486810" fg:w="6595504"/><text x="12.8752%" y="2703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,353,156 samples, 0.27%)</title><rect x="13.6701%" y="2645" width="0.2671%" height="15" fill="rgb(248,181,18)" fg:x="171604281" fg:w="3353156"/><text x="13.9201%" y="2655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,353,156 samples, 0.27%)</title><rect x="13.6701%" y="2629" width="0.2671%" height="15" fill="rgb(233,39,42)" fg:x="171604281" fg:w="3353156"/><text x="13.9201%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,353,156 samples, 0.27%)</title><rect x="13.6701%" y="2613" width="0.2671%" height="15" fill="rgb(238,110,33)" fg:x="171604281" fg:w="3353156"/><text x="13.9201%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,353,156 samples, 0.27%)</title><rect x="13.6701%" y="2597" width="0.2671%" height="15" fill="rgb(233,195,10)" fg:x="171604281" fg:w="3353156"/><text x="13.9201%" y="2607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,353,156 samples, 0.27%)</title><rect x="13.6701%" y="2581" width="0.2671%" height="15" fill="rgb(254,105,3)" fg:x="171604281" fg:w="3353156"/><text x="13.9201%" y="2591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,353,156 samples, 0.27%)</title><rect x="13.6701%" y="2565" width="0.2671%" height="15" fill="rgb(221,225,9)" fg:x="171604281" fg:w="3353156"/><text x="13.9201%" y="2575.50"></text></g><g><title>alloc::alloc::alloc (3,353,156 samples, 0.27%)</title><rect x="13.6701%" y="2549" width="0.2671%" height="15" fill="rgb(224,227,45)" fg:x="171604281" fg:w="3353156"/><text x="13.9201%" y="2559.50"></text></g><g><title>malloc (3,353,156 samples, 0.27%)</title><rect x="13.6701%" y="2533" width="0.2671%" height="15" fill="rgb(229,198,43)" fg:x="171604281" fg:w="3353156"/><text x="13.9201%" y="2543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,711,187 samples, 0.53%)</title><rect x="13.6701%" y="2725" width="0.5346%" height="15" fill="rgb(206,209,35)" fg:x="171604281" fg:w="6711187"/><text x="13.9201%" y="2735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,711,187 samples, 0.53%)</title><rect x="13.6701%" y="2709" width="0.5346%" height="15" fill="rgb(245,195,53)" fg:x="171604281" fg:w="6711187"/><text x="13.9201%" y="2719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,711,187 samples, 0.53%)</title><rect x="13.6701%" y="2693" width="0.5346%" height="15" fill="rgb(240,92,26)" fg:x="171604281" fg:w="6711187"/><text x="13.9201%" y="2703.50"></text></g><g><title>alloc::slice::hack::to_vec (6,711,187 samples, 0.53%)</title><rect x="13.6701%" y="2677" width="0.5346%" height="15" fill="rgb(207,40,23)" fg:x="171604281" fg:w="6711187"/><text x="13.9201%" y="2687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,711,187 samples, 0.53%)</title><rect x="13.6701%" y="2661" width="0.5346%" height="15" fill="rgb(223,111,35)" fg:x="171604281" fg:w="6711187"/><text x="13.9201%" y="2671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,358,031 samples, 0.27%)</title><rect x="13.9372%" y="2645" width="0.2675%" height="15" fill="rgb(229,147,28)" fg:x="174957437" fg:w="3358031"/><text x="14.1872%" y="2655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,358,031 samples, 0.27%)</title><rect x="13.9372%" y="2629" width="0.2675%" height="15" fill="rgb(211,29,28)" fg:x="174957437" fg:w="3358031"/><text x="14.1872%" y="2639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,618,868 samples, 0.53%)</title><rect x="14.2047%" y="2645" width="0.5273%" height="15" fill="rgb(228,72,33)" fg:x="178315468" fg:w="6618868"/><text x="14.4547%" y="2655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,325,267 samples, 0.26%)</title><rect x="14.4671%" y="2629" width="0.2649%" height="15" fill="rgb(205,214,31)" fg:x="181609069" fg:w="3325267"/><text x="14.7171%" y="2639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,325,267 samples, 0.26%)</title><rect x="14.4671%" y="2613" width="0.2649%" height="15" fill="rgb(224,111,15)" fg:x="181609069" fg:w="3325267"/><text x="14.7171%" y="2623.50"></text></g><g><title>alloc::slice::hack::to_vec (3,325,267 samples, 0.26%)</title><rect x="14.4671%" y="2597" width="0.2649%" height="15" fill="rgb(253,21,26)" fg:x="181609069" fg:w="3325267"/><text x="14.7171%" y="2607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,325,267 samples, 0.26%)</title><rect x="14.4671%" y="2581" width="0.2649%" height="15" fill="rgb(245,139,43)" fg:x="181609069" fg:w="3325267"/><text x="14.7171%" y="2591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,325,267 samples, 0.26%)</title><rect x="14.4671%" y="2565" width="0.2649%" height="15" fill="rgb(252,170,7)" fg:x="181609069" fg:w="3325267"/><text x="14.7171%" y="2575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,325,267 samples, 0.26%)</title><rect x="14.4671%" y="2549" width="0.2649%" height="15" fill="rgb(231,118,14)" fg:x="181609069" fg:w="3325267"/><text x="14.7171%" y="2559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,325,267 samples, 0.26%)</title><rect x="14.4671%" y="2533" width="0.2649%" height="15" fill="rgb(238,83,0)" fg:x="181609069" fg:w="3325267"/><text x="14.7171%" y="2543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,325,267 samples, 0.26%)</title><rect x="14.4671%" y="2517" width="0.2649%" height="15" fill="rgb(221,39,39)" fg:x="181609069" fg:w="3325267"/><text x="14.7171%" y="2527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,325,267 samples, 0.26%)</title><rect x="14.4671%" y="2501" width="0.2649%" height="15" fill="rgb(222,119,46)" fg:x="181609069" fg:w="3325267"/><text x="14.7171%" y="2511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,325,267 samples, 0.26%)</title><rect x="14.4671%" y="2485" width="0.2649%" height="15" fill="rgb(222,165,49)" fg:x="181609069" fg:w="3325267"/><text x="14.7171%" y="2495.50"></text></g><g><title>alloc::alloc::alloc (3,325,267 samples, 0.26%)</title><rect x="14.4671%" y="2469" width="0.2649%" height="15" fill="rgb(219,113,52)" fg:x="181609069" fg:w="3325267"/><text x="14.7171%" y="2479.50"></text></g><g><title>malloc (3,325,267 samples, 0.26%)</title><rect x="14.4671%" y="2453" width="0.2649%" height="15" fill="rgb(214,7,15)" fg:x="181609069" fg:w="3325267"/><text x="14.7171%" y="2463.50"></text></g><g><title>[libc.so.6] (3,325,267 samples, 0.26%)</title><rect x="14.4671%" y="2437" width="0.2649%" height="15" fill="rgb(235,32,4)" fg:x="181609069" fg:w="3325267"/><text x="14.7171%" y="2447.50"></text></g><g><title>__rdl_alloc (3,319,679 samples, 0.26%)</title><rect x="14.7320%" y="2373" width="0.2644%" height="15" fill="rgb(238,90,54)" fg:x="184934336" fg:w="3319679"/><text x="14.9820%" y="2383.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,319,679 samples, 0.26%)</title><rect x="14.7320%" y="2357" width="0.2644%" height="15" fill="rgb(213,208,19)" fg:x="184934336" fg:w="3319679"/><text x="14.9820%" y="2367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,607,303 samples, 0.53%)</title><rect x="14.7320%" y="2565" width="0.5263%" height="15" fill="rgb(233,156,4)" fg:x="184934336" fg:w="6607303"/><text x="14.9820%" y="2575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,607,303 samples, 0.53%)</title><rect x="14.7320%" y="2549" width="0.5263%" height="15" fill="rgb(207,194,5)" fg:x="184934336" fg:w="6607303"/><text x="14.9820%" y="2559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,607,303 samples, 0.53%)</title><rect x="14.7320%" y="2533" width="0.5263%" height="15" fill="rgb(206,111,30)" fg:x="184934336" fg:w="6607303"/><text x="14.9820%" y="2543.50"></text></g><g><title>alloc::slice::hack::to_vec (6,607,303 samples, 0.53%)</title><rect x="14.7320%" y="2517" width="0.5263%" height="15" fill="rgb(243,70,54)" fg:x="184934336" fg:w="6607303"/><text x="14.9820%" y="2527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,607,303 samples, 0.53%)</title><rect x="14.7320%" y="2501" width="0.5263%" height="15" fill="rgb(242,28,8)" fg:x="184934336" fg:w="6607303"/><text x="14.9820%" y="2511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,607,303 samples, 0.53%)</title><rect x="14.7320%" y="2485" width="0.5263%" height="15" fill="rgb(219,106,18)" fg:x="184934336" fg:w="6607303"/><text x="14.9820%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,607,303 samples, 0.53%)</title><rect x="14.7320%" y="2469" width="0.5263%" height="15" fill="rgb(244,222,10)" fg:x="184934336" fg:w="6607303"/><text x="14.9820%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,607,303 samples, 0.53%)</title><rect x="14.7320%" y="2453" width="0.5263%" height="15" fill="rgb(236,179,52)" fg:x="184934336" fg:w="6607303"/><text x="14.9820%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,607,303 samples, 0.53%)</title><rect x="14.7320%" y="2437" width="0.5263%" height="15" fill="rgb(213,23,39)" fg:x="184934336" fg:w="6607303"/><text x="14.9820%" y="2447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,607,303 samples, 0.53%)</title><rect x="14.7320%" y="2421" width="0.5263%" height="15" fill="rgb(238,48,10)" fg:x="184934336" fg:w="6607303"/><text x="14.9820%" y="2431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,607,303 samples, 0.53%)</title><rect x="14.7320%" y="2405" width="0.5263%" height="15" fill="rgb(251,196,23)" fg:x="184934336" fg:w="6607303"/><text x="14.9820%" y="2415.50"></text></g><g><title>alloc::alloc::alloc (6,607,303 samples, 0.53%)</title><rect x="14.7320%" y="2389" width="0.5263%" height="15" fill="rgb(250,152,24)" fg:x="184934336" fg:w="6607303"/><text x="14.9820%" y="2399.50"></text></g><g><title>malloc (3,287,624 samples, 0.26%)</title><rect x="14.9964%" y="2373" width="0.2619%" height="15" fill="rgb(209,150,17)" fg:x="188254015" fg:w="3287624"/><text x="15.2464%" y="2383.50"></text></g><g><title>[libc.so.6] (3,287,624 samples, 0.26%)</title><rect x="14.9964%" y="2357" width="0.2619%" height="15" fill="rgb(234,202,34)" fg:x="188254015" fg:w="3287624"/><text x="15.2464%" y="2367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,297,316 samples, 0.26%)</title><rect x="15.2583%" y="2485" width="0.2627%" height="15" fill="rgb(253,148,53)" fg:x="191541639" fg:w="3297316"/><text x="15.5083%" y="2495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,297,316 samples, 0.26%)</title><rect x="15.2583%" y="2469" width="0.2627%" height="15" fill="rgb(218,129,16)" fg:x="191541639" fg:w="3297316"/><text x="15.5083%" y="2479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,297,316 samples, 0.26%)</title><rect x="15.2583%" y="2453" width="0.2627%" height="15" fill="rgb(216,85,19)" fg:x="191541639" fg:w="3297316"/><text x="15.5083%" y="2463.50"></text></g><g><title>alloc::slice::hack::to_vec (3,297,316 samples, 0.26%)</title><rect x="15.2583%" y="2437" width="0.2627%" height="15" fill="rgb(235,228,7)" fg:x="191541639" fg:w="3297316"/><text x="15.5083%" y="2447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,297,316 samples, 0.26%)</title><rect x="15.2583%" y="2421" width="0.2627%" height="15" fill="rgb(245,175,0)" fg:x="191541639" fg:w="3297316"/><text x="15.5083%" y="2431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,297,316 samples, 0.26%)</title><rect x="15.2583%" y="2405" width="0.2627%" height="15" fill="rgb(208,168,36)" fg:x="191541639" fg:w="3297316"/><text x="15.5083%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,297,316 samples, 0.26%)</title><rect x="15.2583%" y="2389" width="0.2627%" height="15" fill="rgb(246,171,24)" fg:x="191541639" fg:w="3297316"/><text x="15.5083%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,297,316 samples, 0.26%)</title><rect x="15.2583%" y="2373" width="0.2627%" height="15" fill="rgb(215,142,24)" fg:x="191541639" fg:w="3297316"/><text x="15.5083%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,297,316 samples, 0.26%)</title><rect x="15.2583%" y="2357" width="0.2627%" height="15" fill="rgb(250,187,7)" fg:x="191541639" fg:w="3297316"/><text x="15.5083%" y="2367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,297,316 samples, 0.26%)</title><rect x="15.2583%" y="2341" width="0.2627%" height="15" fill="rgb(228,66,33)" fg:x="191541639" fg:w="3297316"/><text x="15.5083%" y="2351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,297,316 samples, 0.26%)</title><rect x="15.2583%" y="2325" width="0.2627%" height="15" fill="rgb(234,215,21)" fg:x="191541639" fg:w="3297316"/><text x="15.5083%" y="2335.50"></text></g><g><title>alloc::alloc::alloc (3,297,316 samples, 0.26%)</title><rect x="15.2583%" y="2309" width="0.2627%" height="15" fill="rgb(222,191,20)" fg:x="191541639" fg:w="3297316"/><text x="15.5083%" y="2319.50"></text></g><g><title>malloc (3,297,316 samples, 0.26%)</title><rect x="15.2583%" y="2293" width="0.2627%" height="15" fill="rgb(245,79,54)" fg:x="191541639" fg:w="3297316"/><text x="15.5083%" y="2303.50"></text></g><g><title>core::ptr::read_volatile (3,368,830 samples, 0.27%)</title><rect x="16.0438%" y="2213" width="0.2684%" height="15" fill="rgb(240,10,37)" fg:x="201401396" fg:w="3368830"/><text x="16.2938%" y="2223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13,190,720 samples, 1.05%)</title><rect x="16.0438%" y="2405" width="1.0508%" height="15" fill="rgb(214,192,32)" fg:x="201401396" fg:w="13190720"/><text x="16.2938%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,190,720 samples, 1.05%)</title><rect x="16.0438%" y="2389" width="1.0508%" height="15" fill="rgb(209,36,54)" fg:x="201401396" fg:w="13190720"/><text x="16.2938%" y="2399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,190,720 samples, 1.05%)</title><rect x="16.0438%" y="2373" width="1.0508%" height="15" fill="rgb(220,10,11)" fg:x="201401396" fg:w="13190720"/><text x="16.2938%" y="2383.50"></text></g><g><title>alloc::slice::hack::to_vec (13,190,720 samples, 1.05%)</title><rect x="16.0438%" y="2357" width="1.0508%" height="15" fill="rgb(221,106,17)" fg:x="201401396" fg:w="13190720"/><text x="16.2938%" y="2367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,190,720 samples, 1.05%)</title><rect x="16.0438%" y="2341" width="1.0508%" height="15" fill="rgb(251,142,44)" fg:x="201401396" fg:w="13190720"/><text x="16.2938%" y="2351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13,190,720 samples, 1.05%)</title><rect x="16.0438%" y="2325" width="1.0508%" height="15" fill="rgb(238,13,15)" fg:x="201401396" fg:w="13190720"/><text x="16.2938%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13,190,720 samples, 1.05%)</title><rect x="16.0438%" y="2309" width="1.0508%" height="15" fill="rgb(208,107,27)" fg:x="201401396" fg:w="13190720"/><text x="16.2938%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (13,190,720 samples, 1.05%)</title><rect x="16.0438%" y="2293" width="1.0508%" height="15" fill="rgb(205,136,37)" fg:x="201401396" fg:w="13190720"/><text x="16.2938%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (13,190,720 samples, 1.05%)</title><rect x="16.0438%" y="2277" width="1.0508%" height="15" fill="rgb(250,205,27)" fg:x="201401396" fg:w="13190720"/><text x="16.2938%" y="2287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13,190,720 samples, 1.05%)</title><rect x="16.0438%" y="2261" width="1.0508%" height="15" fill="rgb(210,80,43)" fg:x="201401396" fg:w="13190720"/><text x="16.2938%" y="2271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13,190,720 samples, 1.05%)</title><rect x="16.0438%" y="2245" width="1.0508%" height="15" fill="rgb(247,160,36)" fg:x="201401396" fg:w="13190720"/><text x="16.2938%" y="2255.50"></text></g><g><title>alloc::alloc::alloc (13,190,720 samples, 1.05%)</title><rect x="16.0438%" y="2229" width="1.0508%" height="15" fill="rgb(234,13,49)" fg:x="201401396" fg:w="13190720"/><text x="16.2938%" y="2239.50"></text></g><g><title>malloc (9,821,890 samples, 0.78%)</title><rect x="16.3121%" y="2213" width="0.7824%" height="15" fill="rgb(234,122,0)" fg:x="204770226" fg:w="9821890"/><text x="16.5621%" y="2223.50"></text></g><g><title>[libc.so.6] (6,463,479 samples, 0.51%)</title><rect x="16.5797%" y="2197" width="0.5149%" height="15" fill="rgb(207,146,38)" fg:x="208128637" fg:w="6463479"/><text x="16.8297%" y="2207.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,346,406 samples, 0.27%)</title><rect x="17.0945%" y="2341" width="0.2666%" height="15" fill="rgb(207,177,25)" fg:x="214592116" fg:w="3346406"/><text x="17.3445%" y="2351.50"></text></g><g><title>[libc.so.6] (3,172,003 samples, 0.25%)</title><rect x="17.3611%" y="2133" width="0.2527%" height="15" fill="rgb(211,178,42)" fg:x="217938522" fg:w="3172003"/><text x="17.6111%" y="2143.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,440,072 samples, 0.51%)</title><rect x="17.3611%" y="2325" width="0.5130%" height="15" fill="rgb(230,69,54)" fg:x="217938522" fg:w="6440072"/><text x="17.6111%" y="2335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,440,072 samples, 0.51%)</title><rect x="17.3611%" y="2309" width="0.5130%" height="15" fill="rgb(214,135,41)" fg:x="217938522" fg:w="6440072"/><text x="17.6111%" y="2319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,440,072 samples, 0.51%)</title><rect x="17.3611%" y="2293" width="0.5130%" height="15" fill="rgb(237,67,25)" fg:x="217938522" fg:w="6440072"/><text x="17.6111%" y="2303.50"></text></g><g><title>alloc::slice::hack::to_vec (6,440,072 samples, 0.51%)</title><rect x="17.3611%" y="2277" width="0.5130%" height="15" fill="rgb(222,189,50)" fg:x="217938522" fg:w="6440072"/><text x="17.6111%" y="2287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,440,072 samples, 0.51%)</title><rect x="17.3611%" y="2261" width="0.5130%" height="15" fill="rgb(245,148,34)" fg:x="217938522" fg:w="6440072"/><text x="17.6111%" y="2271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,440,072 samples, 0.51%)</title><rect x="17.3611%" y="2245" width="0.5130%" height="15" fill="rgb(222,29,6)" fg:x="217938522" fg:w="6440072"/><text x="17.6111%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,440,072 samples, 0.51%)</title><rect x="17.3611%" y="2229" width="0.5130%" height="15" fill="rgb(221,189,43)" fg:x="217938522" fg:w="6440072"/><text x="17.6111%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,440,072 samples, 0.51%)</title><rect x="17.3611%" y="2213" width="0.5130%" height="15" fill="rgb(207,36,27)" fg:x="217938522" fg:w="6440072"/><text x="17.6111%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,440,072 samples, 0.51%)</title><rect x="17.3611%" y="2197" width="0.5130%" height="15" fill="rgb(217,90,24)" fg:x="217938522" fg:w="6440072"/><text x="17.6111%" y="2207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,440,072 samples, 0.51%)</title><rect x="17.3611%" y="2181" width="0.5130%" height="15" fill="rgb(224,66,35)" fg:x="217938522" fg:w="6440072"/><text x="17.6111%" y="2191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,440,072 samples, 0.51%)</title><rect x="17.3611%" y="2165" width="0.5130%" height="15" fill="rgb(221,13,50)" fg:x="217938522" fg:w="6440072"/><text x="17.6111%" y="2175.50"></text></g><g><title>alloc::alloc::alloc (6,440,072 samples, 0.51%)</title><rect x="17.3611%" y="2149" width="0.5130%" height="15" fill="rgb(236,68,49)" fg:x="217938522" fg:w="6440072"/><text x="17.6111%" y="2159.50"></text></g><g><title>malloc (3,268,069 samples, 0.26%)</title><rect x="17.6138%" y="2133" width="0.2603%" height="15" fill="rgb(229,146,28)" fg:x="221110525" fg:w="3268069"/><text x="17.8638%" y="2143.50"></text></g><g><title>[libc.so.6] (3,268,069 samples, 0.26%)</title><rect x="17.6138%" y="2117" width="0.2603%" height="15" fill="rgb(225,31,38)" fg:x="221110525" fg:w="3268069"/><text x="17.8638%" y="2127.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,320,557 samples, 0.26%)</title><rect x="17.8741%" y="2245" width="0.2645%" height="15" fill="rgb(250,208,3)" fg:x="224378594" fg:w="3320557"/><text x="18.1241%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,320,557 samples, 0.26%)</title><rect x="17.8741%" y="2229" width="0.2645%" height="15" fill="rgb(246,54,23)" fg:x="224378594" fg:w="3320557"/><text x="18.1241%" y="2239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,320,557 samples, 0.26%)</title><rect x="17.8741%" y="2213" width="0.2645%" height="15" fill="rgb(243,76,11)" fg:x="224378594" fg:w="3320557"/><text x="18.1241%" y="2223.50"></text></g><g><title>alloc::slice::hack::to_vec (3,320,557 samples, 0.26%)</title><rect x="17.8741%" y="2197" width="0.2645%" height="15" fill="rgb(245,21,50)" fg:x="224378594" fg:w="3320557"/><text x="18.1241%" y="2207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,320,557 samples, 0.26%)</title><rect x="17.8741%" y="2181" width="0.2645%" height="15" fill="rgb(228,9,43)" fg:x="224378594" fg:w="3320557"/><text x="18.1241%" y="2191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,320,557 samples, 0.26%)</title><rect x="17.8741%" y="2165" width="0.2645%" height="15" fill="rgb(208,100,47)" fg:x="224378594" fg:w="3320557"/><text x="18.1241%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,320,557 samples, 0.26%)</title><rect x="17.8741%" y="2149" width="0.2645%" height="15" fill="rgb(232,26,8)" fg:x="224378594" fg:w="3320557"/><text x="18.1241%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,320,557 samples, 0.26%)</title><rect x="17.8741%" y="2133" width="0.2645%" height="15" fill="rgb(216,166,38)" fg:x="224378594" fg:w="3320557"/><text x="18.1241%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,320,557 samples, 0.26%)</title><rect x="17.8741%" y="2117" width="0.2645%" height="15" fill="rgb(251,202,51)" fg:x="224378594" fg:w="3320557"/><text x="18.1241%" y="2127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,320,557 samples, 0.26%)</title><rect x="17.8741%" y="2101" width="0.2645%" height="15" fill="rgb(254,216,34)" fg:x="224378594" fg:w="3320557"/><text x="18.1241%" y="2111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,320,557 samples, 0.26%)</title><rect x="17.8741%" y="2085" width="0.2645%" height="15" fill="rgb(251,32,27)" fg:x="224378594" fg:w="3320557"/><text x="18.1241%" y="2095.50"></text></g><g><title>alloc::alloc::alloc (3,320,557 samples, 0.26%)</title><rect x="17.8741%" y="2069" width="0.2645%" height="15" fill="rgb(208,127,28)" fg:x="224378594" fg:w="3320557"/><text x="18.1241%" y="2079.50"></text></g><g><title>malloc (3,320,557 samples, 0.26%)</title><rect x="17.8741%" y="2053" width="0.2645%" height="15" fill="rgb(224,137,22)" fg:x="224378594" fg:w="3320557"/><text x="18.1241%" y="2063.50"></text></g><g><title>[libc.so.6] (3,320,557 samples, 0.26%)</title><rect x="17.8741%" y="2037" width="0.2645%" height="15" fill="rgb(254,70,32)" fg:x="224378594" fg:w="3320557"/><text x="18.1241%" y="2047.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,273,637 samples, 0.26%)</title><rect x="18.1387%" y="2181" width="0.2608%" height="15" fill="rgb(229,75,37)" fg:x="227699151" fg:w="3273637"/><text x="18.3887%" y="2191.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (6,573,584 samples, 0.52%)</title><rect x="18.3994%" y="2181" width="0.5237%" height="15" fill="rgb(252,64,23)" fg:x="230972788" fg:w="6573584"/><text x="18.6494%" y="2191.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,573,584 samples, 0.52%)</title><rect x="18.3994%" y="2165" width="0.5237%" height="15" fill="rgb(232,162,48)" fg:x="230972788" fg:w="6573584"/><text x="18.6494%" y="2175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,573,584 samples, 0.52%)</title><rect x="18.3994%" y="2149" width="0.5237%" height="15" fill="rgb(246,160,12)" fg:x="230972788" fg:w="6573584"/><text x="18.6494%" y="2159.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,573,584 samples, 0.52%)</title><rect x="18.3994%" y="2133" width="0.5237%" height="15" fill="rgb(247,166,0)" fg:x="230972788" fg:w="6573584"/><text x="18.6494%" y="2143.50"></text></g><g><title>alloc::slice::hack::to_vec (6,573,584 samples, 0.52%)</title><rect x="18.3994%" y="2117" width="0.5237%" height="15" fill="rgb(249,219,21)" fg:x="230972788" fg:w="6573584"/><text x="18.6494%" y="2127.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,573,584 samples, 0.52%)</title><rect x="18.3994%" y="2101" width="0.5237%" height="15" fill="rgb(205,209,3)" fg:x="230972788" fg:w="6573584"/><text x="18.6494%" y="2111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,573,584 samples, 0.52%)</title><rect x="18.3994%" y="2085" width="0.5237%" height="15" fill="rgb(243,44,1)" fg:x="230972788" fg:w="6573584"/><text x="18.6494%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,573,584 samples, 0.52%)</title><rect x="18.3994%" y="2069" width="0.5237%" height="15" fill="rgb(206,159,16)" fg:x="230972788" fg:w="6573584"/><text x="18.6494%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,573,584 samples, 0.52%)</title><rect x="18.3994%" y="2053" width="0.5237%" height="15" fill="rgb(244,77,30)" fg:x="230972788" fg:w="6573584"/><text x="18.6494%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,573,584 samples, 0.52%)</title><rect x="18.3994%" y="2037" width="0.5237%" height="15" fill="rgb(218,69,12)" fg:x="230972788" fg:w="6573584"/><text x="18.6494%" y="2047.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,573,584 samples, 0.52%)</title><rect x="18.3994%" y="2021" width="0.5237%" height="15" fill="rgb(212,87,7)" fg:x="230972788" fg:w="6573584"/><text x="18.6494%" y="2031.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,573,584 samples, 0.52%)</title><rect x="18.3994%" y="2005" width="0.5237%" height="15" fill="rgb(245,114,25)" fg:x="230972788" fg:w="6573584"/><text x="18.6494%" y="2015.50"></text></g><g><title>alloc::alloc::alloc (6,573,584 samples, 0.52%)</title><rect x="18.3994%" y="1989" width="0.5237%" height="15" fill="rgb(210,61,42)" fg:x="230972788" fg:w="6573584"/><text x="18.6494%" y="1999.50"></text></g><g><title>malloc (6,573,584 samples, 0.52%)</title><rect x="18.3994%" y="1973" width="0.5237%" height="15" fill="rgb(211,52,33)" fg:x="230972788" fg:w="6573584"/><text x="18.6494%" y="1983.50"></text></g><g><title>[libc.so.6] (6,573,584 samples, 0.52%)</title><rect x="18.3994%" y="1957" width="0.5237%" height="15" fill="rgb(234,58,33)" fg:x="230972788" fg:w="6573584"/><text x="18.6494%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,206,004 samples, 1.05%)</title><rect x="18.1387%" y="2245" width="1.0520%" height="15" fill="rgb(220,115,36)" fg:x="227699151" fg:w="13206004"/><text x="18.3887%" y="2255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,206,004 samples, 1.05%)</title><rect x="18.1387%" y="2229" width="1.0520%" height="15" fill="rgb(243,153,54)" fg:x="227699151" fg:w="13206004"/><text x="18.3887%" y="2239.50"></text></g><g><title>alloc::slice::hack::to_vec (13,206,004 samples, 1.05%)</title><rect x="18.1387%" y="2213" width="1.0520%" height="15" fill="rgb(251,47,18)" fg:x="227699151" fg:w="13206004"/><text x="18.3887%" y="2223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,206,004 samples, 1.05%)</title><rect x="18.1387%" y="2197" width="1.0520%" height="15" fill="rgb(242,102,42)" fg:x="227699151" fg:w="13206004"/><text x="18.3887%" y="2207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,358,783 samples, 0.27%)</title><rect x="18.9231%" y="2181" width="0.2676%" height="15" fill="rgb(234,31,38)" fg:x="237546372" fg:w="3358783"/><text x="19.1731%" y="2191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,358,783 samples, 0.27%)</title><rect x="18.9231%" y="2165" width="0.2676%" height="15" fill="rgb(221,117,51)" fg:x="237546372" fg:w="3358783"/><text x="19.1731%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,358,783 samples, 0.27%)</title><rect x="18.9231%" y="2149" width="0.2676%" height="15" fill="rgb(212,20,18)" fg:x="237546372" fg:w="3358783"/><text x="19.1731%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,358,783 samples, 0.27%)</title><rect x="18.9231%" y="2133" width="0.2676%" height="15" fill="rgb(245,133,36)" fg:x="237546372" fg:w="3358783"/><text x="19.1731%" y="2143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,358,783 samples, 0.27%)</title><rect x="18.9231%" y="2117" width="0.2676%" height="15" fill="rgb(212,6,19)" fg:x="237546372" fg:w="3358783"/><text x="19.1731%" y="2127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,358,783 samples, 0.27%)</title><rect x="18.9231%" y="2101" width="0.2676%" height="15" fill="rgb(218,1,36)" fg:x="237546372" fg:w="3358783"/><text x="19.1731%" y="2111.50"></text></g><g><title>alloc::alloc::alloc (3,358,783 samples, 0.27%)</title><rect x="18.9231%" y="2085" width="0.2676%" height="15" fill="rgb(246,84,54)" fg:x="237546372" fg:w="3358783"/><text x="19.1731%" y="2095.50"></text></g><g><title>malloc (3,358,783 samples, 0.27%)</title><rect x="18.9231%" y="2069" width="0.2676%" height="15" fill="rgb(242,110,6)" fg:x="237546372" fg:w="3358783"/><text x="19.1731%" y="2079.50"></text></g><g><title>[libc.so.6] (3,358,783 samples, 0.27%)</title><rect x="18.9231%" y="2053" width="0.2676%" height="15" fill="rgb(214,47,5)" fg:x="237546372" fg:w="3358783"/><text x="19.1731%" y="2063.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,332,240 samples, 0.27%)</title><rect x="19.1907%" y="2245" width="0.2654%" height="15" fill="rgb(218,159,25)" fg:x="240905155" fg:w="3332240"/><text x="19.4407%" y="2255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,332,240 samples, 0.27%)</title><rect x="19.1907%" y="2229" width="0.2654%" height="15" fill="rgb(215,211,28)" fg:x="240905155" fg:w="3332240"/><text x="19.4407%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,332,240 samples, 0.27%)</title><rect x="19.1907%" y="2213" width="0.2654%" height="15" fill="rgb(238,59,32)" fg:x="240905155" fg:w="3332240"/><text x="19.4407%" y="2223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,332,240 samples, 0.27%)</title><rect x="19.1907%" y="2197" width="0.2654%" height="15" fill="rgb(226,82,3)" fg:x="240905155" fg:w="3332240"/><text x="19.4407%" y="2207.50"></text></g><g><title>alloc::slice::hack::to_vec (3,332,240 samples, 0.27%)</title><rect x="19.1907%" y="2181" width="0.2654%" height="15" fill="rgb(240,164,32)" fg:x="240905155" fg:w="3332240"/><text x="19.4407%" y="2191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,332,240 samples, 0.27%)</title><rect x="19.1907%" y="2165" width="0.2654%" height="15" fill="rgb(232,46,7)" fg:x="240905155" fg:w="3332240"/><text x="19.4407%" y="2175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,332,240 samples, 0.27%)</title><rect x="19.1907%" y="2149" width="0.2654%" height="15" fill="rgb(229,129,53)" fg:x="240905155" fg:w="3332240"/><text x="19.4407%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,332,240 samples, 0.27%)</title><rect x="19.1907%" y="2133" width="0.2654%" height="15" fill="rgb(234,188,29)" fg:x="240905155" fg:w="3332240"/><text x="19.4407%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,332,240 samples, 0.27%)</title><rect x="19.1907%" y="2117" width="0.2654%" height="15" fill="rgb(246,141,4)" fg:x="240905155" fg:w="3332240"/><text x="19.4407%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,332,240 samples, 0.27%)</title><rect x="19.1907%" y="2101" width="0.2654%" height="15" fill="rgb(229,23,39)" fg:x="240905155" fg:w="3332240"/><text x="19.4407%" y="2111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,332,240 samples, 0.27%)</title><rect x="19.1907%" y="2085" width="0.2654%" height="15" fill="rgb(206,12,3)" fg:x="240905155" fg:w="3332240"/><text x="19.4407%" y="2095.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,332,240 samples, 0.27%)</title><rect x="19.1907%" y="2069" width="0.2654%" height="15" fill="rgb(252,226,20)" fg:x="240905155" fg:w="3332240"/><text x="19.4407%" y="2079.50"></text></g><g><title>alloc::alloc::alloc (3,332,240 samples, 0.27%)</title><rect x="19.1907%" y="2053" width="0.2654%" height="15" fill="rgb(216,123,35)" fg:x="240905155" fg:w="3332240"/><text x="19.4407%" y="2063.50"></text></g><g><title>malloc (3,332,240 samples, 0.27%)</title><rect x="19.1907%" y="2037" width="0.2654%" height="15" fill="rgb(212,68,40)" fg:x="240905155" fg:w="3332240"/><text x="19.4407%" y="2047.50"></text></g><g><title>[libc.so.6] (3,332,240 samples, 0.27%)</title><rect x="19.1907%" y="2021" width="0.2654%" height="15" fill="rgb(254,125,32)" fg:x="240905155" fg:w="3332240"/><text x="19.4407%" y="2031.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (23,082,322 samples, 1.84%)</title><rect x="17.8741%" y="2261" width="1.8388%" height="15" fill="rgb(253,97,22)" fg:x="224378594" fg:w="23082322"/><text x="18.1241%" y="2271.50">&lt;..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2245" width="0.2568%" height="15" fill="rgb(241,101,14)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2255.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2229" width="0.2568%" height="15" fill="rgb(238,103,29)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2239.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2213" width="0.2568%" height="15" fill="rgb(233,195,47)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2197" width="0.2568%" height="15" fill="rgb(246,218,30)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2181" width="0.2568%" height="15" fill="rgb(219,145,47)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2165" width="0.2568%" height="15" fill="rgb(243,12,26)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2175.50"></text></g><g><title>core::clone::Clone::clone (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2149" width="0.2568%" height="15" fill="rgb(214,87,16)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2159.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2133" width="0.2568%" height="15" fill="rgb(208,99,42)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2117" width="0.2568%" height="15" fill="rgb(253,99,2)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2127.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2101" width="0.2568%" height="15" fill="rgb(220,168,23)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2111.50"></text></g><g><title>alloc::slice::hack::to_vec (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2085" width="0.2568%" height="15" fill="rgb(242,38,24)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2095.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2069" width="0.2568%" height="15" fill="rgb(225,182,9)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2079.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2053" width="0.2568%" height="15" fill="rgb(243,178,37)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2037" width="0.2568%" height="15" fill="rgb(232,139,19)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2021" width="0.2568%" height="15" fill="rgb(225,201,24)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="2005" width="0.2568%" height="15" fill="rgb(221,47,46)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="2015.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="1989" width="0.2568%" height="15" fill="rgb(249,23,13)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="1999.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="1973" width="0.2568%" height="15" fill="rgb(219,9,5)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="1983.50"></text></g><g><title>alloc::alloc::alloc (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="1957" width="0.2568%" height="15" fill="rgb(254,171,16)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="1967.50"></text></g><g><title>malloc (3,223,521 samples, 0.26%)</title><rect x="19.4561%" y="1941" width="0.2568%" height="15" fill="rgb(230,171,20)" fg:x="244237395" fg:w="3223521"/><text x="19.7061%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29,639,578 samples, 2.36%)</title><rect x="17.8741%" y="2325" width="2.3611%" height="15" fill="rgb(210,71,41)" fg:x="224378594" fg:w="29639578"/><text x="18.1241%" y="2335.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29,639,578 samples, 2.36%)</title><rect x="17.8741%" y="2309" width="2.3611%" height="15" fill="rgb(206,173,20)" fg:x="224378594" fg:w="29639578"/><text x="18.1241%" y="2319.50">al..</text></g><g><title>alloc::slice::hack::to_vec (29,639,578 samples, 2.36%)</title><rect x="17.8741%" y="2293" width="2.3611%" height="15" fill="rgb(233,88,34)" fg:x="224378594" fg:w="29639578"/><text x="18.1241%" y="2303.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29,639,578 samples, 2.36%)</title><rect x="17.8741%" y="2277" width="2.3611%" height="15" fill="rgb(223,209,46)" fg:x="224378594" fg:w="29639578"/><text x="18.1241%" y="2287.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,557,256 samples, 0.52%)</title><rect x="19.7129%" y="2261" width="0.5224%" height="15" fill="rgb(250,43,18)" fg:x="247460916" fg:w="6557256"/><text x="19.9629%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,557,256 samples, 0.52%)</title><rect x="19.7129%" y="2245" width="0.5224%" height="15" fill="rgb(208,13,10)" fg:x="247460916" fg:w="6557256"/><text x="19.9629%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,557,256 samples, 0.52%)</title><rect x="19.7129%" y="2229" width="0.5224%" height="15" fill="rgb(212,200,36)" fg:x="247460916" fg:w="6557256"/><text x="19.9629%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,557,256 samples, 0.52%)</title><rect x="19.7129%" y="2213" width="0.5224%" height="15" fill="rgb(225,90,30)" fg:x="247460916" fg:w="6557256"/><text x="19.9629%" y="2223.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,358,204 samples, 0.27%)</title><rect x="20.2353%" y="2325" width="0.2675%" height="15" fill="rgb(236,182,39)" fg:x="254018172" fg:w="3358204"/><text x="20.4853%" y="2335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,358,204 samples, 0.27%)</title><rect x="20.2353%" y="2309" width="0.2675%" height="15" fill="rgb(212,144,35)" fg:x="254018172" fg:w="3358204"/><text x="20.4853%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,358,204 samples, 0.27%)</title><rect x="20.2353%" y="2293" width="0.2675%" height="15" fill="rgb(228,63,44)" fg:x="254018172" fg:w="3358204"/><text x="20.4853%" y="2303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,358,204 samples, 0.27%)</title><rect x="20.2353%" y="2277" width="0.2675%" height="15" fill="rgb(228,109,6)" fg:x="254018172" fg:w="3358204"/><text x="20.4853%" y="2287.50"></text></g><g><title>alloc::slice::hack::to_vec (3,358,204 samples, 0.27%)</title><rect x="20.2353%" y="2261" width="0.2675%" height="15" fill="rgb(238,117,24)" fg:x="254018172" fg:w="3358204"/><text x="20.4853%" y="2271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,358,204 samples, 0.27%)</title><rect x="20.2353%" y="2245" width="0.2675%" height="15" fill="rgb(242,26,26)" fg:x="254018172" fg:w="3358204"/><text x="20.4853%" y="2255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,358,204 samples, 0.27%)</title><rect x="20.2353%" y="2229" width="0.2675%" height="15" fill="rgb(221,92,48)" fg:x="254018172" fg:w="3358204"/><text x="20.4853%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,358,204 samples, 0.27%)</title><rect x="20.2353%" y="2213" width="0.2675%" height="15" fill="rgb(209,209,32)" fg:x="254018172" fg:w="3358204"/><text x="20.4853%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,358,204 samples, 0.27%)</title><rect x="20.2353%" y="2197" width="0.2675%" height="15" fill="rgb(221,70,22)" fg:x="254018172" fg:w="3358204"/><text x="20.4853%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,358,204 samples, 0.27%)</title><rect x="20.2353%" y="2181" width="0.2675%" height="15" fill="rgb(248,145,5)" fg:x="254018172" fg:w="3358204"/><text x="20.4853%" y="2191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,358,204 samples, 0.27%)</title><rect x="20.2353%" y="2165" width="0.2675%" height="15" fill="rgb(226,116,26)" fg:x="254018172" fg:w="3358204"/><text x="20.4853%" y="2175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,358,204 samples, 0.27%)</title><rect x="20.2353%" y="2149" width="0.2675%" height="15" fill="rgb(244,5,17)" fg:x="254018172" fg:w="3358204"/><text x="20.4853%" y="2159.50"></text></g><g><title>alloc::alloc::alloc (3,358,204 samples, 0.27%)</title><rect x="20.2353%" y="2133" width="0.2675%" height="15" fill="rgb(252,159,33)" fg:x="254018172" fg:w="3358204"/><text x="20.4853%" y="2143.50"></text></g><g><title>malloc (3,358,204 samples, 0.27%)</title><rect x="20.2353%" y="2117" width="0.2675%" height="15" fill="rgb(206,71,0)" fg:x="254018172" fg:w="3358204"/><text x="20.4853%" y="2127.50"></text></g><g><title>[libc.so.6] (3,358,204 samples, 0.27%)</title><rect x="20.2353%" y="2101" width="0.2675%" height="15" fill="rgb(233,118,54)" fg:x="254018172" fg:w="3358204"/><text x="20.4853%" y="2111.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,292,785 samples, 0.26%)</title><rect x="20.5028%" y="2325" width="0.2623%" height="15" fill="rgb(234,83,48)" fg:x="257376376" fg:w="3292785"/><text x="20.7528%" y="2335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,292,785 samples, 0.26%)</title><rect x="20.5028%" y="2309" width="0.2623%" height="15" fill="rgb(228,3,54)" fg:x="257376376" fg:w="3292785"/><text x="20.7528%" y="2319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,292,785 samples, 0.26%)</title><rect x="20.5028%" y="2293" width="0.2623%" height="15" fill="rgb(226,155,13)" fg:x="257376376" fg:w="3292785"/><text x="20.7528%" y="2303.50"></text></g><g><title>alloc::slice::hack::to_vec (3,292,785 samples, 0.26%)</title><rect x="20.5028%" y="2277" width="0.2623%" height="15" fill="rgb(241,28,37)" fg:x="257376376" fg:w="3292785"/><text x="20.7528%" y="2287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,292,785 samples, 0.26%)</title><rect x="20.5028%" y="2261" width="0.2623%" height="15" fill="rgb(233,93,10)" fg:x="257376376" fg:w="3292785"/><text x="20.7528%" y="2271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,292,785 samples, 0.26%)</title><rect x="20.5028%" y="2245" width="0.2623%" height="15" fill="rgb(225,113,19)" fg:x="257376376" fg:w="3292785"/><text x="20.7528%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,292,785 samples, 0.26%)</title><rect x="20.5028%" y="2229" width="0.2623%" height="15" fill="rgb(241,2,18)" fg:x="257376376" fg:w="3292785"/><text x="20.7528%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,292,785 samples, 0.26%)</title><rect x="20.5028%" y="2213" width="0.2623%" height="15" fill="rgb(228,207,21)" fg:x="257376376" fg:w="3292785"/><text x="20.7528%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,292,785 samples, 0.26%)</title><rect x="20.5028%" y="2197" width="0.2623%" height="15" fill="rgb(213,211,35)" fg:x="257376376" fg:w="3292785"/><text x="20.7528%" y="2207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,292,785 samples, 0.26%)</title><rect x="20.5028%" y="2181" width="0.2623%" height="15" fill="rgb(209,83,10)" fg:x="257376376" fg:w="3292785"/><text x="20.7528%" y="2191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,292,785 samples, 0.26%)</title><rect x="20.5028%" y="2165" width="0.2623%" height="15" fill="rgb(209,164,1)" fg:x="257376376" fg:w="3292785"/><text x="20.7528%" y="2175.50"></text></g><g><title>alloc::alloc::alloc (3,292,785 samples, 0.26%)</title><rect x="20.5028%" y="2149" width="0.2623%" height="15" fill="rgb(213,184,43)" fg:x="257376376" fg:w="3292785"/><text x="20.7528%" y="2159.50"></text></g><g><title>malloc (3,292,785 samples, 0.26%)</title><rect x="20.5028%" y="2133" width="0.2623%" height="15" fill="rgb(231,61,34)" fg:x="257376376" fg:w="3292785"/><text x="20.7528%" y="2143.50"></text></g><g><title>[libc.so.6] (3,292,785 samples, 0.26%)</title><rect x="20.5028%" y="2117" width="0.2623%" height="15" fill="rgb(235,75,3)" fg:x="257376376" fg:w="3292785"/><text x="20.7528%" y="2127.50"></text></g><g><title>__rust_alloc (3,274,956 samples, 0.26%)</title><rect x="20.7651%" y="2021" width="0.2609%" height="15" fill="rgb(220,106,47)" fg:x="260669161" fg:w="3274956"/><text x="21.0151%" y="2031.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,744,593 samples, 0.78%)</title><rect x="20.7651%" y="2133" width="0.7763%" height="15" fill="rgb(210,196,33)" fg:x="260669161" fg:w="9744593"/><text x="21.0151%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,744,593 samples, 0.78%)</title><rect x="20.7651%" y="2117" width="0.7763%" height="15" fill="rgb(229,154,42)" fg:x="260669161" fg:w="9744593"/><text x="21.0151%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,744,593 samples, 0.78%)</title><rect x="20.7651%" y="2101" width="0.7763%" height="15" fill="rgb(228,114,26)" fg:x="260669161" fg:w="9744593"/><text x="21.0151%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,744,593 samples, 0.78%)</title><rect x="20.7651%" y="2085" width="0.7763%" height="15" fill="rgb(208,144,1)" fg:x="260669161" fg:w="9744593"/><text x="21.0151%" y="2095.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,744,593 samples, 0.78%)</title><rect x="20.7651%" y="2069" width="0.7763%" height="15" fill="rgb(239,112,37)" fg:x="260669161" fg:w="9744593"/><text x="21.0151%" y="2079.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,744,593 samples, 0.78%)</title><rect x="20.7651%" y="2053" width="0.7763%" height="15" fill="rgb(210,96,50)" fg:x="260669161" fg:w="9744593"/><text x="21.0151%" y="2063.50"></text></g><g><title>alloc::alloc::alloc (9,744,593 samples, 0.78%)</title><rect x="20.7651%" y="2037" width="0.7763%" height="15" fill="rgb(222,178,2)" fg:x="260669161" fg:w="9744593"/><text x="21.0151%" y="2047.50"></text></g><g><title>malloc (6,469,637 samples, 0.52%)</title><rect x="21.0260%" y="2021" width="0.5154%" height="15" fill="rgb(226,74,18)" fg:x="263944117" fg:w="6469637"/><text x="21.2760%" y="2031.50"></text></g><g><title>core::clone::Clone::clone (13,036,259 samples, 1.04%)</title><rect x="20.7651%" y="2229" width="1.0385%" height="15" fill="rgb(225,67,54)" fg:x="260669161" fg:w="13036259"/><text x="21.0151%" y="2239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13,036,259 samples, 1.04%)</title><rect x="20.7651%" y="2213" width="1.0385%" height="15" fill="rgb(251,92,32)" fg:x="260669161" fg:w="13036259"/><text x="21.0151%" y="2223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,036,259 samples, 1.04%)</title><rect x="20.7651%" y="2197" width="1.0385%" height="15" fill="rgb(228,149,22)" fg:x="260669161" fg:w="13036259"/><text x="21.0151%" y="2207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,036,259 samples, 1.04%)</title><rect x="20.7651%" y="2181" width="1.0385%" height="15" fill="rgb(243,54,13)" fg:x="260669161" fg:w="13036259"/><text x="21.0151%" y="2191.50"></text></g><g><title>alloc::slice::hack::to_vec (13,036,259 samples, 1.04%)</title><rect x="20.7651%" y="2165" width="1.0385%" height="15" fill="rgb(243,180,28)" fg:x="260669161" fg:w="13036259"/><text x="21.0151%" y="2175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,036,259 samples, 1.04%)</title><rect x="20.7651%" y="2149" width="1.0385%" height="15" fill="rgb(208,167,24)" fg:x="260669161" fg:w="13036259"/><text x="21.0151%" y="2159.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,291,666 samples, 0.26%)</title><rect x="21.5413%" y="2133" width="0.2622%" height="15" fill="rgb(245,73,45)" fg:x="270413754" fg:w="3291666"/><text x="21.7913%" y="2143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,291,666 samples, 0.26%)</title><rect x="21.5413%" y="2117" width="0.2622%" height="15" fill="rgb(237,203,48)" fg:x="270413754" fg:w="3291666"/><text x="21.7913%" y="2127.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (16,214,128 samples, 1.29%)</title><rect x="20.7651%" y="2261" width="1.2916%" height="15" fill="rgb(211,197,16)" fg:x="260669161" fg:w="16214128"/><text x="21.0151%" y="2271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (16,214,128 samples, 1.29%)</title><rect x="20.7651%" y="2245" width="1.2916%" height="15" fill="rgb(243,99,51)" fg:x="260669161" fg:w="16214128"/><text x="21.0151%" y="2255.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3,177,869 samples, 0.25%)</title><rect x="21.8036%" y="2229" width="0.2532%" height="15" fill="rgb(215,123,29)" fg:x="273705420" fg:w="3177869"/><text x="22.0536%" y="2239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3,177,869 samples, 0.25%)</title><rect x="21.8036%" y="2213" width="0.2532%" height="15" fill="rgb(239,186,37)" fg:x="273705420" fg:w="3177869"/><text x="22.0536%" y="2223.50"></text></g><g><title>core::ptr::write (3,177,869 samples, 0.25%)</title><rect x="21.8036%" y="2197" width="0.2532%" height="15" fill="rgb(252,136,39)" fg:x="273705420" fg:w="3177869"/><text x="22.0536%" y="2207.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (62,310,689 samples, 4.96%)</title><rect x="17.3611%" y="2341" width="4.9637%" height="15" fill="rgb(223,213,32)" fg:x="217938522" fg:w="62310689"/><text x="17.6111%" y="2351.50">&lt;css_b..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (19,580,050 samples, 1.56%)</title><rect x="20.7651%" y="2325" width="1.5598%" height="15" fill="rgb(233,115,5)" fg:x="260669161" fg:w="19580050"/><text x="21.0151%" y="2335.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (19,580,050 samples, 1.56%)</title><rect x="20.7651%" y="2309" width="1.5598%" height="15" fill="rgb(207,226,44)" fg:x="260669161" fg:w="19580050"/><text x="21.0151%" y="2319.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (19,580,050 samples, 1.56%)</title><rect x="20.7651%" y="2293" width="1.5598%" height="15" fill="rgb(208,126,0)" fg:x="260669161" fg:w="19580050"/><text x="21.0151%" y="2303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,580,050 samples, 1.56%)</title><rect x="20.7651%" y="2277" width="1.5598%" height="15" fill="rgb(244,66,21)" fg:x="260669161" fg:w="19580050"/><text x="21.0151%" y="2287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3,365,922 samples, 0.27%)</title><rect x="22.0567%" y="2261" width="0.2681%" height="15" fill="rgb(222,97,12)" fg:x="276883289" fg:w="3365922"/><text x="22.3067%" y="2271.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,365,922 samples, 0.27%)</title><rect x="22.0567%" y="2245" width="0.2681%" height="15" fill="rgb(219,213,19)" fg:x="276883289" fg:w="3365922"/><text x="22.3067%" y="2255.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3,365,922 samples, 0.27%)</title><rect x="22.0567%" y="2229" width="0.2681%" height="15" fill="rgb(252,169,30)" fg:x="276883289" fg:w="3365922"/><text x="22.3067%" y="2239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,365,922 samples, 0.27%)</title><rect x="22.0567%" y="2213" width="0.2681%" height="15" fill="rgb(206,32,51)" fg:x="276883289" fg:w="3365922"/><text x="22.3067%" y="2223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,365,922 samples, 0.27%)</title><rect x="22.0567%" y="2197" width="0.2681%" height="15" fill="rgb(250,172,42)" fg:x="276883289" fg:w="3365922"/><text x="22.3067%" y="2207.50"></text></g><g><title>alloc::alloc::alloc (3,365,922 samples, 0.27%)</title><rect x="22.0567%" y="2181" width="0.2681%" height="15" fill="rgb(209,34,43)" fg:x="276883289" fg:w="3365922"/><text x="22.3067%" y="2191.50"></text></g><g><title>__rust_alloc (3,272,377 samples, 0.26%)</title><rect x="22.3248%" y="2229" width="0.2607%" height="15" fill="rgb(223,11,35)" fg:x="280249211" fg:w="3272377"/><text x="22.5748%" y="2239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,901,049 samples, 0.79%)</title><rect x="22.3248%" y="2341" width="0.7887%" height="15" fill="rgb(251,219,26)" fg:x="280249211" fg:w="9901049"/><text x="22.5748%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,901,049 samples, 0.79%)</title><rect x="22.3248%" y="2325" width="0.7887%" height="15" fill="rgb(231,119,3)" fg:x="280249211" fg:w="9901049"/><text x="22.5748%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,901,049 samples, 0.79%)</title><rect x="22.3248%" y="2309" width="0.7887%" height="15" fill="rgb(216,97,11)" fg:x="280249211" fg:w="9901049"/><text x="22.5748%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,901,049 samples, 0.79%)</title><rect x="22.3248%" y="2293" width="0.7887%" height="15" fill="rgb(223,59,9)" fg:x="280249211" fg:w="9901049"/><text x="22.5748%" y="2303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,901,049 samples, 0.79%)</title><rect x="22.3248%" y="2277" width="0.7887%" height="15" fill="rgb(233,93,31)" fg:x="280249211" fg:w="9901049"/><text x="22.5748%" y="2287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,901,049 samples, 0.79%)</title><rect x="22.3248%" y="2261" width="0.7887%" height="15" fill="rgb(239,81,33)" fg:x="280249211" fg:w="9901049"/><text x="22.5748%" y="2271.50"></text></g><g><title>alloc::alloc::alloc (9,901,049 samples, 0.79%)</title><rect x="22.3248%" y="2245" width="0.7887%" height="15" fill="rgb(213,120,34)" fg:x="280249211" fg:w="9901049"/><text x="22.5748%" y="2255.50"></text></g><g><title>malloc (6,628,672 samples, 0.53%)</title><rect x="22.5855%" y="2229" width="0.5280%" height="15" fill="rgb(243,49,53)" fg:x="283521588" fg:w="6628672"/><text x="22.8355%" y="2239.50"></text></g><g><title>[libc.so.6] (3,360,139 samples, 0.27%)</title><rect x="22.8459%" y="2213" width="0.2677%" height="15" fill="rgb(247,216,33)" fg:x="286790121" fg:w="3360139"/><text x="23.0959%" y="2223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (78,824,411 samples, 6.28%)</title><rect x="17.0945%" y="2405" width="6.2792%" height="15" fill="rgb(226,26,14)" fg:x="214592116" fg:w="78824411"/><text x="17.3445%" y="2415.50">&lt;alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (78,824,411 samples, 6.28%)</title><rect x="17.0945%" y="2389" width="6.2792%" height="15" fill="rgb(215,49,53)" fg:x="214592116" fg:w="78824411"/><text x="17.3445%" y="2399.50">alloc::s..</text></g><g><title>alloc::slice::hack::to_vec (78,824,411 samples, 6.28%)</title><rect x="17.0945%" y="2373" width="6.2792%" height="15" fill="rgb(245,162,40)" fg:x="214592116" fg:w="78824411"/><text x="17.3445%" y="2383.50">alloc::s..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (78,824,411 samples, 6.28%)</title><rect x="17.0945%" y="2357" width="6.2792%" height="15" fill="rgb(229,68,17)" fg:x="214592116" fg:w="78824411"/><text x="17.3445%" y="2367.50">&lt;T as al..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,266,267 samples, 0.26%)</title><rect x="23.1136%" y="2341" width="0.2602%" height="15" fill="rgb(213,182,10)" fg:x="290150260" fg:w="3266267"/><text x="23.3636%" y="2351.50"></text></g><g><title>__rdl_alloc (6,624,329 samples, 0.53%)</title><rect x="23.3738%" y="2197" width="0.5277%" height="15" fill="rgb(245,125,30)" fg:x="293416527" fg:w="6624329"/><text x="23.6238%" y="2207.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6,624,329 samples, 0.53%)</title><rect x="23.3738%" y="2181" width="0.5277%" height="15" fill="rgb(232,202,2)" fg:x="293416527" fg:w="6624329"/><text x="23.6238%" y="2191.50"></text></g><g><title>core::ptr::read_volatile (3,172,359 samples, 0.25%)</title><rect x="23.9014%" y="2197" width="0.2527%" height="15" fill="rgb(237,140,51)" fg:x="300040856" fg:w="3172359"/><text x="24.1514%" y="2207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (19,831,954 samples, 1.58%)</title><rect x="23.3738%" y="2389" width="1.5798%" height="15" fill="rgb(236,157,25)" fg:x="293416527" fg:w="19831954"/><text x="23.6238%" y="2399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,831,954 samples, 1.58%)</title><rect x="23.3738%" y="2373" width="1.5798%" height="15" fill="rgb(219,209,0)" fg:x="293416527" fg:w="19831954"/><text x="23.6238%" y="2383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,831,954 samples, 1.58%)</title><rect x="23.3738%" y="2357" width="1.5798%" height="15" fill="rgb(240,116,54)" fg:x="293416527" fg:w="19831954"/><text x="23.6238%" y="2367.50"></text></g><g><title>alloc::slice::hack::to_vec (19,831,954 samples, 1.58%)</title><rect x="23.3738%" y="2341" width="1.5798%" height="15" fill="rgb(216,10,36)" fg:x="293416527" fg:w="19831954"/><text x="23.6238%" y="2351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,831,954 samples, 1.58%)</title><rect x="23.3738%" y="2325" width="1.5798%" height="15" fill="rgb(222,72,44)" fg:x="293416527" fg:w="19831954"/><text x="23.6238%" y="2335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19,831,954 samples, 1.58%)</title><rect x="23.3738%" y="2309" width="1.5798%" height="15" fill="rgb(232,159,9)" fg:x="293416527" fg:w="19831954"/><text x="23.6238%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19,831,954 samples, 1.58%)</title><rect x="23.3738%" y="2293" width="1.5798%" height="15" fill="rgb(210,39,32)" fg:x="293416527" fg:w="19831954"/><text x="23.6238%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (19,831,954 samples, 1.58%)</title><rect x="23.3738%" y="2277" width="1.5798%" height="15" fill="rgb(216,194,45)" fg:x="293416527" fg:w="19831954"/><text x="23.6238%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (19,831,954 samples, 1.58%)</title><rect x="23.3738%" y="2261" width="1.5798%" height="15" fill="rgb(218,18,35)" fg:x="293416527" fg:w="19831954"/><text x="23.6238%" y="2271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19,831,954 samples, 1.58%)</title><rect x="23.3738%" y="2245" width="1.5798%" height="15" fill="rgb(207,83,51)" fg:x="293416527" fg:w="19831954"/><text x="23.6238%" y="2255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19,831,954 samples, 1.58%)</title><rect x="23.3738%" y="2229" width="1.5798%" height="15" fill="rgb(225,63,43)" fg:x="293416527" fg:w="19831954"/><text x="23.6238%" y="2239.50"></text></g><g><title>alloc::alloc::alloc (19,831,954 samples, 1.58%)</title><rect x="23.3738%" y="2213" width="1.5798%" height="15" fill="rgb(207,57,36)" fg:x="293416527" fg:w="19831954"/><text x="23.6238%" y="2223.50"></text></g><g><title>malloc (10,035,266 samples, 0.80%)</title><rect x="24.1542%" y="2197" width="0.7994%" height="15" fill="rgb(216,99,33)" fg:x="303213215" fg:w="10035266"/><text x="24.4042%" y="2207.50"></text></g><g><title>[libc.so.6] (3,360,216 samples, 0.27%)</title><rect x="24.6859%" y="2181" width="0.2677%" height="15" fill="rgb(225,42,16)" fg:x="309888265" fg:w="3360216"/><text x="24.9359%" y="2191.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (23,186,532 samples, 1.85%)</title><rect x="23.3738%" y="2405" width="1.8471%" height="15" fill="rgb(220,201,45)" fg:x="293416527" fg:w="23186532"/><text x="23.6238%" y="2415.50">&lt;..</text></g><g><title>malloc (3,354,578 samples, 0.27%)</title><rect x="24.9536%" y="2389" width="0.2672%" height="15" fill="rgb(225,33,4)" fg:x="313248481" fg:w="3354578"/><text x="25.2036%" y="2399.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (13,276,737 samples, 1.06%)</title><rect x="25.2208%" y="2405" width="1.0576%" height="15" fill="rgb(224,33,50)" fg:x="316603059" fg:w="13276737"/><text x="25.4708%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,276,737 samples, 1.06%)</title><rect x="25.2208%" y="2389" width="1.0576%" height="15" fill="rgb(246,198,51)" fg:x="316603059" fg:w="13276737"/><text x="25.4708%" y="2399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,276,737 samples, 1.06%)</title><rect x="25.2208%" y="2373" width="1.0576%" height="15" fill="rgb(205,22,4)" fg:x="316603059" fg:w="13276737"/><text x="25.4708%" y="2383.50"></text></g><g><title>alloc::slice::hack::to_vec (13,276,737 samples, 1.06%)</title><rect x="25.2208%" y="2357" width="1.0576%" height="15" fill="rgb(206,3,8)" fg:x="316603059" fg:w="13276737"/><text x="25.4708%" y="2367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,276,737 samples, 1.06%)</title><rect x="25.2208%" y="2341" width="1.0576%" height="15" fill="rgb(251,23,15)" fg:x="316603059" fg:w="13276737"/><text x="25.4708%" y="2351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,915,223 samples, 0.79%)</title><rect x="25.4886%" y="2325" width="0.7899%" height="15" fill="rgb(252,88,28)" fg:x="319964573" fg:w="9915223"/><text x="25.7386%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,915,223 samples, 0.79%)</title><rect x="25.4886%" y="2309" width="0.7899%" height="15" fill="rgb(212,127,14)" fg:x="319964573" fg:w="9915223"/><text x="25.7386%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,915,223 samples, 0.79%)</title><rect x="25.4886%" y="2293" width="0.7899%" height="15" fill="rgb(247,145,37)" fg:x="319964573" fg:w="9915223"/><text x="25.7386%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,915,223 samples, 0.79%)</title><rect x="25.4886%" y="2277" width="0.7899%" height="15" fill="rgb(209,117,53)" fg:x="319964573" fg:w="9915223"/><text x="25.7386%" y="2287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,915,223 samples, 0.79%)</title><rect x="25.4886%" y="2261" width="0.7899%" height="15" fill="rgb(212,90,42)" fg:x="319964573" fg:w="9915223"/><text x="25.7386%" y="2271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,915,223 samples, 0.79%)</title><rect x="25.4886%" y="2245" width="0.7899%" height="15" fill="rgb(218,164,37)" fg:x="319964573" fg:w="9915223"/><text x="25.7386%" y="2255.50"></text></g><g><title>alloc::alloc::alloc (9,915,223 samples, 0.79%)</title><rect x="25.4886%" y="2229" width="0.7899%" height="15" fill="rgb(246,65,34)" fg:x="319964573" fg:w="9915223"/><text x="25.7386%" y="2239.50"></text></g><g><title>malloc (9,915,223 samples, 0.79%)</title><rect x="25.4886%" y="2213" width="0.7899%" height="15" fill="rgb(231,100,33)" fg:x="319964573" fg:w="9915223"/><text x="25.7386%" y="2223.50"></text></g><g><title>[libc.so.6] (6,643,454 samples, 0.53%)</title><rect x="25.7492%" y="2197" width="0.5292%" height="15" fill="rgb(228,126,14)" fg:x="323236342" fg:w="6643454"/><text x="25.9992%" y="2207.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,281,495 samples, 0.26%)</title><rect x="26.5418%" y="2309" width="0.2614%" height="15" fill="rgb(215,173,21)" fg:x="333185600" fg:w="3281495"/><text x="26.7918%" y="2319.50"></text></g><g><title>__rdl_alloc (3,174,654 samples, 0.25%)</title><rect x="26.8032%" y="2101" width="0.2529%" height="15" fill="rgb(210,6,40)" fg:x="336467095" fg:w="3174654"/><text x="27.0532%" y="2111.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,174,654 samples, 0.25%)</title><rect x="26.8032%" y="2085" width="0.2529%" height="15" fill="rgb(212,48,18)" fg:x="336467095" fg:w="3174654"/><text x="27.0532%" y="2095.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (29,740,426 samples, 2.37%)</title><rect x="26.8032%" y="2213" width="2.3691%" height="15" fill="rgb(230,214,11)" fg:x="336467095" fg:w="29740426"/><text x="27.0532%" y="2223.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29,740,426 samples, 2.37%)</title><rect x="26.8032%" y="2197" width="2.3691%" height="15" fill="rgb(254,105,39)" fg:x="336467095" fg:w="29740426"/><text x="27.0532%" y="2207.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (29,740,426 samples, 2.37%)</title><rect x="26.8032%" y="2181" width="2.3691%" height="15" fill="rgb(245,158,5)" fg:x="336467095" fg:w="29740426"/><text x="27.0532%" y="2191.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (29,740,426 samples, 2.37%)</title><rect x="26.8032%" y="2165" width="2.3691%" height="15" fill="rgb(249,208,11)" fg:x="336467095" fg:w="29740426"/><text x="27.0532%" y="2175.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29,740,426 samples, 2.37%)</title><rect x="26.8032%" y="2149" width="2.3691%" height="15" fill="rgb(210,39,28)" fg:x="336467095" fg:w="29740426"/><text x="27.0532%" y="2159.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (29,740,426 samples, 2.37%)</title><rect x="26.8032%" y="2133" width="2.3691%" height="15" fill="rgb(211,56,53)" fg:x="336467095" fg:w="29740426"/><text x="27.0532%" y="2143.50">al..</text></g><g><title>alloc::alloc::alloc (29,740,426 samples, 2.37%)</title><rect x="26.8032%" y="2117" width="2.3691%" height="15" fill="rgb(226,201,30)" fg:x="336467095" fg:w="29740426"/><text x="27.0532%" y="2127.50">al..</text></g><g><title>malloc (26,565,772 samples, 2.12%)</title><rect x="27.0561%" y="2101" width="2.1162%" height="15" fill="rgb(239,101,34)" fg:x="339641749" fg:w="26565772"/><text x="27.3061%" y="2111.50">m..</text></g><g><title>[libc.so.6] (16,721,465 samples, 1.33%)</title><rect x="27.8403%" y="2085" width="1.3320%" height="15" fill="rgb(226,209,5)" fg:x="349486056" fg:w="16721465"/><text x="28.0903%" y="2095.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (33,071,470 samples, 2.63%)</title><rect x="26.8032%" y="2293" width="2.6345%" height="15" fill="rgb(250,105,47)" fg:x="336467095" fg:w="33071470"/><text x="27.0532%" y="2303.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (33,071,470 samples, 2.63%)</title><rect x="26.8032%" y="2277" width="2.6345%" height="15" fill="rgb(230,72,3)" fg:x="336467095" fg:w="33071470"/><text x="27.0532%" y="2287.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (33,071,470 samples, 2.63%)</title><rect x="26.8032%" y="2261" width="2.6345%" height="15" fill="rgb(232,218,39)" fg:x="336467095" fg:w="33071470"/><text x="27.0532%" y="2271.50">al..</text></g><g><title>alloc::slice::hack::to_vec (33,071,470 samples, 2.63%)</title><rect x="26.8032%" y="2245" width="2.6345%" height="15" fill="rgb(248,166,6)" fg:x="336467095" fg:w="33071470"/><text x="27.0532%" y="2255.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33,071,470 samples, 2.63%)</title><rect x="26.8032%" y="2229" width="2.6345%" height="15" fill="rgb(247,89,20)" fg:x="336467095" fg:w="33071470"/><text x="27.0532%" y="2239.50">&lt;T..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,331,044 samples, 0.27%)</title><rect x="29.1723%" y="2213" width="0.2654%" height="15" fill="rgb(248,130,54)" fg:x="366207521" fg:w="3331044"/><text x="29.4223%" y="2223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,331,044 samples, 0.27%)</title><rect x="29.1723%" y="2197" width="0.2654%" height="15" fill="rgb(234,196,4)" fg:x="366207521" fg:w="3331044"/><text x="29.4223%" y="2207.50"></text></g><g><title>[libc.so.6] (3,331,044 samples, 0.27%)</title><rect x="29.1723%" y="2181" width="0.2654%" height="15" fill="rgb(250,143,31)" fg:x="366207521" fg:w="3331044"/><text x="29.4223%" y="2191.50"></text></g><g><title>core::clone::Clone::clone (36,420,947 samples, 2.90%)</title><rect x="26.8032%" y="2309" width="2.9013%" height="15" fill="rgb(211,110,34)" fg:x="336467095" fg:w="36420947"/><text x="27.0532%" y="2319.50">co..</text></g><g><title>[unknown] (3,349,477 samples, 0.27%)</title><rect x="29.4377%" y="2293" width="0.2668%" height="15" fill="rgb(215,124,48)" fg:x="369538565" fg:w="3349477"/><text x="29.6877%" y="2303.50"></text></g><g><title>[libc.so.6] (3,349,477 samples, 0.27%)</title><rect x="29.4377%" y="2277" width="0.2668%" height="15" fill="rgb(216,46,13)" fg:x="369538565" fg:w="3349477"/><text x="29.6877%" y="2287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (46,334,469 samples, 3.69%)</title><rect x="26.5418%" y="2341" width="3.6910%" height="15" fill="rgb(205,184,25)" fg:x="333185600" fg:w="46334469"/><text x="26.7918%" y="2351.50">&lt;has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (46,334,469 samples, 3.69%)</title><rect x="26.5418%" y="2325" width="3.6910%" height="15" fill="rgb(228,1,10)" fg:x="333185600" fg:w="46334469"/><text x="26.7918%" y="2335.50">hash..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (6,632,027 samples, 0.53%)</title><rect x="29.7045%" y="2309" width="0.5283%" height="15" fill="rgb(213,116,27)" fg:x="372888042" fg:w="6632027"/><text x="29.9545%" y="2319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (6,632,027 samples, 0.53%)</title><rect x="29.7045%" y="2293" width="0.5283%" height="15" fill="rgb(241,95,50)" fg:x="372888042" fg:w="6632027"/><text x="29.9545%" y="2303.50"></text></g><g><title>core::ptr::write (6,632,027 samples, 0.53%)</title><rect x="29.7045%" y="2277" width="0.5283%" height="15" fill="rgb(238,48,32)" fg:x="372888042" fg:w="6632027"/><text x="29.9545%" y="2287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (6,443,360 samples, 0.51%)</title><rect x="30.2328%" y="2341" width="0.5133%" height="15" fill="rgb(235,113,49)" fg:x="379520069" fg:w="6443360"/><text x="30.4828%" y="2351.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (6,443,360 samples, 0.51%)</title><rect x="30.2328%" y="2325" width="0.5133%" height="15" fill="rgb(205,127,43)" fg:x="379520069" fg:w="6443360"/><text x="30.4828%" y="2335.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (6,443,360 samples, 0.51%)</title><rect x="30.2328%" y="2309" width="0.5133%" height="15" fill="rgb(250,162,2)" fg:x="379520069" fg:w="6443360"/><text x="30.4828%" y="2319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,443,360 samples, 0.51%)</title><rect x="30.2328%" y="2293" width="0.5133%" height="15" fill="rgb(220,13,41)" fg:x="379520069" fg:w="6443360"/><text x="30.4828%" y="2303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,443,360 samples, 0.51%)</title><rect x="30.2328%" y="2277" width="0.5133%" height="15" fill="rgb(249,221,25)" fg:x="379520069" fg:w="6443360"/><text x="30.4828%" y="2287.50"></text></g><g><title>alloc::alloc::alloc (6,443,360 samples, 0.51%)</title><rect x="30.2328%" y="2261" width="0.5133%" height="15" fill="rgb(215,208,19)" fg:x="379520069" fg:w="6443360"/><text x="30.4828%" y="2271.50"></text></g><g><title>malloc (6,443,360 samples, 0.51%)</title><rect x="30.2328%" y="2245" width="0.5133%" height="15" fill="rgb(236,175,2)" fg:x="379520069" fg:w="6443360"/><text x="30.4828%" y="2255.50"></text></g><g><title>[libc.so.6] (6,443,360 samples, 0.51%)</title><rect x="30.2328%" y="2229" width="0.5133%" height="15" fill="rgb(241,52,2)" fg:x="379520069" fg:w="6443360"/><text x="30.4828%" y="2239.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (194,431,175 samples, 15.49%)</title><rect x="15.5210%" y="2421" width="15.4885%" height="15" fill="rgb(248,140,14)" fg:x="194838955" fg:w="194431175"/><text x="15.7710%" y="2431.50">&lt;css_bitvector_compiler:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (59,390,334 samples, 4.73%)</title><rect x="26.2784%" y="2405" width="4.7311%" height="15" fill="rgb(253,22,42)" fg:x="329879796" fg:w="59390334"/><text x="26.5284%" y="2415.50">&lt;std::..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (59,390,334 samples, 4.73%)</title><rect x="26.2784%" y="2389" width="4.7311%" height="15" fill="rgb(234,61,47)" fg:x="329879796" fg:w="59390334"/><text x="26.5284%" y="2399.50">&lt;hashb..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (56,084,530 samples, 4.47%)</title><rect x="26.5418%" y="2373" width="4.4677%" height="15" fill="rgb(208,226,15)" fg:x="333185600" fg:w="56084530"/><text x="26.7918%" y="2383.50">&lt;hash..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (56,084,530 samples, 4.47%)</title><rect x="26.5418%" y="2357" width="4.4677%" height="15" fill="rgb(217,221,4)" fg:x="333185600" fg:w="56084530"/><text x="26.7918%" y="2367.50">&lt;hash..</text></g><g><title>hashbrown::raw::RawTableInner::buckets (3,306,701 samples, 0.26%)</title><rect x="30.7461%" y="2341" width="0.2634%" height="15" fill="rgb(212,174,34)" fg:x="385963429" fg:w="3306701"/><text x="30.9961%" y="2351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (197,696,718 samples, 15.75%)</title><rect x="15.5210%" y="2485" width="15.7486%" height="15" fill="rgb(253,83,4)" fg:x="194838955" fg:w="197696718"/><text x="15.7710%" y="2495.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (197,696,718 samples, 15.75%)</title><rect x="15.5210%" y="2469" width="15.7486%" height="15" fill="rgb(250,195,49)" fg:x="194838955" fg:w="197696718"/><text x="15.7710%" y="2479.50">alloc::slice::&lt;impl [T]&gt;..</text></g><g><title>alloc::slice::hack::to_vec (197,696,718 samples, 15.75%)</title><rect x="15.5210%" y="2453" width="15.7486%" height="15" fill="rgb(241,192,25)" fg:x="194838955" fg:w="197696718"/><text x="15.7710%" y="2463.50">alloc::slice::hack::to_v..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (197,696,718 samples, 15.75%)</title><rect x="15.5210%" y="2437" width="15.7486%" height="15" fill="rgb(208,124,10)" fg:x="194838955" fg:w="197696718"/><text x="15.7710%" y="2447.50">&lt;T as alloc::slice::hack..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,265,543 samples, 0.26%)</title><rect x="31.0095%" y="2421" width="0.2601%" height="15" fill="rgb(222,33,0)" fg:x="389270130" fg:w="3265543"/><text x="31.2595%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,265,543 samples, 0.26%)</title><rect x="31.0095%" y="2405" width="0.2601%" height="15" fill="rgb(234,209,28)" fg:x="389270130" fg:w="3265543"/><text x="31.2595%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,265,543 samples, 0.26%)</title><rect x="31.0095%" y="2389" width="0.2601%" height="15" fill="rgb(224,11,23)" fg:x="389270130" fg:w="3265543"/><text x="31.2595%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,265,543 samples, 0.26%)</title><rect x="31.0095%" y="2373" width="0.2601%" height="15" fill="rgb(232,99,1)" fg:x="389270130" fg:w="3265543"/><text x="31.2595%" y="2383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,265,543 samples, 0.26%)</title><rect x="31.0095%" y="2357" width="0.2601%" height="15" fill="rgb(237,95,45)" fg:x="389270130" fg:w="3265543"/><text x="31.2595%" y="2367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,265,543 samples, 0.26%)</title><rect x="31.0095%" y="2341" width="0.2601%" height="15" fill="rgb(208,109,11)" fg:x="389270130" fg:w="3265543"/><text x="31.2595%" y="2351.50"></text></g><g><title>alloc::alloc::alloc (3,265,543 samples, 0.26%)</title><rect x="31.0095%" y="2325" width="0.2601%" height="15" fill="rgb(216,190,48)" fg:x="389270130" fg:w="3265543"/><text x="31.2595%" y="2335.50"></text></g><g><title>malloc (3,265,543 samples, 0.26%)</title><rect x="31.0095%" y="2309" width="0.2601%" height="15" fill="rgb(251,171,36)" fg:x="389270130" fg:w="3265543"/><text x="31.2595%" y="2319.50"></text></g><g><title>[libc.so.6] (3,265,543 samples, 0.26%)</title><rect x="31.0095%" y="2293" width="0.2601%" height="15" fill="rgb(230,62,22)" fg:x="389270130" fg:w="3265543"/><text x="31.2595%" y="2303.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (16,519,633 samples, 1.32%)</title><rect x="31.2696%" y="2485" width="1.3160%" height="15" fill="rgb(225,114,35)" fg:x="392535673" fg:w="16519633"/><text x="31.5196%" y="2495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,605,063 samples, 0.53%)</title><rect x="32.0594%" y="2469" width="0.5262%" height="15" fill="rgb(215,118,42)" fg:x="402450243" fg:w="6605063"/><text x="32.3094%" y="2479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,274,524 samples, 0.26%)</title><rect x="32.3248%" y="2453" width="0.2609%" height="15" fill="rgb(243,119,21)" fg:x="405780782" fg:w="3274524"/><text x="32.5748%" y="2463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,274,524 samples, 0.26%)</title><rect x="32.3248%" y="2437" width="0.2609%" height="15" fill="rgb(252,177,53)" fg:x="405780782" fg:w="3274524"/><text x="32.5748%" y="2447.50"></text></g><g><title>alloc::slice::hack::to_vec (3,274,524 samples, 0.26%)</title><rect x="32.3248%" y="2421" width="0.2609%" height="15" fill="rgb(237,209,29)" fg:x="405780782" fg:w="3274524"/><text x="32.5748%" y="2431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,274,524 samples, 0.26%)</title><rect x="32.3248%" y="2405" width="0.2609%" height="15" fill="rgb(212,65,23)" fg:x="405780782" fg:w="3274524"/><text x="32.5748%" y="2415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,274,524 samples, 0.26%)</title><rect x="32.3248%" y="2389" width="0.2609%" height="15" fill="rgb(230,222,46)" fg:x="405780782" fg:w="3274524"/><text x="32.5748%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,274,524 samples, 0.26%)</title><rect x="32.3248%" y="2373" width="0.2609%" height="15" fill="rgb(215,135,32)" fg:x="405780782" fg:w="3274524"/><text x="32.5748%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,274,524 samples, 0.26%)</title><rect x="32.3248%" y="2357" width="0.2609%" height="15" fill="rgb(246,101,22)" fg:x="405780782" fg:w="3274524"/><text x="32.5748%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,274,524 samples, 0.26%)</title><rect x="32.3248%" y="2341" width="0.2609%" height="15" fill="rgb(206,107,13)" fg:x="405780782" fg:w="3274524"/><text x="32.5748%" y="2351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,274,524 samples, 0.26%)</title><rect x="32.3248%" y="2325" width="0.2609%" height="15" fill="rgb(250,100,44)" fg:x="405780782" fg:w="3274524"/><text x="32.5748%" y="2335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,274,524 samples, 0.26%)</title><rect x="32.3248%" y="2309" width="0.2609%" height="15" fill="rgb(231,147,38)" fg:x="405780782" fg:w="3274524"/><text x="32.5748%" y="2319.50"></text></g><g><title>alloc::alloc::alloc (3,274,524 samples, 0.26%)</title><rect x="32.3248%" y="2293" width="0.2609%" height="15" fill="rgb(229,8,40)" fg:x="405780782" fg:w="3274524"/><text x="32.5748%" y="2303.50"></text></g><g><title>malloc (3,274,524 samples, 0.26%)</title><rect x="32.3248%" y="2277" width="0.2609%" height="15" fill="rgb(221,135,30)" fg:x="405780782" fg:w="3274524"/><text x="32.5748%" y="2287.50"></text></g><g><title>[libc.so.6] (3,274,524 samples, 0.26%)</title><rect x="32.3248%" y="2261" width="0.2609%" height="15" fill="rgb(249,193,18)" fg:x="405780782" fg:w="3274524"/><text x="32.5748%" y="2271.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,287,766 samples, 0.26%)</title><rect x="32.5856%" y="2485" width="0.2619%" height="15" fill="rgb(209,133,39)" fg:x="409055306" fg:w="3287766"/><text x="32.8356%" y="2495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,287,766 samples, 0.26%)</title><rect x="32.5856%" y="2469" width="0.2619%" height="15" fill="rgb(232,100,14)" fg:x="409055306" fg:w="3287766"/><text x="32.8356%" y="2479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,287,766 samples, 0.26%)</title><rect x="32.5856%" y="2453" width="0.2619%" height="15" fill="rgb(224,185,1)" fg:x="409055306" fg:w="3287766"/><text x="32.8356%" y="2463.50"></text></g><g><title>alloc::slice::hack::to_vec (3,287,766 samples, 0.26%)</title><rect x="32.5856%" y="2437" width="0.2619%" height="15" fill="rgb(223,139,8)" fg:x="409055306" fg:w="3287766"/><text x="32.8356%" y="2447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,287,766 samples, 0.26%)</title><rect x="32.5856%" y="2421" width="0.2619%" height="15" fill="rgb(232,213,38)" fg:x="409055306" fg:w="3287766"/><text x="32.8356%" y="2431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,287,766 samples, 0.26%)</title><rect x="32.5856%" y="2405" width="0.2619%" height="15" fill="rgb(207,94,22)" fg:x="409055306" fg:w="3287766"/><text x="32.8356%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,287,766 samples, 0.26%)</title><rect x="32.5856%" y="2389" width="0.2619%" height="15" fill="rgb(219,183,54)" fg:x="409055306" fg:w="3287766"/><text x="32.8356%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,287,766 samples, 0.26%)</title><rect x="32.5856%" y="2373" width="0.2619%" height="15" fill="rgb(216,185,54)" fg:x="409055306" fg:w="3287766"/><text x="32.8356%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,287,766 samples, 0.26%)</title><rect x="32.5856%" y="2357" width="0.2619%" height="15" fill="rgb(254,217,39)" fg:x="409055306" fg:w="3287766"/><text x="32.8356%" y="2367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,287,766 samples, 0.26%)</title><rect x="32.5856%" y="2341" width="0.2619%" height="15" fill="rgb(240,178,23)" fg:x="409055306" fg:w="3287766"/><text x="32.8356%" y="2351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,287,766 samples, 0.26%)</title><rect x="32.5856%" y="2325" width="0.2619%" height="15" fill="rgb(218,11,47)" fg:x="409055306" fg:w="3287766"/><text x="32.8356%" y="2335.50"></text></g><g><title>alloc::alloc::alloc (3,287,766 samples, 0.26%)</title><rect x="32.5856%" y="2309" width="0.2619%" height="15" fill="rgb(218,51,51)" fg:x="409055306" fg:w="3287766"/><text x="32.8356%" y="2319.50"></text></g><g><title>malloc (3,287,766 samples, 0.26%)</title><rect x="32.5856%" y="2293" width="0.2619%" height="15" fill="rgb(238,126,27)" fg:x="409055306" fg:w="3287766"/><text x="32.8356%" y="2303.50"></text></g><g><title>__rdl_alloc (3,277,409 samples, 0.26%)</title><rect x="32.8475%" y="2181" width="0.2611%" height="15" fill="rgb(249,202,22)" fg:x="412343072" fg:w="3277409"/><text x="33.0975%" y="2191.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,277,409 samples, 0.26%)</title><rect x="32.8475%" y="2165" width="0.2611%" height="15" fill="rgb(254,195,49)" fg:x="412343072" fg:w="3277409"/><text x="33.0975%" y="2175.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (6,551,734 samples, 0.52%)</title><rect x="32.8475%" y="2421" width="0.5219%" height="15" fill="rgb(208,123,14)" fg:x="412343072" fg:w="6551734"/><text x="33.0975%" y="2431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (6,551,734 samples, 0.52%)</title><rect x="32.8475%" y="2405" width="0.5219%" height="15" fill="rgb(224,200,8)" fg:x="412343072" fg:w="6551734"/><text x="33.0975%" y="2415.50"></text></g><g><title>core::clone::Clone::clone (6,551,734 samples, 0.52%)</title><rect x="32.8475%" y="2389" width="0.5219%" height="15" fill="rgb(217,61,36)" fg:x="412343072" fg:w="6551734"/><text x="33.0975%" y="2399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,551,734 samples, 0.52%)</title><rect x="32.8475%" y="2373" width="0.5219%" height="15" fill="rgb(206,35,45)" fg:x="412343072" fg:w="6551734"/><text x="33.0975%" y="2383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,551,734 samples, 0.52%)</title><rect x="32.8475%" y="2357" width="0.5219%" height="15" fill="rgb(217,65,33)" fg:x="412343072" fg:w="6551734"/><text x="33.0975%" y="2367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,551,734 samples, 0.52%)</title><rect x="32.8475%" y="2341" width="0.5219%" height="15" fill="rgb(222,158,48)" fg:x="412343072" fg:w="6551734"/><text x="33.0975%" y="2351.50"></text></g><g><title>alloc::slice::hack::to_vec (6,551,734 samples, 0.52%)</title><rect x="32.8475%" y="2325" width="0.5219%" height="15" fill="rgb(254,2,54)" fg:x="412343072" fg:w="6551734"/><text x="33.0975%" y="2335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,551,734 samples, 0.52%)</title><rect x="32.8475%" y="2309" width="0.5219%" height="15" fill="rgb(250,143,38)" fg:x="412343072" fg:w="6551734"/><text x="33.0975%" y="2319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,551,734 samples, 0.52%)</title><rect x="32.8475%" y="2293" width="0.5219%" height="15" fill="rgb(248,25,0)" fg:x="412343072" fg:w="6551734"/><text x="33.0975%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,551,734 samples, 0.52%)</title><rect x="32.8475%" y="2277" width="0.5219%" height="15" fill="rgb(206,152,27)" fg:x="412343072" fg:w="6551734"/><text x="33.0975%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,551,734 samples, 0.52%)</title><rect x="32.8475%" y="2261" width="0.5219%" height="15" fill="rgb(240,77,30)" fg:x="412343072" fg:w="6551734"/><text x="33.0975%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,551,734 samples, 0.52%)</title><rect x="32.8475%" y="2245" width="0.5219%" height="15" fill="rgb(231,5,3)" fg:x="412343072" fg:w="6551734"/><text x="33.0975%" y="2255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,551,734 samples, 0.52%)</title><rect x="32.8475%" y="2229" width="0.5219%" height="15" fill="rgb(207,226,32)" fg:x="412343072" fg:w="6551734"/><text x="33.0975%" y="2239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,551,734 samples, 0.52%)</title><rect x="32.8475%" y="2213" width="0.5219%" height="15" fill="rgb(222,207,47)" fg:x="412343072" fg:w="6551734"/><text x="33.0975%" y="2223.50"></text></g><g><title>alloc::alloc::alloc (6,551,734 samples, 0.52%)</title><rect x="32.8475%" y="2197" width="0.5219%" height="15" fill="rgb(229,115,45)" fg:x="412343072" fg:w="6551734"/><text x="33.0975%" y="2207.50"></text></g><g><title>malloc (3,274,325 samples, 0.26%)</title><rect x="33.1086%" y="2181" width="0.2608%" height="15" fill="rgb(224,191,6)" fg:x="415620481" fg:w="3274325"/><text x="33.3586%" y="2191.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (10,366,953 samples, 0.83%)</title><rect x="33.3694%" y="2389" width="0.8258%" height="15" fill="rgb(230,227,24)" fg:x="418894806" fg:w="10366953"/><text x="33.6194%" y="2399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,366,953 samples, 0.83%)</title><rect x="33.3694%" y="2373" width="0.8258%" height="15" fill="rgb(228,80,19)" fg:x="418894806" fg:w="10366953"/><text x="33.6194%" y="2383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10,366,953 samples, 0.83%)</title><rect x="33.3694%" y="2357" width="0.8258%" height="15" fill="rgb(247,229,0)" fg:x="418894806" fg:w="10366953"/><text x="33.6194%" y="2367.50"></text></g><g><title>alloc::alloc::alloc (10,366,953 samples, 0.83%)</title><rect x="33.3694%" y="2341" width="0.8258%" height="15" fill="rgb(237,194,15)" fg:x="418894806" fg:w="10366953"/><text x="33.6194%" y="2351.50"></text></g><g><title>malloc (10,366,953 samples, 0.83%)</title><rect x="33.3694%" y="2325" width="0.8258%" height="15" fill="rgb(219,203,20)" fg:x="418894806" fg:w="10366953"/><text x="33.6194%" y="2335.50"></text></g><g><title>[libc.so.6] (3,354,005 samples, 0.27%)</title><rect x="33.9281%" y="2309" width="0.2672%" height="15" fill="rgb(234,128,8)" fg:x="425907754" fg:w="3354005"/><text x="34.1781%" y="2319.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (241,063,764 samples, 19.20%)</title><rect x="15.2583%" y="2501" width="19.2033%" height="15" fill="rgb(248,202,8)" fg:x="191541639" fg:w="241063764"/><text x="15.5083%" y="2511.50">&lt;css_bitvector_compiler::HtmlN..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (20,262,331 samples, 1.61%)</title><rect x="32.8475%" y="2485" width="1.6141%" height="15" fill="rgb(206,104,37)" fg:x="412343072" fg:w="20262331"/><text x="33.0975%" y="2495.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (20,262,331 samples, 1.61%)</title><rect x="32.8475%" y="2469" width="1.6141%" height="15" fill="rgb(223,8,27)" fg:x="412343072" fg:w="20262331"/><text x="33.0975%" y="2479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (20,262,331 samples, 1.61%)</title><rect x="32.8475%" y="2453" width="1.6141%" height="15" fill="rgb(216,217,28)" fg:x="412343072" fg:w="20262331"/><text x="33.0975%" y="2463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (20,262,331 samples, 1.61%)</title><rect x="32.8475%" y="2437" width="1.6141%" height="15" fill="rgb(249,199,1)" fg:x="412343072" fg:w="20262331"/><text x="33.0975%" y="2447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (13,710,597 samples, 1.09%)</title><rect x="33.3694%" y="2421" width="1.0922%" height="15" fill="rgb(240,85,17)" fg:x="418894806" fg:w="13710597"/><text x="33.6194%" y="2431.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (13,710,597 samples, 1.09%)</title><rect x="33.3694%" y="2405" width="1.0922%" height="15" fill="rgb(206,108,45)" fg:x="418894806" fg:w="13710597"/><text x="33.6194%" y="2415.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (3,343,644 samples, 0.27%)</title><rect x="34.1953%" y="2389" width="0.2664%" height="15" fill="rgb(245,210,41)" fg:x="429261759" fg:w="3343644"/><text x="34.4453%" y="2399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (247,680,690 samples, 19.73%)</title><rect x="15.2583%" y="2565" width="19.7304%" height="15" fill="rgb(206,13,37)" fg:x="191541639" fg:w="247680690"/><text x="15.5083%" y="2575.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (247,680,690 samples, 19.73%)</title><rect x="15.2583%" y="2549" width="19.7304%" height="15" fill="rgb(250,61,18)" fg:x="191541639" fg:w="247680690"/><text x="15.5083%" y="2559.50">alloc::slice::&lt;impl [T]&gt;::to_ve..</text></g><g><title>alloc::slice::hack::to_vec (247,680,690 samples, 19.73%)</title><rect x="15.2583%" y="2533" width="19.7304%" height="15" fill="rgb(235,172,48)" fg:x="191541639" fg:w="247680690"/><text x="15.5083%" y="2543.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (247,680,690 samples, 19.73%)</title><rect x="15.2583%" y="2517" width="19.7304%" height="15" fill="rgb(249,201,17)" fg:x="191541639" fg:w="247680690"/><text x="15.5083%" y="2527.50">&lt;T as alloc::slice::hack::Conve..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,616,926 samples, 0.53%)</title><rect x="34.4616%" y="2501" width="0.5271%" height="15" fill="rgb(219,208,6)" fg:x="432605403" fg:w="6616926"/><text x="34.7116%" y="2511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,616,926 samples, 0.53%)</title><rect x="34.4616%" y="2485" width="0.5271%" height="15" fill="rgb(248,31,23)" fg:x="432605403" fg:w="6616926"/><text x="34.7116%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,616,926 samples, 0.53%)</title><rect x="34.4616%" y="2469" width="0.5271%" height="15" fill="rgb(245,15,42)" fg:x="432605403" fg:w="6616926"/><text x="34.7116%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,616,926 samples, 0.53%)</title><rect x="34.4616%" y="2453" width="0.5271%" height="15" fill="rgb(222,217,39)" fg:x="432605403" fg:w="6616926"/><text x="34.7116%" y="2463.50"></text></g><g><title>alloc::raw_vec::layout_array (3,326,258 samples, 0.26%)</title><rect x="34.7238%" y="2437" width="0.2650%" height="15" fill="rgb(210,219,27)" fg:x="435896071" fg:w="3326258"/><text x="34.9738%" y="2447.50"></text></g><g><title>core::alloc::layout::Layout::repeat (3,326,258 samples, 0.26%)</title><rect x="34.7238%" y="2421" width="0.2650%" height="15" fill="rgb(252,166,36)" fg:x="435896071" fg:w="3326258"/><text x="34.9738%" y="2431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6,630,493 samples, 0.53%)</title><rect x="34.9887%" y="2565" width="0.5282%" height="15" fill="rgb(245,132,34)" fg:x="439222329" fg:w="6630493"/><text x="35.2387%" y="2575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,630,493 samples, 0.53%)</title><rect x="34.9887%" y="2549" width="0.5282%" height="15" fill="rgb(236,54,3)" fg:x="439222329" fg:w="6630493"/><text x="35.2387%" y="2559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,630,493 samples, 0.53%)</title><rect x="34.9887%" y="2533" width="0.5282%" height="15" fill="rgb(241,173,43)" fg:x="439222329" fg:w="6630493"/><text x="35.2387%" y="2543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,630,493 samples, 0.53%)</title><rect x="34.9887%" y="2517" width="0.5282%" height="15" fill="rgb(215,190,9)" fg:x="439222329" fg:w="6630493"/><text x="35.2387%" y="2527.50"></text></g><g><title>alloc::slice::hack::to_vec (6,630,493 samples, 0.53%)</title><rect x="34.9887%" y="2501" width="0.5282%" height="15" fill="rgb(242,101,16)" fg:x="439222329" fg:w="6630493"/><text x="35.2387%" y="2511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,630,493 samples, 0.53%)</title><rect x="34.9887%" y="2485" width="0.5282%" height="15" fill="rgb(223,190,21)" fg:x="439222329" fg:w="6630493"/><text x="35.2387%" y="2495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,630,493 samples, 0.53%)</title><rect x="34.9887%" y="2469" width="0.5282%" height="15" fill="rgb(215,228,25)" fg:x="439222329" fg:w="6630493"/><text x="35.2387%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,630,493 samples, 0.53%)</title><rect x="34.9887%" y="2453" width="0.5282%" height="15" fill="rgb(225,36,22)" fg:x="439222329" fg:w="6630493"/><text x="35.2387%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,630,493 samples, 0.53%)</title><rect x="34.9887%" y="2437" width="0.5282%" height="15" fill="rgb(251,106,46)" fg:x="439222329" fg:w="6630493"/><text x="35.2387%" y="2447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,630,493 samples, 0.53%)</title><rect x="34.9887%" y="2421" width="0.5282%" height="15" fill="rgb(208,90,1)" fg:x="439222329" fg:w="6630493"/><text x="35.2387%" y="2431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,630,493 samples, 0.53%)</title><rect x="34.9887%" y="2405" width="0.5282%" height="15" fill="rgb(243,10,4)" fg:x="439222329" fg:w="6630493"/><text x="35.2387%" y="2415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,630,493 samples, 0.53%)</title><rect x="34.9887%" y="2389" width="0.5282%" height="15" fill="rgb(212,137,27)" fg:x="439222329" fg:w="6630493"/><text x="35.2387%" y="2399.50"></text></g><g><title>alloc::alloc::alloc (6,630,493 samples, 0.53%)</title><rect x="34.9887%" y="2373" width="0.5282%" height="15" fill="rgb(231,220,49)" fg:x="439222329" fg:w="6630493"/><text x="35.2387%" y="2383.50"></text></g><g><title>malloc (6,630,493 samples, 0.53%)</title><rect x="34.9887%" y="2357" width="0.5282%" height="15" fill="rgb(237,96,20)" fg:x="439222329" fg:w="6630493"/><text x="35.2387%" y="2367.50"></text></g><g><title>[libc.so.6] (6,630,493 samples, 0.53%)</title><rect x="34.9887%" y="2341" width="0.5282%" height="15" fill="rgb(239,229,30)" fg:x="439222329" fg:w="6630493"/><text x="35.2387%" y="2351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,329,188 samples, 0.27%)</title><rect x="35.5169%" y="2485" width="0.2652%" height="15" fill="rgb(219,65,33)" fg:x="445852822" fg:w="3329188"/><text x="35.7669%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,329,188 samples, 0.27%)</title><rect x="35.5169%" y="2469" width="0.2652%" height="15" fill="rgb(243,134,7)" fg:x="445852822" fg:w="3329188"/><text x="35.7669%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,329,188 samples, 0.27%)</title><rect x="35.5169%" y="2453" width="0.2652%" height="15" fill="rgb(216,177,54)" fg:x="445852822" fg:w="3329188"/><text x="35.7669%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,329,188 samples, 0.27%)</title><rect x="35.5169%" y="2437" width="0.2652%" height="15" fill="rgb(211,160,20)" fg:x="445852822" fg:w="3329188"/><text x="35.7669%" y="2447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,329,188 samples, 0.27%)</title><rect x="35.5169%" y="2421" width="0.2652%" height="15" fill="rgb(239,85,39)" fg:x="445852822" fg:w="3329188"/><text x="35.7669%" y="2431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,329,188 samples, 0.27%)</title><rect x="35.5169%" y="2405" width="0.2652%" height="15" fill="rgb(232,125,22)" fg:x="445852822" fg:w="3329188"/><text x="35.7669%" y="2415.50"></text></g><g><title>alloc::alloc::alloc (3,329,188 samples, 0.27%)</title><rect x="35.5169%" y="2389" width="0.2652%" height="15" fill="rgb(244,57,34)" fg:x="445852822" fg:w="3329188"/><text x="35.7669%" y="2399.50"></text></g><g><title>malloc (3,329,188 samples, 0.27%)</title><rect x="35.5169%" y="2373" width="0.2652%" height="15" fill="rgb(214,203,32)" fg:x="445852822" fg:w="3329188"/><text x="35.7669%" y="2383.50"></text></g><g><title>[libc.so.6] (3,329,188 samples, 0.27%)</title><rect x="35.5169%" y="2357" width="0.2652%" height="15" fill="rgb(207,58,43)" fg:x="445852822" fg:w="3329188"/><text x="35.7669%" y="2367.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (6,538,307 samples, 0.52%)</title><rect x="35.5169%" y="2565" width="0.5208%" height="15" fill="rgb(215,193,15)" fg:x="445852822" fg:w="6538307"/><text x="35.7669%" y="2575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,538,307 samples, 0.52%)</title><rect x="35.5169%" y="2549" width="0.5208%" height="15" fill="rgb(232,15,44)" fg:x="445852822" fg:w="6538307"/><text x="35.7669%" y="2559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,538,307 samples, 0.52%)</title><rect x="35.5169%" y="2533" width="0.5208%" height="15" fill="rgb(212,3,48)" fg:x="445852822" fg:w="6538307"/><text x="35.7669%" y="2543.50"></text></g><g><title>alloc::slice::hack::to_vec (6,538,307 samples, 0.52%)</title><rect x="35.5169%" y="2517" width="0.5208%" height="15" fill="rgb(218,128,7)" fg:x="445852822" fg:w="6538307"/><text x="35.7669%" y="2527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,538,307 samples, 0.52%)</title><rect x="35.5169%" y="2501" width="0.5208%" height="15" fill="rgb(226,216,39)" fg:x="445852822" fg:w="6538307"/><text x="35.7669%" y="2511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,209,119 samples, 0.26%)</title><rect x="35.7821%" y="2485" width="0.2556%" height="15" fill="rgb(243,47,51)" fg:x="449182010" fg:w="3209119"/><text x="36.0321%" y="2495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,209,119 samples, 0.26%)</title><rect x="35.7821%" y="2469" width="0.2556%" height="15" fill="rgb(241,183,40)" fg:x="449182010" fg:w="3209119"/><text x="36.0321%" y="2479.50"></text></g><g><title>[libc.so.6] (3,209,119 samples, 0.26%)</title><rect x="35.7821%" y="2453" width="0.2556%" height="15" fill="rgb(231,217,32)" fg:x="449182010" fg:w="3209119"/><text x="36.0321%" y="2463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,709,831 samples, 0.53%)</title><rect x="36.5588%" y="2373" width="0.5345%" height="15" fill="rgb(229,61,38)" fg:x="458932174" fg:w="6709831"/><text x="36.8088%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,709,831 samples, 0.53%)</title><rect x="36.5588%" y="2357" width="0.5345%" height="15" fill="rgb(225,210,5)" fg:x="458932174" fg:w="6709831"/><text x="36.8088%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,709,831 samples, 0.53%)</title><rect x="36.5588%" y="2341" width="0.5345%" height="15" fill="rgb(231,79,45)" fg:x="458932174" fg:w="6709831"/><text x="36.8088%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,709,831 samples, 0.53%)</title><rect x="36.5588%" y="2325" width="0.5345%" height="15" fill="rgb(224,100,7)" fg:x="458932174" fg:w="6709831"/><text x="36.8088%" y="2335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,709,831 samples, 0.53%)</title><rect x="36.5588%" y="2309" width="0.5345%" height="15" fill="rgb(241,198,18)" fg:x="458932174" fg:w="6709831"/><text x="36.8088%" y="2319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,709,831 samples, 0.53%)</title><rect x="36.5588%" y="2293" width="0.5345%" height="15" fill="rgb(252,97,53)" fg:x="458932174" fg:w="6709831"/><text x="36.8088%" y="2303.50"></text></g><g><title>alloc::alloc::alloc (6,709,831 samples, 0.53%)</title><rect x="36.5588%" y="2277" width="0.5345%" height="15" fill="rgb(220,88,7)" fg:x="458932174" fg:w="6709831"/><text x="36.8088%" y="2287.50"></text></g><g><title>malloc (3,343,627 samples, 0.27%)</title><rect x="36.8270%" y="2261" width="0.2664%" height="15" fill="rgb(213,176,14)" fg:x="462298378" fg:w="3343627"/><text x="37.0770%" y="2271.50"></text></g><g><title>[libc.so.6] (3,343,627 samples, 0.27%)</title><rect x="36.8270%" y="2245" width="0.2664%" height="15" fill="rgb(246,73,7)" fg:x="462298378" fg:w="3343627"/><text x="37.0770%" y="2255.50"></text></g><g><title>core::clone::Clone::clone (10,072,212 samples, 0.80%)</title><rect x="36.5588%" y="2469" width="0.8024%" height="15" fill="rgb(245,64,36)" fg:x="458932174" fg:w="10072212"/><text x="36.8088%" y="2479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10,072,212 samples, 0.80%)</title><rect x="36.5588%" y="2453" width="0.8024%" height="15" fill="rgb(245,80,10)" fg:x="458932174" fg:w="10072212"/><text x="36.8088%" y="2463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,072,212 samples, 0.80%)</title><rect x="36.5588%" y="2437" width="0.8024%" height="15" fill="rgb(232,107,50)" fg:x="458932174" fg:w="10072212"/><text x="36.8088%" y="2447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,072,212 samples, 0.80%)</title><rect x="36.5588%" y="2421" width="0.8024%" height="15" fill="rgb(253,3,0)" fg:x="458932174" fg:w="10072212"/><text x="36.8088%" y="2431.50"></text></g><g><title>alloc::slice::hack::to_vec (10,072,212 samples, 0.80%)</title><rect x="36.5588%" y="2405" width="0.8024%" height="15" fill="rgb(212,99,53)" fg:x="458932174" fg:w="10072212"/><text x="36.8088%" y="2415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,072,212 samples, 0.80%)</title><rect x="36.5588%" y="2389" width="0.8024%" height="15" fill="rgb(249,111,54)" fg:x="458932174" fg:w="10072212"/><text x="36.8088%" y="2399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,362,381 samples, 0.27%)</title><rect x="37.0933%" y="2373" width="0.2678%" height="15" fill="rgb(249,55,30)" fg:x="465642005" fg:w="3362381"/><text x="37.3433%" y="2383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,362,381 samples, 0.27%)</title><rect x="37.0933%" y="2357" width="0.2678%" height="15" fill="rgb(237,47,42)" fg:x="465642005" fg:w="3362381"/><text x="37.3433%" y="2367.50"></text></g><g><title>[libc.so.6] (3,362,381 samples, 0.27%)</title><rect x="37.0933%" y="2341" width="0.2678%" height="15" fill="rgb(211,20,18)" fg:x="465642005" fg:w="3362381"/><text x="37.3433%" y="2351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (3,272,532 samples, 0.26%)</title><rect x="37.3612%" y="2469" width="0.2607%" height="15" fill="rgb(231,203,46)" fg:x="469004386" fg:w="3272532"/><text x="37.6112%" y="2479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,272,532 samples, 0.26%)</title><rect x="37.3612%" y="2453" width="0.2607%" height="15" fill="rgb(237,142,3)" fg:x="469004386" fg:w="3272532"/><text x="37.6112%" y="2463.50"></text></g><g><title>[libc.so.6] (3,272,532 samples, 0.26%)</title><rect x="37.3612%" y="2437" width="0.2607%" height="15" fill="rgb(241,107,1)" fg:x="469004386" fg:w="3272532"/><text x="37.6112%" y="2447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (16,681,146 samples, 1.33%)</title><rect x="36.5588%" y="2501" width="1.3288%" height="15" fill="rgb(229,83,13)" fg:x="458932174" fg:w="16681146"/><text x="36.8088%" y="2511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (16,681,146 samples, 1.33%)</title><rect x="36.5588%" y="2485" width="1.3288%" height="15" fill="rgb(241,91,40)" fg:x="458932174" fg:w="16681146"/><text x="36.8088%" y="2495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3,336,402 samples, 0.27%)</title><rect x="37.6219%" y="2469" width="0.2658%" height="15" fill="rgb(225,3,45)" fg:x="472276918" fg:w="3336402"/><text x="37.8719%" y="2479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3,336,402 samples, 0.27%)</title><rect x="37.6219%" y="2453" width="0.2658%" height="15" fill="rgb(244,223,14)" fg:x="472276918" fg:w="3336402"/><text x="37.8719%" y="2463.50"></text></g><g><title>core::ptr::write (3,336,402 samples, 0.27%)</title><rect x="37.6219%" y="2437" width="0.2658%" height="15" fill="rgb(224,124,37)" fg:x="472276918" fg:w="3336402"/><text x="37.8719%" y="2447.50"></text></g><g><title>__rdl_alloc (3,296,136 samples, 0.26%)</title><rect x="37.8877%" y="2405" width="0.2626%" height="15" fill="rgb(251,171,30)" fg:x="475613320" fg:w="3296136"/><text x="38.1377%" y="2415.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,296,136 samples, 0.26%)</title><rect x="37.8877%" y="2389" width="0.2626%" height="15" fill="rgb(236,46,54)" fg:x="475613320" fg:w="3296136"/><text x="38.1377%" y="2399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (303,837,591 samples, 24.20%)</title><rect x="14.7320%" y="2645" width="24.2039%" height="15" fill="rgb(245,213,5)" fg:x="184934336" fg:w="303837591"/><text x="14.9820%" y="2655.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::C..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (303,837,591 samples, 24.20%)</title><rect x="14.7320%" y="2629" width="24.2039%" height="15" fill="rgb(230,144,27)" fg:x="184934336" fg:w="303837591"/><text x="14.9820%" y="2639.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (303,837,591 samples, 24.20%)</title><rect x="14.7320%" y="2613" width="24.2039%" height="15" fill="rgb(220,86,6)" fg:x="184934336" fg:w="303837591"/><text x="14.9820%" y="2623.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (303,837,591 samples, 24.20%)</title><rect x="14.7320%" y="2597" width="24.2039%" height="15" fill="rgb(240,20,13)" fg:x="184934336" fg:w="303837591"/><text x="14.9820%" y="2607.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (303,837,591 samples, 24.20%)</title><rect x="14.7320%" y="2581" width="24.2039%" height="15" fill="rgb(217,89,34)" fg:x="184934336" fg:w="303837591"/><text x="14.9820%" y="2591.50">&lt;css_bitvector_compiler::HtmlNode as co..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (36,380,798 samples, 2.90%)</title><rect x="36.0378%" y="2565" width="2.8981%" height="15" fill="rgb(229,13,5)" fg:x="452391129" fg:w="36380798"/><text x="36.2878%" y="2575.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (36,380,798 samples, 2.90%)</title><rect x="36.0378%" y="2549" width="2.8981%" height="15" fill="rgb(244,67,35)" fg:x="452391129" fg:w="36380798"/><text x="36.2878%" y="2559.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (29,839,753 samples, 2.38%)</title><rect x="36.5588%" y="2533" width="2.3771%" height="15" fill="rgb(221,40,2)" fg:x="458932174" fg:w="29839753"/><text x="36.8088%" y="2543.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (29,839,753 samples, 2.38%)</title><rect x="36.5588%" y="2517" width="2.3771%" height="15" fill="rgb(237,157,21)" fg:x="458932174" fg:w="29839753"/><text x="36.8088%" y="2527.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (13,158,607 samples, 1.05%)</title><rect x="37.8877%" y="2501" width="1.0482%" height="15" fill="rgb(222,94,11)" fg:x="475613320" fg:w="13158607"/><text x="38.1377%" y="2511.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (13,158,607 samples, 1.05%)</title><rect x="37.8877%" y="2485" width="1.0482%" height="15" fill="rgb(249,113,6)" fg:x="475613320" fg:w="13158607"/><text x="38.1377%" y="2495.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (13,158,607 samples, 1.05%)</title><rect x="37.8877%" y="2469" width="1.0482%" height="15" fill="rgb(238,137,36)" fg:x="475613320" fg:w="13158607"/><text x="38.1377%" y="2479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13,158,607 samples, 1.05%)</title><rect x="37.8877%" y="2453" width="1.0482%" height="15" fill="rgb(210,102,26)" fg:x="475613320" fg:w="13158607"/><text x="38.1377%" y="2463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13,158,607 samples, 1.05%)</title><rect x="37.8877%" y="2437" width="1.0482%" height="15" fill="rgb(218,30,30)" fg:x="475613320" fg:w="13158607"/><text x="38.1377%" y="2447.50"></text></g><g><title>alloc::alloc::alloc (13,158,607 samples, 1.05%)</title><rect x="37.8877%" y="2421" width="1.0482%" height="15" fill="rgb(214,67,26)" fg:x="475613320" fg:w="13158607"/><text x="38.1377%" y="2431.50"></text></g><g><title>malloc (9,862,471 samples, 0.79%)</title><rect x="38.1502%" y="2405" width="0.7857%" height="15" fill="rgb(251,9,53)" fg:x="478909456" fg:w="9862471"/><text x="38.4002%" y="2415.50"></text></g><g><title>[libc.so.6] (6,588,919 samples, 0.52%)</title><rect x="38.4110%" y="2389" width="0.5249%" height="15" fill="rgb(228,204,25)" fg:x="482183008" fg:w="6588919"/><text x="38.6610%" y="2399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,283,109 samples, 0.26%)</title><rect x="38.9359%" y="2645" width="0.2615%" height="15" fill="rgb(207,153,8)" fg:x="488771927" fg:w="3283109"/><text x="39.1859%" y="2655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,283,109 samples, 0.26%)</title><rect x="38.9359%" y="2629" width="0.2615%" height="15" fill="rgb(242,9,16)" fg:x="488771927" fg:w="3283109"/><text x="39.1859%" y="2639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,283,109 samples, 0.26%)</title><rect x="38.9359%" y="2613" width="0.2615%" height="15" fill="rgb(217,211,10)" fg:x="488771927" fg:w="3283109"/><text x="39.1859%" y="2623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,283,109 samples, 0.26%)</title><rect x="38.9359%" y="2597" width="0.2615%" height="15" fill="rgb(219,228,52)" fg:x="488771927" fg:w="3283109"/><text x="39.1859%" y="2607.50"></text></g><g><title>alloc::slice::hack::to_vec (3,283,109 samples, 0.26%)</title><rect x="38.9359%" y="2581" width="0.2615%" height="15" fill="rgb(231,92,29)" fg:x="488771927" fg:w="3283109"/><text x="39.1859%" y="2591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,283,109 samples, 0.26%)</title><rect x="38.9359%" y="2565" width="0.2615%" height="15" fill="rgb(232,8,23)" fg:x="488771927" fg:w="3283109"/><text x="39.1859%" y="2575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,283,109 samples, 0.26%)</title><rect x="38.9359%" y="2549" width="0.2615%" height="15" fill="rgb(216,211,34)" fg:x="488771927" fg:w="3283109"/><text x="39.1859%" y="2559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,283,109 samples, 0.26%)</title><rect x="38.9359%" y="2533" width="0.2615%" height="15" fill="rgb(236,151,0)" fg:x="488771927" fg:w="3283109"/><text x="39.1859%" y="2543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,283,109 samples, 0.26%)</title><rect x="38.9359%" y="2517" width="0.2615%" height="15" fill="rgb(209,168,3)" fg:x="488771927" fg:w="3283109"/><text x="39.1859%" y="2527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,283,109 samples, 0.26%)</title><rect x="38.9359%" y="2501" width="0.2615%" height="15" fill="rgb(208,129,28)" fg:x="488771927" fg:w="3283109"/><text x="39.1859%" y="2511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,283,109 samples, 0.26%)</title><rect x="38.9359%" y="2485" width="0.2615%" height="15" fill="rgb(229,78,22)" fg:x="488771927" fg:w="3283109"/><text x="39.1859%" y="2495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,283,109 samples, 0.26%)</title><rect x="38.9359%" y="2469" width="0.2615%" height="15" fill="rgb(228,187,13)" fg:x="488771927" fg:w="3283109"/><text x="39.1859%" y="2479.50"></text></g><g><title>alloc::alloc::alloc (3,283,109 samples, 0.26%)</title><rect x="38.9359%" y="2453" width="0.2615%" height="15" fill="rgb(240,119,24)" fg:x="488771927" fg:w="3283109"/><text x="39.1859%" y="2463.50"></text></g><g><title>malloc (3,283,109 samples, 0.26%)</title><rect x="38.9359%" y="2437" width="0.2615%" height="15" fill="rgb(209,194,42)" fg:x="488771927" fg:w="3283109"/><text x="39.1859%" y="2447.50"></text></g><g><title>[libc.so.6] (3,283,109 samples, 0.26%)</title><rect x="38.9359%" y="2421" width="0.2615%" height="15" fill="rgb(247,200,46)" fg:x="488771927" fg:w="3283109"/><text x="39.1859%" y="2431.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,271,903 samples, 0.26%)</title><rect x="39.1974%" y="2645" width="0.2606%" height="15" fill="rgb(218,76,16)" fg:x="492055036" fg:w="3271903"/><text x="39.4474%" y="2655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,271,903 samples, 0.26%)</title><rect x="39.1974%" y="2629" width="0.2606%" height="15" fill="rgb(225,21,48)" fg:x="492055036" fg:w="3271903"/><text x="39.4474%" y="2639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,271,903 samples, 0.26%)</title><rect x="39.1974%" y="2613" width="0.2606%" height="15" fill="rgb(239,223,50)" fg:x="492055036" fg:w="3271903"/><text x="39.4474%" y="2623.50"></text></g><g><title>alloc::slice::hack::to_vec (3,271,903 samples, 0.26%)</title><rect x="39.1974%" y="2597" width="0.2606%" height="15" fill="rgb(244,45,21)" fg:x="492055036" fg:w="3271903"/><text x="39.4474%" y="2607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,271,903 samples, 0.26%)</title><rect x="39.1974%" y="2581" width="0.2606%" height="15" fill="rgb(232,33,43)" fg:x="492055036" fg:w="3271903"/><text x="39.4474%" y="2591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,271,903 samples, 0.26%)</title><rect x="39.1974%" y="2565" width="0.2606%" height="15" fill="rgb(209,8,3)" fg:x="492055036" fg:w="3271903"/><text x="39.4474%" y="2575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,271,903 samples, 0.26%)</title><rect x="39.1974%" y="2549" width="0.2606%" height="15" fill="rgb(214,25,53)" fg:x="492055036" fg:w="3271903"/><text x="39.4474%" y="2559.50"></text></g><g><title>[libc.so.6] (3,271,903 samples, 0.26%)</title><rect x="39.1974%" y="2533" width="0.2606%" height="15" fill="rgb(254,186,54)" fg:x="492055036" fg:w="3271903"/><text x="39.4474%" y="2543.50"></text></g><g><title>core::clone::Clone::clone (3,245,148 samples, 0.26%)</title><rect x="39.9795%" y="2549" width="0.2585%" height="15" fill="rgb(208,174,49)" fg:x="501872401" fg:w="3245148"/><text x="40.2295%" y="2559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,245,148 samples, 0.26%)</title><rect x="39.9795%" y="2533" width="0.2585%" height="15" fill="rgb(233,191,51)" fg:x="501872401" fg:w="3245148"/><text x="40.2295%" y="2543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,245,148 samples, 0.26%)</title><rect x="39.9795%" y="2517" width="0.2585%" height="15" fill="rgb(222,134,10)" fg:x="501872401" fg:w="3245148"/><text x="40.2295%" y="2527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,245,148 samples, 0.26%)</title><rect x="39.9795%" y="2501" width="0.2585%" height="15" fill="rgb(230,226,20)" fg:x="501872401" fg:w="3245148"/><text x="40.2295%" y="2511.50"></text></g><g><title>alloc::slice::hack::to_vec (3,245,148 samples, 0.26%)</title><rect x="39.9795%" y="2485" width="0.2585%" height="15" fill="rgb(251,111,25)" fg:x="501872401" fg:w="3245148"/><text x="40.2295%" y="2495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,245,148 samples, 0.26%)</title><rect x="39.9795%" y="2469" width="0.2585%" height="15" fill="rgb(224,40,46)" fg:x="501872401" fg:w="3245148"/><text x="40.2295%" y="2479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,245,148 samples, 0.26%)</title><rect x="39.9795%" y="2453" width="0.2585%" height="15" fill="rgb(236,108,47)" fg:x="501872401" fg:w="3245148"/><text x="40.2295%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,245,148 samples, 0.26%)</title><rect x="39.9795%" y="2437" width="0.2585%" height="15" fill="rgb(234,93,0)" fg:x="501872401" fg:w="3245148"/><text x="40.2295%" y="2447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,245,148 samples, 0.26%)</title><rect x="39.9795%" y="2421" width="0.2585%" height="15" fill="rgb(224,213,32)" fg:x="501872401" fg:w="3245148"/><text x="40.2295%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,245,148 samples, 0.26%)</title><rect x="39.9795%" y="2405" width="0.2585%" height="15" fill="rgb(251,11,48)" fg:x="501872401" fg:w="3245148"/><text x="40.2295%" y="2415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,245,148 samples, 0.26%)</title><rect x="39.9795%" y="2389" width="0.2585%" height="15" fill="rgb(236,173,5)" fg:x="501872401" fg:w="3245148"/><text x="40.2295%" y="2399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,245,148 samples, 0.26%)</title><rect x="39.9795%" y="2373" width="0.2585%" height="15" fill="rgb(230,95,12)" fg:x="501872401" fg:w="3245148"/><text x="40.2295%" y="2383.50"></text></g><g><title>alloc::alloc::alloc (3,245,148 samples, 0.26%)</title><rect x="39.9795%" y="2357" width="0.2585%" height="15" fill="rgb(232,209,1)" fg:x="501872401" fg:w="3245148"/><text x="40.2295%" y="2367.50"></text></g><g><title>malloc (3,245,148 samples, 0.26%)</title><rect x="39.9795%" y="2341" width="0.2585%" height="15" fill="rgb(232,6,1)" fg:x="501872401" fg:w="3245148"/><text x="40.2295%" y="2351.50"></text></g><g><title>[libc.so.6] (3,245,148 samples, 0.26%)</title><rect x="39.9795%" y="2325" width="0.2585%" height="15" fill="rgb(210,224,50)" fg:x="501872401" fg:w="3245148"/><text x="40.2295%" y="2335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (3,319,576 samples, 0.26%)</title><rect x="40.2380%" y="2549" width="0.2644%" height="15" fill="rgb(228,127,35)" fg:x="505117549" fg:w="3319576"/><text x="40.4880%" y="2559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,319,576 samples, 0.26%)</title><rect x="40.2380%" y="2533" width="0.2644%" height="15" fill="rgb(245,102,45)" fg:x="505117549" fg:w="3319576"/><text x="40.4880%" y="2543.50"></text></g><g><title>[libc.so.6] (3,319,576 samples, 0.26%)</title><rect x="40.2380%" y="2517" width="0.2644%" height="15" fill="rgb(214,1,49)" fg:x="505117549" fg:w="3319576"/><text x="40.4880%" y="2527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (9,835,473 samples, 0.78%)</title><rect x="39.9795%" y="2581" width="0.7835%" height="15" fill="rgb(226,163,40)" fg:x="501872401" fg:w="9835473"/><text x="40.2295%" y="2591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (9,835,473 samples, 0.78%)</title><rect x="39.9795%" y="2565" width="0.7835%" height="15" fill="rgb(239,212,28)" fg:x="501872401" fg:w="9835473"/><text x="40.2295%" y="2575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3,270,749 samples, 0.26%)</title><rect x="40.5024%" y="2549" width="0.2605%" height="15" fill="rgb(220,20,13)" fg:x="508437125" fg:w="3270749"/><text x="40.7524%" y="2559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3,270,749 samples, 0.26%)</title><rect x="40.5024%" y="2533" width="0.2605%" height="15" fill="rgb(210,164,35)" fg:x="508437125" fg:w="3270749"/><text x="40.7524%" y="2543.50"></text></g><g><title>core::ptr::write (3,270,749 samples, 0.26%)</title><rect x="40.5024%" y="2517" width="0.2605%" height="15" fill="rgb(248,109,41)" fg:x="508437125" fg:w="3270749"/><text x="40.7524%" y="2527.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (336,701,421 samples, 26.82%)</title><rect x="14.2047%" y="2661" width="26.8219%" height="15" fill="rgb(238,23,50)" fg:x="178315468" fg:w="336701421"/><text x="14.4547%" y="2671.50">&lt;css_bitvector_compiler::HtmlNode as core::..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (19,689,950 samples, 1.57%)</title><rect x="39.4581%" y="2645" width="1.5685%" height="15" fill="rgb(211,48,49)" fg:x="495326939" fg:w="19689950"/><text x="39.7081%" y="2655.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (19,689,950 samples, 1.57%)</title><rect x="39.4581%" y="2629" width="1.5685%" height="15" fill="rgb(223,36,21)" fg:x="495326939" fg:w="19689950"/><text x="39.7081%" y="2639.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (13,144,488 samples, 1.05%)</title><rect x="39.9795%" y="2613" width="1.0471%" height="15" fill="rgb(207,123,46)" fg:x="501872401" fg:w="13144488"/><text x="40.2295%" y="2623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,144,488 samples, 1.05%)</title><rect x="39.9795%" y="2597" width="1.0471%" height="15" fill="rgb(240,218,32)" fg:x="501872401" fg:w="13144488"/><text x="40.2295%" y="2607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3,309,015 samples, 0.26%)</title><rect x="40.7630%" y="2581" width="0.2636%" height="15" fill="rgb(252,5,43)" fg:x="511707874" fg:w="3309015"/><text x="41.0130%" y="2591.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,309,015 samples, 0.26%)</title><rect x="40.7630%" y="2565" width="0.2636%" height="15" fill="rgb(252,84,19)" fg:x="511707874" fg:w="3309015"/><text x="41.0130%" y="2575.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3,309,015 samples, 0.26%)</title><rect x="40.7630%" y="2549" width="0.2636%" height="15" fill="rgb(243,152,39)" fg:x="511707874" fg:w="3309015"/><text x="41.0130%" y="2559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,309,015 samples, 0.26%)</title><rect x="40.7630%" y="2533" width="0.2636%" height="15" fill="rgb(234,160,15)" fg:x="511707874" fg:w="3309015"/><text x="41.0130%" y="2543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,309,015 samples, 0.26%)</title><rect x="40.7630%" y="2517" width="0.2636%" height="15" fill="rgb(237,34,20)" fg:x="511707874" fg:w="3309015"/><text x="41.0130%" y="2527.50"></text></g><g><title>alloc::alloc::alloc (3,309,015 samples, 0.26%)</title><rect x="40.7630%" y="2501" width="0.2636%" height="15" fill="rgb(229,97,13)" fg:x="511707874" fg:w="3309015"/><text x="41.0130%" y="2511.50"></text></g><g><title>__rdl_alloc (3,309,015 samples, 0.26%)</title><rect x="40.7630%" y="2485" width="0.2636%" height="15" fill="rgb(234,71,50)" fg:x="511707874" fg:w="3309015"/><text x="41.0130%" y="2495.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,309,015 samples, 0.26%)</title><rect x="40.7630%" y="2469" width="0.2636%" height="15" fill="rgb(253,155,4)" fg:x="511707874" fg:w="3309015"/><text x="41.0130%" y="2479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (340,068,228 samples, 27.09%)</title><rect x="14.2047%" y="2725" width="27.0901%" height="15" fill="rgb(222,185,37)" fg:x="178315468" fg:w="340068228"/><text x="14.4547%" y="2735.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (340,068,228 samples, 27.09%)</title><rect x="14.2047%" y="2709" width="27.0901%" height="15" fill="rgb(251,177,13)" fg:x="178315468" fg:w="340068228"/><text x="14.4547%" y="2719.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (340,068,228 samples, 27.09%)</title><rect x="14.2047%" y="2693" width="27.0901%" height="15" fill="rgb(250,179,40)" fg:x="178315468" fg:w="340068228"/><text x="14.4547%" y="2703.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (340,068,228 samples, 27.09%)</title><rect x="14.2047%" y="2677" width="27.0901%" height="15" fill="rgb(242,44,2)" fg:x="178315468" fg:w="340068228"/><text x="14.4547%" y="2687.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,366,807 samples, 0.27%)</title><rect x="41.0266%" y="2661" width="0.2682%" height="15" fill="rgb(216,177,13)" fg:x="515016889" fg:w="3366807"/><text x="41.2766%" y="2671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,366,807 samples, 0.27%)</title><rect x="41.0266%" y="2645" width="0.2682%" height="15" fill="rgb(216,106,43)" fg:x="515016889" fg:w="3366807"/><text x="41.2766%" y="2655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,366,807 samples, 0.27%)</title><rect x="41.0266%" y="2629" width="0.2682%" height="15" fill="rgb(216,183,2)" fg:x="515016889" fg:w="3366807"/><text x="41.2766%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,366,807 samples, 0.27%)</title><rect x="41.0266%" y="2613" width="0.2682%" height="15" fill="rgb(249,75,3)" fg:x="515016889" fg:w="3366807"/><text x="41.2766%" y="2623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,366,807 samples, 0.27%)</title><rect x="41.0266%" y="2597" width="0.2682%" height="15" fill="rgb(219,67,39)" fg:x="515016889" fg:w="3366807"/><text x="41.2766%" y="2607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,366,807 samples, 0.27%)</title><rect x="41.0266%" y="2581" width="0.2682%" height="15" fill="rgb(253,228,2)" fg:x="515016889" fg:w="3366807"/><text x="41.2766%" y="2591.50"></text></g><g><title>alloc::alloc::alloc (3,366,807 samples, 0.27%)</title><rect x="41.0266%" y="2565" width="0.2682%" height="15" fill="rgb(235,138,27)" fg:x="515016889" fg:w="3366807"/><text x="41.2766%" y="2575.50"></text></g><g><title>malloc (3,366,807 samples, 0.27%)</title><rect x="41.0266%" y="2549" width="0.2682%" height="15" fill="rgb(236,97,51)" fg:x="515016889" fg:w="3366807"/><text x="41.2766%" y="2559.50"></text></g><g><title>[libc.so.6] (3,366,807 samples, 0.27%)</title><rect x="41.0266%" y="2533" width="0.2682%" height="15" fill="rgb(240,80,30)" fg:x="515016889" fg:w="3366807"/><text x="41.2766%" y="2543.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6,630,529 samples, 0.53%)</title><rect x="41.2948%" y="2725" width="0.5282%" height="15" fill="rgb(230,178,19)" fg:x="518383696" fg:w="6630529"/><text x="41.5448%" y="2735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,630,529 samples, 0.53%)</title><rect x="41.2948%" y="2709" width="0.5282%" height="15" fill="rgb(210,190,27)" fg:x="518383696" fg:w="6630529"/><text x="41.5448%" y="2719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,630,529 samples, 0.53%)</title><rect x="41.2948%" y="2693" width="0.5282%" height="15" fill="rgb(222,107,31)" fg:x="518383696" fg:w="6630529"/><text x="41.5448%" y="2703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,630,529 samples, 0.53%)</title><rect x="41.2948%" y="2677" width="0.5282%" height="15" fill="rgb(216,127,34)" fg:x="518383696" fg:w="6630529"/><text x="41.5448%" y="2687.50"></text></g><g><title>alloc::slice::hack::to_vec (6,630,529 samples, 0.53%)</title><rect x="41.2948%" y="2661" width="0.5282%" height="15" fill="rgb(234,116,52)" fg:x="518383696" fg:w="6630529"/><text x="41.5448%" y="2671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,630,529 samples, 0.53%)</title><rect x="41.2948%" y="2645" width="0.5282%" height="15" fill="rgb(222,124,15)" fg:x="518383696" fg:w="6630529"/><text x="41.5448%" y="2655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,630,529 samples, 0.53%)</title><rect x="41.2948%" y="2629" width="0.5282%" height="15" fill="rgb(231,179,28)" fg:x="518383696" fg:w="6630529"/><text x="41.5448%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,630,529 samples, 0.53%)</title><rect x="41.2948%" y="2613" width="0.5282%" height="15" fill="rgb(226,93,45)" fg:x="518383696" fg:w="6630529"/><text x="41.5448%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,630,529 samples, 0.53%)</title><rect x="41.2948%" y="2597" width="0.5282%" height="15" fill="rgb(215,8,51)" fg:x="518383696" fg:w="6630529"/><text x="41.5448%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,630,529 samples, 0.53%)</title><rect x="41.2948%" y="2581" width="0.5282%" height="15" fill="rgb(223,106,5)" fg:x="518383696" fg:w="6630529"/><text x="41.5448%" y="2591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,630,529 samples, 0.53%)</title><rect x="41.2948%" y="2565" width="0.5282%" height="15" fill="rgb(250,191,5)" fg:x="518383696" fg:w="6630529"/><text x="41.5448%" y="2575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,630,529 samples, 0.53%)</title><rect x="41.2948%" y="2549" width="0.5282%" height="15" fill="rgb(242,132,44)" fg:x="518383696" fg:w="6630529"/><text x="41.5448%" y="2559.50"></text></g><g><title>alloc::alloc::alloc (6,630,529 samples, 0.53%)</title><rect x="41.2948%" y="2533" width="0.5282%" height="15" fill="rgb(251,152,29)" fg:x="518383696" fg:w="6630529"/><text x="41.5448%" y="2543.50"></text></g><g><title>malloc (3,272,180 samples, 0.26%)</title><rect x="41.5623%" y="2517" width="0.2607%" height="15" fill="rgb(218,179,5)" fg:x="521742045" fg:w="3272180"/><text x="41.8123%" y="2527.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (6,546,600 samples, 0.52%)</title><rect x="41.8230%" y="2725" width="0.5215%" height="15" fill="rgb(227,67,19)" fg:x="525014225" fg:w="6546600"/><text x="42.0730%" y="2735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,546,600 samples, 0.52%)</title><rect x="41.8230%" y="2709" width="0.5215%" height="15" fill="rgb(233,119,31)" fg:x="525014225" fg:w="6546600"/><text x="42.0730%" y="2719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,546,600 samples, 0.52%)</title><rect x="41.8230%" y="2693" width="0.5215%" height="15" fill="rgb(241,120,22)" fg:x="525014225" fg:w="6546600"/><text x="42.0730%" y="2703.50"></text></g><g><title>alloc::slice::hack::to_vec (6,546,600 samples, 0.52%)</title><rect x="41.8230%" y="2677" width="0.5215%" height="15" fill="rgb(224,102,30)" fg:x="525014225" fg:w="6546600"/><text x="42.0730%" y="2687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,546,600 samples, 0.52%)</title><rect x="41.8230%" y="2661" width="0.5215%" height="15" fill="rgb(210,164,37)" fg:x="525014225" fg:w="6546600"/><text x="42.0730%" y="2671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,546,600 samples, 0.52%)</title><rect x="41.8230%" y="2645" width="0.5215%" height="15" fill="rgb(226,191,16)" fg:x="525014225" fg:w="6546600"/><text x="42.0730%" y="2655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,546,600 samples, 0.52%)</title><rect x="41.8230%" y="2629" width="0.5215%" height="15" fill="rgb(214,40,45)" fg:x="525014225" fg:w="6546600"/><text x="42.0730%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,546,600 samples, 0.52%)</title><rect x="41.8230%" y="2613" width="0.5215%" height="15" fill="rgb(244,29,26)" fg:x="525014225" fg:w="6546600"/><text x="42.0730%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,546,600 samples, 0.52%)</title><rect x="41.8230%" y="2597" width="0.5215%" height="15" fill="rgb(216,16,5)" fg:x="525014225" fg:w="6546600"/><text x="42.0730%" y="2607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,546,600 samples, 0.52%)</title><rect x="41.8230%" y="2581" width="0.5215%" height="15" fill="rgb(249,76,35)" fg:x="525014225" fg:w="6546600"/><text x="42.0730%" y="2591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,546,600 samples, 0.52%)</title><rect x="41.8230%" y="2565" width="0.5215%" height="15" fill="rgb(207,11,44)" fg:x="525014225" fg:w="6546600"/><text x="42.0730%" y="2575.50"></text></g><g><title>alloc::alloc::alloc (6,546,600 samples, 0.52%)</title><rect x="41.8230%" y="2549" width="0.5215%" height="15" fill="rgb(228,190,49)" fg:x="525014225" fg:w="6546600"/><text x="42.0730%" y="2559.50"></text></g><g><title>malloc (6,546,600 samples, 0.52%)</title><rect x="41.8230%" y="2533" width="0.5215%" height="15" fill="rgb(214,173,12)" fg:x="525014225" fg:w="6546600"/><text x="42.0730%" y="2543.50"></text></g><g><title>[libc.so.6] (6,546,600 samples, 0.52%)</title><rect x="41.8230%" y="2517" width="0.5215%" height="15" fill="rgb(218,26,35)" fg:x="525014225" fg:w="6546600"/><text x="42.0730%" y="2527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (13,093,204 samples, 1.04%)</title><rect x="42.6106%" y="2661" width="1.0430%" height="15" fill="rgb(220,200,19)" fg:x="534901171" fg:w="13093204"/><text x="42.8606%" y="2671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (13,093,204 samples, 1.04%)</title><rect x="42.6106%" y="2645" width="1.0430%" height="15" fill="rgb(239,95,49)" fg:x="534901171" fg:w="13093204"/><text x="42.8606%" y="2655.50"></text></g><g><title>core::clone::Clone::clone (9,801,133 samples, 0.78%)</title><rect x="42.8728%" y="2629" width="0.7808%" height="15" fill="rgb(235,85,53)" fg:x="538193242" fg:w="9801133"/><text x="43.1228%" y="2639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9,801,133 samples, 0.78%)</title><rect x="42.8728%" y="2613" width="0.7808%" height="15" fill="rgb(233,133,31)" fg:x="538193242" fg:w="9801133"/><text x="43.1228%" y="2623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,801,133 samples, 0.78%)</title><rect x="42.8728%" y="2597" width="0.7808%" height="15" fill="rgb(218,25,20)" fg:x="538193242" fg:w="9801133"/><text x="43.1228%" y="2607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,801,133 samples, 0.78%)</title><rect x="42.8728%" y="2581" width="0.7808%" height="15" fill="rgb(252,210,38)" fg:x="538193242" fg:w="9801133"/><text x="43.1228%" y="2591.50"></text></g><g><title>alloc::slice::hack::to_vec (9,801,133 samples, 0.78%)</title><rect x="42.8728%" y="2565" width="0.7808%" height="15" fill="rgb(242,134,21)" fg:x="538193242" fg:w="9801133"/><text x="43.1228%" y="2575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,801,133 samples, 0.78%)</title><rect x="42.8728%" y="2549" width="0.7808%" height="15" fill="rgb(213,28,48)" fg:x="538193242" fg:w="9801133"/><text x="43.1228%" y="2559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,801,133 samples, 0.78%)</title><rect x="42.8728%" y="2533" width="0.7808%" height="15" fill="rgb(250,196,2)" fg:x="538193242" fg:w="9801133"/><text x="43.1228%" y="2543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,801,133 samples, 0.78%)</title><rect x="42.8728%" y="2517" width="0.7808%" height="15" fill="rgb(227,5,17)" fg:x="538193242" fg:w="9801133"/><text x="43.1228%" y="2527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,801,133 samples, 0.78%)</title><rect x="42.8728%" y="2501" width="0.7808%" height="15" fill="rgb(221,226,24)" fg:x="538193242" fg:w="9801133"/><text x="43.1228%" y="2511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,801,133 samples, 0.78%)</title><rect x="42.8728%" y="2485" width="0.7808%" height="15" fill="rgb(211,5,48)" fg:x="538193242" fg:w="9801133"/><text x="43.1228%" y="2495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,508,876 samples, 0.52%)</title><rect x="43.1351%" y="2469" width="0.5185%" height="15" fill="rgb(219,150,6)" fg:x="541485499" fg:w="6508876"/><text x="43.3851%" y="2479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,508,876 samples, 0.52%)</title><rect x="43.1351%" y="2453" width="0.5185%" height="15" fill="rgb(251,46,16)" fg:x="541485499" fg:w="6508876"/><text x="43.3851%" y="2463.50"></text></g><g><title>alloc::alloc::alloc (6,508,876 samples, 0.52%)</title><rect x="43.1351%" y="2437" width="0.5185%" height="15" fill="rgb(220,204,40)" fg:x="541485499" fg:w="6508876"/><text x="43.3851%" y="2447.50"></text></g><g><title>malloc (6,508,876 samples, 0.52%)</title><rect x="43.1351%" y="2421" width="0.5185%" height="15" fill="rgb(211,85,2)" fg:x="541485499" fg:w="6508876"/><text x="43.3851%" y="2431.50"></text></g><g><title>[libc.so.6] (6,508,876 samples, 0.52%)</title><rect x="43.1351%" y="2405" width="0.5185%" height="15" fill="rgb(229,17,7)" fg:x="541485499" fg:w="6508876"/><text x="43.3851%" y="2415.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (382,962,427 samples, 30.51%)</title><rect x="13.4114%" y="2741" width="30.5070%" height="15" fill="rgb(239,72,28)" fg:x="168357179" fg:w="382962427"/><text x="13.6614%" y="2751.50">&lt;css_bitvector_compiler::HtmlNode as core::clone:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (19,758,781 samples, 1.57%)</title><rect x="42.3445%" y="2725" width="1.5740%" height="15" fill="rgb(230,47,54)" fg:x="531560825" fg:w="19758781"/><text x="42.5945%" y="2735.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (19,758,781 samples, 1.57%)</title><rect x="42.3445%" y="2709" width="1.5740%" height="15" fill="rgb(214,50,8)" fg:x="531560825" fg:w="19758781"/><text x="42.5945%" y="2719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (16,418,435 samples, 1.31%)</title><rect x="42.6106%" y="2693" width="1.3079%" height="15" fill="rgb(216,198,43)" fg:x="534901171" fg:w="16418435"/><text x="42.8606%" y="2703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,418,435 samples, 1.31%)</title><rect x="42.6106%" y="2677" width="1.3079%" height="15" fill="rgb(234,20,35)" fg:x="534901171" fg:w="16418435"/><text x="42.8606%" y="2687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3,325,231 samples, 0.26%)</title><rect x="43.6536%" y="2661" width="0.2649%" height="15" fill="rgb(254,45,19)" fg:x="547994375" fg:w="3325231"/><text x="43.9036%" y="2671.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,325,231 samples, 0.26%)</title><rect x="43.6536%" y="2645" width="0.2649%" height="15" fill="rgb(219,14,44)" fg:x="547994375" fg:w="3325231"/><text x="43.9036%" y="2655.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3,325,231 samples, 0.26%)</title><rect x="43.6536%" y="2629" width="0.2649%" height="15" fill="rgb(217,220,26)" fg:x="547994375" fg:w="3325231"/><text x="43.9036%" y="2639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,325,231 samples, 0.26%)</title><rect x="43.6536%" y="2613" width="0.2649%" height="15" fill="rgb(213,158,28)" fg:x="547994375" fg:w="3325231"/><text x="43.9036%" y="2623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,325,231 samples, 0.26%)</title><rect x="43.6536%" y="2597" width="0.2649%" height="15" fill="rgb(252,51,52)" fg:x="547994375" fg:w="3325231"/><text x="43.9036%" y="2607.50"></text></g><g><title>alloc::alloc::alloc (3,325,231 samples, 0.26%)</title><rect x="43.6536%" y="2581" width="0.2649%" height="15" fill="rgb(246,89,16)" fg:x="547994375" fg:w="3325231"/><text x="43.9036%" y="2591.50"></text></g><g><title>malloc (3,325,231 samples, 0.26%)</title><rect x="43.6536%" y="2565" width="0.2649%" height="15" fill="rgb(216,158,49)" fg:x="547994375" fg:w="3325231"/><text x="43.9036%" y="2575.50"></text></g><g><title>[libc.so.6] (3,325,231 samples, 0.26%)</title><rect x="43.6536%" y="2549" width="0.2649%" height="15" fill="rgb(236,107,19)" fg:x="547994375" fg:w="3325231"/><text x="43.9036%" y="2559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,918,208 samples, 0.79%)</title><rect x="43.9185%" y="2741" width="0.7901%" height="15" fill="rgb(228,185,30)" fg:x="551319606" fg:w="9918208"/><text x="44.1685%" y="2751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,918,208 samples, 0.79%)</title><rect x="43.9185%" y="2725" width="0.7901%" height="15" fill="rgb(246,134,8)" fg:x="551319606" fg:w="9918208"/><text x="44.1685%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,918,208 samples, 0.79%)</title><rect x="43.9185%" y="2709" width="0.7901%" height="15" fill="rgb(214,143,50)" fg:x="551319606" fg:w="9918208"/><text x="44.1685%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,918,208 samples, 0.79%)</title><rect x="43.9185%" y="2693" width="0.7901%" height="15" fill="rgb(228,75,8)" fg:x="551319606" fg:w="9918208"/><text x="44.1685%" y="2703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,682,905 samples, 0.53%)</title><rect x="44.1762%" y="2677" width="0.5324%" height="15" fill="rgb(207,175,4)" fg:x="554554909" fg:w="6682905"/><text x="44.4262%" y="2687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,682,905 samples, 0.53%)</title><rect x="44.1762%" y="2661" width="0.5324%" height="15" fill="rgb(205,108,24)" fg:x="554554909" fg:w="6682905"/><text x="44.4262%" y="2671.50"></text></g><g><title>alloc::alloc::alloc (6,682,905 samples, 0.53%)</title><rect x="44.1762%" y="2645" width="0.5324%" height="15" fill="rgb(244,120,49)" fg:x="554554909" fg:w="6682905"/><text x="44.4262%" y="2655.50"></text></g><g><title>malloc (6,682,905 samples, 0.53%)</title><rect x="44.1762%" y="2629" width="0.5324%" height="15" fill="rgb(223,47,38)" fg:x="554554909" fg:w="6682905"/><text x="44.4262%" y="2639.50"></text></g><g><title>[libc.so.6] (3,353,081 samples, 0.27%)</title><rect x="44.4415%" y="2613" width="0.2671%" height="15" fill="rgb(229,179,11)" fg:x="557884733" fg:w="3353081"/><text x="44.6915%" y="2623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (399,416,784 samples, 31.82%)</title><rect x="13.4114%" y="2805" width="31.8178%" height="15" fill="rgb(231,122,1)" fg:x="168357179" fg:w="399416784"/><text x="13.6614%" y="2815.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (399,416,784 samples, 31.82%)</title><rect x="13.4114%" y="2789" width="31.8178%" height="15" fill="rgb(245,119,9)" fg:x="168357179" fg:w="399416784"/><text x="13.6614%" y="2799.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (399,416,784 samples, 31.82%)</title><rect x="13.4114%" y="2773" width="31.8178%" height="15" fill="rgb(241,163,25)" fg:x="168357179" fg:w="399416784"/><text x="13.6614%" y="2783.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (399,416,784 samples, 31.82%)</title><rect x="13.4114%" y="2757" width="31.8178%" height="15" fill="rgb(217,214,3)" fg:x="168357179" fg:w="399416784"/><text x="13.6614%" y="2767.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (6,536,149 samples, 0.52%)</title><rect x="44.7086%" y="2741" width="0.5207%" height="15" fill="rgb(240,86,28)" fg:x="561237814" fg:w="6536149"/><text x="44.9586%" y="2751.50"></text></g><g><title>__rust_alloc (3,273,075 samples, 0.26%)</title><rect x="45.2292%" y="2597" width="0.2607%" height="15" fill="rgb(215,47,9)" fg:x="567773963" fg:w="3273075"/><text x="45.4792%" y="2607.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6,551,920 samples, 0.52%)</title><rect x="45.2292%" y="2805" width="0.5219%" height="15" fill="rgb(252,25,45)" fg:x="567773963" fg:w="6551920"/><text x="45.4792%" y="2815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,551,920 samples, 0.52%)</title><rect x="45.2292%" y="2789" width="0.5219%" height="15" fill="rgb(251,164,9)" fg:x="567773963" fg:w="6551920"/><text x="45.4792%" y="2799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,551,920 samples, 0.52%)</title><rect x="45.2292%" y="2773" width="0.5219%" height="15" fill="rgb(233,194,0)" fg:x="567773963" fg:w="6551920"/><text x="45.4792%" y="2783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,551,920 samples, 0.52%)</title><rect x="45.2292%" y="2757" width="0.5219%" height="15" fill="rgb(249,111,24)" fg:x="567773963" fg:w="6551920"/><text x="45.4792%" y="2767.50"></text></g><g><title>alloc::slice::hack::to_vec (6,551,920 samples, 0.52%)</title><rect x="45.2292%" y="2741" width="0.5219%" height="15" fill="rgb(250,223,3)" fg:x="567773963" fg:w="6551920"/><text x="45.4792%" y="2751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,551,920 samples, 0.52%)</title><rect x="45.2292%" y="2725" width="0.5219%" height="15" fill="rgb(236,178,37)" fg:x="567773963" fg:w="6551920"/><text x="45.4792%" y="2735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,551,920 samples, 0.52%)</title><rect x="45.2292%" y="2709" width="0.5219%" height="15" fill="rgb(241,158,50)" fg:x="567773963" fg:w="6551920"/><text x="45.4792%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,551,920 samples, 0.52%)</title><rect x="45.2292%" y="2693" width="0.5219%" height="15" fill="rgb(213,121,41)" fg:x="567773963" fg:w="6551920"/><text x="45.4792%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,551,920 samples, 0.52%)</title><rect x="45.2292%" y="2677" width="0.5219%" height="15" fill="rgb(240,92,3)" fg:x="567773963" fg:w="6551920"/><text x="45.4792%" y="2687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,551,920 samples, 0.52%)</title><rect x="45.2292%" y="2661" width="0.5219%" height="15" fill="rgb(205,123,3)" fg:x="567773963" fg:w="6551920"/><text x="45.4792%" y="2671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,551,920 samples, 0.52%)</title><rect x="45.2292%" y="2645" width="0.5219%" height="15" fill="rgb(205,97,47)" fg:x="567773963" fg:w="6551920"/><text x="45.4792%" y="2655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,551,920 samples, 0.52%)</title><rect x="45.2292%" y="2629" width="0.5219%" height="15" fill="rgb(247,152,14)" fg:x="567773963" fg:w="6551920"/><text x="45.4792%" y="2639.50"></text></g><g><title>alloc::alloc::alloc (6,551,920 samples, 0.52%)</title><rect x="45.2292%" y="2613" width="0.5219%" height="15" fill="rgb(248,195,53)" fg:x="567773963" fg:w="6551920"/><text x="45.4792%" y="2623.50"></text></g><g><title>malloc (3,278,845 samples, 0.26%)</title><rect x="45.4900%" y="2597" width="0.2612%" height="15" fill="rgb(226,201,16)" fg:x="571047038" fg:w="3278845"/><text x="45.7400%" y="2607.50"></text></g><g><title>[libc.so.6] (3,278,845 samples, 0.26%)</title><rect x="45.4900%" y="2581" width="0.2612%" height="15" fill="rgb(205,98,0)" fg:x="571047038" fg:w="3278845"/><text x="45.7400%" y="2591.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,274,086 samples, 0.26%)</title><rect x="45.7512%" y="2805" width="0.2608%" height="15" fill="rgb(214,191,48)" fg:x="574325883" fg:w="3274086"/><text x="46.0012%" y="2815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,274,086 samples, 0.26%)</title><rect x="45.7512%" y="2789" width="0.2608%" height="15" fill="rgb(237,112,39)" fg:x="574325883" fg:w="3274086"/><text x="46.0012%" y="2799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,274,086 samples, 0.26%)</title><rect x="45.7512%" y="2773" width="0.2608%" height="15" fill="rgb(247,203,27)" fg:x="574325883" fg:w="3274086"/><text x="46.0012%" y="2783.50"></text></g><g><title>alloc::slice::hack::to_vec (3,274,086 samples, 0.26%)</title><rect x="45.7512%" y="2757" width="0.2608%" height="15" fill="rgb(235,124,28)" fg:x="574325883" fg:w="3274086"/><text x="46.0012%" y="2767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,274,086 samples, 0.26%)</title><rect x="45.7512%" y="2741" width="0.2608%" height="15" fill="rgb(208,207,46)" fg:x="574325883" fg:w="3274086"/><text x="46.0012%" y="2751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,274,086 samples, 0.26%)</title><rect x="45.7512%" y="2725" width="0.2608%" height="15" fill="rgb(234,176,4)" fg:x="574325883" fg:w="3274086"/><text x="46.0012%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,274,086 samples, 0.26%)</title><rect x="45.7512%" y="2709" width="0.2608%" height="15" fill="rgb(230,133,28)" fg:x="574325883" fg:w="3274086"/><text x="46.0012%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,274,086 samples, 0.26%)</title><rect x="45.7512%" y="2693" width="0.2608%" height="15" fill="rgb(211,137,40)" fg:x="574325883" fg:w="3274086"/><text x="46.0012%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,274,086 samples, 0.26%)</title><rect x="45.7512%" y="2677" width="0.2608%" height="15" fill="rgb(254,35,13)" fg:x="574325883" fg:w="3274086"/><text x="46.0012%" y="2687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,274,086 samples, 0.26%)</title><rect x="45.7512%" y="2661" width="0.2608%" height="15" fill="rgb(225,49,51)" fg:x="574325883" fg:w="3274086"/><text x="46.0012%" y="2671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,274,086 samples, 0.26%)</title><rect x="45.7512%" y="2645" width="0.2608%" height="15" fill="rgb(251,10,15)" fg:x="574325883" fg:w="3274086"/><text x="46.0012%" y="2655.50"></text></g><g><title>alloc::alloc::alloc (3,274,086 samples, 0.26%)</title><rect x="45.7512%" y="2629" width="0.2608%" height="15" fill="rgb(228,207,15)" fg:x="574325883" fg:w="3274086"/><text x="46.0012%" y="2639.50"></text></g><g><title>malloc (3,274,086 samples, 0.26%)</title><rect x="45.7512%" y="2613" width="0.2608%" height="15" fill="rgb(241,99,19)" fg:x="574325883" fg:w="3274086"/><text x="46.0012%" y="2623.50"></text></g><g><title>[libc.so.6] (3,274,086 samples, 0.26%)</title><rect x="45.7512%" y="2597" width="0.2608%" height="15" fill="rgb(207,104,49)" fg:x="574325883" fg:w="3274086"/><text x="46.0012%" y="2607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2741" width="0.2525%" height="15" fill="rgb(234,99,18)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2725" width="0.2525%" height="15" fill="rgb(213,191,49)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2735.50"></text></g><g><title>core::clone::Clone::clone (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2709" width="0.2525%" height="15" fill="rgb(210,226,19)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2693" width="0.2525%" height="15" fill="rgb(229,97,18)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2677" width="0.2525%" height="15" fill="rgb(211,167,15)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2661" width="0.2525%" height="15" fill="rgb(210,169,34)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2671.50"></text></g><g><title>alloc::slice::hack::to_vec (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2645" width="0.2525%" height="15" fill="rgb(241,121,31)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2629" width="0.2525%" height="15" fill="rgb(232,40,11)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2613" width="0.2525%" height="15" fill="rgb(205,86,26)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2597" width="0.2525%" height="15" fill="rgb(231,126,28)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2581" width="0.2525%" height="15" fill="rgb(219,221,18)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2565" width="0.2525%" height="15" fill="rgb(211,40,0)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2549" width="0.2525%" height="15" fill="rgb(239,85,43)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2533" width="0.2525%" height="15" fill="rgb(231,55,21)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2543.50"></text></g><g><title>alloc::alloc::alloc (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2517" width="0.2525%" height="15" fill="rgb(225,184,43)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2527.50"></text></g><g><title>malloc (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2501" width="0.2525%" height="15" fill="rgb(251,158,41)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2511.50"></text></g><g><title>[libc.so.6] (3,169,617 samples, 0.25%)</title><rect x="46.2753%" y="2485" width="0.2525%" height="15" fill="rgb(234,159,37)" fg:x="580904881" fg:w="3169617"/><text x="46.5253%" y="2495.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (422,264,007 samples, 33.64%)</title><rect x="13.1506%" y="2821" width="33.6378%" height="15" fill="rgb(216,204,22)" fg:x="165082314" fg:w="422264007"/><text x="13.4006%" y="2831.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (9,746,352 samples, 0.78%)</title><rect x="46.0120%" y="2805" width="0.7764%" height="15" fill="rgb(214,17,3)" fg:x="577599969" fg:w="9746352"/><text x="46.2620%" y="2815.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (9,746,352 samples, 0.78%)</title><rect x="46.0120%" y="2789" width="0.7764%" height="15" fill="rgb(212,111,17)" fg:x="577599969" fg:w="9746352"/><text x="46.2620%" y="2799.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (9,746,352 samples, 0.78%)</title><rect x="46.0120%" y="2773" width="0.7764%" height="15" fill="rgb(221,157,24)" fg:x="577599969" fg:w="9746352"/><text x="46.2620%" y="2783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,746,352 samples, 0.78%)</title><rect x="46.0120%" y="2757" width="0.7764%" height="15" fill="rgb(252,16,13)" fg:x="577599969" fg:w="9746352"/><text x="46.2620%" y="2767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3,271,823 samples, 0.26%)</title><rect x="46.5278%" y="2741" width="0.2606%" height="15" fill="rgb(221,62,2)" fg:x="584074498" fg:w="3271823"/><text x="46.7778%" y="2751.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,271,823 samples, 0.26%)</title><rect x="46.5278%" y="2725" width="0.2606%" height="15" fill="rgb(247,87,22)" fg:x="584074498" fg:w="3271823"/><text x="46.7778%" y="2735.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3,271,823 samples, 0.26%)</title><rect x="46.5278%" y="2709" width="0.2606%" height="15" fill="rgb(215,73,9)" fg:x="584074498" fg:w="3271823"/><text x="46.7778%" y="2719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,271,823 samples, 0.26%)</title><rect x="46.5278%" y="2693" width="0.2606%" height="15" fill="rgb(207,175,33)" fg:x="584074498" fg:w="3271823"/><text x="46.7778%" y="2703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,271,823 samples, 0.26%)</title><rect x="46.5278%" y="2677" width="0.2606%" height="15" fill="rgb(243,129,54)" fg:x="584074498" fg:w="3271823"/><text x="46.7778%" y="2687.50"></text></g><g><title>alloc::alloc::alloc (3,271,823 samples, 0.26%)</title><rect x="46.5278%" y="2661" width="0.2606%" height="15" fill="rgb(227,119,45)" fg:x="584074498" fg:w="3271823"/><text x="46.7778%" y="2671.50"></text></g><g><title>malloc (3,271,823 samples, 0.26%)</title><rect x="46.5278%" y="2645" width="0.2606%" height="15" fill="rgb(205,109,36)" fg:x="584074498" fg:w="3271823"/><text x="46.7778%" y="2655.50"></text></g><g><title>[libc.so.6] (3,271,823 samples, 0.26%)</title><rect x="46.5278%" y="2629" width="0.2606%" height="15" fill="rgb(205,6,39)" fg:x="584074498" fg:w="3271823"/><text x="46.7778%" y="2639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (428,953,418 samples, 34.17%)</title><rect x="13.1506%" y="2885" width="34.1707%" height="15" fill="rgb(221,32,16)" fg:x="165082314" fg:w="428953418"/><text x="13.4006%" y="2895.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (428,953,418 samples, 34.17%)</title><rect x="13.1506%" y="2869" width="34.1707%" height="15" fill="rgb(228,144,50)" fg:x="165082314" fg:w="428953418"/><text x="13.4006%" y="2879.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (428,953,418 samples, 34.17%)</title><rect x="13.1506%" y="2853" width="34.1707%" height="15" fill="rgb(229,201,53)" fg:x="165082314" fg:w="428953418"/><text x="13.4006%" y="2863.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (428,953,418 samples, 34.17%)</title><rect x="13.1506%" y="2837" width="34.1707%" height="15" fill="rgb(249,153,27)" fg:x="165082314" fg:w="428953418"/><text x="13.4006%" y="2847.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,689,411 samples, 0.53%)</title><rect x="46.7884%" y="2821" width="0.5329%" height="15" fill="rgb(227,106,25)" fg:x="587346321" fg:w="6689411"/><text x="47.0384%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,689,411 samples, 0.53%)</title><rect x="46.7884%" y="2805" width="0.5329%" height="15" fill="rgb(230,65,29)" fg:x="587346321" fg:w="6689411"/><text x="47.0384%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,689,411 samples, 0.53%)</title><rect x="46.7884%" y="2789" width="0.5329%" height="15" fill="rgb(221,57,46)" fg:x="587346321" fg:w="6689411"/><text x="47.0384%" y="2799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,689,411 samples, 0.53%)</title><rect x="46.7884%" y="2773" width="0.5329%" height="15" fill="rgb(229,161,17)" fg:x="587346321" fg:w="6689411"/><text x="47.0384%" y="2783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,689,411 samples, 0.53%)</title><rect x="46.7884%" y="2757" width="0.5329%" height="15" fill="rgb(222,213,11)" fg:x="587346321" fg:w="6689411"/><text x="47.0384%" y="2767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,689,411 samples, 0.53%)</title><rect x="46.7884%" y="2741" width="0.5329%" height="15" fill="rgb(235,35,13)" fg:x="587346321" fg:w="6689411"/><text x="47.0384%" y="2751.50"></text></g><g><title>alloc::alloc::alloc (6,689,411 samples, 0.53%)</title><rect x="46.7884%" y="2725" width="0.5329%" height="15" fill="rgb(233,158,34)" fg:x="587346321" fg:w="6689411"/><text x="47.0384%" y="2735.50"></text></g><g><title>malloc (6,689,411 samples, 0.53%)</title><rect x="46.7884%" y="2709" width="0.5329%" height="15" fill="rgb(215,151,48)" fg:x="587346321" fg:w="6689411"/><text x="47.0384%" y="2719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6,595,257 samples, 0.53%)</title><rect x="47.3213%" y="2885" width="0.5254%" height="15" fill="rgb(229,84,14)" fg:x="594035732" fg:w="6595257"/><text x="47.5713%" y="2895.50"></text></g><g><title>core::clone::Clone::clone (10,010,924 samples, 0.80%)</title><rect x="47.8467%" y="2789" width="0.7975%" height="15" fill="rgb(229,68,14)" fg:x="600630989" fg:w="10010924"/><text x="48.0967%" y="2799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10,010,924 samples, 0.80%)</title><rect x="47.8467%" y="2773" width="0.7975%" height="15" fill="rgb(243,106,26)" fg:x="600630989" fg:w="10010924"/><text x="48.0967%" y="2783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,010,924 samples, 0.80%)</title><rect x="47.8467%" y="2757" width="0.7975%" height="15" fill="rgb(206,45,38)" fg:x="600630989" fg:w="10010924"/><text x="48.0967%" y="2767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,010,924 samples, 0.80%)</title><rect x="47.8467%" y="2741" width="0.7975%" height="15" fill="rgb(226,6,15)" fg:x="600630989" fg:w="10010924"/><text x="48.0967%" y="2751.50"></text></g><g><title>alloc::slice::hack::to_vec (10,010,924 samples, 0.80%)</title><rect x="47.8467%" y="2725" width="0.7975%" height="15" fill="rgb(232,22,54)" fg:x="600630989" fg:w="10010924"/><text x="48.0967%" y="2735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,010,924 samples, 0.80%)</title><rect x="47.8467%" y="2709" width="0.7975%" height="15" fill="rgb(229,222,32)" fg:x="600630989" fg:w="10010924"/><text x="48.0967%" y="2719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10,010,924 samples, 0.80%)</title><rect x="47.8467%" y="2693" width="0.7975%" height="15" fill="rgb(228,62,29)" fg:x="600630989" fg:w="10010924"/><text x="48.0967%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10,010,924 samples, 0.80%)</title><rect x="47.8467%" y="2677" width="0.7975%" height="15" fill="rgb(251,103,34)" fg:x="600630989" fg:w="10010924"/><text x="48.0967%" y="2687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (10,010,924 samples, 0.80%)</title><rect x="47.8467%" y="2661" width="0.7975%" height="15" fill="rgb(233,12,30)" fg:x="600630989" fg:w="10010924"/><text x="48.0967%" y="2671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (10,010,924 samples, 0.80%)</title><rect x="47.8467%" y="2645" width="0.7975%" height="15" fill="rgb(238,52,0)" fg:x="600630989" fg:w="10010924"/><text x="48.0967%" y="2655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,010,924 samples, 0.80%)</title><rect x="47.8467%" y="2629" width="0.7975%" height="15" fill="rgb(223,98,5)" fg:x="600630989" fg:w="10010924"/><text x="48.0967%" y="2639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10,010,924 samples, 0.80%)</title><rect x="47.8467%" y="2613" width="0.7975%" height="15" fill="rgb(228,75,37)" fg:x="600630989" fg:w="10010924"/><text x="48.0967%" y="2623.50"></text></g><g><title>alloc::alloc::alloc (10,010,924 samples, 0.80%)</title><rect x="47.8467%" y="2597" width="0.7975%" height="15" fill="rgb(205,115,49)" fg:x="600630989" fg:w="10010924"/><text x="48.0967%" y="2607.50"></text></g><g><title>malloc (10,010,924 samples, 0.80%)</title><rect x="47.8467%" y="2581" width="0.7975%" height="15" fill="rgb(250,154,43)" fg:x="600630989" fg:w="10010924"/><text x="48.0967%" y="2591.50"></text></g><g><title>[libc.so.6] (10,010,924 samples, 0.80%)</title><rect x="47.8467%" y="2565" width="0.7975%" height="15" fill="rgb(226,43,29)" fg:x="600630989" fg:w="10010924"/><text x="48.0967%" y="2575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (13,380,998 samples, 1.07%)</title><rect x="47.8467%" y="2821" width="1.0659%" height="15" fill="rgb(249,228,39)" fg:x="600630989" fg:w="13380998"/><text x="48.0967%" y="2831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (13,380,998 samples, 1.07%)</title><rect x="47.8467%" y="2805" width="1.0659%" height="15" fill="rgb(216,79,43)" fg:x="600630989" fg:w="13380998"/><text x="48.0967%" y="2815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3,370,074 samples, 0.27%)</title><rect x="48.6441%" y="2789" width="0.2685%" height="15" fill="rgb(228,95,12)" fg:x="610641913" fg:w="3370074"/><text x="48.8941%" y="2799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3,370,074 samples, 0.27%)</title><rect x="48.6441%" y="2773" width="0.2685%" height="15" fill="rgb(249,221,15)" fg:x="610641913" fg:w="3370074"/><text x="48.8941%" y="2783.50"></text></g><g><title>core::ptr::write (3,370,074 samples, 0.27%)</title><rect x="48.6441%" y="2757" width="0.2685%" height="15" fill="rgb(233,34,13)" fg:x="610641913" fg:w="3370074"/><text x="48.8941%" y="2767.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (458,871,492 samples, 36.55%)</title><rect x="12.6252%" y="2901" width="36.5540%" height="15" fill="rgb(214,103,39)" fg:x="158486810" fg:w="458871492"/><text x="12.8752%" y="2911.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (16,727,313 samples, 1.33%)</title><rect x="47.8467%" y="2885" width="1.3325%" height="15" fill="rgb(251,126,39)" fg:x="600630989" fg:w="16727313"/><text x="48.0967%" y="2895.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (16,727,313 samples, 1.33%)</title><rect x="47.8467%" y="2869" width="1.3325%" height="15" fill="rgb(214,216,36)" fg:x="600630989" fg:w="16727313"/><text x="48.0967%" y="2879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (16,727,313 samples, 1.33%)</title><rect x="47.8467%" y="2853" width="1.3325%" height="15" fill="rgb(220,221,8)" fg:x="600630989" fg:w="16727313"/><text x="48.0967%" y="2863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,727,313 samples, 1.33%)</title><rect x="47.8467%" y="2837" width="1.3325%" height="15" fill="rgb(240,216,3)" fg:x="600630989" fg:w="16727313"/><text x="48.0967%" y="2847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3,346,315 samples, 0.27%)</title><rect x="48.9126%" y="2821" width="0.2666%" height="15" fill="rgb(232,218,17)" fg:x="614011987" fg:w="3346315"/><text x="49.1626%" y="2831.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,346,315 samples, 0.27%)</title><rect x="48.9126%" y="2805" width="0.2666%" height="15" fill="rgb(229,163,45)" fg:x="614011987" fg:w="3346315"/><text x="49.1626%" y="2815.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3,346,315 samples, 0.27%)</title><rect x="48.9126%" y="2789" width="0.2666%" height="15" fill="rgb(231,110,42)" fg:x="614011987" fg:w="3346315"/><text x="49.1626%" y="2799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,346,315 samples, 0.27%)</title><rect x="48.9126%" y="2773" width="0.2666%" height="15" fill="rgb(208,170,48)" fg:x="614011987" fg:w="3346315"/><text x="49.1626%" y="2783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,346,315 samples, 0.27%)</title><rect x="48.9126%" y="2757" width="0.2666%" height="15" fill="rgb(239,116,25)" fg:x="614011987" fg:w="3346315"/><text x="49.1626%" y="2767.50"></text></g><g><title>alloc::alloc::alloc (3,346,315 samples, 0.27%)</title><rect x="48.9126%" y="2741" width="0.2666%" height="15" fill="rgb(219,200,50)" fg:x="614011987" fg:w="3346315"/><text x="49.1626%" y="2751.50"></text></g><g><title>malloc (3,346,315 samples, 0.27%)</title><rect x="48.9126%" y="2725" width="0.2666%" height="15" fill="rgb(245,200,0)" fg:x="614011987" fg:w="3346315"/><text x="49.1626%" y="2735.50"></text></g><g><title>[libc.so.6] (3,346,315 samples, 0.27%)</title><rect x="48.9126%" y="2709" width="0.2666%" height="15" fill="rgb(245,119,33)" fg:x="614011987" fg:w="3346315"/><text x="49.1626%" y="2719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (468,804,932 samples, 37.35%)</title><rect x="12.6252%" y="2965" width="37.3453%" height="15" fill="rgb(231,125,12)" fg:x="158486810" fg:w="468804932"/><text x="12.8752%" y="2975.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (468,804,932 samples, 37.35%)</title><rect x="12.6252%" y="2949" width="37.3453%" height="15" fill="rgb(216,96,41)" fg:x="158486810" fg:w="468804932"/><text x="12.8752%" y="2959.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (468,804,932 samples, 37.35%)</title><rect x="12.6252%" y="2933" width="37.3453%" height="15" fill="rgb(248,43,45)" fg:x="158486810" fg:w="468804932"/><text x="12.8752%" y="2943.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (468,804,932 samples, 37.35%)</title><rect x="12.6252%" y="2917" width="37.3453%" height="15" fill="rgb(217,222,7)" fg:x="158486810" fg:w="468804932"/><text x="12.8752%" y="2927.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (9,933,440 samples, 0.79%)</title><rect x="49.1792%" y="2901" width="0.7913%" height="15" fill="rgb(233,28,6)" fg:x="617358302" fg:w="9933440"/><text x="49.4292%" y="2911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (478,639,221 samples, 38.13%)</title><rect x="12.3631%" y="3045" width="38.1287%" height="15" fill="rgb(231,218,15)" fg:x="155197402" fg:w="478639221"/><text x="12.6131%" y="3055.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (478,639,221 samples, 38.13%)</title><rect x="12.3631%" y="3029" width="38.1287%" height="15" fill="rgb(226,171,48)" fg:x="155197402" fg:w="478639221"/><text x="12.6131%" y="3039.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (478,639,221 samples, 38.13%)</title><rect x="12.3631%" y="3013" width="38.1287%" height="15" fill="rgb(235,201,9)" fg:x="155197402" fg:w="478639221"/><text x="12.6131%" y="3023.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (478,639,221 samples, 38.13%)</title><rect x="12.3631%" y="2997" width="38.1287%" height="15" fill="rgb(217,80,15)" fg:x="155197402" fg:w="478639221"/><text x="12.6131%" y="3007.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (478,639,221 samples, 38.13%)</title><rect x="12.3631%" y="2981" width="38.1287%" height="15" fill="rgb(219,152,8)" fg:x="155197402" fg:w="478639221"/><text x="12.6131%" y="2991.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6,544,881 samples, 0.52%)</title><rect x="49.9705%" y="2965" width="0.5214%" height="15" fill="rgb(243,107,38)" fg:x="627291742" fg:w="6544881"/><text x="50.2205%" y="2975.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6,544,881 samples, 0.52%)</title><rect x="49.9705%" y="2949" width="0.5214%" height="15" fill="rgb(231,17,5)" fg:x="627291742" fg:w="6544881"/><text x="50.2205%" y="2959.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6,544,881 samples, 0.52%)</title><rect x="49.9705%" y="2933" width="0.5214%" height="15" fill="rgb(209,25,54)" fg:x="627291742" fg:w="6544881"/><text x="50.2205%" y="2943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,273,572 samples, 0.26%)</title><rect x="50.2311%" y="2917" width="0.2608%" height="15" fill="rgb(219,0,2)" fg:x="630563051" fg:w="3273572"/><text x="50.4811%" y="2927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3,273,572 samples, 0.26%)</title><rect x="50.2311%" y="2901" width="0.2608%" height="15" fill="rgb(246,9,5)" fg:x="630563051" fg:w="3273572"/><text x="50.4811%" y="2911.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,273,572 samples, 0.26%)</title><rect x="50.2311%" y="2885" width="0.2608%" height="15" fill="rgb(226,159,4)" fg:x="630563051" fg:w="3273572"/><text x="50.4811%" y="2895.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (3,273,572 samples, 0.26%)</title><rect x="50.2311%" y="2869" width="0.2608%" height="15" fill="rgb(219,175,34)" fg:x="630563051" fg:w="3273572"/><text x="50.4811%" y="2879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6,577,961 samples, 0.52%)</title><rect x="50.4918%" y="3045" width="0.5240%" height="15" fill="rgb(236,10,46)" fg:x="633836623" fg:w="6577961"/><text x="50.7418%" y="3055.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,577,961 samples, 0.52%)</title><rect x="50.4918%" y="3029" width="0.5240%" height="15" fill="rgb(240,211,16)" fg:x="633836623" fg:w="6577961"/><text x="50.7418%" y="3039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,577,961 samples, 0.52%)</title><rect x="50.4918%" y="3013" width="0.5240%" height="15" fill="rgb(205,3,43)" fg:x="633836623" fg:w="6577961"/><text x="50.7418%" y="3023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,577,961 samples, 0.52%)</title><rect x="50.4918%" y="2997" width="0.5240%" height="15" fill="rgb(245,7,22)" fg:x="633836623" fg:w="6577961"/><text x="50.7418%" y="3007.50"></text></g><g><title>alloc::slice::hack::to_vec (6,577,961 samples, 0.52%)</title><rect x="50.4918%" y="2981" width="0.5240%" height="15" fill="rgb(239,132,32)" fg:x="633836623" fg:w="6577961"/><text x="50.7418%" y="2991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,577,961 samples, 0.52%)</title><rect x="50.4918%" y="2965" width="0.5240%" height="15" fill="rgb(228,202,34)" fg:x="633836623" fg:w="6577961"/><text x="50.7418%" y="2975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,577,961 samples, 0.52%)</title><rect x="50.4918%" y="2949" width="0.5240%" height="15" fill="rgb(254,200,22)" fg:x="633836623" fg:w="6577961"/><text x="50.7418%" y="2959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,577,961 samples, 0.52%)</title><rect x="50.4918%" y="2933" width="0.5240%" height="15" fill="rgb(219,10,39)" fg:x="633836623" fg:w="6577961"/><text x="50.7418%" y="2943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,577,961 samples, 0.52%)</title><rect x="50.4918%" y="2917" width="0.5240%" height="15" fill="rgb(226,210,39)" fg:x="633836623" fg:w="6577961"/><text x="50.7418%" y="2927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,577,961 samples, 0.52%)</title><rect x="50.4918%" y="2901" width="0.5240%" height="15" fill="rgb(208,219,16)" fg:x="633836623" fg:w="6577961"/><text x="50.7418%" y="2911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,577,961 samples, 0.52%)</title><rect x="50.4918%" y="2885" width="0.5240%" height="15" fill="rgb(216,158,51)" fg:x="633836623" fg:w="6577961"/><text x="50.7418%" y="2895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,577,961 samples, 0.52%)</title><rect x="50.4918%" y="2869" width="0.5240%" height="15" fill="rgb(233,14,44)" fg:x="633836623" fg:w="6577961"/><text x="50.7418%" y="2879.50"></text></g><g><title>alloc::alloc::alloc (6,577,961 samples, 0.52%)</title><rect x="50.4918%" y="2853" width="0.5240%" height="15" fill="rgb(237,97,39)" fg:x="633836623" fg:w="6577961"/><text x="50.7418%" y="2863.50"></text></g><g><title>malloc (6,577,961 samples, 0.52%)</title><rect x="50.4918%" y="2837" width="0.5240%" height="15" fill="rgb(218,198,43)" fg:x="633836623" fg:w="6577961"/><text x="50.7418%" y="2847.50"></text></g><g><title>[libc.so.6] (6,577,961 samples, 0.52%)</title><rect x="50.4918%" y="2821" width="0.5240%" height="15" fill="rgb(231,104,20)" fg:x="633836623" fg:w="6577961"/><text x="50.7418%" y="2831.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,172,249 samples, 0.25%)</title><rect x="51.0158%" y="3045" width="0.2527%" height="15" fill="rgb(254,36,13)" fg:x="640414584" fg:w="3172249"/><text x="51.2658%" y="3055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,172,249 samples, 0.25%)</title><rect x="51.0158%" y="3029" width="0.2527%" height="15" fill="rgb(248,14,50)" fg:x="640414584" fg:w="3172249"/><text x="51.2658%" y="3039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,172,249 samples, 0.25%)</title><rect x="51.0158%" y="3013" width="0.2527%" height="15" fill="rgb(217,107,29)" fg:x="640414584" fg:w="3172249"/><text x="51.2658%" y="3023.50"></text></g><g><title>alloc::slice::hack::to_vec (3,172,249 samples, 0.25%)</title><rect x="51.0158%" y="2997" width="0.2527%" height="15" fill="rgb(251,169,33)" fg:x="640414584" fg:w="3172249"/><text x="51.2658%" y="3007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,172,249 samples, 0.25%)</title><rect x="51.0158%" y="2981" width="0.2527%" height="15" fill="rgb(217,108,32)" fg:x="640414584" fg:w="3172249"/><text x="51.2658%" y="2991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,172,249 samples, 0.25%)</title><rect x="51.0158%" y="2965" width="0.2527%" height="15" fill="rgb(219,66,42)" fg:x="640414584" fg:w="3172249"/><text x="51.2658%" y="2975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,172,249 samples, 0.25%)</title><rect x="51.0158%" y="2949" width="0.2527%" height="15" fill="rgb(206,180,7)" fg:x="640414584" fg:w="3172249"/><text x="51.2658%" y="2959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,172,249 samples, 0.25%)</title><rect x="51.0158%" y="2933" width="0.2527%" height="15" fill="rgb(208,226,31)" fg:x="640414584" fg:w="3172249"/><text x="51.2658%" y="2943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,172,249 samples, 0.25%)</title><rect x="51.0158%" y="2917" width="0.2527%" height="15" fill="rgb(218,26,49)" fg:x="640414584" fg:w="3172249"/><text x="51.2658%" y="2927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,172,249 samples, 0.25%)</title><rect x="51.0158%" y="2901" width="0.2527%" height="15" fill="rgb(233,197,48)" fg:x="640414584" fg:w="3172249"/><text x="51.2658%" y="2911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,172,249 samples, 0.25%)</title><rect x="51.0158%" y="2885" width="0.2527%" height="15" fill="rgb(252,181,51)" fg:x="640414584" fg:w="3172249"/><text x="51.2658%" y="2895.50"></text></g><g><title>alloc::alloc::alloc (3,172,249 samples, 0.25%)</title><rect x="51.0158%" y="2869" width="0.2527%" height="15" fill="rgb(253,90,19)" fg:x="640414584" fg:w="3172249"/><text x="51.2658%" y="2879.50"></text></g><g><title>malloc (3,172,249 samples, 0.25%)</title><rect x="51.0158%" y="2853" width="0.2527%" height="15" fill="rgb(215,171,30)" fg:x="640414584" fg:w="3172249"/><text x="51.2658%" y="2863.50"></text></g><g><title>[libc.so.6] (3,172,249 samples, 0.25%)</title><rect x="51.0158%" y="2837" width="0.2527%" height="15" fill="rgb(214,222,9)" fg:x="640414584" fg:w="3172249"/><text x="51.2658%" y="2847.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (495,106,576 samples, 39.44%)</title><rect x="12.3631%" y="3061" width="39.4405%" height="15" fill="rgb(223,3,22)" fg:x="155197402" fg:w="495106576"/><text x="12.6131%" y="3071.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6,717,145 samples, 0.54%)</title><rect x="51.2685%" y="3045" width="0.5351%" height="15" fill="rgb(225,196,46)" fg:x="643586833" fg:w="6717145"/><text x="51.5185%" y="3055.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6,717,145 samples, 0.54%)</title><rect x="51.2685%" y="3029" width="0.5351%" height="15" fill="rgb(209,110,37)" fg:x="643586833" fg:w="6717145"/><text x="51.5185%" y="3039.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="3013" width="0.2676%" height="15" fill="rgb(249,89,12)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="3023.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2997" width="0.2676%" height="15" fill="rgb(226,27,33)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="3007.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2981" width="0.2676%" height="15" fill="rgb(213,82,22)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2965" width="0.2676%" height="15" fill="rgb(248,140,0)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2975.50"></text></g><g><title>core::clone::Clone::clone (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2949" width="0.2676%" height="15" fill="rgb(228,106,3)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2959.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2933" width="0.2676%" height="15" fill="rgb(209,23,37)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2917" width="0.2676%" height="15" fill="rgb(241,93,50)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2901" width="0.2676%" height="15" fill="rgb(253,46,43)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2911.50"></text></g><g><title>alloc::slice::hack::to_vec (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2885" width="0.2676%" height="15" fill="rgb(226,206,43)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2869" width="0.2676%" height="15" fill="rgb(217,54,7)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2853" width="0.2676%" height="15" fill="rgb(223,5,52)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2837" width="0.2676%" height="15" fill="rgb(206,52,46)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2821" width="0.2676%" height="15" fill="rgb(253,136,11)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2805" width="0.2676%" height="15" fill="rgb(208,106,33)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2789" width="0.2676%" height="15" fill="rgb(206,54,4)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2773" width="0.2676%" height="15" fill="rgb(213,3,15)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2783.50"></text></g><g><title>alloc::alloc::alloc (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2757" width="0.2676%" height="15" fill="rgb(252,211,39)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2767.50"></text></g><g><title>malloc (3,359,231 samples, 0.27%)</title><rect x="51.5360%" y="2741" width="0.2676%" height="15" fill="rgb(223,6,36)" fg:x="646944747" fg:w="3359231"/><text x="51.7860%" y="2751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (498,800,966 samples, 39.73%)</title><rect x="12.3631%" y="3205" width="39.7348%" height="15" fill="rgb(252,169,45)" fg:x="155197402" fg:w="498800966"/><text x="12.6131%" y="3215.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (498,800,966 samples, 39.73%)</title><rect x="12.3631%" y="3189" width="39.7348%" height="15" fill="rgb(212,48,26)" fg:x="155197402" fg:w="498800966"/><text x="12.6131%" y="3199.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (498,800,966 samples, 39.73%)</title><rect x="12.3631%" y="3173" width="39.7348%" height="15" fill="rgb(251,102,48)" fg:x="155197402" fg:w="498800966"/><text x="12.6131%" y="3183.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (498,800,966 samples, 39.73%)</title><rect x="12.3631%" y="3157" width="39.7348%" height="15" fill="rgb(243,208,16)" fg:x="155197402" fg:w="498800966"/><text x="12.6131%" y="3167.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (498,800,966 samples, 39.73%)</title><rect x="12.3631%" y="3141" width="39.7348%" height="15" fill="rgb(219,96,24)" fg:x="155197402" fg:w="498800966"/><text x="12.6131%" y="3151.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (498,800,966 samples, 39.73%)</title><rect x="12.3631%" y="3125" width="39.7348%" height="15" fill="rgb(219,33,29)" fg:x="155197402" fg:w="498800966"/><text x="12.6131%" y="3135.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (498,800,966 samples, 39.73%)</title><rect x="12.3631%" y="3109" width="39.7348%" height="15" fill="rgb(223,176,5)" fg:x="155197402" fg:w="498800966"/><text x="12.6131%" y="3119.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (498,800,966 samples, 39.73%)</title><rect x="12.3631%" y="3093" width="39.7348%" height="15" fill="rgb(228,140,14)" fg:x="155197402" fg:w="498800966"/><text x="12.6131%" y="3103.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (498,800,966 samples, 39.73%)</title><rect x="12.3631%" y="3077" width="39.7348%" height="15" fill="rgb(217,179,31)" fg:x="155197402" fg:w="498800966"/><text x="12.6131%" y="3087.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,694,390 samples, 0.29%)</title><rect x="51.8036%" y="3061" width="0.2943%" height="15" fill="rgb(230,9,30)" fg:x="650303978" fg:w="3694390"/><text x="52.0536%" y="3071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,694,390 samples, 0.29%)</title><rect x="51.8036%" y="3045" width="0.2943%" height="15" fill="rgb(230,136,20)" fg:x="650303978" fg:w="3694390"/><text x="52.0536%" y="3055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,694,390 samples, 0.29%)</title><rect x="51.8036%" y="3029" width="0.2943%" height="15" fill="rgb(215,210,22)" fg:x="650303978" fg:w="3694390"/><text x="52.0536%" y="3039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,694,390 samples, 0.29%)</title><rect x="51.8036%" y="3013" width="0.2943%" height="15" fill="rgb(218,43,5)" fg:x="650303978" fg:w="3694390"/><text x="52.0536%" y="3023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,694,390 samples, 0.29%)</title><rect x="51.8036%" y="2997" width="0.2943%" height="15" fill="rgb(216,11,5)" fg:x="650303978" fg:w="3694390"/><text x="52.0536%" y="3007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,694,390 samples, 0.29%)</title><rect x="51.8036%" y="2981" width="0.2943%" height="15" fill="rgb(209,82,29)" fg:x="650303978" fg:w="3694390"/><text x="52.0536%" y="2991.50"></text></g><g><title>alloc::alloc::alloc (3,694,390 samples, 0.29%)</title><rect x="51.8036%" y="2965" width="0.2943%" height="15" fill="rgb(244,115,12)" fg:x="650303978" fg:w="3694390"/><text x="52.0536%" y="2975.50"></text></g><g><title>malloc (3,694,390 samples, 0.29%)</title><rect x="51.8036%" y="2949" width="0.2943%" height="15" fill="rgb(222,82,18)" fg:x="650303978" fg:w="3694390"/><text x="52.0536%" y="2959.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,296,251 samples, 0.26%)</title><rect x="52.0979%" y="3205" width="0.2626%" height="15" fill="rgb(249,227,8)" fg:x="653998368" fg:w="3296251"/><text x="52.3479%" y="3215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,296,251 samples, 0.26%)</title><rect x="52.0979%" y="3189" width="0.2626%" height="15" fill="rgb(253,141,45)" fg:x="653998368" fg:w="3296251"/><text x="52.3479%" y="3199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,296,251 samples, 0.26%)</title><rect x="52.0979%" y="3173" width="0.2626%" height="15" fill="rgb(234,184,4)" fg:x="653998368" fg:w="3296251"/><text x="52.3479%" y="3183.50"></text></g><g><title>alloc::slice::hack::to_vec (3,296,251 samples, 0.26%)</title><rect x="52.0979%" y="3157" width="0.2626%" height="15" fill="rgb(218,194,23)" fg:x="653998368" fg:w="3296251"/><text x="52.3479%" y="3167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,296,251 samples, 0.26%)</title><rect x="52.0979%" y="3141" width="0.2626%" height="15" fill="rgb(235,66,41)" fg:x="653998368" fg:w="3296251"/><text x="52.3479%" y="3151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,296,251 samples, 0.26%)</title><rect x="52.0979%" y="3125" width="0.2626%" height="15" fill="rgb(245,217,1)" fg:x="653998368" fg:w="3296251"/><text x="52.3479%" y="3135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,296,251 samples, 0.26%)</title><rect x="52.0979%" y="3109" width="0.2626%" height="15" fill="rgb(229,91,1)" fg:x="653998368" fg:w="3296251"/><text x="52.3479%" y="3119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,296,251 samples, 0.26%)</title><rect x="52.0979%" y="3093" width="0.2626%" height="15" fill="rgb(207,101,30)" fg:x="653998368" fg:w="3296251"/><text x="52.3479%" y="3103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,296,251 samples, 0.26%)</title><rect x="52.0979%" y="3077" width="0.2626%" height="15" fill="rgb(223,82,49)" fg:x="653998368" fg:w="3296251"/><text x="52.3479%" y="3087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,296,251 samples, 0.26%)</title><rect x="52.0979%" y="3061" width="0.2626%" height="15" fill="rgb(218,167,17)" fg:x="653998368" fg:w="3296251"/><text x="52.3479%" y="3071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,296,251 samples, 0.26%)</title><rect x="52.0979%" y="3045" width="0.2626%" height="15" fill="rgb(208,103,14)" fg:x="653998368" fg:w="3296251"/><text x="52.3479%" y="3055.50"></text></g><g><title>alloc::alloc::alloc (3,296,251 samples, 0.26%)</title><rect x="52.0979%" y="3029" width="0.2626%" height="15" fill="rgb(238,20,8)" fg:x="653998368" fg:w="3296251"/><text x="52.3479%" y="3039.50"></text></g><g><title>malloc (3,296,251 samples, 0.26%)</title><rect x="52.0979%" y="3013" width="0.2626%" height="15" fill="rgb(218,80,54)" fg:x="653998368" fg:w="3296251"/><text x="52.3479%" y="3023.50"></text></g><g><title>[libc.so.6] (3,296,251 samples, 0.26%)</title><rect x="52.0979%" y="2997" width="0.2626%" height="15" fill="rgb(240,144,17)" fg:x="653998368" fg:w="3296251"/><text x="52.3479%" y="3007.50"></text></g><g><title>core::clone::Clone::clone (3,329,394 samples, 0.27%)</title><rect x="52.3605%" y="3109" width="0.2652%" height="15" fill="rgb(245,27,50)" fg:x="657294619" fg:w="3329394"/><text x="52.6105%" y="3119.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,329,394 samples, 0.27%)</title><rect x="52.3605%" y="3093" width="0.2652%" height="15" fill="rgb(251,51,7)" fg:x="657294619" fg:w="3329394"/><text x="52.6105%" y="3103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (6,642,530 samples, 0.53%)</title><rect x="52.3605%" y="3141" width="0.5291%" height="15" fill="rgb(245,217,29)" fg:x="657294619" fg:w="6642530"/><text x="52.6105%" y="3151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (6,642,530 samples, 0.53%)</title><rect x="52.3605%" y="3125" width="0.5291%" height="15" fill="rgb(221,176,29)" fg:x="657294619" fg:w="6642530"/><text x="52.6105%" y="3135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (3,313,136 samples, 0.26%)</title><rect x="52.6257%" y="3109" width="0.2639%" height="15" fill="rgb(212,180,24)" fg:x="660624013" fg:w="3313136"/><text x="52.8757%" y="3119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,313,136 samples, 0.26%)</title><rect x="52.6257%" y="3093" width="0.2639%" height="15" fill="rgb(254,24,2)" fg:x="660624013" fg:w="3313136"/><text x="52.8757%" y="3103.50"></text></g><g><title>[libc.so.6] (3,313,136 samples, 0.26%)</title><rect x="52.6257%" y="3077" width="0.2639%" height="15" fill="rgb(230,100,2)" fg:x="660624013" fg:w="3313136"/><text x="52.8757%" y="3087.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (515,204,650 samples, 41.04%)</title><rect x="12.1089%" y="3221" width="41.0415%" height="15" fill="rgb(219,142,25)" fg:x="152006552" fg:w="515204650"/><text x="12.3589%" y="3231.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (9,916,583 samples, 0.79%)</title><rect x="52.3605%" y="3205" width="0.7900%" height="15" fill="rgb(240,73,43)" fg:x="657294619" fg:w="9916583"/><text x="52.6105%" y="3215.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (9,916,583 samples, 0.79%)</title><rect x="52.3605%" y="3189" width="0.7900%" height="15" fill="rgb(214,114,15)" fg:x="657294619" fg:w="9916583"/><text x="52.6105%" y="3199.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (9,916,583 samples, 0.79%)</title><rect x="52.3605%" y="3173" width="0.7900%" height="15" fill="rgb(207,130,4)" fg:x="657294619" fg:w="9916583"/><text x="52.6105%" y="3183.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,916,583 samples, 0.79%)</title><rect x="52.3605%" y="3157" width="0.7900%" height="15" fill="rgb(221,25,40)" fg:x="657294619" fg:w="9916583"/><text x="52.6105%" y="3167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3,274,053 samples, 0.26%)</title><rect x="52.8897%" y="3141" width="0.2608%" height="15" fill="rgb(241,184,7)" fg:x="663937149" fg:w="3274053"/><text x="53.1397%" y="3151.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,274,053 samples, 0.26%)</title><rect x="52.8897%" y="3125" width="0.2608%" height="15" fill="rgb(235,159,4)" fg:x="663937149" fg:w="3274053"/><text x="53.1397%" y="3135.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3,274,053 samples, 0.26%)</title><rect x="52.8897%" y="3109" width="0.2608%" height="15" fill="rgb(214,87,48)" fg:x="663937149" fg:w="3274053"/><text x="53.1397%" y="3119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,274,053 samples, 0.26%)</title><rect x="52.8897%" y="3093" width="0.2608%" height="15" fill="rgb(246,198,24)" fg:x="663937149" fg:w="3274053"/><text x="53.1397%" y="3103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,274,053 samples, 0.26%)</title><rect x="52.8897%" y="3077" width="0.2608%" height="15" fill="rgb(209,66,40)" fg:x="663937149" fg:w="3274053"/><text x="53.1397%" y="3087.50"></text></g><g><title>alloc::alloc::alloc (3,274,053 samples, 0.26%)</title><rect x="52.8897%" y="3061" width="0.2608%" height="15" fill="rgb(233,147,39)" fg:x="663937149" fg:w="3274053"/><text x="53.1397%" y="3071.50"></text></g><g><title>malloc (3,274,053 samples, 0.26%)</title><rect x="52.8897%" y="3045" width="0.2608%" height="15" fill="rgb(231,145,52)" fg:x="663937149" fg:w="3274053"/><text x="53.1397%" y="3055.50"></text></g><g><title>[libc.so.6] (3,274,053 samples, 0.26%)</title><rect x="52.8897%" y="3029" width="0.2608%" height="15" fill="rgb(206,20,26)" fg:x="663937149" fg:w="3274053"/><text x="53.1397%" y="3039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (720,496,240 samples, 57.40%)</title><rect x="11.8484%" y="3525" width="57.3952%" height="15" fill="rgb(238,220,4)" fg:x="148736531" fg:w="720496240"/><text x="12.0984%" y="3535.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (720,496,240 samples, 57.40%)</title><rect x="11.8484%" y="3509" width="57.3952%" height="15" fill="rgb(252,195,42)" fg:x="148736531" fg:w="720496240"/><text x="12.0984%" y="3519.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (720,496,240 samples, 57.40%)</title><rect x="11.8484%" y="3493" width="57.3952%" height="15" fill="rgb(209,10,6)" fg:x="148736531" fg:w="720496240"/><text x="12.0984%" y="3503.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (720,496,240 samples, 57.40%)</title><rect x="11.8484%" y="3477" width="57.3952%" height="15" fill="rgb(229,3,52)" fg:x="148736531" fg:w="720496240"/><text x="12.0984%" y="3487.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (720,496,240 samples, 57.40%)</title><rect x="11.8484%" y="3461" width="57.3952%" height="15" fill="rgb(253,49,37)" fg:x="148736531" fg:w="720496240"/><text x="12.0984%" y="3471.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (720,496,240 samples, 57.40%)</title><rect x="11.8484%" y="3445" width="57.3952%" height="15" fill="rgb(240,103,49)" fg:x="148736531" fg:w="720496240"/><text x="12.0984%" y="3455.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (720,496,240 samples, 57.40%)</title><rect x="11.8484%" y="3429" width="57.3952%" height="15" fill="rgb(250,182,30)" fg:x="148736531" fg:w="720496240"/><text x="12.0984%" y="3439.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (720,496,240 samples, 57.40%)</title><rect x="11.8484%" y="3413" width="57.3952%" height="15" fill="rgb(248,8,30)" fg:x="148736531" fg:w="720496240"/><text x="12.0984%" y="3423.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (720,496,240 samples, 57.40%)</title><rect x="11.8484%" y="3397" width="57.3952%" height="15" fill="rgb(237,120,30)" fg:x="148736531" fg:w="720496240"/><text x="12.0984%" y="3407.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (720,496,240 samples, 57.40%)</title><rect x="11.8484%" y="3381" width="57.3952%" height="15" fill="rgb(221,146,34)" fg:x="148736531" fg:w="720496240"/><text x="12.0984%" y="3391.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (720,496,240 samples, 57.40%)</title><rect x="11.8484%" y="3365" width="57.3952%" height="15" fill="rgb(242,55,13)" fg:x="148736531" fg:w="720496240"/><text x="12.0984%" y="3375.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (720,496,240 samples, 57.40%)</title><rect x="11.8484%" y="3349" width="57.3952%" height="15" fill="rgb(242,112,31)" fg:x="148736531" fg:w="720496240"/><text x="12.0984%" y="3359.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (720,496,240 samples, 57.40%)</title><rect x="11.8484%" y="3333" width="57.3952%" height="15" fill="rgb(249,192,27)" fg:x="148736531" fg:w="720496240"/><text x="12.0984%" y="3343.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (720,496,240 samples, 57.40%)</title><rect x="11.8484%" y="3317" width="57.3952%" height="15" fill="rgb(208,204,44)" fg:x="148736531" fg:w="720496240"/><text x="12.0984%" y="3327.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (720,496,240 samples, 57.40%)</title><rect x="11.8484%" y="3301" width="57.3952%" height="15" fill="rgb(208,93,54)" fg:x="148736531" fg:w="720496240"/><text x="12.0984%" y="3311.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (717,226,219 samples, 57.13%)</title><rect x="12.1089%" y="3285" width="57.1347%" height="15" fill="rgb(242,1,31)" fg:x="152006552" fg:w="717226219"/><text x="12.3589%" y="3295.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (717,226,219 samples, 57.13%)</title><rect x="12.1089%" y="3269" width="57.1347%" height="15" fill="rgb(241,83,25)" fg:x="152006552" fg:w="717226219"/><text x="12.3589%" y="3279.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (717,226,219 samples, 57.13%)</title><rect x="12.1089%" y="3253" width="57.1347%" height="15" fill="rgb(205,169,50)" fg:x="152006552" fg:w="717226219"/><text x="12.3589%" y="3263.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (717,226,219 samples, 57.13%)</title><rect x="12.1089%" y="3237" width="57.1347%" height="15" fill="rgb(239,186,37)" fg:x="152006552" fg:w="717226219"/><text x="12.3589%" y="3247.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (202,021,569 samples, 16.09%)</title><rect x="53.1505%" y="3221" width="16.0932%" height="15" fill="rgb(205,221,10)" fg:x="667211202" fg:w="202021569"/><text x="53.4005%" y="3231.50">alloc::vec::Vec&lt;T,A&gt;::wit..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (202,021,569 samples, 16.09%)</title><rect x="53.1505%" y="3205" width="16.0932%" height="15" fill="rgb(218,196,15)" fg:x="667211202" fg:w="202021569"/><text x="53.4005%" y="3215.50">alloc::raw_vec::RawVec&lt;T,..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (202,021,569 samples, 16.09%)</title><rect x="53.1505%" y="3189" width="16.0932%" height="15" fill="rgb(218,196,35)" fg:x="667211202" fg:w="202021569"/><text x="53.4005%" y="3199.50">alloc::raw_vec::RawVecInn..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (202,021,569 samples, 16.09%)</title><rect x="53.1505%" y="3173" width="16.0932%" height="15" fill="rgb(233,63,24)" fg:x="667211202" fg:w="202021569"/><text x="53.4005%" y="3183.50">alloc::raw_vec::RawVecInn..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (202,021,569 samples, 16.09%)</title><rect x="53.1505%" y="3157" width="16.0932%" height="15" fill="rgb(225,8,4)" fg:x="667211202" fg:w="202021569"/><text x="53.4005%" y="3167.50">&lt;alloc::alloc::Global as ..</text></g><g><title>alloc::alloc::Global::alloc_impl (202,021,569 samples, 16.09%)</title><rect x="53.1505%" y="3141" width="16.0932%" height="15" fill="rgb(234,105,35)" fg:x="667211202" fg:w="202021569"/><text x="53.4005%" y="3151.50">alloc::alloc::Global::all..</text></g><g><title>alloc::alloc::alloc (202,021,569 samples, 16.09%)</title><rect x="53.1505%" y="3125" width="16.0932%" height="15" fill="rgb(236,21,32)" fg:x="667211202" fg:w="202021569"/><text x="53.4005%" y="3135.50">alloc::alloc::alloc</text></g><g><title>malloc (202,021,569 samples, 16.09%)</title><rect x="53.1505%" y="3109" width="16.0932%" height="15" fill="rgb(228,109,6)" fg:x="667211202" fg:w="202021569"/><text x="53.4005%" y="3119.50">malloc</text></g><g><title>[libc.so.6] (202,021,569 samples, 16.09%)</title><rect x="53.1505%" y="3093" width="16.0932%" height="15" fill="rgb(229,215,31)" fg:x="667211202" fg:w="202021569"/><text x="53.4005%" y="3103.50">[libc.so.6]</text></g><g><title>[libc.so.6] (188,706,379 samples, 15.03%)</title><rect x="54.2112%" y="3077" width="15.0325%" height="15" fill="rgb(221,52,54)" fg:x="680526392" fg:w="188706379"/><text x="54.4612%" y="3087.50">[libc.so.6]</text></g><g><title>[libc.so.6] (46,046,169 samples, 3.67%)</title><rect x="65.5756%" y="3061" width="3.6681%" height="15" fill="rgb(252,129,43)" fg:x="823186602" fg:w="46046169"/><text x="65.8256%" y="3071.50">[lib..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (723,776,900 samples, 57.66%)</title><rect x="11.8484%" y="3541" width="57.6565%" height="15" fill="rgb(248,183,27)" fg:x="148736531" fg:w="723776900"/><text x="12.0984%" y="3551.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,280,660 samples, 0.26%)</title><rect x="69.2436%" y="3525" width="0.2613%" height="15" fill="rgb(250,0,22)" fg:x="869232771" fg:w="3280660"/><text x="69.4936%" y="3535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,280,660 samples, 0.26%)</title><rect x="69.2436%" y="3509" width="0.2613%" height="15" fill="rgb(213,166,10)" fg:x="869232771" fg:w="3280660"/><text x="69.4936%" y="3519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,280,660 samples, 0.26%)</title><rect x="69.2436%" y="3493" width="0.2613%" height="15" fill="rgb(207,163,36)" fg:x="869232771" fg:w="3280660"/><text x="69.4936%" y="3503.50"></text></g><g><title>alloc::slice::hack::to_vec (3,280,660 samples, 0.26%)</title><rect x="69.2436%" y="3477" width="0.2613%" height="15" fill="rgb(208,122,22)" fg:x="869232771" fg:w="3280660"/><text x="69.4936%" y="3487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,280,660 samples, 0.26%)</title><rect x="69.2436%" y="3461" width="0.2613%" height="15" fill="rgb(207,104,49)" fg:x="869232771" fg:w="3280660"/><text x="69.4936%" y="3471.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,280,660 samples, 0.26%)</title><rect x="69.2436%" y="3445" width="0.2613%" height="15" fill="rgb(248,211,50)" fg:x="869232771" fg:w="3280660"/><text x="69.4936%" y="3455.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,280,660 samples, 0.26%)</title><rect x="69.2436%" y="3429" width="0.2613%" height="15" fill="rgb(217,13,45)" fg:x="869232771" fg:w="3280660"/><text x="69.4936%" y="3439.50"></text></g><g><title>[libc.so.6] (3,280,660 samples, 0.26%)</title><rect x="69.2436%" y="3413" width="0.2613%" height="15" fill="rgb(211,216,49)" fg:x="869232771" fg:w="3280660"/><text x="69.4936%" y="3423.50"></text></g><g><title>alloc::fmt::format (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3541" width="0.2533%" height="15" fill="rgb(221,58,53)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3551.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3525" width="0.2533%" height="15" fill="rgb(220,112,41)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3535.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3509" width="0.2533%" height="15" fill="rgb(236,38,28)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3519.50"></text></g><g><title>alloc::fmt::format::format_inner (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3493" width="0.2533%" height="15" fill="rgb(227,195,22)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3503.50"></text></g><g><title>core::fmt::Write::write_fmt (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3477" width="0.2533%" height="15" fill="rgb(214,55,33)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3487.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3461" width="0.2533%" height="15" fill="rgb(248,80,13)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3471.50"></text></g><g><title>core::fmt::write (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3445" width="0.2533%" height="15" fill="rgb(238,52,6)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3455.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3429" width="0.2533%" height="15" fill="rgb(224,198,47)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3439.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3413" width="0.2533%" height="15" fill="rgb(233,171,20)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3423.50"></text></g><g><title>alloc::string::String::push_str (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3397" width="0.2533%" height="15" fill="rgb(241,30,25)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3381" width="0.2533%" height="15" fill="rgb(207,171,38)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3365" width="0.2533%" height="15" fill="rgb(234,70,1)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3349" width="0.2533%" height="15" fill="rgb(232,178,18)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3333" width="0.2533%" height="15" fill="rgb(241,78,40)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3317" width="0.2533%" height="15" fill="rgb(222,35,25)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3301" width="0.2533%" height="15" fill="rgb(207,92,16)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3285" width="0.2533%" height="15" fill="rgb(216,59,51)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3269" width="0.2533%" height="15" fill="rgb(213,80,28)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3279.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3253" width="0.2533%" height="15" fill="rgb(220,93,7)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3237" width="0.2533%" height="15" fill="rgb(225,24,44)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3247.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3221" width="0.2533%" height="15" fill="rgb(243,74,40)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3231.50"></text></g><g><title>alloc::alloc::realloc (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3205" width="0.2533%" height="15" fill="rgb(228,39,7)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3215.50"></text></g><g><title>realloc (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3189" width="0.2533%" height="15" fill="rgb(227,79,8)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3199.50"></text></g><g><title>[libc.so.6] (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3173" width="0.2533%" height="15" fill="rgb(236,58,11)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3183.50"></text></g><g><title>[libc.so.6] (3,179,461 samples, 0.25%)</title><rect x="69.5050%" y="3157" width="0.2533%" height="15" fill="rgb(249,63,35)" fg:x="872513431" fg:w="3179461"/><text x="69.7550%" y="3167.50"></text></g><g><title>benchmark::extract_path_from_command (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3525" width="0.2630%" height="15" fill="rgb(252,114,16)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3535.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3509" width="0.2630%" height="15" fill="rgb(254,151,24)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3519.50"></text></g><g><title>benchmark::extract_path_from_command::_{{closure}} (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3493" width="0.2630%" height="15" fill="rgb(253,54,39)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3477" width="0.2630%" height="15" fill="rgb(243,25,45)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3461" width="0.2630%" height="15" fill="rgb(234,134,9)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3445" width="0.2630%" height="15" fill="rgb(227,166,31)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3429" width="0.2630%" height="15" fill="rgb(245,143,41)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3413" width="0.2630%" height="15" fill="rgb(238,181,32)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3397" width="0.2630%" height="15" fill="rgb(224,113,18)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3381" width="0.2630%" height="15" fill="rgb(240,229,28)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3365" width="0.2630%" height="15" fill="rgb(250,185,3)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3349" width="0.2630%" height="15" fill="rgb(212,59,25)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3333" width="0.2630%" height="15" fill="rgb(221,87,20)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3317" width="0.2630%" height="15" fill="rgb(213,74,28)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3327.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3301" width="0.2630%" height="15" fill="rgb(224,132,34)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3285" width="0.2630%" height="15" fill="rgb(222,101,24)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3295.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3269" width="0.2630%" height="15" fill="rgb(254,142,4)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3279.50"></text></g><g><title>alloc::alloc::realloc (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3253" width="0.2630%" height="15" fill="rgb(230,229,49)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3263.50"></text></g><g><title>realloc (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3237" width="0.2630%" height="15" fill="rgb(238,70,47)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3247.50"></text></g><g><title>[libc.so.6] (3,301,003 samples, 0.26%)</title><rect x="69.7583%" y="3221" width="0.2630%" height="15" fill="rgb(231,160,17)" fg:x="875692892" fg:w="3301003"/><text x="70.0083%" y="3231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,633,285 samples, 0.21%)</title><rect x="70.0212%" y="3381" width="0.2098%" height="15" fill="rgb(218,68,53)" fg:x="878993895" fg:w="2633285"/><text x="70.2712%" y="3391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,633,285 samples, 0.21%)</title><rect x="70.0212%" y="3365" width="0.2098%" height="15" fill="rgb(236,111,10)" fg:x="878993895" fg:w="2633285"/><text x="70.2712%" y="3375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,633,285 samples, 0.21%)</title><rect x="70.0212%" y="3349" width="0.2098%" height="15" fill="rgb(224,34,41)" fg:x="878993895" fg:w="2633285"/><text x="70.2712%" y="3359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,633,285 samples, 0.21%)</title><rect x="70.0212%" y="3333" width="0.2098%" height="15" fill="rgb(241,118,19)" fg:x="878993895" fg:w="2633285"/><text x="70.2712%" y="3343.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,633,285 samples, 0.21%)</title><rect x="70.0212%" y="3317" width="0.2098%" height="15" fill="rgb(238,129,25)" fg:x="878993895" fg:w="2633285"/><text x="70.2712%" y="3327.50"></text></g><g><title>malloc (2,633,285 samples, 0.21%)</title><rect x="70.0212%" y="3301" width="0.2098%" height="15" fill="rgb(238,22,31)" fg:x="878993895" fg:w="2633285"/><text x="70.2712%" y="3311.50"></text></g><g><title>[libc.so.6] (2,633,285 samples, 0.21%)</title><rect x="70.0212%" y="3285" width="0.2098%" height="15" fill="rgb(222,174,48)" fg:x="878993895" fg:w="2633285"/><text x="70.2712%" y="3295.50"></text></g><g><title>[libc.so.6] (2,633,285 samples, 0.21%)</title><rect x="70.0212%" y="3269" width="0.2098%" height="15" fill="rgb(206,152,40)" fg:x="878993895" fg:w="2633285"/><text x="70.2712%" y="3279.50"></text></g><g><title>__default_morecore (2,633,285 samples, 0.21%)</title><rect x="70.0212%" y="3253" width="0.2098%" height="15" fill="rgb(218,99,54)" fg:x="878993895" fg:w="2633285"/><text x="70.2712%" y="3263.50"></text></g><g><title>__sbrk (2,633,285 samples, 0.21%)</title><rect x="70.0212%" y="3237" width="0.2098%" height="15" fill="rgb(220,174,26)" fg:x="878993895" fg:w="2633285"/><text x="70.2712%" y="3247.50"></text></g><g><title>brk (2,633,285 samples, 0.21%)</title><rect x="70.0212%" y="3221" width="0.2098%" height="15" fill="rgb(245,116,9)" fg:x="878993895" fg:w="2633285"/><text x="70.2712%" y="3231.50"></text></g><g><title>[unknown] (2,633,285 samples, 0.21%)</title><rect x="70.0212%" y="3205" width="0.2098%" height="15" fill="rgb(209,72,35)" fg:x="878993895" fg:w="2633285"/><text x="70.2712%" y="3215.50"></text></g><g><title>benchmark::apply_frame_modifications (8,541,873 samples, 0.68%)</title><rect x="69.7583%" y="3541" width="0.6805%" height="15" fill="rgb(226,126,21)" fg:x="875692892" fg:w="8541873"/><text x="70.0083%" y="3551.50"></text></g><g><title>benchmark::json_to_html_node (5,240,870 samples, 0.42%)</title><rect x="70.0212%" y="3525" width="0.4175%" height="15" fill="rgb(227,192,1)" fg:x="878993895" fg:w="5240870"/><text x="70.2712%" y="3535.50"></text></g><g><title>benchmark::json_to_html_node (5,240,870 samples, 0.42%)</title><rect x="70.0212%" y="3509" width="0.4175%" height="15" fill="rgb(237,180,29)" fg:x="878993895" fg:w="5240870"/><text x="70.2712%" y="3519.50"></text></g><g><title>benchmark::json_to_html_node (5,240,870 samples, 0.42%)</title><rect x="70.0212%" y="3493" width="0.4175%" height="15" fill="rgb(230,197,35)" fg:x="878993895" fg:w="5240870"/><text x="70.2712%" y="3503.50"></text></g><g><title>benchmark::json_to_html_node (5,240,870 samples, 0.42%)</title><rect x="70.0212%" y="3477" width="0.4175%" height="15" fill="rgb(246,193,31)" fg:x="878993895" fg:w="5240870"/><text x="70.2712%" y="3487.50"></text></g><g><title>benchmark::json_to_html_node (5,240,870 samples, 0.42%)</title><rect x="70.0212%" y="3461" width="0.4175%" height="15" fill="rgb(241,36,4)" fg:x="878993895" fg:w="5240870"/><text x="70.2712%" y="3471.50"></text></g><g><title>benchmark::json_to_html_node (5,240,870 samples, 0.42%)</title><rect x="70.0212%" y="3445" width="0.4175%" height="15" fill="rgb(241,130,17)" fg:x="878993895" fg:w="5240870"/><text x="70.2712%" y="3455.50"></text></g><g><title>benchmark::json_to_html_node (5,240,870 samples, 0.42%)</title><rect x="70.0212%" y="3429" width="0.4175%" height="15" fill="rgb(206,137,32)" fg:x="878993895" fg:w="5240870"/><text x="70.2712%" y="3439.50"></text></g><g><title>benchmark::json_to_html_node (5,240,870 samples, 0.42%)</title><rect x="70.0212%" y="3413" width="0.4175%" height="15" fill="rgb(237,228,51)" fg:x="878993895" fg:w="5240870"/><text x="70.2712%" y="3423.50"></text></g><g><title>benchmark::json_to_html_node (5,240,870 samples, 0.42%)</title><rect x="70.0212%" y="3397" width="0.4175%" height="15" fill="rgb(243,6,42)" fg:x="878993895" fg:w="5240870"/><text x="70.2712%" y="3407.50"></text></g><g><title>benchmark::json_to_html_node (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3381" width="0.2077%" height="15" fill="rgb(251,74,28)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3391.50"></text></g><g><title>benchmark::json_to_html_node (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3365" width="0.2077%" height="15" fill="rgb(218,20,49)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3375.50"></text></g><g><title>benchmark::json_to_html_node (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3349" width="0.2077%" height="15" fill="rgb(238,28,14)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3359.50"></text></g><g><title>benchmark::json_to_html_node (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3333" width="0.2077%" height="15" fill="rgb(229,40,46)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3317" width="0.2077%" height="15" fill="rgb(244,195,20)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3327.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3301" width="0.2077%" height="15" fill="rgb(253,56,35)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3311.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3285" width="0.2077%" height="15" fill="rgb(210,149,44)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3295.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3269" width="0.2077%" height="15" fill="rgb(240,135,12)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3279.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3253" width="0.2077%" height="15" fill="rgb(251,24,50)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3237" width="0.2077%" height="15" fill="rgb(243,200,47)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3247.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3221" width="0.2077%" height="15" fill="rgb(224,166,26)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3205" width="0.2077%" height="15" fill="rgb(233,0,47)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3189" width="0.2077%" height="15" fill="rgb(253,80,5)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3199.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3173" width="0.2077%" height="15" fill="rgb(214,133,25)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3183.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3157" width="0.2077%" height="15" fill="rgb(209,27,14)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3141" width="0.2077%" height="15" fill="rgb(219,102,51)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3125" width="0.2077%" height="15" fill="rgb(237,18,16)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3135.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3109" width="0.2077%" height="15" fill="rgb(241,85,17)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3119.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3093" width="0.2077%" height="15" fill="rgb(236,90,42)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3103.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3077" width="0.2077%" height="15" fill="rgb(249,57,21)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3087.50"></text></g><g><title>core::str::pattern::Searcher::next_match (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3061" width="0.2077%" height="15" fill="rgb(243,12,36)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3071.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3045" width="0.2077%" height="15" fill="rgb(253,128,47)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3055.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3029" width="0.2077%" height="15" fill="rgb(207,33,20)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3039.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="3013" width="0.2077%" height="15" fill="rgb(233,215,35)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3023.50"></text></g><g><title>core::str::validations::next_code_point (2,607,585 samples, 0.21%)</title><rect x="70.2310%" y="2997" width="0.2077%" height="15" fill="rgb(249,188,52)" fg:x="881627180" fg:w="2607585"/><text x="70.4810%" y="3007.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3,347,089 samples, 0.27%)</title><rect x="70.4387%" y="3397" width="0.2666%" height="15" fill="rgb(225,12,32)" fg:x="884234765" fg:w="3347089"/><text x="70.6887%" y="3407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,347,089 samples, 0.27%)</title><rect x="70.4387%" y="3381" width="0.2666%" height="15" fill="rgb(247,98,14)" fg:x="884234765" fg:w="3347089"/><text x="70.6887%" y="3391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,347,089 samples, 0.27%)</title><rect x="70.4387%" y="3365" width="0.2666%" height="15" fill="rgb(247,219,48)" fg:x="884234765" fg:w="3347089"/><text x="70.6887%" y="3375.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3,276,363 samples, 0.26%)</title><rect x="70.7053%" y="3285" width="0.2610%" height="15" fill="rgb(253,60,48)" fg:x="887581854" fg:w="3276363"/><text x="70.9553%" y="3295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,276,363 samples, 0.26%)</title><rect x="70.7053%" y="3269" width="0.2610%" height="15" fill="rgb(245,15,52)" fg:x="887581854" fg:w="3276363"/><text x="70.9553%" y="3279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,276,363 samples, 0.26%)</title><rect x="70.7053%" y="3253" width="0.2610%" height="15" fill="rgb(220,133,28)" fg:x="887581854" fg:w="3276363"/><text x="70.9553%" y="3263.50"></text></g><g><title>benchmark::clear_dirty_flags (13,225,930 samples, 1.05%)</title><rect x="70.4387%" y="3541" width="1.0536%" height="15" fill="rgb(217,180,4)" fg:x="884234765" fg:w="13225930"/><text x="70.6887%" y="3551.50"></text></g><g><title>benchmark::clear_dirty_flags (13,225,930 samples, 1.05%)</title><rect x="70.4387%" y="3525" width="1.0536%" height="15" fill="rgb(251,24,1)" fg:x="884234765" fg:w="13225930"/><text x="70.6887%" y="3535.50"></text></g><g><title>benchmark::clear_dirty_flags (13,225,930 samples, 1.05%)</title><rect x="70.4387%" y="3509" width="1.0536%" height="15" fill="rgb(212,185,49)" fg:x="884234765" fg:w="13225930"/><text x="70.6887%" y="3519.50"></text></g><g><title>benchmark::clear_dirty_flags (13,225,930 samples, 1.05%)</title><rect x="70.4387%" y="3493" width="1.0536%" height="15" fill="rgb(215,175,22)" fg:x="884234765" fg:w="13225930"/><text x="70.6887%" y="3503.50"></text></g><g><title>benchmark::clear_dirty_flags (13,225,930 samples, 1.05%)</title><rect x="70.4387%" y="3477" width="1.0536%" height="15" fill="rgb(250,205,14)" fg:x="884234765" fg:w="13225930"/><text x="70.6887%" y="3487.50"></text></g><g><title>benchmark::clear_dirty_flags (13,225,930 samples, 1.05%)</title><rect x="70.4387%" y="3461" width="1.0536%" height="15" fill="rgb(225,211,22)" fg:x="884234765" fg:w="13225930"/><text x="70.6887%" y="3471.50"></text></g><g><title>benchmark::clear_dirty_flags (13,225,930 samples, 1.05%)</title><rect x="70.4387%" y="3445" width="1.0536%" height="15" fill="rgb(251,179,42)" fg:x="884234765" fg:w="13225930"/><text x="70.6887%" y="3455.50"></text></g><g><title>benchmark::clear_dirty_flags (13,225,930 samples, 1.05%)</title><rect x="70.4387%" y="3429" width="1.0536%" height="15" fill="rgb(208,216,51)" fg:x="884234765" fg:w="13225930"/><text x="70.6887%" y="3439.50"></text></g><g><title>benchmark::clear_dirty_flags (13,225,930 samples, 1.05%)</title><rect x="70.4387%" y="3413" width="1.0536%" height="15" fill="rgb(235,36,11)" fg:x="884234765" fg:w="13225930"/><text x="70.6887%" y="3423.50"></text></g><g><title>benchmark::clear_dirty_flags (9,878,841 samples, 0.79%)</title><rect x="70.7053%" y="3397" width="0.7870%" height="15" fill="rgb(213,189,28)" fg:x="887581854" fg:w="9878841"/><text x="70.9553%" y="3407.50"></text></g><g><title>benchmark::clear_dirty_flags (9,878,841 samples, 0.79%)</title><rect x="70.7053%" y="3381" width="0.7870%" height="15" fill="rgb(227,203,42)" fg:x="887581854" fg:w="9878841"/><text x="70.9553%" y="3391.50"></text></g><g><title>benchmark::clear_dirty_flags (9,878,841 samples, 0.79%)</title><rect x="70.7053%" y="3365" width="0.7870%" height="15" fill="rgb(244,72,36)" fg:x="887581854" fg:w="9878841"/><text x="70.9553%" y="3375.50"></text></g><g><title>benchmark::clear_dirty_flags (9,878,841 samples, 0.79%)</title><rect x="70.7053%" y="3349" width="0.7870%" height="15" fill="rgb(213,53,17)" fg:x="887581854" fg:w="9878841"/><text x="70.9553%" y="3359.50"></text></g><g><title>benchmark::clear_dirty_flags (9,878,841 samples, 0.79%)</title><rect x="70.7053%" y="3333" width="0.7870%" height="15" fill="rgb(207,167,3)" fg:x="887581854" fg:w="9878841"/><text x="70.9553%" y="3343.50"></text></g><g><title>benchmark::clear_dirty_flags (9,878,841 samples, 0.79%)</title><rect x="70.7053%" y="3317" width="0.7870%" height="15" fill="rgb(216,98,30)" fg:x="887581854" fg:w="9878841"/><text x="70.9553%" y="3327.50"></text></g><g><title>benchmark::clear_dirty_flags (9,878,841 samples, 0.79%)</title><rect x="70.7053%" y="3301" width="0.7870%" height="15" fill="rgb(236,123,15)" fg:x="887581854" fg:w="9878841"/><text x="70.9553%" y="3311.50"></text></g><g><title>benchmark::clear_dirty_flags (6,602,478 samples, 0.53%)</title><rect x="70.9663%" y="3285" width="0.5260%" height="15" fill="rgb(248,81,50)" fg:x="890858217" fg:w="6602478"/><text x="71.2163%" y="3295.50"></text></g><g><title>benchmark::clear_dirty_flags (6,602,478 samples, 0.53%)</title><rect x="70.9663%" y="3269" width="0.5260%" height="15" fill="rgb(214,120,4)" fg:x="890858217" fg:w="6602478"/><text x="71.2163%" y="3279.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3,261,832 samples, 0.26%)</title><rect x="71.2325%" y="3253" width="0.2598%" height="15" fill="rgb(208,179,34)" fg:x="894198863" fg:w="3261832"/><text x="71.4825%" y="3263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,261,832 samples, 0.26%)</title><rect x="71.2325%" y="3237" width="0.2598%" height="15" fill="rgb(227,140,7)" fg:x="894198863" fg:w="3261832"/><text x="71.4825%" y="3247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,261,832 samples, 0.26%)</title><rect x="71.2325%" y="3221" width="0.2598%" height="15" fill="rgb(214,22,6)" fg:x="894198863" fg:w="3261832"/><text x="71.4825%" y="3231.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3541" width="0.2604%" height="15" fill="rgb(207,137,27)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3525" width="0.2604%" height="15" fill="rgb(210,8,46)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3535.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3509" width="0.2604%" height="15" fill="rgb(240,16,54)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3519.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3493" width="0.2604%" height="15" fill="rgb(211,209,29)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3503.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3477" width="0.2604%" height="15" fill="rgb(226,228,24)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3487.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3461" width="0.2604%" height="15" fill="rgb(222,84,9)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3471.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3445" width="0.2604%" height="15" fill="rgb(234,203,30)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3455.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3429" width="0.2604%" height="15" fill="rgb(238,109,14)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3413" width="0.2604%" height="15" fill="rgb(233,206,34)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3423.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3397" width="0.2604%" height="15" fill="rgb(220,167,47)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3407.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3381" width="0.2604%" height="15" fill="rgb(238,105,10)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3391.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3365" width="0.2604%" height="15" fill="rgb(213,227,17)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3375.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3349" width="0.2604%" height="15" fill="rgb(217,132,38)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3359.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3333" width="0.2604%" height="15" fill="rgb(242,146,4)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3343.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3317" width="0.2604%" height="15" fill="rgb(212,61,9)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3301" width="0.2604%" height="15" fill="rgb(247,126,22)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3311.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3285" width="0.2604%" height="15" fill="rgb(220,196,2)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3295.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3269" width="0.2604%" height="15" fill="rgb(208,46,4)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3279.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3253" width="0.2604%" height="15" fill="rgb(252,104,46)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3263.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3237" width="0.2604%" height="15" fill="rgb(237,152,48)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3247.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3221" width="0.2604%" height="15" fill="rgb(221,59,37)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3231.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3205" width="0.2604%" height="15" fill="rgb(209,202,51)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3189" width="0.2604%" height="15" fill="rgb(228,81,30)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3199.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3173" width="0.2604%" height="15" fill="rgb(227,42,39)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3183.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3157" width="0.2604%" height="15" fill="rgb(221,26,2)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3167.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3141" width="0.2604%" height="15" fill="rgb(254,61,31)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3151.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3125" width="0.2604%" height="15" fill="rgb(222,173,38)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3135.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3109" width="0.2604%" height="15" fill="rgb(218,50,12)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3119.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3093" width="0.2604%" height="15" fill="rgb(223,88,40)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3077" width="0.2604%" height="15" fill="rgb(237,54,19)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3087.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3061" width="0.2604%" height="15" fill="rgb(251,129,25)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3045" width="0.2604%" height="15" fill="rgb(238,97,19)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3029" width="0.2604%" height="15" fill="rgb(240,169,18)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3039.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="3013" width="0.2604%" height="15" fill="rgb(230,187,49)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3023.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2997" width="0.2604%" height="15" fill="rgb(209,44,26)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="3007.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2981" width="0.2604%" height="15" fill="rgb(244,0,6)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2965" width="0.2604%" height="15" fill="rgb(248,18,21)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2975.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2949" width="0.2604%" height="15" fill="rgb(245,180,19)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2933" width="0.2604%" height="15" fill="rgb(252,118,36)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2917" width="0.2604%" height="15" fill="rgb(210,224,19)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2927.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2901" width="0.2604%" height="15" fill="rgb(218,30,24)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2911.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2885" width="0.2604%" height="15" fill="rgb(219,75,50)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2895.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2869" width="0.2604%" height="15" fill="rgb(234,72,50)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2853" width="0.2604%" height="15" fill="rgb(219,100,48)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2863.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2837" width="0.2604%" height="15" fill="rgb(253,5,41)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2821" width="0.2604%" height="15" fill="rgb(247,181,11)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2805" width="0.2604%" height="15" fill="rgb(222,223,25)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2815.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2789" width="0.2604%" height="15" fill="rgb(214,198,28)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2799.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2773" width="0.2604%" height="15" fill="rgb(230,46,43)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2783.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2757" width="0.2604%" height="15" fill="rgb(233,65,53)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2741" width="0.2604%" height="15" fill="rgb(221,121,27)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2751.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2725" width="0.2604%" height="15" fill="rgb(247,70,47)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2709" width="0.2604%" height="15" fill="rgb(228,85,35)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2693" width="0.2604%" height="15" fill="rgb(209,50,18)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2703.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2677" width="0.2604%" height="15" fill="rgb(250,19,35)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2687.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2661" width="0.2604%" height="15" fill="rgb(253,107,29)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2671.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2645" width="0.2604%" height="15" fill="rgb(252,179,29)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2629" width="0.2604%" height="15" fill="rgb(238,194,6)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2639.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2613" width="0.2604%" height="15" fill="rgb(238,164,29)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2597" width="0.2604%" height="15" fill="rgb(224,25,9)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2581" width="0.2604%" height="15" fill="rgb(244,153,23)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2565" width="0.2604%" height="15" fill="rgb(212,203,14)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2575.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2549" width="0.2604%" height="15" fill="rgb(220,164,20)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2559.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2533" width="0.2604%" height="15" fill="rgb(222,203,48)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2517" width="0.2604%" height="15" fill="rgb(215,159,22)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2527.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2501" width="0.2604%" height="15" fill="rgb(216,183,47)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2485" width="0.2604%" height="15" fill="rgb(229,195,25)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2469" width="0.2604%" height="15" fill="rgb(224,132,51)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2479.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2453" width="0.2604%" height="15" fill="rgb(240,63,7)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2437" width="0.2604%" height="15" fill="rgb(249,182,41)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2447.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2421" width="0.2604%" height="15" fill="rgb(243,47,26)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2405" width="0.2604%" height="15" fill="rgb(233,48,2)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2415.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2389" width="0.2604%" height="15" fill="rgb(244,165,34)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2373" width="0.2604%" height="15" fill="rgb(207,89,7)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2357" width="0.2604%" height="15" fill="rgb(244,117,36)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2367.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2341" width="0.2604%" height="15" fill="rgb(226,144,34)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2351.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2325" width="0.2604%" height="15" fill="rgb(213,23,19)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2335.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2309" width="0.2604%" height="15" fill="rgb(217,75,12)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2293" width="0.2604%" height="15" fill="rgb(224,159,17)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2303.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2277" width="0.2604%" height="15" fill="rgb(217,118,1)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2261" width="0.2604%" height="15" fill="rgb(232,180,48)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2245" width="0.2604%" height="15" fill="rgb(230,27,33)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2255.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2229" width="0.2604%" height="15" fill="rgb(205,31,21)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2239.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2213" width="0.2604%" height="15" fill="rgb(253,59,4)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2223.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2197" width="0.2604%" height="15" fill="rgb(224,201,9)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2181" width="0.2604%" height="15" fill="rgb(229,206,30)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2191.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2165" width="0.2604%" height="15" fill="rgb(212,67,47)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2149" width="0.2604%" height="15" fill="rgb(211,96,50)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2159.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2133" width="0.2604%" height="15" fill="rgb(252,114,18)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2143.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2117" width="0.2604%" height="15" fill="rgb(223,58,37)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2127.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2101" width="0.2604%" height="15" fill="rgb(237,70,4)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2111.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2085" width="0.2604%" height="15" fill="rgb(244,85,46)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2095.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2069" width="0.2604%" height="15" fill="rgb(223,39,52)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2079.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2053" width="0.2604%" height="15" fill="rgb(218,200,14)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2063.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2037" width="0.2604%" height="15" fill="rgb(208,171,16)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2047.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2021" width="0.2604%" height="15" fill="rgb(234,200,18)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2031.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="2005" width="0.2604%" height="15" fill="rgb(228,45,11)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="2015.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="1989" width="0.2604%" height="15" fill="rgb(237,182,11)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="1999.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="1973" width="0.2604%" height="15" fill="rgb(241,175,49)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="1957" width="0.2604%" height="15" fill="rgb(247,38,35)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="1967.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="1941" width="0.2604%" height="15" fill="rgb(228,39,49)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="1925" width="0.2604%" height="15" fill="rgb(226,101,26)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="1935.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="1909" width="0.2604%" height="15" fill="rgb(206,141,19)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="1919.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="1893" width="0.2604%" height="15" fill="rgb(211,200,13)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="1903.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="1877" width="0.2604%" height="15" fill="rgb(241,121,6)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="1887.50"></text></g><g><title>benchmark::count_nodes (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="1861" width="0.2604%" height="15" fill="rgb(234,221,29)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="1845" width="0.2604%" height="15" fill="rgb(229,136,5)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (3,269,442 samples, 0.26%)</title><rect x="71.4923%" y="1829" width="0.2604%" height="15" fill="rgb(238,36,11)" fg:x="897460695" fg:w="3269442"/><text x="71.7423%" y="1839.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (3,312,824 samples, 0.26%)</title><rect x="71.7527%" y="3477" width="0.2639%" height="15" fill="rgb(251,55,41)" fg:x="900730137" fg:w="3312824"/><text x="72.0027%" y="3487.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_node_generated_bitvector_incremental (6,622,428 samples, 0.53%)</title><rect x="71.7527%" y="3493" width="0.5275%" height="15" fill="rgb(242,34,40)" fg:x="900730137" fg:w="6622428"/><text x="72.0027%" y="3503.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::matches_tag_id (3,309,604 samples, 0.26%)</title><rect x="72.0166%" y="3477" width="0.2636%" height="15" fill="rgb(215,42,17)" fg:x="904042961" fg:w="3309604"/><text x="72.2666%" y="3487.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::get_node_tag_id (3,309,604 samples, 0.26%)</title><rect x="72.0166%" y="3461" width="0.2636%" height="15" fill="rgb(207,44,46)" fg:x="904042961" fg:w="3309604"/><text x="72.2666%" y="3471.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,309,604 samples, 0.26%)</title><rect x="72.0166%" y="3445" width="0.2636%" height="15" fill="rgb(211,206,28)" fg:x="904042961" fg:w="3309604"/><text x="72.2666%" y="3455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,309,604 samples, 0.26%)</title><rect x="72.0166%" y="3429" width="0.2636%" height="15" fill="rgb(237,167,16)" fg:x="904042961" fg:w="3309604"/><text x="72.2666%" y="3439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,309,604 samples, 0.26%)</title><rect x="72.0166%" y="3413" width="0.2636%" height="15" fill="rgb(233,66,6)" fg:x="904042961" fg:w="3309604"/><text x="72.2666%" y="3423.50"></text></g><g><title>hashbrown::map::make_hash (3,309,604 samples, 0.26%)</title><rect x="72.0166%" y="3397" width="0.2636%" height="15" fill="rgb(246,123,29)" fg:x="904042961" fg:w="3309604"/><text x="72.2666%" y="3407.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,309,604 samples, 0.26%)</title><rect x="72.0166%" y="3381" width="0.2636%" height="15" fill="rgb(209,62,40)" fg:x="904042961" fg:w="3309604"/><text x="72.2666%" y="3391.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (3,309,604 samples, 0.26%)</title><rect x="72.0166%" y="3365" width="0.2636%" height="15" fill="rgb(218,4,25)" fg:x="904042961" fg:w="3309604"/><text x="72.2666%" y="3375.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3,309,604 samples, 0.26%)</title><rect x="72.0166%" y="3349" width="0.2636%" height="15" fill="rgb(253,91,49)" fg:x="904042961" fg:w="3309604"/><text x="72.2666%" y="3359.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3,309,604 samples, 0.26%)</title><rect x="72.0166%" y="3333" width="0.2636%" height="15" fill="rgb(228,155,29)" fg:x="904042961" fg:w="3309604"/><text x="72.2666%" y="3343.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3,309,604 samples, 0.26%)</title><rect x="72.0166%" y="3317" width="0.2636%" height="15" fill="rgb(243,57,37)" fg:x="904042961" fg:w="3309604"/><text x="72.2666%" y="3327.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (6,608,424 samples, 0.53%)</title><rect x="72.2803%" y="3349" width="0.5264%" height="15" fill="rgb(244,167,17)" fg:x="907352565" fg:w="6608424"/><text x="72.5303%" y="3359.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6,608,424 samples, 0.53%)</title><rect x="72.2803%" y="3333" width="0.5264%" height="15" fill="rgb(207,181,38)" fg:x="907352565" fg:w="6608424"/><text x="72.5303%" y="3343.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6,608,424 samples, 0.53%)</title><rect x="72.2803%" y="3317" width="0.5264%" height="15" fill="rgb(211,8,23)" fg:x="907352565" fg:w="6608424"/><text x="72.5303%" y="3327.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3,256,531 samples, 0.26%)</title><rect x="72.5473%" y="3301" width="0.2594%" height="15" fill="rgb(235,11,44)" fg:x="910704458" fg:w="3256531"/><text x="72.7973%" y="3311.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3,327,219 samples, 0.27%)</title><rect x="72.8067%" y="3253" width="0.2650%" height="15" fill="rgb(248,18,52)" fg:x="913960989" fg:w="3327219"/><text x="73.0567%" y="3263.50"></text></g><g><title>hashbrown::map::make_hash (13,300,753 samples, 1.06%)</title><rect x="72.2803%" y="3381" width="1.0595%" height="15" fill="rgb(208,4,7)" fg:x="907352565" fg:w="13300753"/><text x="72.5303%" y="3391.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13,300,753 samples, 1.06%)</title><rect x="72.2803%" y="3365" width="1.0595%" height="15" fill="rgb(240,17,39)" fg:x="907352565" fg:w="13300753"/><text x="72.5303%" y="3375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6,692,329 samples, 0.53%)</title><rect x="72.8067%" y="3349" width="0.5331%" height="15" fill="rgb(207,170,3)" fg:x="913960989" fg:w="6692329"/><text x="73.0567%" y="3359.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6,692,329 samples, 0.53%)</title><rect x="72.8067%" y="3333" width="0.5331%" height="15" fill="rgb(236,100,52)" fg:x="913960989" fg:w="6692329"/><text x="73.0567%" y="3343.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (6,692,329 samples, 0.53%)</title><rect x="72.8067%" y="3317" width="0.5331%" height="15" fill="rgb(246,78,51)" fg:x="913960989" fg:w="6692329"/><text x="73.0567%" y="3327.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (6,692,329 samples, 0.53%)</title><rect x="72.8067%" y="3301" width="0.5331%" height="15" fill="rgb(211,17,15)" fg:x="913960989" fg:w="6692329"/><text x="73.0567%" y="3311.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (6,692,329 samples, 0.53%)</title><rect x="72.8067%" y="3285" width="0.5331%" height="15" fill="rgb(209,59,46)" fg:x="913960989" fg:w="6692329"/><text x="73.0567%" y="3295.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6,692,329 samples, 0.53%)</title><rect x="72.8067%" y="3269" width="0.5331%" height="15" fill="rgb(210,92,25)" fg:x="913960989" fg:w="6692329"/><text x="73.0567%" y="3279.50"></text></g><g><title>core::hash::sip::u8to64_le (3,365,110 samples, 0.27%)</title><rect x="73.0718%" y="3253" width="0.2681%" height="15" fill="rgb(238,174,52)" fg:x="917288208" fg:w="3365110"/><text x="73.3218%" y="3263.50"></text></g><g><title>benchmark::invoke_bitvector_layout (23,273,137 samples, 1.85%)</title><rect x="71.7527%" y="3541" width="1.8540%" height="15" fill="rgb(230,73,7)" fg:x="900730137" fg:w="23273137"/><text x="72.0027%" y="3551.50">b..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_bitvector_incremental_with_stats (23,273,137 samples, 1.85%)</title><rect x="71.7527%" y="3525" width="1.8540%" height="15" fill="rgb(243,124,40)" fg:x="900730137" fg:w="23273137"/><text x="72.0027%" y="3535.50">c..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_recursive_bitvector_incremental (23,273,137 samples, 1.85%)</title><rect x="71.7527%" y="3509" width="1.8540%" height="15" fill="rgb(244,170,11)" fg:x="900730137" fg:w="23273137"/><text x="72.0027%" y="3519.50">c..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_recursive_bitvector_incremental (16,650,709 samples, 1.33%)</title><rect x="72.2803%" y="3493" width="1.3264%" height="15" fill="rgb(207,114,54)" fg:x="907352565" fg:w="16650709"/><text x="72.5303%" y="3503.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_node_generated_bitvector_incremental (16,650,709 samples, 1.33%)</title><rect x="72.2803%" y="3477" width="1.3264%" height="15" fill="rgb(205,42,20)" fg:x="907352565" fg:w="16650709"/><text x="72.5303%" y="3487.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::matches_class_id (16,650,709 samples, 1.33%)</title><rect x="72.2803%" y="3461" width="1.3264%" height="15" fill="rgb(230,30,28)" fg:x="907352565" fg:w="16650709"/><text x="72.5303%" y="3471.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::node_has_class_id (16,650,709 samples, 1.33%)</title><rect x="72.2803%" y="3445" width="1.3264%" height="15" fill="rgb(205,73,54)" fg:x="907352565" fg:w="16650709"/><text x="72.5303%" y="3455.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (16,650,709 samples, 1.33%)</title><rect x="72.2803%" y="3429" width="1.3264%" height="15" fill="rgb(254,227,23)" fg:x="907352565" fg:w="16650709"/><text x="72.5303%" y="3439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (16,650,709 samples, 1.33%)</title><rect x="72.2803%" y="3413" width="1.3264%" height="15" fill="rgb(228,202,34)" fg:x="907352565" fg:w="16650709"/><text x="72.5303%" y="3423.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16,650,709 samples, 1.33%)</title><rect x="72.2803%" y="3397" width="1.3264%" height="15" fill="rgb(222,225,37)" fg:x="907352565" fg:w="16650709"/><text x="72.5303%" y="3407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3,349,956 samples, 0.27%)</title><rect x="73.3398%" y="3381" width="0.2669%" height="15" fill="rgb(221,14,54)" fg:x="920653318" fg:w="3349956"/><text x="73.5898%" y="3391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,349,956 samples, 0.27%)</title><rect x="73.3398%" y="3365" width="0.2669%" height="15" fill="rgb(254,102,2)" fg:x="920653318" fg:w="3349956"/><text x="73.5898%" y="3375.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3,349,956 samples, 0.27%)</title><rect x="73.3398%" y="3349" width="0.2669%" height="15" fill="rgb(232,104,17)" fg:x="920653318" fg:w="3349956"/><text x="73.5898%" y="3359.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6,576,497 samples, 0.52%)</title><rect x="73.6067%" y="3301" width="0.5239%" height="15" fill="rgb(250,220,14)" fg:x="924003274" fg:w="6576497"/><text x="73.8567%" y="3311.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6,576,497 samples, 0.52%)</title><rect x="73.6067%" y="3285" width="0.5239%" height="15" fill="rgb(241,158,9)" fg:x="924003274" fg:w="6576497"/><text x="73.8567%" y="3295.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (13,026,684 samples, 1.04%)</title><rect x="73.6067%" y="3349" width="1.0377%" height="15" fill="rgb(246,9,43)" fg:x="924003274" fg:w="13026684"/><text x="73.8567%" y="3359.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13,026,684 samples, 1.04%)</title><rect x="73.6067%" y="3333" width="1.0377%" height="15" fill="rgb(206,73,33)" fg:x="924003274" fg:w="13026684"/><text x="73.8567%" y="3343.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13,026,684 samples, 1.04%)</title><rect x="73.6067%" y="3317" width="1.0377%" height="15" fill="rgb(222,79,8)" fg:x="924003274" fg:w="13026684"/><text x="73.8567%" y="3327.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6,450,187 samples, 0.51%)</title><rect x="74.1306%" y="3301" width="0.5138%" height="15" fill="rgb(234,8,54)" fg:x="930579771" fg:w="6450187"/><text x="74.3806%" y="3311.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6,450,187 samples, 0.51%)</title><rect x="74.1306%" y="3285" width="0.5138%" height="15" fill="rgb(209,134,38)" fg:x="930579771" fg:w="6450187"/><text x="74.3806%" y="3295.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3,270,118 samples, 0.26%)</title><rect x="74.6444%" y="3237" width="0.2605%" height="15" fill="rgb(230,127,29)" fg:x="937029958" fg:w="3270118"/><text x="74.8944%" y="3247.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6,553,814 samples, 0.52%)</title><rect x="74.6444%" y="3253" width="0.5221%" height="15" fill="rgb(242,44,41)" fg:x="937029958" fg:w="6553814"/><text x="74.8944%" y="3263.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3,283,696 samples, 0.26%)</title><rect x="74.9049%" y="3237" width="0.2616%" height="15" fill="rgb(222,56,43)" fg:x="940300076" fg:w="3283696"/><text x="75.1549%" y="3247.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9,922,512 samples, 0.79%)</title><rect x="74.6444%" y="3269" width="0.7904%" height="15" fill="rgb(238,39,47)" fg:x="937029958" fg:w="9922512"/><text x="74.8944%" y="3279.50"></text></g><g><title>core::hash::sip::u8to64_le (3,368,698 samples, 0.27%)</title><rect x="75.1665%" y="3253" width="0.2684%" height="15" fill="rgb(226,79,43)" fg:x="943583772" fg:w="3368698"/><text x="75.4165%" y="3263.50"></text></g><g><title>hashbrown::map::make_hash (29,389,245 samples, 2.34%)</title><rect x="73.6067%" y="3381" width="2.3412%" height="15" fill="rgb(242,105,53)" fg:x="924003274" fg:w="29389245"/><text x="73.8567%" y="3391.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (29,389,245 samples, 2.34%)</title><rect x="73.6067%" y="3365" width="2.3412%" height="15" fill="rgb(251,132,46)" fg:x="924003274" fg:w="29389245"/><text x="73.8567%" y="3375.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (16,362,561 samples, 1.30%)</title><rect x="74.6444%" y="3349" width="1.3035%" height="15" fill="rgb(231,77,14)" fg:x="937029958" fg:w="16362561"/><text x="74.8944%" y="3359.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (16,362,561 samples, 1.30%)</title><rect x="74.6444%" y="3333" width="1.3035%" height="15" fill="rgb(240,135,9)" fg:x="937029958" fg:w="16362561"/><text x="74.8944%" y="3343.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (16,362,561 samples, 1.30%)</title><rect x="74.6444%" y="3317" width="1.3035%" height="15" fill="rgb(248,109,14)" fg:x="937029958" fg:w="16362561"/><text x="74.8944%" y="3327.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (16,362,561 samples, 1.30%)</title><rect x="74.6444%" y="3301" width="1.3035%" height="15" fill="rgb(227,146,52)" fg:x="937029958" fg:w="16362561"/><text x="74.8944%" y="3311.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (16,362,561 samples, 1.30%)</title><rect x="74.6444%" y="3285" width="1.3035%" height="15" fill="rgb(232,54,3)" fg:x="937029958" fg:w="16362561"/><text x="74.8944%" y="3295.50"></text></g><g><title>core::hash::Hasher::write_u8 (6,440,049 samples, 0.51%)</title><rect x="75.4348%" y="3269" width="0.5130%" height="15" fill="rgb(229,201,43)" fg:x="946952470" fg:w="6440049"/><text x="75.6848%" y="3279.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6,440,049 samples, 0.51%)</title><rect x="75.4348%" y="3253" width="0.5130%" height="15" fill="rgb(252,161,33)" fg:x="946952470" fg:w="6440049"/><text x="75.6848%" y="3263.50"></text></g><g><title>core::hash::sip::u8to64_le (3,271,758 samples, 0.26%)</title><rect x="75.6872%" y="3237" width="0.2606%" height="15" fill="rgb(226,146,40)" fg:x="950120761" fg:w="3271758"/><text x="75.9372%" y="3247.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::matches_class_id (32,661,170 samples, 2.60%)</title><rect x="73.6067%" y="3461" width="2.6018%" height="15" fill="rgb(219,47,25)" fg:x="924003274" fg:w="32661170"/><text x="73.8567%" y="3471.50">cs..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::node_has_class_id (32,661,170 samples, 2.60%)</title><rect x="73.6067%" y="3445" width="2.6018%" height="15" fill="rgb(250,135,13)" fg:x="924003274" fg:w="32661170"/><text x="73.8567%" y="3455.50">cs..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (32,661,170 samples, 2.60%)</title><rect x="73.6067%" y="3429" width="2.6018%" height="15" fill="rgb(219,229,18)" fg:x="924003274" fg:w="32661170"/><text x="73.8567%" y="3439.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (32,661,170 samples, 2.60%)</title><rect x="73.6067%" y="3413" width="2.6018%" height="15" fill="rgb(217,152,27)" fg:x="924003274" fg:w="32661170"/><text x="73.8567%" y="3423.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (32,661,170 samples, 2.60%)</title><rect x="73.6067%" y="3397" width="2.6018%" height="15" fill="rgb(225,71,47)" fg:x="924003274" fg:w="32661170"/><text x="73.8567%" y="3407.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3,271,925 samples, 0.26%)</title><rect x="75.9479%" y="3381" width="0.2606%" height="15" fill="rgb(220,139,14)" fg:x="953392519" fg:w="3271925"/><text x="76.1979%" y="3391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,271,925 samples, 0.26%)</title><rect x="75.9479%" y="3365" width="0.2606%" height="15" fill="rgb(247,54,32)" fg:x="953392519" fg:w="3271925"/><text x="76.1979%" y="3375.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3,271,925 samples, 0.26%)</title><rect x="75.9479%" y="3349" width="0.2606%" height="15" fill="rgb(252,131,39)" fg:x="953392519" fg:w="3271925"/><text x="76.1979%" y="3359.50"></text></g><g><title>core::intrinsics::likely (3,271,925 samples, 0.26%)</title><rect x="75.9479%" y="3333" width="0.2606%" height="15" fill="rgb(210,108,39)" fg:x="953392519" fg:w="3271925"/><text x="76.1979%" y="3343.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (3,358,812 samples, 0.27%)</title><rect x="76.2085%" y="3301" width="0.2676%" height="15" fill="rgb(205,23,29)" fg:x="956664444" fg:w="3358812"/><text x="76.4585%" y="3311.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3,358,812 samples, 0.27%)</title><rect x="76.2085%" y="3285" width="0.2676%" height="15" fill="rgb(246,139,46)" fg:x="956664444" fg:w="3358812"/><text x="76.4585%" y="3295.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,358,812 samples, 0.27%)</title><rect x="76.2085%" y="3269" width="0.2676%" height="15" fill="rgb(250,81,26)" fg:x="956664444" fg:w="3358812"/><text x="76.4585%" y="3279.50"></text></g><g><title>benchmark::invoke_trivector_layout (39,323,862 samples, 3.13%)</title><rect x="73.6067%" y="3541" width="3.1326%" height="15" fill="rgb(214,104,7)" fg:x="924003274" fg:w="39323862"/><text x="73.8567%" y="3551.50">ben..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_tree_incremental_with_stats (39,323,862 samples, 3.13%)</title><rect x="73.6067%" y="3525" width="3.1326%" height="15" fill="rgb(233,189,8)" fg:x="924003274" fg:w="39323862"/><text x="73.8567%" y="3535.50">css..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_tree_recursive_incremental (39,323,862 samples, 3.13%)</title><rect x="73.6067%" y="3509" width="3.1326%" height="15" fill="rgb(228,141,17)" fg:x="924003274" fg:w="39323862"/><text x="73.8567%" y="3519.50">css..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_tree_recursive_incremental (39,323,862 samples, 3.13%)</title><rect x="73.6067%" y="3493" width="3.1326%" height="15" fill="rgb(247,157,1)" fg:x="924003274" fg:w="39323862"/><text x="73.8567%" y="3503.50">css..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_incremental (39,323,862 samples, 3.13%)</title><rect x="73.6067%" y="3477" width="3.1326%" height="15" fill="rgb(249,225,5)" fg:x="924003274" fg:w="39323862"/><text x="73.8567%" y="3487.50">css..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::matches_id_id (6,662,692 samples, 0.53%)</title><rect x="76.2085%" y="3461" width="0.5308%" height="15" fill="rgb(242,55,13)" fg:x="956664444" fg:w="6662692"/><text x="76.4585%" y="3471.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::get_node_id_id (6,662,692 samples, 0.53%)</title><rect x="76.2085%" y="3445" width="0.5308%" height="15" fill="rgb(230,49,50)" fg:x="956664444" fg:w="6662692"/><text x="76.4585%" y="3455.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (6,662,692 samples, 0.53%)</title><rect x="76.2085%" y="3429" width="0.5308%" height="15" fill="rgb(241,111,38)" fg:x="956664444" fg:w="6662692"/><text x="76.4585%" y="3439.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::get_node_id_id::_{{closure}} (6,662,692 samples, 0.53%)</title><rect x="76.2085%" y="3413" width="0.5308%" height="15" fill="rgb(252,155,4)" fg:x="956664444" fg:w="6662692"/><text x="76.4585%" y="3423.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6,662,692 samples, 0.53%)</title><rect x="76.2085%" y="3397" width="0.5308%" height="15" fill="rgb(212,69,32)" fg:x="956664444" fg:w="6662692"/><text x="76.4585%" y="3407.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6,662,692 samples, 0.53%)</title><rect x="76.2085%" y="3381" width="0.5308%" height="15" fill="rgb(243,107,47)" fg:x="956664444" fg:w="6662692"/><text x="76.4585%" y="3391.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6,662,692 samples, 0.53%)</title><rect x="76.2085%" y="3365" width="0.5308%" height="15" fill="rgb(247,130,12)" fg:x="956664444" fg:w="6662692"/><text x="76.4585%" y="3375.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6,662,692 samples, 0.53%)</title><rect x="76.2085%" y="3349" width="0.5308%" height="15" fill="rgb(233,74,16)" fg:x="956664444" fg:w="6662692"/><text x="76.4585%" y="3359.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6,662,692 samples, 0.53%)</title><rect x="76.2085%" y="3333" width="0.5308%" height="15" fill="rgb(208,58,18)" fg:x="956664444" fg:w="6662692"/><text x="76.4585%" y="3343.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6,662,692 samples, 0.53%)</title><rect x="76.2085%" y="3317" width="0.5308%" height="15" fill="rgb(242,225,1)" fg:x="956664444" fg:w="6662692"/><text x="76.4585%" y="3327.50"></text></g><g><title>hashbrown::control::tag::Tag::full (3,303,880 samples, 0.26%)</title><rect x="76.4761%" y="3301" width="0.2632%" height="15" fill="rgb(249,39,40)" fg:x="960023256" fg:w="3303880"/><text x="76.7261%" y="3311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,263,112 samples, 0.26%)</title><rect x="76.7393%" y="3077" width="0.2599%" height="15" fill="rgb(207,72,44)" fg:x="963327136" fg:w="3263112"/><text x="76.9893%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,263,112 samples, 0.26%)</title><rect x="76.7393%" y="3061" width="0.2599%" height="15" fill="rgb(215,193,12)" fg:x="963327136" fg:w="3263112"/><text x="76.9893%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,263,112 samples, 0.26%)</title><rect x="76.7393%" y="3045" width="0.2599%" height="15" fill="rgb(248,41,39)" fg:x="963327136" fg:w="3263112"/><text x="76.9893%" y="3055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,263,112 samples, 0.26%)</title><rect x="76.7393%" y="3029" width="0.2599%" height="15" fill="rgb(253,85,4)" fg:x="963327136" fg:w="3263112"/><text x="76.9893%" y="3039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,263,112 samples, 0.26%)</title><rect x="76.7393%" y="3013" width="0.2599%" height="15" fill="rgb(243,70,31)" fg:x="963327136" fg:w="3263112"/><text x="76.9893%" y="3023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,263,112 samples, 0.26%)</title><rect x="76.7393%" y="2997" width="0.2599%" height="15" fill="rgb(253,195,26)" fg:x="963327136" fg:w="3263112"/><text x="76.9893%" y="3007.50"></text></g><g><title>alloc::alloc::dealloc (3,263,112 samples, 0.26%)</title><rect x="76.7393%" y="2981" width="0.2599%" height="15" fill="rgb(243,42,11)" fg:x="963327136" fg:w="3263112"/><text x="76.9893%" y="2991.50"></text></g><g><title>cfree (3,263,112 samples, 0.26%)</title><rect x="76.7393%" y="2965" width="0.2599%" height="15" fill="rgb(239,66,17)" fg:x="963327136" fg:w="3263112"/><text x="76.9893%" y="2975.50"></text></g><g><title>[libc.so.6] (3,263,112 samples, 0.26%)</title><rect x="76.7393%" y="2949" width="0.2599%" height="15" fill="rgb(217,132,21)" fg:x="963327136" fg:w="3263112"/><text x="76.9893%" y="2959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2501" width="0.2605%" height="15" fill="rgb(252,202,21)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2485" width="0.2605%" height="15" fill="rgb(233,98,36)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2469" width="0.2605%" height="15" fill="rgb(216,153,54)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2453" width="0.2605%" height="15" fill="rgb(250,99,7)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2437" width="0.2605%" height="15" fill="rgb(207,56,50)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2421" width="0.2605%" height="15" fill="rgb(244,61,34)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2405" width="0.2605%" height="15" fill="rgb(241,50,38)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2389" width="0.2605%" height="15" fill="rgb(212,166,30)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2373" width="0.2605%" height="15" fill="rgb(249,127,32)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2383.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2357" width="0.2605%" height="15" fill="rgb(209,103,0)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2367.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2341" width="0.2605%" height="15" fill="rgb(238,209,51)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2325" width="0.2605%" height="15" fill="rgb(237,56,23)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2309" width="0.2605%" height="15" fill="rgb(215,153,46)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2293" width="0.2605%" height="15" fill="rgb(224,49,31)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2277" width="0.2605%" height="15" fill="rgb(250,18,42)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2261" width="0.2605%" height="15" fill="rgb(215,176,39)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2245" width="0.2605%" height="15" fill="rgb(223,77,29)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2229" width="0.2605%" height="15" fill="rgb(234,94,52)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2213" width="0.2605%" height="15" fill="rgb(220,154,50)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2197" width="0.2605%" height="15" fill="rgb(212,11,10)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2207.50"></text></g><g><title>alloc::alloc::dealloc (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2181" width="0.2605%" height="15" fill="rgb(205,166,19)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2191.50"></text></g><g><title>cfree (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2165" width="0.2605%" height="15" fill="rgb(244,198,16)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2175.50"></text></g><g><title>[libc.so.6] (3,269,982 samples, 0.26%)</title><rect x="76.9992%" y="2149" width="0.2605%" height="15" fill="rgb(219,69,12)" fg:x="966590248" fg:w="3269982"/><text x="77.2492%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,956,195 samples, 0.79%)</title><rect x="76.9992%" y="2565" width="0.7931%" height="15" fill="rgb(245,30,7)" fg:x="966590248" fg:w="9956195"/><text x="77.2492%" y="2575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,956,195 samples, 0.79%)</title><rect x="76.9992%" y="2549" width="0.7931%" height="15" fill="rgb(218,221,48)" fg:x="966590248" fg:w="9956195"/><text x="77.2492%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,956,195 samples, 0.79%)</title><rect x="76.9992%" y="2533" width="0.7931%" height="15" fill="rgb(216,66,15)" fg:x="966590248" fg:w="9956195"/><text x="77.2492%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,956,195 samples, 0.79%)</title><rect x="76.9992%" y="2517" width="0.7931%" height="15" fill="rgb(226,122,50)" fg:x="966590248" fg:w="9956195"/><text x="77.2492%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (6,686,213 samples, 0.53%)</title><rect x="77.2597%" y="2501" width="0.5326%" height="15" fill="rgb(239,156,16)" fg:x="969860230" fg:w="6686213"/><text x="77.5097%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (6,686,213 samples, 0.53%)</title><rect x="77.2597%" y="2485" width="0.5326%" height="15" fill="rgb(224,27,38)" fg:x="969860230" fg:w="6686213"/><text x="77.5097%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (6,686,213 samples, 0.53%)</title><rect x="77.2597%" y="2469" width="0.5326%" height="15" fill="rgb(224,39,27)" fg:x="969860230" fg:w="6686213"/><text x="77.5097%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (6,686,213 samples, 0.53%)</title><rect x="77.2597%" y="2453" width="0.5326%" height="15" fill="rgb(215,92,29)" fg:x="969860230" fg:w="6686213"/><text x="77.5097%" y="2463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,686,213 samples, 0.53%)</title><rect x="77.2597%" y="2437" width="0.5326%" height="15" fill="rgb(207,159,16)" fg:x="969860230" fg:w="6686213"/><text x="77.5097%" y="2447.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (6,686,213 samples, 0.53%)</title><rect x="77.2597%" y="2421" width="0.5326%" height="15" fill="rgb(238,163,47)" fg:x="969860230" fg:w="6686213"/><text x="77.5097%" y="2431.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (6,686,213 samples, 0.53%)</title><rect x="77.2597%" y="2405" width="0.5326%" height="15" fill="rgb(219,91,49)" fg:x="969860230" fg:w="6686213"/><text x="77.5097%" y="2415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,686,213 samples, 0.53%)</title><rect x="77.2597%" y="2389" width="0.5326%" height="15" fill="rgb(227,167,31)" fg:x="969860230" fg:w="6686213"/><text x="77.5097%" y="2399.50"></text></g><g><title>alloc::alloc::dealloc (6,686,213 samples, 0.53%)</title><rect x="77.2597%" y="2373" width="0.5326%" height="15" fill="rgb(234,80,54)" fg:x="969860230" fg:w="6686213"/><text x="77.5097%" y="2383.50"></text></g><g><title>cfree (6,686,213 samples, 0.53%)</title><rect x="77.2597%" y="2357" width="0.5326%" height="15" fill="rgb(212,114,2)" fg:x="969860230" fg:w="6686213"/><text x="77.5097%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,344,219 samples, 0.27%)</title><rect x="77.7923%" y="2565" width="0.2664%" height="15" fill="rgb(234,50,24)" fg:x="976546443" fg:w="3344219"/><text x="78.0423%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,344,219 samples, 0.27%)</title><rect x="77.7923%" y="2549" width="0.2664%" height="15" fill="rgb(221,68,8)" fg:x="976546443" fg:w="3344219"/><text x="78.0423%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,344,219 samples, 0.27%)</title><rect x="77.7923%" y="2533" width="0.2664%" height="15" fill="rgb(254,180,31)" fg:x="976546443" fg:w="3344219"/><text x="78.0423%" y="2543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,344,219 samples, 0.27%)</title><rect x="77.7923%" y="2517" width="0.2664%" height="15" fill="rgb(247,130,50)" fg:x="976546443" fg:w="3344219"/><text x="78.0423%" y="2527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,344,219 samples, 0.27%)</title><rect x="77.7923%" y="2501" width="0.2664%" height="15" fill="rgb(211,109,4)" fg:x="976546443" fg:w="3344219"/><text x="78.0423%" y="2511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,344,219 samples, 0.27%)</title><rect x="77.7923%" y="2485" width="0.2664%" height="15" fill="rgb(238,50,21)" fg:x="976546443" fg:w="3344219"/><text x="78.0423%" y="2495.50"></text></g><g><title>alloc::alloc::dealloc (3,344,219 samples, 0.27%)</title><rect x="77.7923%" y="2469" width="0.2664%" height="15" fill="rgb(225,57,45)" fg:x="976546443" fg:w="3344219"/><text x="78.0423%" y="2479.50"></text></g><g><title>cfree (3,344,219 samples, 0.27%)</title><rect x="77.7923%" y="2453" width="0.2664%" height="15" fill="rgb(209,196,50)" fg:x="976546443" fg:w="3344219"/><text x="78.0423%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (16,588,170 samples, 1.32%)</title><rect x="76.9992%" y="2629" width="1.3214%" height="15" fill="rgb(242,140,13)" fg:x="966590248" fg:w="16588170"/><text x="77.2492%" y="2639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,588,170 samples, 1.32%)</title><rect x="76.9992%" y="2613" width="1.3214%" height="15" fill="rgb(217,111,7)" fg:x="966590248" fg:w="16588170"/><text x="77.2492%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (16,588,170 samples, 1.32%)</title><rect x="76.9992%" y="2597" width="1.3214%" height="15" fill="rgb(253,193,51)" fg:x="966590248" fg:w="16588170"/><text x="77.2492%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (16,588,170 samples, 1.32%)</title><rect x="76.9992%" y="2581" width="1.3214%" height="15" fill="rgb(252,70,29)" fg:x="966590248" fg:w="16588170"/><text x="77.2492%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,287,756 samples, 0.26%)</title><rect x="78.0587%" y="2565" width="0.2619%" height="15" fill="rgb(232,127,12)" fg:x="979890662" fg:w="3287756"/><text x="78.3087%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,287,756 samples, 0.26%)</title><rect x="78.0587%" y="2549" width="0.2619%" height="15" fill="rgb(211,180,21)" fg:x="979890662" fg:w="3287756"/><text x="78.3087%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,287,756 samples, 0.26%)</title><rect x="78.0587%" y="2533" width="0.2619%" height="15" fill="rgb(229,72,13)" fg:x="979890662" fg:w="3287756"/><text x="78.3087%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,287,756 samples, 0.26%)</title><rect x="78.0587%" y="2517" width="0.2619%" height="15" fill="rgb(240,211,49)" fg:x="979890662" fg:w="3287756"/><text x="78.3087%" y="2527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,287,756 samples, 0.26%)</title><rect x="78.0587%" y="2501" width="0.2619%" height="15" fill="rgb(219,149,40)" fg:x="979890662" fg:w="3287756"/><text x="78.3087%" y="2511.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,287,756 samples, 0.26%)</title><rect x="78.0587%" y="2485" width="0.2619%" height="15" fill="rgb(210,127,46)" fg:x="979890662" fg:w="3287756"/><text x="78.3087%" y="2495.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,287,756 samples, 0.26%)</title><rect x="78.0587%" y="2469" width="0.2619%" height="15" fill="rgb(220,106,7)" fg:x="979890662" fg:w="3287756"/><text x="78.3087%" y="2479.50"></text></g><g><title>hashbrown::raw::RawTableInner::allocation_info (3,287,756 samples, 0.26%)</title><rect x="78.0587%" y="2453" width="0.2619%" height="15" fill="rgb(249,31,22)" fg:x="979890662" fg:w="3287756"/><text x="78.3087%" y="2463.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (3,287,756 samples, 0.26%)</title><rect x="78.0587%" y="2437" width="0.2619%" height="15" fill="rgb(253,1,49)" fg:x="979890662" fg:w="3287756"/><text x="78.3087%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,272,456 samples, 0.26%)</title><rect x="78.3206%" y="2629" width="0.2607%" height="15" fill="rgb(227,144,33)" fg:x="983178418" fg:w="3272456"/><text x="78.5706%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,272,456 samples, 0.26%)</title><rect x="78.3206%" y="2613" width="0.2607%" height="15" fill="rgb(249,163,44)" fg:x="983178418" fg:w="3272456"/><text x="78.5706%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,272,456 samples, 0.26%)</title><rect x="78.3206%" y="2597" width="0.2607%" height="15" fill="rgb(234,15,39)" fg:x="983178418" fg:w="3272456"/><text x="78.5706%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,272,456 samples, 0.26%)</title><rect x="78.3206%" y="2581" width="0.2607%" height="15" fill="rgb(207,66,16)" fg:x="983178418" fg:w="3272456"/><text x="78.5706%" y="2591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,272,456 samples, 0.26%)</title><rect x="78.3206%" y="2565" width="0.2607%" height="15" fill="rgb(233,112,24)" fg:x="983178418" fg:w="3272456"/><text x="78.5706%" y="2575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,272,456 samples, 0.26%)</title><rect x="78.3206%" y="2549" width="0.2607%" height="15" fill="rgb(230,90,22)" fg:x="983178418" fg:w="3272456"/><text x="78.5706%" y="2559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,272,456 samples, 0.26%)</title><rect x="78.3206%" y="2533" width="0.2607%" height="15" fill="rgb(229,61,13)" fg:x="983178418" fg:w="3272456"/><text x="78.5706%" y="2543.50"></text></g><g><title>alloc::alloc::dealloc (3,272,456 samples, 0.26%)</title><rect x="78.3206%" y="2517" width="0.2607%" height="15" fill="rgb(225,57,24)" fg:x="983178418" fg:w="3272456"/><text x="78.5706%" y="2527.50"></text></g><g><title>cfree (3,272,456 samples, 0.26%)</title><rect x="78.3206%" y="2501" width="0.2607%" height="15" fill="rgb(208,169,48)" fg:x="983178418" fg:w="3272456"/><text x="78.5706%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (6,670,624 samples, 0.53%)</title><rect x="78.5813%" y="2629" width="0.5314%" height="15" fill="rgb(244,218,51)" fg:x="986450874" fg:w="6670624"/><text x="78.8313%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6,670,624 samples, 0.53%)</title><rect x="78.5813%" y="2613" width="0.5314%" height="15" fill="rgb(214,148,10)" fg:x="986450874" fg:w="6670624"/><text x="78.8313%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6,670,624 samples, 0.53%)</title><rect x="78.5813%" y="2597" width="0.5314%" height="15" fill="rgb(225,174,27)" fg:x="986450874" fg:w="6670624"/><text x="78.8313%" y="2607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,670,624 samples, 0.53%)</title><rect x="78.5813%" y="2581" width="0.5314%" height="15" fill="rgb(230,96,26)" fg:x="986450874" fg:w="6670624"/><text x="78.8313%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,670,624 samples, 0.53%)</title><rect x="78.5813%" y="2565" width="0.5314%" height="15" fill="rgb(232,10,30)" fg:x="986450874" fg:w="6670624"/><text x="78.8313%" y="2575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,670,624 samples, 0.53%)</title><rect x="78.5813%" y="2549" width="0.5314%" height="15" fill="rgb(222,8,50)" fg:x="986450874" fg:w="6670624"/><text x="78.8313%" y="2559.50"></text></g><g><title>alloc::alloc::dealloc (6,670,624 samples, 0.53%)</title><rect x="78.5813%" y="2533" width="0.5314%" height="15" fill="rgb(213,81,27)" fg:x="986450874" fg:w="6670624"/><text x="78.8313%" y="2543.50"></text></g><g><title>cfree (6,670,624 samples, 0.53%)</title><rect x="78.5813%" y="2517" width="0.5314%" height="15" fill="rgb(245,50,10)" fg:x="986450874" fg:w="6670624"/><text x="78.8313%" y="2527.50"></text></g><g><title>[libc.so.6] (3,305,779 samples, 0.26%)</title><rect x="78.8494%" y="2501" width="0.2633%" height="15" fill="rgb(216,100,18)" fg:x="989815719" fg:w="3305779"/><text x="79.0994%" y="2511.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (16,518,180 samples, 1.32%)</title><rect x="79.1127%" y="2533" width="1.3158%" height="15" fill="rgb(236,147,54)" fg:x="993121498" fg:w="16518180"/><text x="79.3627%" y="2543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (13,234,384 samples, 1.05%)</title><rect x="79.3743%" y="2517" width="1.0543%" height="15" fill="rgb(205,143,26)" fg:x="996405294" fg:w="13234384"/><text x="79.6243%" y="2527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (13,234,384 samples, 1.05%)</title><rect x="79.3743%" y="2501" width="1.0543%" height="15" fill="rgb(236,26,9)" fg:x="996405294" fg:w="13234384"/><text x="79.6243%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (13,234,384 samples, 1.05%)</title><rect x="79.3743%" y="2485" width="1.0543%" height="15" fill="rgb(221,165,53)" fg:x="996405294" fg:w="13234384"/><text x="79.6243%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (13,234,384 samples, 1.05%)</title><rect x="79.3743%" y="2469" width="1.0543%" height="15" fill="rgb(214,110,17)" fg:x="996405294" fg:w="13234384"/><text x="79.6243%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13,234,384 samples, 1.05%)</title><rect x="79.3743%" y="2453" width="1.0543%" height="15" fill="rgb(237,197,12)" fg:x="996405294" fg:w="13234384"/><text x="79.6243%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13,234,384 samples, 1.05%)</title><rect x="79.3743%" y="2437" width="1.0543%" height="15" fill="rgb(205,84,17)" fg:x="996405294" fg:w="13234384"/><text x="79.6243%" y="2447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,234,384 samples, 1.05%)</title><rect x="79.3743%" y="2421" width="1.0543%" height="15" fill="rgb(237,18,45)" fg:x="996405294" fg:w="13234384"/><text x="79.6243%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (13,234,384 samples, 1.05%)</title><rect x="79.3743%" y="2405" width="1.0543%" height="15" fill="rgb(221,87,14)" fg:x="996405294" fg:w="13234384"/><text x="79.6243%" y="2415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13,234,384 samples, 1.05%)</title><rect x="79.3743%" y="2389" width="1.0543%" height="15" fill="rgb(238,186,15)" fg:x="996405294" fg:w="13234384"/><text x="79.6243%" y="2399.50"></text></g><g><title>alloc::alloc::dealloc (13,234,384 samples, 1.05%)</title><rect x="79.3743%" y="2373" width="1.0543%" height="15" fill="rgb(208,115,11)" fg:x="996405294" fg:w="13234384"/><text x="79.6243%" y="2383.50"></text></g><g><title>cfree (13,234,384 samples, 1.05%)</title><rect x="79.3743%" y="2357" width="1.0543%" height="15" fill="rgb(254,175,0)" fg:x="996405294" fg:w="13234384"/><text x="79.6243%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (46,404,034 samples, 3.70%)</title><rect x="76.9992%" y="2693" width="3.6966%" height="15" fill="rgb(227,24,42)" fg:x="966590248" fg:w="46404034"/><text x="77.2492%" y="2703.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46,404,034 samples, 3.70%)</title><rect x="76.9992%" y="2677" width="3.6966%" height="15" fill="rgb(223,211,37)" fg:x="966590248" fg:w="46404034"/><text x="77.2492%" y="2687.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (46,404,034 samples, 3.70%)</title><rect x="76.9992%" y="2661" width="3.6966%" height="15" fill="rgb(235,49,27)" fg:x="966590248" fg:w="46404034"/><text x="77.2492%" y="2671.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (46,404,034 samples, 3.70%)</title><rect x="76.9992%" y="2645" width="3.6966%" height="15" fill="rgb(254,97,51)" fg:x="966590248" fg:w="46404034"/><text x="77.2492%" y="2655.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (19,872,784 samples, 1.58%)</title><rect x="79.1127%" y="2629" width="1.5831%" height="15" fill="rgb(249,51,40)" fg:x="993121498" fg:w="19872784"/><text x="79.3627%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (19,872,784 samples, 1.58%)</title><rect x="79.1127%" y="2613" width="1.5831%" height="15" fill="rgb(210,128,45)" fg:x="993121498" fg:w="19872784"/><text x="79.3627%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (19,872,784 samples, 1.58%)</title><rect x="79.1127%" y="2597" width="1.5831%" height="15" fill="rgb(224,137,50)" fg:x="993121498" fg:w="19872784"/><text x="79.3627%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (19,872,784 samples, 1.58%)</title><rect x="79.1127%" y="2581" width="1.5831%" height="15" fill="rgb(242,15,9)" fg:x="993121498" fg:w="19872784"/><text x="79.3627%" y="2591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19,872,784 samples, 1.58%)</title><rect x="79.1127%" y="2565" width="1.5831%" height="15" fill="rgb(233,187,41)" fg:x="993121498" fg:w="19872784"/><text x="79.3627%" y="2575.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (19,872,784 samples, 1.58%)</title><rect x="79.1127%" y="2549" width="1.5831%" height="15" fill="rgb(227,2,29)" fg:x="993121498" fg:w="19872784"/><text x="79.3627%" y="2559.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,354,604 samples, 0.27%)</title><rect x="80.4286%" y="2533" width="0.2672%" height="15" fill="rgb(222,70,3)" fg:x="1009639678" fg:w="3354604"/><text x="80.6786%" y="2543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,354,604 samples, 0.27%)</title><rect x="80.4286%" y="2517" width="0.2672%" height="15" fill="rgb(213,11,42)" fg:x="1009639678" fg:w="3354604"/><text x="80.6786%" y="2527.50"></text></g><g><title>alloc::alloc::dealloc (3,354,604 samples, 0.27%)</title><rect x="80.4286%" y="2501" width="0.2672%" height="15" fill="rgb(225,150,9)" fg:x="1009639678" fg:w="3354604"/><text x="80.6786%" y="2511.50"></text></g><g><title>cfree (3,354,604 samples, 0.27%)</title><rect x="80.4286%" y="2485" width="0.2672%" height="15" fill="rgb(230,162,45)" fg:x="1009639678" fg:w="3354604"/><text x="80.6786%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,289,787 samples, 0.26%)</title><rect x="80.6958%" y="2693" width="0.2621%" height="15" fill="rgb(222,14,52)" fg:x="1012994282" fg:w="3289787"/><text x="80.9458%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,289,787 samples, 0.26%)</title><rect x="80.6958%" y="2677" width="0.2621%" height="15" fill="rgb(254,198,14)" fg:x="1012994282" fg:w="3289787"/><text x="80.9458%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,289,787 samples, 0.26%)</title><rect x="80.6958%" y="2661" width="0.2621%" height="15" fill="rgb(220,217,30)" fg:x="1012994282" fg:w="3289787"/><text x="80.9458%" y="2671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,289,787 samples, 0.26%)</title><rect x="80.6958%" y="2645" width="0.2621%" height="15" fill="rgb(215,146,41)" fg:x="1012994282" fg:w="3289787"/><text x="80.9458%" y="2655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,289,787 samples, 0.26%)</title><rect x="80.6958%" y="2629" width="0.2621%" height="15" fill="rgb(217,27,36)" fg:x="1012994282" fg:w="3289787"/><text x="80.9458%" y="2639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,289,787 samples, 0.26%)</title><rect x="80.6958%" y="2613" width="0.2621%" height="15" fill="rgb(219,218,39)" fg:x="1012994282" fg:w="3289787"/><text x="80.9458%" y="2623.50"></text></g><g><title>alloc::alloc::dealloc (3,289,787 samples, 0.26%)</title><rect x="80.6958%" y="2597" width="0.2621%" height="15" fill="rgb(219,4,42)" fg:x="1012994282" fg:w="3289787"/><text x="80.9458%" y="2607.50"></text></g><g><title>cfree (3,289,787 samples, 0.26%)</title><rect x="80.6958%" y="2581" width="0.2621%" height="15" fill="rgb(249,119,36)" fg:x="1012994282" fg:w="3289787"/><text x="80.9458%" y="2591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,273,318 samples, 0.26%)</title><rect x="80.9578%" y="2581" width="0.2608%" height="15" fill="rgb(209,23,33)" fg:x="1016284069" fg:w="3273318"/><text x="81.2078%" y="2591.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (3,273,318 samples, 0.26%)</title><rect x="80.9578%" y="2565" width="0.2608%" height="15" fill="rgb(211,10,0)" fg:x="1016284069" fg:w="3273318"/><text x="81.2078%" y="2575.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3,273,318 samples, 0.26%)</title><rect x="80.9578%" y="2549" width="0.2608%" height="15" fill="rgb(208,99,37)" fg:x="1016284069" fg:w="3273318"/><text x="81.2078%" y="2559.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (3,273,318 samples, 0.26%)</title><rect x="80.9578%" y="2533" width="0.2608%" height="15" fill="rgb(213,132,31)" fg:x="1016284069" fg:w="3273318"/><text x="81.2078%" y="2543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (62,987,287 samples, 5.02%)</title><rect x="76.9992%" y="2741" width="5.0176%" height="15" fill="rgb(243,129,40)" fg:x="966590248" fg:w="62987287"/><text x="77.2492%" y="2751.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (62,987,287 samples, 5.02%)</title><rect x="76.9992%" y="2725" width="5.0176%" height="15" fill="rgb(210,66,33)" fg:x="966590248" fg:w="62987287"/><text x="77.2492%" y="2735.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (62,987,287 samples, 5.02%)</title><rect x="76.9992%" y="2709" width="5.0176%" height="15" fill="rgb(209,189,4)" fg:x="966590248" fg:w="62987287"/><text x="77.2492%" y="2719.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (13,293,466 samples, 1.06%)</title><rect x="80.9578%" y="2693" width="1.0590%" height="15" fill="rgb(214,107,37)" fg:x="1016284069" fg:w="13293466"/><text x="81.2078%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (13,293,466 samples, 1.06%)</title><rect x="80.9578%" y="2677" width="1.0590%" height="15" fill="rgb(245,88,54)" fg:x="1016284069" fg:w="13293466"/><text x="81.2078%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (13,293,466 samples, 1.06%)</title><rect x="80.9578%" y="2661" width="1.0590%" height="15" fill="rgb(205,146,20)" fg:x="1016284069" fg:w="13293466"/><text x="81.2078%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (13,293,466 samples, 1.06%)</title><rect x="80.9578%" y="2645" width="1.0590%" height="15" fill="rgb(220,161,25)" fg:x="1016284069" fg:w="13293466"/><text x="81.2078%" y="2655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,293,466 samples, 1.06%)</title><rect x="80.9578%" y="2629" width="1.0590%" height="15" fill="rgb(215,152,15)" fg:x="1016284069" fg:w="13293466"/><text x="81.2078%" y="2639.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (13,293,466 samples, 1.06%)</title><rect x="80.9578%" y="2613" width="1.0590%" height="15" fill="rgb(233,192,44)" fg:x="1016284069" fg:w="13293466"/><text x="81.2078%" y="2623.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (13,293,466 samples, 1.06%)</title><rect x="80.9578%" y="2597" width="1.0590%" height="15" fill="rgb(240,170,46)" fg:x="1016284069" fg:w="13293466"/><text x="81.2078%" y="2607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (10,020,148 samples, 0.80%)</title><rect x="81.2186%" y="2581" width="0.7982%" height="15" fill="rgb(207,104,33)" fg:x="1019557387" fg:w="10020148"/><text x="81.4686%" y="2591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (10,020,148 samples, 0.80%)</title><rect x="81.2186%" y="2565" width="0.7982%" height="15" fill="rgb(219,21,39)" fg:x="1019557387" fg:w="10020148"/><text x="81.4686%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (10,020,148 samples, 0.80%)</title><rect x="81.2186%" y="2549" width="0.7982%" height="15" fill="rgb(214,133,29)" fg:x="1019557387" fg:w="10020148"/><text x="81.4686%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (10,020,148 samples, 0.80%)</title><rect x="81.2186%" y="2533" width="0.7982%" height="15" fill="rgb(226,93,6)" fg:x="1019557387" fg:w="10020148"/><text x="81.4686%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (10,020,148 samples, 0.80%)</title><rect x="81.2186%" y="2517" width="0.7982%" height="15" fill="rgb(252,222,34)" fg:x="1019557387" fg:w="10020148"/><text x="81.4686%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10,020,148 samples, 0.80%)</title><rect x="81.2186%" y="2501" width="0.7982%" height="15" fill="rgb(252,92,48)" fg:x="1019557387" fg:w="10020148"/><text x="81.4686%" y="2511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,020,148 samples, 0.80%)</title><rect x="81.2186%" y="2485" width="0.7982%" height="15" fill="rgb(245,223,24)" fg:x="1019557387" fg:w="10020148"/><text x="81.4686%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10,020,148 samples, 0.80%)</title><rect x="81.2186%" y="2469" width="0.7982%" height="15" fill="rgb(205,176,3)" fg:x="1019557387" fg:w="10020148"/><text x="81.4686%" y="2479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,020,148 samples, 0.80%)</title><rect x="81.2186%" y="2453" width="0.7982%" height="15" fill="rgb(235,151,15)" fg:x="1019557387" fg:w="10020148"/><text x="81.4686%" y="2463.50"></text></g><g><title>alloc::alloc::dealloc (10,020,148 samples, 0.80%)</title><rect x="81.2186%" y="2437" width="0.7982%" height="15" fill="rgb(237,209,11)" fg:x="1019557387" fg:w="10020148"/><text x="81.4686%" y="2447.50"></text></g><g><title>cfree (10,020,148 samples, 0.80%)</title><rect x="81.2186%" y="2421" width="0.7982%" height="15" fill="rgb(243,227,24)" fg:x="1019557387" fg:w="10020148"/><text x="81.4686%" y="2431.50"></text></g><g><title>[libc.so.6] (6,720,180 samples, 0.54%)</title><rect x="81.4815%" y="2405" width="0.5353%" height="15" fill="rgb(239,193,16)" fg:x="1022857355" fg:w="6720180"/><text x="81.7315%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (66,293,453 samples, 5.28%)</title><rect x="76.9992%" y="2757" width="5.2810%" height="15" fill="rgb(231,27,9)" fg:x="966590248" fg:w="66293453"/><text x="77.2492%" y="2767.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,306,166 samples, 0.26%)</title><rect x="82.0168%" y="2741" width="0.2634%" height="15" fill="rgb(219,169,10)" fg:x="1029577535" fg:w="3306166"/><text x="82.2668%" y="2751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,306,166 samples, 0.26%)</title><rect x="82.0168%" y="2725" width="0.2634%" height="15" fill="rgb(244,229,43)" fg:x="1029577535" fg:w="3306166"/><text x="82.2668%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,306,166 samples, 0.26%)</title><rect x="82.0168%" y="2709" width="0.2634%" height="15" fill="rgb(254,38,20)" fg:x="1029577535" fg:w="3306166"/><text x="82.2668%" y="2719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,306,166 samples, 0.26%)</title><rect x="82.0168%" y="2693" width="0.2634%" height="15" fill="rgb(250,47,30)" fg:x="1029577535" fg:w="3306166"/><text x="82.2668%" y="2703.50"></text></g><g><title>alloc::alloc::dealloc (3,306,166 samples, 0.26%)</title><rect x="82.0168%" y="2677" width="0.2634%" height="15" fill="rgb(224,124,36)" fg:x="1029577535" fg:w="3306166"/><text x="82.2668%" y="2687.50"></text></g><g><title>cfree (3,306,166 samples, 0.26%)</title><rect x="82.0168%" y="2661" width="0.2634%" height="15" fill="rgb(246,68,51)" fg:x="1029577535" fg:w="3306166"/><text x="82.2668%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,682,363 samples, 0.21%)</title><rect x="82.2802%" y="2757" width="0.2137%" height="15" fill="rgb(253,43,49)" fg:x="1032883701" fg:w="2682363"/><text x="82.5302%" y="2767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,365,124 samples, 0.27%)</title><rect x="82.4939%" y="2645" width="0.2681%" height="15" fill="rgb(219,54,36)" fg:x="1035566064" fg:w="3365124"/><text x="82.7439%" y="2655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,365,124 samples, 0.27%)</title><rect x="82.4939%" y="2629" width="0.2681%" height="15" fill="rgb(227,133,34)" fg:x="1035566064" fg:w="3365124"/><text x="82.7439%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,365,124 samples, 0.27%)</title><rect x="82.4939%" y="2613" width="0.2681%" height="15" fill="rgb(247,227,15)" fg:x="1035566064" fg:w="3365124"/><text x="82.7439%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,365,124 samples, 0.27%)</title><rect x="82.4939%" y="2597" width="0.2681%" height="15" fill="rgb(229,96,14)" fg:x="1035566064" fg:w="3365124"/><text x="82.7439%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,365,124 samples, 0.27%)</title><rect x="82.4939%" y="2581" width="0.2681%" height="15" fill="rgb(220,79,17)" fg:x="1035566064" fg:w="3365124"/><text x="82.7439%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,365,124 samples, 0.27%)</title><rect x="82.4939%" y="2565" width="0.2681%" height="15" fill="rgb(205,131,53)" fg:x="1035566064" fg:w="3365124"/><text x="82.7439%" y="2575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,365,124 samples, 0.27%)</title><rect x="82.4939%" y="2549" width="0.2681%" height="15" fill="rgb(209,50,29)" fg:x="1035566064" fg:w="3365124"/><text x="82.7439%" y="2559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,365,124 samples, 0.27%)</title><rect x="82.4939%" y="2533" width="0.2681%" height="15" fill="rgb(245,86,46)" fg:x="1035566064" fg:w="3365124"/><text x="82.7439%" y="2543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,365,124 samples, 0.27%)</title><rect x="82.4939%" y="2517" width="0.2681%" height="15" fill="rgb(235,66,46)" fg:x="1035566064" fg:w="3365124"/><text x="82.7439%" y="2527.50"></text></g><g><title>alloc::alloc::dealloc (3,365,124 samples, 0.27%)</title><rect x="82.4939%" y="2501" width="0.2681%" height="15" fill="rgb(232,148,31)" fg:x="1035566064" fg:w="3365124"/><text x="82.7439%" y="2511.50"></text></g><g><title>cfree (3,365,124 samples, 0.27%)</title><rect x="82.4939%" y="2485" width="0.2681%" height="15" fill="rgb(217,149,8)" fg:x="1035566064" fg:w="3365124"/><text x="82.7439%" y="2495.50"></text></g><g><title>[libc.so.6] (3,365,124 samples, 0.27%)</title><rect x="82.4939%" y="2469" width="0.2681%" height="15" fill="rgb(209,183,11)" fg:x="1035566064" fg:w="3365124"/><text x="82.7439%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (75,884,959 samples, 6.05%)</title><rect x="76.9992%" y="2821" width="6.0450%" height="15" fill="rgb(208,55,20)" fg:x="966590248" fg:w="75884959"/><text x="77.2492%" y="2831.50">core::pt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (75,884,959 samples, 6.05%)</title><rect x="76.9992%" y="2805" width="6.0450%" height="15" fill="rgb(218,39,14)" fg:x="966590248" fg:w="75884959"/><text x="77.2492%" y="2815.50">&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (75,884,959 samples, 6.05%)</title><rect x="76.9992%" y="2789" width="6.0450%" height="15" fill="rgb(216,169,33)" fg:x="966590248" fg:w="75884959"/><text x="77.2492%" y="2799.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (75,884,959 samples, 6.05%)</title><rect x="76.9992%" y="2773" width="6.0450%" height="15" fill="rgb(233,80,24)" fg:x="966590248" fg:w="75884959"/><text x="77.2492%" y="2783.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (6,909,143 samples, 0.55%)</title><rect x="82.4939%" y="2757" width="0.5504%" height="15" fill="rgb(213,179,31)" fg:x="1035566064" fg:w="6909143"/><text x="82.7439%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (6,909,143 samples, 0.55%)</title><rect x="82.4939%" y="2741" width="0.5504%" height="15" fill="rgb(209,19,5)" fg:x="1035566064" fg:w="6909143"/><text x="82.7439%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (6,909,143 samples, 0.55%)</title><rect x="82.4939%" y="2725" width="0.5504%" height="15" fill="rgb(219,18,35)" fg:x="1035566064" fg:w="6909143"/><text x="82.7439%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (6,909,143 samples, 0.55%)</title><rect x="82.4939%" y="2709" width="0.5504%" height="15" fill="rgb(209,169,16)" fg:x="1035566064" fg:w="6909143"/><text x="82.7439%" y="2719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,909,143 samples, 0.55%)</title><rect x="82.4939%" y="2693" width="0.5504%" height="15" fill="rgb(245,90,51)" fg:x="1035566064" fg:w="6909143"/><text x="82.7439%" y="2703.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (6,909,143 samples, 0.55%)</title><rect x="82.4939%" y="2677" width="0.5504%" height="15" fill="rgb(220,99,45)" fg:x="1035566064" fg:w="6909143"/><text x="82.7439%" y="2687.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (6,909,143 samples, 0.55%)</title><rect x="82.4939%" y="2661" width="0.5504%" height="15" fill="rgb(249,89,25)" fg:x="1035566064" fg:w="6909143"/><text x="82.7439%" y="2671.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (3,544,019 samples, 0.28%)</title><rect x="82.7619%" y="2645" width="0.2823%" height="15" fill="rgb(239,193,0)" fg:x="1038931188" fg:w="3544019"/><text x="83.0119%" y="2655.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (3,544,019 samples, 0.28%)</title><rect x="82.7619%" y="2629" width="0.2823%" height="15" fill="rgb(231,126,1)" fg:x="1038931188" fg:w="3544019"/><text x="83.0119%" y="2639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3,544,019 samples, 0.28%)</title><rect x="82.7619%" y="2613" width="0.2823%" height="15" fill="rgb(243,166,3)" fg:x="1038931188" fg:w="3544019"/><text x="83.0119%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (6,621,860 samples, 0.53%)</title><rect x="83.0443%" y="2821" width="0.5275%" height="15" fill="rgb(223,22,34)" fg:x="1042475207" fg:w="6621860"/><text x="83.2943%" y="2831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6,621,860 samples, 0.53%)</title><rect x="83.0443%" y="2805" width="0.5275%" height="15" fill="rgb(251,52,51)" fg:x="1042475207" fg:w="6621860"/><text x="83.2943%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6,621,860 samples, 0.53%)</title><rect x="83.0443%" y="2789" width="0.5275%" height="15" fill="rgb(221,165,28)" fg:x="1042475207" fg:w="6621860"/><text x="83.2943%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6,621,860 samples, 0.53%)</title><rect x="83.0443%" y="2773" width="0.5275%" height="15" fill="rgb(218,121,47)" fg:x="1042475207" fg:w="6621860"/><text x="83.2943%" y="2783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,621,860 samples, 0.53%)</title><rect x="83.0443%" y="2757" width="0.5275%" height="15" fill="rgb(209,120,9)" fg:x="1042475207" fg:w="6621860"/><text x="83.2943%" y="2767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,621,860 samples, 0.53%)</title><rect x="83.0443%" y="2741" width="0.5275%" height="15" fill="rgb(236,68,12)" fg:x="1042475207" fg:w="6621860"/><text x="83.2943%" y="2751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,621,860 samples, 0.53%)</title><rect x="83.0443%" y="2725" width="0.5275%" height="15" fill="rgb(225,194,26)" fg:x="1042475207" fg:w="6621860"/><text x="83.2943%" y="2735.50"></text></g><g><title>alloc::alloc::dealloc (6,621,860 samples, 0.53%)</title><rect x="83.0443%" y="2709" width="0.5275%" height="15" fill="rgb(231,84,39)" fg:x="1042475207" fg:w="6621860"/><text x="83.2943%" y="2719.50"></text></g><g><title>cfree (6,621,860 samples, 0.53%)</title><rect x="83.0443%" y="2693" width="0.5275%" height="15" fill="rgb(210,11,45)" fg:x="1042475207" fg:w="6621860"/><text x="83.2943%" y="2703.50"></text></g><g><title>[libc.so.6] (6,621,860 samples, 0.53%)</title><rect x="83.0443%" y="2677" width="0.5275%" height="15" fill="rgb(224,54,52)" fg:x="1042475207" fg:w="6621860"/><text x="83.2943%" y="2687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89,134,541 samples, 7.10%)</title><rect x="76.9992%" y="2869" width="7.1005%" height="15" fill="rgb(238,102,14)" fg:x="966590248" fg:w="89134541"/><text x="77.2492%" y="2879.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (89,134,541 samples, 7.10%)</title><rect x="76.9992%" y="2853" width="7.1005%" height="15" fill="rgb(243,160,52)" fg:x="966590248" fg:w="89134541"/><text x="77.2492%" y="2863.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (89,134,541 samples, 7.10%)</title><rect x="76.9992%" y="2837" width="7.1005%" height="15" fill="rgb(216,114,19)" fg:x="966590248" fg:w="89134541"/><text x="77.2492%" y="2847.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (6,627,722 samples, 0.53%)</title><rect x="83.5718%" y="2821" width="0.5280%" height="15" fill="rgb(244,166,37)" fg:x="1049097067" fg:w="6627722"/><text x="83.8218%" y="2831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (6,627,722 samples, 0.53%)</title><rect x="83.5718%" y="2805" width="0.5280%" height="15" fill="rgb(246,29,44)" fg:x="1049097067" fg:w="6627722"/><text x="83.8218%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (6,627,722 samples, 0.53%)</title><rect x="83.5718%" y="2789" width="0.5280%" height="15" fill="rgb(215,56,53)" fg:x="1049097067" fg:w="6627722"/><text x="83.8218%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (6,627,722 samples, 0.53%)</title><rect x="83.5718%" y="2773" width="0.5280%" height="15" fill="rgb(217,60,2)" fg:x="1049097067" fg:w="6627722"/><text x="83.8218%" y="2783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,627,722 samples, 0.53%)</title><rect x="83.5718%" y="2757" width="0.5280%" height="15" fill="rgb(207,26,24)" fg:x="1049097067" fg:w="6627722"/><text x="83.8218%" y="2767.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (6,627,722 samples, 0.53%)</title><rect x="83.5718%" y="2741" width="0.5280%" height="15" fill="rgb(252,210,15)" fg:x="1049097067" fg:w="6627722"/><text x="83.8218%" y="2751.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,299,696 samples, 0.26%)</title><rect x="83.8369%" y="2725" width="0.2629%" height="15" fill="rgb(253,209,26)" fg:x="1052425093" fg:w="3299696"/><text x="84.0869%" y="2735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,299,696 samples, 0.26%)</title><rect x="83.8369%" y="2709" width="0.2629%" height="15" fill="rgb(238,170,14)" fg:x="1052425093" fg:w="3299696"/><text x="84.0869%" y="2719.50"></text></g><g><title>alloc::alloc::dealloc (3,299,696 samples, 0.26%)</title><rect x="83.8369%" y="2693" width="0.2629%" height="15" fill="rgb(216,178,15)" fg:x="1052425093" fg:w="3299696"/><text x="84.0869%" y="2703.50"></text></g><g><title>cfree (3,299,696 samples, 0.26%)</title><rect x="83.8369%" y="2677" width="0.2629%" height="15" fill="rgb(250,197,2)" fg:x="1052425093" fg:w="3299696"/><text x="84.0869%" y="2687.50"></text></g><g><title>__rdl_dealloc (3,270,742 samples, 0.26%)</title><rect x="84.0997%" y="2789" width="0.2605%" height="15" fill="rgb(212,70,42)" fg:x="1055724789" fg:w="3270742"/><text x="84.3497%" y="2799.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,270,742 samples, 0.26%)</title><rect x="84.0997%" y="2773" width="0.2605%" height="15" fill="rgb(227,213,9)" fg:x="1055724789" fg:w="3270742"/><text x="84.3497%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (99,037,970 samples, 7.89%)</title><rect x="76.9992%" y="2885" width="7.8894%" height="15" fill="rgb(245,99,25)" fg:x="966590248" fg:w="99037970"/><text x="77.2492%" y="2895.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,903,429 samples, 0.79%)</title><rect x="84.0997%" y="2869" width="0.7889%" height="15" fill="rgb(250,82,29)" fg:x="1055724789" fg:w="9903429"/><text x="84.3497%" y="2879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,903,429 samples, 0.79%)</title><rect x="84.0997%" y="2853" width="0.7889%" height="15" fill="rgb(241,226,54)" fg:x="1055724789" fg:w="9903429"/><text x="84.3497%" y="2863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (9,903,429 samples, 0.79%)</title><rect x="84.0997%" y="2837" width="0.7889%" height="15" fill="rgb(221,99,41)" fg:x="1055724789" fg:w="9903429"/><text x="84.3497%" y="2847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9,903,429 samples, 0.79%)</title><rect x="84.0997%" y="2821" width="0.7889%" height="15" fill="rgb(213,90,21)" fg:x="1055724789" fg:w="9903429"/><text x="84.3497%" y="2831.50"></text></g><g><title>alloc::alloc::dealloc (9,903,429 samples, 0.79%)</title><rect x="84.0997%" y="2805" width="0.7889%" height="15" fill="rgb(205,208,24)" fg:x="1055724789" fg:w="9903429"/><text x="84.3497%" y="2815.50"></text></g><g><title>cfree (6,632,687 samples, 0.53%)</title><rect x="84.3603%" y="2789" width="0.5284%" height="15" fill="rgb(246,31,12)" fg:x="1058995531" fg:w="6632687"/><text x="84.6103%" y="2799.50"></text></g><g><title>[libc.so.6] (3,357,483 samples, 0.27%)</title><rect x="84.6212%" y="2773" width="0.2675%" height="15" fill="rgb(213,154,6)" fg:x="1062270735" fg:w="3357483"/><text x="84.8712%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,389,983 samples, 0.27%)</title><rect x="84.8886%" y="2885" width="0.2700%" height="15" fill="rgb(222,163,29)" fg:x="1065628218" fg:w="3389983"/><text x="85.1386%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,389,983 samples, 0.27%)</title><rect x="84.8886%" y="2869" width="0.2700%" height="15" fill="rgb(227,201,8)" fg:x="1065628218" fg:w="3389983"/><text x="85.1386%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,389,983 samples, 0.27%)</title><rect x="84.8886%" y="2853" width="0.2700%" height="15" fill="rgb(233,9,32)" fg:x="1065628218" fg:w="3389983"/><text x="85.1386%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,389,983 samples, 0.27%)</title><rect x="84.8886%" y="2837" width="0.2700%" height="15" fill="rgb(217,54,24)" fg:x="1065628218" fg:w="3389983"/><text x="85.1386%" y="2847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,389,983 samples, 0.27%)</title><rect x="84.8886%" y="2821" width="0.2700%" height="15" fill="rgb(235,192,0)" fg:x="1065628218" fg:w="3389983"/><text x="85.1386%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,389,983 samples, 0.27%)</title><rect x="84.8886%" y="2805" width="0.2700%" height="15" fill="rgb(235,45,9)" fg:x="1065628218" fg:w="3389983"/><text x="85.1386%" y="2815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,389,983 samples, 0.27%)</title><rect x="84.8886%" y="2789" width="0.2700%" height="15" fill="rgb(246,42,40)" fg:x="1065628218" fg:w="3389983"/><text x="85.1386%" y="2799.50"></text></g><g><title>alloc::alloc::dealloc (3,389,983 samples, 0.27%)</title><rect x="84.8886%" y="2773" width="0.2700%" height="15" fill="rgb(248,111,24)" fg:x="1065628218" fg:w="3389983"/><text x="85.1386%" y="2783.50"></text></g><g><title>cfree (3,389,983 samples, 0.27%)</title><rect x="84.8886%" y="2757" width="0.2700%" height="15" fill="rgb(249,65,22)" fg:x="1065628218" fg:w="3389983"/><text x="85.1386%" y="2767.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,357,107 samples, 0.27%)</title><rect x="85.1587%" y="2789" width="0.2674%" height="15" fill="rgb(238,111,51)" fg:x="1069018201" fg:w="3357107"/><text x="85.4087%" y="2799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,357,107 samples, 0.27%)</title><rect x="85.1587%" y="2773" width="0.2674%" height="15" fill="rgb(250,118,22)" fg:x="1069018201" fg:w="3357107"/><text x="85.4087%" y="2783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,357,107 samples, 0.27%)</title><rect x="85.1587%" y="2757" width="0.2674%" height="15" fill="rgb(234,84,26)" fg:x="1069018201" fg:w="3357107"/><text x="85.4087%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,357,107 samples, 0.27%)</title><rect x="85.1587%" y="2741" width="0.2674%" height="15" fill="rgb(243,172,12)" fg:x="1069018201" fg:w="3357107"/><text x="85.4087%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,357,107 samples, 0.27%)</title><rect x="85.1587%" y="2725" width="0.2674%" height="15" fill="rgb(236,150,49)" fg:x="1069018201" fg:w="3357107"/><text x="85.4087%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,357,107 samples, 0.27%)</title><rect x="85.1587%" y="2709" width="0.2674%" height="15" fill="rgb(225,197,26)" fg:x="1069018201" fg:w="3357107"/><text x="85.4087%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,357,107 samples, 0.27%)</title><rect x="85.1587%" y="2693" width="0.2674%" height="15" fill="rgb(214,17,42)" fg:x="1069018201" fg:w="3357107"/><text x="85.4087%" y="2703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,357,107 samples, 0.27%)</title><rect x="85.1587%" y="2677" width="0.2674%" height="15" fill="rgb(224,165,40)" fg:x="1069018201" fg:w="3357107"/><text x="85.4087%" y="2687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,357,107 samples, 0.27%)</title><rect x="85.1587%" y="2661" width="0.2674%" height="15" fill="rgb(246,100,4)" fg:x="1069018201" fg:w="3357107"/><text x="85.4087%" y="2671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,357,107 samples, 0.27%)</title><rect x="85.1587%" y="2645" width="0.2674%" height="15" fill="rgb(222,103,0)" fg:x="1069018201" fg:w="3357107"/><text x="85.4087%" y="2655.50"></text></g><g><title>alloc::alloc::dealloc (3,357,107 samples, 0.27%)</title><rect x="85.1587%" y="2629" width="0.2674%" height="15" fill="rgb(227,189,26)" fg:x="1069018201" fg:w="3357107"/><text x="85.4087%" y="2639.50"></text></g><g><title>cfree (3,357,107 samples, 0.27%)</title><rect x="85.1587%" y="2613" width="0.2674%" height="15" fill="rgb(214,202,17)" fg:x="1069018201" fg:w="3357107"/><text x="85.4087%" y="2623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,281,025 samples, 0.26%)</title><rect x="85.4261%" y="2773" width="0.2614%" height="15" fill="rgb(229,111,3)" fg:x="1072375308" fg:w="3281025"/><text x="85.6761%" y="2783.50"></text></g><g><title>alloc::alloc::dealloc (3,281,025 samples, 0.26%)</title><rect x="85.4261%" y="2757" width="0.2614%" height="15" fill="rgb(229,172,15)" fg:x="1072375308" fg:w="3281025"/><text x="85.6761%" y="2767.50"></text></g><g><title>cfree (3,281,025 samples, 0.26%)</title><rect x="85.4261%" y="2741" width="0.2614%" height="15" fill="rgb(230,224,35)" fg:x="1072375308" fg:w="3281025"/><text x="85.6761%" y="2751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (112,298,276 samples, 8.95%)</title><rect x="76.9992%" y="2933" width="8.9458%" height="15" fill="rgb(251,141,6)" fg:x="966590248" fg:w="112298276"/><text x="77.2492%" y="2943.50">&lt;alloc::vec::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (112,298,276 samples, 8.95%)</title><rect x="76.9992%" y="2917" width="8.9458%" height="15" fill="rgb(225,208,6)" fg:x="966590248" fg:w="112298276"/><text x="77.2492%" y="2927.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (112,298,276 samples, 8.95%)</title><rect x="76.9992%" y="2901" width="8.9458%" height="15" fill="rgb(246,181,16)" fg:x="966590248" fg:w="112298276"/><text x="77.2492%" y="2911.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (9,870,323 samples, 0.79%)</title><rect x="85.1587%" y="2885" width="0.7863%" height="15" fill="rgb(227,129,36)" fg:x="1069018201" fg:w="9870323"/><text x="85.4087%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (9,870,323 samples, 0.79%)</title><rect x="85.1587%" y="2869" width="0.7863%" height="15" fill="rgb(248,117,24)" fg:x="1069018201" fg:w="9870323"/><text x="85.4087%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (9,870,323 samples, 0.79%)</title><rect x="85.1587%" y="2853" width="0.7863%" height="15" fill="rgb(214,185,35)" fg:x="1069018201" fg:w="9870323"/><text x="85.4087%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (9,870,323 samples, 0.79%)</title><rect x="85.1587%" y="2837" width="0.7863%" height="15" fill="rgb(236,150,34)" fg:x="1069018201" fg:w="9870323"/><text x="85.4087%" y="2847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,870,323 samples, 0.79%)</title><rect x="85.1587%" y="2821" width="0.7863%" height="15" fill="rgb(243,228,27)" fg:x="1069018201" fg:w="9870323"/><text x="85.4087%" y="2831.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (9,870,323 samples, 0.79%)</title><rect x="85.1587%" y="2805" width="0.7863%" height="15" fill="rgb(245,77,44)" fg:x="1069018201" fg:w="9870323"/><text x="85.4087%" y="2815.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (6,513,216 samples, 0.52%)</title><rect x="85.4261%" y="2789" width="0.5188%" height="15" fill="rgb(235,214,42)" fg:x="1072375308" fg:w="6513216"/><text x="85.6761%" y="2799.50"></text></g><g><title>hashbrown::raw::RawTableInner::allocation_info (3,232,191 samples, 0.26%)</title><rect x="85.6875%" y="2773" width="0.2575%" height="15" fill="rgb(221,74,3)" fg:x="1075656333" fg:w="3232191"/><text x="85.9375%" y="2783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3,232,191 samples, 0.26%)</title><rect x="85.6875%" y="2757" width="0.2575%" height="15" fill="rgb(206,121,29)" fg:x="1075656333" fg:w="3232191"/><text x="85.9375%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (115,554,263 samples, 9.21%)</title><rect x="76.9992%" y="2949" width="9.2051%" height="15" fill="rgb(249,131,53)" fg:x="966590248" fg:w="115554263"/><text x="77.2492%" y="2959.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,255,987 samples, 0.26%)</title><rect x="85.9450%" y="2933" width="0.2594%" height="15" fill="rgb(236,170,29)" fg:x="1078888524" fg:w="3255987"/><text x="86.1950%" y="2943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,255,987 samples, 0.26%)</title><rect x="85.9450%" y="2917" width="0.2594%" height="15" fill="rgb(247,96,15)" fg:x="1078888524" fg:w="3255987"/><text x="86.1950%" y="2927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,255,987 samples, 0.26%)</title><rect x="85.9450%" y="2901" width="0.2594%" height="15" fill="rgb(211,210,7)" fg:x="1078888524" fg:w="3255987"/><text x="86.1950%" y="2911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,255,987 samples, 0.26%)</title><rect x="85.9450%" y="2885" width="0.2594%" height="15" fill="rgb(240,88,50)" fg:x="1078888524" fg:w="3255987"/><text x="86.1950%" y="2895.50"></text></g><g><title>alloc::alloc::dealloc (3,255,987 samples, 0.26%)</title><rect x="85.9450%" y="2869" width="0.2594%" height="15" fill="rgb(209,229,26)" fg:x="1078888524" fg:w="3255987"/><text x="86.1950%" y="2879.50"></text></g><g><title>cfree (3,255,987 samples, 0.26%)</title><rect x="85.9450%" y="2853" width="0.2594%" height="15" fill="rgb(210,68,23)" fg:x="1078888524" fg:w="3255987"/><text x="86.1950%" y="2863.50"></text></g><g><title>[libc.so.6] (3,255,987 samples, 0.26%)</title><rect x="85.9450%" y="2837" width="0.2594%" height="15" fill="rgb(229,180,13)" fg:x="1078888524" fg:w="3255987"/><text x="86.1950%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (6,450,491 samples, 0.51%)</title><rect x="86.2043%" y="2949" width="0.5139%" height="15" fill="rgb(236,53,44)" fg:x="1082144511" fg:w="6450491"/><text x="86.4543%" y="2959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6,450,491 samples, 0.51%)</title><rect x="86.2043%" y="2933" width="0.5139%" height="15" fill="rgb(244,214,29)" fg:x="1082144511" fg:w="6450491"/><text x="86.4543%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6,450,491 samples, 0.51%)</title><rect x="86.2043%" y="2917" width="0.5139%" height="15" fill="rgb(220,75,29)" fg:x="1082144511" fg:w="6450491"/><text x="86.4543%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6,450,491 samples, 0.51%)</title><rect x="86.2043%" y="2901" width="0.5139%" height="15" fill="rgb(214,183,37)" fg:x="1082144511" fg:w="6450491"/><text x="86.4543%" y="2911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,450,491 samples, 0.51%)</title><rect x="86.2043%" y="2885" width="0.5139%" height="15" fill="rgb(239,117,29)" fg:x="1082144511" fg:w="6450491"/><text x="86.4543%" y="2895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,450,491 samples, 0.51%)</title><rect x="86.2043%" y="2869" width="0.5139%" height="15" fill="rgb(237,171,35)" fg:x="1082144511" fg:w="6450491"/><text x="86.4543%" y="2879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,450,491 samples, 0.51%)</title><rect x="86.2043%" y="2853" width="0.5139%" height="15" fill="rgb(229,178,53)" fg:x="1082144511" fg:w="6450491"/><text x="86.4543%" y="2863.50"></text></g><g><title>alloc::alloc::dealloc (6,450,491 samples, 0.51%)</title><rect x="86.2043%" y="2837" width="0.5139%" height="15" fill="rgb(210,102,19)" fg:x="1082144511" fg:w="6450491"/><text x="86.4543%" y="2847.50"></text></g><g><title>cfree (6,450,491 samples, 0.51%)</title><rect x="86.2043%" y="2821" width="0.5139%" height="15" fill="rgb(235,127,22)" fg:x="1082144511" fg:w="6450491"/><text x="86.4543%" y="2831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (125,324,506 samples, 9.98%)</title><rect x="76.9992%" y="3013" width="9.9834%" height="15" fill="rgb(244,31,31)" fg:x="966590248" fg:w="125324506"/><text x="77.2492%" y="3023.50">core::ptr::dro..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (125,324,506 samples, 9.98%)</title><rect x="76.9992%" y="2997" width="9.9834%" height="15" fill="rgb(231,43,21)" fg:x="966590248" fg:w="125324506"/><text x="77.2492%" y="3007.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (125,324,506 samples, 9.98%)</title><rect x="76.9992%" y="2981" width="9.9834%" height="15" fill="rgb(217,131,35)" fg:x="966590248" fg:w="125324506"/><text x="77.2492%" y="2991.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (125,324,506 samples, 9.98%)</title><rect x="76.9992%" y="2965" width="9.9834%" height="15" fill="rgb(221,149,4)" fg:x="966590248" fg:w="125324506"/><text x="77.2492%" y="2975.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,319,752 samples, 0.26%)</title><rect x="86.7182%" y="2949" width="0.2645%" height="15" fill="rgb(232,170,28)" fg:x="1088595002" fg:w="3319752"/><text x="86.9682%" y="2959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,319,752 samples, 0.26%)</title><rect x="86.7182%" y="2933" width="0.2645%" height="15" fill="rgb(238,56,10)" fg:x="1088595002" fg:w="3319752"/><text x="86.9682%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,319,752 samples, 0.26%)</title><rect x="86.7182%" y="2917" width="0.2645%" height="15" fill="rgb(235,196,14)" fg:x="1088595002" fg:w="3319752"/><text x="86.9682%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,319,752 samples, 0.26%)</title><rect x="86.7182%" y="2901" width="0.2645%" height="15" fill="rgb(216,45,48)" fg:x="1088595002" fg:w="3319752"/><text x="86.9682%" y="2911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,319,752 samples, 0.26%)</title><rect x="86.7182%" y="2885" width="0.2645%" height="15" fill="rgb(238,213,17)" fg:x="1088595002" fg:w="3319752"/><text x="86.9682%" y="2895.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,319,752 samples, 0.26%)</title><rect x="86.7182%" y="2869" width="0.2645%" height="15" fill="rgb(212,13,2)" fg:x="1088595002" fg:w="3319752"/><text x="86.9682%" y="2879.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,319,752 samples, 0.26%)</title><rect x="86.7182%" y="2853" width="0.2645%" height="15" fill="rgb(240,114,20)" fg:x="1088595002" fg:w="3319752"/><text x="86.9682%" y="2863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,319,752 samples, 0.26%)</title><rect x="86.7182%" y="2837" width="0.2645%" height="15" fill="rgb(228,41,40)" fg:x="1088595002" fg:w="3319752"/><text x="86.9682%" y="2847.50"></text></g><g><title>alloc::alloc::dealloc (3,319,752 samples, 0.26%)</title><rect x="86.7182%" y="2821" width="0.2645%" height="15" fill="rgb(244,132,35)" fg:x="1088595002" fg:w="3319752"/><text x="86.9682%" y="2831.50"></text></g><g><title>cfree (3,319,752 samples, 0.26%)</title><rect x="86.7182%" y="2805" width="0.2645%" height="15" fill="rgb(253,189,4)" fg:x="1088595002" fg:w="3319752"/><text x="86.9682%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (6,637,037 samples, 0.53%)</title><rect x="86.9826%" y="3013" width="0.5287%" height="15" fill="rgb(224,37,19)" fg:x="1091914754" fg:w="6637037"/><text x="87.2326%" y="3023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6,637,037 samples, 0.53%)</title><rect x="86.9826%" y="2997" width="0.5287%" height="15" fill="rgb(235,223,18)" fg:x="1091914754" fg:w="6637037"/><text x="87.2326%" y="3007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6,637,037 samples, 0.53%)</title><rect x="86.9826%" y="2981" width="0.5287%" height="15" fill="rgb(235,163,25)" fg:x="1091914754" fg:w="6637037"/><text x="87.2326%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6,637,037 samples, 0.53%)</title><rect x="86.9826%" y="2965" width="0.5287%" height="15" fill="rgb(217,145,28)" fg:x="1091914754" fg:w="6637037"/><text x="87.2326%" y="2975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,637,037 samples, 0.53%)</title><rect x="86.9826%" y="2949" width="0.5287%" height="15" fill="rgb(223,223,32)" fg:x="1091914754" fg:w="6637037"/><text x="87.2326%" y="2959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,637,037 samples, 0.53%)</title><rect x="86.9826%" y="2933" width="0.5287%" height="15" fill="rgb(227,189,39)" fg:x="1091914754" fg:w="6637037"/><text x="87.2326%" y="2943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,637,037 samples, 0.53%)</title><rect x="86.9826%" y="2917" width="0.5287%" height="15" fill="rgb(248,10,22)" fg:x="1091914754" fg:w="6637037"/><text x="87.2326%" y="2927.50"></text></g><g><title>alloc::alloc::dealloc (6,637,037 samples, 0.53%)</title><rect x="86.9826%" y="2901" width="0.5287%" height="15" fill="rgb(248,46,39)" fg:x="1091914754" fg:w="6637037"/><text x="87.2326%" y="2911.50"></text></g><g><title>cfree (6,637,037 samples, 0.53%)</title><rect x="86.9826%" y="2885" width="0.5287%" height="15" fill="rgb(248,113,48)" fg:x="1091914754" fg:w="6637037"/><text x="87.2326%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (135,446,857 samples, 10.79%)</title><rect x="76.9992%" y="3077" width="10.7898%" height="15" fill="rgb(245,16,25)" fg:x="966590248" fg:w="135446857"/><text x="77.2492%" y="3087.50">core::ptr::drop_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (135,446,857 samples, 10.79%)</title><rect x="76.9992%" y="3061" width="10.7898%" height="15" fill="rgb(249,152,16)" fg:x="966590248" fg:w="135446857"/><text x="77.2492%" y="3071.50">&lt;alloc::vec::Vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (135,446,857 samples, 10.79%)</title><rect x="76.9992%" y="3045" width="10.7898%" height="15" fill="rgb(250,16,1)" fg:x="966590248" fg:w="135446857"/><text x="77.2492%" y="3055.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (135,446,857 samples, 10.79%)</title><rect x="76.9992%" y="3029" width="10.7898%" height="15" fill="rgb(249,138,3)" fg:x="966590248" fg:w="135446857"/><text x="77.2492%" y="3039.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="3013" width="0.2776%" height="15" fill="rgb(227,71,41)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="3023.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2997" width="0.2776%" height="15" fill="rgb(209,184,23)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="3007.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2981" width="0.2776%" height="15" fill="rgb(223,215,31)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2965" width="0.2776%" height="15" fill="rgb(210,146,28)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2975.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2949" width="0.2776%" height="15" fill="rgb(209,183,41)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2959.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2933" width="0.2776%" height="15" fill="rgb(209,224,45)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2943.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2917" width="0.2776%" height="15" fill="rgb(224,209,51)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2901" width="0.2776%" height="15" fill="rgb(223,17,39)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2885" width="0.2776%" height="15" fill="rgb(234,204,37)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2869" width="0.2776%" height="15" fill="rgb(236,120,5)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2853" width="0.2776%" height="15" fill="rgb(248,97,27)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2837" width="0.2776%" height="15" fill="rgb(240,66,17)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2821" width="0.2776%" height="15" fill="rgb(210,79,3)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2805" width="0.2776%" height="15" fill="rgb(214,176,27)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2789" width="0.2776%" height="15" fill="rgb(235,185,3)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2773" width="0.2776%" height="15" fill="rgb(227,24,12)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2783.50"></text></g><g><title>alloc::alloc::dealloc (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2757" width="0.2776%" height="15" fill="rgb(252,169,48)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2767.50"></text></g><g><title>cfree (3,485,314 samples, 0.28%)</title><rect x="87.5113%" y="2741" width="0.2776%" height="15" fill="rgb(212,65,1)" fg:x="1098551791" fg:w="3485314"/><text x="87.7613%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,275,918 samples, 0.26%)</title><rect x="87.7890%" y="3077" width="0.2610%" height="15" fill="rgb(242,39,24)" fg:x="1102037105" fg:w="3275918"/><text x="88.0390%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,275,918 samples, 0.26%)</title><rect x="87.7890%" y="3061" width="0.2610%" height="15" fill="rgb(249,32,23)" fg:x="1102037105" fg:w="3275918"/><text x="88.0390%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,275,918 samples, 0.26%)</title><rect x="87.7890%" y="3045" width="0.2610%" height="15" fill="rgb(251,195,23)" fg:x="1102037105" fg:w="3275918"/><text x="88.0390%" y="3055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,275,918 samples, 0.26%)</title><rect x="87.7890%" y="3029" width="0.2610%" height="15" fill="rgb(236,174,8)" fg:x="1102037105" fg:w="3275918"/><text x="88.0390%" y="3039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,275,918 samples, 0.26%)</title><rect x="87.7890%" y="3013" width="0.2610%" height="15" fill="rgb(220,197,8)" fg:x="1102037105" fg:w="3275918"/><text x="88.0390%" y="3023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,275,918 samples, 0.26%)</title><rect x="87.7890%" y="2997" width="0.2610%" height="15" fill="rgb(240,108,37)" fg:x="1102037105" fg:w="3275918"/><text x="88.0390%" y="3007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,275,918 samples, 0.26%)</title><rect x="87.7890%" y="2981" width="0.2610%" height="15" fill="rgb(232,176,24)" fg:x="1102037105" fg:w="3275918"/><text x="88.0390%" y="2991.50"></text></g><g><title>alloc::alloc::dealloc (3,275,918 samples, 0.26%)</title><rect x="87.7890%" y="2965" width="0.2610%" height="15" fill="rgb(243,35,29)" fg:x="1102037105" fg:w="3275918"/><text x="88.0390%" y="2975.50"></text></g><g><title>cfree (3,275,918 samples, 0.26%)</title><rect x="87.7890%" y="2949" width="0.2610%" height="15" fill="rgb(210,37,18)" fg:x="1102037105" fg:w="3275918"/><text x="88.0390%" y="2959.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,272,757 samples, 0.26%)</title><rect x="88.0500%" y="2981" width="0.2607%" height="15" fill="rgb(224,184,40)" fg:x="1105313023" fg:w="3272757"/><text x="88.3000%" y="2991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,272,757 samples, 0.26%)</title><rect x="88.0500%" y="2965" width="0.2607%" height="15" fill="rgb(236,39,29)" fg:x="1105313023" fg:w="3272757"/><text x="88.3000%" y="2975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,272,757 samples, 0.26%)</title><rect x="88.0500%" y="2949" width="0.2607%" height="15" fill="rgb(232,48,39)" fg:x="1105313023" fg:w="3272757"/><text x="88.3000%" y="2959.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,272,757 samples, 0.26%)</title><rect x="88.0500%" y="2933" width="0.2607%" height="15" fill="rgb(236,34,42)" fg:x="1105313023" fg:w="3272757"/><text x="88.3000%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,272,757 samples, 0.26%)</title><rect x="88.0500%" y="2917" width="0.2607%" height="15" fill="rgb(243,106,37)" fg:x="1105313023" fg:w="3272757"/><text x="88.3000%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,272,757 samples, 0.26%)</title><rect x="88.0500%" y="2901" width="0.2607%" height="15" fill="rgb(218,96,6)" fg:x="1105313023" fg:w="3272757"/><text x="88.3000%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,272,757 samples, 0.26%)</title><rect x="88.0500%" y="2885" width="0.2607%" height="15" fill="rgb(235,130,12)" fg:x="1105313023" fg:w="3272757"/><text x="88.3000%" y="2895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,272,757 samples, 0.26%)</title><rect x="88.0500%" y="2869" width="0.2607%" height="15" fill="rgb(231,95,0)" fg:x="1105313023" fg:w="3272757"/><text x="88.3000%" y="2879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,272,757 samples, 0.26%)</title><rect x="88.0500%" y="2853" width="0.2607%" height="15" fill="rgb(228,12,23)" fg:x="1105313023" fg:w="3272757"/><text x="88.3000%" y="2863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,272,757 samples, 0.26%)</title><rect x="88.0500%" y="2837" width="0.2607%" height="15" fill="rgb(216,12,1)" fg:x="1105313023" fg:w="3272757"/><text x="88.3000%" y="2847.50"></text></g><g><title>alloc::alloc::dealloc (3,272,757 samples, 0.26%)</title><rect x="88.0500%" y="2821" width="0.2607%" height="15" fill="rgb(219,59,3)" fg:x="1105313023" fg:w="3272757"/><text x="88.3000%" y="2831.50"></text></g><g><title>cfree (3,272,757 samples, 0.26%)</title><rect x="88.0500%" y="2805" width="0.2607%" height="15" fill="rgb(215,208,46)" fg:x="1105313023" fg:w="3272757"/><text x="88.3000%" y="2815.50"></text></g><g><title>[libc.so.6] (3,272,757 samples, 0.26%)</title><rect x="88.0500%" y="2789" width="0.2607%" height="15" fill="rgb(254,224,29)" fg:x="1105313023" fg:w="3272757"/><text x="88.3000%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (148,576,295 samples, 11.84%)</title><rect x="76.7393%" y="3205" width="11.8357%" height="15" fill="rgb(232,14,29)" fg:x="963327136" fg:w="148576295"/><text x="76.9893%" y="3215.50">core::ptr::drop_in..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (148,576,295 samples, 11.84%)</title><rect x="76.7393%" y="3189" width="11.8357%" height="15" fill="rgb(208,45,52)" fg:x="963327136" fg:w="148576295"/><text x="76.9893%" y="3199.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (148,576,295 samples, 11.84%)</title><rect x="76.7393%" y="3173" width="11.8357%" height="15" fill="rgb(234,191,28)" fg:x="963327136" fg:w="148576295"/><text x="76.9893%" y="3183.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (148,576,295 samples, 11.84%)</title><rect x="76.7393%" y="3157" width="11.8357%" height="15" fill="rgb(244,67,43)" fg:x="963327136" fg:w="148576295"/><text x="76.9893%" y="3167.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (148,576,295 samples, 11.84%)</title><rect x="76.7393%" y="3141" width="11.8357%" height="15" fill="rgb(236,189,24)" fg:x="963327136" fg:w="148576295"/><text x="76.9893%" y="3151.50">core::ptr::drop_in..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (148,576,295 samples, 11.84%)</title><rect x="76.7393%" y="3125" width="11.8357%" height="15" fill="rgb(239,214,33)" fg:x="963327136" fg:w="148576295"/><text x="76.9893%" y="3135.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (148,576,295 samples, 11.84%)</title><rect x="76.7393%" y="3109" width="11.8357%" height="15" fill="rgb(226,176,41)" fg:x="963327136" fg:w="148576295"/><text x="76.9893%" y="3119.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (148,576,295 samples, 11.84%)</title><rect x="76.7393%" y="3093" width="11.8357%" height="15" fill="rgb(248,47,8)" fg:x="963327136" fg:w="148576295"/><text x="76.9893%" y="3103.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (6,590,408 samples, 0.52%)</title><rect x="88.0500%" y="3077" width="0.5250%" height="15" fill="rgb(218,81,44)" fg:x="1105313023" fg:w="6590408"/><text x="88.3000%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (6,590,408 samples, 0.52%)</title><rect x="88.0500%" y="3061" width="0.5250%" height="15" fill="rgb(213,98,6)" fg:x="1105313023" fg:w="6590408"/><text x="88.3000%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (6,590,408 samples, 0.52%)</title><rect x="88.0500%" y="3045" width="0.5250%" height="15" fill="rgb(222,85,22)" fg:x="1105313023" fg:w="6590408"/><text x="88.3000%" y="3055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (6,590,408 samples, 0.52%)</title><rect x="88.0500%" y="3029" width="0.5250%" height="15" fill="rgb(239,46,39)" fg:x="1105313023" fg:w="6590408"/><text x="88.3000%" y="3039.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,590,408 samples, 0.52%)</title><rect x="88.0500%" y="3013" width="0.5250%" height="15" fill="rgb(237,12,29)" fg:x="1105313023" fg:w="6590408"/><text x="88.3000%" y="3023.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (6,590,408 samples, 0.52%)</title><rect x="88.0500%" y="2997" width="0.5250%" height="15" fill="rgb(214,77,8)" fg:x="1105313023" fg:w="6590408"/><text x="88.3000%" y="3007.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,317,651 samples, 0.26%)</title><rect x="88.3107%" y="2981" width="0.2643%" height="15" fill="rgb(217,168,37)" fg:x="1108585780" fg:w="3317651"/><text x="88.5607%" y="2991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,317,651 samples, 0.26%)</title><rect x="88.3107%" y="2965" width="0.2643%" height="15" fill="rgb(221,217,23)" fg:x="1108585780" fg:w="3317651"/><text x="88.5607%" y="2975.50"></text></g><g><title>alloc::alloc::dealloc (3,317,651 samples, 0.26%)</title><rect x="88.3107%" y="2949" width="0.2643%" height="15" fill="rgb(243,229,36)" fg:x="1108585780" fg:w="3317651"/><text x="88.5607%" y="2959.50"></text></g><g><title>cfree (3,317,651 samples, 0.26%)</title><rect x="88.3107%" y="2933" width="0.2643%" height="15" fill="rgb(251,163,40)" fg:x="1108585780" fg:w="3317651"/><text x="88.5607%" y="2943.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,345,425 samples, 0.27%)</title><rect x="88.5749%" y="3109" width="0.2665%" height="15" fill="rgb(237,222,12)" fg:x="1111903431" fg:w="3345425"/><text x="88.8249%" y="3119.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,345,425 samples, 0.27%)</title><rect x="88.5749%" y="3093" width="0.2665%" height="15" fill="rgb(248,132,6)" fg:x="1111903431" fg:w="3345425"/><text x="88.8249%" y="3103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,345,425 samples, 0.27%)</title><rect x="88.5749%" y="3077" width="0.2665%" height="15" fill="rgb(227,167,50)" fg:x="1111903431" fg:w="3345425"/><text x="88.8249%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,345,425 samples, 0.27%)</title><rect x="88.5749%" y="3061" width="0.2665%" height="15" fill="rgb(242,84,37)" fg:x="1111903431" fg:w="3345425"/><text x="88.8249%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,345,425 samples, 0.27%)</title><rect x="88.5749%" y="3045" width="0.2665%" height="15" fill="rgb(212,4,50)" fg:x="1111903431" fg:w="3345425"/><text x="88.8249%" y="3055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,345,425 samples, 0.27%)</title><rect x="88.5749%" y="3029" width="0.2665%" height="15" fill="rgb(230,228,32)" fg:x="1111903431" fg:w="3345425"/><text x="88.8249%" y="3039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,345,425 samples, 0.27%)</title><rect x="88.5749%" y="3013" width="0.2665%" height="15" fill="rgb(248,217,23)" fg:x="1111903431" fg:w="3345425"/><text x="88.8249%" y="3023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,345,425 samples, 0.27%)</title><rect x="88.5749%" y="2997" width="0.2665%" height="15" fill="rgb(238,197,32)" fg:x="1111903431" fg:w="3345425"/><text x="88.8249%" y="3007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (155,223,654 samples, 12.37%)</title><rect x="76.7393%" y="3381" width="12.3652%" height="15" fill="rgb(236,106,1)" fg:x="963327136" fg:w="155223654"/><text x="76.9893%" y="3391.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (155,223,654 samples, 12.37%)</title><rect x="76.7393%" y="3365" width="12.3652%" height="15" fill="rgb(219,228,13)" fg:x="963327136" fg:w="155223654"/><text x="76.9893%" y="3375.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (155,223,654 samples, 12.37%)</title><rect x="76.7393%" y="3349" width="12.3652%" height="15" fill="rgb(238,30,35)" fg:x="963327136" fg:w="155223654"/><text x="76.9893%" y="3359.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (155,223,654 samples, 12.37%)</title><rect x="76.7393%" y="3333" width="12.3652%" height="15" fill="rgb(236,70,23)" fg:x="963327136" fg:w="155223654"/><text x="76.9893%" y="3343.50">core::ptr::drop_in..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (155,223,654 samples, 12.37%)</title><rect x="76.7393%" y="3317" width="12.3652%" height="15" fill="rgb(249,104,48)" fg:x="963327136" fg:w="155223654"/><text x="76.9893%" y="3327.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (155,223,654 samples, 12.37%)</title><rect x="76.7393%" y="3301" width="12.3652%" height="15" fill="rgb(254,117,50)" fg:x="963327136" fg:w="155223654"/><text x="76.9893%" y="3311.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (155,223,654 samples, 12.37%)</title><rect x="76.7393%" y="3285" width="12.3652%" height="15" fill="rgb(223,152,4)" fg:x="963327136" fg:w="155223654"/><text x="76.9893%" y="3295.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (155,223,654 samples, 12.37%)</title><rect x="76.7393%" y="3269" width="12.3652%" height="15" fill="rgb(245,6,2)" fg:x="963327136" fg:w="155223654"/><text x="76.9893%" y="3279.50">core::ptr::drop_in..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (155,223,654 samples, 12.37%)</title><rect x="76.7393%" y="3253" width="12.3652%" height="15" fill="rgb(249,150,24)" fg:x="963327136" fg:w="155223654"/><text x="76.9893%" y="3263.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (155,223,654 samples, 12.37%)</title><rect x="76.7393%" y="3237" width="12.3652%" height="15" fill="rgb(228,185,42)" fg:x="963327136" fg:w="155223654"/><text x="76.9893%" y="3247.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (155,223,654 samples, 12.37%)</title><rect x="76.7393%" y="3221" width="12.3652%" height="15" fill="rgb(226,39,33)" fg:x="963327136" fg:w="155223654"/><text x="76.9893%" y="3231.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (6,647,359 samples, 0.53%)</title><rect x="88.5749%" y="3205" width="0.5295%" height="15" fill="rgb(221,166,19)" fg:x="1111903431" fg:w="6647359"/><text x="88.8249%" y="3215.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (6,647,359 samples, 0.53%)</title><rect x="88.5749%" y="3189" width="0.5295%" height="15" fill="rgb(209,109,2)" fg:x="1111903431" fg:w="6647359"/><text x="88.8249%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (6,647,359 samples, 0.53%)</title><rect x="88.5749%" y="3173" width="0.5295%" height="15" fill="rgb(252,216,26)" fg:x="1111903431" fg:w="6647359"/><text x="88.8249%" y="3183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (6,647,359 samples, 0.53%)</title><rect x="88.5749%" y="3157" width="0.5295%" height="15" fill="rgb(227,173,36)" fg:x="1111903431" fg:w="6647359"/><text x="88.8249%" y="3167.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,647,359 samples, 0.53%)</title><rect x="88.5749%" y="3141" width="0.5295%" height="15" fill="rgb(209,90,7)" fg:x="1111903431" fg:w="6647359"/><text x="88.8249%" y="3151.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (6,647,359 samples, 0.53%)</title><rect x="88.5749%" y="3125" width="0.5295%" height="15" fill="rgb(250,194,11)" fg:x="1111903431" fg:w="6647359"/><text x="88.8249%" y="3135.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,301,934 samples, 0.26%)</title><rect x="88.8414%" y="3109" width="0.2630%" height="15" fill="rgb(220,72,50)" fg:x="1115248856" fg:w="3301934"/><text x="89.0914%" y="3119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,301,934 samples, 0.26%)</title><rect x="88.8414%" y="3093" width="0.2630%" height="15" fill="rgb(222,106,48)" fg:x="1115248856" fg:w="3301934"/><text x="89.0914%" y="3103.50"></text></g><g><title>alloc::alloc::dealloc (3,301,934 samples, 0.26%)</title><rect x="88.8414%" y="3077" width="0.2630%" height="15" fill="rgb(216,220,45)" fg:x="1115248856" fg:w="3301934"/><text x="89.0914%" y="3087.50"></text></g><g><title>cfree (3,301,934 samples, 0.26%)</title><rect x="88.8414%" y="3061" width="0.2630%" height="15" fill="rgb(234,112,18)" fg:x="1115248856" fg:w="3301934"/><text x="89.0914%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (158,509,275 samples, 12.63%)</title><rect x="76.7393%" y="3461" width="12.6270%" height="15" fill="rgb(206,179,9)" fg:x="963327136" fg:w="158509275"/><text x="76.9893%" y="3471.50">core::ptr::drop_in_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (158,509,275 samples, 12.63%)</title><rect x="76.7393%" y="3445" width="12.6270%" height="15" fill="rgb(215,115,40)" fg:x="963327136" fg:w="158509275"/><text x="76.9893%" y="3455.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (158,509,275 samples, 12.63%)</title><rect x="76.7393%" y="3429" width="12.6270%" height="15" fill="rgb(222,69,34)" fg:x="963327136" fg:w="158509275"/><text x="76.9893%" y="3439.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (158,509,275 samples, 12.63%)</title><rect x="76.7393%" y="3413" width="12.6270%" height="15" fill="rgb(209,161,10)" fg:x="963327136" fg:w="158509275"/><text x="76.9893%" y="3423.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (158,509,275 samples, 12.63%)</title><rect x="76.7393%" y="3397" width="12.6270%" height="15" fill="rgb(217,6,38)" fg:x="963327136" fg:w="158509275"/><text x="76.9893%" y="3407.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,285,621 samples, 0.26%)</title><rect x="89.1045%" y="3381" width="0.2617%" height="15" fill="rgb(229,229,48)" fg:x="1118550790" fg:w="3285621"/><text x="89.3545%" y="3391.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,285,621 samples, 0.26%)</title><rect x="89.1045%" y="3365" width="0.2617%" height="15" fill="rgb(225,21,28)" fg:x="1118550790" fg:w="3285621"/><text x="89.3545%" y="3375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,285,621 samples, 0.26%)</title><rect x="89.1045%" y="3349" width="0.2617%" height="15" fill="rgb(206,33,13)" fg:x="1118550790" fg:w="3285621"/><text x="89.3545%" y="3359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,285,621 samples, 0.26%)</title><rect x="89.1045%" y="3333" width="0.2617%" height="15" fill="rgb(242,178,17)" fg:x="1118550790" fg:w="3285621"/><text x="89.3545%" y="3343.50"></text></g><g><title>alloc::alloc::dealloc (3,285,621 samples, 0.26%)</title><rect x="89.1045%" y="3317" width="0.2617%" height="15" fill="rgb(220,162,5)" fg:x="1118550790" fg:w="3285621"/><text x="89.3545%" y="3327.50"></text></g><g><title>cfree (3,285,621 samples, 0.26%)</title><rect x="89.1045%" y="3301" width="0.2617%" height="15" fill="rgb(210,33,43)" fg:x="1118550790" fg:w="3285621"/><text x="89.3545%" y="3311.50"></text></g><g><title>[libc.so.6] (3,285,621 samples, 0.26%)</title><rect x="89.1045%" y="3285" width="0.2617%" height="15" fill="rgb(216,116,54)" fg:x="1118550790" fg:w="3285621"/><text x="89.3545%" y="3295.50"></text></g><g><title>[libc.so.6] (3,285,621 samples, 0.26%)</title><rect x="89.1045%" y="3269" width="0.2617%" height="15" fill="rgb(249,92,24)" fg:x="1118550790" fg:w="3285621"/><text x="89.3545%" y="3279.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (161,848,705 samples, 12.89%)</title><rect x="76.7393%" y="3541" width="12.8930%" height="15" fill="rgb(231,189,14)" fg:x="963327136" fg:w="161848705"/><text x="76.9893%" y="3551.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (161,848,705 samples, 12.89%)</title><rect x="76.7393%" y="3525" width="12.8930%" height="15" fill="rgb(230,8,41)" fg:x="963327136" fg:w="161848705"/><text x="76.9893%" y="3535.50">core::ptr::drop_in_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (161,848,705 samples, 12.89%)</title><rect x="76.7393%" y="3509" width="12.8930%" height="15" fill="rgb(249,7,27)" fg:x="963327136" fg:w="161848705"/><text x="76.9893%" y="3519.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (161,848,705 samples, 12.89%)</title><rect x="76.7393%" y="3493" width="12.8930%" height="15" fill="rgb(232,86,5)" fg:x="963327136" fg:w="161848705"/><text x="76.9893%" y="3503.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (161,848,705 samples, 12.89%)</title><rect x="76.7393%" y="3477" width="12.8930%" height="15" fill="rgb(224,175,18)" fg:x="963327136" fg:w="161848705"/><text x="76.9893%" y="3487.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3461" width="0.2660%" height="15" fill="rgb(220,129,12)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3471.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3445" width="0.2660%" height="15" fill="rgb(210,19,36)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3455.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3429" width="0.2660%" height="15" fill="rgb(219,96,14)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3439.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3413" width="0.2660%" height="15" fill="rgb(249,106,1)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3423.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3397" width="0.2660%" height="15" fill="rgb(249,155,20)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3407.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3381" width="0.2660%" height="15" fill="rgb(244,168,9)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3391.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3365" width="0.2660%" height="15" fill="rgb(216,23,50)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3375.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3349" width="0.2660%" height="15" fill="rgb(224,219,20)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3359.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3333" width="0.2660%" height="15" fill="rgb(222,156,15)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3343.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3317" width="0.2660%" height="15" fill="rgb(231,97,17)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3301" width="0.2660%" height="15" fill="rgb(218,70,48)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3285" width="0.2660%" height="15" fill="rgb(212,196,52)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3269" width="0.2660%" height="15" fill="rgb(243,203,18)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3279.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3253" width="0.2660%" height="15" fill="rgb(252,125,41)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3237" width="0.2660%" height="15" fill="rgb(223,180,33)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3221" width="0.2660%" height="15" fill="rgb(254,159,46)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3231.50"></text></g><g><title>alloc::alloc::dealloc (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3205" width="0.2660%" height="15" fill="rgb(254,38,10)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3215.50"></text></g><g><title>cfree (3,339,430 samples, 0.27%)</title><rect x="89.3662%" y="3189" width="0.2660%" height="15" fill="rgb(208,217,32)" fg:x="1121836411" fg:w="3339430"/><text x="89.6162%" y="3199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,316,922 samples, 0.26%)</title><rect x="89.9004%" y="3381" width="0.2642%" height="15" fill="rgb(221,120,13)" fg:x="1128542517" fg:w="3316922"/><text x="90.1504%" y="3391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,316,922 samples, 0.26%)</title><rect x="89.9004%" y="3365" width="0.2642%" height="15" fill="rgb(246,54,52)" fg:x="1128542517" fg:w="3316922"/><text x="90.1504%" y="3375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,609,818 samples, 0.29%)</title><rect x="90.1647%" y="3349" width="0.2876%" height="15" fill="rgb(242,34,25)" fg:x="1131859439" fg:w="3609818"/><text x="90.4147%" y="3359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,609,818 samples, 0.29%)</title><rect x="90.1647%" y="3333" width="0.2876%" height="15" fill="rgb(247,209,9)" fg:x="1131859439" fg:w="3609818"/><text x="90.4147%" y="3343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,361,907 samples, 0.27%)</title><rect x="90.4522%" y="3333" width="0.2678%" height="15" fill="rgb(228,71,26)" fg:x="1135469257" fg:w="3361907"/><text x="90.7022%" y="3343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,361,907 samples, 0.27%)</title><rect x="90.4522%" y="3317" width="0.2678%" height="15" fill="rgb(222,145,49)" fg:x="1135469257" fg:w="3361907"/><text x="90.7022%" y="3327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (6,659,046 samples, 0.53%)</title><rect x="90.9812%" y="3317" width="0.5305%" height="15" fill="rgb(218,121,17)" fg:x="1142110043" fg:w="6659046"/><text x="91.2312%" y="3327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (6,659,046 samples, 0.53%)</title><rect x="90.9812%" y="3301" width="0.5305%" height="15" fill="rgb(244,50,7)" fg:x="1142110043" fg:w="6659046"/><text x="91.2312%" y="3311.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (1,003,305,993 samples, 79.92%)</title><rect x="11.8484%" y="3557" width="79.9240%" height="15" fill="rgb(246,229,37)" fg:x="148736531" fg:w="1003305993"/><text x="12.0984%" y="3567.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (26,866,683 samples, 2.14%)</title><rect x="89.6322%" y="3541" width="2.1402%" height="15" fill="rgb(225,18,5)" fg:x="1125175841" fg:w="26866683"/><text x="89.8822%" y="3551.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (26,866,683 samples, 2.14%)</title><rect x="89.6322%" y="3525" width="2.1402%" height="15" fill="rgb(213,204,8)" fg:x="1125175841" fg:w="26866683"/><text x="89.8822%" y="3535.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (26,866,683 samples, 2.14%)</title><rect x="89.6322%" y="3509" width="2.1402%" height="15" fill="rgb(238,103,6)" fg:x="1125175841" fg:w="26866683"/><text x="89.8822%" y="3519.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (26,866,683 samples, 2.14%)</title><rect x="89.6322%" y="3493" width="2.1402%" height="15" fill="rgb(222,25,35)" fg:x="1125175841" fg:w="26866683"/><text x="89.8822%" y="3503.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (26,866,683 samples, 2.14%)</title><rect x="89.6322%" y="3477" width="2.1402%" height="15" fill="rgb(213,203,35)" fg:x="1125175841" fg:w="26866683"/><text x="89.8822%" y="3487.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (26,866,683 samples, 2.14%)</title><rect x="89.6322%" y="3461" width="2.1402%" height="15" fill="rgb(221,79,53)" fg:x="1125175841" fg:w="26866683"/><text x="89.8822%" y="3471.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (26,866,683 samples, 2.14%)</title><rect x="89.6322%" y="3445" width="2.1402%" height="15" fill="rgb(243,200,35)" fg:x="1125175841" fg:w="26866683"/><text x="89.8822%" y="3455.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (26,866,683 samples, 2.14%)</title><rect x="89.6322%" y="3429" width="2.1402%" height="15" fill="rgb(248,60,25)" fg:x="1125175841" fg:w="26866683"/><text x="89.8822%" y="3439.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (26,866,683 samples, 2.14%)</title><rect x="89.6322%" y="3413" width="2.1402%" height="15" fill="rgb(227,53,46)" fg:x="1125175841" fg:w="26866683"/><text x="89.8822%" y="3423.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (26,866,683 samples, 2.14%)</title><rect x="89.6322%" y="3397" width="2.1402%" height="15" fill="rgb(216,120,32)" fg:x="1125175841" fg:w="26866683"/><text x="89.8822%" y="3407.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (20,183,085 samples, 1.61%)</title><rect x="90.1647%" y="3381" width="1.6078%" height="15" fill="rgb(220,134,1)" fg:x="1131859439" fg:w="20183085"/><text x="90.4147%" y="3391.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (20,183,085 samples, 1.61%)</title><rect x="90.1647%" y="3365" width="1.6078%" height="15" fill="rgb(237,168,5)" fg:x="1131859439" fg:w="20183085"/><text x="90.4147%" y="3375.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (16,573,267 samples, 1.32%)</title><rect x="90.4522%" y="3349" width="1.3202%" height="15" fill="rgb(231,100,33)" fg:x="1135469257" fg:w="16573267"/><text x="90.7022%" y="3359.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (13,211,360 samples, 1.05%)</title><rect x="90.7200%" y="3333" width="1.0524%" height="15" fill="rgb(236,177,47)" fg:x="1138831164" fg:w="13211360"/><text x="90.9700%" y="3343.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,273,435 samples, 0.26%)</title><rect x="91.5117%" y="3317" width="0.2608%" height="15" fill="rgb(235,7,49)" fg:x="1148769089" fg:w="3273435"/><text x="91.7617%" y="3327.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,273,435 samples, 0.26%)</title><rect x="91.5117%" y="3301" width="0.2608%" height="15" fill="rgb(232,119,22)" fg:x="1148769089" fg:w="3273435"/><text x="91.7617%" y="3311.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,273,435 samples, 0.26%)</title><rect x="91.5117%" y="3285" width="0.2608%" height="15" fill="rgb(254,73,53)" fg:x="1148769089" fg:w="3273435"/><text x="91.7617%" y="3295.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,273,435 samples, 0.26%)</title><rect x="91.5117%" y="3269" width="0.2608%" height="15" fill="rgb(251,35,20)" fg:x="1148769089" fg:w="3273435"/><text x="91.7617%" y="3279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,273,435 samples, 0.26%)</title><rect x="91.5117%" y="3253" width="0.2608%" height="15" fill="rgb(241,119,20)" fg:x="1148769089" fg:w="3273435"/><text x="91.7617%" y="3263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,273,435 samples, 0.26%)</title><rect x="91.5117%" y="3237" width="0.2608%" height="15" fill="rgb(207,102,14)" fg:x="1148769089" fg:w="3273435"/><text x="91.7617%" y="3247.50"></text></g><g><title>[libc.so.6] (2,586,863 samples, 0.21%)</title><rect x="91.7725%" y="3349" width="0.2061%" height="15" fill="rgb(248,201,50)" fg:x="1152042524" fg:w="2586863"/><text x="92.0225%" y="3359.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5,222,151 samples, 0.42%)</title><rect x="91.7725%" y="3429" width="0.4160%" height="15" fill="rgb(222,185,44)" fg:x="1152042524" fg:w="5222151"/><text x="92.0225%" y="3439.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,222,151 samples, 0.42%)</title><rect x="91.7725%" y="3413" width="0.4160%" height="15" fill="rgb(218,107,18)" fg:x="1152042524" fg:w="5222151"/><text x="92.0225%" y="3423.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (5,222,151 samples, 0.42%)</title><rect x="91.7725%" y="3397" width="0.4160%" height="15" fill="rgb(237,177,39)" fg:x="1152042524" fg:w="5222151"/><text x="92.0225%" y="3407.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (5,222,151 samples, 0.42%)</title><rect x="91.7725%" y="3381" width="0.4160%" height="15" fill="rgb(246,69,6)" fg:x="1152042524" fg:w="5222151"/><text x="92.0225%" y="3391.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,222,151 samples, 0.42%)</title><rect x="91.7725%" y="3365" width="0.4160%" height="15" fill="rgb(234,208,37)" fg:x="1152042524" fg:w="5222151"/><text x="92.0225%" y="3375.50"></text></g><g><title>malloc (2,635,288 samples, 0.21%)</title><rect x="91.9785%" y="3349" width="0.2099%" height="15" fill="rgb(225,4,6)" fg:x="1154629387" fg:w="2635288"/><text x="92.2285%" y="3359.50"></text></g><g><title>[libc.so.6] (2,635,288 samples, 0.21%)</title><rect x="91.9785%" y="3333" width="0.2099%" height="15" fill="rgb(233,45,0)" fg:x="1154629387" fg:w="2635288"/><text x="92.2285%" y="3343.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,749,017 samples, 0.22%)</title><rect x="92.1885%" y="3317" width="0.2190%" height="15" fill="rgb(226,136,5)" fg:x="1157264675" fg:w="2749017"/><text x="92.4385%" y="3327.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,749,017 samples, 0.22%)</title><rect x="92.1885%" y="3301" width="0.2190%" height="15" fill="rgb(211,91,47)" fg:x="1157264675" fg:w="2749017"/><text x="92.4385%" y="3311.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2,749,017 samples, 0.22%)</title><rect x="92.1885%" y="3285" width="0.2190%" height="15" fill="rgb(242,88,51)" fg:x="1157264675" fg:w="2749017"/><text x="92.4385%" y="3295.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,749,017 samples, 0.22%)</title><rect x="92.1885%" y="3269" width="0.2190%" height="15" fill="rgb(230,91,28)" fg:x="1157264675" fg:w="2749017"/><text x="92.4385%" y="3279.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,749,017 samples, 0.22%)</title><rect x="92.1885%" y="3253" width="0.2190%" height="15" fill="rgb(254,186,29)" fg:x="1157264675" fg:w="2749017"/><text x="92.4385%" y="3263.50"></text></g><g><title>[libc.so.6] (2,749,017 samples, 0.22%)</title><rect x="92.1885%" y="3237" width="0.2190%" height="15" fill="rgb(238,6,4)" fg:x="1157264675" fg:w="2749017"/><text x="92.4385%" y="3247.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (858,938 samples, 0.07%)</title><rect x="92.4074%" y="2837" width="0.0684%" height="15" fill="rgb(221,151,16)" fg:x="1160013692" fg:w="858938"/><text x="92.6574%" y="2847.50"></text></g><g><title>serde::de::MapAccess::next_entry (858,938 samples, 0.07%)</title><rect x="92.4074%" y="2821" width="0.0684%" height="15" fill="rgb(251,143,52)" fg:x="1160013692" fg:w="858938"/><text x="92.6574%" y="2831.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (858,938 samples, 0.07%)</title><rect x="92.4074%" y="2805" width="0.0684%" height="15" fill="rgb(206,90,15)" fg:x="1160013692" fg:w="858938"/><text x="92.6574%" y="2815.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (858,938 samples, 0.07%)</title><rect x="92.4074%" y="2789" width="0.0684%" height="15" fill="rgb(218,35,8)" fg:x="1160013692" fg:w="858938"/><text x="92.6574%" y="2799.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2,646,262 samples, 0.21%)</title><rect x="92.4759%" y="2421" width="0.2108%" height="15" fill="rgb(239,215,6)" fg:x="1160872630" fg:w="2646262"/><text x="92.7259%" y="2431.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (2,646,262 samples, 0.21%)</title><rect x="92.4759%" y="2405" width="0.2108%" height="15" fill="rgb(245,116,39)" fg:x="1160872630" fg:w="2646262"/><text x="92.7259%" y="2415.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (2,646,262 samples, 0.21%)</title><rect x="92.4759%" y="2389" width="0.2108%" height="15" fill="rgb(242,65,28)" fg:x="1160872630" fg:w="2646262"/><text x="92.7259%" y="2399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (515,304 samples, 0.04%)</title><rect x="92.6456%" y="2373" width="0.0410%" height="15" fill="rgb(252,132,53)" fg:x="1163003588" fg:w="515304"/><text x="92.8956%" y="2383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,932,163 samples, 0.15%)</title><rect x="92.6867%" y="1653" width="0.1539%" height="15" fill="rgb(224,159,50)" fg:x="1163518892" fg:w="1932163"/><text x="92.9367%" y="1663.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,932,163 samples, 0.15%)</title><rect x="92.6867%" y="1637" width="0.1539%" height="15" fill="rgb(224,93,4)" fg:x="1163518892" fg:w="1932163"/><text x="92.9367%" y="1647.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,932,163 samples, 0.15%)</title><rect x="92.6867%" y="1621" width="0.1539%" height="15" fill="rgb(208,81,34)" fg:x="1163518892" fg:w="1932163"/><text x="92.9367%" y="1631.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,932,163 samples, 0.15%)</title><rect x="92.6867%" y="1605" width="0.1539%" height="15" fill="rgb(233,92,54)" fg:x="1163518892" fg:w="1932163"/><text x="92.9367%" y="1615.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,932,163 samples, 0.15%)</title><rect x="92.6867%" y="1589" width="0.1539%" height="15" fill="rgb(237,21,14)" fg:x="1163518892" fg:w="1932163"/><text x="92.9367%" y="1599.50"></text></g><g><title>malloc (1,932,163 samples, 0.15%)</title><rect x="92.6867%" y="1573" width="0.1539%" height="15" fill="rgb(249,128,51)" fg:x="1163518892" fg:w="1932163"/><text x="92.9367%" y="1583.50"></text></g><g><title>[libc.so.6] (1,932,163 samples, 0.15%)</title><rect x="92.6867%" y="1557" width="0.1539%" height="15" fill="rgb(223,129,24)" fg:x="1163518892" fg:w="1932163"/><text x="92.9367%" y="1567.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,303,897 samples, 0.18%)</title><rect x="92.8406%" y="613" width="0.1835%" height="15" fill="rgb(231,168,25)" fg:x="1165451055" fg:w="2303897"/><text x="93.0906%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,303,897 samples, 0.18%)</title><rect x="92.8406%" y="597" width="0.1835%" height="15" fill="rgb(224,39,20)" fg:x="1165451055" fg:w="2303897"/><text x="93.0906%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2,303,897 samples, 0.18%)</title><rect x="92.8406%" y="581" width="0.1835%" height="15" fill="rgb(225,152,53)" fg:x="1165451055" fg:w="2303897"/><text x="93.0906%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,303,897 samples, 0.18%)</title><rect x="92.8406%" y="565" width="0.1835%" height="15" fill="rgb(252,17,24)" fg:x="1165451055" fg:w="2303897"/><text x="93.0906%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,303,897 samples, 0.18%)</title><rect x="92.8406%" y="549" width="0.1835%" height="15" fill="rgb(250,114,30)" fg:x="1165451055" fg:w="2303897"/><text x="93.0906%" y="559.50"></text></g><g><title>malloc (2,303,897 samples, 0.18%)</title><rect x="92.8406%" y="533" width="0.1835%" height="15" fill="rgb(229,5,4)" fg:x="1165451055" fg:w="2303897"/><text x="93.0906%" y="543.50"></text></g><g><title>[libc.so.6] (2,303,897 samples, 0.18%)</title><rect x="92.8406%" y="517" width="0.1835%" height="15" fill="rgb(225,176,49)" fg:x="1165451055" fg:w="2303897"/><text x="93.0906%" y="527.50"></text></g><g><title>serde::de::MapAccess::next_entry (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1477" width="0.3257%" height="15" fill="rgb(224,221,49)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1487.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1461" width="0.3257%" height="15" fill="rgb(253,169,27)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1471.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1445" width="0.3257%" height="15" fill="rgb(211,206,16)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1455.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1429" width="0.3257%" height="15" fill="rgb(244,87,35)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1439.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1413" width="0.3257%" height="15" fill="rgb(246,28,10)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1423.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1397" width="0.3257%" height="15" fill="rgb(229,12,44)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1407.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1381" width="0.3257%" height="15" fill="rgb(210,145,37)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1391.50"></text></g><g><title>serde::de::SeqAccess::next_element (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1365" width="0.3257%" height="15" fill="rgb(227,112,52)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1375.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1349" width="0.3257%" height="15" fill="rgb(238,155,34)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1359.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1333" width="0.3257%" height="15" fill="rgb(239,226,36)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1343.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1317" width="0.3257%" height="15" fill="rgb(230,16,23)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1327.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1301" width="0.3257%" height="15" fill="rgb(236,171,36)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1311.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1285" width="0.3257%" height="15" fill="rgb(221,22,14)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1295.50"></text></g><g><title>serde::de::MapAccess::next_entry (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1269" width="0.3257%" height="15" fill="rgb(242,43,11)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1279.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1253" width="0.3257%" height="15" fill="rgb(232,69,23)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1263.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1237" width="0.3257%" height="15" fill="rgb(216,180,54)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1247.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1221" width="0.3257%" height="15" fill="rgb(216,5,24)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1231.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1205" width="0.3257%" height="15" fill="rgb(225,89,9)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1215.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1189" width="0.3257%" height="15" fill="rgb(243,75,33)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1199.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1173" width="0.3257%" height="15" fill="rgb(247,141,45)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1183.50"></text></g><g><title>serde::de::SeqAccess::next_element (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1157" width="0.3257%" height="15" fill="rgb(232,177,36)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1167.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1141" width="0.3257%" height="15" fill="rgb(219,125,36)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1151.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1125" width="0.3257%" height="15" fill="rgb(227,94,9)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1135.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1109" width="0.3257%" height="15" fill="rgb(240,34,52)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1119.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1093" width="0.3257%" height="15" fill="rgb(216,45,12)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1103.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1077" width="0.3257%" height="15" fill="rgb(246,21,19)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1087.50"></text></g><g><title>serde::de::MapAccess::next_entry (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1061" width="0.3257%" height="15" fill="rgb(213,98,42)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1071.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1045" width="0.3257%" height="15" fill="rgb(250,136,47)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1055.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1029" width="0.3257%" height="15" fill="rgb(251,124,27)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1039.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="1013" width="0.3257%" height="15" fill="rgb(229,180,14)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1023.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="997" width="0.3257%" height="15" fill="rgb(245,216,25)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="1007.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="981" width="0.3257%" height="15" fill="rgb(251,43,5)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="991.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="965" width="0.3257%" height="15" fill="rgb(250,128,24)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="975.50"></text></g><g><title>serde::de::SeqAccess::next_element (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="949" width="0.3257%" height="15" fill="rgb(217,117,27)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="959.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="933" width="0.3257%" height="15" fill="rgb(245,147,4)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="943.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="917" width="0.3257%" height="15" fill="rgb(242,201,35)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="927.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="901" width="0.3257%" height="15" fill="rgb(218,181,1)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="911.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="885" width="0.3257%" height="15" fill="rgb(222,6,29)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="895.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="869" width="0.3257%" height="15" fill="rgb(208,186,3)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="879.50"></text></g><g><title>serde::de::MapAccess::next_entry (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="853" width="0.3257%" height="15" fill="rgb(216,36,26)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="863.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="837" width="0.3257%" height="15" fill="rgb(248,201,23)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="847.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="821" width="0.3257%" height="15" fill="rgb(251,170,31)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="831.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="805" width="0.3257%" height="15" fill="rgb(207,110,25)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="789" width="0.3257%" height="15" fill="rgb(250,54,15)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="799.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="773" width="0.3257%" height="15" fill="rgb(227,68,33)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="783.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="757" width="0.3257%" height="15" fill="rgb(238,34,41)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="767.50"></text></g><g><title>serde::de::SeqAccess::next_element (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="741" width="0.3257%" height="15" fill="rgb(220,11,15)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="751.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="725" width="0.3257%" height="15" fill="rgb(246,111,35)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="709" width="0.3257%" height="15" fill="rgb(209,88,53)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="693" width="0.3257%" height="15" fill="rgb(231,185,47)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="677" width="0.3257%" height="15" fill="rgb(233,154,1)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="661" width="0.3257%" height="15" fill="rgb(225,15,46)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="671.50"></text></g><g><title>serde::de::MapAccess::next_entry (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="645" width="0.3257%" height="15" fill="rgb(211,135,41)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="655.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (4,088,465 samples, 0.33%)</title><rect x="92.8406%" y="629" width="0.3257%" height="15" fill="rgb(208,54,0)" fg:x="1165451055" fg:w="4088465"/><text x="93.0906%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="613" width="0.1422%" height="15" fill="rgb(244,136,14)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="597" width="0.1422%" height="15" fill="rgb(241,56,14)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="581" width="0.1422%" height="15" fill="rgb(205,80,24)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="565" width="0.1422%" height="15" fill="rgb(220,57,4)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="549" width="0.1422%" height="15" fill="rgb(226,193,50)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="559.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="533" width="0.1422%" height="15" fill="rgb(231,168,22)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="543.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="517" width="0.1422%" height="15" fill="rgb(254,215,14)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="501" width="0.1422%" height="15" fill="rgb(211,115,16)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="485" width="0.1422%" height="15" fill="rgb(236,210,16)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="469" width="0.1422%" height="15" fill="rgb(221,94,12)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="453" width="0.1422%" height="15" fill="rgb(235,218,49)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="463.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="437" width="0.1422%" height="15" fill="rgb(217,114,14)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="447.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="421" width="0.1422%" height="15" fill="rgb(216,145,22)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="405" width="0.1422%" height="15" fill="rgb(217,112,39)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="415.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="389" width="0.1422%" height="15" fill="rgb(225,85,32)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="373" width="0.1422%" height="15" fill="rgb(245,209,47)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="357" width="0.1422%" height="15" fill="rgb(218,220,15)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="341" width="0.1422%" height="15" fill="rgb(222,202,31)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="351.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="325" width="0.1422%" height="15" fill="rgb(243,203,4)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="335.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="309" width="0.1422%" height="15" fill="rgb(237,92,17)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="319.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="293" width="0.1422%" height="15" fill="rgb(231,119,7)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="277" width="0.1422%" height="15" fill="rgb(237,82,41)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="261" width="0.1422%" height="15" fill="rgb(226,81,48)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="245" width="0.1422%" height="15" fill="rgb(234,70,51)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="255.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="229" width="0.1422%" height="15" fill="rgb(251,86,4)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="239.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="213" width="0.1422%" height="15" fill="rgb(244,144,28)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="197" width="0.1422%" height="15" fill="rgb(232,161,39)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="207.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="181" width="0.1422%" height="15" fill="rgb(247,34,51)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="165" width="0.1422%" height="15" fill="rgb(225,132,2)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="149" width="0.1422%" height="15" fill="rgb(209,159,44)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="133" width="0.1422%" height="15" fill="rgb(251,214,1)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="117" width="0.1422%" height="15" fill="rgb(247,84,47)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="127.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="101" width="0.1422%" height="15" fill="rgb(240,111,43)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="111.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="85" width="0.1422%" height="15" fill="rgb(215,214,35)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="95.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="69" width="0.1422%" height="15" fill="rgb(248,207,23)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="79.50"></text></g><g><title>__rdl_alloc (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="53" width="0.1422%" height="15" fill="rgb(214,186,4)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="63.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,784,568 samples, 0.14%)</title><rect x="93.0241%" y="37" width="0.1422%" height="15" fill="rgb(220,133,22)" fg:x="1167754952" fg:w="1784568"/><text x="93.2741%" y="47.50"></text></g><g><title>serde::de::MapAccess::next_entry (10,081,872 samples, 0.80%)</title><rect x="92.4759%" y="2517" width="0.8031%" height="15" fill="rgb(239,134,19)" fg:x="1160872630" fg:w="10081872"/><text x="92.7259%" y="2527.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (10,081,872 samples, 0.80%)</title><rect x="92.4759%" y="2501" width="0.8031%" height="15" fill="rgb(250,140,9)" fg:x="1160872630" fg:w="10081872"/><text x="92.7259%" y="2511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10,081,872 samples, 0.80%)</title><rect x="92.4759%" y="2485" width="0.8031%" height="15" fill="rgb(225,59,14)" fg:x="1160872630" fg:w="10081872"/><text x="92.7259%" y="2495.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,081,872 samples, 0.80%)</title><rect x="92.4759%" y="2469" width="0.8031%" height="15" fill="rgb(214,152,51)" fg:x="1160872630" fg:w="10081872"/><text x="92.7259%" y="2479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,081,872 samples, 0.80%)</title><rect x="92.4759%" y="2453" width="0.8031%" height="15" fill="rgb(251,227,43)" fg:x="1160872630" fg:w="10081872"/><text x="92.7259%" y="2463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,081,872 samples, 0.80%)</title><rect x="92.4759%" y="2437" width="0.8031%" height="15" fill="rgb(241,96,17)" fg:x="1160872630" fg:w="10081872"/><text x="92.7259%" y="2447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2421" width="0.5923%" height="15" fill="rgb(234,198,43)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2431.50"></text></g><g><title>serde::de::SeqAccess::next_element (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2405" width="0.5923%" height="15" fill="rgb(220,108,29)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2415.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2389" width="0.5923%" height="15" fill="rgb(226,163,33)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2399.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2373" width="0.5923%" height="15" fill="rgb(205,194,45)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2357" width="0.5923%" height="15" fill="rgb(206,143,44)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2341" width="0.5923%" height="15" fill="rgb(236,136,36)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2325" width="0.5923%" height="15" fill="rgb(249,172,42)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2335.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2309" width="0.5923%" height="15" fill="rgb(216,139,23)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2319.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2293" width="0.5923%" height="15" fill="rgb(207,166,20)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2277" width="0.5923%" height="15" fill="rgb(210,209,22)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2287.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2261" width="0.5923%" height="15" fill="rgb(232,118,20)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2245" width="0.5923%" height="15" fill="rgb(238,113,42)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2229" width="0.5923%" height="15" fill="rgb(231,42,5)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2213" width="0.5923%" height="15" fill="rgb(243,166,24)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2223.50"></text></g><g><title>serde::de::SeqAccess::next_element (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2197" width="0.5923%" height="15" fill="rgb(237,226,12)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2207.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2181" width="0.5923%" height="15" fill="rgb(229,133,24)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2191.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2165" width="0.5923%" height="15" fill="rgb(238,33,43)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2149" width="0.5923%" height="15" fill="rgb(227,59,38)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2133" width="0.5923%" height="15" fill="rgb(230,97,0)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2117" width="0.5923%" height="15" fill="rgb(250,173,50)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2127.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2101" width="0.5923%" height="15" fill="rgb(240,15,50)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2111.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2085" width="0.5923%" height="15" fill="rgb(221,93,22)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2095.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2069" width="0.5923%" height="15" fill="rgb(245,180,53)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2079.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2053" width="0.5923%" height="15" fill="rgb(231,88,51)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2063.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2037" width="0.5923%" height="15" fill="rgb(240,58,21)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2047.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2021" width="0.5923%" height="15" fill="rgb(237,21,10)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2031.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="2005" width="0.5923%" height="15" fill="rgb(218,43,11)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="2015.50"></text></g><g><title>serde::de::SeqAccess::next_element (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1989" width="0.5923%" height="15" fill="rgb(218,221,29)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1999.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1973" width="0.5923%" height="15" fill="rgb(214,118,42)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1983.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1957" width="0.5923%" height="15" fill="rgb(251,200,26)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1967.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1941" width="0.5923%" height="15" fill="rgb(237,101,39)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1951.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1925" width="0.5923%" height="15" fill="rgb(251,117,11)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1935.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1909" width="0.5923%" height="15" fill="rgb(216,223,23)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1919.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1893" width="0.5923%" height="15" fill="rgb(251,54,12)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1903.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1877" width="0.5923%" height="15" fill="rgb(254,176,54)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1887.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1861" width="0.5923%" height="15" fill="rgb(210,32,8)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1871.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1845" width="0.5923%" height="15" fill="rgb(235,52,38)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1855.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1829" width="0.5923%" height="15" fill="rgb(231,4,44)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1839.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1813" width="0.5923%" height="15" fill="rgb(249,2,32)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1823.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1797" width="0.5923%" height="15" fill="rgb(224,65,26)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1807.50"></text></g><g><title>serde::de::SeqAccess::next_element (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1781" width="0.5923%" height="15" fill="rgb(250,73,40)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1791.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1765" width="0.5923%" height="15" fill="rgb(253,177,16)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1775.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1749" width="0.5923%" height="15" fill="rgb(217,32,34)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1759.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1733" width="0.5923%" height="15" fill="rgb(212,7,10)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1743.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1717" width="0.5923%" height="15" fill="rgb(245,89,8)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1727.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1701" width="0.5923%" height="15" fill="rgb(237,16,53)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1711.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1685" width="0.5923%" height="15" fill="rgb(250,204,30)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1695.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (7,435,610 samples, 0.59%)</title><rect x="92.6867%" y="1669" width="0.5923%" height="15" fill="rgb(208,77,27)" fg:x="1163518892" fg:w="7435610"/><text x="92.9367%" y="1679.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,503,447 samples, 0.44%)</title><rect x="92.8406%" y="1653" width="0.4384%" height="15" fill="rgb(250,204,28)" fg:x="1165451055" fg:w="5503447"/><text x="93.0906%" y="1663.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,503,447 samples, 0.44%)</title><rect x="92.8406%" y="1637" width="0.4384%" height="15" fill="rgb(244,63,21)" fg:x="1165451055" fg:w="5503447"/><text x="93.0906%" y="1647.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,503,447 samples, 0.44%)</title><rect x="92.8406%" y="1621" width="0.4384%" height="15" fill="rgb(236,85,44)" fg:x="1165451055" fg:w="5503447"/><text x="93.0906%" y="1631.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,503,447 samples, 0.44%)</title><rect x="92.8406%" y="1605" width="0.4384%" height="15" fill="rgb(215,98,4)" fg:x="1165451055" fg:w="5503447"/><text x="93.0906%" y="1615.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,503,447 samples, 0.44%)</title><rect x="92.8406%" y="1589" width="0.4384%" height="15" fill="rgb(235,38,11)" fg:x="1165451055" fg:w="5503447"/><text x="93.0906%" y="1599.50"></text></g><g><title>serde::de::SeqAccess::next_element (5,503,447 samples, 0.44%)</title><rect x="92.8406%" y="1573" width="0.4384%" height="15" fill="rgb(254,186,25)" fg:x="1165451055" fg:w="5503447"/><text x="93.0906%" y="1583.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,503,447 samples, 0.44%)</title><rect x="92.8406%" y="1557" width="0.4384%" height="15" fill="rgb(225,55,31)" fg:x="1165451055" fg:w="5503447"/><text x="93.0906%" y="1567.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,503,447 samples, 0.44%)</title><rect x="92.8406%" y="1541" width="0.4384%" height="15" fill="rgb(211,15,21)" fg:x="1165451055" fg:w="5503447"/><text x="93.0906%" y="1551.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,503,447 samples, 0.44%)</title><rect x="92.8406%" y="1525" width="0.4384%" height="15" fill="rgb(215,187,41)" fg:x="1165451055" fg:w="5503447"/><text x="93.0906%" y="1535.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,503,447 samples, 0.44%)</title><rect x="92.8406%" y="1509" width="0.4384%" height="15" fill="rgb(248,69,32)" fg:x="1165451055" fg:w="5503447"/><text x="93.0906%" y="1519.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,503,447 samples, 0.44%)</title><rect x="92.8406%" y="1493" width="0.4384%" height="15" fill="rgb(252,102,52)" fg:x="1165451055" fg:w="5503447"/><text x="93.0906%" y="1503.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,414,982 samples, 0.11%)</title><rect x="93.1663%" y="1477" width="0.1127%" height="15" fill="rgb(253,140,32)" fg:x="1169539520" fg:w="1414982"/><text x="93.4163%" y="1487.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,414,982 samples, 0.11%)</title><rect x="93.1663%" y="1461" width="0.1127%" height="15" fill="rgb(216,56,42)" fg:x="1169539520" fg:w="1414982"/><text x="93.4163%" y="1471.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,414,982 samples, 0.11%)</title><rect x="93.1663%" y="1445" width="0.1127%" height="15" fill="rgb(216,184,14)" fg:x="1169539520" fg:w="1414982"/><text x="93.4163%" y="1455.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,414,982 samples, 0.11%)</title><rect x="93.1663%" y="1429" width="0.1127%" height="15" fill="rgb(237,187,27)" fg:x="1169539520" fg:w="1414982"/><text x="93.4163%" y="1439.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1,414,982 samples, 0.11%)</title><rect x="93.1663%" y="1413" width="0.1127%" height="15" fill="rgb(219,65,3)" fg:x="1169539520" fg:w="1414982"/><text x="93.4163%" y="1423.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1,414,982 samples, 0.11%)</title><rect x="93.1663%" y="1397" width="0.1127%" height="15" fill="rgb(245,83,25)" fg:x="1169539520" fg:w="1414982"/><text x="93.4163%" y="1407.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,414,982 samples, 0.11%)</title><rect x="93.1663%" y="1381" width="0.1127%" height="15" fill="rgb(214,205,45)" fg:x="1169539520" fg:w="1414982"/><text x="93.4163%" y="1391.50"></text></g><g><title>serde::de::MapAccess::next_entry (14,875,785 samples, 1.19%)</title><rect x="92.1885%" y="3349" width="1.1850%" height="15" fill="rgb(241,20,18)" fg:x="1157264675" fg:w="14875785"/><text x="92.4385%" y="3359.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (14,875,785 samples, 1.19%)</title><rect x="92.1885%" y="3333" width="1.1850%" height="15" fill="rgb(232,163,23)" fg:x="1157264675" fg:w="14875785"/><text x="92.4385%" y="3343.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3317" width="0.9660%" height="15" fill="rgb(214,5,46)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3327.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3301" width="0.9660%" height="15" fill="rgb(229,78,17)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3311.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3285" width="0.9660%" height="15" fill="rgb(248,89,10)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3295.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3269" width="0.9660%" height="15" fill="rgb(248,54,15)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3279.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3253" width="0.9660%" height="15" fill="rgb(223,116,6)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3263.50"></text></g><g><title>serde::de::SeqAccess::next_element (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3237" width="0.9660%" height="15" fill="rgb(205,125,38)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3247.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3221" width="0.9660%" height="15" fill="rgb(251,78,38)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3231.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3205" width="0.9660%" height="15" fill="rgb(253,78,28)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3215.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3189" width="0.9660%" height="15" fill="rgb(209,120,3)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3199.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3173" width="0.9660%" height="15" fill="rgb(238,229,9)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3183.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3157" width="0.9660%" height="15" fill="rgb(253,159,18)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3167.50"></text></g><g><title>serde::de::MapAccess::next_entry (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3141" width="0.9660%" height="15" fill="rgb(244,42,34)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3151.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3125" width="0.9660%" height="15" fill="rgb(224,8,7)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3135.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3109" width="0.9660%" height="15" fill="rgb(210,201,45)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3119.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3093" width="0.9660%" height="15" fill="rgb(252,185,21)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3103.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3077" width="0.9660%" height="15" fill="rgb(223,131,1)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3087.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3061" width="0.9660%" height="15" fill="rgb(245,141,16)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3071.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3045" width="0.9660%" height="15" fill="rgb(229,55,45)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3055.50"></text></g><g><title>serde::de::SeqAccess::next_element (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3029" width="0.9660%" height="15" fill="rgb(208,92,15)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3039.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="3013" width="0.9660%" height="15" fill="rgb(234,185,47)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3023.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="2997" width="0.9660%" height="15" fill="rgb(253,104,50)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="3007.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="2981" width="0.9660%" height="15" fill="rgb(205,70,7)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="2991.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="2965" width="0.9660%" height="15" fill="rgb(240,178,43)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="2975.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="2949" width="0.9660%" height="15" fill="rgb(214,112,2)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="2959.50"></text></g><g><title>serde::de::MapAccess::next_entry (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="2933" width="0.9660%" height="15" fill="rgb(206,46,17)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="2943.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="2917" width="0.9660%" height="15" fill="rgb(225,220,16)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="2927.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="2901" width="0.9660%" height="15" fill="rgb(238,65,40)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="2911.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="2885" width="0.9660%" height="15" fill="rgb(230,151,21)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="2895.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="2869" width="0.9660%" height="15" fill="rgb(218,58,49)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="2879.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,126,768 samples, 0.97%)</title><rect x="92.4074%" y="2853" width="0.9660%" height="15" fill="rgb(219,179,14)" fg:x="1160013692" fg:w="12126768"/><text x="92.6574%" y="2863.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2837" width="0.8976%" height="15" fill="rgb(223,72,1)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2847.50"></text></g><g><title>serde::de::SeqAccess::next_element (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2821" width="0.8976%" height="15" fill="rgb(238,126,10)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2831.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2805" width="0.8976%" height="15" fill="rgb(224,206,38)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2815.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2789" width="0.8976%" height="15" fill="rgb(212,201,54)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2773" width="0.8976%" height="15" fill="rgb(218,154,48)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2783.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2757" width="0.8976%" height="15" fill="rgb(232,93,24)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2741" width="0.8976%" height="15" fill="rgb(245,30,21)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2751.50"></text></g><g><title>serde::de::MapAccess::next_entry (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2725" width="0.8976%" height="15" fill="rgb(242,148,29)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2735.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2709" width="0.8976%" height="15" fill="rgb(244,153,54)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2719.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2693" width="0.8976%" height="15" fill="rgb(252,87,22)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2677" width="0.8976%" height="15" fill="rgb(210,51,29)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2661" width="0.8976%" height="15" fill="rgb(242,136,47)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2671.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2645" width="0.8976%" height="15" fill="rgb(238,68,4)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2629" width="0.8976%" height="15" fill="rgb(242,161,30)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2639.50"></text></g><g><title>serde::de::SeqAccess::next_element (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2613" width="0.8976%" height="15" fill="rgb(218,58,44)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2623.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2597" width="0.8976%" height="15" fill="rgb(252,125,32)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2607.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2581" width="0.8976%" height="15" fill="rgb(219,178,0)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2565" width="0.8976%" height="15" fill="rgb(213,152,7)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2549" width="0.8976%" height="15" fill="rgb(249,109,34)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,267,830 samples, 0.90%)</title><rect x="92.4759%" y="2533" width="0.8976%" height="15" fill="rgb(232,96,21)" fg:x="1160872630" fg:w="11267830"/><text x="92.7259%" y="2543.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,185,958 samples, 0.09%)</title><rect x="93.2790%" y="2517" width="0.0945%" height="15" fill="rgb(228,27,39)" fg:x="1170954502" fg:w="1185958"/><text x="93.5290%" y="2527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,185,958 samples, 0.09%)</title><rect x="93.2790%" y="2501" width="0.0945%" height="15" fill="rgb(211,182,52)" fg:x="1170954502" fg:w="1185958"/><text x="93.5290%" y="2511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,185,958 samples, 0.09%)</title><rect x="93.2790%" y="2485" width="0.0945%" height="15" fill="rgb(234,178,38)" fg:x="1170954502" fg:w="1185958"/><text x="93.5290%" y="2495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,185,958 samples, 0.09%)</title><rect x="93.2790%" y="2469" width="0.0945%" height="15" fill="rgb(221,111,3)" fg:x="1170954502" fg:w="1185958"/><text x="93.5290%" y="2479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1,185,958 samples, 0.09%)</title><rect x="93.2790%" y="2453" width="0.0945%" height="15" fill="rgb(228,175,21)" fg:x="1170954502" fg:w="1185958"/><text x="93.5290%" y="2463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1,185,958 samples, 0.09%)</title><rect x="93.2790%" y="2437" width="0.0945%" height="15" fill="rgb(228,174,43)" fg:x="1170954502" fg:w="1185958"/><text x="93.5290%" y="2447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1,185,958 samples, 0.09%)</title><rect x="93.2790%" y="2421" width="0.0945%" height="15" fill="rgb(211,191,0)" fg:x="1170954502" fg:w="1185958"/><text x="93.5290%" y="2431.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (1,185,958 samples, 0.09%)</title><rect x="93.2790%" y="2405" width="0.0945%" height="15" fill="rgb(253,117,3)" fg:x="1170954502" fg:w="1185958"/><text x="93.5290%" y="2415.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,185,958 samples, 0.09%)</title><rect x="93.2790%" y="2389" width="0.0945%" height="15" fill="rgb(241,127,19)" fg:x="1170954502" fg:w="1185958"/><text x="93.5290%" y="2399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17,447,522 samples, 1.39%)</title><rect x="92.1885%" y="3365" width="1.3899%" height="15" fill="rgb(218,103,12)" fg:x="1157264675" fg:w="17447522"/><text x="92.4385%" y="3375.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,571,737 samples, 0.20%)</title><rect x="93.3735%" y="3349" width="0.2049%" height="15" fill="rgb(236,214,43)" fg:x="1172140460" fg:w="2571737"/><text x="93.6235%" y="3359.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,571,737 samples, 0.20%)</title><rect x="93.3735%" y="3333" width="0.2049%" height="15" fill="rgb(244,144,19)" fg:x="1172140460" fg:w="2571737"/><text x="93.6235%" y="3343.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2,571,737 samples, 0.20%)</title><rect x="93.3735%" y="3317" width="0.2049%" height="15" fill="rgb(246,188,10)" fg:x="1172140460" fg:w="2571737"/><text x="93.6235%" y="3327.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (2,571,737 samples, 0.20%)</title><rect x="93.3735%" y="3301" width="0.2049%" height="15" fill="rgb(212,193,33)" fg:x="1172140460" fg:w="2571737"/><text x="93.6235%" y="3311.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (2,571,737 samples, 0.20%)</title><rect x="93.3735%" y="3285" width="0.2049%" height="15" fill="rgb(241,51,29)" fg:x="1172140460" fg:w="2571737"/><text x="93.6235%" y="3295.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (2,571,737 samples, 0.20%)</title><rect x="93.3735%" y="3269" width="0.2049%" height="15" fill="rgb(211,58,19)" fg:x="1172140460" fg:w="2571737"/><text x="93.6235%" y="3279.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (2,571,737 samples, 0.20%)</title><rect x="93.3735%" y="3253" width="0.2049%" height="15" fill="rgb(229,111,26)" fg:x="1172140460" fg:w="2571737"/><text x="93.6235%" y="3263.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (2,571,737 samples, 0.20%)</title><rect x="93.3735%" y="3237" width="0.2049%" height="15" fill="rgb(213,115,40)" fg:x="1172140460" fg:w="2571737"/><text x="93.6235%" y="3247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,571,737 samples, 0.20%)</title><rect x="93.3735%" y="3221" width="0.2049%" height="15" fill="rgb(209,56,44)" fg:x="1172140460" fg:w="2571737"/><text x="93.6235%" y="3231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,571,737 samples, 0.20%)</title><rect x="93.3735%" y="3205" width="0.2049%" height="15" fill="rgb(230,108,32)" fg:x="1172140460" fg:w="2571737"/><text x="93.6235%" y="3215.50"></text></g><g><title>alloc::alloc::alloc (2,571,737 samples, 0.20%)</title><rect x="93.3735%" y="3189" width="0.2049%" height="15" fill="rgb(216,165,31)" fg:x="1172140460" fg:w="2571737"/><text x="93.6235%" y="3199.50"></text></g><g><title>malloc (2,571,737 samples, 0.20%)</title><rect x="93.3735%" y="3173" width="0.2049%" height="15" fill="rgb(218,122,21)" fg:x="1172140460" fg:w="2571737"/><text x="93.6235%" y="3183.50"></text></g><g><title>serde_json::de::from_str (25,283,344 samples, 2.01%)</title><rect x="91.7725%" y="3541" width="2.0141%" height="15" fill="rgb(223,224,47)" fg:x="1152042524" fg:w="25283344"/><text x="92.0225%" y="3551.50">s..</text></g><g><title>serde_json::de::from_trait (25,283,344 samples, 2.01%)</title><rect x="91.7725%" y="3525" width="2.0141%" height="15" fill="rgb(238,102,44)" fg:x="1152042524" fg:w="25283344"/><text x="92.0225%" y="3535.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (25,283,344 samples, 2.01%)</title><rect x="91.7725%" y="3509" width="2.0141%" height="15" fill="rgb(236,46,40)" fg:x="1152042524" fg:w="25283344"/><text x="92.0225%" y="3519.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25,283,344 samples, 2.01%)</title><rect x="91.7725%" y="3493" width="2.0141%" height="15" fill="rgb(247,202,50)" fg:x="1152042524" fg:w="25283344"/><text x="92.0225%" y="3503.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (25,283,344 samples, 2.01%)</title><rect x="91.7725%" y="3477" width="2.0141%" height="15" fill="rgb(209,99,20)" fg:x="1152042524" fg:w="25283344"/><text x="92.0225%" y="3487.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (25,283,344 samples, 2.01%)</title><rect x="91.7725%" y="3461" width="2.0141%" height="15" fill="rgb(252,27,34)" fg:x="1152042524" fg:w="25283344"/><text x="92.0225%" y="3471.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (25,283,344 samples, 2.01%)</title><rect x="91.7725%" y="3445" width="2.0141%" height="15" fill="rgb(215,206,23)" fg:x="1152042524" fg:w="25283344"/><text x="92.0225%" y="3455.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (20,061,193 samples, 1.60%)</title><rect x="92.1885%" y="3429" width="1.5981%" height="15" fill="rgb(212,135,36)" fg:x="1157264675" fg:w="20061193"/><text x="92.4385%" y="3439.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (20,061,193 samples, 1.60%)</title><rect x="92.1885%" y="3413" width="1.5981%" height="15" fill="rgb(240,189,1)" fg:x="1157264675" fg:w="20061193"/><text x="92.4385%" y="3423.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (20,061,193 samples, 1.60%)</title><rect x="92.1885%" y="3397" width="1.5981%" height="15" fill="rgb(242,56,20)" fg:x="1157264675" fg:w="20061193"/><text x="92.4385%" y="3407.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20,061,193 samples, 1.60%)</title><rect x="92.1885%" y="3381" width="1.5981%" height="15" fill="rgb(247,132,33)" fg:x="1157264675" fg:w="20061193"/><text x="92.4385%" y="3391.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,613,671 samples, 0.21%)</title><rect x="93.5783%" y="3365" width="0.2082%" height="15" fill="rgb(208,149,11)" fg:x="1174712197" fg:w="2613671"/><text x="93.8283%" y="3375.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,613,671 samples, 0.21%)</title><rect x="93.5783%" y="3349" width="0.2082%" height="15" fill="rgb(211,33,11)" fg:x="1174712197" fg:w="2613671"/><text x="93.8283%" y="3359.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,613,671 samples, 0.21%)</title><rect x="93.5783%" y="3333" width="0.2082%" height="15" fill="rgb(221,29,38)" fg:x="1174712197" fg:w="2613671"/><text x="93.8283%" y="3343.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,613,671 samples, 0.21%)</title><rect x="93.5783%" y="3317" width="0.2082%" height="15" fill="rgb(206,182,49)" fg:x="1174712197" fg:w="2613671"/><text x="93.8283%" y="3327.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,613,671 samples, 0.21%)</title><rect x="93.5783%" y="3301" width="0.2082%" height="15" fill="rgb(216,140,1)" fg:x="1174712197" fg:w="2613671"/><text x="93.8283%" y="3311.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,613,671 samples, 0.21%)</title><rect x="93.5783%" y="3285" width="0.2082%" height="15" fill="rgb(232,57,40)" fg:x="1174712197" fg:w="2613671"/><text x="93.8283%" y="3295.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_any_number (2,613,671 samples, 0.21%)</title><rect x="93.5783%" y="3269" width="0.2082%" height="15" fill="rgb(224,186,18)" fg:x="1174712197" fg:w="2613671"/><text x="93.8283%" y="3279.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_number (2,613,671 samples, 0.21%)</title><rect x="93.5783%" y="3253" width="0.2082%" height="15" fill="rgb(215,121,11)" fg:x="1174712197" fg:w="2613671"/><text x="93.8283%" y="3263.50"></text></g><g><title>benchmark::parse_web_layout_trace (25,784,848 samples, 2.05%)</title><rect x="91.7725%" y="3557" width="2.0540%" height="15" fill="rgb(245,147,10)" fg:x="1152042524" fg:w="25784848"/><text x="92.0225%" y="3567.50">b..</text></g><g><title>std::fs::read_to_string (501,504 samples, 0.04%)</title><rect x="93.7865%" y="3541" width="0.0400%" height="15" fill="rgb(238,153,13)" fg:x="1177325868" fg:w="501504"/><text x="94.0365%" y="3551.50"></text></g><g><title>std::fs::read_to_string::inner (501,504 samples, 0.04%)</title><rect x="93.7865%" y="3525" width="0.0400%" height="15" fill="rgb(233,108,0)" fg:x="1177325868" fg:w="501504"/><text x="94.0365%" y="3535.50"></text></g><g><title>std::io::default_read_to_string (501,504 samples, 0.04%)</title><rect x="93.7865%" y="3509" width="0.0400%" height="15" fill="rgb(212,157,17)" fg:x="1177325868" fg:w="501504"/><text x="94.0365%" y="3519.50"></text></g><g><title>std::io::append_to_string (501,504 samples, 0.04%)</title><rect x="93.7865%" y="3493" width="0.0400%" height="15" fill="rgb(225,213,38)" fg:x="1177325868" fg:w="501504"/><text x="94.0365%" y="3503.50"></text></g><g><title>core::str::converts::from_utf8 (501,504 samples, 0.04%)</title><rect x="93.7865%" y="3477" width="0.0400%" height="15" fill="rgb(248,16,11)" fg:x="1177325868" fg:w="501504"/><text x="94.0365%" y="3487.50"></text></g><g><title>core::str::validations::run_utf8_validation (501,504 samples, 0.04%)</title><rect x="93.7865%" y="3461" width="0.0400%" height="15" fill="rgb(241,33,4)" fg:x="1177325868" fg:w="501504"/><text x="94.0365%" y="3471.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,198,634 samples, 0.25%)</title><rect x="93.8265%" y="3365" width="0.2548%" height="15" fill="rgb(222,26,43)" fg:x="1177827372" fg:w="3198634"/><text x="94.0765%" y="3375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,198,634 samples, 0.25%)</title><rect x="93.8265%" y="3349" width="0.2548%" height="15" fill="rgb(243,29,36)" fg:x="1177827372" fg:w="3198634"/><text x="94.0765%" y="3359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,198,634 samples, 0.25%)</title><rect x="93.8265%" y="3333" width="0.2548%" height="15" fill="rgb(241,9,27)" fg:x="1177827372" fg:w="3198634"/><text x="94.0765%" y="3343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,198,634 samples, 0.25%)</title><rect x="93.8265%" y="3317" width="0.2548%" height="15" fill="rgb(205,117,26)" fg:x="1177827372" fg:w="3198634"/><text x="94.0765%" y="3327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,198,634 samples, 0.25%)</title><rect x="93.8265%" y="3301" width="0.2548%" height="15" fill="rgb(209,80,39)" fg:x="1177827372" fg:w="3198634"/><text x="94.0765%" y="3311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,198,634 samples, 0.25%)</title><rect x="93.8265%" y="3285" width="0.2548%" height="15" fill="rgb(239,155,6)" fg:x="1177827372" fg:w="3198634"/><text x="94.0765%" y="3295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,198,634 samples, 0.25%)</title><rect x="93.8265%" y="3269" width="0.2548%" height="15" fill="rgb(212,104,12)" fg:x="1177827372" fg:w="3198634"/><text x="94.0765%" y="3279.50"></text></g><g><title>alloc::alloc::dealloc (3,198,634 samples, 0.25%)</title><rect x="93.8265%" y="3253" width="0.2548%" height="15" fill="rgb(234,204,3)" fg:x="1177827372" fg:w="3198634"/><text x="94.0765%" y="3263.50"></text></g><g><title>cfree (3,198,634 samples, 0.25%)</title><rect x="93.8265%" y="3237" width="0.2548%" height="15" fill="rgb(251,218,7)" fg:x="1177827372" fg:w="3198634"/><text x="94.0765%" y="3247.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,238,545 samples, 0.26%)</title><rect x="94.0813%" y="3189" width="0.2580%" height="15" fill="rgb(221,81,32)" fg:x="1181026006" fg:w="3238545"/><text x="94.3313%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,238,545 samples, 0.26%)</title><rect x="94.0813%" y="3173" width="0.2580%" height="15" fill="rgb(214,152,26)" fg:x="1181026006" fg:w="3238545"/><text x="94.3313%" y="3183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,238,545 samples, 0.26%)</title><rect x="94.0813%" y="3157" width="0.2580%" height="15" fill="rgb(223,22,3)" fg:x="1181026006" fg:w="3238545"/><text x="94.3313%" y="3167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,238,545 samples, 0.26%)</title><rect x="94.0813%" y="3141" width="0.2580%" height="15" fill="rgb(207,174,7)" fg:x="1181026006" fg:w="3238545"/><text x="94.3313%" y="3151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,238,545 samples, 0.26%)</title><rect x="94.0813%" y="3125" width="0.2580%" height="15" fill="rgb(224,19,52)" fg:x="1181026006" fg:w="3238545"/><text x="94.3313%" y="3135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,238,545 samples, 0.26%)</title><rect x="94.0813%" y="3109" width="0.2580%" height="15" fill="rgb(228,24,14)" fg:x="1181026006" fg:w="3238545"/><text x="94.3313%" y="3119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,238,545 samples, 0.26%)</title><rect x="94.0813%" y="3093" width="0.2580%" height="15" fill="rgb(230,153,43)" fg:x="1181026006" fg:w="3238545"/><text x="94.3313%" y="3103.50"></text></g><g><title>alloc::alloc::dealloc (3,238,545 samples, 0.26%)</title><rect x="94.0813%" y="3077" width="0.2580%" height="15" fill="rgb(231,106,12)" fg:x="1181026006" fg:w="3238545"/><text x="94.3313%" y="3087.50"></text></g><g><title>cfree (3,238,545 samples, 0.26%)</title><rect x="94.0813%" y="3061" width="0.2580%" height="15" fill="rgb(215,92,2)" fg:x="1181026006" fg:w="3238545"/><text x="94.3313%" y="3071.50"></text></g><g><title>cfree (3,160,312 samples, 0.25%)</title><rect x="94.3393%" y="2421" width="0.2518%" height="15" fill="rgb(249,143,25)" fg:x="1184264551" fg:w="3160312"/><text x="94.5893%" y="2431.50"></text></g><g><title>[libc.so.6] (3,160,312 samples, 0.25%)</title><rect x="94.3393%" y="2405" width="0.2518%" height="15" fill="rgb(252,7,35)" fg:x="1184264551" fg:w="3160312"/><text x="94.5893%" y="2415.50"></text></g><g><title>[libc.so.6] (3,160,312 samples, 0.25%)</title><rect x="94.3393%" y="2389" width="0.2518%" height="15" fill="rgb(216,69,40)" fg:x="1184264551" fg:w="3160312"/><text x="94.5893%" y="2399.50"></text></g><g><title>[libc.so.6] (3,160,312 samples, 0.25%)</title><rect x="94.3393%" y="2373" width="0.2518%" height="15" fill="rgb(240,36,33)" fg:x="1184264551" fg:w="3160312"/><text x="94.5893%" y="2383.50"></text></g><g><title>cfree (3,139,351 samples, 0.25%)</title><rect x="94.5910%" y="2181" width="0.2501%" height="15" fill="rgb(231,128,14)" fg:x="1187424863" fg:w="3139351"/><text x="94.8410%" y="2191.50"></text></g><g><title>[libc.so.6] (3,139,351 samples, 0.25%)</title><rect x="94.5910%" y="2165" width="0.2501%" height="15" fill="rgb(245,143,14)" fg:x="1187424863" fg:w="3139351"/><text x="94.8410%" y="2175.50"></text></g><g><title>[libc.so.6] (3,139,351 samples, 0.25%)</title><rect x="94.5910%" y="2149" width="0.2501%" height="15" fill="rgb(222,130,28)" fg:x="1187424863" fg:w="3139351"/><text x="94.8410%" y="2159.50"></text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (1,093,375,885 samples, 87.10%)</title><rect x="8.0037%" y="3573" width="87.0990%" height="15" fill="rgb(212,10,48)" fg:x="100472154" fg:w="1093375885"/><text x="8.2537%" y="3583.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (16,020,667 samples, 1.28%)</title><rect x="93.8265%" y="3557" width="1.2762%" height="15" fill="rgb(254,118,45)" fg:x="1177827372" fg:w="16020667"/><text x="94.0765%" y="3567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,020,667 samples, 1.28%)</title><rect x="93.8265%" y="3541" width="1.2762%" height="15" fill="rgb(228,6,45)" fg:x="1177827372" fg:w="16020667"/><text x="94.0765%" y="3551.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (16,020,667 samples, 1.28%)</title><rect x="93.8265%" y="3525" width="1.2762%" height="15" fill="rgb(241,18,35)" fg:x="1177827372" fg:w="16020667"/><text x="94.0765%" y="3535.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (16,020,667 samples, 1.28%)</title><rect x="93.8265%" y="3509" width="1.2762%" height="15" fill="rgb(227,214,53)" fg:x="1177827372" fg:w="16020667"/><text x="94.0765%" y="3519.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16,020,667 samples, 1.28%)</title><rect x="93.8265%" y="3493" width="1.2762%" height="15" fill="rgb(224,107,51)" fg:x="1177827372" fg:w="16020667"/><text x="94.0765%" y="3503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16,020,667 samples, 1.28%)</title><rect x="93.8265%" y="3477" width="1.2762%" height="15" fill="rgb(248,60,28)" fg:x="1177827372" fg:w="16020667"/><text x="94.0765%" y="3487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16,020,667 samples, 1.28%)</title><rect x="93.8265%" y="3461" width="1.2762%" height="15" fill="rgb(249,101,23)" fg:x="1177827372" fg:w="16020667"/><text x="94.0765%" y="3471.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16,020,667 samples, 1.28%)</title><rect x="93.8265%" y="3445" width="1.2762%" height="15" fill="rgb(228,51,19)" fg:x="1177827372" fg:w="16020667"/><text x="94.0765%" y="3455.50"></text></g><g><title>core::mem::drop (16,020,667 samples, 1.28%)</title><rect x="93.8265%" y="3429" width="1.2762%" height="15" fill="rgb(213,20,6)" fg:x="1177827372" fg:w="16020667"/><text x="94.0765%" y="3439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16,020,667 samples, 1.28%)</title><rect x="93.8265%" y="3413" width="1.2762%" height="15" fill="rgb(212,124,10)" fg:x="1177827372" fg:w="16020667"/><text x="94.0765%" y="3423.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16,020,667 samples, 1.28%)</title><rect x="93.8265%" y="3397" width="1.2762%" height="15" fill="rgb(248,3,40)" fg:x="1177827372" fg:w="16020667"/><text x="94.0765%" y="3407.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (16,020,667 samples, 1.28%)</title><rect x="93.8265%" y="3381" width="1.2762%" height="15" fill="rgb(223,178,23)" fg:x="1177827372" fg:w="16020667"/><text x="94.0765%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (12,822,033 samples, 1.02%)</title><rect x="94.0813%" y="3365" width="1.0214%" height="15" fill="rgb(240,132,45)" fg:x="1181026006" fg:w="12822033"/><text x="94.3313%" y="3375.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12,822,033 samples, 1.02%)</title><rect x="94.0813%" y="3349" width="1.0214%" height="15" fill="rgb(245,164,36)" fg:x="1181026006" fg:w="12822033"/><text x="94.3313%" y="3359.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (12,822,033 samples, 1.02%)</title><rect x="94.0813%" y="3333" width="1.0214%" height="15" fill="rgb(231,188,53)" fg:x="1181026006" fg:w="12822033"/><text x="94.3313%" y="3343.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12,822,033 samples, 1.02%)</title><rect x="94.0813%" y="3317" width="1.0214%" height="15" fill="rgb(237,198,39)" fg:x="1181026006" fg:w="12822033"/><text x="94.3313%" y="3327.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12,822,033 samples, 1.02%)</title><rect x="94.0813%" y="3301" width="1.0214%" height="15" fill="rgb(223,120,35)" fg:x="1181026006" fg:w="12822033"/><text x="94.3313%" y="3311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12,822,033 samples, 1.02%)</title><rect x="94.0813%" y="3285" width="1.0214%" height="15" fill="rgb(253,107,49)" fg:x="1181026006" fg:w="12822033"/><text x="94.3313%" y="3295.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12,822,033 samples, 1.02%)</title><rect x="94.0813%" y="3269" width="1.0214%" height="15" fill="rgb(216,44,31)" fg:x="1181026006" fg:w="12822033"/><text x="94.3313%" y="3279.50"></text></g><g><title>core::mem::drop (12,822,033 samples, 1.02%)</title><rect x="94.0813%" y="3253" width="1.0214%" height="15" fill="rgb(253,87,21)" fg:x="1181026006" fg:w="12822033"/><text x="94.3313%" y="3263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12,822,033 samples, 1.02%)</title><rect x="94.0813%" y="3237" width="1.0214%" height="15" fill="rgb(226,18,2)" fg:x="1181026006" fg:w="12822033"/><text x="94.3313%" y="3247.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12,822,033 samples, 1.02%)</title><rect x="94.0813%" y="3221" width="1.0214%" height="15" fill="rgb(216,8,46)" fg:x="1181026006" fg:w="12822033"/><text x="94.3313%" y="3231.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (12,822,033 samples, 1.02%)</title><rect x="94.0813%" y="3205" width="1.0214%" height="15" fill="rgb(226,140,39)" fg:x="1181026006" fg:w="12822033"/><text x="94.3313%" y="3215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="3189" width="0.7634%" height="15" fill="rgb(221,194,54)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="3199.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="3173" width="0.7634%" height="15" fill="rgb(213,92,11)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="3183.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="3157" width="0.7634%" height="15" fill="rgb(229,162,46)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="3167.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="3141" width="0.7634%" height="15" fill="rgb(214,111,36)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="3151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="3125" width="0.7634%" height="15" fill="rgb(207,6,21)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="3135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="3109" width="0.7634%" height="15" fill="rgb(213,127,38)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="3119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="3093" width="0.7634%" height="15" fill="rgb(238,118,32)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="3103.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="3077" width="0.7634%" height="15" fill="rgb(240,139,39)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="3061" width="0.7634%" height="15" fill="rgb(235,10,37)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="3045" width="0.7634%" height="15" fill="rgb(249,171,38)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="3055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="3029" width="0.7634%" height="15" fill="rgb(242,144,32)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="3039.50"></text></g><g><title>core::mem::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="3013" width="0.7634%" height="15" fill="rgb(217,117,21)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="3023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2997" width="0.7634%" height="15" fill="rgb(249,87,1)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="3007.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2981" width="0.7634%" height="15" fill="rgb(248,196,48)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2965" width="0.7634%" height="15" fill="rgb(251,206,33)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2949" width="0.7634%" height="15" fill="rgb(232,141,28)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2959.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2933" width="0.7634%" height="15" fill="rgb(209,167,14)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2943.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2917" width="0.7634%" height="15" fill="rgb(225,11,50)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2901" width="0.7634%" height="15" fill="rgb(209,50,20)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2885" width="0.7634%" height="15" fill="rgb(212,17,46)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2869" width="0.7634%" height="15" fill="rgb(216,101,39)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2853" width="0.7634%" height="15" fill="rgb(212,228,48)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2837" width="0.7634%" height="15" fill="rgb(250,6,50)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2821" width="0.7634%" height="15" fill="rgb(250,160,48)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2805" width="0.7634%" height="15" fill="rgb(244,216,33)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2789" width="0.7634%" height="15" fill="rgb(207,157,5)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2799.50"></text></g><g><title>core::mem::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2773" width="0.7634%" height="15" fill="rgb(228,199,8)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2757" width="0.7634%" height="15" fill="rgb(227,80,20)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2767.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2741" width="0.7634%" height="15" fill="rgb(222,9,33)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2725" width="0.7634%" height="15" fill="rgb(239,44,28)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2709" width="0.7634%" height="15" fill="rgb(249,187,43)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2719.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2693" width="0.7634%" height="15" fill="rgb(216,141,28)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2677" width="0.7634%" height="15" fill="rgb(230,154,53)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2661" width="0.7634%" height="15" fill="rgb(227,82,4)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2645" width="0.7634%" height="15" fill="rgb(220,107,16)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2629" width="0.7634%" height="15" fill="rgb(207,187,2)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2613" width="0.7634%" height="15" fill="rgb(210,162,52)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2597" width="0.7634%" height="15" fill="rgb(217,216,49)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2581" width="0.7634%" height="15" fill="rgb(218,146,49)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2565" width="0.7634%" height="15" fill="rgb(216,55,40)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2549" width="0.7634%" height="15" fill="rgb(208,196,21)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2559.50"></text></g><g><title>core::mem::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2533" width="0.7634%" height="15" fill="rgb(242,117,42)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2517" width="0.7634%" height="15" fill="rgb(210,11,23)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2501" width="0.7634%" height="15" fill="rgb(217,110,2)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2485" width="0.7634%" height="15" fill="rgb(229,77,54)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2469" width="0.7634%" height="15" fill="rgb(218,53,16)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2479.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2453" width="0.7634%" height="15" fill="rgb(215,38,13)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (9,583,488 samples, 0.76%)</title><rect x="94.3393%" y="2437" width="0.7634%" height="15" fill="rgb(235,42,18)" fg:x="1184264551" fg:w="9583488"/><text x="94.5893%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,423,176 samples, 0.51%)</title><rect x="94.5910%" y="2421" width="0.5117%" height="15" fill="rgb(219,66,54)" fg:x="1187424863" fg:w="6423176"/><text x="94.8410%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,423,176 samples, 0.51%)</title><rect x="94.5910%" y="2405" width="0.5117%" height="15" fill="rgb(222,205,4)" fg:x="1187424863" fg:w="6423176"/><text x="94.8410%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,423,176 samples, 0.51%)</title><rect x="94.5910%" y="2389" width="0.5117%" height="15" fill="rgb(227,213,46)" fg:x="1187424863" fg:w="6423176"/><text x="94.8410%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,423,176 samples, 0.51%)</title><rect x="94.5910%" y="2373" width="0.5117%" height="15" fill="rgb(250,145,42)" fg:x="1187424863" fg:w="6423176"/><text x="94.8410%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,423,176 samples, 0.51%)</title><rect x="94.5910%" y="2357" width="0.5117%" height="15" fill="rgb(219,15,2)" fg:x="1187424863" fg:w="6423176"/><text x="94.8410%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,423,176 samples, 0.51%)</title><rect x="94.5910%" y="2341" width="0.5117%" height="15" fill="rgb(231,181,52)" fg:x="1187424863" fg:w="6423176"/><text x="94.8410%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,423,176 samples, 0.51%)</title><rect x="94.5910%" y="2325" width="0.5117%" height="15" fill="rgb(235,1,42)" fg:x="1187424863" fg:w="6423176"/><text x="94.8410%" y="2335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,423,176 samples, 0.51%)</title><rect x="94.5910%" y="2309" width="0.5117%" height="15" fill="rgb(249,88,27)" fg:x="1187424863" fg:w="6423176"/><text x="94.8410%" y="2319.50"></text></g><g><title>core::mem::drop (6,423,176 samples, 0.51%)</title><rect x="94.5910%" y="2293" width="0.5117%" height="15" fill="rgb(235,145,16)" fg:x="1187424863" fg:w="6423176"/><text x="94.8410%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,423,176 samples, 0.51%)</title><rect x="94.5910%" y="2277" width="0.5117%" height="15" fill="rgb(237,114,19)" fg:x="1187424863" fg:w="6423176"/><text x="94.8410%" y="2287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,423,176 samples, 0.51%)</title><rect x="94.5910%" y="2261" width="0.5117%" height="15" fill="rgb(238,51,50)" fg:x="1187424863" fg:w="6423176"/><text x="94.8410%" y="2271.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,423,176 samples, 0.51%)</title><rect x="94.5910%" y="2245" width="0.5117%" height="15" fill="rgb(205,194,25)" fg:x="1187424863" fg:w="6423176"/><text x="94.8410%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,423,176 samples, 0.51%)</title><rect x="94.5910%" y="2229" width="0.5117%" height="15" fill="rgb(215,203,17)" fg:x="1187424863" fg:w="6423176"/><text x="94.8410%" y="2239.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,423,176 samples, 0.51%)</title><rect x="94.5910%" y="2213" width="0.5117%" height="15" fill="rgb(233,112,49)" fg:x="1187424863" fg:w="6423176"/><text x="94.8410%" y="2223.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,423,176 samples, 0.51%)</title><rect x="94.5910%" y="2197" width="0.5117%" height="15" fill="rgb(241,130,26)" fg:x="1187424863" fg:w="6423176"/><text x="94.8410%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="2181" width="0.2616%" height="15" fill="rgb(252,223,19)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="2165" width="0.2616%" height="15" fill="rgb(211,95,25)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="2175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="2149" width="0.2616%" height="15" fill="rgb(251,182,27)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="2133" width="0.2616%" height="15" fill="rgb(238,24,4)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="2117" width="0.2616%" height="15" fill="rgb(224,220,25)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="2101" width="0.2616%" height="15" fill="rgb(239,133,26)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="2085" width="0.2616%" height="15" fill="rgb(211,94,48)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="2095.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="2069" width="0.2616%" height="15" fill="rgb(239,87,6)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="2079.50"></text></g><g><title>core::mem::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="2053" width="0.2616%" height="15" fill="rgb(227,62,0)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="2037" width="0.2616%" height="15" fill="rgb(211,226,4)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="2047.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="2021" width="0.2616%" height="15" fill="rgb(253,38,52)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="2031.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="2005" width="0.2616%" height="15" fill="rgb(229,126,40)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1989" width="0.2616%" height="15" fill="rgb(229,165,44)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1999.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1973" width="0.2616%" height="15" fill="rgb(247,95,47)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1983.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1957" width="0.2616%" height="15" fill="rgb(216,140,30)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1941" width="0.2616%" height="15" fill="rgb(246,214,8)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1925" width="0.2616%" height="15" fill="rgb(227,224,15)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1909" width="0.2616%" height="15" fill="rgb(233,175,4)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1893" width="0.2616%" height="15" fill="rgb(221,66,45)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1877" width="0.2616%" height="15" fill="rgb(221,178,18)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1861" width="0.2616%" height="15" fill="rgb(213,81,29)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1845" width="0.2616%" height="15" fill="rgb(220,89,49)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1829" width="0.2616%" height="15" fill="rgb(227,60,33)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1839.50"></text></g><g><title>core::mem::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1813" width="0.2616%" height="15" fill="rgb(205,113,12)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1797" width="0.2616%" height="15" fill="rgb(211,32,1)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1781" width="0.2616%" height="15" fill="rgb(246,2,12)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1791.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1765" width="0.2616%" height="15" fill="rgb(243,37,27)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1749" width="0.2616%" height="15" fill="rgb(248,211,31)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1759.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1733" width="0.2616%" height="15" fill="rgb(242,146,47)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1743.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1717" width="0.2616%" height="15" fill="rgb(206,70,20)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1701" width="0.2616%" height="15" fill="rgb(215,10,51)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1685" width="0.2616%" height="15" fill="rgb(243,178,53)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1669" width="0.2616%" height="15" fill="rgb(233,221,20)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1653" width="0.2616%" height="15" fill="rgb(218,95,35)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1637" width="0.2616%" height="15" fill="rgb(229,13,5)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1621" width="0.2616%" height="15" fill="rgb(252,164,30)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1605" width="0.2616%" height="15" fill="rgb(232,68,36)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1589" width="0.2616%" height="15" fill="rgb(219,59,54)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1599.50"></text></g><g><title>core::mem::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1573" width="0.2616%" height="15" fill="rgb(250,92,33)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1557" width="0.2616%" height="15" fill="rgb(229,162,54)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1541" width="0.2616%" height="15" fill="rgb(244,114,52)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1525" width="0.2616%" height="15" fill="rgb(212,211,43)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1509" width="0.2616%" height="15" fill="rgb(226,147,8)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1519.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1493" width="0.2616%" height="15" fill="rgb(226,23,13)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1503.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1477" width="0.2616%" height="15" fill="rgb(240,63,4)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1461" width="0.2616%" height="15" fill="rgb(221,1,32)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1445" width="0.2616%" height="15" fill="rgb(242,117,10)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1429" width="0.2616%" height="15" fill="rgb(249,172,44)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1413" width="0.2616%" height="15" fill="rgb(244,46,45)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1397" width="0.2616%" height="15" fill="rgb(206,43,17)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1381" width="0.2616%" height="15" fill="rgb(239,218,39)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1365" width="0.2616%" height="15" fill="rgb(208,169,54)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1375.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1349" width="0.2616%" height="15" fill="rgb(247,25,42)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1359.50"></text></g><g><title>core::mem::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1333" width="0.2616%" height="15" fill="rgb(226,23,31)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1317" width="0.2616%" height="15" fill="rgb(247,16,28)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1327.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1301" width="0.2616%" height="15" fill="rgb(231,147,38)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1311.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1285" width="0.2616%" height="15" fill="rgb(253,81,48)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1269" width="0.2616%" height="15" fill="rgb(249,222,43)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1279.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1253" width="0.2616%" height="15" fill="rgb(221,3,27)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1263.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1237" width="0.2616%" height="15" fill="rgb(228,180,5)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1221" width="0.2616%" height="15" fill="rgb(227,131,42)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1205" width="0.2616%" height="15" fill="rgb(212,3,39)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1189" width="0.2616%" height="15" fill="rgb(226,45,5)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1173" width="0.2616%" height="15" fill="rgb(215,167,45)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1157" width="0.2616%" height="15" fill="rgb(250,218,53)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1141" width="0.2616%" height="15" fill="rgb(207,140,0)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1125" width="0.2616%" height="15" fill="rgb(238,133,51)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1109" width="0.2616%" height="15" fill="rgb(218,203,53)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1119.50"></text></g><g><title>core::mem::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1093" width="0.2616%" height="15" fill="rgb(226,184,25)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1077" width="0.2616%" height="15" fill="rgb(231,121,21)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1061" width="0.2616%" height="15" fill="rgb(251,14,34)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1045" width="0.2616%" height="15" fill="rgb(249,193,11)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1029" width="0.2616%" height="15" fill="rgb(220,172,37)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="1013" width="0.2616%" height="15" fill="rgb(231,229,43)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1023.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="997" width="0.2616%" height="15" fill="rgb(250,161,5)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="1007.50"></text></g><g><title>cfree (3,283,825 samples, 0.26%)</title><rect x="94.8411%" y="981" width="0.2616%" height="15" fill="rgb(218,225,18)" fg:x="1190564214" fg:w="3283825"/><text x="95.0911%" y="991.50"></text></g><g><title>std::panic::catch_unwind (1,099,904,841 samples, 87.62%)</title><rect x="8.0037%" y="3701" width="87.6191%" height="15" fill="rgb(245,45,42)" fg:x="100472154" fg:w="1099904841"/><text x="8.2537%" y="3711.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,099,904,841 samples, 87.62%)</title><rect x="8.0037%" y="3685" width="87.6191%" height="15" fill="rgb(211,115,1)" fg:x="100472154" fg:w="1099904841"/><text x="8.2537%" y="3695.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,099,904,841 samples, 87.62%)</title><rect x="8.0037%" y="3669" width="87.6191%" height="15" fill="rgb(248,133,52)" fg:x="100472154" fg:w="1099904841"/><text x="8.2537%" y="3679.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,099,904,841 samples, 87.62%)</title><rect x="8.0037%" y="3653" width="87.6191%" height="15" fill="rgb(238,100,21)" fg:x="100472154" fg:w="1099904841"/><text x="8.2537%" y="3663.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (1,099,904,841 samples, 87.62%)</title><rect x="8.0037%" y="3637" width="87.6191%" height="15" fill="rgb(247,144,11)" fg:x="100472154" fg:w="1099904841"/><text x="8.2537%" y="3647.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (1,099,904,841 samples, 87.62%)</title><rect x="8.0037%" y="3621" width="87.6191%" height="15" fill="rgb(206,164,16)" fg:x="100472154" fg:w="1099904841"/><text x="8.2537%" y="3631.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (1,099,904,841 samples, 87.62%)</title><rect x="8.0037%" y="3605" width="87.6191%" height="15" fill="rgb(222,34,3)" fg:x="100472154" fg:w="1099904841"/><text x="8.2537%" y="3615.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (1,099,904,841 samples, 87.62%)</title><rect x="8.0037%" y="3589" width="87.6191%" height="15" fill="rgb(248,82,4)" fg:x="100472154" fg:w="1099904841"/><text x="8.2537%" y="3599.50">benchmark::main</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::WebLayoutFrameResult&gt;&gt; (6,528,956 samples, 0.52%)</title><rect x="95.1027%" y="3573" width="0.5201%" height="15" fill="rgb(228,81,46)" fg:x="1193848039" fg:w="6528956"/><text x="95.3527%" y="3583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,528,956 samples, 0.52%)</title><rect x="95.1027%" y="3557" width="0.5201%" height="15" fill="rgb(227,67,47)" fg:x="1193848039" fg:w="6528956"/><text x="95.3527%" y="3567.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::WebLayoutFrameResult]&gt; (6,528,956 samples, 0.52%)</title><rect x="95.1027%" y="3541" width="0.5201%" height="15" fill="rgb(215,93,53)" fg:x="1193848039" fg:w="6528956"/><text x="95.3527%" y="3551.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::WebLayoutFrameResult&gt; (6,528,956 samples, 0.52%)</title><rect x="95.1027%" y="3525" width="0.5201%" height="15" fill="rgb(248,194,39)" fg:x="1193848039" fg:w="6528956"/><text x="95.3527%" y="3535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6,528,956 samples, 0.52%)</title><rect x="95.1027%" y="3509" width="0.5201%" height="15" fill="rgb(215,5,19)" fg:x="1193848039" fg:w="6528956"/><text x="95.3527%" y="3519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6,528,956 samples, 0.52%)</title><rect x="95.1027%" y="3493" width="0.5201%" height="15" fill="rgb(226,215,51)" fg:x="1193848039" fg:w="6528956"/><text x="95.3527%" y="3503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6,528,956 samples, 0.52%)</title><rect x="95.1027%" y="3477" width="0.5201%" height="15" fill="rgb(225,56,26)" fg:x="1193848039" fg:w="6528956"/><text x="95.3527%" y="3487.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,528,956 samples, 0.52%)</title><rect x="95.1027%" y="3461" width="0.5201%" height="15" fill="rgb(222,75,29)" fg:x="1193848039" fg:w="6528956"/><text x="95.3527%" y="3471.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,528,956 samples, 0.52%)</title><rect x="95.1027%" y="3445" width="0.5201%" height="15" fill="rgb(236,139,6)" fg:x="1193848039" fg:w="6528956"/><text x="95.3527%" y="3455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,528,956 samples, 0.52%)</title><rect x="95.1027%" y="3429" width="0.5201%" height="15" fill="rgb(223,137,36)" fg:x="1193848039" fg:w="6528956"/><text x="95.3527%" y="3439.50"></text></g><g><title>alloc::alloc::dealloc (6,528,956 samples, 0.52%)</title><rect x="95.1027%" y="3413" width="0.5201%" height="15" fill="rgb(226,99,2)" fg:x="1193848039" fg:w="6528956"/><text x="95.3527%" y="3423.50"></text></g><g><title>cfree (6,528,956 samples, 0.52%)</title><rect x="95.1027%" y="3397" width="0.5201%" height="15" fill="rgb(206,133,23)" fg:x="1193848039" fg:w="6528956"/><text x="95.3527%" y="3407.50"></text></g><g><title>[libc.so.6] (6,528,956 samples, 0.52%)</title><rect x="95.1027%" y="3381" width="0.5201%" height="15" fill="rgb(243,173,15)" fg:x="1193848039" fg:w="6528956"/><text x="95.3527%" y="3391.50"></text></g><g><title>[libc.so.6] (6,528,956 samples, 0.52%)</title><rect x="95.1027%" y="3365" width="0.5201%" height="15" fill="rgb(228,69,28)" fg:x="1193848039" fg:w="6528956"/><text x="95.3527%" y="3375.50"></text></g><g><title>[libc.so.6] (3,267,796 samples, 0.26%)</title><rect x="95.3625%" y="3349" width="0.2603%" height="15" fill="rgb(212,51,22)" fg:x="1197109199" fg:w="3267796"/><text x="95.6125%" y="3359.50"></text></g><g><title>_start (1,100,406,345 samples, 87.66%)</title><rect x="8.0037%" y="3845" width="87.6591%" height="15" fill="rgb(227,113,0)" fg:x="100472154" fg:w="1100406345"/><text x="8.2537%" y="3855.50">_start</text></g><g><title>__libc_start_main (1,100,406,345 samples, 87.66%)</title><rect x="8.0037%" y="3829" width="87.6591%" height="15" fill="rgb(252,84,27)" fg:x="100472154" fg:w="1100406345"/><text x="8.2537%" y="3839.50">__libc_start_main</text></g><g><title>[libc.so.6] (1,100,406,345 samples, 87.66%)</title><rect x="8.0037%" y="3813" width="87.6591%" height="15" fill="rgb(223,145,39)" fg:x="100472154" fg:w="1100406345"/><text x="8.2537%" y="3823.50">[libc.so.6]</text></g><g><title>main (1,100,406,345 samples, 87.66%)</title><rect x="8.0037%" y="3797" width="87.6591%" height="15" fill="rgb(239,219,30)" fg:x="100472154" fg:w="1100406345"/><text x="8.2537%" y="3807.50">main</text></g><g><title>std::rt::lang_start_internal (1,100,406,345 samples, 87.66%)</title><rect x="8.0037%" y="3781" width="87.6591%" height="15" fill="rgb(224,196,39)" fg:x="100472154" fg:w="1100406345"/><text x="8.2537%" y="3791.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,100,406,345 samples, 87.66%)</title><rect x="8.0037%" y="3765" width="87.6591%" height="15" fill="rgb(205,35,43)" fg:x="100472154" fg:w="1100406345"/><text x="8.2537%" y="3775.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,100,406,345 samples, 87.66%)</title><rect x="8.0037%" y="3749" width="87.6591%" height="15" fill="rgb(228,201,21)" fg:x="100472154" fg:w="1100406345"/><text x="8.2537%" y="3759.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,100,406,345 samples, 87.66%)</title><rect x="8.0037%" y="3733" width="87.6591%" height="15" fill="rgb(237,118,16)" fg:x="100472154" fg:w="1100406345"/><text x="8.2537%" y="3743.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (1,100,406,345 samples, 87.66%)</title><rect x="8.0037%" y="3717" width="87.6591%" height="15" fill="rgb(241,17,19)" fg:x="100472154" fg:w="1100406345"/><text x="8.2537%" y="3727.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::rt::init (501,504 samples, 0.04%)</title><rect x="95.6228%" y="3701" width="0.0400%" height="15" fill="rgb(214,10,25)" fg:x="1200376995" fg:w="501504"/><text x="95.8728%" y="3711.50"></text></g><g><title>std::sys::pal::unix::init (501,504 samples, 0.04%)</title><rect x="95.6228%" y="3685" width="0.0400%" height="15" fill="rgb(238,37,29)" fg:x="1200376995" fg:w="501504"/><text x="95.8728%" y="3695.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::init (501,504 samples, 0.04%)</title><rect x="95.6228%" y="3669" width="0.0400%" height="15" fill="rgb(253,83,25)" fg:x="1200376995" fg:w="501504"/><text x="95.8728%" y="3679.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard (501,504 samples, 0.04%)</title><rect x="95.6228%" y="3653" width="0.0400%" height="15" fill="rgb(234,192,12)" fg:x="1200376995" fg:w="501504"/><text x="95.8728%" y="3663.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard_linux (501,504 samples, 0.04%)</title><rect x="95.6228%" y="3637" width="0.0400%" height="15" fill="rgb(241,216,45)" fg:x="1200376995" fg:w="501504"/><text x="95.8728%" y="3647.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::stack_start_aligned (501,504 samples, 0.04%)</title><rect x="95.6228%" y="3621" width="0.0400%" height="15" fill="rgb(242,22,33)" fg:x="1200376995" fg:w="501504"/><text x="95.8728%" y="3631.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack_start (501,504 samples, 0.04%)</title><rect x="95.6228%" y="3605" width="0.0400%" height="15" fill="rgb(231,105,49)" fg:x="1200376995" fg:w="501504"/><text x="95.8728%" y="3615.50"></text></g><g><title>pthread_getattr_np (501,504 samples, 0.04%)</title><rect x="95.6228%" y="3589" width="0.0400%" height="15" fill="rgb(218,204,15)" fg:x="1200376995" fg:w="501504"/><text x="95.8728%" y="3599.50"></text></g><g><title>__isoc23_sscanf (501,504 samples, 0.04%)</title><rect x="95.6228%" y="3573" width="0.0400%" height="15" fill="rgb(235,138,41)" fg:x="1200376995" fg:w="501504"/><text x="95.8728%" y="3583.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.04%)</title><rect x="95.6228%" y="3557" width="0.0400%" height="15" fill="rgb(246,0,9)" fg:x="1200376995" fg:w="501504"/><text x="95.8728%" y="3567.50"></text></g><g><title>benchmark::clear_dirty_flags (9,965,909 samples, 0.79%)</title><rect x="95.6628%" y="3845" width="0.7939%" height="15" fill="rgb(210,74,4)" fg:x="1200878499" fg:w="9965909"/><text x="95.9128%" y="3855.50"></text></g><g><title>cfree (16,658,575 samples, 1.33%)</title><rect x="96.4567%" y="3845" width="1.3270%" height="15" fill="rgb(250,60,41)" fg:x="1210844408" fg:w="16658575"/><text x="96.7067%" y="3855.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,728,503 samples, 0.77%)</title><rect x="97.7837%" y="3845" width="0.7750%" height="15" fill="rgb(220,115,12)" fg:x="1227502983" fg:w="9728503"/><text x="98.0337%" y="3855.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,269,744 samples, 0.26%)</title><rect x="98.2982%" y="3829" width="0.2605%" height="15" fill="rgb(237,100,13)" fg:x="1233961742" fg:w="3269744"/><text x="98.5482%" y="3839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,269,744 samples, 0.26%)</title><rect x="98.2982%" y="3813" width="0.2605%" height="15" fill="rgb(213,55,26)" fg:x="1233961742" fg:w="3269744"/><text x="98.5482%" y="3823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,269,744 samples, 0.26%)</title><rect x="98.2982%" y="3797" width="0.2605%" height="15" fill="rgb(216,17,4)" fg:x="1233961742" fg:w="3269744"/><text x="98.5482%" y="3807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,269,744 samples, 0.26%)</title><rect x="98.2982%" y="3781" width="0.2605%" height="15" fill="rgb(220,153,47)" fg:x="1233961742" fg:w="3269744"/><text x="98.5482%" y="3791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,269,744 samples, 0.26%)</title><rect x="98.2982%" y="3765" width="0.2605%" height="15" fill="rgb(215,131,9)" fg:x="1233961742" fg:w="3269744"/><text x="98.5482%" y="3775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,269,744 samples, 0.26%)</title><rect x="98.2982%" y="3749" width="0.2605%" height="15" fill="rgb(233,46,42)" fg:x="1233961742" fg:w="3269744"/><text x="98.5482%" y="3759.50"></text></g><g><title>alloc::alloc::dealloc (3,269,744 samples, 0.26%)</title><rect x="98.2982%" y="3733" width="0.2605%" height="15" fill="rgb(226,86,7)" fg:x="1233961742" fg:w="3269744"/><text x="98.5482%" y="3743.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3845" width="0.2329%" height="15" fill="rgb(239,226,21)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3855.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3829" width="0.2329%" height="15" fill="rgb(244,137,22)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3813" width="0.2329%" height="15" fill="rgb(211,139,35)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3823.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3797" width="0.2329%" height="15" fill="rgb(214,62,50)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3807.50"></text></g><g><title>core::mem::drop (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3781" width="0.2329%" height="15" fill="rgb(212,113,44)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3765" width="0.2329%" height="15" fill="rgb(226,150,43)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3775.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3749" width="0.2329%" height="15" fill="rgb(250,71,37)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3759.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3733" width="0.2329%" height="15" fill="rgb(219,76,19)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3743.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3717" width="0.2329%" height="15" fill="rgb(250,39,11)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3701" width="0.2329%" height="15" fill="rgb(230,64,31)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3685" width="0.2329%" height="15" fill="rgb(208,222,23)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3669" width="0.2329%" height="15" fill="rgb(227,125,18)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3653" width="0.2329%" height="15" fill="rgb(234,210,9)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3637" width="0.2329%" height="15" fill="rgb(217,127,24)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3621" width="0.2329%" height="15" fill="rgb(239,141,48)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3631.50"></text></g><g><title>alloc::alloc::dealloc (2,923,313 samples, 0.23%)</title><rect x="98.5587%" y="3605" width="0.2329%" height="15" fill="rgb(227,109,8)" fg:x="1237231486" fg:w="2923313"/><text x="98.8087%" y="3615.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (2,405,760 samples, 0.19%)</title><rect x="98.7915%" y="3845" width="0.1916%" height="15" fill="rgb(235,184,23)" fg:x="1240154799" fg:w="2405760"/><text x="99.0415%" y="3855.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,697,070 samples, 0.53%)</title><rect x="98.9832%" y="3845" width="0.5335%" height="15" fill="rgb(227,226,48)" fg:x="1242560559" fg:w="6697070"/><text x="99.2332%" y="3855.50"></text></g><g><title>malloc (3,360,685 samples, 0.27%)</title><rect x="99.5167%" y="3845" width="0.2677%" height="15" fill="rgb(206,150,11)" fg:x="1249257629" fg:w="3360685"/><text x="99.7667%" y="3855.50"></text></g><g><title>all (1,255,324,962 samples, 100%)</title><rect x="0.0000%" y="3877" width="100.0000%" height="15" fill="rgb(254,2,33)" fg:x="0" fg:w="1255324962"/><text x="0.2500%" y="3887.50"></text></g><g><title>benchmark (1,255,324,962 samples, 100.00%)</title><rect x="0.0000%" y="3861" width="100.0000%" height="15" fill="rgb(243,160,20)" fg:x="0" fg:w="1255324962"/><text x="0.2500%" y="3871.50">benchmark</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,706,648 samples, 0.22%)</title><rect x="99.7844%" y="3845" width="0.2156%" height="15" fill="rgb(218,208,30)" fg:x="1252618314" fg:w="2706648"/><text x="100.0344%" y="3855.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,706,648 samples, 0.22%)</title><rect x="99.7844%" y="3829" width="0.2156%" height="15" fill="rgb(224,120,49)" fg:x="1252618314" fg:w="2706648"/><text x="100.0344%" y="3839.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,706,648 samples, 0.22%)</title><rect x="99.7844%" y="3813" width="0.2156%" height="15" fill="rgb(246,12,2)" fg:x="1252618314" fg:w="2706648"/><text x="100.0344%" y="3823.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,706,648 samples, 0.22%)</title><rect x="99.7844%" y="3797" width="0.2156%" height="15" fill="rgb(236,117,3)" fg:x="1252618314" fg:w="2706648"/><text x="100.0344%" y="3807.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,706,648 samples, 0.22%)</title><rect x="99.7844%" y="3781" width="0.2156%" height="15" fill="rgb(216,128,52)" fg:x="1252618314" fg:w="2706648"/><text x="100.0344%" y="3791.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,706,648 samples, 0.22%)</title><rect x="99.7844%" y="3765" width="0.2156%" height="15" fill="rgb(246,145,19)" fg:x="1252618314" fg:w="2706648"/><text x="100.0344%" y="3775.50"></text></g></svg></svg>