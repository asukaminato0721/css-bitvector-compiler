<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="5190" onload="init(evt)" viewBox="0 0 1200 5190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="5190" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="5173.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="5173.00"> </text><svg id="frames" x="10" width="1180" total_samples="385864863"><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4,764,955 samples, 1.23%)</title><rect x="0.0000%" y="5109" width="1.2349%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4764955"/><text x="0.2500%" y="5119.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,253,942 samples, 0.32%)</title><rect x="1.2349%" y="5109" width="0.3250%" height="15" fill="rgb(217,0,24)" fg:x="4764955" fg:w="1253942"/><text x="1.4849%" y="5119.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,253,942 samples, 0.32%)</title><rect x="1.2349%" y="5093" width="0.3250%" height="15" fill="rgb(221,193,54)" fg:x="4764955" fg:w="1253942"/><text x="1.4849%" y="5103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,253,942 samples, 0.32%)</title><rect x="1.2349%" y="5077" width="0.3250%" height="15" fill="rgb(248,212,6)" fg:x="4764955" fg:w="1253942"/><text x="1.4849%" y="5087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,253,942 samples, 0.32%)</title><rect x="1.2349%" y="5061" width="0.3250%" height="15" fill="rgb(208,68,35)" fg:x="4764955" fg:w="1253942"/><text x="1.4849%" y="5071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,253,942 samples, 0.32%)</title><rect x="1.2349%" y="5045" width="0.3250%" height="15" fill="rgb(232,128,0)" fg:x="4764955" fg:w="1253942"/><text x="1.4849%" y="5055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,253,942 samples, 0.32%)</title><rect x="1.2349%" y="5029" width="0.3250%" height="15" fill="rgb(207,160,47)" fg:x="4764955" fg:w="1253942"/><text x="1.4849%" y="5039.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,253,942 samples, 0.32%)</title><rect x="1.2349%" y="5013" width="0.3250%" height="15" fill="rgb(228,23,34)" fg:x="4764955" fg:w="1253942"/><text x="1.4849%" y="5023.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,253,942 samples, 0.32%)</title><rect x="1.2349%" y="4997" width="0.3250%" height="15" fill="rgb(218,30,26)" fg:x="4764955" fg:w="1253942"/><text x="1.4849%" y="5007.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,253,942 samples, 0.32%)</title><rect x="1.2349%" y="4981" width="0.3250%" height="15" fill="rgb(220,122,19)" fg:x="4764955" fg:w="1253942"/><text x="1.4849%" y="4991.50"></text></g><g><title>[libc.so.6] (1,161,794 samples, 0.30%)</title><rect x="1.5598%" y="5109" width="0.3011%" height="15" fill="rgb(250,228,42)" fg:x="6018897" fg:w="1161794"/><text x="1.8098%" y="5119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,255,654 samples, 0.33%)</title><rect x="2.4014%" y="5093" width="0.3254%" height="15" fill="rgb(240,193,28)" fg:x="9266120" fg:w="1255654"/><text x="2.6514%" y="5103.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5,937,867 samples, 1.54%)</title><rect x="2.7268%" y="5093" width="1.5388%" height="15" fill="rgb(216,20,37)" fg:x="10521774" fg:w="5937867"/><text x="2.9768%" y="5103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,225,124 samples, 0.32%)</title><rect x="4.2656%" y="5093" width="0.3175%" height="15" fill="rgb(206,188,39)" fg:x="16459641" fg:w="1225124"/><text x="4.5156%" y="5103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,225,124 samples, 0.32%)</title><rect x="4.2656%" y="5077" width="0.3175%" height="15" fill="rgb(217,207,13)" fg:x="16459641" fg:w="1225124"/><text x="4.5156%" y="5087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,225,124 samples, 0.32%)</title><rect x="4.2656%" y="5061" width="0.3175%" height="15" fill="rgb(231,73,38)" fg:x="16459641" fg:w="1225124"/><text x="4.5156%" y="5071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1,225,124 samples, 0.32%)</title><rect x="4.2656%" y="5045" width="0.3175%" height="15" fill="rgb(225,20,46)" fg:x="16459641" fg:w="1225124"/><text x="4.5156%" y="5055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,225,124 samples, 0.32%)</title><rect x="4.2656%" y="5029" width="0.3175%" height="15" fill="rgb(210,31,41)" fg:x="16459641" fg:w="1225124"/><text x="4.5156%" y="5039.50"></text></g><g><title>[libc.so.6] (2,369,482 samples, 0.61%)</title><rect x="4.5831%" y="5093" width="0.6141%" height="15" fill="rgb(221,200,47)" fg:x="17684765" fg:w="2369482"/><text x="4.8331%" y="5103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,243,635 samples, 0.32%)</title><rect x="5.1972%" y="5093" width="0.3223%" height="15" fill="rgb(226,26,5)" fg:x="20054247" fg:w="1243635"/><text x="5.4472%" y="5103.50"></text></g><g><title>cfree (1,261,055 samples, 0.33%)</title><rect x="5.5195%" y="5093" width="0.3268%" height="15" fill="rgb(249,33,26)" fg:x="21297882" fg:w="1261055"/><text x="5.7695%" y="5103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5,778,871 samples, 1.50%)</title><rect x="5.8463%" y="5093" width="1.4976%" height="15" fill="rgb(235,183,28)" fg:x="22558937" fg:w="5778871"/><text x="6.0963%" y="5103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,441,696 samples, 0.63%)</title><rect x="6.7112%" y="5077" width="0.6328%" height="15" fill="rgb(221,5,38)" fg:x="25896112" fg:w="2441696"/><text x="6.9612%" y="5087.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,441,696 samples, 0.63%)</title><rect x="6.7112%" y="5061" width="0.6328%" height="15" fill="rgb(247,18,42)" fg:x="25896112" fg:w="2441696"/><text x="6.9612%" y="5071.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2,441,696 samples, 0.63%)</title><rect x="6.7112%" y="5045" width="0.6328%" height="15" fill="rgb(241,131,45)" fg:x="25896112" fg:w="2441696"/><text x="6.9612%" y="5055.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2,441,696 samples, 0.63%)</title><rect x="6.7112%" y="5029" width="0.6328%" height="15" fill="rgb(249,31,29)" fg:x="25896112" fg:w="2441696"/><text x="6.9612%" y="5039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2,441,696 samples, 0.63%)</title><rect x="6.7112%" y="5013" width="0.6328%" height="15" fill="rgb(225,111,53)" fg:x="25896112" fg:w="2441696"/><text x="6.9612%" y="5023.50"></text></g><g><title>core::hash::Hasher::write_u8 (2,441,696 samples, 0.63%)</title><rect x="6.7112%" y="4997" width="0.6328%" height="15" fill="rgb(238,160,17)" fg:x="25896112" fg:w="2441696"/><text x="6.9612%" y="5007.50"></text></g><g><title>css_bitvector_compiler::BitVector::set_bit (2,012,708 samples, 0.52%)</title><rect x="7.3440%" y="5093" width="0.5216%" height="15" fill="rgb(214,148,48)" fg:x="28337808" fg:w="2012708"/><text x="7.5940%" y="5103.50"></text></g><g><title>css_bitvector_compiler::BitVector::ensure_capacity (2,012,708 samples, 0.52%)</title><rect x="7.3440%" y="5077" width="0.5216%" height="15" fill="rgb(232,36,49)" fg:x="28337808" fg:w="2012708"/><text x="7.5940%" y="5087.50"></text></g><g><title>main::benchmark::node_has_class_id (13,457,435 samples, 3.49%)</title><rect x="7.8656%" y="5093" width="3.4876%" height="15" fill="rgb(209,103,24)" fg:x="30350516" fg:w="13457435"/><text x="8.1156%" y="5103.50">mai..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,221,593 samples, 0.32%)</title><rect x="11.0366%" y="5077" width="0.3166%" height="15" fill="rgb(229,88,8)" fg:x="42586358" fg:w="1221593"/><text x="11.2866%" y="5087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,221,593 samples, 0.32%)</title><rect x="11.0366%" y="5061" width="0.3166%" height="15" fill="rgb(213,181,19)" fg:x="42586358" fg:w="1221593"/><text x="11.2866%" y="5071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,221,593 samples, 0.32%)</title><rect x="11.0366%" y="5045" width="0.3166%" height="15" fill="rgb(254,191,54)" fg:x="42586358" fg:w="1221593"/><text x="11.2866%" y="5055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,221,593 samples, 0.32%)</title><rect x="11.0366%" y="5029" width="0.3166%" height="15" fill="rgb(241,83,37)" fg:x="42586358" fg:w="1221593"/><text x="11.2866%" y="5039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,221,593 samples, 0.32%)</title><rect x="11.0366%" y="5013" width="0.3166%" height="15" fill="rgb(233,36,39)" fg:x="42586358" fg:w="1221593"/><text x="11.2866%" y="5023.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,221,593 samples, 0.32%)</title><rect x="11.0366%" y="4997" width="0.3166%" height="15" fill="rgb(226,3,54)" fg:x="42586358" fg:w="1221593"/><text x="11.2866%" y="5007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1,221,593 samples, 0.32%)</title><rect x="11.0366%" y="4981" width="0.3166%" height="15" fill="rgb(245,192,40)" fg:x="42586358" fg:w="1221593"/><text x="11.2866%" y="4991.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1,221,593 samples, 0.32%)</title><rect x="11.0366%" y="4965" width="0.3166%" height="15" fill="rgb(238,167,29)" fg:x="42586358" fg:w="1221593"/><text x="11.2866%" y="4975.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1,221,593 samples, 0.32%)</title><rect x="11.0366%" y="4949" width="0.3166%" height="15" fill="rgb(232,182,51)" fg:x="42586358" fg:w="1221593"/><text x="11.2866%" y="4959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,221,593 samples, 0.32%)</title><rect x="11.0366%" y="4933" width="0.3166%" height="15" fill="rgb(231,60,39)" fg:x="42586358" fg:w="1221593"/><text x="11.2866%" y="4943.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,221,593 samples, 0.32%)</title><rect x="11.0366%" y="4917" width="0.3166%" height="15" fill="rgb(208,69,12)" fg:x="42586358" fg:w="1221593"/><text x="11.2866%" y="4927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,221,593 samples, 0.32%)</title><rect x="11.0366%" y="4901" width="0.3166%" height="15" fill="rgb(235,93,37)" fg:x="42586358" fg:w="1221593"/><text x="11.2866%" y="4911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,221,593 samples, 0.32%)</title><rect x="11.0366%" y="4885" width="0.3166%" height="15" fill="rgb(213,116,39)" fg:x="42586358" fg:w="1221593"/><text x="11.2866%" y="4895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,221,593 samples, 0.32%)</title><rect x="11.0366%" y="4869" width="0.3166%" height="15" fill="rgb(222,207,29)" fg:x="42586358" fg:w="1221593"/><text x="11.2866%" y="4879.50"></text></g><g><title>main::benchmark::matches_class_id (938,441 samples, 0.24%)</title><rect x="13.8948%" y="5077" width="0.2432%" height="15" fill="rgb(206,96,30)" fg:x="53615288" fg:w="938441"/><text x="14.1448%" y="5087.50"></text></g><g><title>main::benchmark::matches_id_id (1,164,614 samples, 0.30%)</title><rect x="14.1380%" y="5077" width="0.3018%" height="15" fill="rgb(218,138,4)" fg:x="54553729" fg:w="1164614"/><text x="14.3880%" y="5087.50"></text></g><g><title>main::benchmark::get_node_id_id (1,164,614 samples, 0.30%)</title><rect x="14.1380%" y="5061" width="0.3018%" height="15" fill="rgb(250,191,14)" fg:x="54553729" fg:w="1164614"/><text x="14.3880%" y="5071.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,164,614 samples, 0.30%)</title><rect x="14.1380%" y="5045" width="0.3018%" height="15" fill="rgb(239,60,40)" fg:x="54553729" fg:w="1164614"/><text x="14.3880%" y="5055.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (1,164,614 samples, 0.30%)</title><rect x="14.1380%" y="5029" width="0.3018%" height="15" fill="rgb(206,27,48)" fg:x="54553729" fg:w="1164614"/><text x="14.3880%" y="5039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,164,614 samples, 0.30%)</title><rect x="14.1380%" y="5013" width="0.3018%" height="15" fill="rgb(225,35,8)" fg:x="54553729" fg:w="1164614"/><text x="14.3880%" y="5023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,164,614 samples, 0.30%)</title><rect x="14.1380%" y="4997" width="0.3018%" height="15" fill="rgb(250,213,24)" fg:x="54553729" fg:w="1164614"/><text x="14.3880%" y="5007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,164,614 samples, 0.30%)</title><rect x="14.1380%" y="4981" width="0.3018%" height="15" fill="rgb(247,123,22)" fg:x="54553729" fg:w="1164614"/><text x="14.3880%" y="4991.50"></text></g><g><title>hashbrown::map::make_hash (1,164,614 samples, 0.30%)</title><rect x="14.1380%" y="4965" width="0.3018%" height="15" fill="rgb(231,138,38)" fg:x="54553729" fg:w="1164614"/><text x="14.3880%" y="4975.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (13,148,726 samples, 3.41%)</title><rect x="11.3532%" y="5093" width="3.4076%" height="15" fill="rgb(231,145,46)" fg:x="43807951" fg:w="13148726"/><text x="11.6032%" y="5103.50">mai..</text></g><g><title>main::benchmark::matches_tag_id (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="5077" width="0.3209%" height="15" fill="rgb(251,118,11)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="5087.50"></text></g><g><title>main::benchmark::get_node_tag_id (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="5061" width="0.3209%" height="15" fill="rgb(217,147,25)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="5071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="5045" width="0.3209%" height="15" fill="rgb(247,81,37)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="5055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="5029" width="0.3209%" height="15" fill="rgb(209,12,38)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="5039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="5013" width="0.3209%" height="15" fill="rgb(227,1,9)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="5023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="4997" width="0.3209%" height="15" fill="rgb(248,47,43)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="5007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="4981" width="0.3209%" height="15" fill="rgb(221,10,30)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="4991.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="4965" width="0.3209%" height="15" fill="rgb(210,229,1)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="4975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="4949" width="0.3209%" height="15" fill="rgb(222,148,37)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="4959.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="4933" width="0.3209%" height="15" fill="rgb(234,67,33)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="4943.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="4917" width="0.3209%" height="15" fill="rgb(247,98,35)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="4927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="4901" width="0.3209%" height="15" fill="rgb(247,138,52)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="4911.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="4885" width="0.3209%" height="15" fill="rgb(213,79,30)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="4895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="4869" width="0.3209%" height="15" fill="rgb(246,177,23)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="4879.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="4853" width="0.3209%" height="15" fill="rgb(230,62,27)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="4863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,238,334 samples, 0.32%)</title><rect x="14.4399%" y="4837" width="0.3209%" height="15" fill="rgb(216,154,8)" fg:x="55718343" fg:w="1238334"/><text x="14.6899%" y="4847.50"></text></g><g><title>[unknown] (50,690,287 samples, 13.14%)</title><rect x="1.8609%" y="5109" width="13.1368%" height="15" fill="rgb(244,35,45)" fg:x="7180691" fg:w="50690287"/><text x="2.1109%" y="5119.50">[unknown]</text></g><g><title>serde::de::Visitor::visit_borrowed_str (914,301 samples, 0.24%)</title><rect x="14.7608%" y="5093" width="0.2369%" height="15" fill="rgb(251,115,12)" fg:x="56956677" fg:w="914301"/><text x="15.0108%" y="5103.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (914,301 samples, 0.24%)</title><rect x="14.7608%" y="5077" width="0.2369%" height="15" fill="rgb(240,54,50)" fg:x="56956677" fg:w="914301"/><text x="15.0108%" y="5087.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (914,301 samples, 0.24%)</title><rect x="14.7608%" y="5061" width="0.2369%" height="15" fill="rgb(233,84,52)" fg:x="56956677" fg:w="914301"/><text x="15.0108%" y="5071.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (914,301 samples, 0.24%)</title><rect x="14.7608%" y="5045" width="0.2369%" height="15" fill="rgb(207,117,47)" fg:x="56956677" fg:w="914301"/><text x="15.0108%" y="5055.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (914,301 samples, 0.24%)</title><rect x="14.7608%" y="5029" width="0.2369%" height="15" fill="rgb(249,43,39)" fg:x="56956677" fg:w="914301"/><text x="15.0108%" y="5039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (914,301 samples, 0.24%)</title><rect x="14.7608%" y="5013" width="0.2369%" height="15" fill="rgb(209,38,44)" fg:x="56956677" fg:w="914301"/><text x="15.0108%" y="5023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (914,301 samples, 0.24%)</title><rect x="14.7608%" y="4997" width="0.2369%" height="15" fill="rgb(236,212,23)" fg:x="56956677" fg:w="914301"/><text x="15.0108%" y="5007.50"></text></g><g><title>alloc::slice::hack::to_vec (914,301 samples, 0.24%)</title><rect x="14.7608%" y="4981" width="0.2369%" height="15" fill="rgb(242,79,21)" fg:x="56956677" fg:w="914301"/><text x="15.0108%" y="4991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (914,301 samples, 0.24%)</title><rect x="14.7608%" y="4965" width="0.2369%" height="15" fill="rgb(211,96,35)" fg:x="56956677" fg:w="914301"/><text x="15.0108%" y="4975.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (914,301 samples, 0.24%)</title><rect x="14.7608%" y="4949" width="0.2369%" height="15" fill="rgb(253,215,40)" fg:x="56956677" fg:w="914301"/><text x="15.0108%" y="4959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (914,301 samples, 0.24%)</title><rect x="14.7608%" y="4933" width="0.2369%" height="15" fill="rgb(211,81,21)" fg:x="56956677" fg:w="914301"/><text x="15.0108%" y="4943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;main::benchmark::WebLayoutFrameResult&gt;&gt; (4,996,060 samples, 1.29%)</title><rect x="14.9977%" y="4837" width="1.2948%" height="15" fill="rgb(208,190,38)" fg:x="57870978" fg:w="4996060"/><text x="15.2477%" y="4847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,996,060 samples, 1.29%)</title><rect x="14.9977%" y="4821" width="1.2948%" height="15" fill="rgb(235,213,38)" fg:x="57870978" fg:w="4996060"/><text x="15.2477%" y="4831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::WebLayoutFrameResult]&gt; (4,996,060 samples, 1.29%)</title><rect x="14.9977%" y="4805" width="1.2948%" height="15" fill="rgb(237,122,38)" fg:x="57870978" fg:w="4996060"/><text x="15.2477%" y="4815.50"></text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::WebLayoutFrameResult&gt; (4,996,060 samples, 1.29%)</title><rect x="14.9977%" y="4789" width="1.2948%" height="15" fill="rgb(244,218,35)" fg:x="57870978" fg:w="4996060"/><text x="15.2477%" y="4799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4,996,060 samples, 1.29%)</title><rect x="14.9977%" y="4773" width="1.2948%" height="15" fill="rgb(240,68,47)" fg:x="57870978" fg:w="4996060"/><text x="15.2477%" y="4783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4,996,060 samples, 1.29%)</title><rect x="14.9977%" y="4757" width="1.2948%" height="15" fill="rgb(210,16,53)" fg:x="57870978" fg:w="4996060"/><text x="15.2477%" y="4767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4,996,060 samples, 1.29%)</title><rect x="14.9977%" y="4741" width="1.2948%" height="15" fill="rgb(235,124,12)" fg:x="57870978" fg:w="4996060"/><text x="15.2477%" y="4751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,996,060 samples, 1.29%)</title><rect x="14.9977%" y="4725" width="1.2948%" height="15" fill="rgb(224,169,11)" fg:x="57870978" fg:w="4996060"/><text x="15.2477%" y="4735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,996,060 samples, 1.29%)</title><rect x="14.9977%" y="4709" width="1.2948%" height="15" fill="rgb(250,166,2)" fg:x="57870978" fg:w="4996060"/><text x="15.2477%" y="4719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,996,060 samples, 1.29%)</title><rect x="14.9977%" y="4693" width="1.2948%" height="15" fill="rgb(242,216,29)" fg:x="57870978" fg:w="4996060"/><text x="15.2477%" y="4703.50"></text></g><g><title>alloc::alloc::dealloc (4,996,060 samples, 1.29%)</title><rect x="14.9977%" y="4677" width="1.2948%" height="15" fill="rgb(230,116,27)" fg:x="57870978" fg:w="4996060"/><text x="15.2477%" y="4687.50"></text></g><g><title>cfree (4,996,060 samples, 1.29%)</title><rect x="14.9977%" y="4661" width="1.2948%" height="15" fill="rgb(228,99,48)" fg:x="57870978" fg:w="4996060"/><text x="15.2477%" y="4671.50"></text></g><g><title>[libc.so.6] (4,996,060 samples, 1.29%)</title><rect x="14.9977%" y="4645" width="1.2948%" height="15" fill="rgb(253,11,6)" fg:x="57870978" fg:w="4996060"/><text x="15.2477%" y="4655.50"></text></g><g><title>[libc.so.6] (4,996,060 samples, 1.29%)</title><rect x="14.9977%" y="4629" width="1.2948%" height="15" fill="rgb(247,143,39)" fg:x="57870978" fg:w="4996060"/><text x="15.2477%" y="4639.50"></text></g><g><title>[libc.so.6] (2,488,718 samples, 0.64%)</title><rect x="15.6475%" y="4613" width="0.6450%" height="15" fill="rgb(236,97,10)" fg:x="60378320" fg:w="2488718"/><text x="15.8975%" y="4623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,224,089 samples, 0.32%)</title><rect x="16.2925%" y="3797" width="0.3172%" height="15" fill="rgb(233,208,19)" fg:x="62867038" fg:w="1224089"/><text x="16.5425%" y="3807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,224,089 samples, 0.32%)</title><rect x="16.2925%" y="3781" width="0.3172%" height="15" fill="rgb(216,164,2)" fg:x="62867038" fg:w="1224089"/><text x="16.5425%" y="3791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,224,089 samples, 0.32%)</title><rect x="16.2925%" y="3765" width="0.3172%" height="15" fill="rgb(220,129,5)" fg:x="62867038" fg:w="1224089"/><text x="16.5425%" y="3775.50"></text></g><g><title>alloc::slice::hack::to_vec (1,224,089 samples, 0.32%)</title><rect x="16.2925%" y="3749" width="0.3172%" height="15" fill="rgb(242,17,10)" fg:x="62867038" fg:w="1224089"/><text x="16.5425%" y="3759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,224,089 samples, 0.32%)</title><rect x="16.2925%" y="3733" width="0.3172%" height="15" fill="rgb(242,107,0)" fg:x="62867038" fg:w="1224089"/><text x="16.5425%" y="3743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,224,089 samples, 0.32%)</title><rect x="16.2925%" y="3717" width="0.3172%" height="15" fill="rgb(251,28,31)" fg:x="62867038" fg:w="1224089"/><text x="16.5425%" y="3727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,224,089 samples, 0.32%)</title><rect x="16.2925%" y="3701" width="0.3172%" height="15" fill="rgb(233,223,10)" fg:x="62867038" fg:w="1224089"/><text x="16.5425%" y="3711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,224,089 samples, 0.32%)</title><rect x="16.2925%" y="3685" width="0.3172%" height="15" fill="rgb(215,21,27)" fg:x="62867038" fg:w="1224089"/><text x="16.5425%" y="3695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,224,089 samples, 0.32%)</title><rect x="16.2925%" y="3669" width="0.3172%" height="15" fill="rgb(232,23,21)" fg:x="62867038" fg:w="1224089"/><text x="16.5425%" y="3679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,224,089 samples, 0.32%)</title><rect x="16.2925%" y="3653" width="0.3172%" height="15" fill="rgb(244,5,23)" fg:x="62867038" fg:w="1224089"/><text x="16.5425%" y="3663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,224,089 samples, 0.32%)</title><rect x="16.2925%" y="3637" width="0.3172%" height="15" fill="rgb(226,81,46)" fg:x="62867038" fg:w="1224089"/><text x="16.5425%" y="3647.50"></text></g><g><title>alloc::alloc::alloc (1,224,089 samples, 0.32%)</title><rect x="16.2925%" y="3621" width="0.3172%" height="15" fill="rgb(247,70,30)" fg:x="62867038" fg:w="1224089"/><text x="16.5425%" y="3631.50"></text></g><g><title>malloc (1,224,089 samples, 0.32%)</title><rect x="16.2925%" y="3605" width="0.3172%" height="15" fill="rgb(212,68,19)" fg:x="62867038" fg:w="1224089"/><text x="16.5425%" y="3615.50"></text></g><g><title>[libc.so.6] (1,224,089 samples, 0.32%)</title><rect x="16.2925%" y="3589" width="0.3172%" height="15" fill="rgb(240,187,13)" fg:x="62867038" fg:w="1224089"/><text x="16.5425%" y="3599.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,246,760 samples, 0.32%)</title><rect x="16.6097%" y="3669" width="0.3231%" height="15" fill="rgb(223,113,26)" fg:x="64091127" fg:w="1246760"/><text x="16.8597%" y="3679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,246,760 samples, 0.32%)</title><rect x="16.6097%" y="3653" width="0.3231%" height="15" fill="rgb(206,192,2)" fg:x="64091127" fg:w="1246760"/><text x="16.8597%" y="3663.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,246,760 samples, 0.32%)</title><rect x="16.6097%" y="3637" width="0.3231%" height="15" fill="rgb(241,108,4)" fg:x="64091127" fg:w="1246760"/><text x="16.8597%" y="3647.50"></text></g><g><title>alloc::slice::hack::to_vec (1,246,760 samples, 0.32%)</title><rect x="16.6097%" y="3621" width="0.3231%" height="15" fill="rgb(247,173,49)" fg:x="64091127" fg:w="1246760"/><text x="16.8597%" y="3631.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,246,760 samples, 0.32%)</title><rect x="16.6097%" y="3605" width="0.3231%" height="15" fill="rgb(224,114,35)" fg:x="64091127" fg:w="1246760"/><text x="16.8597%" y="3615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,246,760 samples, 0.32%)</title><rect x="16.6097%" y="3589" width="0.3231%" height="15" fill="rgb(245,159,27)" fg:x="64091127" fg:w="1246760"/><text x="16.8597%" y="3599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,246,760 samples, 0.32%)</title><rect x="16.6097%" y="3573" width="0.3231%" height="15" fill="rgb(245,172,44)" fg:x="64091127" fg:w="1246760"/><text x="16.8597%" y="3583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,246,760 samples, 0.32%)</title><rect x="16.6097%" y="3557" width="0.3231%" height="15" fill="rgb(236,23,11)" fg:x="64091127" fg:w="1246760"/><text x="16.8597%" y="3567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,246,760 samples, 0.32%)</title><rect x="16.6097%" y="3541" width="0.3231%" height="15" fill="rgb(205,117,38)" fg:x="64091127" fg:w="1246760"/><text x="16.8597%" y="3551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,246,760 samples, 0.32%)</title><rect x="16.6097%" y="3525" width="0.3231%" height="15" fill="rgb(237,72,25)" fg:x="64091127" fg:w="1246760"/><text x="16.8597%" y="3535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,246,760 samples, 0.32%)</title><rect x="16.6097%" y="3509" width="0.3231%" height="15" fill="rgb(244,70,9)" fg:x="64091127" fg:w="1246760"/><text x="16.8597%" y="3519.50"></text></g><g><title>alloc::alloc::alloc (1,246,760 samples, 0.32%)</title><rect x="16.6097%" y="3493" width="0.3231%" height="15" fill="rgb(217,125,39)" fg:x="64091127" fg:w="1246760"/><text x="16.8597%" y="3503.50"></text></g><g><title>malloc (1,246,760 samples, 0.32%)</title><rect x="16.6097%" y="3477" width="0.3231%" height="15" fill="rgb(235,36,10)" fg:x="64091127" fg:w="1246760"/><text x="16.8597%" y="3487.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,517,177 samples, 0.65%)</title><rect x="16.9328%" y="3525" width="0.6523%" height="15" fill="rgb(251,123,47)" fg:x="65337887" fg:w="2517177"/><text x="17.1828%" y="3535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,517,177 samples, 0.65%)</title><rect x="16.9328%" y="3509" width="0.6523%" height="15" fill="rgb(221,13,13)" fg:x="65337887" fg:w="2517177"/><text x="17.1828%" y="3519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,517,177 samples, 0.65%)</title><rect x="16.9328%" y="3493" width="0.6523%" height="15" fill="rgb(238,131,9)" fg:x="65337887" fg:w="2517177"/><text x="17.1828%" y="3503.50"></text></g><g><title>alloc::slice::hack::to_vec (2,517,177 samples, 0.65%)</title><rect x="16.9328%" y="3477" width="0.6523%" height="15" fill="rgb(211,50,8)" fg:x="65337887" fg:w="2517177"/><text x="17.1828%" y="3487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,517,177 samples, 0.65%)</title><rect x="16.9328%" y="3461" width="0.6523%" height="15" fill="rgb(245,182,24)" fg:x="65337887" fg:w="2517177"/><text x="17.1828%" y="3471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,517,177 samples, 0.65%)</title><rect x="16.9328%" y="3445" width="0.6523%" height="15" fill="rgb(242,14,37)" fg:x="65337887" fg:w="2517177"/><text x="17.1828%" y="3455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,517,177 samples, 0.65%)</title><rect x="16.9328%" y="3429" width="0.6523%" height="15" fill="rgb(246,228,12)" fg:x="65337887" fg:w="2517177"/><text x="17.1828%" y="3439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,517,177 samples, 0.65%)</title><rect x="16.9328%" y="3413" width="0.6523%" height="15" fill="rgb(213,55,15)" fg:x="65337887" fg:w="2517177"/><text x="17.1828%" y="3423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,517,177 samples, 0.65%)</title><rect x="16.9328%" y="3397" width="0.6523%" height="15" fill="rgb(209,9,3)" fg:x="65337887" fg:w="2517177"/><text x="17.1828%" y="3407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,517,177 samples, 0.65%)</title><rect x="16.9328%" y="3381" width="0.6523%" height="15" fill="rgb(230,59,30)" fg:x="65337887" fg:w="2517177"/><text x="17.1828%" y="3391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,517,177 samples, 0.65%)</title><rect x="16.9328%" y="3365" width="0.6523%" height="15" fill="rgb(209,121,21)" fg:x="65337887" fg:w="2517177"/><text x="17.1828%" y="3375.50"></text></g><g><title>alloc::alloc::alloc (2,517,177 samples, 0.65%)</title><rect x="16.9328%" y="3349" width="0.6523%" height="15" fill="rgb(220,109,13)" fg:x="65337887" fg:w="2517177"/><text x="17.1828%" y="3359.50"></text></g><g><title>malloc (2,517,177 samples, 0.65%)</title><rect x="16.9328%" y="3333" width="0.6523%" height="15" fill="rgb(232,18,1)" fg:x="65337887" fg:w="2517177"/><text x="17.1828%" y="3343.50"></text></g><g><title>[libc.so.6] (1,261,944 samples, 0.33%)</title><rect x="17.2581%" y="3317" width="0.3270%" height="15" fill="rgb(215,41,42)" fg:x="66593120" fg:w="1261944"/><text x="17.5081%" y="3327.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,261,348 samples, 0.33%)</title><rect x="17.7392%" y="3509" width="0.3269%" height="15" fill="rgb(224,123,36)" fg:x="68449164" fg:w="1261348"/><text x="17.9892%" y="3519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,261,348 samples, 0.33%)</title><rect x="17.7392%" y="3493" width="0.3269%" height="15" fill="rgb(240,125,3)" fg:x="68449164" fg:w="1261348"/><text x="17.9892%" y="3503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,261,348 samples, 0.33%)</title><rect x="17.7392%" y="3477" width="0.3269%" height="15" fill="rgb(205,98,50)" fg:x="68449164" fg:w="1261348"/><text x="17.9892%" y="3487.50"></text></g><g><title>alloc::slice::hack::to_vec (1,261,348 samples, 0.33%)</title><rect x="17.7392%" y="3461" width="0.3269%" height="15" fill="rgb(205,185,37)" fg:x="68449164" fg:w="1261348"/><text x="17.9892%" y="3471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,261,348 samples, 0.33%)</title><rect x="17.7392%" y="3445" width="0.3269%" height="15" fill="rgb(238,207,15)" fg:x="68449164" fg:w="1261348"/><text x="17.9892%" y="3455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,261,348 samples, 0.33%)</title><rect x="17.7392%" y="3429" width="0.3269%" height="15" fill="rgb(213,199,42)" fg:x="68449164" fg:w="1261348"/><text x="17.9892%" y="3439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,261,348 samples, 0.33%)</title><rect x="17.7392%" y="3413" width="0.3269%" height="15" fill="rgb(235,201,11)" fg:x="68449164" fg:w="1261348"/><text x="17.9892%" y="3423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,261,348 samples, 0.33%)</title><rect x="17.7392%" y="3397" width="0.3269%" height="15" fill="rgb(207,46,11)" fg:x="68449164" fg:w="1261348"/><text x="17.9892%" y="3407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,261,348 samples, 0.33%)</title><rect x="17.7392%" y="3381" width="0.3269%" height="15" fill="rgb(241,35,35)" fg:x="68449164" fg:w="1261348"/><text x="17.9892%" y="3391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,261,348 samples, 0.33%)</title><rect x="17.7392%" y="3365" width="0.3269%" height="15" fill="rgb(243,32,47)" fg:x="68449164" fg:w="1261348"/><text x="17.9892%" y="3375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,261,348 samples, 0.33%)</title><rect x="17.7392%" y="3349" width="0.3269%" height="15" fill="rgb(247,202,23)" fg:x="68449164" fg:w="1261348"/><text x="17.9892%" y="3359.50"></text></g><g><title>alloc::alloc::alloc (1,261,348 samples, 0.33%)</title><rect x="17.7392%" y="3333" width="0.3269%" height="15" fill="rgb(219,102,11)" fg:x="68449164" fg:w="1261348"/><text x="17.9892%" y="3343.50"></text></g><g><title>malloc (1,261,348 samples, 0.33%)</title><rect x="17.7392%" y="3317" width="0.3269%" height="15" fill="rgb(243,110,44)" fg:x="68449164" fg:w="1261348"/><text x="17.9892%" y="3327.50"></text></g><g><title>[libc.so.6] (1,261,348 samples, 0.33%)</title><rect x="17.7392%" y="3301" width="0.3269%" height="15" fill="rgb(222,74,54)" fg:x="68449164" fg:w="1261348"/><text x="17.9892%" y="3311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,235,411 samples, 0.32%)</title><rect x="18.0660%" y="3301" width="0.3202%" height="15" fill="rgb(216,99,12)" fg:x="69710512" fg:w="1235411"/><text x="18.3160%" y="3311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,235,411 samples, 0.32%)</title><rect x="18.0660%" y="3285" width="0.3202%" height="15" fill="rgb(226,22,26)" fg:x="69710512" fg:w="1235411"/><text x="18.3160%" y="3295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,235,411 samples, 0.32%)</title><rect x="18.0660%" y="3269" width="0.3202%" height="15" fill="rgb(217,163,10)" fg:x="69710512" fg:w="1235411"/><text x="18.3160%" y="3279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,235,411 samples, 0.32%)</title><rect x="18.0660%" y="3253" width="0.3202%" height="15" fill="rgb(213,25,53)" fg:x="69710512" fg:w="1235411"/><text x="18.3160%" y="3263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,235,411 samples, 0.32%)</title><rect x="18.0660%" y="3237" width="0.3202%" height="15" fill="rgb(252,105,26)" fg:x="69710512" fg:w="1235411"/><text x="18.3160%" y="3247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,235,411 samples, 0.32%)</title><rect x="18.0660%" y="3221" width="0.3202%" height="15" fill="rgb(220,39,43)" fg:x="69710512" fg:w="1235411"/><text x="18.3160%" y="3231.50"></text></g><g><title>alloc::alloc::alloc (1,235,411 samples, 0.32%)</title><rect x="18.0660%" y="3205" width="0.3202%" height="15" fill="rgb(229,68,48)" fg:x="69710512" fg:w="1235411"/><text x="18.3160%" y="3215.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,131,736 samples, 0.55%)</title><rect x="18.0660%" y="3381" width="0.5525%" height="15" fill="rgb(252,8,32)" fg:x="69710512" fg:w="2131736"/><text x="18.3160%" y="3391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,131,736 samples, 0.55%)</title><rect x="18.0660%" y="3365" width="0.5525%" height="15" fill="rgb(223,20,43)" fg:x="69710512" fg:w="2131736"/><text x="18.3160%" y="3375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,131,736 samples, 0.55%)</title><rect x="18.0660%" y="3349" width="0.5525%" height="15" fill="rgb(229,81,49)" fg:x="69710512" fg:w="2131736"/><text x="18.3160%" y="3359.50"></text></g><g><title>alloc::slice::hack::to_vec (2,131,736 samples, 0.55%)</title><rect x="18.0660%" y="3333" width="0.5525%" height="15" fill="rgb(236,28,36)" fg:x="69710512" fg:w="2131736"/><text x="18.3160%" y="3343.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,131,736 samples, 0.55%)</title><rect x="18.0660%" y="3317" width="0.5525%" height="15" fill="rgb(249,185,26)" fg:x="69710512" fg:w="2131736"/><text x="18.3160%" y="3327.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (896,325 samples, 0.23%)</title><rect x="18.3862%" y="3301" width="0.2323%" height="15" fill="rgb(249,174,33)" fg:x="70945923" fg:w="896325"/><text x="18.6362%" y="3311.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (896,325 samples, 0.23%)</title><rect x="18.3862%" y="3285" width="0.2323%" height="15" fill="rgb(233,201,37)" fg:x="70945923" fg:w="896325"/><text x="18.6362%" y="3295.50"></text></g><g><title>[libc.so.6] (896,325 samples, 0.23%)</title><rect x="18.3862%" y="3269" width="0.2323%" height="15" fill="rgb(221,78,26)" fg:x="70945923" fg:w="896325"/><text x="18.6362%" y="3279.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,202,924 samples, 0.31%)</title><rect x="18.6185%" y="3365" width="0.3117%" height="15" fill="rgb(250,127,30)" fg:x="71842248" fg:w="1202924"/><text x="18.8685%" y="3375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,202,924 samples, 0.31%)</title><rect x="18.6185%" y="3349" width="0.3117%" height="15" fill="rgb(230,49,44)" fg:x="71842248" fg:w="1202924"/><text x="18.8685%" y="3359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,202,924 samples, 0.31%)</title><rect x="18.6185%" y="3333" width="0.3117%" height="15" fill="rgb(229,67,23)" fg:x="71842248" fg:w="1202924"/><text x="18.8685%" y="3343.50"></text></g><g><title>alloc::slice::hack::to_vec (1,202,924 samples, 0.31%)</title><rect x="18.6185%" y="3317" width="0.3117%" height="15" fill="rgb(249,83,47)" fg:x="71842248" fg:w="1202924"/><text x="18.8685%" y="3327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,202,924 samples, 0.31%)</title><rect x="18.6185%" y="3301" width="0.3117%" height="15" fill="rgb(215,43,3)" fg:x="71842248" fg:w="1202924"/><text x="18.8685%" y="3311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,202,924 samples, 0.31%)</title><rect x="18.6185%" y="3285" width="0.3117%" height="15" fill="rgb(238,154,13)" fg:x="71842248" fg:w="1202924"/><text x="18.8685%" y="3295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,202,924 samples, 0.31%)</title><rect x="18.6185%" y="3269" width="0.3117%" height="15" fill="rgb(219,56,2)" fg:x="71842248" fg:w="1202924"/><text x="18.8685%" y="3279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,202,924 samples, 0.31%)</title><rect x="18.6185%" y="3253" width="0.3117%" height="15" fill="rgb(233,0,4)" fg:x="71842248" fg:w="1202924"/><text x="18.8685%" y="3263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,202,924 samples, 0.31%)</title><rect x="18.6185%" y="3237" width="0.3117%" height="15" fill="rgb(235,30,7)" fg:x="71842248" fg:w="1202924"/><text x="18.8685%" y="3247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,202,924 samples, 0.31%)</title><rect x="18.6185%" y="3221" width="0.3117%" height="15" fill="rgb(250,79,13)" fg:x="71842248" fg:w="1202924"/><text x="18.8685%" y="3231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,202,924 samples, 0.31%)</title><rect x="18.6185%" y="3205" width="0.3117%" height="15" fill="rgb(211,146,34)" fg:x="71842248" fg:w="1202924"/><text x="18.8685%" y="3215.50"></text></g><g><title>alloc::alloc::alloc (1,202,924 samples, 0.31%)</title><rect x="18.6185%" y="3189" width="0.3117%" height="15" fill="rgb(228,22,38)" fg:x="71842248" fg:w="1202924"/><text x="18.8685%" y="3199.50"></text></g><g><title>malloc (1,202,924 samples, 0.31%)</title><rect x="18.6185%" y="3173" width="0.3117%" height="15" fill="rgb(235,168,5)" fg:x="71842248" fg:w="1202924"/><text x="18.8685%" y="3183.50"></text></g><g><title>[libc.so.6] (1,202,924 samples, 0.31%)</title><rect x="18.6185%" y="3157" width="0.3117%" height="15" fill="rgb(221,155,16)" fg:x="71842248" fg:w="1202924"/><text x="18.8685%" y="3167.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,583,837 samples, 1.19%)</title><rect x="18.0660%" y="3445" width="1.1879%" height="15" fill="rgb(215,215,53)" fg:x="69710512" fg:w="4583837"/><text x="18.3160%" y="3455.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,583,837 samples, 1.19%)</title><rect x="18.0660%" y="3429" width="1.1879%" height="15" fill="rgb(223,4,10)" fg:x="69710512" fg:w="4583837"/><text x="18.3160%" y="3439.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,583,837 samples, 1.19%)</title><rect x="18.0660%" y="3413" width="1.1879%" height="15" fill="rgb(234,103,6)" fg:x="69710512" fg:w="4583837"/><text x="18.3160%" y="3423.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,583,837 samples, 1.19%)</title><rect x="18.0660%" y="3397" width="1.1879%" height="15" fill="rgb(227,97,0)" fg:x="69710512" fg:w="4583837"/><text x="18.3160%" y="3407.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,452,101 samples, 0.64%)</title><rect x="18.6185%" y="3381" width="0.6355%" height="15" fill="rgb(234,150,53)" fg:x="71842248" fg:w="2452101"/><text x="18.8685%" y="3391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3365" width="0.3237%" height="15" fill="rgb(228,201,54)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3349" width="0.3237%" height="15" fill="rgb(222,22,37)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3359.50"></text></g><g><title>alloc::slice::hack::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3333" width="0.3237%" height="15" fill="rgb(237,53,32)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3343.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3317" width="0.3237%" height="15" fill="rgb(233,25,53)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3327.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3301" width="0.3237%" height="15" fill="rgb(210,40,34)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3311.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3285" width="0.3237%" height="15" fill="rgb(241,220,44)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3295.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3269" width="0.3237%" height="15" fill="rgb(235,28,35)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3279.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3253" width="0.3237%" height="15" fill="rgb(210,56,17)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3263.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3237" width="0.3237%" height="15" fill="rgb(224,130,29)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3221" width="0.3237%" height="15" fill="rgb(235,212,8)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3205" width="0.3237%" height="15" fill="rgb(223,33,50)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3215.50"></text></g><g><title>alloc::slice::hack::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3189" width="0.3237%" height="15" fill="rgb(219,149,13)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3173" width="0.3237%" height="15" fill="rgb(250,156,29)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3183.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3157" width="0.3237%" height="15" fill="rgb(216,193,19)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3167.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3141" width="0.3237%" height="15" fill="rgb(216,135,14)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3125" width="0.3237%" height="15" fill="rgb(241,47,5)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3109" width="0.3237%" height="15" fill="rgb(233,42,35)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3119.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3093" width="0.3237%" height="15" fill="rgb(231,13,6)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3077" width="0.3237%" height="15" fill="rgb(207,181,40)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3061" width="0.3237%" height="15" fill="rgb(254,173,49)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3071.50"></text></g><g><title>alloc::slice::hack::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3045" width="0.3237%" height="15" fill="rgb(221,1,38)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3029" width="0.3237%" height="15" fill="rgb(206,124,46)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3039.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="3013" width="0.3237%" height="15" fill="rgb(249,21,11)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3023.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2997" width="0.3237%" height="15" fill="rgb(222,201,40)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="3007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2981" width="0.3237%" height="15" fill="rgb(235,61,29)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2965" width="0.3237%" height="15" fill="rgb(219,207,3)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2975.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2949" width="0.3237%" height="15" fill="rgb(222,56,46)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2933" width="0.3237%" height="15" fill="rgb(239,76,54)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2917" width="0.3237%" height="15" fill="rgb(231,124,27)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2927.50"></text></g><g><title>alloc::slice::hack::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2901" width="0.3237%" height="15" fill="rgb(249,195,6)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2885" width="0.3237%" height="15" fill="rgb(237,174,47)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2895.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2869" width="0.3237%" height="15" fill="rgb(206,201,31)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2879.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2853" width="0.3237%" height="15" fill="rgb(231,57,52)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2863.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2837" width="0.3237%" height="15" fill="rgb(248,177,22)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2847.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2821" width="0.3237%" height="15" fill="rgb(215,211,37)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2831.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2805" width="0.3237%" height="15" fill="rgb(241,128,51)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2789" width="0.3237%" height="15" fill="rgb(227,165,31)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2773" width="0.3237%" height="15" fill="rgb(228,167,24)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2783.50"></text></g><g><title>alloc::slice::hack::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2757" width="0.3237%" height="15" fill="rgb(228,143,12)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2741" width="0.3237%" height="15" fill="rgb(249,149,8)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2751.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2725" width="0.3237%" height="15" fill="rgb(243,35,44)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2735.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2709" width="0.3237%" height="15" fill="rgb(246,89,9)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2693" width="0.3237%" height="15" fill="rgb(233,213,13)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2677" width="0.3237%" height="15" fill="rgb(233,141,41)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2687.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2661" width="0.3237%" height="15" fill="rgb(239,167,4)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2645" width="0.3237%" height="15" fill="rgb(209,217,16)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2629" width="0.3237%" height="15" fill="rgb(219,88,35)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2639.50"></text></g><g><title>alloc::slice::hack::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2613" width="0.3237%" height="15" fill="rgb(220,193,23)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2597" width="0.3237%" height="15" fill="rgb(230,90,52)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2607.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2581" width="0.3237%" height="15" fill="rgb(252,106,19)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2591.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2565" width="0.3237%" height="15" fill="rgb(206,74,20)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2549" width="0.3237%" height="15" fill="rgb(230,138,44)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2533" width="0.3237%" height="15" fill="rgb(235,182,43)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2543.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2517" width="0.3237%" height="15" fill="rgb(242,16,51)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2501" width="0.3237%" height="15" fill="rgb(248,9,4)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2485" width="0.3237%" height="15" fill="rgb(210,31,22)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2495.50"></text></g><g><title>alloc::slice::hack::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2469" width="0.3237%" height="15" fill="rgb(239,54,39)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2453" width="0.3237%" height="15" fill="rgb(230,99,41)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2463.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2437" width="0.3237%" height="15" fill="rgb(253,106,12)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2447.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2421" width="0.3237%" height="15" fill="rgb(213,46,41)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2405" width="0.3237%" height="15" fill="rgb(215,133,35)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2389" width="0.3237%" height="15" fill="rgb(213,28,5)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2399.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2373" width="0.3237%" height="15" fill="rgb(215,77,49)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2357" width="0.3237%" height="15" fill="rgb(248,100,22)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2341" width="0.3237%" height="15" fill="rgb(208,67,9)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2351.50"></text></g><g><title>alloc::slice::hack::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2325" width="0.3237%" height="15" fill="rgb(219,133,21)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2309" width="0.3237%" height="15" fill="rgb(246,46,29)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2319.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2293" width="0.3237%" height="15" fill="rgb(246,185,52)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2303.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2277" width="0.3237%" height="15" fill="rgb(252,136,11)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2261" width="0.3237%" height="15" fill="rgb(219,138,53)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2245" width="0.3237%" height="15" fill="rgb(211,51,23)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2255.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2229" width="0.3237%" height="15" fill="rgb(247,221,28)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2213" width="0.3237%" height="15" fill="rgb(251,222,45)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2197" width="0.3237%" height="15" fill="rgb(217,162,53)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2207.50"></text></g><g><title>alloc::slice::hack::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2181" width="0.3237%" height="15" fill="rgb(229,93,14)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2165" width="0.3237%" height="15" fill="rgb(209,67,49)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2175.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2149" width="0.3237%" height="15" fill="rgb(213,87,29)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2159.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2133" width="0.3237%" height="15" fill="rgb(205,151,52)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2117" width="0.3237%" height="15" fill="rgb(253,215,39)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2101" width="0.3237%" height="15" fill="rgb(221,220,41)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2111.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2085" width="0.3237%" height="15" fill="rgb(218,133,21)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2095.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2069" width="0.3237%" height="15" fill="rgb(221,193,43)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2079.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2053" width="0.3237%" height="15" fill="rgb(240,128,52)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2063.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2037" width="0.3237%" height="15" fill="rgb(253,114,12)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2047.50"></text></g><g><title>alloc::slice::hack::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2021" width="0.3237%" height="15" fill="rgb(215,223,47)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2031.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="2005" width="0.3237%" height="15" fill="rgb(248,225,23)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="2015.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="1989" width="0.3237%" height="15" fill="rgb(250,108,0)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="1973" width="0.3237%" height="15" fill="rgb(228,208,7)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="1957" width="0.3237%" height="15" fill="rgb(244,45,10)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="1941" width="0.3237%" height="15" fill="rgb(207,125,25)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="1951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="1925" width="0.3237%" height="15" fill="rgb(210,195,18)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="1935.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="1909" width="0.3237%" height="15" fill="rgb(249,80,12)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="1919.50"></text></g><g><title>alloc::alloc::alloc (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="1893" width="0.3237%" height="15" fill="rgb(221,65,9)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="1903.50"></text></g><g><title>malloc (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="1877" width="0.3237%" height="15" fill="rgb(235,49,36)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="1887.50"></text></g><g><title>[libc.so.6] (1,249,177 samples, 0.32%)</title><rect x="18.9302%" y="1861" width="0.3237%" height="15" fill="rgb(225,32,20)" fg:x="73045172" fg:w="1249177"/><text x="19.1802%" y="1871.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (10,231,814 samples, 2.65%)</title><rect x="16.9328%" y="3589" width="2.6517%" height="15" fill="rgb(215,141,46)" fg:x="65337887" fg:w="10231814"/><text x="17.1828%" y="3599.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (10,231,814 samples, 2.65%)</title><rect x="16.9328%" y="3573" width="2.6517%" height="15" fill="rgb(250,160,47)" fg:x="65337887" fg:w="10231814"/><text x="17.1828%" y="3583.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (10,231,814 samples, 2.65%)</title><rect x="16.9328%" y="3557" width="2.6517%" height="15" fill="rgb(216,222,40)" fg:x="65337887" fg:w="10231814"/><text x="17.1828%" y="3567.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10,231,814 samples, 2.65%)</title><rect x="16.9328%" y="3541" width="2.6517%" height="15" fill="rgb(234,217,39)" fg:x="65337887" fg:w="10231814"/><text x="17.1828%" y="3551.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,714,637 samples, 2.00%)</title><rect x="17.5852%" y="3525" width="1.9993%" height="15" fill="rgb(207,178,40)" fg:x="67855064" fg:w="7714637"/><text x="17.8352%" y="3535.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,859,189 samples, 1.52%)</title><rect x="18.0660%" y="3509" width="1.5185%" height="15" fill="rgb(221,136,13)" fg:x="69710512" fg:w="5859189"/><text x="18.3160%" y="3519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,859,189 samples, 1.52%)</title><rect x="18.0660%" y="3493" width="1.5185%" height="15" fill="rgb(249,199,10)" fg:x="69710512" fg:w="5859189"/><text x="18.3160%" y="3503.50"></text></g><g><title>alloc::slice::hack::to_vec (5,859,189 samples, 1.52%)</title><rect x="18.0660%" y="3477" width="1.5185%" height="15" fill="rgb(249,222,13)" fg:x="69710512" fg:w="5859189"/><text x="18.3160%" y="3487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,859,189 samples, 1.52%)</title><rect x="18.0660%" y="3461" width="1.5185%" height="15" fill="rgb(244,185,38)" fg:x="69710512" fg:w="5859189"/><text x="18.3160%" y="3471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,275,352 samples, 0.33%)</title><rect x="19.2540%" y="3445" width="0.3305%" height="15" fill="rgb(236,202,9)" fg:x="74294349" fg:w="1275352"/><text x="19.5040%" y="3455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,275,352 samples, 0.33%)</title><rect x="19.2540%" y="3429" width="0.3305%" height="15" fill="rgb(250,229,37)" fg:x="74294349" fg:w="1275352"/><text x="19.5040%" y="3439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,275,352 samples, 0.33%)</title><rect x="19.2540%" y="3413" width="0.3305%" height="15" fill="rgb(206,174,23)" fg:x="74294349" fg:w="1275352"/><text x="19.5040%" y="3423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,275,352 samples, 0.33%)</title><rect x="19.2540%" y="3397" width="0.3305%" height="15" fill="rgb(211,33,43)" fg:x="74294349" fg:w="1275352"/><text x="19.5040%" y="3407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,275,352 samples, 0.33%)</title><rect x="19.2540%" y="3381" width="0.3305%" height="15" fill="rgb(245,58,50)" fg:x="74294349" fg:w="1275352"/><text x="19.5040%" y="3391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,275,352 samples, 0.33%)</title><rect x="19.2540%" y="3365" width="0.3305%" height="15" fill="rgb(244,68,36)" fg:x="74294349" fg:w="1275352"/><text x="19.5040%" y="3375.50"></text></g><g><title>alloc::alloc::alloc (1,275,352 samples, 0.33%)</title><rect x="19.2540%" y="3349" width="0.3305%" height="15" fill="rgb(232,229,15)" fg:x="74294349" fg:w="1275352"/><text x="19.5040%" y="3359.50"></text></g><g><title>malloc (1,275,352 samples, 0.33%)</title><rect x="19.2540%" y="3333" width="0.3305%" height="15" fill="rgb(254,30,23)" fg:x="74294349" fg:w="1275352"/><text x="19.5040%" y="3343.50"></text></g><g><title>[libc.so.6] (1,275,352 samples, 0.33%)</title><rect x="19.2540%" y="3317" width="0.3305%" height="15" fill="rgb(235,160,14)" fg:x="74294349" fg:w="1275352"/><text x="19.5040%" y="3327.50"></text></g><g><title>&lt;main::benchmark::LayoutFrame as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4821" width="4.6004%" height="15" fill="rgb(212,155,44)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4831.50">&lt;main..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4805" width="4.6004%" height="15" fill="rgb(226,2,50)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4815.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4789" width="4.6004%" height="15" fill="rgb(234,177,6)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4799.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4773" width="4.6004%" height="15" fill="rgb(217,24,9)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4783.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4757" width="4.6004%" height="15" fill="rgb(220,13,46)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4767.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4741" width="4.6004%" height="15" fill="rgb(239,221,27)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4751.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4725" width="4.6004%" height="15" fill="rgb(222,198,25)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4735.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4709" width="4.6004%" height="15" fill="rgb(211,99,13)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4719.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4693" width="4.6004%" height="15" fill="rgb(232,111,31)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4703.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4677" width="4.6004%" height="15" fill="rgb(245,82,37)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4687.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4661" width="4.6004%" height="15" fill="rgb(227,149,46)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4671.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4645" width="4.6004%" height="15" fill="rgb(218,36,50)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4655.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4629" width="4.6004%" height="15" fill="rgb(226,80,48)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4639.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4613" width="4.6004%" height="15" fill="rgb(238,224,15)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4623.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4597" width="4.6004%" height="15" fill="rgb(241,136,10)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4607.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4581" width="4.6004%" height="15" fill="rgb(208,32,45)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4591.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4565" width="4.6004%" height="15" fill="rgb(207,135,9)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4575.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4549" width="4.6004%" height="15" fill="rgb(206,86,44)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4559.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4533" width="4.6004%" height="15" fill="rgb(245,177,15)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4543.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4517" width="4.6004%" height="15" fill="rgb(206,64,50)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4527.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4501" width="4.6004%" height="15" fill="rgb(234,36,40)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4511.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4485" width="4.6004%" height="15" fill="rgb(213,64,8)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4495.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4469" width="4.6004%" height="15" fill="rgb(210,75,36)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4479.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4453" width="4.6004%" height="15" fill="rgb(229,88,21)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4463.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4437" width="4.6004%" height="15" fill="rgb(252,204,47)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4447.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4421" width="4.6004%" height="15" fill="rgb(208,77,27)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4431.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4405" width="4.6004%" height="15" fill="rgb(221,76,26)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4415.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4389" width="4.6004%" height="15" fill="rgb(225,139,18)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4399.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4373" width="4.6004%" height="15" fill="rgb(230,137,11)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4383.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4357" width="4.6004%" height="15" fill="rgb(212,28,1)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4367.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4341" width="4.6004%" height="15" fill="rgb(248,164,17)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4351.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4325" width="4.6004%" height="15" fill="rgb(222,171,42)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4335.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4309" width="4.6004%" height="15" fill="rgb(243,84,45)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4319.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4293" width="4.6004%" height="15" fill="rgb(252,49,23)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4303.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4277" width="4.6004%" height="15" fill="rgb(215,19,7)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4287.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4261" width="4.6004%" height="15" fill="rgb(238,81,41)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4271.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4245" width="4.6004%" height="15" fill="rgb(210,199,37)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4255.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4229" width="4.6004%" height="15" fill="rgb(244,192,49)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4239.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4213" width="4.6004%" height="15" fill="rgb(226,211,11)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4223.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4197" width="4.6004%" height="15" fill="rgb(236,162,54)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4207.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4181" width="4.6004%" height="15" fill="rgb(220,229,9)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4191.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4165" width="4.6004%" height="15" fill="rgb(250,87,22)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4175.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4149" width="4.6004%" height="15" fill="rgb(239,43,17)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4159.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4133" width="4.6004%" height="15" fill="rgb(231,177,25)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4143.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4117" width="4.6004%" height="15" fill="rgb(219,179,1)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4127.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4101" width="4.6004%" height="15" fill="rgb(238,219,53)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4111.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4085" width="4.6004%" height="15" fill="rgb(232,167,36)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4095.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4069" width="4.6004%" height="15" fill="rgb(244,19,51)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4079.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4053" width="4.6004%" height="15" fill="rgb(224,6,22)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4063.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4037" width="4.6004%" height="15" fill="rgb(224,145,5)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4047.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4021" width="4.6004%" height="15" fill="rgb(234,130,49)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4031.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="4005" width="4.6004%" height="15" fill="rgb(254,6,2)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="4015.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="3989" width="4.6004%" height="15" fill="rgb(208,96,46)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="3999.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="3973" width="4.6004%" height="15" fill="rgb(239,3,39)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="3983.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="3957" width="4.6004%" height="15" fill="rgb(233,210,1)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="3967.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="3941" width="4.6004%" height="15" fill="rgb(244,137,37)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="3951.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="3925" width="4.6004%" height="15" fill="rgb(240,136,2)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="3935.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="3909" width="4.6004%" height="15" fill="rgb(239,18,37)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="3919.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="3893" width="4.6004%" height="15" fill="rgb(218,185,22)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="3903.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="3877" width="4.6004%" height="15" fill="rgb(225,218,4)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="3887.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="3861" width="4.6004%" height="15" fill="rgb(230,182,32)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="3871.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="3845" width="4.6004%" height="15" fill="rgb(242,56,43)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="3855.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="3829" width="4.6004%" height="15" fill="rgb(233,99,24)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="3839.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (17,751,384 samples, 4.60%)</title><rect x="16.2925%" y="3813" width="4.6004%" height="15" fill="rgb(234,209,42)" fg:x="62867038" fg:w="17751384"/><text x="16.5425%" y="3823.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,527,295 samples, 4.28%)</title><rect x="16.6097%" y="3797" width="4.2832%" height="15" fill="rgb(227,7,12)" fg:x="64091127" fg:w="16527295"/><text x="16.8597%" y="3807.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,527,295 samples, 4.28%)</title><rect x="16.6097%" y="3781" width="4.2832%" height="15" fill="rgb(245,203,43)" fg:x="64091127" fg:w="16527295"/><text x="16.8597%" y="3791.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (16,527,295 samples, 4.28%)</title><rect x="16.6097%" y="3765" width="4.2832%" height="15" fill="rgb(238,205,33)" fg:x="64091127" fg:w="16527295"/><text x="16.8597%" y="3775.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16,527,295 samples, 4.28%)</title><rect x="16.6097%" y="3749" width="4.2832%" height="15" fill="rgb(231,56,7)" fg:x="64091127" fg:w="16527295"/><text x="16.8597%" y="3759.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (16,527,295 samples, 4.28%)</title><rect x="16.6097%" y="3733" width="4.2832%" height="15" fill="rgb(244,186,29)" fg:x="64091127" fg:w="16527295"/><text x="16.8597%" y="3743.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (16,527,295 samples, 4.28%)</title><rect x="16.6097%" y="3717" width="4.2832%" height="15" fill="rgb(234,111,31)" fg:x="64091127" fg:w="16527295"/><text x="16.8597%" y="3727.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (16,527,295 samples, 4.28%)</title><rect x="16.6097%" y="3701" width="4.2832%" height="15" fill="rgb(241,149,10)" fg:x="64091127" fg:w="16527295"/><text x="16.8597%" y="3711.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (16,527,295 samples, 4.28%)</title><rect x="16.6097%" y="3685" width="4.2832%" height="15" fill="rgb(249,206,44)" fg:x="64091127" fg:w="16527295"/><text x="16.8597%" y="3695.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (15,280,535 samples, 3.96%)</title><rect x="16.9328%" y="3669" width="3.9601%" height="15" fill="rgb(251,153,30)" fg:x="65337887" fg:w="15280535"/><text x="17.1828%" y="3679.50">&lt;ser..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15,280,535 samples, 3.96%)</title><rect x="16.9328%" y="3653" width="3.9601%" height="15" fill="rgb(239,152,38)" fg:x="65337887" fg:w="15280535"/><text x="17.1828%" y="3663.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15,280,535 samples, 3.96%)</title><rect x="16.9328%" y="3637" width="3.9601%" height="15" fill="rgb(249,139,47)" fg:x="65337887" fg:w="15280535"/><text x="17.1828%" y="3647.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (15,280,535 samples, 3.96%)</title><rect x="16.9328%" y="3621" width="3.9601%" height="15" fill="rgb(244,64,35)" fg:x="65337887" fg:w="15280535"/><text x="17.1828%" y="3631.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15,280,535 samples, 3.96%)</title><rect x="16.9328%" y="3605" width="3.9601%" height="15" fill="rgb(216,46,15)" fg:x="65337887" fg:w="15280535"/><text x="17.1828%" y="3615.50">&lt;T a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,048,721 samples, 1.31%)</title><rect x="19.5845%" y="3589" width="1.3084%" height="15" fill="rgb(250,74,19)" fg:x="75569701" fg:w="5048721"/><text x="19.8345%" y="3599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,048,721 samples, 1.31%)</title><rect x="19.5845%" y="3573" width="1.3084%" height="15" fill="rgb(249,42,33)" fg:x="75569701" fg:w="5048721"/><text x="19.8345%" y="3583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,048,721 samples, 1.31%)</title><rect x="19.5845%" y="3557" width="1.3084%" height="15" fill="rgb(242,149,17)" fg:x="75569701" fg:w="5048721"/><text x="19.8345%" y="3567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,048,721 samples, 1.31%)</title><rect x="19.5845%" y="3541" width="1.3084%" height="15" fill="rgb(244,29,21)" fg:x="75569701" fg:w="5048721"/><text x="19.8345%" y="3551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,048,721 samples, 1.31%)</title><rect x="19.5845%" y="3525" width="1.3084%" height="15" fill="rgb(220,130,37)" fg:x="75569701" fg:w="5048721"/><text x="19.8345%" y="3535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,048,721 samples, 1.31%)</title><rect x="19.5845%" y="3509" width="1.3084%" height="15" fill="rgb(211,67,2)" fg:x="75569701" fg:w="5048721"/><text x="19.8345%" y="3519.50"></text></g><g><title>alloc::alloc::alloc (5,048,721 samples, 1.31%)</title><rect x="19.5845%" y="3493" width="1.3084%" height="15" fill="rgb(235,68,52)" fg:x="75569701" fg:w="5048721"/><text x="19.8345%" y="3503.50"></text></g><g><title>malloc (5,048,721 samples, 1.31%)</title><rect x="19.5845%" y="3477" width="1.3084%" height="15" fill="rgb(246,142,3)" fg:x="75569701" fg:w="5048721"/><text x="19.8345%" y="3487.50"></text></g><g><title>[libc.so.6] (5,048,721 samples, 1.31%)</title><rect x="19.5845%" y="3461" width="1.3084%" height="15" fill="rgb(241,25,7)" fg:x="75569701" fg:w="5048721"/><text x="19.8345%" y="3471.50"></text></g><g><title>[libc.so.6] (5,048,721 samples, 1.31%)</title><rect x="19.5845%" y="3445" width="1.3084%" height="15" fill="rgb(242,119,39)" fg:x="75569701" fg:w="5048721"/><text x="19.8345%" y="3455.50"></text></g><g><title>[libc.so.6] (1,262,812 samples, 0.33%)</title><rect x="20.5656%" y="3429" width="0.3273%" height="15" fill="rgb(241,98,45)" fg:x="79355610" fg:w="1262812"/><text x="20.8156%" y="3439.50"></text></g><g><title>cfree (1,244,627 samples, 0.32%)</title><rect x="20.8929%" y="4597" width="0.3226%" height="15" fill="rgb(254,28,30)" fg:x="80618422" fg:w="1244627"/><text x="21.1429%" y="4607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,193,642 samples, 0.31%)</title><rect x="21.2155%" y="4005" width="0.3093%" height="15" fill="rgb(241,142,54)" fg:x="81863049" fg:w="1193642"/><text x="21.4655%" y="4015.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1,193,642 samples, 0.31%)</title><rect x="21.2155%" y="3989" width="0.3093%" height="15" fill="rgb(222,85,15)" fg:x="81863049" fg:w="1193642"/><text x="21.4655%" y="3999.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,193,642 samples, 0.31%)</title><rect x="21.2155%" y="3973" width="0.3093%" height="15" fill="rgb(210,85,47)" fg:x="81863049" fg:w="1193642"/><text x="21.4655%" y="3983.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,193,642 samples, 0.31%)</title><rect x="21.2155%" y="3957" width="0.3093%" height="15" fill="rgb(224,206,25)" fg:x="81863049" fg:w="1193642"/><text x="21.4655%" y="3967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,193,642 samples, 0.31%)</title><rect x="21.2155%" y="3941" width="0.3093%" height="15" fill="rgb(243,201,19)" fg:x="81863049" fg:w="1193642"/><text x="21.4655%" y="3951.50"></text></g><g><title>alloc::alloc::dealloc (1,193,642 samples, 0.31%)</title><rect x="21.2155%" y="3925" width="0.3093%" height="15" fill="rgb(236,59,4)" fg:x="81863049" fg:w="1193642"/><text x="21.4655%" y="3935.50"></text></g><g><title>cfree (1,193,642 samples, 0.31%)</title><rect x="21.2155%" y="3909" width="0.3093%" height="15" fill="rgb(254,179,45)" fg:x="81863049" fg:w="1193642"/><text x="21.4655%" y="3919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,249,816 samples, 0.32%)</title><rect x="21.5248%" y="2485" width="0.3239%" height="15" fill="rgb(226,14,10)" fg:x="83056691" fg:w="1249816"/><text x="21.7748%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,249,816 samples, 0.32%)</title><rect x="21.5248%" y="2469" width="0.3239%" height="15" fill="rgb(244,27,41)" fg:x="83056691" fg:w="1249816"/><text x="21.7748%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,249,816 samples, 0.32%)</title><rect x="21.5248%" y="2453" width="0.3239%" height="15" fill="rgb(235,35,32)" fg:x="83056691" fg:w="1249816"/><text x="21.7748%" y="2463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,249,816 samples, 0.32%)</title><rect x="21.5248%" y="2437" width="0.3239%" height="15" fill="rgb(218,68,31)" fg:x="83056691" fg:w="1249816"/><text x="21.7748%" y="2447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,192,508 samples, 0.31%)</title><rect x="21.8487%" y="1365" width="0.3090%" height="15" fill="rgb(207,120,37)" fg:x="84306507" fg:w="1192508"/><text x="22.0987%" y="1375.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,192,508 samples, 0.31%)</title><rect x="21.8487%" y="1349" width="0.3090%" height="15" fill="rgb(227,98,0)" fg:x="84306507" fg:w="1192508"/><text x="22.0987%" y="1359.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,192,508 samples, 0.31%)</title><rect x="21.8487%" y="1333" width="0.3090%" height="15" fill="rgb(207,7,3)" fg:x="84306507" fg:w="1192508"/><text x="22.0987%" y="1343.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,192,508 samples, 0.31%)</title><rect x="21.8487%" y="1317" width="0.3090%" height="15" fill="rgb(206,98,19)" fg:x="84306507" fg:w="1192508"/><text x="22.0987%" y="1327.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,192,508 samples, 0.31%)</title><rect x="21.8487%" y="1301" width="0.3090%" height="15" fill="rgb(217,5,26)" fg:x="84306507" fg:w="1192508"/><text x="22.0987%" y="1311.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,192,508 samples, 0.31%)</title><rect x="21.8487%" y="1285" width="0.3090%" height="15" fill="rgb(235,190,38)" fg:x="84306507" fg:w="1192508"/><text x="22.0987%" y="1295.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,192,508 samples, 0.31%)</title><rect x="21.8487%" y="1269" width="0.3090%" height="15" fill="rgb(247,86,24)" fg:x="84306507" fg:w="1192508"/><text x="22.0987%" y="1279.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,192,508 samples, 0.31%)</title><rect x="21.8487%" y="1253" width="0.3090%" height="15" fill="rgb(205,101,16)" fg:x="84306507" fg:w="1192508"/><text x="22.0987%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (6,042,918 samples, 1.57%)</title><rect x="20.8929%" y="4821" width="1.5661%" height="15" fill="rgb(246,168,33)" fg:x="80618422" fg:w="6042918"/><text x="21.1429%" y="4831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::LayoutFrame]&gt; (6,042,918 samples, 1.57%)</title><rect x="20.8929%" y="4805" width="1.5661%" height="15" fill="rgb(231,114,1)" fg:x="80618422" fg:w="6042918"/><text x="21.1429%" y="4815.50"></text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::LayoutFrame&gt; (6,042,918 samples, 1.57%)</title><rect x="20.8929%" y="4789" width="1.5661%" height="15" fill="rgb(207,184,53)" fg:x="80618422" fg:w="6042918"/><text x="21.1429%" y="4799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,042,918 samples, 1.57%)</title><rect x="20.8929%" y="4773" width="1.5661%" height="15" fill="rgb(224,95,51)" fg:x="80618422" fg:w="6042918"/><text x="21.1429%" y="4783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,042,918 samples, 1.57%)</title><rect x="20.8929%" y="4757" width="1.5661%" height="15" fill="rgb(212,188,45)" fg:x="80618422" fg:w="6042918"/><text x="21.1429%" y="4767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,042,918 samples, 1.57%)</title><rect x="20.8929%" y="4741" width="1.5661%" height="15" fill="rgb(223,154,38)" fg:x="80618422" fg:w="6042918"/><text x="21.1429%" y="4751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,042,918 samples, 1.57%)</title><rect x="20.8929%" y="4725" width="1.5661%" height="15" fill="rgb(251,22,52)" fg:x="80618422" fg:w="6042918"/><text x="21.1429%" y="4735.50"></text></g><g><title>core::mem::drop (6,042,918 samples, 1.57%)</title><rect x="20.8929%" y="4709" width="1.5661%" height="15" fill="rgb(229,209,22)" fg:x="80618422" fg:w="6042918"/><text x="21.1429%" y="4719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,042,918 samples, 1.57%)</title><rect x="20.8929%" y="4693" width="1.5661%" height="15" fill="rgb(234,138,34)" fg:x="80618422" fg:w="6042918"/><text x="21.1429%" y="4703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,042,918 samples, 1.57%)</title><rect x="20.8929%" y="4677" width="1.5661%" height="15" fill="rgb(212,95,11)" fg:x="80618422" fg:w="6042918"/><text x="21.1429%" y="4687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,042,918 samples, 1.57%)</title><rect x="20.8929%" y="4661" width="1.5661%" height="15" fill="rgb(240,179,47)" fg:x="80618422" fg:w="6042918"/><text x="21.1429%" y="4671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,042,918 samples, 1.57%)</title><rect x="20.8929%" y="4645" width="1.5661%" height="15" fill="rgb(240,163,11)" fg:x="80618422" fg:w="6042918"/><text x="21.1429%" y="4655.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,042,918 samples, 1.57%)</title><rect x="20.8929%" y="4629" width="1.5661%" height="15" fill="rgb(236,37,12)" fg:x="80618422" fg:w="6042918"/><text x="21.1429%" y="4639.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,042,918 samples, 1.57%)</title><rect x="20.8929%" y="4613" width="1.5661%" height="15" fill="rgb(232,164,16)" fg:x="80618422" fg:w="6042918"/><text x="21.1429%" y="4623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4597" width="1.2435%" height="15" fill="rgb(244,205,15)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4581" width="1.2435%" height="15" fill="rgb(223,117,47)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4565" width="1.2435%" height="15" fill="rgb(244,107,35)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4549" width="1.2435%" height="15" fill="rgb(205,140,8)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4559.50"></text></g><g><title>core::mem::drop (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4533" width="1.2435%" height="15" fill="rgb(228,84,46)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4517" width="1.2435%" height="15" fill="rgb(254,188,9)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4501" width="1.2435%" height="15" fill="rgb(206,112,54)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4485" width="1.2435%" height="15" fill="rgb(216,84,49)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4469" width="1.2435%" height="15" fill="rgb(214,194,35)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4479.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4453" width="1.2435%" height="15" fill="rgb(249,28,3)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4437" width="1.2435%" height="15" fill="rgb(222,56,52)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4421" width="1.2435%" height="15" fill="rgb(245,217,50)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4405" width="1.2435%" height="15" fill="rgb(213,201,24)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4389" width="1.2435%" height="15" fill="rgb(248,116,28)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4373" width="1.2435%" height="15" fill="rgb(219,72,43)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4357" width="1.2435%" height="15" fill="rgb(209,138,14)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4341" width="1.2435%" height="15" fill="rgb(222,18,33)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4325" width="1.2435%" height="15" fill="rgb(213,199,7)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4309" width="1.2435%" height="15" fill="rgb(250,110,10)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4319.50"></text></g><g><title>core::mem::drop (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4293" width="1.2435%" height="15" fill="rgb(248,123,6)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4277" width="1.2435%" height="15" fill="rgb(206,91,31)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4261" width="1.2435%" height="15" fill="rgb(211,154,13)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4271.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4245" width="1.2435%" height="15" fill="rgb(225,148,7)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4229" width="1.2435%" height="15" fill="rgb(220,160,43)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4239.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4213" width="1.2435%" height="15" fill="rgb(213,52,39)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4223.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4197" width="1.2435%" height="15" fill="rgb(243,137,7)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4181" width="1.2435%" height="15" fill="rgb(230,79,13)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4165" width="1.2435%" height="15" fill="rgb(247,105,23)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4149" width="1.2435%" height="15" fill="rgb(223,179,41)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4159.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4133" width="1.2435%" height="15" fill="rgb(218,9,34)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4117" width="1.2435%" height="15" fill="rgb(222,106,8)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4127.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4101" width="1.2435%" height="15" fill="rgb(211,220,0)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4085" width="1.2435%" height="15" fill="rgb(229,52,16)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4095.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4069" width="1.2435%" height="15" fill="rgb(212,155,18)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4079.50"></text></g><g><title>core::mem::drop (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4053" width="1.2435%" height="15" fill="rgb(242,21,14)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4037" width="1.2435%" height="15" fill="rgb(222,19,48)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4047.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,798,291 samples, 1.24%)</title><rect x="21.2155%" y="4021" width="1.2435%" height="15" fill="rgb(232,45,27)" fg:x="81863049" fg:w="4798291"/><text x="21.4655%" y="4031.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="4005" width="0.9342%" height="15" fill="rgb(249,103,42)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="4015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3989" width="0.9342%" height="15" fill="rgb(246,81,33)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3999.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3973" width="0.9342%" height="15" fill="rgb(252,33,42)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3983.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3957" width="0.9342%" height="15" fill="rgb(209,212,41)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3967.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3941" width="0.9342%" height="15" fill="rgb(207,154,6)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3925" width="0.9342%" height="15" fill="rgb(223,64,47)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3909" width="0.9342%" height="15" fill="rgb(211,161,38)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3919.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3893" width="0.9342%" height="15" fill="rgb(219,138,40)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3877" width="0.9342%" height="15" fill="rgb(241,228,46)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3887.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3861" width="0.9342%" height="15" fill="rgb(223,209,38)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3845" width="0.9342%" height="15" fill="rgb(236,164,45)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3855.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3829" width="0.9342%" height="15" fill="rgb(231,15,5)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3839.50"></text></g><g><title>core::mem::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3813" width="0.9342%" height="15" fill="rgb(252,35,15)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3797" width="0.9342%" height="15" fill="rgb(248,181,18)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3807.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3781" width="0.9342%" height="15" fill="rgb(233,39,42)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3791.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3765" width="0.9342%" height="15" fill="rgb(238,110,33)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3749" width="0.9342%" height="15" fill="rgb(233,195,10)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3759.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3733" width="0.9342%" height="15" fill="rgb(254,105,3)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3743.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3717" width="0.9342%" height="15" fill="rgb(221,225,9)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3701" width="0.9342%" height="15" fill="rgb(224,227,45)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3685" width="0.9342%" height="15" fill="rgb(229,198,43)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3669" width="0.9342%" height="15" fill="rgb(206,209,35)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3653" width="0.9342%" height="15" fill="rgb(245,195,53)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3637" width="0.9342%" height="15" fill="rgb(240,92,26)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3647.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3621" width="0.9342%" height="15" fill="rgb(207,40,23)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3605" width="0.9342%" height="15" fill="rgb(223,111,35)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3589" width="0.9342%" height="15" fill="rgb(229,147,28)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3599.50"></text></g><g><title>core::mem::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3573" width="0.9342%" height="15" fill="rgb(211,29,28)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3557" width="0.9342%" height="15" fill="rgb(228,72,33)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3567.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3541" width="0.9342%" height="15" fill="rgb(205,214,31)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3551.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3525" width="0.9342%" height="15" fill="rgb(224,111,15)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3509" width="0.9342%" height="15" fill="rgb(253,21,26)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3519.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3493" width="0.9342%" height="15" fill="rgb(245,139,43)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3503.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3477" width="0.9342%" height="15" fill="rgb(252,170,7)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3461" width="0.9342%" height="15" fill="rgb(231,118,14)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3445" width="0.9342%" height="15" fill="rgb(238,83,0)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3429" width="0.9342%" height="15" fill="rgb(221,39,39)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3413" width="0.9342%" height="15" fill="rgb(222,119,46)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3423.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3397" width="0.9342%" height="15" fill="rgb(222,165,49)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3407.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3381" width="0.9342%" height="15" fill="rgb(219,113,52)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3365" width="0.9342%" height="15" fill="rgb(214,7,15)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3375.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3349" width="0.9342%" height="15" fill="rgb(235,32,4)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3359.50"></text></g><g><title>core::mem::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3333" width="0.9342%" height="15" fill="rgb(238,90,54)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3317" width="0.9342%" height="15" fill="rgb(213,208,19)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3327.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3301" width="0.9342%" height="15" fill="rgb(233,156,4)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3311.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3285" width="0.9342%" height="15" fill="rgb(207,194,5)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3269" width="0.9342%" height="15" fill="rgb(206,111,30)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3279.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3253" width="0.9342%" height="15" fill="rgb(243,70,54)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3263.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3237" width="0.9342%" height="15" fill="rgb(242,28,8)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3221" width="0.9342%" height="15" fill="rgb(219,106,18)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3205" width="0.9342%" height="15" fill="rgb(244,222,10)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3189" width="0.9342%" height="15" fill="rgb(236,179,52)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3173" width="0.9342%" height="15" fill="rgb(213,23,39)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3157" width="0.9342%" height="15" fill="rgb(238,48,10)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3167.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3141" width="0.9342%" height="15" fill="rgb(251,196,23)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3125" width="0.9342%" height="15" fill="rgb(250,152,24)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3109" width="0.9342%" height="15" fill="rgb(209,150,17)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3119.50"></text></g><g><title>core::mem::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3093" width="0.9342%" height="15" fill="rgb(234,202,34)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3077" width="0.9342%" height="15" fill="rgb(253,148,53)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3061" width="0.9342%" height="15" fill="rgb(218,129,16)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3045" width="0.9342%" height="15" fill="rgb(216,85,19)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3029" width="0.9342%" height="15" fill="rgb(235,228,7)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3039.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="3013" width="0.9342%" height="15" fill="rgb(245,175,0)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3023.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2997" width="0.9342%" height="15" fill="rgb(208,168,36)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="3007.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2981" width="0.9342%" height="15" fill="rgb(246,171,24)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2965" width="0.9342%" height="15" fill="rgb(215,142,24)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2949" width="0.9342%" height="15" fill="rgb(250,187,7)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2933" width="0.9342%" height="15" fill="rgb(228,66,33)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2917" width="0.9342%" height="15" fill="rgb(234,215,21)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2901" width="0.9342%" height="15" fill="rgb(222,191,20)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2885" width="0.9342%" height="15" fill="rgb(245,79,54)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2869" width="0.9342%" height="15" fill="rgb(240,10,37)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2879.50"></text></g><g><title>core::mem::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2853" width="0.9342%" height="15" fill="rgb(214,192,32)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2837" width="0.9342%" height="15" fill="rgb(209,36,54)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2847.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2821" width="0.9342%" height="15" fill="rgb(220,10,11)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2831.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2805" width="0.9342%" height="15" fill="rgb(221,106,17)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2789" width="0.9342%" height="15" fill="rgb(251,142,44)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2799.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2773" width="0.9342%" height="15" fill="rgb(238,13,15)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2783.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2757" width="0.9342%" height="15" fill="rgb(208,107,27)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2741" width="0.9342%" height="15" fill="rgb(205,136,37)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2725" width="0.9342%" height="15" fill="rgb(250,205,27)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2709" width="0.9342%" height="15" fill="rgb(210,80,43)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2693" width="0.9342%" height="15" fill="rgb(247,160,36)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2677" width="0.9342%" height="15" fill="rgb(234,13,49)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2661" width="0.9342%" height="15" fill="rgb(234,122,0)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2645" width="0.9342%" height="15" fill="rgb(207,146,38)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2629" width="0.9342%" height="15" fill="rgb(207,177,25)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2639.50"></text></g><g><title>core::mem::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2613" width="0.9342%" height="15" fill="rgb(211,178,42)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2597" width="0.9342%" height="15" fill="rgb(230,69,54)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2581" width="0.9342%" height="15" fill="rgb(214,135,41)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2565" width="0.9342%" height="15" fill="rgb(237,67,25)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2549" width="0.9342%" height="15" fill="rgb(222,189,50)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2559.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2533" width="0.9342%" height="15" fill="rgb(245,148,34)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2517" width="0.9342%" height="15" fill="rgb(222,29,6)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,604,649 samples, 0.93%)</title><rect x="21.5248%" y="2501" width="0.9342%" height="15" fill="rgb(221,189,43)" fg:x="83056691" fg:w="3604649"/><text x="21.7748%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2485" width="0.6103%" height="15" fill="rgb(207,36,27)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2469" width="0.6103%" height="15" fill="rgb(217,90,24)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2453" width="0.6103%" height="15" fill="rgb(224,66,35)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2437" width="0.6103%" height="15" fill="rgb(221,13,50)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2421" width="0.6103%" height="15" fill="rgb(236,68,49)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2405" width="0.6103%" height="15" fill="rgb(229,146,28)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2389" width="0.6103%" height="15" fill="rgb(225,31,38)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2399.50"></text></g><g><title>core::mem::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2373" width="0.6103%" height="15" fill="rgb(250,208,3)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2357" width="0.6103%" height="15" fill="rgb(246,54,23)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2341" width="0.6103%" height="15" fill="rgb(243,76,11)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2325" width="0.6103%" height="15" fill="rgb(245,21,50)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2309" width="0.6103%" height="15" fill="rgb(228,9,43)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2319.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2293" width="0.6103%" height="15" fill="rgb(208,100,47)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2303.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2277" width="0.6103%" height="15" fill="rgb(232,26,8)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2261" width="0.6103%" height="15" fill="rgb(216,166,38)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2245" width="0.6103%" height="15" fill="rgb(251,202,51)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2229" width="0.6103%" height="15" fill="rgb(254,216,34)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2213" width="0.6103%" height="15" fill="rgb(251,32,27)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2197" width="0.6103%" height="15" fill="rgb(208,127,28)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2181" width="0.6103%" height="15" fill="rgb(224,137,22)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2165" width="0.6103%" height="15" fill="rgb(254,70,32)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2149" width="0.6103%" height="15" fill="rgb(229,75,37)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2159.50"></text></g><g><title>core::mem::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2133" width="0.6103%" height="15" fill="rgb(252,64,23)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2117" width="0.6103%" height="15" fill="rgb(232,162,48)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2127.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2101" width="0.6103%" height="15" fill="rgb(246,160,12)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2111.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2085" width="0.6103%" height="15" fill="rgb(247,166,0)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2069" width="0.6103%" height="15" fill="rgb(249,219,21)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2079.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2053" width="0.6103%" height="15" fill="rgb(205,209,3)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2063.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2037" width="0.6103%" height="15" fill="rgb(243,44,1)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2021" width="0.6103%" height="15" fill="rgb(206,159,16)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="2005" width="0.6103%" height="15" fill="rgb(244,77,30)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1989" width="0.6103%" height="15" fill="rgb(218,69,12)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1973" width="0.6103%" height="15" fill="rgb(212,87,7)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1957" width="0.6103%" height="15" fill="rgb(245,114,25)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1941" width="0.6103%" height="15" fill="rgb(210,61,42)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1925" width="0.6103%" height="15" fill="rgb(211,52,33)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1909" width="0.6103%" height="15" fill="rgb(234,58,33)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1919.50"></text></g><g><title>core::mem::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1893" width="0.6103%" height="15" fill="rgb(220,115,36)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1877" width="0.6103%" height="15" fill="rgb(243,153,54)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1861" width="0.6103%" height="15" fill="rgb(251,47,18)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1845" width="0.6103%" height="15" fill="rgb(242,102,42)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1829" width="0.6103%" height="15" fill="rgb(234,31,38)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1813" width="0.6103%" height="15" fill="rgb(221,117,51)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1823.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1797" width="0.6103%" height="15" fill="rgb(212,20,18)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1781" width="0.6103%" height="15" fill="rgb(245,133,36)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1765" width="0.6103%" height="15" fill="rgb(212,6,19)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1749" width="0.6103%" height="15" fill="rgb(218,1,36)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1733" width="0.6103%" height="15" fill="rgb(246,84,54)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1717" width="0.6103%" height="15" fill="rgb(242,110,6)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1701" width="0.6103%" height="15" fill="rgb(214,47,5)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1685" width="0.6103%" height="15" fill="rgb(218,159,25)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1669" width="0.6103%" height="15" fill="rgb(215,211,28)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1679.50"></text></g><g><title>core::mem::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1653" width="0.6103%" height="15" fill="rgb(238,59,32)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1637" width="0.6103%" height="15" fill="rgb(226,82,3)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1647.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1621" width="0.6103%" height="15" fill="rgb(240,164,32)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1605" width="0.6103%" height="15" fill="rgb(232,46,7)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1589" width="0.6103%" height="15" fill="rgb(229,129,53)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1599.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1573" width="0.6103%" height="15" fill="rgb(234,188,29)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1583.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1557" width="0.6103%" height="15" fill="rgb(246,141,4)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1541" width="0.6103%" height="15" fill="rgb(229,23,39)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1525" width="0.6103%" height="15" fill="rgb(206,12,3)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1509" width="0.6103%" height="15" fill="rgb(252,226,20)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1493" width="0.6103%" height="15" fill="rgb(216,123,35)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1477" width="0.6103%" height="15" fill="rgb(212,68,40)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1461" width="0.6103%" height="15" fill="rgb(254,125,32)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1445" width="0.6103%" height="15" fill="rgb(253,97,22)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1429" width="0.6103%" height="15" fill="rgb(241,101,14)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1439.50"></text></g><g><title>core::mem::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1413" width="0.6103%" height="15" fill="rgb(238,103,29)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1397" width="0.6103%" height="15" fill="rgb(233,195,47)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1407.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,354,833 samples, 0.61%)</title><rect x="21.8487%" y="1381" width="0.6103%" height="15" fill="rgb(246,218,30)" fg:x="84306507" fg:w="2354833"/><text x="22.0987%" y="1391.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1365" width="0.3012%" height="15" fill="rgb(219,145,47)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1349" width="0.3012%" height="15" fill="rgb(243,12,26)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1359.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1333" width="0.3012%" height="15" fill="rgb(214,87,16)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1343.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1317" width="0.3012%" height="15" fill="rgb(208,99,42)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1301" width="0.3012%" height="15" fill="rgb(253,99,2)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1285" width="0.3012%" height="15" fill="rgb(220,168,23)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1269" width="0.3012%" height="15" fill="rgb(242,38,24)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1253" width="0.3012%" height="15" fill="rgb(225,182,9)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1237" width="0.3012%" height="15" fill="rgb(243,178,37)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1221" width="0.3012%" height="15" fill="rgb(232,139,19)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1205" width="0.3012%" height="15" fill="rgb(225,201,24)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1189" width="0.3012%" height="15" fill="rgb(221,47,46)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1199.50"></text></g><g><title>core::mem::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1173" width="0.3012%" height="15" fill="rgb(249,23,13)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1157" width="0.3012%" height="15" fill="rgb(219,9,5)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1141" width="0.3012%" height="15" fill="rgb(254,171,16)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1125" width="0.3012%" height="15" fill="rgb(230,171,20)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1109" width="0.3012%" height="15" fill="rgb(210,71,41)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1093" width="0.3012%" height="15" fill="rgb(206,173,20)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1103.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1077" width="0.3012%" height="15" fill="rgb(233,88,34)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1061" width="0.3012%" height="15" fill="rgb(223,209,46)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1045" width="0.3012%" height="15" fill="rgb(250,43,18)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1029" width="0.3012%" height="15" fill="rgb(208,13,10)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="1013" width="0.3012%" height="15" fill="rgb(212,200,36)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="997" width="0.3012%" height="15" fill="rgb(225,90,30)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="981" width="0.3012%" height="15" fill="rgb(236,182,39)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="965" width="0.3012%" height="15" fill="rgb(212,144,35)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="949" width="0.3012%" height="15" fill="rgb(228,63,44)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="959.50"></text></g><g><title>core::mem::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="933" width="0.3012%" height="15" fill="rgb(228,109,6)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="917" width="0.3012%" height="15" fill="rgb(238,117,24)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="901" width="0.3012%" height="15" fill="rgb(242,26,26)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="885" width="0.3012%" height="15" fill="rgb(221,92,48)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="869" width="0.3012%" height="15" fill="rgb(209,209,32)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="853" width="0.3012%" height="15" fill="rgb(221,70,22)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="837" width="0.3012%" height="15" fill="rgb(248,145,5)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="821" width="0.3012%" height="15" fill="rgb(226,116,26)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="805" width="0.3012%" height="15" fill="rgb(244,5,17)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="789" width="0.3012%" height="15" fill="rgb(252,159,33)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="773" width="0.3012%" height="15" fill="rgb(206,71,0)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="757" width="0.3012%" height="15" fill="rgb(233,118,54)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="741" width="0.3012%" height="15" fill="rgb(234,83,48)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="725" width="0.3012%" height="15" fill="rgb(228,3,54)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="709" width="0.3012%" height="15" fill="rgb(226,155,13)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="719.50"></text></g><g><title>core::mem::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="693" width="0.3012%" height="15" fill="rgb(241,28,37)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="677" width="0.3012%" height="15" fill="rgb(233,93,10)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="661" width="0.3012%" height="15" fill="rgb(225,113,19)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="645" width="0.3012%" height="15" fill="rgb(241,2,18)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="629" width="0.3012%" height="15" fill="rgb(228,207,21)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="613" width="0.3012%" height="15" fill="rgb(213,211,35)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="597" width="0.3012%" height="15" fill="rgb(209,83,10)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="581" width="0.3012%" height="15" fill="rgb(209,164,1)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="565" width="0.3012%" height="15" fill="rgb(213,184,43)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="549" width="0.3012%" height="15" fill="rgb(231,61,34)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="533" width="0.3012%" height="15" fill="rgb(235,75,3)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="517" width="0.3012%" height="15" fill="rgb(220,106,47)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="501" width="0.3012%" height="15" fill="rgb(210,196,33)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="485" width="0.3012%" height="15" fill="rgb(229,154,42)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="469" width="0.3012%" height="15" fill="rgb(228,114,26)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="479.50"></text></g><g><title>core::mem::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="453" width="0.3012%" height="15" fill="rgb(208,144,1)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="437" width="0.3012%" height="15" fill="rgb(239,112,37)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="421" width="0.3012%" height="15" fill="rgb(210,96,50)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="405" width="0.3012%" height="15" fill="rgb(222,178,2)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="389" width="0.3012%" height="15" fill="rgb(226,74,18)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="373" width="0.3012%" height="15" fill="rgb(225,67,54)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="383.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="357" width="0.3012%" height="15" fill="rgb(251,92,32)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="341" width="0.3012%" height="15" fill="rgb(228,149,22)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="325" width="0.3012%" height="15" fill="rgb(243,54,13)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="309" width="0.3012%" height="15" fill="rgb(243,180,28)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="293" width="0.3012%" height="15" fill="rgb(208,167,24)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="277" width="0.3012%" height="15" fill="rgb(245,73,45)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="261" width="0.3012%" height="15" fill="rgb(237,203,48)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="245" width="0.3012%" height="15" fill="rgb(211,197,16)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="229" width="0.3012%" height="15" fill="rgb(243,99,51)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="239.50"></text></g><g><title>core::mem::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="213" width="0.3012%" height="15" fill="rgb(215,123,29)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="197" width="0.3012%" height="15" fill="rgb(239,186,37)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="181" width="0.3012%" height="15" fill="rgb(252,136,39)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="165" width="0.3012%" height="15" fill="rgb(223,213,32)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="175.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="149" width="0.3012%" height="15" fill="rgb(233,115,5)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="159.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="133" width="0.3012%" height="15" fill="rgb(207,226,44)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="143.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="117" width="0.3012%" height="15" fill="rgb(208,126,0)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="101" width="0.3012%" height="15" fill="rgb(244,66,21)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="111.50"></text></g><g><title>alloc::alloc::dealloc (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="85" width="0.3012%" height="15" fill="rgb(222,97,12)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="95.50"></text></g><g><title>cfree (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="69" width="0.3012%" height="15" fill="rgb(219,213,19)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="79.50"></text></g><g><title>[libc.so.6] (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="53" width="0.3012%" height="15" fill="rgb(252,169,30)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="63.50"></text></g><g><title>[libc.so.6] (1,162,325 samples, 0.30%)</title><rect x="22.1578%" y="37" width="0.3012%" height="15" fill="rgb(206,32,51)" fg:x="85499015" fg:w="1162325"/><text x="22.4078%" y="47.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,200,616 samples, 0.31%)</title><rect x="22.7775%" y="2309" width="0.3111%" height="15" fill="rgb(250,172,42)" fg:x="87890479" fg:w="1200616"/><text x="23.0275%" y="2319.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,200,616 samples, 0.31%)</title><rect x="22.7775%" y="2293" width="0.3111%" height="15" fill="rgb(209,34,43)" fg:x="87890479" fg:w="1200616"/><text x="23.0275%" y="2303.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,200,616 samples, 0.31%)</title><rect x="22.7775%" y="2277" width="0.3111%" height="15" fill="rgb(223,11,35)" fg:x="87890479" fg:w="1200616"/><text x="23.0275%" y="2287.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,200,616 samples, 0.31%)</title><rect x="22.7775%" y="2261" width="0.3111%" height="15" fill="rgb(251,219,26)" fg:x="87890479" fg:w="1200616"/><text x="23.0275%" y="2271.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,200,616 samples, 0.31%)</title><rect x="22.7775%" y="2245" width="0.3111%" height="15" fill="rgb(231,119,3)" fg:x="87890479" fg:w="1200616"/><text x="23.0275%" y="2255.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,200,616 samples, 0.31%)</title><rect x="22.7775%" y="2229" width="0.3111%" height="15" fill="rgb(216,97,11)" fg:x="87890479" fg:w="1200616"/><text x="23.0275%" y="2239.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (1,200,616 samples, 0.31%)</title><rect x="22.7775%" y="2213" width="0.3111%" height="15" fill="rgb(223,59,9)" fg:x="87890479" fg:w="1200616"/><text x="23.0275%" y="2223.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (1,200,616 samples, 0.31%)</title><rect x="22.7775%" y="2197" width="0.3111%" height="15" fill="rgb(233,93,31)" fg:x="87890479" fg:w="1200616"/><text x="23.0275%" y="2207.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (1,200,616 samples, 0.31%)</title><rect x="22.7775%" y="2181" width="0.3111%" height="15" fill="rgb(239,81,33)" fg:x="87890479" fg:w="1200616"/><text x="23.0275%" y="2191.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,482,513 samples, 0.64%)</title><rect x="23.0887%" y="2053" width="0.6434%" height="15" fill="rgb(213,120,34)" fg:x="89091095" fg:w="2482513"/><text x="23.3387%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,482,513 samples, 0.64%)</title><rect x="23.0887%" y="2037" width="0.6434%" height="15" fill="rgb(243,49,53)" fg:x="89091095" fg:w="2482513"/><text x="23.3387%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,482,513 samples, 0.64%)</title><rect x="23.0887%" y="2021" width="0.6434%" height="15" fill="rgb(247,216,33)" fg:x="89091095" fg:w="2482513"/><text x="23.3387%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,482,513 samples, 0.64%)</title><rect x="23.0887%" y="2005" width="0.6434%" height="15" fill="rgb(226,26,14)" fg:x="89091095" fg:w="2482513"/><text x="23.3387%" y="2015.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,482,513 samples, 0.64%)</title><rect x="23.0887%" y="1989" width="0.6434%" height="15" fill="rgb(215,49,53)" fg:x="89091095" fg:w="2482513"/><text x="23.3387%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,244,686 samples, 0.32%)</title><rect x="23.4095%" y="1973" width="0.3226%" height="15" fill="rgb(245,162,40)" fg:x="90328922" fg:w="1244686"/><text x="23.6595%" y="1983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,244,686 samples, 0.32%)</title><rect x="23.4095%" y="1957" width="0.3226%" height="15" fill="rgb(229,68,17)" fg:x="90328922" fg:w="1244686"/><text x="23.6595%" y="1967.50"></text></g><g><title>alloc::alloc::dealloc (1,244,686 samples, 0.32%)</title><rect x="23.4095%" y="1941" width="0.3226%" height="15" fill="rgb(213,182,10)" fg:x="90328922" fg:w="1244686"/><text x="23.6595%" y="1951.50"></text></g><g><title>cfree (1,244,686 samples, 0.32%)</title><rect x="23.4095%" y="1925" width="0.3226%" height="15" fill="rgb(245,125,30)" fg:x="90328922" fg:w="1244686"/><text x="23.6595%" y="1935.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,208,117 samples, 0.31%)</title><rect x="23.7320%" y="1813" width="0.3131%" height="15" fill="rgb(232,202,2)" fg:x="91573608" fg:w="1208117"/><text x="23.9820%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,208,117 samples, 0.31%)</title><rect x="23.7320%" y="1797" width="0.3131%" height="15" fill="rgb(237,140,51)" fg:x="91573608" fg:w="1208117"/><text x="23.9820%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,208,117 samples, 0.31%)</title><rect x="23.7320%" y="1781" width="0.3131%" height="15" fill="rgb(236,157,25)" fg:x="91573608" fg:w="1208117"/><text x="23.9820%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,208,117 samples, 0.31%)</title><rect x="23.7320%" y="1765" width="0.3131%" height="15" fill="rgb(219,209,0)" fg:x="91573608" fg:w="1208117"/><text x="23.9820%" y="1775.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,208,117 samples, 0.31%)</title><rect x="23.7320%" y="1749" width="0.3131%" height="15" fill="rgb(240,116,54)" fg:x="91573608" fg:w="1208117"/><text x="23.9820%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,208,117 samples, 0.31%)</title><rect x="23.7320%" y="1733" width="0.3131%" height="15" fill="rgb(216,10,36)" fg:x="91573608" fg:w="1208117"/><text x="23.9820%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,208,117 samples, 0.31%)</title><rect x="23.7320%" y="1717" width="0.3131%" height="15" fill="rgb(222,72,44)" fg:x="91573608" fg:w="1208117"/><text x="23.9820%" y="1727.50"></text></g><g><title>alloc::alloc::dealloc (1,208,117 samples, 0.31%)</title><rect x="23.7320%" y="1701" width="0.3131%" height="15" fill="rgb(232,159,9)" fg:x="91573608" fg:w="1208117"/><text x="23.9820%" y="1711.50"></text></g><g><title>cfree (1,208,117 samples, 0.31%)</title><rect x="23.7320%" y="1685" width="0.3131%" height="15" fill="rgb(210,39,32)" fg:x="91573608" fg:w="1208117"/><text x="23.9820%" y="1695.50"></text></g><g><title>[libc.so.6] (1,208,117 samples, 0.31%)</title><rect x="23.7320%" y="1669" width="0.3131%" height="15" fill="rgb(216,194,45)" fg:x="91573608" fg:w="1208117"/><text x="23.9820%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;main::benchmark::LayoutFrame&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4821" width="1.9014%" height="15" fill="rgb(218,18,35)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4831.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4805" width="1.9014%" height="15" fill="rgb(207,83,51)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4815.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::LayoutFrame]&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4789" width="1.9014%" height="15" fill="rgb(225,63,43)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4799.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::LayoutFrame&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4773" width="1.9014%" height="15" fill="rgb(207,57,36)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4783.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4757" width="1.9014%" height="15" fill="rgb(216,99,33)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4767.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4741" width="1.9014%" height="15" fill="rgb(225,42,16)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4751.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4725" width="1.9014%" height="15" fill="rgb(220,201,45)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4735.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4709" width="1.9014%" height="15" fill="rgb(225,33,4)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4719.50">&lt;..</text></g><g><title>core::mem::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4693" width="1.9014%" height="15" fill="rgb(224,33,50)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4703.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4677" width="1.9014%" height="15" fill="rgb(246,198,51)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4687.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4661" width="1.9014%" height="15" fill="rgb(205,22,4)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4671.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4645" width="1.9014%" height="15" fill="rgb(206,3,8)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4655.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4629" width="1.9014%" height="15" fill="rgb(251,23,15)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4639.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4613" width="1.9014%" height="15" fill="rgb(252,88,28)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4623.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4597" width="1.9014%" height="15" fill="rgb(212,127,14)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4607.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4581" width="1.9014%" height="15" fill="rgb(247,145,37)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4591.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4565" width="1.9014%" height="15" fill="rgb(209,117,53)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4575.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4549" width="1.9014%" height="15" fill="rgb(212,90,42)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4559.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4533" width="1.9014%" height="15" fill="rgb(218,164,37)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4543.50">&lt;..</text></g><g><title>core::mem::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4517" width="1.9014%" height="15" fill="rgb(246,65,34)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4527.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4501" width="1.9014%" height="15" fill="rgb(231,100,33)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4511.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4485" width="1.9014%" height="15" fill="rgb(228,126,14)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4495.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4469" width="1.9014%" height="15" fill="rgb(215,173,21)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4479.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4453" width="1.9014%" height="15" fill="rgb(210,6,40)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4463.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4437" width="1.9014%" height="15" fill="rgb(212,48,18)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4447.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4421" width="1.9014%" height="15" fill="rgb(230,214,11)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4405" width="1.9014%" height="15" fill="rgb(254,105,39)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4415.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4389" width="1.9014%" height="15" fill="rgb(245,158,5)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4399.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4373" width="1.9014%" height="15" fill="rgb(249,208,11)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4383.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4357" width="1.9014%" height="15" fill="rgb(210,39,28)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4367.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4341" width="1.9014%" height="15" fill="rgb(211,56,53)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4351.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4325" width="1.9014%" height="15" fill="rgb(226,201,30)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4335.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4309" width="1.9014%" height="15" fill="rgb(239,101,34)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4319.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4293" width="1.9014%" height="15" fill="rgb(226,209,5)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4303.50">&lt;..</text></g><g><title>core::mem::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4277" width="1.9014%" height="15" fill="rgb(250,105,47)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4287.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4261" width="1.9014%" height="15" fill="rgb(230,72,3)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4271.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4245" width="1.9014%" height="15" fill="rgb(232,218,39)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4255.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4229" width="1.9014%" height="15" fill="rgb(248,166,6)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4239.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4213" width="1.9014%" height="15" fill="rgb(247,89,20)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4223.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4197" width="1.9014%" height="15" fill="rgb(248,130,54)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4207.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4181" width="1.9014%" height="15" fill="rgb(234,196,4)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4191.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4165" width="1.9014%" height="15" fill="rgb(250,143,31)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4175.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4149" width="1.9014%" height="15" fill="rgb(211,110,34)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4159.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4133" width="1.9014%" height="15" fill="rgb(215,124,48)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4143.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4117" width="1.9014%" height="15" fill="rgb(216,46,13)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4127.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4101" width="1.9014%" height="15" fill="rgb(205,184,25)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4111.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4085" width="1.9014%" height="15" fill="rgb(228,1,10)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4095.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4069" width="1.9014%" height="15" fill="rgb(213,116,27)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4079.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4053" width="1.9014%" height="15" fill="rgb(241,95,50)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4063.50">&lt;..</text></g><g><title>core::mem::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4037" width="1.9014%" height="15" fill="rgb(238,48,32)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4047.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4021" width="1.9014%" height="15" fill="rgb(235,113,49)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4031.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="4005" width="1.9014%" height="15" fill="rgb(205,127,43)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="4015.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3989" width="1.9014%" height="15" fill="rgb(250,162,2)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3999.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3973" width="1.9014%" height="15" fill="rgb(220,13,41)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3983.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3957" width="1.9014%" height="15" fill="rgb(249,221,25)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3967.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3941" width="1.9014%" height="15" fill="rgb(215,208,19)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3951.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3925" width="1.9014%" height="15" fill="rgb(236,175,2)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3935.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3909" width="1.9014%" height="15" fill="rgb(241,52,2)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3919.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3893" width="1.9014%" height="15" fill="rgb(248,140,14)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3903.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3877" width="1.9014%" height="15" fill="rgb(253,22,42)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3887.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3861" width="1.9014%" height="15" fill="rgb(234,61,47)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3871.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3845" width="1.9014%" height="15" fill="rgb(208,226,15)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3855.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3829" width="1.9014%" height="15" fill="rgb(217,221,4)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3839.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3813" width="1.9014%" height="15" fill="rgb(212,174,34)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3823.50">&lt;..</text></g><g><title>core::mem::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3797" width="1.9014%" height="15" fill="rgb(253,83,4)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3807.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3781" width="1.9014%" height="15" fill="rgb(250,195,49)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3791.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3765" width="1.9014%" height="15" fill="rgb(241,192,25)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3775.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3749" width="1.9014%" height="15" fill="rgb(208,124,10)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3759.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3733" width="1.9014%" height="15" fill="rgb(222,33,0)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3743.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3717" width="1.9014%" height="15" fill="rgb(234,209,28)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3727.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3701" width="1.9014%" height="15" fill="rgb(224,11,23)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3711.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3685" width="1.9014%" height="15" fill="rgb(232,99,1)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3695.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3669" width="1.9014%" height="15" fill="rgb(237,95,45)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3679.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3653" width="1.9014%" height="15" fill="rgb(208,109,11)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3663.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3637" width="1.9014%" height="15" fill="rgb(216,190,48)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3647.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3621" width="1.9014%" height="15" fill="rgb(251,171,36)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3631.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3605" width="1.9014%" height="15" fill="rgb(230,62,22)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3615.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3589" width="1.9014%" height="15" fill="rgb(225,114,35)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3599.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3573" width="1.9014%" height="15" fill="rgb(215,118,42)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3583.50">&lt;..</text></g><g><title>core::mem::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3557" width="1.9014%" height="15" fill="rgb(243,119,21)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3567.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3541" width="1.9014%" height="15" fill="rgb(252,177,53)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3551.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3525" width="1.9014%" height="15" fill="rgb(237,209,29)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3535.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3509" width="1.9014%" height="15" fill="rgb(212,65,23)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3519.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3493" width="1.9014%" height="15" fill="rgb(230,222,46)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3503.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3477" width="1.9014%" height="15" fill="rgb(215,135,32)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3487.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3461" width="1.9014%" height="15" fill="rgb(246,101,22)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3471.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3445" width="1.9014%" height="15" fill="rgb(206,107,13)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3455.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3429" width="1.9014%" height="15" fill="rgb(250,100,44)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3439.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3413" width="1.9014%" height="15" fill="rgb(231,147,38)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3423.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3397" width="1.9014%" height="15" fill="rgb(229,8,40)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3407.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3381" width="1.9014%" height="15" fill="rgb(221,135,30)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3391.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3365" width="1.9014%" height="15" fill="rgb(249,193,18)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3375.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3349" width="1.9014%" height="15" fill="rgb(209,133,39)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3359.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3333" width="1.9014%" height="15" fill="rgb(232,100,14)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3343.50">&lt;..</text></g><g><title>core::mem::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3317" width="1.9014%" height="15" fill="rgb(224,185,1)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3327.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3301" width="1.9014%" height="15" fill="rgb(223,139,8)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3311.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3285" width="1.9014%" height="15" fill="rgb(232,213,38)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3295.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3269" width="1.9014%" height="15" fill="rgb(207,94,22)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3279.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3253" width="1.9014%" height="15" fill="rgb(219,183,54)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3263.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3237" width="1.9014%" height="15" fill="rgb(216,185,54)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3247.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3221" width="1.9014%" height="15" fill="rgb(254,217,39)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3231.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3205" width="1.9014%" height="15" fill="rgb(240,178,23)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3215.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3189" width="1.9014%" height="15" fill="rgb(218,11,47)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3199.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3173" width="1.9014%" height="15" fill="rgb(218,51,51)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3183.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3157" width="1.9014%" height="15" fill="rgb(238,126,27)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3167.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3141" width="1.9014%" height="15" fill="rgb(249,202,22)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3151.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3125" width="1.9014%" height="15" fill="rgb(254,195,49)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3135.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3109" width="1.9014%" height="15" fill="rgb(208,123,14)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3119.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3093" width="1.9014%" height="15" fill="rgb(224,200,8)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3103.50">&lt;..</text></g><g><title>core::mem::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3077" width="1.9014%" height="15" fill="rgb(217,61,36)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3087.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3061" width="1.9014%" height="15" fill="rgb(206,35,45)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3071.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3045" width="1.9014%" height="15" fill="rgb(217,65,33)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3055.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3029" width="1.9014%" height="15" fill="rgb(222,158,48)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3039.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="3013" width="1.9014%" height="15" fill="rgb(254,2,54)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3023.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2997" width="1.9014%" height="15" fill="rgb(250,143,38)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="3007.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2981" width="1.9014%" height="15" fill="rgb(248,25,0)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2991.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2965" width="1.9014%" height="15" fill="rgb(206,152,27)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2975.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2949" width="1.9014%" height="15" fill="rgb(240,77,30)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2959.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2933" width="1.9014%" height="15" fill="rgb(231,5,3)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2943.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2917" width="1.9014%" height="15" fill="rgb(207,226,32)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2927.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2901" width="1.9014%" height="15" fill="rgb(222,207,47)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2911.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2885" width="1.9014%" height="15" fill="rgb(229,115,45)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2895.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2869" width="1.9014%" height="15" fill="rgb(224,191,6)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2879.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2853" width="1.9014%" height="15" fill="rgb(230,227,24)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2863.50">&lt;..</text></g><g><title>core::mem::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2837" width="1.9014%" height="15" fill="rgb(228,80,19)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2847.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2821" width="1.9014%" height="15" fill="rgb(247,229,0)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2831.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2805" width="1.9014%" height="15" fill="rgb(237,194,15)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2815.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2789" width="1.9014%" height="15" fill="rgb(219,203,20)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2799.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2773" width="1.9014%" height="15" fill="rgb(234,128,8)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2783.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2757" width="1.9014%" height="15" fill="rgb(248,202,8)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2767.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2741" width="1.9014%" height="15" fill="rgb(206,104,37)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2751.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2725" width="1.9014%" height="15" fill="rgb(223,8,27)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2735.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2709" width="1.9014%" height="15" fill="rgb(216,217,28)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2719.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2693" width="1.9014%" height="15" fill="rgb(249,199,1)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2703.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2677" width="1.9014%" height="15" fill="rgb(240,85,17)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2687.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2661" width="1.9014%" height="15" fill="rgb(206,108,45)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2671.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2645" width="1.9014%" height="15" fill="rgb(245,210,41)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2655.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2629" width="1.9014%" height="15" fill="rgb(206,13,37)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2639.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2613" width="1.9014%" height="15" fill="rgb(250,61,18)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2623.50">&lt;..</text></g><g><title>core::mem::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2597" width="1.9014%" height="15" fill="rgb(235,172,48)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2607.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2581" width="1.9014%" height="15" fill="rgb(249,201,17)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2591.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2565" width="1.9014%" height="15" fill="rgb(219,208,6)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2575.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2549" width="1.9014%" height="15" fill="rgb(248,31,23)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2559.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2533" width="1.9014%" height="15" fill="rgb(245,15,42)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2543.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2517" width="1.9014%" height="15" fill="rgb(222,217,39)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2527.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2501" width="1.9014%" height="15" fill="rgb(210,219,27)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2485" width="1.9014%" height="15" fill="rgb(252,166,36)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2495.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2469" width="1.9014%" height="15" fill="rgb(245,132,34)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2479.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2453" width="1.9014%" height="15" fill="rgb(236,54,3)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2463.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2437" width="1.9014%" height="15" fill="rgb(241,173,43)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,336,881 samples, 1.90%)</title><rect x="22.4590%" y="2421" width="1.9014%" height="15" fill="rgb(215,190,9)" fg:x="86661340" fg:w="7336881"/><text x="22.7090%" y="2431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,107,742 samples, 1.58%)</title><rect x="22.7775%" y="2405" width="1.5829%" height="15" fill="rgb(242,101,16)" fg:x="87890479" fg:w="6107742"/><text x="23.0275%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,107,742 samples, 1.58%)</title><rect x="22.7775%" y="2389" width="1.5829%" height="15" fill="rgb(223,190,21)" fg:x="87890479" fg:w="6107742"/><text x="23.0275%" y="2399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,107,742 samples, 1.58%)</title><rect x="22.7775%" y="2373" width="1.5829%" height="15" fill="rgb(215,228,25)" fg:x="87890479" fg:w="6107742"/><text x="23.0275%" y="2383.50"></text></g><g><title>core::mem::drop (6,107,742 samples, 1.58%)</title><rect x="22.7775%" y="2357" width="1.5829%" height="15" fill="rgb(225,36,22)" fg:x="87890479" fg:w="6107742"/><text x="23.0275%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,107,742 samples, 1.58%)</title><rect x="22.7775%" y="2341" width="1.5829%" height="15" fill="rgb(251,106,46)" fg:x="87890479" fg:w="6107742"/><text x="23.0275%" y="2351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,107,742 samples, 1.58%)</title><rect x="22.7775%" y="2325" width="1.5829%" height="15" fill="rgb(208,90,1)" fg:x="87890479" fg:w="6107742"/><text x="23.0275%" y="2335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2309" width="1.2717%" height="15" fill="rgb(243,10,4)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2293" width="1.2717%" height="15" fill="rgb(212,137,27)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2303.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2277" width="1.2717%" height="15" fill="rgb(231,220,49)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2287.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2261" width="1.2717%" height="15" fill="rgb(237,96,20)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2245" width="1.2717%" height="15" fill="rgb(239,229,30)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2229" width="1.2717%" height="15" fill="rgb(219,65,33)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2213" width="1.2717%" height="15" fill="rgb(243,134,7)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2197" width="1.2717%" height="15" fill="rgb(216,177,54)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2181" width="1.2717%" height="15" fill="rgb(211,160,20)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2165" width="1.2717%" height="15" fill="rgb(239,85,39)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2149" width="1.2717%" height="15" fill="rgb(232,125,22)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2133" width="1.2717%" height="15" fill="rgb(244,57,34)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2143.50"></text></g><g><title>core::mem::drop (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2117" width="1.2717%" height="15" fill="rgb(214,203,32)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2101" width="1.2717%" height="15" fill="rgb(207,58,43)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2111.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2085" width="1.2717%" height="15" fill="rgb(215,193,15)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2095.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,907,126 samples, 1.27%)</title><rect x="23.0887%" y="2069" width="1.2717%" height="15" fill="rgb(232,15,44)" fg:x="89091095" fg:w="4907126"/><text x="23.3387%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,424,613 samples, 0.63%)</title><rect x="23.7320%" y="2053" width="0.6284%" height="15" fill="rgb(212,3,48)" fg:x="91573608" fg:w="2424613"/><text x="23.9820%" y="2063.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,424,613 samples, 0.63%)</title><rect x="23.7320%" y="2037" width="0.6284%" height="15" fill="rgb(218,128,7)" fg:x="91573608" fg:w="2424613"/><text x="23.9820%" y="2047.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,424,613 samples, 0.63%)</title><rect x="23.7320%" y="2021" width="0.6284%" height="15" fill="rgb(226,216,39)" fg:x="91573608" fg:w="2424613"/><text x="23.9820%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,424,613 samples, 0.63%)</title><rect x="23.7320%" y="2005" width="0.6284%" height="15" fill="rgb(243,47,51)" fg:x="91573608" fg:w="2424613"/><text x="23.9820%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,424,613 samples, 0.63%)</title><rect x="23.7320%" y="1989" width="0.6284%" height="15" fill="rgb(241,183,40)" fg:x="91573608" fg:w="2424613"/><text x="23.9820%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,424,613 samples, 0.63%)</title><rect x="23.7320%" y="1973" width="0.6284%" height="15" fill="rgb(231,217,32)" fg:x="91573608" fg:w="2424613"/><text x="23.9820%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,424,613 samples, 0.63%)</title><rect x="23.7320%" y="1957" width="0.6284%" height="15" fill="rgb(229,61,38)" fg:x="91573608" fg:w="2424613"/><text x="23.9820%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,424,613 samples, 0.63%)</title><rect x="23.7320%" y="1941" width="0.6284%" height="15" fill="rgb(225,210,5)" fg:x="91573608" fg:w="2424613"/><text x="23.9820%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,424,613 samples, 0.63%)</title><rect x="23.7320%" y="1925" width="0.6284%" height="15" fill="rgb(231,79,45)" fg:x="91573608" fg:w="2424613"/><text x="23.9820%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,424,613 samples, 0.63%)</title><rect x="23.7320%" y="1909" width="0.6284%" height="15" fill="rgb(224,100,7)" fg:x="91573608" fg:w="2424613"/><text x="23.9820%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,424,613 samples, 0.63%)</title><rect x="23.7320%" y="1893" width="0.6284%" height="15" fill="rgb(241,198,18)" fg:x="91573608" fg:w="2424613"/><text x="23.9820%" y="1903.50"></text></g><g><title>core::mem::drop (2,424,613 samples, 0.63%)</title><rect x="23.7320%" y="1877" width="0.6284%" height="15" fill="rgb(252,97,53)" fg:x="91573608" fg:w="2424613"/><text x="23.9820%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,424,613 samples, 0.63%)</title><rect x="23.7320%" y="1861" width="0.6284%" height="15" fill="rgb(220,88,7)" fg:x="91573608" fg:w="2424613"/><text x="23.9820%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,424,613 samples, 0.63%)</title><rect x="23.7320%" y="1845" width="0.6284%" height="15" fill="rgb(213,176,14)" fg:x="91573608" fg:w="2424613"/><text x="23.9820%" y="1855.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,424,613 samples, 0.63%)</title><rect x="23.7320%" y="1829" width="0.6284%" height="15" fill="rgb(246,73,7)" fg:x="91573608" fg:w="2424613"/><text x="23.9820%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1813" width="0.3153%" height="15" fill="rgb(245,64,36)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1797" width="0.3153%" height="15" fill="rgb(245,80,10)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1807.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1781" width="0.3153%" height="15" fill="rgb(232,107,50)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1765" width="0.3153%" height="15" fill="rgb(253,3,0)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1749" width="0.3153%" height="15" fill="rgb(212,99,53)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1733" width="0.3153%" height="15" fill="rgb(249,111,54)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1717" width="0.3153%" height="15" fill="rgb(249,55,30)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1701" width="0.3153%" height="15" fill="rgb(237,47,42)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1685" width="0.3153%" height="15" fill="rgb(211,20,18)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1669" width="0.3153%" height="15" fill="rgb(231,203,46)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1653" width="0.3153%" height="15" fill="rgb(237,142,3)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1663.50"></text></g><g><title>core::mem::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1637" width="0.3153%" height="15" fill="rgb(241,107,1)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1621" width="0.3153%" height="15" fill="rgb(229,83,13)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1605" width="0.3153%" height="15" fill="rgb(241,91,40)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1589" width="0.3153%" height="15" fill="rgb(225,3,45)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1573" width="0.3153%" height="15" fill="rgb(244,223,14)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1557" width="0.3153%" height="15" fill="rgb(224,124,37)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1567.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1541" width="0.3153%" height="15" fill="rgb(251,171,30)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1525" width="0.3153%" height="15" fill="rgb(236,46,54)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1509" width="0.3153%" height="15" fill="rgb(245,213,5)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1493" width="0.3153%" height="15" fill="rgb(230,144,27)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1477" width="0.3153%" height="15" fill="rgb(220,86,6)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1461" width="0.3153%" height="15" fill="rgb(240,20,13)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1445" width="0.3153%" height="15" fill="rgb(217,89,34)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1429" width="0.3153%" height="15" fill="rgb(229,13,5)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1439.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1413" width="0.3153%" height="15" fill="rgb(244,67,35)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1423.50"></text></g><g><title>core::mem::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1397" width="0.3153%" height="15" fill="rgb(221,40,2)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1381" width="0.3153%" height="15" fill="rgb(237,157,21)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1365" width="0.3153%" height="15" fill="rgb(222,94,11)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1375.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1349" width="0.3153%" height="15" fill="rgb(249,113,6)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1333" width="0.3153%" height="15" fill="rgb(238,137,36)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1317" width="0.3153%" height="15" fill="rgb(210,102,26)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1327.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1301" width="0.3153%" height="15" fill="rgb(218,30,30)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1285" width="0.3153%" height="15" fill="rgb(214,67,26)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1269" width="0.3153%" height="15" fill="rgb(251,9,53)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1253" width="0.3153%" height="15" fill="rgb(228,204,25)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1237" width="0.3153%" height="15" fill="rgb(207,153,8)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1221" width="0.3153%" height="15" fill="rgb(242,9,16)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1205" width="0.3153%" height="15" fill="rgb(217,211,10)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1189" width="0.3153%" height="15" fill="rgb(219,228,52)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1173" width="0.3153%" height="15" fill="rgb(231,92,29)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1183.50"></text></g><g><title>core::mem::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1157" width="0.3153%" height="15" fill="rgb(232,8,23)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1141" width="0.3153%" height="15" fill="rgb(216,211,34)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1125" width="0.3153%" height="15" fill="rgb(236,151,0)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1109" width="0.3153%" height="15" fill="rgb(209,168,3)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1093" width="0.3153%" height="15" fill="rgb(208,129,28)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1077" width="0.3153%" height="15" fill="rgb(229,78,22)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1087.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1061" width="0.3153%" height="15" fill="rgb(228,187,13)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1071.50"></text></g><g><title>cfree (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1045" width="0.3153%" height="15" fill="rgb(240,119,24)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1055.50"></text></g><g><title>[libc.so.6] (1,216,496 samples, 0.32%)</title><rect x="24.0451%" y="1029" width="0.3153%" height="15" fill="rgb(209,194,42)" fg:x="92781725" fg:w="1216496"/><text x="24.2951%" y="1039.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,478,831 samples, 0.64%)</title><rect x="24.3604%" y="4805" width="0.6424%" height="15" fill="rgb(247,200,46)" fg:x="93998221" fg:w="2478831"/><text x="24.6104%" y="4815.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,478,831 samples, 0.64%)</title><rect x="24.3604%" y="4789" width="0.6424%" height="15" fill="rgb(218,76,16)" fg:x="93998221" fg:w="2478831"/><text x="24.6104%" y="4799.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,241,203 samples, 0.32%)</title><rect x="24.6811%" y="4773" width="0.3217%" height="15" fill="rgb(225,21,48)" fg:x="95235849" fg:w="1241203"/><text x="24.9311%" y="4783.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,241,203 samples, 0.32%)</title><rect x="24.6811%" y="4757" width="0.3217%" height="15" fill="rgb(239,223,50)" fg:x="95235849" fg:w="1241203"/><text x="24.9311%" y="4767.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,241,203 samples, 0.32%)</title><rect x="24.6811%" y="4741" width="0.3217%" height="15" fill="rgb(244,45,21)" fg:x="95235849" fg:w="1241203"/><text x="24.9311%" y="4751.50"></text></g><g><title>main::benchmark::extract_path_from_command (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4805" width="0.3129%" height="15" fill="rgb(232,33,43)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4789" width="0.3129%" height="15" fill="rgb(209,8,3)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4799.50"></text></g><g><title>main::benchmark::extract_path_from_command::_{{closure}} (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4773" width="0.3129%" height="15" fill="rgb(214,25,53)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4757" width="0.3129%" height="15" fill="rgb(254,186,54)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4741" width="0.3129%" height="15" fill="rgb(208,174,49)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4725" width="0.3129%" height="15" fill="rgb(233,191,51)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4709" width="0.3129%" height="15" fill="rgb(222,134,10)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4693" width="0.3129%" height="15" fill="rgb(230,226,20)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4677" width="0.3129%" height="15" fill="rgb(251,111,25)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4661" width="0.3129%" height="15" fill="rgb(224,40,46)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4645" width="0.3129%" height="15" fill="rgb(236,108,47)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4629" width="0.3129%" height="15" fill="rgb(234,93,0)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4613" width="0.3129%" height="15" fill="rgb(224,213,32)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4597" width="0.3129%" height="15" fill="rgb(251,11,48)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4581" width="0.3129%" height="15" fill="rgb(236,173,5)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4565" width="0.3129%" height="15" fill="rgb(230,95,12)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4549" width="0.3129%" height="15" fill="rgb(232,209,1)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4559.50"></text></g><g><title>alloc::alloc::realloc (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4533" width="0.3129%" height="15" fill="rgb(232,6,1)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4543.50"></text></g><g><title>realloc (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4517" width="0.3129%" height="15" fill="rgb(210,224,50)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4527.50"></text></g><g><title>[libc.so.6] (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4501" width="0.3129%" height="15" fill="rgb(228,127,35)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4511.50"></text></g><g><title>[libc.so.6] (1,207,443 samples, 0.31%)</title><rect x="25.0028%" y="4485" width="0.3129%" height="15" fill="rgb(245,102,45)" fg:x="96477052" fg:w="1207443"/><text x="25.2528%" y="4495.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,259,349 samples, 0.33%)</title><rect x="25.3157%" y="4789" width="0.3264%" height="15" fill="rgb(214,1,49)" fg:x="97684495" fg:w="1259349"/><text x="25.5657%" y="4799.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (1,259,349 samples, 0.33%)</title><rect x="25.3157%" y="4773" width="0.3264%" height="15" fill="rgb(226,163,40)" fg:x="97684495" fg:w="1259349"/><text x="25.5657%" y="4783.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (1,259,349 samples, 0.33%)</title><rect x="25.3157%" y="4757" width="0.3264%" height="15" fill="rgb(239,212,28)" fg:x="97684495" fg:w="1259349"/><text x="25.5657%" y="4767.50"></text></g><g><title>main::benchmark::json_to_html_node (1,176,440 samples, 0.30%)</title><rect x="25.6421%" y="4757" width="0.3049%" height="15" fill="rgb(220,20,13)" fg:x="98943844" fg:w="1176440"/><text x="25.8921%" y="4767.50"></text></g><g><title>main::benchmark::json_to_html_node (1,176,440 samples, 0.30%)</title><rect x="25.6421%" y="4741" width="0.3049%" height="15" fill="rgb(210,164,35)" fg:x="98943844" fg:w="1176440"/><text x="25.8921%" y="4751.50"></text></g><g><title>main::benchmark::json_to_html_node (1,176,440 samples, 0.30%)</title><rect x="25.6421%" y="4725" width="0.3049%" height="15" fill="rgb(248,109,41)" fg:x="98943844" fg:w="1176440"/><text x="25.8921%" y="4735.50"></text></g><g><title>main::benchmark::json_to_html_node (1,176,440 samples, 0.30%)</title><rect x="25.6421%" y="4709" width="0.3049%" height="15" fill="rgb(238,23,50)" fg:x="98943844" fg:w="1176440"/><text x="25.8921%" y="4719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,176,440 samples, 0.30%)</title><rect x="25.6421%" y="4693" width="0.3049%" height="15" fill="rgb(211,48,49)" fg:x="98943844" fg:w="1176440"/><text x="25.8921%" y="4703.50"></text></g><g><title>main::benchmark::json_to_html_node (2,399,025 samples, 0.62%)</title><rect x="25.6421%" y="4789" width="0.6217%" height="15" fill="rgb(223,36,21)" fg:x="98943844" fg:w="2399025"/><text x="25.8921%" y="4799.50"></text></g><g><title>main::benchmark::json_to_html_node (2,399,025 samples, 0.62%)</title><rect x="25.6421%" y="4773" width="0.6217%" height="15" fill="rgb(207,123,46)" fg:x="98943844" fg:w="2399025"/><text x="25.8921%" y="4783.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,222,585 samples, 0.32%)</title><rect x="25.9470%" y="4757" width="0.3168%" height="15" fill="rgb(240,218,32)" fg:x="100120284" fg:w="1222585"/><text x="26.1970%" y="4767.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,222,585 samples, 0.32%)</title><rect x="25.9470%" y="4741" width="0.3168%" height="15" fill="rgb(252,5,43)" fg:x="100120284" fg:w="1222585"/><text x="26.1970%" y="4751.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,222,585 samples, 0.32%)</title><rect x="25.9470%" y="4725" width="0.3168%" height="15" fill="rgb(252,84,19)" fg:x="100120284" fg:w="1222585"/><text x="26.1970%" y="4735.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,222,585 samples, 0.32%)</title><rect x="25.9470%" y="4709" width="0.3168%" height="15" fill="rgb(243,152,39)" fg:x="100120284" fg:w="1222585"/><text x="26.1970%" y="4719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,222,585 samples, 0.32%)</title><rect x="25.9470%" y="4693" width="0.3168%" height="15" fill="rgb(234,160,15)" fg:x="100120284" fg:w="1222585"/><text x="26.1970%" y="4703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,222,585 samples, 0.32%)</title><rect x="25.9470%" y="4677" width="0.3168%" height="15" fill="rgb(237,34,20)" fg:x="100120284" fg:w="1222585"/><text x="26.1970%" y="4687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,222,585 samples, 0.32%)</title><rect x="25.9470%" y="4661" width="0.3168%" height="15" fill="rgb(229,97,13)" fg:x="100120284" fg:w="1222585"/><text x="26.1970%" y="4671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,222,585 samples, 0.32%)</title><rect x="25.9470%" y="4645" width="0.3168%" height="15" fill="rgb(234,71,50)" fg:x="100120284" fg:w="1222585"/><text x="26.1970%" y="4655.50"></text></g><g><title>main::benchmark::json_to_html_node (4,897,843 samples, 1.27%)</title><rect x="25.3157%" y="4805" width="1.2693%" height="15" fill="rgb(253,155,4)" fg:x="97684495" fg:w="4897843"/><text x="25.5657%" y="4815.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,239,469 samples, 0.32%)</title><rect x="26.2638%" y="4789" width="0.3212%" height="15" fill="rgb(222,185,37)" fg:x="101342869" fg:w="1239469"/><text x="26.5138%" y="4799.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,239,469 samples, 0.32%)</title><rect x="26.2638%" y="4773" width="0.3212%" height="15" fill="rgb(251,177,13)" fg:x="101342869" fg:w="1239469"/><text x="26.5138%" y="4783.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,239,469 samples, 0.32%)</title><rect x="26.2638%" y="4757" width="0.3212%" height="15" fill="rgb(250,179,40)" fg:x="101342869" fg:w="1239469"/><text x="26.5138%" y="4767.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,239,469 samples, 0.32%)</title><rect x="26.2638%" y="4741" width="0.3212%" height="15" fill="rgb(242,44,2)" fg:x="101342869" fg:w="1239469"/><text x="26.5138%" y="4751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,239,469 samples, 0.32%)</title><rect x="26.2638%" y="4725" width="0.3212%" height="15" fill="rgb(216,177,13)" fg:x="101342869" fg:w="1239469"/><text x="26.5138%" y="4735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,239,469 samples, 0.32%)</title><rect x="26.2638%" y="4709" width="0.3212%" height="15" fill="rgb(216,106,43)" fg:x="101342869" fg:w="1239469"/><text x="26.5138%" y="4719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,239,469 samples, 0.32%)</title><rect x="26.2638%" y="4693" width="0.3212%" height="15" fill="rgb(216,183,2)" fg:x="101342869" fg:w="1239469"/><text x="26.5138%" y="4703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,239,469 samples, 0.32%)</title><rect x="26.2638%" y="4677" width="0.3212%" height="15" fill="rgb(249,75,3)" fg:x="101342869" fg:w="1239469"/><text x="26.5138%" y="4687.50"></text></g><g><title>main::benchmark::apply_frame_modifications (9,792,249 samples, 2.54%)</title><rect x="24.3604%" y="4821" width="2.5377%" height="15" fill="rgb(219,67,39)" fg:x="93998221" fg:w="9792249"/><text x="24.6104%" y="4831.50">ma..</text></g><g><title>std::io::stdio::_print (1,208,132 samples, 0.31%)</title><rect x="26.5850%" y="4805" width="0.3131%" height="15" fill="rgb(253,228,2)" fg:x="102582338" fg:w="1208132"/><text x="26.8350%" y="4815.50"></text></g><g><title>std::io::stdio::print_to (1,208,132 samples, 0.31%)</title><rect x="26.5850%" y="4789" width="0.3131%" height="15" fill="rgb(235,138,27)" fg:x="102582338" fg:w="1208132"/><text x="26.8350%" y="4799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,257,072 samples, 0.33%)</title><rect x="26.8981%" y="3989" width="0.3258%" height="15" fill="rgb(236,97,51)" fg:x="103790470" fg:w="1257072"/><text x="27.1481%" y="3999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,257,072 samples, 0.33%)</title><rect x="26.8981%" y="3973" width="0.3258%" height="15" fill="rgb(240,80,30)" fg:x="103790470" fg:w="1257072"/><text x="27.1481%" y="3983.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,257,072 samples, 0.33%)</title><rect x="26.8981%" y="3957" width="0.3258%" height="15" fill="rgb(230,178,19)" fg:x="103790470" fg:w="1257072"/><text x="27.1481%" y="3967.50"></text></g><g><title>alloc::slice::hack::to_vec (1,257,072 samples, 0.33%)</title><rect x="26.8981%" y="3941" width="0.3258%" height="15" fill="rgb(210,190,27)" fg:x="103790470" fg:w="1257072"/><text x="27.1481%" y="3951.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,257,072 samples, 0.33%)</title><rect x="26.8981%" y="3925" width="0.3258%" height="15" fill="rgb(222,107,31)" fg:x="103790470" fg:w="1257072"/><text x="27.1481%" y="3935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,257,072 samples, 0.33%)</title><rect x="26.8981%" y="3909" width="0.3258%" height="15" fill="rgb(216,127,34)" fg:x="103790470" fg:w="1257072"/><text x="27.1481%" y="3919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,257,072 samples, 0.33%)</title><rect x="26.8981%" y="3893" width="0.3258%" height="15" fill="rgb(234,116,52)" fg:x="103790470" fg:w="1257072"/><text x="27.1481%" y="3903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,257,072 samples, 0.33%)</title><rect x="26.8981%" y="3877" width="0.3258%" height="15" fill="rgb(222,124,15)" fg:x="103790470" fg:w="1257072"/><text x="27.1481%" y="3887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,257,072 samples, 0.33%)</title><rect x="26.8981%" y="3861" width="0.3258%" height="15" fill="rgb(231,179,28)" fg:x="103790470" fg:w="1257072"/><text x="27.1481%" y="3871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,257,072 samples, 0.33%)</title><rect x="26.8981%" y="3845" width="0.3258%" height="15" fill="rgb(226,93,45)" fg:x="103790470" fg:w="1257072"/><text x="27.1481%" y="3855.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,257,072 samples, 0.33%)</title><rect x="26.8981%" y="3829" width="0.3258%" height="15" fill="rgb(215,8,51)" fg:x="103790470" fg:w="1257072"/><text x="27.1481%" y="3839.50"></text></g><g><title>alloc::alloc::alloc (1,257,072 samples, 0.33%)</title><rect x="26.8981%" y="3813" width="0.3258%" height="15" fill="rgb(223,106,5)" fg:x="103790470" fg:w="1257072"/><text x="27.1481%" y="3823.50"></text></g><g><title>__rdl_alloc (1,257,072 samples, 0.33%)</title><rect x="26.8981%" y="3797" width="0.3258%" height="15" fill="rgb(250,191,5)" fg:x="103790470" fg:w="1257072"/><text x="27.1481%" y="3807.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,257,072 samples, 0.33%)</title><rect x="26.8981%" y="3781" width="0.3258%" height="15" fill="rgb(242,132,44)" fg:x="103790470" fg:w="1257072"/><text x="27.1481%" y="3791.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,255,680 samples, 0.33%)</title><rect x="27.2239%" y="3909" width="0.3254%" height="15" fill="rgb(251,152,29)" fg:x="105047542" fg:w="1255680"/><text x="27.4739%" y="3919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,255,680 samples, 0.33%)</title><rect x="27.2239%" y="3893" width="0.3254%" height="15" fill="rgb(218,179,5)" fg:x="105047542" fg:w="1255680"/><text x="27.4739%" y="3903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,255,680 samples, 0.33%)</title><rect x="27.2239%" y="3877" width="0.3254%" height="15" fill="rgb(227,67,19)" fg:x="105047542" fg:w="1255680"/><text x="27.4739%" y="3887.50"></text></g><g><title>alloc::slice::hack::to_vec (1,255,680 samples, 0.33%)</title><rect x="27.2239%" y="3861" width="0.3254%" height="15" fill="rgb(233,119,31)" fg:x="105047542" fg:w="1255680"/><text x="27.4739%" y="3871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,255,680 samples, 0.33%)</title><rect x="27.2239%" y="3845" width="0.3254%" height="15" fill="rgb(241,120,22)" fg:x="105047542" fg:w="1255680"/><text x="27.4739%" y="3855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,255,680 samples, 0.33%)</title><rect x="27.2239%" y="3829" width="0.3254%" height="15" fill="rgb(224,102,30)" fg:x="105047542" fg:w="1255680"/><text x="27.4739%" y="3839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,255,680 samples, 0.33%)</title><rect x="27.2239%" y="3813" width="0.3254%" height="15" fill="rgb(210,164,37)" fg:x="105047542" fg:w="1255680"/><text x="27.4739%" y="3823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,255,680 samples, 0.33%)</title><rect x="27.2239%" y="3797" width="0.3254%" height="15" fill="rgb(226,191,16)" fg:x="105047542" fg:w="1255680"/><text x="27.4739%" y="3807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,255,680 samples, 0.33%)</title><rect x="27.2239%" y="3781" width="0.3254%" height="15" fill="rgb(214,40,45)" fg:x="105047542" fg:w="1255680"/><text x="27.4739%" y="3791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,255,680 samples, 0.33%)</title><rect x="27.2239%" y="3765" width="0.3254%" height="15" fill="rgb(244,29,26)" fg:x="105047542" fg:w="1255680"/><text x="27.4739%" y="3775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,255,680 samples, 0.33%)</title><rect x="27.2239%" y="3749" width="0.3254%" height="15" fill="rgb(216,16,5)" fg:x="105047542" fg:w="1255680"/><text x="27.4739%" y="3759.50"></text></g><g><title>alloc::alloc::alloc (1,255,680 samples, 0.33%)</title><rect x="27.2239%" y="3733" width="0.3254%" height="15" fill="rgb(249,76,35)" fg:x="105047542" fg:w="1255680"/><text x="27.4739%" y="3743.50"></text></g><g><title>malloc (1,255,680 samples, 0.33%)</title><rect x="27.2239%" y="3717" width="0.3254%" height="15" fill="rgb(207,11,44)" fg:x="105047542" fg:w="1255680"/><text x="27.4739%" y="3727.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,188,427 samples, 0.31%)</title><rect x="27.5493%" y="3749" width="0.3080%" height="15" fill="rgb(228,190,49)" fg:x="106303222" fg:w="1188427"/><text x="27.7993%" y="3759.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,200,526 samples, 0.31%)</title><rect x="27.8573%" y="3685" width="0.3111%" height="15" fill="rgb(214,173,12)" fg:x="107491649" fg:w="1200526"/><text x="28.1073%" y="3695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,402,521 samples, 0.62%)</title><rect x="27.8573%" y="3749" width="0.6226%" height="15" fill="rgb(218,26,35)" fg:x="107491649" fg:w="2402521"/><text x="28.1073%" y="3759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,402,521 samples, 0.62%)</title><rect x="27.8573%" y="3733" width="0.6226%" height="15" fill="rgb(220,200,19)" fg:x="107491649" fg:w="2402521"/><text x="28.1073%" y="3743.50"></text></g><g><title>alloc::slice::hack::to_vec (2,402,521 samples, 0.62%)</title><rect x="27.8573%" y="3717" width="0.6226%" height="15" fill="rgb(239,95,49)" fg:x="107491649" fg:w="2402521"/><text x="28.1073%" y="3727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,402,521 samples, 0.62%)</title><rect x="27.8573%" y="3701" width="0.6226%" height="15" fill="rgb(235,85,53)" fg:x="107491649" fg:w="2402521"/><text x="28.1073%" y="3711.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,201,995 samples, 0.31%)</title><rect x="28.1685%" y="3685" width="0.3115%" height="15" fill="rgb(233,133,31)" fg:x="108692175" fg:w="1201995"/><text x="28.4185%" y="3695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,201,995 samples, 0.31%)</title><rect x="28.1685%" y="3669" width="0.3115%" height="15" fill="rgb(218,25,20)" fg:x="108692175" fg:w="1201995"/><text x="28.4185%" y="3679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,201,995 samples, 0.31%)</title><rect x="28.1685%" y="3653" width="0.3115%" height="15" fill="rgb(252,210,38)" fg:x="108692175" fg:w="1201995"/><text x="28.4185%" y="3663.50"></text></g><g><title>alloc::slice::hack::to_vec (1,201,995 samples, 0.31%)</title><rect x="28.1685%" y="3637" width="0.3115%" height="15" fill="rgb(242,134,21)" fg:x="108692175" fg:w="1201995"/><text x="28.4185%" y="3647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,201,995 samples, 0.31%)</title><rect x="28.1685%" y="3621" width="0.3115%" height="15" fill="rgb(213,28,48)" fg:x="108692175" fg:w="1201995"/><text x="28.4185%" y="3631.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,201,995 samples, 0.31%)</title><rect x="28.1685%" y="3605" width="0.3115%" height="15" fill="rgb(250,196,2)" fg:x="108692175" fg:w="1201995"/><text x="28.4185%" y="3615.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,201,995 samples, 0.31%)</title><rect x="28.1685%" y="3589" width="0.3115%" height="15" fill="rgb(227,5,17)" fg:x="108692175" fg:w="1201995"/><text x="28.4185%" y="3599.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,201,995 samples, 0.31%)</title><rect x="28.1685%" y="3573" width="0.3115%" height="15" fill="rgb(221,226,24)" fg:x="108692175" fg:w="1201995"/><text x="28.4185%" y="3583.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,200,229 samples, 0.31%)</title><rect x="28.4800%" y="3749" width="0.3110%" height="15" fill="rgb(211,5,48)" fg:x="109894170" fg:w="1200229"/><text x="28.7300%" y="3759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,200,229 samples, 0.31%)</title><rect x="28.4800%" y="3733" width="0.3110%" height="15" fill="rgb(219,150,6)" fg:x="109894170" fg:w="1200229"/><text x="28.7300%" y="3743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,200,229 samples, 0.31%)</title><rect x="28.4800%" y="3717" width="0.3110%" height="15" fill="rgb(251,46,16)" fg:x="109894170" fg:w="1200229"/><text x="28.7300%" y="3727.50"></text></g><g><title>alloc::slice::hack::to_vec (1,200,229 samples, 0.31%)</title><rect x="28.4800%" y="3701" width="0.3110%" height="15" fill="rgb(220,204,40)" fg:x="109894170" fg:w="1200229"/><text x="28.7300%" y="3711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,200,229 samples, 0.31%)</title><rect x="28.4800%" y="3685" width="0.3110%" height="15" fill="rgb(211,85,2)" fg:x="109894170" fg:w="1200229"/><text x="28.7300%" y="3695.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,200,229 samples, 0.31%)</title><rect x="28.4800%" y="3669" width="0.3110%" height="15" fill="rgb(229,17,7)" fg:x="109894170" fg:w="1200229"/><text x="28.7300%" y="3679.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,200,229 samples, 0.31%)</title><rect x="28.4800%" y="3653" width="0.3110%" height="15" fill="rgb(239,72,28)" fg:x="109894170" fg:w="1200229"/><text x="28.7300%" y="3663.50"></text></g><g><title>[libc.so.6] (1,200,229 samples, 0.31%)</title><rect x="28.4800%" y="3637" width="0.3110%" height="15" fill="rgb(230,47,54)" fg:x="109894170" fg:w="1200229"/><text x="28.7300%" y="3647.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (6,059,122 samples, 1.57%)</title><rect x="27.5493%" y="3845" width="1.5703%" height="15" fill="rgb(214,50,8)" fg:x="106303222" fg:w="6059122"/><text x="27.7993%" y="3855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,059,122 samples, 1.57%)</title><rect x="27.5493%" y="3829" width="1.5703%" height="15" fill="rgb(216,198,43)" fg:x="106303222" fg:w="6059122"/><text x="27.7993%" y="3839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,059,122 samples, 1.57%)</title><rect x="27.5493%" y="3813" width="1.5703%" height="15" fill="rgb(234,20,35)" fg:x="106303222" fg:w="6059122"/><text x="27.7993%" y="3823.50"></text></g><g><title>alloc::slice::hack::to_vec (6,059,122 samples, 1.57%)</title><rect x="27.5493%" y="3797" width="1.5703%" height="15" fill="rgb(254,45,19)" fg:x="106303222" fg:w="6059122"/><text x="27.7993%" y="3807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,059,122 samples, 1.57%)</title><rect x="27.5493%" y="3781" width="1.5703%" height="15" fill="rgb(219,14,44)" fg:x="106303222" fg:w="6059122"/><text x="27.7993%" y="3791.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (6,059,122 samples, 1.57%)</title><rect x="27.5493%" y="3765" width="1.5703%" height="15" fill="rgb(217,220,26)" fg:x="106303222" fg:w="6059122"/><text x="27.7993%" y="3775.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,267,945 samples, 0.33%)</title><rect x="28.7910%" y="3749" width="0.3286%" height="15" fill="rgb(213,158,28)" fg:x="111094399" fg:w="1267945"/><text x="29.0410%" y="3759.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,267,945 samples, 0.33%)</title><rect x="28.7910%" y="3733" width="0.3286%" height="15" fill="rgb(252,51,52)" fg:x="111094399" fg:w="1267945"/><text x="29.0410%" y="3743.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,267,945 samples, 0.33%)</title><rect x="28.7910%" y="3717" width="0.3286%" height="15" fill="rgb(246,89,16)" fg:x="111094399" fg:w="1267945"/><text x="29.0410%" y="3727.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,267,945 samples, 0.33%)</title><rect x="28.7910%" y="3701" width="0.3286%" height="15" fill="rgb(216,158,49)" fg:x="111094399" fg:w="1267945"/><text x="29.0410%" y="3711.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,267,945 samples, 0.33%)</title><rect x="28.7910%" y="3685" width="0.3286%" height="15" fill="rgb(236,107,19)" fg:x="111094399" fg:w="1267945"/><text x="29.0410%" y="3695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,267,945 samples, 0.33%)</title><rect x="28.7910%" y="3669" width="0.3286%" height="15" fill="rgb(228,185,30)" fg:x="111094399" fg:w="1267945"/><text x="29.0410%" y="3679.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (8,553,997 samples, 2.22%)</title><rect x="27.2239%" y="3925" width="2.2168%" height="15" fill="rgb(246,134,8)" fg:x="105047542" fg:w="8553997"/><text x="27.4739%" y="3935.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,298,317 samples, 1.89%)</title><rect x="27.5493%" y="3909" width="1.8914%" height="15" fill="rgb(214,143,50)" fg:x="106303222" fg:w="7298317"/><text x="27.7993%" y="3919.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,298,317 samples, 1.89%)</title><rect x="27.5493%" y="3893" width="1.8914%" height="15" fill="rgb(228,75,8)" fg:x="106303222" fg:w="7298317"/><text x="27.7993%" y="3903.50">a..</text></g><g><title>alloc::slice::hack::to_vec (7,298,317 samples, 1.89%)</title><rect x="27.5493%" y="3877" width="1.8914%" height="15" fill="rgb(207,175,4)" fg:x="106303222" fg:w="7298317"/><text x="27.7993%" y="3887.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,298,317 samples, 1.89%)</title><rect x="27.5493%" y="3861" width="1.8914%" height="15" fill="rgb(205,108,24)" fg:x="106303222" fg:w="7298317"/><text x="27.7993%" y="3871.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,239,195 samples, 0.32%)</title><rect x="29.1196%" y="3845" width="0.3211%" height="15" fill="rgb(244,120,49)" fg:x="112362344" fg:w="1239195"/><text x="29.3696%" y="3855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,239,195 samples, 0.32%)</title><rect x="29.1196%" y="3829" width="0.3211%" height="15" fill="rgb(223,47,38)" fg:x="112362344" fg:w="1239195"/><text x="29.3696%" y="3839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,239,195 samples, 0.32%)</title><rect x="29.1196%" y="3813" width="0.3211%" height="15" fill="rgb(229,179,11)" fg:x="112362344" fg:w="1239195"/><text x="29.3696%" y="3823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,239,195 samples, 0.32%)</title><rect x="29.1196%" y="3797" width="0.3211%" height="15" fill="rgb(231,122,1)" fg:x="112362344" fg:w="1239195"/><text x="29.3696%" y="3807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,239,195 samples, 0.32%)</title><rect x="29.1196%" y="3781" width="0.3211%" height="15" fill="rgb(245,119,9)" fg:x="112362344" fg:w="1239195"/><text x="29.3696%" y="3791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,239,195 samples, 0.32%)</title><rect x="29.1196%" y="3765" width="0.3211%" height="15" fill="rgb(241,163,25)" fg:x="112362344" fg:w="1239195"/><text x="29.3696%" y="3775.50"></text></g><g><title>alloc::alloc::alloc (1,239,195 samples, 0.32%)</title><rect x="29.1196%" y="3749" width="0.3211%" height="15" fill="rgb(217,214,3)" fg:x="112362344" fg:w="1239195"/><text x="29.3696%" y="3759.50"></text></g><g><title>malloc (1,239,195 samples, 0.32%)</title><rect x="29.1196%" y="3733" width="0.3211%" height="15" fill="rgb(240,86,28)" fg:x="112362344" fg:w="1239195"/><text x="29.3696%" y="3743.50"></text></g><g><title>[libc.so.6] (1,239,195 samples, 0.32%)</title><rect x="29.1196%" y="3717" width="0.3211%" height="15" fill="rgb(215,47,9)" fg:x="112362344" fg:w="1239195"/><text x="29.3696%" y="3727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,796,690 samples, 2.54%)</title><rect x="27.2239%" y="3989" width="2.5389%" height="15" fill="rgb(252,25,45)" fg:x="105047542" fg:w="9796690"/><text x="27.4739%" y="3999.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,796,690 samples, 2.54%)</title><rect x="27.2239%" y="3973" width="2.5389%" height="15" fill="rgb(251,164,9)" fg:x="105047542" fg:w="9796690"/><text x="27.4739%" y="3983.50">al..</text></g><g><title>alloc::slice::hack::to_vec (9,796,690 samples, 2.54%)</title><rect x="27.2239%" y="3957" width="2.5389%" height="15" fill="rgb(233,194,0)" fg:x="105047542" fg:w="9796690"/><text x="27.4739%" y="3967.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,796,690 samples, 2.54%)</title><rect x="27.2239%" y="3941" width="2.5389%" height="15" fill="rgb(249,111,24)" fg:x="105047542" fg:w="9796690"/><text x="27.4739%" y="3951.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,242,693 samples, 0.32%)</title><rect x="29.4408%" y="3925" width="0.3221%" height="15" fill="rgb(250,223,3)" fg:x="113601539" fg:w="1242693"/><text x="29.6908%" y="3935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,242,693 samples, 0.32%)</title><rect x="29.4408%" y="3909" width="0.3221%" height="15" fill="rgb(236,178,37)" fg:x="113601539" fg:w="1242693"/><text x="29.6908%" y="3919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,242,693 samples, 0.32%)</title><rect x="29.4408%" y="3893" width="0.3221%" height="15" fill="rgb(241,158,50)" fg:x="113601539" fg:w="1242693"/><text x="29.6908%" y="3903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,242,693 samples, 0.32%)</title><rect x="29.4408%" y="3877" width="0.3221%" height="15" fill="rgb(213,121,41)" fg:x="113601539" fg:w="1242693"/><text x="29.6908%" y="3887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,242,693 samples, 0.32%)</title><rect x="29.4408%" y="3861" width="0.3221%" height="15" fill="rgb(240,92,3)" fg:x="113601539" fg:w="1242693"/><text x="29.6908%" y="3871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,242,693 samples, 0.32%)</title><rect x="29.4408%" y="3845" width="0.3221%" height="15" fill="rgb(205,123,3)" fg:x="113601539" fg:w="1242693"/><text x="29.6908%" y="3855.50"></text></g><g><title>alloc::alloc::alloc (1,242,693 samples, 0.32%)</title><rect x="29.4408%" y="3829" width="0.3221%" height="15" fill="rgb(205,97,47)" fg:x="113601539" fg:w="1242693"/><text x="29.6908%" y="3839.50"></text></g><g><title>__rdl_alloc (1,242,693 samples, 0.32%)</title><rect x="29.4408%" y="3813" width="0.3221%" height="15" fill="rgb(247,152,14)" fg:x="113601539" fg:w="1242693"/><text x="29.6908%" y="3823.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,242,693 samples, 0.32%)</title><rect x="29.4408%" y="3797" width="0.3221%" height="15" fill="rgb(248,195,53)" fg:x="113601539" fg:w="1242693"/><text x="29.6908%" y="3807.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,246,243 samples, 0.32%)</title><rect x="29.7628%" y="3989" width="0.3230%" height="15" fill="rgb(226,201,16)" fg:x="114844232" fg:w="1246243"/><text x="30.0128%" y="3999.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,246,243 samples, 0.32%)</title><rect x="29.7628%" y="3973" width="0.3230%" height="15" fill="rgb(205,98,0)" fg:x="114844232" fg:w="1246243"/><text x="30.0128%" y="3983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,246,243 samples, 0.32%)</title><rect x="29.7628%" y="3957" width="0.3230%" height="15" fill="rgb(214,191,48)" fg:x="114844232" fg:w="1246243"/><text x="30.0128%" y="3967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,246,243 samples, 0.32%)</title><rect x="29.7628%" y="3941" width="0.3230%" height="15" fill="rgb(237,112,39)" fg:x="114844232" fg:w="1246243"/><text x="30.0128%" y="3951.50"></text></g><g><title>alloc::slice::hack::to_vec (1,246,243 samples, 0.32%)</title><rect x="29.7628%" y="3925" width="0.3230%" height="15" fill="rgb(247,203,27)" fg:x="114844232" fg:w="1246243"/><text x="30.0128%" y="3935.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,246,243 samples, 0.32%)</title><rect x="29.7628%" y="3909" width="0.3230%" height="15" fill="rgb(235,124,28)" fg:x="114844232" fg:w="1246243"/><text x="30.0128%" y="3919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,246,243 samples, 0.32%)</title><rect x="29.7628%" y="3893" width="0.3230%" height="15" fill="rgb(208,207,46)" fg:x="114844232" fg:w="1246243"/><text x="30.0128%" y="3903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,246,243 samples, 0.32%)</title><rect x="29.7628%" y="3877" width="0.3230%" height="15" fill="rgb(234,176,4)" fg:x="114844232" fg:w="1246243"/><text x="30.0128%" y="3887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,246,243 samples, 0.32%)</title><rect x="29.7628%" y="3861" width="0.3230%" height="15" fill="rgb(230,133,28)" fg:x="114844232" fg:w="1246243"/><text x="30.0128%" y="3871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,246,243 samples, 0.32%)</title><rect x="29.7628%" y="3845" width="0.3230%" height="15" fill="rgb(211,137,40)" fg:x="114844232" fg:w="1246243"/><text x="30.0128%" y="3855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,246,243 samples, 0.32%)</title><rect x="29.7628%" y="3829" width="0.3230%" height="15" fill="rgb(254,35,13)" fg:x="114844232" fg:w="1246243"/><text x="30.0128%" y="3839.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,246,243 samples, 0.32%)</title><rect x="29.7628%" y="3813" width="0.3230%" height="15" fill="rgb(225,49,51)" fg:x="114844232" fg:w="1246243"/><text x="30.0128%" y="3823.50"></text></g><g><title>alloc::alloc::alloc (1,246,243 samples, 0.32%)</title><rect x="29.7628%" y="3797" width="0.3230%" height="15" fill="rgb(251,10,15)" fg:x="114844232" fg:w="1246243"/><text x="30.0128%" y="3807.50"></text></g><g><title>malloc (1,246,243 samples, 0.32%)</title><rect x="29.7628%" y="3781" width="0.3230%" height="15" fill="rgb(228,207,15)" fg:x="114844232" fg:w="1246243"/><text x="30.0128%" y="3791.50"></text></g><g><title>[libc.so.6] (1,246,243 samples, 0.32%)</title><rect x="29.7628%" y="3765" width="0.3230%" height="15" fill="rgb(241,99,19)" fg:x="114844232" fg:w="1246243"/><text x="30.0128%" y="3775.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (723,815 samples, 0.19%)</title><rect x="30.0858%" y="3989" width="0.1876%" height="15" fill="rgb(207,104,49)" fg:x="116090475" fg:w="723815"/><text x="30.3358%" y="3999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (723,815 samples, 0.19%)</title><rect x="30.0858%" y="3973" width="0.1876%" height="15" fill="rgb(234,99,18)" fg:x="116090475" fg:w="723815"/><text x="30.3358%" y="3983.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (723,815 samples, 0.19%)</title><rect x="30.0858%" y="3957" width="0.1876%" height="15" fill="rgb(213,191,49)" fg:x="116090475" fg:w="723815"/><text x="30.3358%" y="3967.50"></text></g><g><title>alloc::slice::hack::to_vec (723,815 samples, 0.19%)</title><rect x="30.0858%" y="3941" width="0.1876%" height="15" fill="rgb(210,226,19)" fg:x="116090475" fg:w="723815"/><text x="30.3358%" y="3951.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (723,815 samples, 0.19%)</title><rect x="30.0858%" y="3925" width="0.1876%" height="15" fill="rgb(229,97,18)" fg:x="116090475" fg:w="723815"/><text x="30.3358%" y="3935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (723,815 samples, 0.19%)</title><rect x="30.0858%" y="3909" width="0.1876%" height="15" fill="rgb(211,167,15)" fg:x="116090475" fg:w="723815"/><text x="30.3358%" y="3919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (723,815 samples, 0.19%)</title><rect x="30.0858%" y="3893" width="0.1876%" height="15" fill="rgb(210,169,34)" fg:x="116090475" fg:w="723815"/><text x="30.3358%" y="3903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (723,815 samples, 0.19%)</title><rect x="30.0858%" y="3877" width="0.1876%" height="15" fill="rgb(241,121,31)" fg:x="116090475" fg:w="723815"/><text x="30.3358%" y="3887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (723,815 samples, 0.19%)</title><rect x="30.0858%" y="3861" width="0.1876%" height="15" fill="rgb(232,40,11)" fg:x="116090475" fg:w="723815"/><text x="30.3358%" y="3871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (723,815 samples, 0.19%)</title><rect x="30.0858%" y="3845" width="0.1876%" height="15" fill="rgb(205,86,26)" fg:x="116090475" fg:w="723815"/><text x="30.3358%" y="3855.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (723,815 samples, 0.19%)</title><rect x="30.0858%" y="3829" width="0.1876%" height="15" fill="rgb(231,126,28)" fg:x="116090475" fg:w="723815"/><text x="30.3358%" y="3839.50"></text></g><g><title>alloc::alloc::alloc (723,815 samples, 0.19%)</title><rect x="30.0858%" y="3813" width="0.1876%" height="15" fill="rgb(219,221,18)" fg:x="116090475" fg:w="723815"/><text x="30.3358%" y="3823.50"></text></g><g><title>malloc (723,815 samples, 0.19%)</title><rect x="30.0858%" y="3797" width="0.1876%" height="15" fill="rgb(211,40,0)" fg:x="116090475" fg:w="723815"/><text x="30.3358%" y="3807.50"></text></g><g><title>[libc.so.6] (723,815 samples, 0.19%)</title><rect x="30.0858%" y="3781" width="0.1876%" height="15" fill="rgb(239,85,43)" fg:x="116090475" fg:w="723815"/><text x="30.3358%" y="3791.50"></text></g><g><title>core::clone::Clone::clone (2,483,234 samples, 0.64%)</title><rect x="30.2734%" y="3893" width="0.6436%" height="15" fill="rgb(231,55,21)" fg:x="116814290" fg:w="2483234"/><text x="30.5234%" y="3903.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,483,234 samples, 0.64%)</title><rect x="30.2734%" y="3877" width="0.6436%" height="15" fill="rgb(225,184,43)" fg:x="116814290" fg:w="2483234"/><text x="30.5234%" y="3887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,483,234 samples, 0.64%)</title><rect x="30.2734%" y="3861" width="0.6436%" height="15" fill="rgb(251,158,41)" fg:x="116814290" fg:w="2483234"/><text x="30.5234%" y="3871.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,483,234 samples, 0.64%)</title><rect x="30.2734%" y="3845" width="0.6436%" height="15" fill="rgb(234,159,37)" fg:x="116814290" fg:w="2483234"/><text x="30.5234%" y="3855.50"></text></g><g><title>alloc::slice::hack::to_vec (2,483,234 samples, 0.64%)</title><rect x="30.2734%" y="3829" width="0.6436%" height="15" fill="rgb(216,204,22)" fg:x="116814290" fg:w="2483234"/><text x="30.5234%" y="3839.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,483,234 samples, 0.64%)</title><rect x="30.2734%" y="3813" width="0.6436%" height="15" fill="rgb(214,17,3)" fg:x="116814290" fg:w="2483234"/><text x="30.5234%" y="3823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,483,234 samples, 0.64%)</title><rect x="30.2734%" y="3797" width="0.6436%" height="15" fill="rgb(212,111,17)" fg:x="116814290" fg:w="2483234"/><text x="30.5234%" y="3807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,483,234 samples, 0.64%)</title><rect x="30.2734%" y="3781" width="0.6436%" height="15" fill="rgb(221,157,24)" fg:x="116814290" fg:w="2483234"/><text x="30.5234%" y="3791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,483,234 samples, 0.64%)</title><rect x="30.2734%" y="3765" width="0.6436%" height="15" fill="rgb(252,16,13)" fg:x="116814290" fg:w="2483234"/><text x="30.5234%" y="3775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,483,234 samples, 0.64%)</title><rect x="30.2734%" y="3749" width="0.6436%" height="15" fill="rgb(221,62,2)" fg:x="116814290" fg:w="2483234"/><text x="30.5234%" y="3759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,483,234 samples, 0.64%)</title><rect x="30.2734%" y="3733" width="0.6436%" height="15" fill="rgb(247,87,22)" fg:x="116814290" fg:w="2483234"/><text x="30.5234%" y="3743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,483,234 samples, 0.64%)</title><rect x="30.2734%" y="3717" width="0.6436%" height="15" fill="rgb(215,73,9)" fg:x="116814290" fg:w="2483234"/><text x="30.5234%" y="3727.50"></text></g><g><title>alloc::alloc::alloc (2,483,234 samples, 0.64%)</title><rect x="30.2734%" y="3701" width="0.6436%" height="15" fill="rgb(207,175,33)" fg:x="116814290" fg:w="2483234"/><text x="30.5234%" y="3711.50"></text></g><g><title>malloc (2,483,234 samples, 0.64%)</title><rect x="30.2734%" y="3685" width="0.6436%" height="15" fill="rgb(243,129,54)" fg:x="116814290" fg:w="2483234"/><text x="30.5234%" y="3695.50"></text></g><g><title>[libc.so.6] (1,234,026 samples, 0.32%)</title><rect x="30.5971%" y="3669" width="0.3198%" height="15" fill="rgb(227,119,45)" fg:x="118063498" fg:w="1234026"/><text x="30.8471%" y="3679.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,723,525 samples, 0.96%)</title><rect x="30.2734%" y="3925" width="0.9650%" height="15" fill="rgb(205,109,36)" fg:x="116814290" fg:w="3723525"/><text x="30.5234%" y="3935.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,723,525 samples, 0.96%)</title><rect x="30.2734%" y="3909" width="0.9650%" height="15" fill="rgb(205,6,39)" fg:x="116814290" fg:w="3723525"/><text x="30.5234%" y="3919.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1,240,291 samples, 0.32%)</title><rect x="30.9169%" y="3893" width="0.3214%" height="15" fill="rgb(221,32,16)" fg:x="119297524" fg:w="1240291"/><text x="31.1669%" y="3903.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,240,291 samples, 0.32%)</title><rect x="30.9169%" y="3877" width="0.3214%" height="15" fill="rgb(228,144,50)" fg:x="119297524" fg:w="1240291"/><text x="31.1669%" y="3887.50"></text></g><g><title>[libc.so.6] (1,240,291 samples, 0.32%)</title><rect x="30.9169%" y="3861" width="0.3214%" height="15" fill="rgb(229,201,53)" fg:x="119297524" fg:w="1240291"/><text x="31.1669%" y="3871.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (17,977,197 samples, 4.66%)</title><rect x="26.8981%" y="4005" width="4.6589%" height="15" fill="rgb(249,153,27)" fg:x="103790470" fg:w="17977197"/><text x="27.1481%" y="4015.50">&lt;css_..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4,953,377 samples, 1.28%)</title><rect x="30.2734%" y="3989" width="1.2837%" height="15" fill="rgb(227,106,25)" fg:x="116814290" fg:w="4953377"/><text x="30.5234%" y="3999.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4,953,377 samples, 1.28%)</title><rect x="30.2734%" y="3973" width="1.2837%" height="15" fill="rgb(230,65,29)" fg:x="116814290" fg:w="4953377"/><text x="30.5234%" y="3983.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4,953,377 samples, 1.28%)</title><rect x="30.2734%" y="3957" width="1.2837%" height="15" fill="rgb(221,57,46)" fg:x="116814290" fg:w="4953377"/><text x="30.5234%" y="3967.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,953,377 samples, 1.28%)</title><rect x="30.2734%" y="3941" width="1.2837%" height="15" fill="rgb(229,161,17)" fg:x="116814290" fg:w="4953377"/><text x="30.5234%" y="3951.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,229,852 samples, 0.32%)</title><rect x="31.2383%" y="3925" width="0.3187%" height="15" fill="rgb(222,213,11)" fg:x="120537815" fg:w="1229852"/><text x="31.4883%" y="3935.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,229,852 samples, 0.32%)</title><rect x="31.2383%" y="3909" width="0.3187%" height="15" fill="rgb(235,35,13)" fg:x="120537815" fg:w="1229852"/><text x="31.4883%" y="3919.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,229,852 samples, 0.32%)</title><rect x="31.2383%" y="3893" width="0.3187%" height="15" fill="rgb(233,158,34)" fg:x="120537815" fg:w="1229852"/><text x="31.4883%" y="3903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,229,852 samples, 0.32%)</title><rect x="31.2383%" y="3877" width="0.3187%" height="15" fill="rgb(215,151,48)" fg:x="120537815" fg:w="1229852"/><text x="31.4883%" y="3887.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,229,852 samples, 0.32%)</title><rect x="31.2383%" y="3861" width="0.3187%" height="15" fill="rgb(229,84,14)" fg:x="120537815" fg:w="1229852"/><text x="31.4883%" y="3871.50"></text></g><g><title>alloc::alloc::alloc (1,229,852 samples, 0.32%)</title><rect x="31.2383%" y="3845" width="0.3187%" height="15" fill="rgb(229,68,14)" fg:x="120537815" fg:w="1229852"/><text x="31.4883%" y="3855.50"></text></g><g><title>malloc (1,229,852 samples, 0.32%)</title><rect x="31.2383%" y="3829" width="0.3187%" height="15" fill="rgb(243,106,26)" fg:x="120537815" fg:w="1229852"/><text x="31.4883%" y="3839.50"></text></g><g><title>[libc.so.6] (1,229,852 samples, 0.32%)</title><rect x="31.2383%" y="3813" width="0.3187%" height="15" fill="rgb(206,45,38)" fg:x="120537815" fg:w="1229852"/><text x="31.4883%" y="3823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20,459,450 samples, 5.30%)</title><rect x="26.8981%" y="4069" width="5.3022%" height="15" fill="rgb(226,6,15)" fg:x="103790470" fg:w="20459450"/><text x="27.1481%" y="4079.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20,459,450 samples, 5.30%)</title><rect x="26.8981%" y="4053" width="5.3022%" height="15" fill="rgb(232,22,54)" fg:x="103790470" fg:w="20459450"/><text x="27.1481%" y="4063.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (20,459,450 samples, 5.30%)</title><rect x="26.8981%" y="4037" width="5.3022%" height="15" fill="rgb(229,222,32)" fg:x="103790470" fg:w="20459450"/><text x="27.1481%" y="4047.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20,459,450 samples, 5.30%)</title><rect x="26.8981%" y="4021" width="5.3022%" height="15" fill="rgb(228,62,29)" fg:x="103790470" fg:w="20459450"/><text x="27.1481%" y="4031.50">&lt;T as ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,482,253 samples, 0.64%)</title><rect x="31.5571%" y="4005" width="0.6433%" height="15" fill="rgb(251,103,34)" fg:x="121767667" fg:w="2482253"/><text x="31.8071%" y="4015.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,482,253 samples, 0.64%)</title><rect x="31.5571%" y="3989" width="0.6433%" height="15" fill="rgb(233,12,30)" fg:x="121767667" fg:w="2482253"/><text x="31.8071%" y="3999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,482,253 samples, 0.64%)</title><rect x="31.5571%" y="3973" width="0.6433%" height="15" fill="rgb(238,52,0)" fg:x="121767667" fg:w="2482253"/><text x="31.8071%" y="3983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,482,253 samples, 0.64%)</title><rect x="31.5571%" y="3957" width="0.6433%" height="15" fill="rgb(223,98,5)" fg:x="121767667" fg:w="2482253"/><text x="31.8071%" y="3967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,249,770 samples, 0.32%)</title><rect x="31.8765%" y="3941" width="0.3239%" height="15" fill="rgb(228,75,37)" fg:x="123000150" fg:w="1249770"/><text x="32.1265%" y="3951.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,249,770 samples, 0.32%)</title><rect x="31.8765%" y="3925" width="0.3239%" height="15" fill="rgb(205,115,49)" fg:x="123000150" fg:w="1249770"/><text x="32.1265%" y="3935.50"></text></g><g><title>alloc::alloc::alloc (1,249,770 samples, 0.32%)</title><rect x="31.8765%" y="3909" width="0.3239%" height="15" fill="rgb(250,154,43)" fg:x="123000150" fg:w="1249770"/><text x="32.1265%" y="3919.50"></text></g><g><title>malloc (1,249,770 samples, 0.32%)</title><rect x="31.8765%" y="3893" width="0.3239%" height="15" fill="rgb(226,43,29)" fg:x="123000150" fg:w="1249770"/><text x="32.1265%" y="3903.50"></text></g><g><title>[libc.so.6] (1,249,770 samples, 0.32%)</title><rect x="31.8765%" y="3877" width="0.3239%" height="15" fill="rgb(249,228,39)" fg:x="123000150" fg:w="1249770"/><text x="32.1265%" y="3887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22,922,133 samples, 5.94%)</title><rect x="26.8981%" y="4149" width="5.9405%" height="15" fill="rgb(216,79,43)" fg:x="103790470" fg:w="22922133"/><text x="27.1481%" y="4159.50">&lt;alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22,922,133 samples, 5.94%)</title><rect x="26.8981%" y="4133" width="5.9405%" height="15" fill="rgb(228,95,12)" fg:x="103790470" fg:w="22922133"/><text x="27.1481%" y="4143.50">alloc::s..</text></g><g><title>alloc::slice::hack::to_vec (22,922,133 samples, 5.94%)</title><rect x="26.8981%" y="4117" width="5.9405%" height="15" fill="rgb(249,221,15)" fg:x="103790470" fg:w="22922133"/><text x="27.1481%" y="4127.50">alloc::s..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22,922,133 samples, 5.94%)</title><rect x="26.8981%" y="4101" width="5.9405%" height="15" fill="rgb(233,34,13)" fg:x="103790470" fg:w="22922133"/><text x="27.1481%" y="4111.50">&lt;T as al..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (22,922,133 samples, 5.94%)</title><rect x="26.8981%" y="4085" width="5.9405%" height="15" fill="rgb(214,103,39)" fg:x="103790470" fg:w="22922133"/><text x="27.1481%" y="4095.50">&lt;css_bit..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,462,683 samples, 0.64%)</title><rect x="32.2004%" y="4069" width="0.6382%" height="15" fill="rgb(251,126,39)" fg:x="124249920" fg:w="2462683"/><text x="32.4504%" y="4079.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,462,683 samples, 0.64%)</title><rect x="32.2004%" y="4053" width="0.6382%" height="15" fill="rgb(214,216,36)" fg:x="124249920" fg:w="2462683"/><text x="32.4504%" y="4063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,241,735 samples, 0.32%)</title><rect x="32.5168%" y="4037" width="0.3218%" height="15" fill="rgb(220,221,8)" fg:x="125470868" fg:w="1241735"/><text x="32.7668%" y="4047.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,241,735 samples, 0.32%)</title><rect x="32.5168%" y="4021" width="0.3218%" height="15" fill="rgb(240,216,3)" fg:x="125470868" fg:w="1241735"/><text x="32.7668%" y="4031.50"></text></g><g><title>alloc::slice::hack::to_vec (1,241,735 samples, 0.32%)</title><rect x="32.5168%" y="4005" width="0.3218%" height="15" fill="rgb(232,218,17)" fg:x="125470868" fg:w="1241735"/><text x="32.7668%" y="4015.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,241,735 samples, 0.32%)</title><rect x="32.5168%" y="3989" width="0.3218%" height="15" fill="rgb(229,163,45)" fg:x="125470868" fg:w="1241735"/><text x="32.7668%" y="3999.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,241,735 samples, 0.32%)</title><rect x="32.5168%" y="3973" width="0.3218%" height="15" fill="rgb(231,110,42)" fg:x="125470868" fg:w="1241735"/><text x="32.7668%" y="3983.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,241,735 samples, 0.32%)</title><rect x="32.5168%" y="3957" width="0.3218%" height="15" fill="rgb(208,170,48)" fg:x="125470868" fg:w="1241735"/><text x="32.7668%" y="3967.50"></text></g><g><title>[libc.so.6] (1,241,735 samples, 0.32%)</title><rect x="32.5168%" y="3941" width="0.3218%" height="15" fill="rgb(239,116,25)" fg:x="125470868" fg:w="1241735"/><text x="32.7668%" y="3951.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4405" width="6.2345%" height="15" fill="rgb(219,200,50)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4415.50">&lt;css_bit..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4389" width="6.2345%" height="15" fill="rgb(245,200,0)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4399.50">&lt;alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4373" width="6.2345%" height="15" fill="rgb(245,119,33)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4383.50">alloc::s..</text></g><g><title>alloc::slice::hack::to_vec (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4357" width="6.2345%" height="15" fill="rgb(231,125,12)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4367.50">alloc::s..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4341" width="6.2345%" height="15" fill="rgb(216,96,41)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4351.50">&lt;T as al..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4325" width="6.2345%" height="15" fill="rgb(248,43,45)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4335.50">&lt;css_bit..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4309" width="6.2345%" height="15" fill="rgb(217,222,7)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4319.50">&lt;alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4293" width="6.2345%" height="15" fill="rgb(233,28,6)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4303.50">alloc::s..</text></g><g><title>alloc::slice::hack::to_vec (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4277" width="6.2345%" height="15" fill="rgb(231,218,15)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4287.50">alloc::s..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4261" width="6.2345%" height="15" fill="rgb(226,171,48)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4271.50">&lt;T as al..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4245" width="6.2345%" height="15" fill="rgb(235,201,9)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4255.50">&lt;css_bit..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4229" width="6.2345%" height="15" fill="rgb(217,80,15)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4239.50">&lt;alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4213" width="6.2345%" height="15" fill="rgb(219,152,8)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4223.50">alloc::s..</text></g><g><title>alloc::slice::hack::to_vec (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4197" width="6.2345%" height="15" fill="rgb(243,107,38)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4207.50">alloc::s..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4181" width="6.2345%" height="15" fill="rgb(231,17,5)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4191.50">&lt;T as al..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (24,056,616 samples, 6.23%)</title><rect x="26.8981%" y="4165" width="6.2345%" height="15" fill="rgb(209,25,54)" fg:x="103790470" fg:w="24056616"/><text x="27.1481%" y="4175.50">&lt;css_bit..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,134,483 samples, 0.29%)</title><rect x="32.8386%" y="4149" width="0.2940%" height="15" fill="rgb(219,0,2)" fg:x="126712603" fg:w="1134483"/><text x="33.0886%" y="4159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,134,483 samples, 0.29%)</title><rect x="32.8386%" y="4133" width="0.2940%" height="15" fill="rgb(246,9,5)" fg:x="126712603" fg:w="1134483"/><text x="33.0886%" y="4143.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,134,483 samples, 0.29%)</title><rect x="32.8386%" y="4117" width="0.2940%" height="15" fill="rgb(226,159,4)" fg:x="126712603" fg:w="1134483"/><text x="33.0886%" y="4127.50"></text></g><g><title>alloc::slice::hack::to_vec (1,134,483 samples, 0.29%)</title><rect x="32.8386%" y="4101" width="0.2940%" height="15" fill="rgb(219,175,34)" fg:x="126712603" fg:w="1134483"/><text x="33.0886%" y="4111.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,134,483 samples, 0.29%)</title><rect x="32.8386%" y="4085" width="0.2940%" height="15" fill="rgb(236,10,46)" fg:x="126712603" fg:w="1134483"/><text x="33.0886%" y="4095.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,134,483 samples, 0.29%)</title><rect x="32.8386%" y="4069" width="0.2940%" height="15" fill="rgb(240,211,16)" fg:x="126712603" fg:w="1134483"/><text x="33.0886%" y="4079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,134,483 samples, 0.29%)</title><rect x="32.8386%" y="4053" width="0.2940%" height="15" fill="rgb(205,3,43)" fg:x="126712603" fg:w="1134483"/><text x="33.0886%" y="4063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,134,483 samples, 0.29%)</title><rect x="32.8386%" y="4037" width="0.2940%" height="15" fill="rgb(245,7,22)" fg:x="126712603" fg:w="1134483"/><text x="33.0886%" y="4047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,134,483 samples, 0.29%)</title><rect x="32.8386%" y="4021" width="0.2940%" height="15" fill="rgb(239,132,32)" fg:x="126712603" fg:w="1134483"/><text x="33.0886%" y="4031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,134,483 samples, 0.29%)</title><rect x="32.8386%" y="4005" width="0.2940%" height="15" fill="rgb(228,202,34)" fg:x="126712603" fg:w="1134483"/><text x="33.0886%" y="4015.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,134,483 samples, 0.29%)</title><rect x="32.8386%" y="3989" width="0.2940%" height="15" fill="rgb(254,200,22)" fg:x="126712603" fg:w="1134483"/><text x="33.0886%" y="3999.50"></text></g><g><title>alloc::alloc::alloc (1,134,483 samples, 0.29%)</title><rect x="32.8386%" y="3973" width="0.2940%" height="15" fill="rgb(219,10,39)" fg:x="126712603" fg:w="1134483"/><text x="33.0886%" y="3983.50"></text></g><g><title>malloc (1,134,483 samples, 0.29%)</title><rect x="32.8386%" y="3957" width="0.2940%" height="15" fill="rgb(226,210,39)" fg:x="126712603" fg:w="1134483"/><text x="33.0886%" y="3967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25,244,713 samples, 6.54%)</title><rect x="26.8981%" y="4549" width="6.5424%" height="15" fill="rgb(208,219,16)" fg:x="103790470" fg:w="25244713"/><text x="27.1481%" y="4559.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25,244,713 samples, 6.54%)</title><rect x="26.8981%" y="4533" width="6.5424%" height="15" fill="rgb(216,158,51)" fg:x="103790470" fg:w="25244713"/><text x="27.1481%" y="4543.50">alloc::sl..</text></g><g><title>alloc::slice::hack::to_vec (25,244,713 samples, 6.54%)</title><rect x="26.8981%" y="4517" width="6.5424%" height="15" fill="rgb(233,14,44)" fg:x="103790470" fg:w="25244713"/><text x="27.1481%" y="4527.50">alloc::sl..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25,244,713 samples, 6.54%)</title><rect x="26.8981%" y="4501" width="6.5424%" height="15" fill="rgb(237,97,39)" fg:x="103790470" fg:w="25244713"/><text x="27.1481%" y="4511.50">&lt;T as all..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (25,244,713 samples, 6.54%)</title><rect x="26.8981%" y="4485" width="6.5424%" height="15" fill="rgb(218,198,43)" fg:x="103790470" fg:w="25244713"/><text x="27.1481%" y="4495.50">&lt;css_bitv..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25,244,713 samples, 6.54%)</title><rect x="26.8981%" y="4469" width="6.5424%" height="15" fill="rgb(231,104,20)" fg:x="103790470" fg:w="25244713"/><text x="27.1481%" y="4479.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25,244,713 samples, 6.54%)</title><rect x="26.8981%" y="4453" width="6.5424%" height="15" fill="rgb(254,36,13)" fg:x="103790470" fg:w="25244713"/><text x="27.1481%" y="4463.50">alloc::sl..</text></g><g><title>alloc::slice::hack::to_vec (25,244,713 samples, 6.54%)</title><rect x="26.8981%" y="4437" width="6.5424%" height="15" fill="rgb(248,14,50)" fg:x="103790470" fg:w="25244713"/><text x="27.1481%" y="4447.50">alloc::sl..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25,244,713 samples, 6.54%)</title><rect x="26.8981%" y="4421" width="6.5424%" height="15" fill="rgb(217,107,29)" fg:x="103790470" fg:w="25244713"/><text x="27.1481%" y="4431.50">&lt;T as all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,188,097 samples, 0.31%)</title><rect x="33.1326%" y="4405" width="0.3079%" height="15" fill="rgb(251,169,33)" fg:x="127847086" fg:w="1188097"/><text x="33.3826%" y="4415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,188,097 samples, 0.31%)</title><rect x="33.1326%" y="4389" width="0.3079%" height="15" fill="rgb(217,108,32)" fg:x="127847086" fg:w="1188097"/><text x="33.3826%" y="4399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,188,097 samples, 0.31%)</title><rect x="33.1326%" y="4373" width="0.3079%" height="15" fill="rgb(219,66,42)" fg:x="127847086" fg:w="1188097"/><text x="33.3826%" y="4383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,188,097 samples, 0.31%)</title><rect x="33.1326%" y="4357" width="0.3079%" height="15" fill="rgb(206,180,7)" fg:x="127847086" fg:w="1188097"/><text x="33.3826%" y="4367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,188,097 samples, 0.31%)</title><rect x="33.1326%" y="4341" width="0.3079%" height="15" fill="rgb(208,226,31)" fg:x="127847086" fg:w="1188097"/><text x="33.3826%" y="4351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,188,097 samples, 0.31%)</title><rect x="33.1326%" y="4325" width="0.3079%" height="15" fill="rgb(218,26,49)" fg:x="127847086" fg:w="1188097"/><text x="33.3826%" y="4335.50"></text></g><g><title>alloc::alloc::alloc (1,188,097 samples, 0.31%)</title><rect x="33.1326%" y="4309" width="0.3079%" height="15" fill="rgb(233,197,48)" fg:x="127847086" fg:w="1188097"/><text x="33.3826%" y="4319.50"></text></g><g><title>malloc (1,188,097 samples, 0.31%)</title><rect x="33.1326%" y="4293" width="0.3079%" height="15" fill="rgb(252,181,51)" fg:x="127847086" fg:w="1188097"/><text x="33.3826%" y="4303.50"></text></g><g><title>[libc.so.6] (1,188,097 samples, 0.31%)</title><rect x="33.1326%" y="4277" width="0.3079%" height="15" fill="rgb(253,90,19)" fg:x="127847086" fg:w="1188097"/><text x="33.3826%" y="4287.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (30,217,106 samples, 7.83%)</title><rect x="26.8981%" y="4565" width="7.8310%" height="15" fill="rgb(215,171,30)" fg:x="103790470" fg:w="30217106"/><text x="27.1481%" y="4575.50">&lt;css_bitvec..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4,972,393 samples, 1.29%)</title><rect x="33.4405%" y="4549" width="1.2886%" height="15" fill="rgb(214,222,9)" fg:x="129035183" fg:w="4972393"/><text x="33.6905%" y="4559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,470,258 samples, 0.64%)</title><rect x="34.0890%" y="4533" width="0.6402%" height="15" fill="rgb(223,3,22)" fg:x="131537318" fg:w="2470258"/><text x="34.3390%" y="4543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,470,258 samples, 0.64%)</title><rect x="34.0890%" y="4517" width="0.6402%" height="15" fill="rgb(225,196,46)" fg:x="131537318" fg:w="2470258"/><text x="34.3390%" y="4527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,470,258 samples, 0.64%)</title><rect x="34.0890%" y="4501" width="0.6402%" height="15" fill="rgb(209,110,37)" fg:x="131537318" fg:w="2470258"/><text x="34.3390%" y="4511.50"></text></g><g><title>alloc::slice::hack::to_vec (2,470,258 samples, 0.64%)</title><rect x="34.0890%" y="4485" width="0.6402%" height="15" fill="rgb(249,89,12)" fg:x="131537318" fg:w="2470258"/><text x="34.3390%" y="4495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,470,258 samples, 0.64%)</title><rect x="34.0890%" y="4469" width="0.6402%" height="15" fill="rgb(226,27,33)" fg:x="131537318" fg:w="2470258"/><text x="34.3390%" y="4479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,470,258 samples, 0.64%)</title><rect x="34.0890%" y="4453" width="0.6402%" height="15" fill="rgb(213,82,22)" fg:x="131537318" fg:w="2470258"/><text x="34.3390%" y="4463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,470,258 samples, 0.64%)</title><rect x="34.0890%" y="4437" width="0.6402%" height="15" fill="rgb(248,140,0)" fg:x="131537318" fg:w="2470258"/><text x="34.3390%" y="4447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,470,258 samples, 0.64%)</title><rect x="34.0890%" y="4421" width="0.6402%" height="15" fill="rgb(228,106,3)" fg:x="131537318" fg:w="2470258"/><text x="34.3390%" y="4431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,470,258 samples, 0.64%)</title><rect x="34.0890%" y="4405" width="0.6402%" height="15" fill="rgb(209,23,37)" fg:x="131537318" fg:w="2470258"/><text x="34.3390%" y="4415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,470,258 samples, 0.64%)</title><rect x="34.0890%" y="4389" width="0.6402%" height="15" fill="rgb(241,93,50)" fg:x="131537318" fg:w="2470258"/><text x="34.3390%" y="4399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,470,258 samples, 0.64%)</title><rect x="34.0890%" y="4373" width="0.6402%" height="15" fill="rgb(253,46,43)" fg:x="131537318" fg:w="2470258"/><text x="34.3390%" y="4383.50"></text></g><g><title>alloc::alloc::alloc (2,470,258 samples, 0.64%)</title><rect x="34.0890%" y="4357" width="0.6402%" height="15" fill="rgb(226,206,43)" fg:x="131537318" fg:w="2470258"/><text x="34.3390%" y="4367.50"></text></g><g><title>malloc (2,470,258 samples, 0.64%)</title><rect x="34.0890%" y="4341" width="0.6402%" height="15" fill="rgb(217,54,7)" fg:x="131537318" fg:w="2470258"/><text x="34.3390%" y="4351.50"></text></g><g><title>[libc.so.6] (2,470,258 samples, 0.64%)</title><rect x="34.0890%" y="4325" width="0.6402%" height="15" fill="rgb(223,5,52)" fg:x="131537318" fg:w="2470258"/><text x="34.3390%" y="4335.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (31,435,683 samples, 8.15%)</title><rect x="26.8981%" y="4805" width="8.1468%" height="15" fill="rgb(206,52,46)" fg:x="103790470" fg:w="31435683"/><text x="27.1481%" y="4815.50">&lt;css_bitvec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31,435,683 samples, 8.15%)</title><rect x="26.8981%" y="4789" width="8.1468%" height="15" fill="rgb(253,136,11)" fg:x="103790470" fg:w="31435683"/><text x="27.1481%" y="4799.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31,435,683 samples, 8.15%)</title><rect x="26.8981%" y="4773" width="8.1468%" height="15" fill="rgb(208,106,33)" fg:x="103790470" fg:w="31435683"/><text x="27.1481%" y="4783.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (31,435,683 samples, 8.15%)</title><rect x="26.8981%" y="4757" width="8.1468%" height="15" fill="rgb(206,54,4)" fg:x="103790470" fg:w="31435683"/><text x="27.1481%" y="4767.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31,435,683 samples, 8.15%)</title><rect x="26.8981%" y="4741" width="8.1468%" height="15" fill="rgb(213,3,15)" fg:x="103790470" fg:w="31435683"/><text x="27.1481%" y="4751.50">&lt;T as alloc..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (31,435,683 samples, 8.15%)</title><rect x="26.8981%" y="4725" width="8.1468%" height="15" fill="rgb(252,211,39)" fg:x="103790470" fg:w="31435683"/><text x="27.1481%" y="4735.50">&lt;css_bitvec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31,435,683 samples, 8.15%)</title><rect x="26.8981%" y="4709" width="8.1468%" height="15" fill="rgb(223,6,36)" fg:x="103790470" fg:w="31435683"/><text x="27.1481%" y="4719.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31,435,683 samples, 8.15%)</title><rect x="26.8981%" y="4693" width="8.1468%" height="15" fill="rgb(252,169,45)" fg:x="103790470" fg:w="31435683"/><text x="27.1481%" y="4703.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (31,435,683 samples, 8.15%)</title><rect x="26.8981%" y="4677" width="8.1468%" height="15" fill="rgb(212,48,26)" fg:x="103790470" fg:w="31435683"/><text x="27.1481%" y="4687.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31,435,683 samples, 8.15%)</title><rect x="26.8981%" y="4661" width="8.1468%" height="15" fill="rgb(251,102,48)" fg:x="103790470" fg:w="31435683"/><text x="27.1481%" y="4671.50">&lt;T as alloc..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (31,435,683 samples, 8.15%)</title><rect x="26.8981%" y="4645" width="8.1468%" height="15" fill="rgb(243,208,16)" fg:x="103790470" fg:w="31435683"/><text x="27.1481%" y="4655.50">&lt;css_bitvec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31,435,683 samples, 8.15%)</title><rect x="26.8981%" y="4629" width="8.1468%" height="15" fill="rgb(219,96,24)" fg:x="103790470" fg:w="31435683"/><text x="27.1481%" y="4639.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31,435,683 samples, 8.15%)</title><rect x="26.8981%" y="4613" width="8.1468%" height="15" fill="rgb(219,33,29)" fg:x="103790470" fg:w="31435683"/><text x="27.1481%" y="4623.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (31,435,683 samples, 8.15%)</title><rect x="26.8981%" y="4597" width="8.1468%" height="15" fill="rgb(223,176,5)" fg:x="103790470" fg:w="31435683"/><text x="27.1481%" y="4607.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31,435,683 samples, 8.15%)</title><rect x="26.8981%" y="4581" width="8.1468%" height="15" fill="rgb(228,140,14)" fg:x="103790470" fg:w="31435683"/><text x="27.1481%" y="4591.50">&lt;T as alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,218,577 samples, 0.32%)</title><rect x="34.7291%" y="4565" width="0.3158%" height="15" fill="rgb(217,179,31)" fg:x="134007576" fg:w="1218577"/><text x="34.9791%" y="4575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,218,577 samples, 0.32%)</title><rect x="34.7291%" y="4549" width="0.3158%" height="15" fill="rgb(230,9,30)" fg:x="134007576" fg:w="1218577"/><text x="34.9791%" y="4559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,218,577 samples, 0.32%)</title><rect x="34.7291%" y="4533" width="0.3158%" height="15" fill="rgb(230,136,20)" fg:x="134007576" fg:w="1218577"/><text x="34.9791%" y="4543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,218,577 samples, 0.32%)</title><rect x="34.7291%" y="4517" width="0.3158%" height="15" fill="rgb(215,210,22)" fg:x="134007576" fg:w="1218577"/><text x="34.9791%" y="4527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,218,577 samples, 0.32%)</title><rect x="34.7291%" y="4501" width="0.3158%" height="15" fill="rgb(218,43,5)" fg:x="134007576" fg:w="1218577"/><text x="34.9791%" y="4511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,218,577 samples, 0.32%)</title><rect x="34.7291%" y="4485" width="0.3158%" height="15" fill="rgb(216,11,5)" fg:x="134007576" fg:w="1218577"/><text x="34.9791%" y="4495.50"></text></g><g><title>alloc::alloc::alloc (1,218,577 samples, 0.32%)</title><rect x="34.7291%" y="4469" width="0.3158%" height="15" fill="rgb(209,82,29)" fg:x="134007576" fg:w="1218577"/><text x="34.9791%" y="4479.50"></text></g><g><title>malloc (1,218,577 samples, 0.32%)</title><rect x="34.7291%" y="4453" width="0.3158%" height="15" fill="rgb(244,115,12)" fg:x="134007576" fg:w="1218577"/><text x="34.9791%" y="4463.50"></text></g><g><title>[libc.so.6] (1,218,577 samples, 0.32%)</title><rect x="34.7291%" y="4437" width="0.3158%" height="15" fill="rgb(222,82,18)" fg:x="134007576" fg:w="1218577"/><text x="34.9791%" y="4447.50"></text></g><g><title>[libc.so.6] (1,218,577 samples, 0.32%)</title><rect x="34.7291%" y="4421" width="0.3158%" height="15" fill="rgb(249,227,8)" fg:x="134007576" fg:w="1218577"/><text x="34.9791%" y="4431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (501,504 samples, 0.13%)</title><rect x="35.0450%" y="4213" width="0.1300%" height="15" fill="rgb(253,141,45)" fg:x="135226153" fg:w="501504"/><text x="35.2950%" y="4223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (501,504 samples, 0.13%)</title><rect x="35.0450%" y="4197" width="0.1300%" height="15" fill="rgb(234,184,4)" fg:x="135226153" fg:w="501504"/><text x="35.2950%" y="4207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (501,504 samples, 0.13%)</title><rect x="35.0450%" y="4181" width="0.1300%" height="15" fill="rgb(218,194,23)" fg:x="135226153" fg:w="501504"/><text x="35.2950%" y="4191.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (501,504 samples, 0.13%)</title><rect x="35.0450%" y="4165" width="0.1300%" height="15" fill="rgb(235,66,41)" fg:x="135226153" fg:w="501504"/><text x="35.2950%" y="4175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (501,504 samples, 0.13%)</title><rect x="35.0450%" y="4149" width="0.1300%" height="15" fill="rgb(245,217,1)" fg:x="135226153" fg:w="501504"/><text x="35.2950%" y="4159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (501,504 samples, 0.13%)</title><rect x="35.0450%" y="4133" width="0.1300%" height="15" fill="rgb(229,91,1)" fg:x="135226153" fg:w="501504"/><text x="35.2950%" y="4143.50"></text></g><g><title>alloc::alloc::dealloc (501,504 samples, 0.13%)</title><rect x="35.0450%" y="4117" width="0.1300%" height="15" fill="rgb(207,101,30)" fg:x="135226153" fg:w="501504"/><text x="35.2950%" y="4127.50"></text></g><g><title>cfree (501,504 samples, 0.13%)</title><rect x="35.0450%" y="4101" width="0.1300%" height="15" fill="rgb(223,82,49)" fg:x="135226153" fg:w="501504"/><text x="35.2950%" y="4111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,261,570 samples, 0.33%)</title><rect x="35.1749%" y="4149" width="0.3269%" height="15" fill="rgb(218,167,17)" fg:x="135727657" fg:w="1261570"/><text x="35.4249%" y="4159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,261,570 samples, 0.33%)</title><rect x="35.1749%" y="4133" width="0.3269%" height="15" fill="rgb(208,103,14)" fg:x="135727657" fg:w="1261570"/><text x="35.4249%" y="4143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,261,570 samples, 0.33%)</title><rect x="35.1749%" y="4117" width="0.3269%" height="15" fill="rgb(238,20,8)" fg:x="135727657" fg:w="1261570"/><text x="35.4249%" y="4127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,261,570 samples, 0.33%)</title><rect x="35.1749%" y="4101" width="0.3269%" height="15" fill="rgb(218,80,54)" fg:x="135727657" fg:w="1261570"/><text x="35.4249%" y="4111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,261,570 samples, 0.33%)</title><rect x="35.1749%" y="4085" width="0.3269%" height="15" fill="rgb(240,144,17)" fg:x="135727657" fg:w="1261570"/><text x="35.4249%" y="4095.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,261,570 samples, 0.33%)</title><rect x="35.1749%" y="4069" width="0.3269%" height="15" fill="rgb(245,27,50)" fg:x="135727657" fg:w="1261570"/><text x="35.4249%" y="4079.50"></text></g><g><title>alloc::alloc::dealloc (1,261,570 samples, 0.33%)</title><rect x="35.1749%" y="4053" width="0.3269%" height="15" fill="rgb(251,51,7)" fg:x="135727657" fg:w="1261570"/><text x="35.4249%" y="4063.50"></text></g><g><title>cfree (1,261,570 samples, 0.33%)</title><rect x="35.1749%" y="4037" width="0.3269%" height="15" fill="rgb(245,217,29)" fg:x="135727657" fg:w="1261570"/><text x="35.4249%" y="4047.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,232,101 samples, 0.32%)</title><rect x="35.5019%" y="4005" width="0.3193%" height="15" fill="rgb(221,176,29)" fg:x="136989227" fg:w="1232101"/><text x="35.7519%" y="4015.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,232,101 samples, 0.32%)</title><rect x="35.5019%" y="3989" width="0.3193%" height="15" fill="rgb(212,180,24)" fg:x="136989227" fg:w="1232101"/><text x="35.7519%" y="3999.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,232,101 samples, 0.32%)</title><rect x="35.5019%" y="3973" width="0.3193%" height="15" fill="rgb(254,24,2)" fg:x="136989227" fg:w="1232101"/><text x="35.7519%" y="3983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,232,101 samples, 0.32%)</title><rect x="35.5019%" y="3957" width="0.3193%" height="15" fill="rgb(230,100,2)" fg:x="136989227" fg:w="1232101"/><text x="35.7519%" y="3967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,232,101 samples, 0.32%)</title><rect x="35.5019%" y="3941" width="0.3193%" height="15" fill="rgb(219,142,25)" fg:x="136989227" fg:w="1232101"/><text x="35.7519%" y="3951.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,232,101 samples, 0.32%)</title><rect x="35.5019%" y="3925" width="0.3193%" height="15" fill="rgb(240,73,43)" fg:x="136989227" fg:w="1232101"/><text x="35.7519%" y="3935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,232,101 samples, 0.32%)</title><rect x="35.5019%" y="3909" width="0.3193%" height="15" fill="rgb(214,114,15)" fg:x="136989227" fg:w="1232101"/><text x="35.7519%" y="3919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,232,101 samples, 0.32%)</title><rect x="35.5019%" y="3893" width="0.3193%" height="15" fill="rgb(207,130,4)" fg:x="136989227" fg:w="1232101"/><text x="35.7519%" y="3903.50"></text></g><g><title>alloc::alloc::dealloc (1,232,101 samples, 0.32%)</title><rect x="35.5019%" y="3877" width="0.3193%" height="15" fill="rgb(221,25,40)" fg:x="136989227" fg:w="1232101"/><text x="35.7519%" y="3887.50"></text></g><g><title>cfree (1,232,101 samples, 0.32%)</title><rect x="35.5019%" y="3861" width="0.3193%" height="15" fill="rgb(241,184,7)" fg:x="136989227" fg:w="1232101"/><text x="35.7519%" y="3871.50"></text></g><g><title>[libc.so.6] (1,232,101 samples, 0.32%)</title><rect x="35.5019%" y="3845" width="0.3193%" height="15" fill="rgb(235,159,4)" fg:x="136989227" fg:w="1232101"/><text x="35.7519%" y="3855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,493,741 samples, 0.65%)</title><rect x="35.5019%" y="4069" width="0.6463%" height="15" fill="rgb(214,87,48)" fg:x="136989227" fg:w="2493741"/><text x="35.7519%" y="4079.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,493,741 samples, 0.65%)</title><rect x="35.5019%" y="4053" width="0.6463%" height="15" fill="rgb(246,198,24)" fg:x="136989227" fg:w="2493741"/><text x="35.7519%" y="4063.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,493,741 samples, 0.65%)</title><rect x="35.5019%" y="4037" width="0.6463%" height="15" fill="rgb(209,66,40)" fg:x="136989227" fg:w="2493741"/><text x="35.7519%" y="4047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,493,741 samples, 0.65%)</title><rect x="35.5019%" y="4021" width="0.6463%" height="15" fill="rgb(233,147,39)" fg:x="136989227" fg:w="2493741"/><text x="35.7519%" y="4031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,261,640 samples, 0.33%)</title><rect x="35.8212%" y="4005" width="0.3270%" height="15" fill="rgb(231,145,52)" fg:x="138221328" fg:w="1261640"/><text x="36.0712%" y="4015.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,261,640 samples, 0.33%)</title><rect x="35.8212%" y="3989" width="0.3270%" height="15" fill="rgb(206,20,26)" fg:x="138221328" fg:w="1261640"/><text x="36.0712%" y="3999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,261,640 samples, 0.33%)</title><rect x="35.8212%" y="3973" width="0.3270%" height="15" fill="rgb(238,220,4)" fg:x="138221328" fg:w="1261640"/><text x="36.0712%" y="3983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,261,640 samples, 0.33%)</title><rect x="35.8212%" y="3957" width="0.3270%" height="15" fill="rgb(252,195,42)" fg:x="138221328" fg:w="1261640"/><text x="36.0712%" y="3967.50"></text></g><g><title>alloc::alloc::dealloc (1,261,640 samples, 0.33%)</title><rect x="35.8212%" y="3941" width="0.3270%" height="15" fill="rgb(209,10,6)" fg:x="138221328" fg:w="1261640"/><text x="36.0712%" y="3951.50"></text></g><g><title>cfree (1,261,640 samples, 0.33%)</title><rect x="35.8212%" y="3925" width="0.3270%" height="15" fill="rgb(229,3,52)" fg:x="138221328" fg:w="1261640"/><text x="36.0712%" y="3935.50"></text></g><g><title>[libc.so.6] (1,261,640 samples, 0.33%)</title><rect x="35.8212%" y="3909" width="0.3270%" height="15" fill="rgb(253,49,37)" fg:x="138221328" fg:w="1261640"/><text x="36.0712%" y="3919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (4,975,276 samples, 1.29%)</title><rect x="35.1749%" y="4213" width="1.2894%" height="15" fill="rgb(240,103,49)" fg:x="135727657" fg:w="4975276"/><text x="35.4249%" y="4223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,975,276 samples, 1.29%)</title><rect x="35.1749%" y="4197" width="1.2894%" height="15" fill="rgb(250,182,30)" fg:x="135727657" fg:w="4975276"/><text x="35.4249%" y="4207.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (4,975,276 samples, 1.29%)</title><rect x="35.1749%" y="4181" width="1.2894%" height="15" fill="rgb(248,8,30)" fg:x="135727657" fg:w="4975276"/><text x="35.4249%" y="4191.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (4,975,276 samples, 1.29%)</title><rect x="35.1749%" y="4165" width="1.2894%" height="15" fill="rgb(237,120,30)" fg:x="135727657" fg:w="4975276"/><text x="35.4249%" y="4175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,713,706 samples, 0.96%)</title><rect x="35.5019%" y="4149" width="0.9624%" height="15" fill="rgb(221,146,34)" fg:x="136989227" fg:w="3713706"/><text x="35.7519%" y="4159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,713,706 samples, 0.96%)</title><rect x="35.5019%" y="4133" width="0.9624%" height="15" fill="rgb(242,55,13)" fg:x="136989227" fg:w="3713706"/><text x="35.7519%" y="4143.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,713,706 samples, 0.96%)</title><rect x="35.5019%" y="4117" width="0.9624%" height="15" fill="rgb(242,112,31)" fg:x="136989227" fg:w="3713706"/><text x="35.7519%" y="4127.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,713,706 samples, 0.96%)</title><rect x="35.5019%" y="4101" width="0.9624%" height="15" fill="rgb(249,192,27)" fg:x="136989227" fg:w="3713706"/><text x="35.7519%" y="4111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,713,706 samples, 0.96%)</title><rect x="35.5019%" y="4085" width="0.9624%" height="15" fill="rgb(208,204,44)" fg:x="136989227" fg:w="3713706"/><text x="35.7519%" y="4095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,219,965 samples, 0.32%)</title><rect x="36.1481%" y="4069" width="0.3162%" height="15" fill="rgb(208,93,54)" fg:x="139482968" fg:w="1219965"/><text x="36.3981%" y="4079.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,219,965 samples, 0.32%)</title><rect x="36.1481%" y="4053" width="0.3162%" height="15" fill="rgb(242,1,31)" fg:x="139482968" fg:w="1219965"/><text x="36.3981%" y="4063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,219,965 samples, 0.32%)</title><rect x="36.1481%" y="4037" width="0.3162%" height="15" fill="rgb(241,83,25)" fg:x="139482968" fg:w="1219965"/><text x="36.3981%" y="4047.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,219,965 samples, 0.32%)</title><rect x="36.1481%" y="4021" width="0.3162%" height="15" fill="rgb(205,169,50)" fg:x="139482968" fg:w="1219965"/><text x="36.3981%" y="4031.50"></text></g><g><title>alloc::alloc::dealloc (1,219,965 samples, 0.32%)</title><rect x="36.1481%" y="4005" width="0.3162%" height="15" fill="rgb(239,186,37)" fg:x="139482968" fg:w="1219965"/><text x="36.3981%" y="4015.50"></text></g><g><title>cfree (1,219,965 samples, 0.32%)</title><rect x="36.1481%" y="3989" width="0.3162%" height="15" fill="rgb(205,221,10)" fg:x="139482968" fg:w="1219965"/><text x="36.3981%" y="3999.50"></text></g><g><title>[libc.so.6] (1,219,965 samples, 0.32%)</title><rect x="36.1481%" y="3973" width="0.3162%" height="15" fill="rgb(218,196,15)" fg:x="139482968" fg:w="1219965"/><text x="36.3981%" y="3983.50"></text></g><g><title>[libc.so.6] (1,219,965 samples, 0.32%)</title><rect x="36.1481%" y="3957" width="0.3162%" height="15" fill="rgb(218,196,35)" fg:x="139482968" fg:w="1219965"/><text x="36.3981%" y="3967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,724,883 samples, 1.74%)</title><rect x="35.0450%" y="4261" width="1.7428%" height="15" fill="rgb(233,63,24)" fg:x="135226153" fg:w="6724883"/><text x="35.2950%" y="4271.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,724,883 samples, 1.74%)</title><rect x="35.0450%" y="4245" width="1.7428%" height="15" fill="rgb(225,8,4)" fg:x="135226153" fg:w="6724883"/><text x="35.2950%" y="4255.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,724,883 samples, 1.74%)</title><rect x="35.0450%" y="4229" width="1.7428%" height="15" fill="rgb(234,105,35)" fg:x="135226153" fg:w="6724883"/><text x="35.2950%" y="4239.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,248,103 samples, 0.32%)</title><rect x="36.4643%" y="4213" width="0.3235%" height="15" fill="rgb(236,21,32)" fg:x="140702933" fg:w="1248103"/><text x="36.7143%" y="4223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,248,103 samples, 0.32%)</title><rect x="36.4643%" y="4197" width="0.3235%" height="15" fill="rgb(228,109,6)" fg:x="140702933" fg:w="1248103"/><text x="36.7143%" y="4207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,248,103 samples, 0.32%)</title><rect x="36.4643%" y="4181" width="0.3235%" height="15" fill="rgb(229,215,31)" fg:x="140702933" fg:w="1248103"/><text x="36.7143%" y="4191.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,248,103 samples, 0.32%)</title><rect x="36.4643%" y="4165" width="0.3235%" height="15" fill="rgb(221,52,54)" fg:x="140702933" fg:w="1248103"/><text x="36.7143%" y="4175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,248,103 samples, 0.32%)</title><rect x="36.4643%" y="4149" width="0.3235%" height="15" fill="rgb(252,129,43)" fg:x="140702933" fg:w="1248103"/><text x="36.7143%" y="4159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,248,103 samples, 0.32%)</title><rect x="36.4643%" y="4133" width="0.3235%" height="15" fill="rgb(248,183,27)" fg:x="140702933" fg:w="1248103"/><text x="36.7143%" y="4143.50"></text></g><g><title>alloc::alloc::dealloc (1,248,103 samples, 0.32%)</title><rect x="36.4643%" y="4117" width="0.3235%" height="15" fill="rgb(250,0,22)" fg:x="140702933" fg:w="1248103"/><text x="36.7143%" y="4127.50"></text></g><g><title>cfree (1,248,103 samples, 0.32%)</title><rect x="36.4643%" y="4101" width="0.3235%" height="15" fill="rgb(213,166,10)" fg:x="140702933" fg:w="1248103"/><text x="36.7143%" y="4111.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4805" width="2.0674%" height="15" fill="rgb(207,163,36)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4815.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4789" width="2.0674%" height="15" fill="rgb(208,122,22)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4799.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4773" width="2.0674%" height="15" fill="rgb(207,104,49)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4783.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4757" width="2.0674%" height="15" fill="rgb(248,211,50)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4767.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4741" width="2.0674%" height="15" fill="rgb(217,13,45)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4751.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4725" width="2.0674%" height="15" fill="rgb(211,216,49)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4735.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4709" width="2.0674%" height="15" fill="rgb(221,58,53)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4719.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4693" width="2.0674%" height="15" fill="rgb(220,112,41)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4703.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4677" width="2.0674%" height="15" fill="rgb(236,38,28)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4687.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4661" width="2.0674%" height="15" fill="rgb(227,195,22)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4671.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4645" width="2.0674%" height="15" fill="rgb(214,55,33)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4655.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4629" width="2.0674%" height="15" fill="rgb(248,80,13)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4639.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4613" width="2.0674%" height="15" fill="rgb(238,52,6)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4623.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4597" width="2.0674%" height="15" fill="rgb(224,198,47)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4607.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4581" width="2.0674%" height="15" fill="rgb(233,171,20)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4591.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4565" width="2.0674%" height="15" fill="rgb(241,30,25)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4575.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4549" width="2.0674%" height="15" fill="rgb(207,171,38)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4559.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4533" width="2.0674%" height="15" fill="rgb(234,70,1)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4543.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4517" width="2.0674%" height="15" fill="rgb(232,178,18)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4527.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4501" width="2.0674%" height="15" fill="rgb(241,78,40)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4485" width="2.0674%" height="15" fill="rgb(222,35,25)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4495.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4469" width="2.0674%" height="15" fill="rgb(207,92,16)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4479.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4453" width="2.0674%" height="15" fill="rgb(216,59,51)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4463.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4437" width="2.0674%" height="15" fill="rgb(213,80,28)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4421" width="2.0674%" height="15" fill="rgb(220,93,7)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4405" width="2.0674%" height="15" fill="rgb(225,24,44)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4415.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4389" width="2.0674%" height="15" fill="rgb(243,74,40)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4399.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4373" width="2.0674%" height="15" fill="rgb(228,39,7)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4383.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4357" width="2.0674%" height="15" fill="rgb(227,79,8)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4367.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4341" width="2.0674%" height="15" fill="rgb(236,58,11)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4351.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4325" width="2.0674%" height="15" fill="rgb(249,63,35)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4335.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4309" width="2.0674%" height="15" fill="rgb(252,114,16)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4319.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4293" width="2.0674%" height="15" fill="rgb(254,151,24)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4303.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,977,519 samples, 2.07%)</title><rect x="35.0450%" y="4277" width="2.0674%" height="15" fill="rgb(253,54,39)" fg:x="135226153" fg:w="7977519"/><text x="35.2950%" y="4287.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,252,636 samples, 0.32%)</title><rect x="36.7878%" y="4261" width="0.3246%" height="15" fill="rgb(243,25,45)" fg:x="141951036" fg:w="1252636"/><text x="37.0378%" y="4271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,252,636 samples, 0.32%)</title><rect x="36.7878%" y="4245" width="0.3246%" height="15" fill="rgb(234,134,9)" fg:x="141951036" fg:w="1252636"/><text x="37.0378%" y="4255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,252,636 samples, 0.32%)</title><rect x="36.7878%" y="4229" width="0.3246%" height="15" fill="rgb(227,166,31)" fg:x="141951036" fg:w="1252636"/><text x="37.0378%" y="4239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,252,636 samples, 0.32%)</title><rect x="36.7878%" y="4213" width="0.3246%" height="15" fill="rgb(245,143,41)" fg:x="141951036" fg:w="1252636"/><text x="37.0378%" y="4223.50"></text></g><g><title>alloc::alloc::dealloc (1,252,636 samples, 0.32%)</title><rect x="36.7878%" y="4197" width="0.3246%" height="15" fill="rgb(238,181,32)" fg:x="141951036" fg:w="1252636"/><text x="37.0378%" y="4207.50"></text></g><g><title>cfree (1,252,636 samples, 0.32%)</title><rect x="36.7878%" y="4181" width="0.3246%" height="15" fill="rgb(224,113,18)" fg:x="141951036" fg:w="1252636"/><text x="37.0378%" y="4191.50"></text></g><g><title>[libc.so.6] (1,252,636 samples, 0.32%)</title><rect x="36.7878%" y="4165" width="0.3246%" height="15" fill="rgb(240,229,28)" fg:x="141951036" fg:w="1252636"/><text x="37.0378%" y="4175.50"></text></g><g><title>[libc.so.6] (1,252,636 samples, 0.32%)</title><rect x="36.7878%" y="4149" width="0.3246%" height="15" fill="rgb(250,185,3)" fg:x="141951036" fg:w="1252636"/><text x="37.0378%" y="4159.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,178,420 samples, 0.31%)</title><rect x="37.1124%" y="4789" width="0.3054%" height="15" fill="rgb(212,59,25)" fg:x="143203672" fg:w="1178420"/><text x="37.3624%" y="4799.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,178,420 samples, 0.31%)</title><rect x="37.1124%" y="4773" width="0.3054%" height="15" fill="rgb(221,87,20)" fg:x="143203672" fg:w="1178420"/><text x="37.3624%" y="4783.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,178,420 samples, 0.31%)</title><rect x="37.1124%" y="4757" width="0.3054%" height="15" fill="rgb(213,74,28)" fg:x="143203672" fg:w="1178420"/><text x="37.3624%" y="4767.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,178,420 samples, 0.31%)</title><rect x="37.1124%" y="4741" width="0.3054%" height="15" fill="rgb(224,132,34)" fg:x="143203672" fg:w="1178420"/><text x="37.3624%" y="4751.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,178,420 samples, 0.31%)</title><rect x="37.1124%" y="4725" width="0.3054%" height="15" fill="rgb(222,101,24)" fg:x="143203672" fg:w="1178420"/><text x="37.3624%" y="4735.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,178,420 samples, 0.31%)</title><rect x="37.1124%" y="4709" width="0.3054%" height="15" fill="rgb(254,142,4)" fg:x="143203672" fg:w="1178420"/><text x="37.3624%" y="4719.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (1,215,343 samples, 0.31%)</title><rect x="37.4178%" y="4773" width="0.3150%" height="15" fill="rgb(230,229,49)" fg:x="144382092" fg:w="1215343"/><text x="37.6678%" y="4783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1,215,343 samples, 0.31%)</title><rect x="37.4178%" y="4757" width="0.3150%" height="15" fill="rgb(238,70,47)" fg:x="144382092" fg:w="1215343"/><text x="37.6678%" y="4767.50"></text></g><g><title>alloc::str::convert_while_ascii (1,215,343 samples, 0.31%)</title><rect x="37.4178%" y="4741" width="0.3150%" height="15" fill="rgb(231,160,17)" fg:x="144382092" fg:w="1215343"/><text x="37.6678%" y="4751.50"></text></g><g><title>main::benchmark::json_to_html_node (2,399,858 samples, 0.62%)</title><rect x="37.4178%" y="4789" width="0.6219%" height="15" fill="rgb(218,68,53)" fg:x="144382092" fg:w="2399858"/><text x="37.6678%" y="4799.50"></text></g><g><title>main::benchmark::json_to_html_node (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4773" width="0.3070%" height="15" fill="rgb(236,111,10)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4783.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4757" width="0.3070%" height="15" fill="rgb(224,34,41)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4767.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4741" width="0.3070%" height="15" fill="rgb(241,118,19)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4751.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4725" width="0.3070%" height="15" fill="rgb(238,129,25)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4709" width="0.3070%" height="15" fill="rgb(238,22,31)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4719.50"></text></g><g><title>alloc::string::String::push_str (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4693" width="0.3070%" height="15" fill="rgb(222,174,48)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4677" width="0.3070%" height="15" fill="rgb(206,152,40)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4661" width="0.3070%" height="15" fill="rgb(218,99,54)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4645" width="0.3070%" height="15" fill="rgb(220,174,26)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4629" width="0.3070%" height="15" fill="rgb(245,116,9)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4613" width="0.3070%" height="15" fill="rgb(209,72,35)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4597" width="0.3070%" height="15" fill="rgb(226,126,21)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4581" width="0.3070%" height="15" fill="rgb(227,192,1)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4565" width="0.3070%" height="15" fill="rgb(237,180,29)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4575.50"></text></g><g><title>core::cmp::max (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4549" width="0.3070%" height="15" fill="rgb(230,197,35)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4559.50"></text></g><g><title>core::cmp::Ord::max (1,184,515 samples, 0.31%)</title><rect x="37.7328%" y="4533" width="0.3070%" height="15" fill="rgb(246,193,31)" fg:x="145597435" fg:w="1184515"/><text x="37.9828%" y="4543.50"></text></g><g><title>core::fmt::Formatter::write_str (1,222,689 samples, 0.32%)</title><rect x="38.0397%" y="4565" width="0.3169%" height="15" fill="rgb(241,36,4)" fg:x="146781950" fg:w="1222689"/><text x="38.2897%" y="4575.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1,222,689 samples, 0.32%)</title><rect x="38.0397%" y="4549" width="0.3169%" height="15" fill="rgb(241,130,17)" fg:x="146781950" fg:w="1222689"/><text x="38.2897%" y="4559.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1,222,689 samples, 0.32%)</title><rect x="38.0397%" y="4533" width="0.3169%" height="15" fill="rgb(206,137,32)" fg:x="146781950" fg:w="1222689"/><text x="38.2897%" y="4543.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1,222,689 samples, 0.32%)</title><rect x="38.0397%" y="4517" width="0.3169%" height="15" fill="rgb(237,228,51)" fg:x="146781950" fg:w="1222689"/><text x="38.2897%" y="4527.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1,222,689 samples, 0.32%)</title><rect x="38.0397%" y="4501" width="0.3169%" height="15" fill="rgb(243,6,42)" fg:x="146781950" fg:w="1222689"/><text x="38.2897%" y="4511.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1,222,689 samples, 0.32%)</title><rect x="38.0397%" y="4485" width="0.3169%" height="15" fill="rgb(251,74,28)" fg:x="146781950" fg:w="1222689"/><text x="38.2897%" y="4495.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (1,222,689 samples, 0.32%)</title><rect x="38.0397%" y="4469" width="0.3169%" height="15" fill="rgb(218,20,49)" fg:x="146781950" fg:w="1222689"/><text x="38.2897%" y="4479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,222,689 samples, 0.32%)</title><rect x="38.0397%" y="4453" width="0.3169%" height="15" fill="rgb(238,28,14)" fg:x="146781950" fg:w="1222689"/><text x="38.2897%" y="4463.50"></text></g><g><title>[libc.so.6] (1,222,689 samples, 0.32%)</title><rect x="38.0397%" y="4437" width="0.3169%" height="15" fill="rgb(229,40,46)" fg:x="146781950" fg:w="1222689"/><text x="38.2897%" y="4447.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1,237,473 samples, 0.32%)</title><rect x="38.3566%" y="4533" width="0.3207%" height="15" fill="rgb(244,195,20)" fg:x="148004639" fg:w="1237473"/><text x="38.6066%" y="4543.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1,237,473 samples, 0.32%)</title><rect x="38.3566%" y="4517" width="0.3207%" height="15" fill="rgb(253,56,35)" fg:x="148004639" fg:w="1237473"/><text x="38.6066%" y="4527.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1,237,473 samples, 0.32%)</title><rect x="38.3566%" y="4501" width="0.3207%" height="15" fill="rgb(210,149,44)" fg:x="148004639" fg:w="1237473"/><text x="38.6066%" y="4511.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1,237,473 samples, 0.32%)</title><rect x="38.3566%" y="4485" width="0.3207%" height="15" fill="rgb(240,135,12)" fg:x="148004639" fg:w="1237473"/><text x="38.6066%" y="4495.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1,237,473 samples, 0.32%)</title><rect x="38.3566%" y="4469" width="0.3207%" height="15" fill="rgb(251,24,50)" fg:x="148004639" fg:w="1237473"/><text x="38.6066%" y="4479.50"></text></g><g><title>main::benchmark::apply_frame_modifications (7,276,684 samples, 1.89%)</title><rect x="37.1124%" y="4805" width="1.8858%" height="15" fill="rgb(243,200,47)" fg:x="143203672" fg:w="7276684"/><text x="37.3624%" y="4815.50">m..</text></g><g><title>std::io::stdio::_print (3,698,406 samples, 0.96%)</title><rect x="38.0397%" y="4789" width="0.9585%" height="15" fill="rgb(224,166,26)" fg:x="146781950" fg:w="3698406"/><text x="38.2897%" y="4799.50"></text></g><g><title>std::io::stdio::print_to (3,698,406 samples, 0.96%)</title><rect x="38.0397%" y="4773" width="0.9585%" height="15" fill="rgb(233,0,47)" fg:x="146781950" fg:w="3698406"/><text x="38.2897%" y="4783.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (3,698,406 samples, 0.96%)</title><rect x="38.0397%" y="4757" width="0.9585%" height="15" fill="rgb(253,80,5)" fg:x="146781950" fg:w="3698406"/><text x="38.2897%" y="4767.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (3,698,406 samples, 0.96%)</title><rect x="38.0397%" y="4741" width="0.9585%" height="15" fill="rgb(214,133,25)" fg:x="146781950" fg:w="3698406"/><text x="38.2897%" y="4751.50"></text></g><g><title>std::io::Write::write_fmt (3,698,406 samples, 0.96%)</title><rect x="38.0397%" y="4725" width="0.9585%" height="15" fill="rgb(209,27,14)" fg:x="146781950" fg:w="3698406"/><text x="38.2897%" y="4735.50"></text></g><g><title>core::fmt::write (3,698,406 samples, 0.96%)</title><rect x="38.0397%" y="4709" width="0.9585%" height="15" fill="rgb(219,102,51)" fg:x="146781950" fg:w="3698406"/><text x="38.2897%" y="4719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3,698,406 samples, 0.96%)</title><rect x="38.0397%" y="4693" width="0.9585%" height="15" fill="rgb(237,18,16)" fg:x="146781950" fg:w="3698406"/><text x="38.2897%" y="4703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (3,698,406 samples, 0.96%)</title><rect x="38.0397%" y="4677" width="0.9585%" height="15" fill="rgb(241,85,17)" fg:x="146781950" fg:w="3698406"/><text x="38.2897%" y="4687.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (3,698,406 samples, 0.96%)</title><rect x="38.0397%" y="4661" width="0.9585%" height="15" fill="rgb(236,90,42)" fg:x="146781950" fg:w="3698406"/><text x="38.2897%" y="4671.50"></text></g><g><title>core::fmt::builders::DebugList::entries (3,698,406 samples, 0.96%)</title><rect x="38.0397%" y="4645" width="0.9585%" height="15" fill="rgb(249,57,21)" fg:x="146781950" fg:w="3698406"/><text x="38.2897%" y="4655.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (3,698,406 samples, 0.96%)</title><rect x="38.0397%" y="4629" width="0.9585%" height="15" fill="rgb(243,12,36)" fg:x="146781950" fg:w="3698406"/><text x="38.2897%" y="4639.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with (3,698,406 samples, 0.96%)</title><rect x="38.0397%" y="4613" width="0.9585%" height="15" fill="rgb(253,128,47)" fg:x="146781950" fg:w="3698406"/><text x="38.2897%" y="4623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3,698,406 samples, 0.96%)</title><rect x="38.0397%" y="4597" width="0.9585%" height="15" fill="rgb(207,33,20)" fg:x="146781950" fg:w="3698406"/><text x="38.2897%" y="4607.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with::_{{closure}} (3,698,406 samples, 0.96%)</title><rect x="38.0397%" y="4581" width="0.9585%" height="15" fill="rgb(233,215,35)" fg:x="146781950" fg:w="3698406"/><text x="38.2897%" y="4591.50"></text></g><g><title>core::fmt::builders::DebugSet::entry::_{{closure}} (2,475,717 samples, 0.64%)</title><rect x="38.3566%" y="4565" width="0.6416%" height="15" fill="rgb(249,188,52)" fg:x="148004639" fg:w="2475717"/><text x="38.6066%" y="4575.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (2,475,717 samples, 0.64%)</title><rect x="38.3566%" y="4549" width="0.6416%" height="15" fill="rgb(225,12,32)" fg:x="148004639" fg:w="2475717"/><text x="38.6066%" y="4559.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1,238,244 samples, 0.32%)</title><rect x="38.6773%" y="4533" width="0.3209%" height="15" fill="rgb(247,98,14)" fg:x="149242112" fg:w="1238244"/><text x="38.9273%" y="4543.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,251,585 samples, 0.32%)</title><rect x="38.9982%" y="4805" width="0.3244%" height="15" fill="rgb(247,219,48)" fg:x="150480356" fg:w="1251585"/><text x="39.2482%" y="4815.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,251,585 samples, 0.32%)</title><rect x="38.9982%" y="4789" width="0.3244%" height="15" fill="rgb(253,60,48)" fg:x="150480356" fg:w="1251585"/><text x="39.2482%" y="4799.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,251,585 samples, 0.32%)</title><rect x="38.9982%" y="4773" width="0.3244%" height="15" fill="rgb(245,15,52)" fg:x="150480356" fg:w="1251585"/><text x="39.2482%" y="4783.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,251,585 samples, 0.32%)</title><rect x="38.9982%" y="4757" width="0.3244%" height="15" fill="rgb(220,133,28)" fg:x="150480356" fg:w="1251585"/><text x="39.2482%" y="4767.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,251,585 samples, 0.32%)</title><rect x="38.9982%" y="4741" width="0.3244%" height="15" fill="rgb(217,180,4)" fg:x="150480356" fg:w="1251585"/><text x="39.2482%" y="4751.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,251,585 samples, 0.32%)</title><rect x="38.9982%" y="4725" width="0.3244%" height="15" fill="rgb(251,24,1)" fg:x="150480356" fg:w="1251585"/><text x="39.2482%" y="4735.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,251,585 samples, 0.32%)</title><rect x="38.9982%" y="4709" width="0.3244%" height="15" fill="rgb(212,185,49)" fg:x="150480356" fg:w="1251585"/><text x="39.2482%" y="4719.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,251,585 samples, 0.32%)</title><rect x="38.9982%" y="4693" width="0.3244%" height="15" fill="rgb(215,175,22)" fg:x="150480356" fg:w="1251585"/><text x="39.2482%" y="4703.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,251,585 samples, 0.32%)</title><rect x="38.9982%" y="4677" width="0.3244%" height="15" fill="rgb(250,205,14)" fg:x="150480356" fg:w="1251585"/><text x="39.2482%" y="4687.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,251,585 samples, 0.32%)</title><rect x="38.9982%" y="4661" width="0.3244%" height="15" fill="rgb(225,211,22)" fg:x="150480356" fg:w="1251585"/><text x="39.2482%" y="4671.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,251,585 samples, 0.32%)</title><rect x="38.9982%" y="4645" width="0.3244%" height="15" fill="rgb(251,179,42)" fg:x="150480356" fg:w="1251585"/><text x="39.2482%" y="4655.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,251,585 samples, 0.32%)</title><rect x="38.9982%" y="4629" width="0.3244%" height="15" fill="rgb(208,216,51)" fg:x="150480356" fg:w="1251585"/><text x="39.2482%" y="4639.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,251,585 samples, 0.32%)</title><rect x="38.9982%" y="4613" width="0.3244%" height="15" fill="rgb(235,36,11)" fg:x="150480356" fg:w="1251585"/><text x="39.2482%" y="4623.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,251,585 samples, 0.32%)</title><rect x="38.9982%" y="4597" width="0.3244%" height="15" fill="rgb(213,189,28)" fg:x="150480356" fg:w="1251585"/><text x="39.2482%" y="4607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;css_bitvector_compiler::BitVector&gt;&gt; (1,251,585 samples, 0.32%)</title><rect x="38.9982%" y="4581" width="0.3244%" height="15" fill="rgb(227,203,42)" fg:x="150480356" fg:w="1251585"/><text x="39.2482%" y="4591.50"></text></g><g><title>main::benchmark::count_nodes (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4805" width="0.3264%" height="15" fill="rgb(244,72,36)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4789" width="0.3264%" height="15" fill="rgb(213,53,17)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4799.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4773" width="0.3264%" height="15" fill="rgb(207,167,3)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4757" width="0.3264%" height="15" fill="rgb(216,98,30)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4741" width="0.3264%" height="15" fill="rgb(236,123,15)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4751.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4725" width="0.3264%" height="15" fill="rgb(248,81,50)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4735.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4709" width="0.3264%" height="15" fill="rgb(214,120,4)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4719.50"></text></g><g><title>main::benchmark::count_nodes (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4693" width="0.3264%" height="15" fill="rgb(208,179,34)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4677" width="0.3264%" height="15" fill="rgb(227,140,7)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4687.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4661" width="0.3264%" height="15" fill="rgb(214,22,6)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4645" width="0.3264%" height="15" fill="rgb(207,137,27)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4629" width="0.3264%" height="15" fill="rgb(210,8,46)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4639.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4613" width="0.3264%" height="15" fill="rgb(240,16,54)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4597" width="0.3264%" height="15" fill="rgb(211,209,29)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4607.50"></text></g><g><title>main::benchmark::count_nodes (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4581" width="0.3264%" height="15" fill="rgb(226,228,24)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4565" width="0.3264%" height="15" fill="rgb(222,84,9)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4575.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4549" width="0.3264%" height="15" fill="rgb(234,203,30)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4533" width="0.3264%" height="15" fill="rgb(238,109,14)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4517" width="0.3264%" height="15" fill="rgb(233,206,34)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4527.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4501" width="0.3264%" height="15" fill="rgb(220,167,47)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4485" width="0.3264%" height="15" fill="rgb(238,105,10)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4495.50"></text></g><g><title>main::benchmark::count_nodes (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4469" width="0.3264%" height="15" fill="rgb(213,227,17)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4453" width="0.3264%" height="15" fill="rgb(217,132,38)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4463.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4437" width="0.3264%" height="15" fill="rgb(242,146,4)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4421" width="0.3264%" height="15" fill="rgb(212,61,9)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4405" width="0.3264%" height="15" fill="rgb(247,126,22)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4415.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4389" width="0.3264%" height="15" fill="rgb(220,196,2)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4399.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4373" width="0.3264%" height="15" fill="rgb(208,46,4)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4383.50"></text></g><g><title>main::benchmark::count_nodes (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4357" width="0.3264%" height="15" fill="rgb(252,104,46)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4341" width="0.3264%" height="15" fill="rgb(237,152,48)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4351.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4325" width="0.3264%" height="15" fill="rgb(221,59,37)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4309" width="0.3264%" height="15" fill="rgb(209,202,51)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4293" width="0.3264%" height="15" fill="rgb(228,81,30)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4303.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4277" width="0.3264%" height="15" fill="rgb(227,42,39)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4287.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4261" width="0.3264%" height="15" fill="rgb(221,26,2)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4271.50"></text></g><g><title>main::benchmark::count_nodes (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4245" width="0.3264%" height="15" fill="rgb(254,61,31)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4229" width="0.3264%" height="15" fill="rgb(222,173,38)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4239.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4213" width="0.3264%" height="15" fill="rgb(218,50,12)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4197" width="0.3264%" height="15" fill="rgb(223,88,40)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4181" width="0.3264%" height="15" fill="rgb(237,54,19)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4191.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4165" width="0.3264%" height="15" fill="rgb(251,129,25)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4175.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4149" width="0.3264%" height="15" fill="rgb(238,97,19)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4159.50"></text></g><g><title>main::benchmark::count_nodes (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4133" width="0.3264%" height="15" fill="rgb(240,169,18)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4117" width="0.3264%" height="15" fill="rgb(230,187,49)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4127.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4101" width="0.3264%" height="15" fill="rgb(209,44,26)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4111.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4085" width="0.3264%" height="15" fill="rgb(244,0,6)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4095.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4069" width="0.3264%" height="15" fill="rgb(248,18,21)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4079.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4053" width="0.3264%" height="15" fill="rgb(245,180,19)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4063.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4037" width="0.3264%" height="15" fill="rgb(252,118,36)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4047.50"></text></g><g><title>main::benchmark::count_nodes (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4021" width="0.3264%" height="15" fill="rgb(210,224,19)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4031.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="4005" width="0.3264%" height="15" fill="rgb(218,30,24)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="4015.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3989" width="0.3264%" height="15" fill="rgb(219,75,50)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3999.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3973" width="0.3264%" height="15" fill="rgb(234,72,50)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3983.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3957" width="0.3264%" height="15" fill="rgb(219,100,48)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3967.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3941" width="0.3264%" height="15" fill="rgb(253,5,41)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3951.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3925" width="0.3264%" height="15" fill="rgb(247,181,11)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3935.50"></text></g><g><title>main::benchmark::count_nodes (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3909" width="0.3264%" height="15" fill="rgb(222,223,25)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3893" width="0.3264%" height="15" fill="rgb(214,198,28)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3903.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3877" width="0.3264%" height="15" fill="rgb(230,46,43)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3861" width="0.3264%" height="15" fill="rgb(233,65,53)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3871.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3845" width="0.3264%" height="15" fill="rgb(221,121,27)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3855.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3829" width="0.3264%" height="15" fill="rgb(247,70,47)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3839.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3813" width="0.3264%" height="15" fill="rgb(228,85,35)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3823.50"></text></g><g><title>main::benchmark::count_nodes (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3797" width="0.3264%" height="15" fill="rgb(209,50,18)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3781" width="0.3264%" height="15" fill="rgb(250,19,35)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3791.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3765" width="0.3264%" height="15" fill="rgb(253,107,29)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3749" width="0.3264%" height="15" fill="rgb(252,179,29)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3759.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3733" width="0.3264%" height="15" fill="rgb(238,194,6)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3743.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3717" width="0.3264%" height="15" fill="rgb(238,164,29)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3727.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3701" width="0.3264%" height="15" fill="rgb(224,25,9)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3711.50"></text></g><g><title>main::benchmark::count_nodes (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3685" width="0.3264%" height="15" fill="rgb(244,153,23)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3669" width="0.3264%" height="15" fill="rgb(212,203,14)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3679.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3653" width="0.3264%" height="15" fill="rgb(220,164,20)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3637" width="0.3264%" height="15" fill="rgb(222,203,48)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3647.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3621" width="0.3264%" height="15" fill="rgb(215,159,22)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3631.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3605" width="0.3264%" height="15" fill="rgb(216,183,47)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3615.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3589" width="0.3264%" height="15" fill="rgb(229,195,25)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3599.50"></text></g><g><title>main::benchmark::count_nodes (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3573" width="0.3264%" height="15" fill="rgb(224,132,51)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3557" width="0.3264%" height="15" fill="rgb(240,63,7)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3567.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3541" width="0.3264%" height="15" fill="rgb(249,182,41)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3551.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3525" width="0.3264%" height="15" fill="rgb(243,47,26)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3535.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3509" width="0.3264%" height="15" fill="rgb(233,48,2)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3519.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3493" width="0.3264%" height="15" fill="rgb(244,165,34)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3503.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3477" width="0.3264%" height="15" fill="rgb(207,89,7)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3487.50"></text></g><g><title>main::benchmark::count_nodes (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3461" width="0.3264%" height="15" fill="rgb(244,117,36)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3445" width="0.3264%" height="15" fill="rgb(226,144,34)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3455.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3429" width="0.3264%" height="15" fill="rgb(213,23,19)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3439.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3413" width="0.3264%" height="15" fill="rgb(217,75,12)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3423.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3397" width="0.3264%" height="15" fill="rgb(224,159,17)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3407.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3381" width="0.3264%" height="15" fill="rgb(217,118,1)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3391.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3365" width="0.3264%" height="15" fill="rgb(232,180,48)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3375.50"></text></g><g><title>main::benchmark::count_nodes (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3349" width="0.3264%" height="15" fill="rgb(230,27,33)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3333" width="0.3264%" height="15" fill="rgb(205,31,21)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,259,382 samples, 0.33%)</title><rect x="39.3226%" y="3317" width="0.3264%" height="15" fill="rgb(253,59,4)" fg:x="151731941" fg:w="1259382"/><text x="39.5726%" y="3327.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (1,242,039 samples, 0.32%)</title><rect x="39.6489%" y="4757" width="0.3219%" height="15" fill="rgb(224,201,9)" fg:x="152991323" fg:w="1242039"/><text x="39.8989%" y="4767.50"></text></g><g><title>main::benchmark::matches_class_id (1,242,039 samples, 0.32%)</title><rect x="39.6489%" y="4741" width="0.3219%" height="15" fill="rgb(229,206,30)" fg:x="152991323" fg:w="1242039"/><text x="39.8989%" y="4751.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (1,215,163 samples, 0.31%)</title><rect x="39.9708%" y="4725" width="0.3149%" height="15" fill="rgb(212,67,47)" fg:x="154233362" fg:w="1215163"/><text x="40.2208%" y="4735.50"></text></g><g><title>main::benchmark::matches_id_id (1,215,163 samples, 0.31%)</title><rect x="39.9708%" y="4709" width="0.3149%" height="15" fill="rgb(211,96,50)" fg:x="154233362" fg:w="1215163"/><text x="40.2208%" y="4719.50"></text></g><g><title>main::benchmark::get_node_id_id (1,215,163 samples, 0.31%)</title><rect x="39.9708%" y="4693" width="0.3149%" height="15" fill="rgb(252,114,18)" fg:x="154233362" fg:w="1215163"/><text x="40.2208%" y="4703.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,215,163 samples, 0.31%)</title><rect x="39.9708%" y="4677" width="0.3149%" height="15" fill="rgb(223,58,37)" fg:x="154233362" fg:w="1215163"/><text x="40.2208%" y="4687.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (1,215,163 samples, 0.31%)</title><rect x="39.9708%" y="4661" width="0.3149%" height="15" fill="rgb(237,70,4)" fg:x="154233362" fg:w="1215163"/><text x="40.2208%" y="4671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,215,163 samples, 0.31%)</title><rect x="39.9708%" y="4645" width="0.3149%" height="15" fill="rgb(244,85,46)" fg:x="154233362" fg:w="1215163"/><text x="40.2208%" y="4655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,215,163 samples, 0.31%)</title><rect x="39.9708%" y="4629" width="0.3149%" height="15" fill="rgb(223,39,52)" fg:x="154233362" fg:w="1215163"/><text x="40.2208%" y="4639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,215,163 samples, 0.31%)</title><rect x="39.9708%" y="4613" width="0.3149%" height="15" fill="rgb(218,200,14)" fg:x="154233362" fg:w="1215163"/><text x="40.2208%" y="4623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,215,163 samples, 0.31%)</title><rect x="39.9708%" y="4597" width="0.3149%" height="15" fill="rgb(208,171,16)" fg:x="154233362" fg:w="1215163"/><text x="40.2208%" y="4607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,215,163 samples, 0.31%)</title><rect x="39.9708%" y="4581" width="0.3149%" height="15" fill="rgb(234,200,18)" fg:x="154233362" fg:w="1215163"/><text x="40.2208%" y="4591.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,215,163 samples, 0.31%)</title><rect x="39.9708%" y="4565" width="0.3149%" height="15" fill="rgb(228,45,11)" fg:x="154233362" fg:w="1215163"/><text x="40.2208%" y="4575.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,215,163 samples, 0.31%)</title><rect x="39.9708%" y="4549" width="0.3149%" height="15" fill="rgb(237,182,11)" fg:x="154233362" fg:w="1215163"/><text x="40.2208%" y="4559.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,215,163 samples, 0.31%)</title><rect x="39.9708%" y="4533" width="0.3149%" height="15" fill="rgb(241,175,49)" fg:x="154233362" fg:w="1215163"/><text x="40.2208%" y="4543.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (1,229,258 samples, 0.32%)</title><rect x="40.2857%" y="4693" width="0.3186%" height="15" fill="rgb(247,38,35)" fg:x="155448525" fg:w="1229258"/><text x="40.5357%" y="4703.50"></text></g><g><title>css_bitvector_compiler::BitVector::with_capacity (1,210,731 samples, 0.31%)</title><rect x="40.6043%" y="4693" width="0.3138%" height="15" fill="rgb(228,39,49)" fg:x="156677783" fg:w="1210731"/><text x="40.8543%" y="4703.50"></text></g><g><title>alloc::vec::from_elem (1,210,731 samples, 0.31%)</title><rect x="40.6043%" y="4677" width="0.3138%" height="15" fill="rgb(226,101,26)" fg:x="156677783" fg:w="1210731"/><text x="40.8543%" y="4687.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,210,731 samples, 0.31%)</title><rect x="40.6043%" y="4661" width="0.3138%" height="15" fill="rgb(206,141,19)" fg:x="156677783" fg:w="1210731"/><text x="40.8543%" y="4671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,210,731 samples, 0.31%)</title><rect x="40.6043%" y="4645" width="0.3138%" height="15" fill="rgb(211,200,13)" fg:x="156677783" fg:w="1210731"/><text x="40.8543%" y="4655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,210,731 samples, 0.31%)</title><rect x="40.6043%" y="4629" width="0.3138%" height="15" fill="rgb(241,121,6)" fg:x="156677783" fg:w="1210731"/><text x="40.8543%" y="4639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,210,731 samples, 0.31%)</title><rect x="40.6043%" y="4613" width="0.3138%" height="15" fill="rgb(234,221,29)" fg:x="156677783" fg:w="1210731"/><text x="40.8543%" y="4623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,210,731 samples, 0.31%)</title><rect x="40.6043%" y="4597" width="0.3138%" height="15" fill="rgb(229,136,5)" fg:x="156677783" fg:w="1210731"/><text x="40.8543%" y="4607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,210,731 samples, 0.31%)</title><rect x="40.6043%" y="4581" width="0.3138%" height="15" fill="rgb(238,36,11)" fg:x="156677783" fg:w="1210731"/><text x="40.8543%" y="4591.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,210,731 samples, 0.31%)</title><rect x="40.6043%" y="4565" width="0.3138%" height="15" fill="rgb(251,55,41)" fg:x="156677783" fg:w="1210731"/><text x="40.8543%" y="4575.50"></text></g><g><title>__libc_calloc (1,210,731 samples, 0.31%)</title><rect x="40.6043%" y="4549" width="0.3138%" height="15" fill="rgb(242,34,40)" fg:x="156677783" fg:w="1210731"/><text x="40.8543%" y="4559.50"></text></g><g><title>main::benchmark::get_string_to_id_map (1,194,985 samples, 0.31%)</title><rect x="40.9181%" y="4629" width="0.3097%" height="15" fill="rgb(215,42,17)" fg:x="157888514" fg:w="1194985"/><text x="41.1681%" y="4639.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (1,194,985 samples, 0.31%)</title><rect x="40.9181%" y="4613" width="0.3097%" height="15" fill="rgb(207,44,46)" fg:x="157888514" fg:w="1194985"/><text x="41.1681%" y="4623.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (1,194,985 samples, 0.31%)</title><rect x="40.9181%" y="4597" width="0.3097%" height="15" fill="rgb(211,206,28)" fg:x="157888514" fg:w="1194985"/><text x="41.1681%" y="4607.50"></text></g><g><title>main::benchmark::matches_id_id (2,414,477 samples, 0.63%)</title><rect x="40.9181%" y="4693" width="0.6257%" height="15" fill="rgb(237,167,16)" fg:x="157888514" fg:w="2414477"/><text x="41.1681%" y="4703.50"></text></g><g><title>main::benchmark::get_node_id_id (2,414,477 samples, 0.63%)</title><rect x="40.9181%" y="4677" width="0.6257%" height="15" fill="rgb(233,66,6)" fg:x="157888514" fg:w="2414477"/><text x="41.1681%" y="4687.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2,414,477 samples, 0.63%)</title><rect x="40.9181%" y="4661" width="0.6257%" height="15" fill="rgb(246,123,29)" fg:x="157888514" fg:w="2414477"/><text x="41.1681%" y="4671.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (2,414,477 samples, 0.63%)</title><rect x="40.9181%" y="4645" width="0.6257%" height="15" fill="rgb(209,62,40)" fg:x="157888514" fg:w="2414477"/><text x="41.1681%" y="4655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,219,492 samples, 0.32%)</title><rect x="41.2278%" y="4629" width="0.3160%" height="15" fill="rgb(218,4,25)" fg:x="159083499" fg:w="1219492"/><text x="41.4778%" y="4639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,219,492 samples, 0.32%)</title><rect x="41.2278%" y="4613" width="0.3160%" height="15" fill="rgb(253,91,49)" fg:x="159083499" fg:w="1219492"/><text x="41.4778%" y="4623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,219,492 samples, 0.32%)</title><rect x="41.2278%" y="4597" width="0.3160%" height="15" fill="rgb(228,155,29)" fg:x="159083499" fg:w="1219492"/><text x="41.4778%" y="4607.50"></text></g><g><title>hashbrown::map::make_hash (1,219,492 samples, 0.32%)</title><rect x="41.2278%" y="4581" width="0.3160%" height="15" fill="rgb(243,57,37)" fg:x="159083499" fg:w="1219492"/><text x="41.4778%" y="4591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,219,492 samples, 0.32%)</title><rect x="41.2278%" y="4565" width="0.3160%" height="15" fill="rgb(244,167,17)" fg:x="159083499" fg:w="1219492"/><text x="41.4778%" y="4575.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,219,492 samples, 0.32%)</title><rect x="41.2278%" y="4549" width="0.3160%" height="15" fill="rgb(207,181,38)" fg:x="159083499" fg:w="1219492"/><text x="41.4778%" y="4559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,219,492 samples, 0.32%)</title><rect x="41.2278%" y="4533" width="0.3160%" height="15" fill="rgb(211,8,23)" fg:x="159083499" fg:w="1219492"/><text x="41.4778%" y="4543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,219,492 samples, 0.32%)</title><rect x="41.2278%" y="4517" width="0.3160%" height="15" fill="rgb(235,11,44)" fg:x="159083499" fg:w="1219492"/><text x="41.4778%" y="4527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,219,492 samples, 0.32%)</title><rect x="41.2278%" y="4501" width="0.3160%" height="15" fill="rgb(248,18,52)" fg:x="159083499" fg:w="1219492"/><text x="41.4778%" y="4511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,219,492 samples, 0.32%)</title><rect x="41.2278%" y="4485" width="0.3160%" height="15" fill="rgb(208,4,7)" fg:x="159083499" fg:w="1219492"/><text x="41.4778%" y="4495.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,229,223 samples, 0.32%)</title><rect x="41.5438%" y="4581" width="0.3186%" height="15" fill="rgb(240,17,39)" fg:x="160302991" fg:w="1229223"/><text x="41.7938%" y="4591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,229,223 samples, 0.32%)</title><rect x="41.5438%" y="4565" width="0.3186%" height="15" fill="rgb(207,170,3)" fg:x="160302991" fg:w="1229223"/><text x="41.7938%" y="4575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,229,223 samples, 0.32%)</title><rect x="41.5438%" y="4549" width="0.3186%" height="15" fill="rgb(236,100,52)" fg:x="160302991" fg:w="1229223"/><text x="41.7938%" y="4559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,229,223 samples, 0.32%)</title><rect x="41.5438%" y="4533" width="0.3186%" height="15" fill="rgb(246,78,51)" fg:x="160302991" fg:w="1229223"/><text x="41.7938%" y="4543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,229,223 samples, 0.32%)</title><rect x="41.5438%" y="4517" width="0.3186%" height="15" fill="rgb(211,17,15)" fg:x="160302991" fg:w="1229223"/><text x="41.7938%" y="4527.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (7,271,447 samples, 1.88%)</title><rect x="40.2857%" y="4709" width="1.8845%" height="15" fill="rgb(209,59,46)" fg:x="155448525" fg:w="7271447"/><text x="40.5357%" y="4719.50">m..</text></g><g><title>main::benchmark::matches_tag_id (2,416,981 samples, 0.63%)</title><rect x="41.5438%" y="4693" width="0.6264%" height="15" fill="rgb(210,92,25)" fg:x="160302991" fg:w="2416981"/><text x="41.7938%" y="4703.50"></text></g><g><title>main::benchmark::get_node_tag_id (2,416,981 samples, 0.63%)</title><rect x="41.5438%" y="4677" width="0.6264%" height="15" fill="rgb(238,174,52)" fg:x="160302991" fg:w="2416981"/><text x="41.7938%" y="4687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,416,981 samples, 0.63%)</title><rect x="41.5438%" y="4661" width="0.6264%" height="15" fill="rgb(230,73,7)" fg:x="160302991" fg:w="2416981"/><text x="41.7938%" y="4671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,416,981 samples, 0.63%)</title><rect x="41.5438%" y="4645" width="0.6264%" height="15" fill="rgb(243,124,40)" fg:x="160302991" fg:w="2416981"/><text x="41.7938%" y="4655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,416,981 samples, 0.63%)</title><rect x="41.5438%" y="4629" width="0.6264%" height="15" fill="rgb(244,170,11)" fg:x="160302991" fg:w="2416981"/><text x="41.7938%" y="4639.50"></text></g><g><title>hashbrown::map::make_hash (2,416,981 samples, 0.63%)</title><rect x="41.5438%" y="4613" width="0.6264%" height="15" fill="rgb(207,114,54)" fg:x="160302991" fg:w="2416981"/><text x="41.7938%" y="4623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,416,981 samples, 0.63%)</title><rect x="41.5438%" y="4597" width="0.6264%" height="15" fill="rgb(205,42,20)" fg:x="160302991" fg:w="2416981"/><text x="41.7938%" y="4607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,187,758 samples, 0.31%)</title><rect x="41.8624%" y="4581" width="0.3078%" height="15" fill="rgb(230,30,28)" fg:x="161532214" fg:w="1187758"/><text x="42.1124%" y="4591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,187,758 samples, 0.31%)</title><rect x="41.8624%" y="4565" width="0.3078%" height="15" fill="rgb(205,73,54)" fg:x="161532214" fg:w="1187758"/><text x="42.1124%" y="4575.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,187,758 samples, 0.31%)</title><rect x="41.8624%" y="4549" width="0.3078%" height="15" fill="rgb(254,227,23)" fg:x="161532214" fg:w="1187758"/><text x="42.1124%" y="4559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,187,758 samples, 0.31%)</title><rect x="41.8624%" y="4533" width="0.3078%" height="15" fill="rgb(228,202,34)" fg:x="161532214" fg:w="1187758"/><text x="42.1124%" y="4543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,187,758 samples, 0.31%)</title><rect x="41.8624%" y="4517" width="0.3078%" height="15" fill="rgb(222,225,37)" fg:x="161532214" fg:w="1187758"/><text x="42.1124%" y="4527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,187,758 samples, 0.31%)</title><rect x="41.8624%" y="4501" width="0.3078%" height="15" fill="rgb(221,14,54)" fg:x="161532214" fg:w="1187758"/><text x="42.1124%" y="4511.50"></text></g><g><title>core::hash::sip::u8to64_le (1,187,758 samples, 0.31%)</title><rect x="41.8624%" y="4485" width="0.3078%" height="15" fill="rgb(254,102,2)" fg:x="161532214" fg:w="1187758"/><text x="42.1124%" y="4495.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (2,371,932 samples, 0.61%)</title><rect x="42.1702%" y="4693" width="0.6147%" height="15" fill="rgb(232,104,17)" fg:x="162719972" fg:w="2371932"/><text x="42.4202%" y="4703.50"></text></g><g><title>main::benchmark::matches_id_id (1,149,703 samples, 0.30%)</title><rect x="42.4869%" y="4677" width="0.2980%" height="15" fill="rgb(250,220,14)" fg:x="163942201" fg:w="1149703"/><text x="42.7369%" y="4687.50"></text></g><g><title>main::benchmark::get_node_id_id (1,149,703 samples, 0.30%)</title><rect x="42.4869%" y="4661" width="0.2980%" height="15" fill="rgb(241,158,9)" fg:x="163942201" fg:w="1149703"/><text x="42.7369%" y="4671.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,149,703 samples, 0.30%)</title><rect x="42.4869%" y="4645" width="0.2980%" height="15" fill="rgb(246,9,43)" fg:x="163942201" fg:w="1149703"/><text x="42.7369%" y="4655.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (1,149,703 samples, 0.30%)</title><rect x="42.4869%" y="4629" width="0.2980%" height="15" fill="rgb(206,73,33)" fg:x="163942201" fg:w="1149703"/><text x="42.7369%" y="4639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,149,703 samples, 0.30%)</title><rect x="42.4869%" y="4613" width="0.2980%" height="15" fill="rgb(222,79,8)" fg:x="163942201" fg:w="1149703"/><text x="42.7369%" y="4623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,149,703 samples, 0.30%)</title><rect x="42.4869%" y="4597" width="0.2980%" height="15" fill="rgb(234,8,54)" fg:x="163942201" fg:w="1149703"/><text x="42.7369%" y="4607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,149,703 samples, 0.30%)</title><rect x="42.4869%" y="4581" width="0.2980%" height="15" fill="rgb(209,134,38)" fg:x="163942201" fg:w="1149703"/><text x="42.7369%" y="4591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,149,703 samples, 0.30%)</title><rect x="42.4869%" y="4565" width="0.2980%" height="15" fill="rgb(230,127,29)" fg:x="163942201" fg:w="1149703"/><text x="42.7369%" y="4575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,149,703 samples, 0.30%)</title><rect x="42.4869%" y="4549" width="0.2980%" height="15" fill="rgb(242,44,41)" fg:x="163942201" fg:w="1149703"/><text x="42.7369%" y="4559.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,149,703 samples, 0.30%)</title><rect x="42.4869%" y="4533" width="0.2980%" height="15" fill="rgb(222,56,43)" fg:x="163942201" fg:w="1149703"/><text x="42.7369%" y="4543.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,149,703 samples, 0.30%)</title><rect x="42.4869%" y="4517" width="0.2980%" height="15" fill="rgb(238,39,47)" fg:x="163942201" fg:w="1149703"/><text x="42.7369%" y="4527.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,149,703 samples, 0.30%)</title><rect x="42.4869%" y="4501" width="0.2980%" height="15" fill="rgb(226,79,43)" fg:x="163942201" fg:w="1149703"/><text x="42.7369%" y="4511.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (2,481,058 samples, 0.64%)</title><rect x="42.7849%" y="4677" width="0.6430%" height="15" fill="rgb(242,105,53)" fg:x="165091904" fg:w="2481058"/><text x="43.0349%" y="4687.50"></text></g><g><title>css_bitvector_compiler::BitVector::with_capacity (1,226,109 samples, 0.32%)</title><rect x="43.4279%" y="4645" width="0.3178%" height="15" fill="rgb(251,132,46)" fg:x="167572962" fg:w="1226109"/><text x="43.6779%" y="4655.50"></text></g><g><title>alloc::vec::from_elem (1,226,109 samples, 0.32%)</title><rect x="43.4279%" y="4629" width="0.3178%" height="15" fill="rgb(231,77,14)" fg:x="167572962" fg:w="1226109"/><text x="43.6779%" y="4639.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,226,109 samples, 0.32%)</title><rect x="43.4279%" y="4613" width="0.3178%" height="15" fill="rgb(240,135,9)" fg:x="167572962" fg:w="1226109"/><text x="43.6779%" y="4623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,226,109 samples, 0.32%)</title><rect x="43.4279%" y="4597" width="0.3178%" height="15" fill="rgb(248,109,14)" fg:x="167572962" fg:w="1226109"/><text x="43.6779%" y="4607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,226,109 samples, 0.32%)</title><rect x="43.4279%" y="4581" width="0.3178%" height="15" fill="rgb(227,146,52)" fg:x="167572962" fg:w="1226109"/><text x="43.6779%" y="4591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,226,109 samples, 0.32%)</title><rect x="43.4279%" y="4565" width="0.3178%" height="15" fill="rgb(232,54,3)" fg:x="167572962" fg:w="1226109"/><text x="43.6779%" y="4575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,226,109 samples, 0.32%)</title><rect x="43.4279%" y="4549" width="0.3178%" height="15" fill="rgb(229,201,43)" fg:x="167572962" fg:w="1226109"/><text x="43.6779%" y="4559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,226,109 samples, 0.32%)</title><rect x="43.4279%" y="4533" width="0.3178%" height="15" fill="rgb(252,161,33)" fg:x="167572962" fg:w="1226109"/><text x="43.6779%" y="4543.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,226,109 samples, 0.32%)</title><rect x="43.4279%" y="4517" width="0.3178%" height="15" fill="rgb(226,146,40)" fg:x="167572962" fg:w="1226109"/><text x="43.6779%" y="4527.50"></text></g><g><title>__rdl_alloc_zeroed (1,226,109 samples, 0.32%)</title><rect x="43.4279%" y="4501" width="0.3178%" height="15" fill="rgb(219,47,25)" fg:x="167572962" fg:w="1226109"/><text x="43.6779%" y="4511.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (2,339,029 samples, 0.61%)</title><rect x="43.4279%" y="4661" width="0.6062%" height="15" fill="rgb(250,135,13)" fg:x="167572962" fg:w="2339029"/><text x="43.6779%" y="4671.50"></text></g><g><title>main::benchmark::matches_id_id (1,112,920 samples, 0.29%)</title><rect x="43.7456%" y="4645" width="0.2884%" height="15" fill="rgb(219,229,18)" fg:x="168799071" fg:w="1112920"/><text x="43.9956%" y="4655.50"></text></g><g><title>main::benchmark::get_node_id_id (1,112,920 samples, 0.29%)</title><rect x="43.7456%" y="4629" width="0.2884%" height="15" fill="rgb(217,152,27)" fg:x="168799071" fg:w="1112920"/><text x="43.9956%" y="4639.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,112,920 samples, 0.29%)</title><rect x="43.7456%" y="4613" width="0.2884%" height="15" fill="rgb(225,71,47)" fg:x="168799071" fg:w="1112920"/><text x="43.9956%" y="4623.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (1,112,920 samples, 0.29%)</title><rect x="43.7456%" y="4597" width="0.2884%" height="15" fill="rgb(220,139,14)" fg:x="168799071" fg:w="1112920"/><text x="43.9956%" y="4607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,112,920 samples, 0.29%)</title><rect x="43.7456%" y="4581" width="0.2884%" height="15" fill="rgb(247,54,32)" fg:x="168799071" fg:w="1112920"/><text x="43.9956%" y="4591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,112,920 samples, 0.29%)</title><rect x="43.7456%" y="4565" width="0.2884%" height="15" fill="rgb(252,131,39)" fg:x="168799071" fg:w="1112920"/><text x="43.9956%" y="4575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,112,920 samples, 0.29%)</title><rect x="43.7456%" y="4549" width="0.2884%" height="15" fill="rgb(210,108,39)" fg:x="168799071" fg:w="1112920"/><text x="43.9956%" y="4559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,112,920 samples, 0.29%)</title><rect x="43.7456%" y="4533" width="0.2884%" height="15" fill="rgb(205,23,29)" fg:x="168799071" fg:w="1112920"/><text x="43.9956%" y="4543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,112,920 samples, 0.29%)</title><rect x="43.7456%" y="4517" width="0.2884%" height="15" fill="rgb(246,139,46)" fg:x="168799071" fg:w="1112920"/><text x="43.9956%" y="4527.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,112,920 samples, 0.29%)</title><rect x="43.7456%" y="4501" width="0.2884%" height="15" fill="rgb(250,81,26)" fg:x="168799071" fg:w="1112920"/><text x="43.9956%" y="4511.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,112,920 samples, 0.29%)</title><rect x="43.7456%" y="4485" width="0.2884%" height="15" fill="rgb(214,104,7)" fg:x="168799071" fg:w="1112920"/><text x="43.9956%" y="4495.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,112,920 samples, 0.29%)</title><rect x="43.7456%" y="4469" width="0.2884%" height="15" fill="rgb(233,189,8)" fg:x="168799071" fg:w="1112920"/><text x="43.9956%" y="4479.50"></text></g><g><title>cfree (884,456 samples, 0.23%)</title><rect x="44.0341%" y="4645" width="0.2292%" height="15" fill="rgb(228,141,17)" fg:x="169911991" fg:w="884456"/><text x="44.2841%" y="4655.50"></text></g><g><title>main::benchmark::matches_class_id (1,052,907 samples, 0.27%)</title><rect x="44.2633%" y="4629" width="0.2729%" height="15" fill="rgb(247,157,1)" fg:x="170796447" fg:w="1052907"/><text x="44.5133%" y="4639.50"></text></g><g><title>main::benchmark::node_has_class_id (1,052,907 samples, 0.27%)</title><rect x="44.2633%" y="4613" width="0.2729%" height="15" fill="rgb(249,225,5)" fg:x="170796447" fg:w="1052907"/><text x="44.5133%" y="4623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,052,907 samples, 0.27%)</title><rect x="44.2633%" y="4597" width="0.2729%" height="15" fill="rgb(242,55,13)" fg:x="170796447" fg:w="1052907"/><text x="44.5133%" y="4607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,052,907 samples, 0.27%)</title><rect x="44.2633%" y="4581" width="0.2729%" height="15" fill="rgb(230,49,50)" fg:x="170796447" fg:w="1052907"/><text x="44.5133%" y="4591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,052,907 samples, 0.27%)</title><rect x="44.2633%" y="4565" width="0.2729%" height="15" fill="rgb(241,111,38)" fg:x="170796447" fg:w="1052907"/><text x="44.5133%" y="4575.50"></text></g><g><title>hashbrown::map::make_hash (1,052,907 samples, 0.27%)</title><rect x="44.2633%" y="4549" width="0.2729%" height="15" fill="rgb(252,155,4)" fg:x="170796447" fg:w="1052907"/><text x="44.5133%" y="4559.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (3,349,731 samples, 0.87%)</title><rect x="44.2633%" y="4645" width="0.8681%" height="15" fill="rgb(212,69,32)" fg:x="170796447" fg:w="3349731"/><text x="44.5133%" y="4655.50"></text></g><g><title>main::benchmark::matches_id_id (2,296,824 samples, 0.60%)</title><rect x="44.5361%" y="4629" width="0.5952%" height="15" fill="rgb(243,107,47)" fg:x="171849354" fg:w="2296824"/><text x="44.7861%" y="4639.50"></text></g><g><title>main::benchmark::get_node_id_id (2,296,824 samples, 0.60%)</title><rect x="44.5361%" y="4613" width="0.5952%" height="15" fill="rgb(247,130,12)" fg:x="171849354" fg:w="2296824"/><text x="44.7861%" y="4623.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2,296,824 samples, 0.60%)</title><rect x="44.5361%" y="4597" width="0.5952%" height="15" fill="rgb(233,74,16)" fg:x="171849354" fg:w="2296824"/><text x="44.7861%" y="4607.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (2,296,824 samples, 0.60%)</title><rect x="44.5361%" y="4581" width="0.5952%" height="15" fill="rgb(208,58,18)" fg:x="171849354" fg:w="2296824"/><text x="44.7861%" y="4591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,296,824 samples, 0.60%)</title><rect x="44.5361%" y="4565" width="0.5952%" height="15" fill="rgb(242,225,1)" fg:x="171849354" fg:w="2296824"/><text x="44.7861%" y="4575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,296,824 samples, 0.60%)</title><rect x="44.5361%" y="4549" width="0.5952%" height="15" fill="rgb(249,39,40)" fg:x="171849354" fg:w="2296824"/><text x="44.7861%" y="4559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,296,824 samples, 0.60%)</title><rect x="44.5361%" y="4533" width="0.5952%" height="15" fill="rgb(207,72,44)" fg:x="171849354" fg:w="2296824"/><text x="44.7861%" y="4543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,296,824 samples, 0.60%)</title><rect x="44.5361%" y="4517" width="0.5952%" height="15" fill="rgb(215,193,12)" fg:x="171849354" fg:w="2296824"/><text x="44.7861%" y="4527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,296,824 samples, 0.60%)</title><rect x="44.5361%" y="4501" width="0.5952%" height="15" fill="rgb(248,41,39)" fg:x="171849354" fg:w="2296824"/><text x="44.7861%" y="4511.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,296,824 samples, 0.60%)</title><rect x="44.5361%" y="4485" width="0.5952%" height="15" fill="rgb(253,85,4)" fg:x="171849354" fg:w="2296824"/><text x="44.7861%" y="4495.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (1,184,789 samples, 0.31%)</title><rect x="44.8243%" y="4469" width="0.3070%" height="15" fill="rgb(243,70,31)" fg:x="172961389" fg:w="1184789"/><text x="45.0743%" y="4479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,184,789 samples, 0.31%)</title><rect x="44.8243%" y="4453" width="0.3070%" height="15" fill="rgb(253,195,26)" fg:x="172961389" fg:w="1184789"/><text x="45.0743%" y="4463.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (2,098,070 samples, 0.54%)</title><rect x="45.1314%" y="4613" width="0.5437%" height="15" fill="rgb(243,42,11)" fg:x="174146178" fg:w="2098070"/><text x="45.3814%" y="4623.50"></text></g><g><title>hashbrown::map::make_hash (2,380,075 samples, 0.62%)</title><rect x="45.6751%" y="4533" width="0.6168%" height="15" fill="rgb(239,66,17)" fg:x="176244248" fg:w="2380075"/><text x="45.9251%" y="4543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,380,075 samples, 0.62%)</title><rect x="45.6751%" y="4517" width="0.6168%" height="15" fill="rgb(217,132,21)" fg:x="176244248" fg:w="2380075"/><text x="45.9251%" y="4527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,188,168 samples, 0.31%)</title><rect x="45.9840%" y="4501" width="0.3079%" height="15" fill="rgb(252,202,21)" fg:x="177436155" fg:w="1188168"/><text x="46.2340%" y="4511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,188,168 samples, 0.31%)</title><rect x="45.9840%" y="4485" width="0.3079%" height="15" fill="rgb(233,98,36)" fg:x="177436155" fg:w="1188168"/><text x="46.2340%" y="4495.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,188,168 samples, 0.31%)</title><rect x="45.9840%" y="4469" width="0.3079%" height="15" fill="rgb(216,153,54)" fg:x="177436155" fg:w="1188168"/><text x="46.2340%" y="4479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,188,168 samples, 0.31%)</title><rect x="45.9840%" y="4453" width="0.3079%" height="15" fill="rgb(250,99,7)" fg:x="177436155" fg:w="1188168"/><text x="46.2340%" y="4463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,188,168 samples, 0.31%)</title><rect x="45.9840%" y="4437" width="0.3079%" height="15" fill="rgb(207,56,50)" fg:x="177436155" fg:w="1188168"/><text x="46.2340%" y="4447.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,188,168 samples, 0.31%)</title><rect x="45.9840%" y="4421" width="0.3079%" height="15" fill="rgb(244,61,34)" fg:x="177436155" fg:w="1188168"/><text x="46.2340%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,188,168 samples, 0.31%)</title><rect x="45.9840%" y="4405" width="0.3079%" height="15" fill="rgb(241,50,38)" fg:x="177436155" fg:w="1188168"/><text x="46.2340%" y="4415.50"></text></g><g><title>core::cmp::min (1,188,168 samples, 0.31%)</title><rect x="45.9840%" y="4389" width="0.3079%" height="15" fill="rgb(212,166,30)" fg:x="177436155" fg:w="1188168"/><text x="46.2340%" y="4399.50"></text></g><g><title>core::cmp::Ord::min (1,188,168 samples, 0.31%)</title><rect x="45.9840%" y="4373" width="0.3079%" height="15" fill="rgb(249,127,32)" fg:x="177436155" fg:w="1188168"/><text x="46.2340%" y="4383.50"></text></g><g><title>main::benchmark::matches_class_id (3,432,802 samples, 0.89%)</title><rect x="45.6751%" y="4613" width="0.8896%" height="15" fill="rgb(209,103,0)" fg:x="176244248" fg:w="3432802"/><text x="45.9251%" y="4623.50"></text></g><g><title>main::benchmark::node_has_class_id (3,432,802 samples, 0.89%)</title><rect x="45.6751%" y="4597" width="0.8896%" height="15" fill="rgb(238,209,51)" fg:x="176244248" fg:w="3432802"/><text x="45.9251%" y="4607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,432,802 samples, 0.89%)</title><rect x="45.6751%" y="4581" width="0.8896%" height="15" fill="rgb(237,56,23)" fg:x="176244248" fg:w="3432802"/><text x="45.9251%" y="4591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,432,802 samples, 0.89%)</title><rect x="45.6751%" y="4565" width="0.8896%" height="15" fill="rgb(215,153,46)" fg:x="176244248" fg:w="3432802"/><text x="45.9251%" y="4575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,432,802 samples, 0.89%)</title><rect x="45.6751%" y="4549" width="0.8896%" height="15" fill="rgb(224,49,31)" fg:x="176244248" fg:w="3432802"/><text x="45.9251%" y="4559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,052,727 samples, 0.27%)</title><rect x="46.2919%" y="4533" width="0.2728%" height="15" fill="rgb(250,18,42)" fg:x="178624323" fg:w="1052727"/><text x="46.5419%" y="4543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,052,727 samples, 0.27%)</title><rect x="46.2919%" y="4517" width="0.2728%" height="15" fill="rgb(215,176,39)" fg:x="178624323" fg:w="1052727"/><text x="46.5419%" y="4527.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,052,727 samples, 0.27%)</title><rect x="46.2919%" y="4501" width="0.2728%" height="15" fill="rgb(223,77,29)" fg:x="178624323" fg:w="1052727"/><text x="46.5419%" y="4511.50"></text></g><g><title>hashbrown::control::tag::Tag::full (1,052,727 samples, 0.27%)</title><rect x="46.2919%" y="4485" width="0.2728%" height="15" fill="rgb(234,94,52)" fg:x="178624323" fg:w="1052727"/><text x="46.5419%" y="4495.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (6,744,805 samples, 1.75%)</title><rect x="45.1314%" y="4629" width="1.7480%" height="15" fill="rgb(220,154,50)" fg:x="174146178" fg:w="6744805"/><text x="45.3814%" y="4639.50"></text></g><g><title>main::benchmark::matches_id_id (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4613" width="0.3146%" height="15" fill="rgb(212,11,10)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4623.50"></text></g><g><title>main::benchmark::get_node_id_id (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4597" width="0.3146%" height="15" fill="rgb(205,166,19)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4607.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4581" width="0.3146%" height="15" fill="rgb(244,198,16)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4591.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4565" width="0.3146%" height="15" fill="rgb(219,69,12)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4549" width="0.3146%" height="15" fill="rgb(245,30,7)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4533" width="0.3146%" height="15" fill="rgb(218,221,48)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4517" width="0.3146%" height="15" fill="rgb(216,66,15)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4527.50"></text></g><g><title>hashbrown::map::make_hash (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4501" width="0.3146%" height="15" fill="rgb(226,122,50)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4485" width="0.3146%" height="15" fill="rgb(239,156,16)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4469" width="0.3146%" height="15" fill="rgb(224,27,38)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4453" width="0.3146%" height="15" fill="rgb(224,39,27)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4463.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4437" width="0.3146%" height="15" fill="rgb(215,92,29)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4421" width="0.3146%" height="15" fill="rgb(207,159,16)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4405" width="0.3146%" height="15" fill="rgb(238,163,47)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4415.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4389" width="0.3146%" height="15" fill="rgb(219,91,49)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,213,933 samples, 0.31%)</title><rect x="46.5648%" y="4373" width="0.3146%" height="15" fill="rgb(227,167,31)" fg:x="179677050" fg:w="1213933"/><text x="46.8148%" y="4383.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,230,691 samples, 0.32%)</title><rect x="47.4953%" y="4597" width="0.3189%" height="15" fill="rgb(234,80,54)" fg:x="183267806" fg:w="1230691"/><text x="47.7453%" y="4607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,230,691 samples, 0.32%)</title><rect x="47.4953%" y="4581" width="0.3189%" height="15" fill="rgb(212,114,2)" fg:x="183267806" fg:w="1230691"/><text x="47.7453%" y="4591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,230,691 samples, 0.32%)</title><rect x="47.4953%" y="4565" width="0.3189%" height="15" fill="rgb(234,50,24)" fg:x="183267806" fg:w="1230691"/><text x="47.7453%" y="4575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,230,691 samples, 0.32%)</title><rect x="47.4953%" y="4549" width="0.3189%" height="15" fill="rgb(221,68,8)" fg:x="183267806" fg:w="1230691"/><text x="47.7453%" y="4559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,230,691 samples, 0.32%)</title><rect x="47.4953%" y="4533" width="0.3189%" height="15" fill="rgb(254,180,31)" fg:x="183267806" fg:w="1230691"/><text x="47.7453%" y="4543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,230,691 samples, 0.32%)</title><rect x="47.4953%" y="4517" width="0.3189%" height="15" fill="rgb(247,130,50)" fg:x="183267806" fg:w="1230691"/><text x="47.7453%" y="4527.50"></text></g><g><title>alloc::alloc::dealloc (1,230,691 samples, 0.32%)</title><rect x="47.4953%" y="4501" width="0.3189%" height="15" fill="rgb(211,109,4)" fg:x="183267806" fg:w="1230691"/><text x="47.7453%" y="4511.50"></text></g><g><title>cfree (1,230,691 samples, 0.32%)</title><rect x="47.4953%" y="4485" width="0.3189%" height="15" fill="rgb(238,50,21)" fg:x="183267806" fg:w="1230691"/><text x="47.7453%" y="4495.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (2,504,781 samples, 0.65%)</title><rect x="47.8143%" y="4597" width="0.6491%" height="15" fill="rgb(225,57,45)" fg:x="184498497" fg:w="2504781"/><text x="48.0643%" y="4607.50"></text></g><g><title>&lt;&amp;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,220,120 samples, 0.32%)</title><rect x="48.4634%" y="4565" width="0.3162%" height="15" fill="rgb(209,196,50)" fg:x="187003278" fg:w="1220120"/><text x="48.7134%" y="4575.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (1,220,120 samples, 0.32%)</title><rect x="48.4634%" y="4549" width="0.3162%" height="15" fill="rgb(242,140,13)" fg:x="187003278" fg:w="1220120"/><text x="48.7134%" y="4559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (1,220,120 samples, 0.32%)</title><rect x="48.4634%" y="4533" width="0.3162%" height="15" fill="rgb(217,111,7)" fg:x="187003278" fg:w="1220120"/><text x="48.7134%" y="4543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (1,220,120 samples, 0.32%)</title><rect x="48.4634%" y="4517" width="0.3162%" height="15" fill="rgb(253,193,51)" fg:x="187003278" fg:w="1220120"/><text x="48.7134%" y="4527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1,220,120 samples, 0.32%)</title><rect x="48.4634%" y="4501" width="0.3162%" height="15" fill="rgb(252,70,29)" fg:x="187003278" fg:w="1220120"/><text x="48.7134%" y="4511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1,220,120 samples, 0.32%)</title><rect x="48.4634%" y="4485" width="0.3162%" height="15" fill="rgb(232,127,12)" fg:x="187003278" fg:w="1220120"/><text x="48.7134%" y="4495.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,220,120 samples, 0.32%)</title><rect x="48.4634%" y="4469" width="0.3162%" height="15" fill="rgb(211,180,21)" fg:x="187003278" fg:w="1220120"/><text x="48.7134%" y="4479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,082,040 samples, 0.28%)</title><rect x="48.7796%" y="4437" width="0.2804%" height="15" fill="rgb(229,72,13)" fg:x="188223398" fg:w="1082040"/><text x="49.0296%" y="4447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,082,040 samples, 0.28%)</title><rect x="48.7796%" y="4421" width="0.2804%" height="15" fill="rgb(240,211,49)" fg:x="188223398" fg:w="1082040"/><text x="49.0296%" y="4431.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,292,567 samples, 0.59%)</title><rect x="48.7796%" y="4485" width="0.5941%" height="15" fill="rgb(219,149,40)" fg:x="188223398" fg:w="2292567"/><text x="49.0296%" y="4495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,292,567 samples, 0.59%)</title><rect x="48.7796%" y="4469" width="0.5941%" height="15" fill="rgb(210,127,46)" fg:x="188223398" fg:w="2292567"/><text x="49.0296%" y="4479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,292,567 samples, 0.59%)</title><rect x="48.7796%" y="4453" width="0.5941%" height="15" fill="rgb(220,106,7)" fg:x="188223398" fg:w="2292567"/><text x="49.0296%" y="4463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,210,527 samples, 0.31%)</title><rect x="49.0600%" y="4437" width="0.3137%" height="15" fill="rgb(249,31,22)" fg:x="189305438" fg:w="1210527"/><text x="49.3100%" y="4447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,210,527 samples, 0.31%)</title><rect x="49.0600%" y="4421" width="0.3137%" height="15" fill="rgb(253,1,49)" fg:x="189305438" fg:w="1210527"/><text x="49.3100%" y="4431.50"></text></g><g><title>hashbrown::map::make_hash (3,491,299 samples, 0.90%)</title><rect x="48.7796%" y="4517" width="0.9048%" height="15" fill="rgb(227,144,33)" fg:x="188223398" fg:w="3491299"/><text x="49.0296%" y="4527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,491,299 samples, 0.90%)</title><rect x="48.7796%" y="4501" width="0.9048%" height="15" fill="rgb(249,163,44)" fg:x="188223398" fg:w="3491299"/><text x="49.0296%" y="4511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,198,732 samples, 0.31%)</title><rect x="49.3738%" y="4485" width="0.3107%" height="15" fill="rgb(234,15,39)" fg:x="190515965" fg:w="1198732"/><text x="49.6238%" y="4495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,198,732 samples, 0.31%)</title><rect x="49.3738%" y="4469" width="0.3107%" height="15" fill="rgb(207,66,16)" fg:x="190515965" fg:w="1198732"/><text x="49.6238%" y="4479.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,198,732 samples, 0.31%)</title><rect x="49.3738%" y="4453" width="0.3107%" height="15" fill="rgb(233,112,24)" fg:x="190515965" fg:w="1198732"/><text x="49.6238%" y="4463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,198,732 samples, 0.31%)</title><rect x="49.3738%" y="4437" width="0.3107%" height="15" fill="rgb(230,90,22)" fg:x="190515965" fg:w="1198732"/><text x="49.6238%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,198,732 samples, 0.31%)</title><rect x="49.3738%" y="4421" width="0.3107%" height="15" fill="rgb(229,61,13)" fg:x="190515965" fg:w="1198732"/><text x="49.6238%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,198,732 samples, 0.31%)</title><rect x="49.3738%" y="4405" width="0.3107%" height="15" fill="rgb(225,57,24)" fg:x="190515965" fg:w="1198732"/><text x="49.6238%" y="4415.50"></text></g><g><title>core::hash::sip::u8to64_le (1,198,732 samples, 0.31%)</title><rect x="49.3738%" y="4389" width="0.3107%" height="15" fill="rgb(208,169,48)" fg:x="190515965" fg:w="1198732"/><text x="49.6238%" y="4399.50"></text></g><g><title>main::benchmark::matches_class_id (5,578,877 samples, 1.45%)</title><rect x="48.4634%" y="4597" width="1.4458%" height="15" fill="rgb(244,218,51)" fg:x="187003278" fg:w="5578877"/><text x="48.7134%" y="4607.50"></text></g><g><title>main::benchmark::node_has_class_id (5,578,877 samples, 1.45%)</title><rect x="48.4634%" y="4581" width="1.4458%" height="15" fill="rgb(214,148,10)" fg:x="187003278" fg:w="5578877"/><text x="48.7134%" y="4591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4,358,757 samples, 1.13%)</title><rect x="48.7796%" y="4565" width="1.1296%" height="15" fill="rgb(225,174,27)" fg:x="188223398" fg:w="4358757"/><text x="49.0296%" y="4575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4,358,757 samples, 1.13%)</title><rect x="48.7796%" y="4549" width="1.1296%" height="15" fill="rgb(230,96,26)" fg:x="188223398" fg:w="4358757"/><text x="49.0296%" y="4559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4,358,757 samples, 1.13%)</title><rect x="48.7796%" y="4533" width="1.1296%" height="15" fill="rgb(232,10,30)" fg:x="188223398" fg:w="4358757"/><text x="49.0296%" y="4543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (867,458 samples, 0.22%)</title><rect x="49.6844%" y="4517" width="0.2248%" height="15" fill="rgb(222,8,50)" fg:x="191714697" fg:w="867458"/><text x="49.9344%" y="4527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (867,458 samples, 0.22%)</title><rect x="49.6844%" y="4501" width="0.2248%" height="15" fill="rgb(213,81,27)" fg:x="191714697" fg:w="867458"/><text x="49.9344%" y="4511.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (867,458 samples, 0.22%)</title><rect x="49.6844%" y="4485" width="0.2248%" height="15" fill="rgb(245,50,10)" fg:x="191714697" fg:w="867458"/><text x="49.9344%" y="4495.50"></text></g><g><title>hashbrown::map::make_hash (1,254,712 samples, 0.33%)</title><rect x="49.9092%" y="4485" width="0.3252%" height="15" fill="rgb(216,100,18)" fg:x="192582155" fg:w="1254712"/><text x="50.1592%" y="4495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,254,712 samples, 0.33%)</title><rect x="49.9092%" y="4469" width="0.3252%" height="15" fill="rgb(236,147,54)" fg:x="192582155" fg:w="1254712"/><text x="50.1592%" y="4479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,254,712 samples, 0.33%)</title><rect x="49.9092%" y="4453" width="0.3252%" height="15" fill="rgb(205,143,26)" fg:x="192582155" fg:w="1254712"/><text x="50.1592%" y="4463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,254,712 samples, 0.33%)</title><rect x="49.9092%" y="4437" width="0.3252%" height="15" fill="rgb(236,26,9)" fg:x="192582155" fg:w="1254712"/><text x="50.1592%" y="4447.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,254,712 samples, 0.33%)</title><rect x="49.9092%" y="4421" width="0.3252%" height="15" fill="rgb(221,165,53)" fg:x="192582155" fg:w="1254712"/><text x="50.1592%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,254,712 samples, 0.33%)</title><rect x="49.9092%" y="4405" width="0.3252%" height="15" fill="rgb(214,110,17)" fg:x="192582155" fg:w="1254712"/><text x="50.1592%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,254,712 samples, 0.33%)</title><rect x="49.9092%" y="4389" width="0.3252%" height="15" fill="rgb(237,197,12)" fg:x="192582155" fg:w="1254712"/><text x="50.1592%" y="4399.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,254,712 samples, 0.33%)</title><rect x="49.9092%" y="4373" width="0.3252%" height="15" fill="rgb(205,84,17)" fg:x="192582155" fg:w="1254712"/><text x="50.1592%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,254,712 samples, 0.33%)</title><rect x="49.9092%" y="4357" width="0.3252%" height="15" fill="rgb(237,18,45)" fg:x="192582155" fg:w="1254712"/><text x="50.1592%" y="4367.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (1,176,554 samples, 0.30%)</title><rect x="51.2011%" y="4437" width="0.3049%" height="15" fill="rgb(221,87,14)" fg:x="197566884" fg:w="1176554"/><text x="51.4511%" y="4447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,176,554 samples, 0.30%)</title><rect x="51.2011%" y="4421" width="0.3049%" height="15" fill="rgb(238,186,15)" fg:x="197566884" fg:w="1176554"/><text x="51.4511%" y="4431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,176,554 samples, 0.30%)</title><rect x="51.2011%" y="4405" width="0.3049%" height="15" fill="rgb(208,115,11)" fg:x="197566884" fg:w="1176554"/><text x="51.4511%" y="4415.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (7,336,279 samples, 1.90%)</title><rect x="49.9092%" y="4565" width="1.9013%" height="15" fill="rgb(254,175,0)" fg:x="192582155" fg:w="7336279"/><text x="50.1592%" y="4575.50">c..</text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (7,336,279 samples, 1.90%)</title><rect x="49.9092%" y="4549" width="1.9013%" height="15" fill="rgb(227,24,42)" fg:x="192582155" fg:w="7336279"/><text x="50.1592%" y="4559.50">m..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7,336,279 samples, 1.90%)</title><rect x="49.9092%" y="4533" width="1.9013%" height="15" fill="rgb(223,211,37)" fg:x="192582155" fg:w="7336279"/><text x="50.1592%" y="4543.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7,336,279 samples, 1.90%)</title><rect x="49.9092%" y="4517" width="1.9013%" height="15" fill="rgb(235,49,27)" fg:x="192582155" fg:w="7336279"/><text x="50.1592%" y="4527.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7,336,279 samples, 1.90%)</title><rect x="49.9092%" y="4501" width="1.9013%" height="15" fill="rgb(254,97,51)" fg:x="192582155" fg:w="7336279"/><text x="50.1592%" y="4511.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6,081,567 samples, 1.58%)</title><rect x="50.2344%" y="4485" width="1.5761%" height="15" fill="rgb(249,51,40)" fg:x="193836867" fg:w="6081567"/><text x="50.4844%" y="4495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6,081,567 samples, 1.58%)</title><rect x="50.2344%" y="4469" width="1.5761%" height="15" fill="rgb(210,128,45)" fg:x="193836867" fg:w="6081567"/><text x="50.4844%" y="4479.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6,081,567 samples, 1.58%)</title><rect x="50.2344%" y="4453" width="1.5761%" height="15" fill="rgb(224,137,50)" fg:x="193836867" fg:w="6081567"/><text x="50.4844%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1,174,996 samples, 0.30%)</title><rect x="51.5060%" y="4437" width="0.3045%" height="15" fill="rgb(242,15,9)" fg:x="198743438" fg:w="1174996"/><text x="51.7560%" y="4447.50"></text></g><g><title>main::benchmark::matches_id_id (8,508,978 samples, 2.21%)</title><rect x="49.9092%" y="4597" width="2.2052%" height="15" fill="rgb(233,187,41)" fg:x="192582155" fg:w="8508978"/><text x="50.1592%" y="4607.50">m..</text></g><g><title>main::benchmark::get_node_id_id (8,508,978 samples, 2.21%)</title><rect x="49.9092%" y="4581" width="2.2052%" height="15" fill="rgb(227,2,29)" fg:x="192582155" fg:w="8508978"/><text x="50.1592%" y="4591.50">m..</text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1,172,699 samples, 0.30%)</title><rect x="51.8105%" y="4565" width="0.3039%" height="15" fill="rgb(222,70,3)" fg:x="199918434" fg:w="1172699"/><text x="52.0605%" y="4575.50"></text></g><g><title>hashbrown::map::make_hash (1,235,092 samples, 0.32%)</title><rect x="52.1144%" y="4517" width="0.3201%" height="15" fill="rgb(213,11,42)" fg:x="201091133" fg:w="1235092"/><text x="52.3644%" y="4527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,235,092 samples, 0.32%)</title><rect x="52.1144%" y="4501" width="0.3201%" height="15" fill="rgb(225,150,9)" fg:x="201091133" fg:w="1235092"/><text x="52.3644%" y="4511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,235,092 samples, 0.32%)</title><rect x="52.1144%" y="4485" width="0.3201%" height="15" fill="rgb(230,162,45)" fg:x="201091133" fg:w="1235092"/><text x="52.3644%" y="4495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,235,092 samples, 0.32%)</title><rect x="52.1144%" y="4469" width="0.3201%" height="15" fill="rgb(222,14,52)" fg:x="201091133" fg:w="1235092"/><text x="52.3644%" y="4479.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,235,092 samples, 0.32%)</title><rect x="52.1144%" y="4453" width="0.3201%" height="15" fill="rgb(254,198,14)" fg:x="201091133" fg:w="1235092"/><text x="52.3644%" y="4463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,235,092 samples, 0.32%)</title><rect x="52.1144%" y="4437" width="0.3201%" height="15" fill="rgb(220,217,30)" fg:x="201091133" fg:w="1235092"/><text x="52.3644%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,235,092 samples, 0.32%)</title><rect x="52.1144%" y="4421" width="0.3201%" height="15" fill="rgb(215,146,41)" fg:x="201091133" fg:w="1235092"/><text x="52.3644%" y="4431.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,235,092 samples, 0.32%)</title><rect x="52.1144%" y="4405" width="0.3201%" height="15" fill="rgb(217,27,36)" fg:x="201091133" fg:w="1235092"/><text x="52.3644%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,235,092 samples, 0.32%)</title><rect x="52.1144%" y="4389" width="0.3201%" height="15" fill="rgb(219,218,39)" fg:x="201091133" fg:w="1235092"/><text x="52.3644%" y="4399.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (22,664,426 samples, 5.87%)</title><rect x="46.8794%" y="4613" width="5.8737%" height="15" fill="rgb(219,4,42)" fg:x="180890983" fg:w="22664426"/><text x="47.1294%" y="4623.50">main::b..</text></g><g><title>main::benchmark::matches_tag_id (2,464,276 samples, 0.64%)</title><rect x="52.1144%" y="4597" width="0.6386%" height="15" fill="rgb(249,119,36)" fg:x="201091133" fg:w="2464276"/><text x="52.3644%" y="4607.50"></text></g><g><title>main::benchmark::get_node_tag_id (2,464,276 samples, 0.64%)</title><rect x="52.1144%" y="4581" width="0.6386%" height="15" fill="rgb(209,23,33)" fg:x="201091133" fg:w="2464276"/><text x="52.3644%" y="4591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,464,276 samples, 0.64%)</title><rect x="52.1144%" y="4565" width="0.6386%" height="15" fill="rgb(211,10,0)" fg:x="201091133" fg:w="2464276"/><text x="52.3644%" y="4575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,464,276 samples, 0.64%)</title><rect x="52.1144%" y="4549" width="0.6386%" height="15" fill="rgb(208,99,37)" fg:x="201091133" fg:w="2464276"/><text x="52.3644%" y="4559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,464,276 samples, 0.64%)</title><rect x="52.1144%" y="4533" width="0.6386%" height="15" fill="rgb(213,132,31)" fg:x="201091133" fg:w="2464276"/><text x="52.3644%" y="4543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,229,184 samples, 0.32%)</title><rect x="52.4345%" y="4517" width="0.3186%" height="15" fill="rgb(243,129,40)" fg:x="202326225" fg:w="1229184"/><text x="52.6845%" y="4527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,229,184 samples, 0.32%)</title><rect x="52.4345%" y="4501" width="0.3186%" height="15" fill="rgb(210,66,33)" fg:x="202326225" fg:w="1229184"/><text x="52.6845%" y="4511.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,229,184 samples, 0.32%)</title><rect x="52.4345%" y="4485" width="0.3186%" height="15" fill="rgb(209,189,4)" fg:x="202326225" fg:w="1229184"/><text x="52.6845%" y="4495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1,229,184 samples, 0.32%)</title><rect x="52.4345%" y="4469" width="0.3186%" height="15" fill="rgb(214,107,37)" fg:x="202326225" fg:w="1229184"/><text x="52.6845%" y="4479.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1,229,184 samples, 0.32%)</title><rect x="52.4345%" y="4453" width="0.3186%" height="15" fill="rgb(245,88,54)" fg:x="202326225" fg:w="1229184"/><text x="52.6845%" y="4463.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1,229,184 samples, 0.32%)</title><rect x="52.4345%" y="4437" width="0.3186%" height="15" fill="rgb(205,146,20)" fg:x="202326225" fg:w="1229184"/><text x="52.6845%" y="4447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,229,184 samples, 0.32%)</title><rect x="52.4345%" y="4421" width="0.3186%" height="15" fill="rgb(220,161,25)" fg:x="202326225" fg:w="1229184"/><text x="52.6845%" y="4431.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,229,184 samples, 0.32%)</title><rect x="52.4345%" y="4405" width="0.3186%" height="15" fill="rgb(215,152,15)" fg:x="202326225" fg:w="1229184"/><text x="52.6845%" y="4415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,229,184 samples, 0.32%)</title><rect x="52.4345%" y="4389" width="0.3186%" height="15" fill="rgb(233,192,44)" fg:x="202326225" fg:w="1229184"/><text x="52.6845%" y="4399.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,229,184 samples, 0.32%)</title><rect x="52.4345%" y="4373" width="0.3186%" height="15" fill="rgb(240,170,46)" fg:x="202326225" fg:w="1229184"/><text x="52.6845%" y="4383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,229,184 samples, 0.32%)</title><rect x="52.4345%" y="4357" width="0.3186%" height="15" fill="rgb(207,104,33)" fg:x="202326225" fg:w="1229184"/><text x="52.6845%" y="4367.50"></text></g><g><title>[libc.so.6] (1,229,184 samples, 0.32%)</title><rect x="52.4345%" y="4341" width="0.3186%" height="15" fill="rgb(219,21,39)" fg:x="202326225" fg:w="1229184"/><text x="52.6845%" y="4351.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (1,212,065 samples, 0.31%)</title><rect x="52.7530%" y="4581" width="0.3141%" height="15" fill="rgb(214,133,29)" fg:x="203555409" fg:w="1212065"/><text x="53.0030%" y="4591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (7,258,829 samples, 1.88%)</title><rect x="53.3937%" y="4469" width="1.8812%" height="15" fill="rgb(226,93,6)" fg:x="206027615" fg:w="7258829"/><text x="53.6437%" y="4479.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7,258,829 samples, 1.88%)</title><rect x="53.3937%" y="4453" width="1.8812%" height="15" fill="rgb(252,222,34)" fg:x="206027615" fg:w="7258829"/><text x="53.6437%" y="4463.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7,258,829 samples, 1.88%)</title><rect x="53.3937%" y="4437" width="1.8812%" height="15" fill="rgb(252,92,48)" fg:x="206027615" fg:w="7258829"/><text x="53.6437%" y="4447.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6,014,088 samples, 1.56%)</title><rect x="53.7163%" y="4421" width="1.5586%" height="15" fill="rgb(245,223,24)" fg:x="207272356" fg:w="6014088"/><text x="53.9663%" y="4431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3,602,987 samples, 0.93%)</title><rect x="54.3412%" y="4405" width="0.9337%" height="15" fill="rgb(205,176,3)" fg:x="209683457" fg:w="3602987"/><text x="54.5912%" y="4415.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (2,448,039 samples, 0.63%)</title><rect x="55.2749%" y="4469" width="0.6344%" height="15" fill="rgb(235,151,15)" fg:x="213286444" fg:w="2448039"/><text x="55.5249%" y="4479.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1,195,980 samples, 0.31%)</title><rect x="55.5994%" y="4453" width="0.3099%" height="15" fill="rgb(237,209,11)" fg:x="214538503" fg:w="1195980"/><text x="55.8494%" y="4463.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1,195,980 samples, 0.31%)</title><rect x="55.5994%" y="4437" width="0.3099%" height="15" fill="rgb(243,227,24)" fg:x="214538503" fg:w="1195980"/><text x="55.8494%" y="4447.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1,195,980 samples, 0.31%)</title><rect x="55.5994%" y="4421" width="0.3099%" height="15" fill="rgb(239,193,16)" fg:x="214538503" fg:w="1195980"/><text x="55.8494%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,710,933 samples, 0.96%)</title><rect x="56.2198%" y="4389" width="0.9617%" height="15" fill="rgb(231,27,9)" fg:x="216932329" fg:w="3710933"/><text x="56.4698%" y="4399.50"></text></g><g><title>core::hash::sip::u8to64_le (2,465,212 samples, 0.64%)</title><rect x="56.5426%" y="4373" width="0.6389%" height="15" fill="rgb(219,169,10)" fg:x="218178050" fg:w="2465212"/><text x="56.7926%" y="4383.50"></text></g><g><title>hashbrown::map::make_hash (20,810,530 samples, 5.39%)</title><rect x="53.0671%" y="4501" width="5.3932%" height="15" fill="rgb(244,229,43)" fg:x="204767474" fg:w="20810530"/><text x="53.3171%" y="4511.50">hashbro..</text></g><g><title>core::hash::BuildHasher::hash_one (20,810,530 samples, 5.39%)</title><rect x="53.0671%" y="4485" width="5.3932%" height="15" fill="rgb(254,38,20)" fg:x="204767474" fg:w="20810530"/><text x="53.3171%" y="4495.50">core::h..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (9,843,521 samples, 2.55%)</title><rect x="55.9093%" y="4469" width="2.5510%" height="15" fill="rgb(250,47,30)" fg:x="215734483" fg:w="9843521"/><text x="56.1593%" y="4479.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (9,843,521 samples, 2.55%)</title><rect x="55.9093%" y="4453" width="2.5510%" height="15" fill="rgb(224,124,36)" fg:x="215734483" fg:w="9843521"/><text x="56.1593%" y="4463.50">co..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (9,843,521 samples, 2.55%)</title><rect x="55.9093%" y="4437" width="2.5510%" height="15" fill="rgb(246,68,51)" fg:x="215734483" fg:w="9843521"/><text x="56.1593%" y="4447.50">&lt;s..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (9,843,521 samples, 2.55%)</title><rect x="55.9093%" y="4421" width="2.5510%" height="15" fill="rgb(253,43,49)" fg:x="215734483" fg:w="9843521"/><text x="56.1593%" y="4431.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (9,843,521 samples, 2.55%)</title><rect x="55.9093%" y="4405" width="2.5510%" height="15" fill="rgb(219,54,36)" fg:x="215734483" fg:w="9843521"/><text x="56.1593%" y="4415.50">&lt;c..</text></g><g><title>core::hash::Hasher::write_u8 (4,934,742 samples, 1.28%)</title><rect x="57.1815%" y="4389" width="1.2789%" height="15" fill="rgb(227,133,34)" fg:x="220643262" fg:w="4934742"/><text x="57.4315%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4,934,742 samples, 1.28%)</title><rect x="57.1815%" y="4373" width="1.2789%" height="15" fill="rgb(247,227,15)" fg:x="220643262" fg:w="4934742"/><text x="57.4315%" y="4383.50"></text></g><g><title>core::hash::sip::u8to64_le (2,457,307 samples, 0.64%)</title><rect x="57.8235%" y="4357" width="0.6368%" height="15" fill="rgb(229,96,14)" fg:x="223120697" fg:w="2457307"/><text x="58.0735%" y="4367.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,112,188 samples, 0.29%)</title><rect x="58.4604%" y="4453" width="0.2882%" height="15" fill="rgb(220,79,17)" fg:x="225578004" fg:w="1112188"/><text x="58.7104%" y="4463.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,112,188 samples, 0.29%)</title><rect x="58.4604%" y="4437" width="0.2882%" height="15" fill="rgb(205,131,53)" fg:x="225578004" fg:w="1112188"/><text x="58.7104%" y="4447.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (1,112,188 samples, 0.29%)</title><rect x="58.4604%" y="4421" width="0.2882%" height="15" fill="rgb(209,50,29)" fg:x="225578004" fg:w="1112188"/><text x="58.7104%" y="4431.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (1,112,188 samples, 0.29%)</title><rect x="58.4604%" y="4405" width="0.2882%" height="15" fill="rgb(245,86,46)" fg:x="225578004" fg:w="1112188"/><text x="58.7104%" y="4415.50"></text></g><g><title>core::intrinsics::likely (1,249,763 samples, 0.32%)</title><rect x="58.7486%" y="4453" width="0.3239%" height="15" fill="rgb(235,66,46)" fg:x="226690192" fg:w="1249763"/><text x="58.9986%" y="4463.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (1,224,581 samples, 0.32%)</title><rect x="59.0725%" y="4453" width="0.3174%" height="15" fill="rgb(232,148,31)" fg:x="227939955" fg:w="1224581"/><text x="59.3225%" y="4463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,224,581 samples, 0.32%)</title><rect x="59.0725%" y="4437" width="0.3174%" height="15" fill="rgb(217,149,8)" fg:x="227939955" fg:w="1224581"/><text x="59.3225%" y="4447.50"></text></g><g><title>hashbrown::control::tag::Tag::full (2,403,058 samples, 0.62%)</title><rect x="59.3898%" y="4453" width="0.6228%" height="15" fill="rgb(209,183,11)" fg:x="229164536" fg:w="2403058"/><text x="59.6398%" y="4463.50"></text></g><g><title>main::benchmark::matches_class_id (30,343,440 samples, 7.86%)</title><rect x="53.0671%" y="4581" width="7.8637%" height="15" fill="rgb(208,55,20)" fg:x="204767474" fg:w="30343440"/><text x="53.3171%" y="4591.50">main::bench..</text></g><g><title>main::benchmark::node_has_class_id (30,343,440 samples, 7.86%)</title><rect x="53.0671%" y="4565" width="7.8637%" height="15" fill="rgb(218,39,14)" fg:x="204767474" fg:w="30343440"/><text x="53.3171%" y="4575.50">main::bench..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (30,343,440 samples, 7.86%)</title><rect x="53.0671%" y="4549" width="7.8637%" height="15" fill="rgb(216,169,33)" fg:x="204767474" fg:w="30343440"/><text x="53.3171%" y="4559.50">std::collec..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (30,343,440 samples, 7.86%)</title><rect x="53.0671%" y="4533" width="7.8637%" height="15" fill="rgb(233,80,24)" fg:x="204767474" fg:w="30343440"/><text x="53.3171%" y="4543.50">hashbrown::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30,343,440 samples, 7.86%)</title><rect x="53.0671%" y="4517" width="7.8637%" height="15" fill="rgb(213,179,31)" fg:x="204767474" fg:w="30343440"/><text x="53.3171%" y="4527.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9,532,910 samples, 2.47%)</title><rect x="58.4604%" y="4501" width="2.4705%" height="15" fill="rgb(209,19,5)" fg:x="225578004" fg:w="9532910"/><text x="58.7104%" y="4511.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9,532,910 samples, 2.47%)</title><rect x="58.4604%" y="4485" width="2.4705%" height="15" fill="rgb(219,18,35)" fg:x="225578004" fg:w="9532910"/><text x="58.7104%" y="4495.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner::find_inner (9,532,910 samples, 2.47%)</title><rect x="58.4604%" y="4469" width="2.4705%" height="15" fill="rgb(209,169,16)" fg:x="225578004" fg:w="9532910"/><text x="58.7104%" y="4479.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (3,543,320 samples, 0.92%)</title><rect x="60.0126%" y="4453" width="0.9183%" height="15" fill="rgb(245,90,51)" fg:x="231567594" fg:w="3543320"/><text x="60.2626%" y="4463.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (3,543,320 samples, 0.92%)</title><rect x="60.0126%" y="4437" width="0.9183%" height="15" fill="rgb(220,99,45)" fg:x="231567594" fg:w="3543320"/><text x="60.2626%" y="4447.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (3,543,320 samples, 0.92%)</title><rect x="60.0126%" y="4421" width="0.9183%" height="15" fill="rgb(249,89,25)" fg:x="231567594" fg:w="3543320"/><text x="60.2626%" y="4431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3,543,320 samples, 0.92%)</title><rect x="60.0126%" y="4405" width="0.9183%" height="15" fill="rgb(239,193,0)" fg:x="231567594" fg:w="3543320"/><text x="60.2626%" y="4415.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3,543,320 samples, 0.92%)</title><rect x="60.0126%" y="4389" width="0.9183%" height="15" fill="rgb(231,126,1)" fg:x="231567594" fg:w="3543320"/><text x="60.2626%" y="4399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3,543,320 samples, 0.92%)</title><rect x="60.0126%" y="4373" width="0.9183%" height="15" fill="rgb(243,166,3)" fg:x="231567594" fg:w="3543320"/><text x="60.2626%" y="4383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (3,543,320 samples, 0.92%)</title><rect x="60.0126%" y="4357" width="0.9183%" height="15" fill="rgb(223,22,34)" fg:x="231567594" fg:w="3543320"/><text x="60.2626%" y="4367.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3,543,320 samples, 0.92%)</title><rect x="60.0126%" y="4341" width="0.9183%" height="15" fill="rgb(251,52,51)" fg:x="231567594" fg:w="3543320"/><text x="60.2626%" y="4351.50"></text></g><g><title>[libc.so.6] (3,543,320 samples, 0.92%)</title><rect x="60.0126%" y="4325" width="0.9183%" height="15" fill="rgb(221,165,28)" fg:x="231567594" fg:w="3543320"/><text x="60.2626%" y="4335.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (32,825,573 samples, 8.51%)</title><rect x="52.7530%" y="4597" width="8.5070%" height="15" fill="rgb(218,121,47)" fg:x="203555409" fg:w="32825573"/><text x="53.0030%" y="4607.50">main::benchm..</text></g><g><title>main::benchmark::matches_id_id (1,270,068 samples, 0.33%)</title><rect x="60.9309%" y="4581" width="0.3291%" height="15" fill="rgb(209,120,9)" fg:x="235110914" fg:w="1270068"/><text x="61.1809%" y="4591.50"></text></g><g><title>main::benchmark::get_node_id_id (1,270,068 samples, 0.33%)</title><rect x="60.9309%" y="4565" width="0.3291%" height="15" fill="rgb(236,68,12)" fg:x="235110914" fg:w="1270068"/><text x="61.1809%" y="4575.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,270,068 samples, 0.33%)</title><rect x="60.9309%" y="4549" width="0.3291%" height="15" fill="rgb(225,194,26)" fg:x="235110914" fg:w="1270068"/><text x="61.1809%" y="4559.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (1,270,068 samples, 0.33%)</title><rect x="60.9309%" y="4533" width="0.3291%" height="15" fill="rgb(231,84,39)" fg:x="235110914" fg:w="1270068"/><text x="61.1809%" y="4543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,270,068 samples, 0.33%)</title><rect x="60.9309%" y="4517" width="0.3291%" height="15" fill="rgb(210,11,45)" fg:x="235110914" fg:w="1270068"/><text x="61.1809%" y="4527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,270,068 samples, 0.33%)</title><rect x="60.9309%" y="4501" width="0.3291%" height="15" fill="rgb(224,54,52)" fg:x="235110914" fg:w="1270068"/><text x="61.1809%" y="4511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,270,068 samples, 0.33%)</title><rect x="60.9309%" y="4485" width="0.3291%" height="15" fill="rgb(238,102,14)" fg:x="235110914" fg:w="1270068"/><text x="61.1809%" y="4495.50"></text></g><g><title>hashbrown::map::make_hash (1,270,068 samples, 0.33%)</title><rect x="60.9309%" y="4469" width="0.3291%" height="15" fill="rgb(243,160,52)" fg:x="235110914" fg:w="1270068"/><text x="61.1809%" y="4479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,270,068 samples, 0.33%)</title><rect x="60.9309%" y="4453" width="0.3291%" height="15" fill="rgb(216,114,19)" fg:x="235110914" fg:w="1270068"/><text x="61.1809%" y="4463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,270,068 samples, 0.33%)</title><rect x="60.9309%" y="4437" width="0.3291%" height="15" fill="rgb(244,166,37)" fg:x="235110914" fg:w="1270068"/><text x="61.1809%" y="4447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,270,068 samples, 0.33%)</title><rect x="60.9309%" y="4421" width="0.3291%" height="15" fill="rgb(246,29,44)" fg:x="235110914" fg:w="1270068"/><text x="61.1809%" y="4431.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,270,068 samples, 0.33%)</title><rect x="60.9309%" y="4405" width="0.3291%" height="15" fill="rgb(215,56,53)" fg:x="235110914" fg:w="1270068"/><text x="61.1809%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,270,068 samples, 0.33%)</title><rect x="60.9309%" y="4389" width="0.3291%" height="15" fill="rgb(217,60,2)" fg:x="235110914" fg:w="1270068"/><text x="61.1809%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,270,068 samples, 0.33%)</title><rect x="60.9309%" y="4373" width="0.3291%" height="15" fill="rgb(207,26,24)" fg:x="235110914" fg:w="1270068"/><text x="61.1809%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,270,068 samples, 0.33%)</title><rect x="60.9309%" y="4357" width="0.3291%" height="15" fill="rgb(252,210,15)" fg:x="235110914" fg:w="1270068"/><text x="61.1809%" y="4367.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,256,343 samples, 0.33%)</title><rect x="61.2600%" y="4565" width="0.3256%" height="15" fill="rgb(253,209,26)" fg:x="236380982" fg:w="1256343"/><text x="61.5100%" y="4575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,256,343 samples, 0.33%)</title><rect x="61.2600%" y="4549" width="0.3256%" height="15" fill="rgb(238,170,14)" fg:x="236380982" fg:w="1256343"/><text x="61.5100%" y="4559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,256,343 samples, 0.33%)</title><rect x="61.2600%" y="4533" width="0.3256%" height="15" fill="rgb(216,178,15)" fg:x="236380982" fg:w="1256343"/><text x="61.5100%" y="4543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,256,343 samples, 0.33%)</title><rect x="61.2600%" y="4517" width="0.3256%" height="15" fill="rgb(250,197,2)" fg:x="236380982" fg:w="1256343"/><text x="61.5100%" y="4527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,256,343 samples, 0.33%)</title><rect x="61.2600%" y="4501" width="0.3256%" height="15" fill="rgb(212,70,42)" fg:x="236380982" fg:w="1256343"/><text x="61.5100%" y="4511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,256,343 samples, 0.33%)</title><rect x="61.2600%" y="4485" width="0.3256%" height="15" fill="rgb(227,213,9)" fg:x="236380982" fg:w="1256343"/><text x="61.5100%" y="4495.50"></text></g><g><title>alloc::alloc::dealloc (1,256,343 samples, 0.33%)</title><rect x="61.2600%" y="4469" width="0.3256%" height="15" fill="rgb(245,99,25)" fg:x="236380982" fg:w="1256343"/><text x="61.5100%" y="4479.50"></text></g><g><title>cfree (1,256,343 samples, 0.33%)</title><rect x="61.2600%" y="4453" width="0.3256%" height="15" fill="rgb(250,82,29)" fg:x="236380982" fg:w="1256343"/><text x="61.5100%" y="4463.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (1,150,389 samples, 0.30%)</title><rect x="61.5856%" y="4565" width="0.2981%" height="15" fill="rgb(241,226,54)" fg:x="237637325" fg:w="1150389"/><text x="61.8356%" y="4575.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,131,970 samples, 0.29%)</title><rect x="62.1963%" y="4533" width="0.2934%" height="15" fill="rgb(221,99,41)" fg:x="239993674" fg:w="1131970"/><text x="62.4463%" y="4543.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,131,970 samples, 0.29%)</title><rect x="62.1963%" y="4517" width="0.2934%" height="15" fill="rgb(213,90,21)" fg:x="239993674" fg:w="1131970"/><text x="62.4463%" y="4527.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,131,970 samples, 0.29%)</title><rect x="62.1963%" y="4501" width="0.2934%" height="15" fill="rgb(205,208,24)" fg:x="239993674" fg:w="1131970"/><text x="62.4463%" y="4511.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,131,970 samples, 0.29%)</title><rect x="62.1963%" y="4485" width="0.2934%" height="15" fill="rgb(246,31,12)" fg:x="239993674" fg:w="1131970"/><text x="62.4463%" y="4495.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,131,970 samples, 0.29%)</title><rect x="62.1963%" y="4469" width="0.2934%" height="15" fill="rgb(213,154,6)" fg:x="239993674" fg:w="1131970"/><text x="62.4463%" y="4479.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (5,985,853 samples, 1.55%)</title><rect x="62.4897%" y="4453" width="1.5513%" height="15" fill="rgb(222,163,29)" fg:x="241125644" fg:w="5985853"/><text x="62.7397%" y="4463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5,985,853 samples, 1.55%)</title><rect x="62.4897%" y="4437" width="1.5513%" height="15" fill="rgb(227,201,8)" fg:x="241125644" fg:w="5985853"/><text x="62.7397%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5,985,853 samples, 1.55%)</title><rect x="62.4897%" y="4421" width="1.5513%" height="15" fill="rgb(233,9,32)" fg:x="241125644" fg:w="5985853"/><text x="62.7397%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5,985,853 samples, 1.55%)</title><rect x="62.4897%" y="4405" width="1.5513%" height="15" fill="rgb(217,54,24)" fg:x="241125644" fg:w="5985853"/><text x="62.7397%" y="4415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,841,410 samples, 1.25%)</title><rect x="62.7863%" y="4389" width="1.2547%" height="15" fill="rgb(235,192,0)" fg:x="242270087" fg:w="4841410"/><text x="63.0363%" y="4399.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1,233,314 samples, 0.32%)</title><rect x="64.0409%" y="4453" width="0.3196%" height="15" fill="rgb(235,45,9)" fg:x="247111497" fg:w="1233314"/><text x="64.2909%" y="4463.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1,233,314 samples, 0.32%)</title><rect x="64.0409%" y="4437" width="0.3196%" height="15" fill="rgb(246,42,40)" fg:x="247111497" fg:w="1233314"/><text x="64.2909%" y="4447.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1,233,314 samples, 0.32%)</title><rect x="64.0409%" y="4421" width="0.3196%" height="15" fill="rgb(248,111,24)" fg:x="247111497" fg:w="1233314"/><text x="64.2909%" y="4431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1,233,314 samples, 0.32%)</title><rect x="64.0409%" y="4405" width="0.3196%" height="15" fill="rgb(249,65,22)" fg:x="247111497" fg:w="1233314"/><text x="64.2909%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,409,691 samples, 0.62%)</title><rect x="64.6849%" y="4373" width="0.6245%" height="15" fill="rgb(238,111,51)" fg:x="249596201" fg:w="2409691"/><text x="64.9349%" y="4383.50"></text></g><g><title>core::hash::sip::u8to64_le (1,212,899 samples, 0.31%)</title><rect x="64.9950%" y="4357" width="0.3143%" height="15" fill="rgb(250,118,22)" fg:x="250792993" fg:w="1212899"/><text x="65.2450%" y="4367.50"></text></g><g><title>hashbrown::map::make_hash (13,361,957 samples, 3.46%)</title><rect x="62.4897%" y="4485" width="3.4629%" height="15" fill="rgb(234,84,26)" fg:x="241125644" fg:w="13361957"/><text x="62.7397%" y="4495.50">has..</text></g><g><title>core::hash::BuildHasher::hash_one (13,361,957 samples, 3.46%)</title><rect x="62.4897%" y="4469" width="3.4629%" height="15" fill="rgb(243,172,12)" fg:x="241125644" fg:w="13361957"/><text x="62.7397%" y="4479.50">cor..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6,142,790 samples, 1.59%)</title><rect x="64.3606%" y="4453" width="1.5920%" height="15" fill="rgb(236,150,49)" fg:x="248344811" fg:w="6142790"/><text x="64.6106%" y="4463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6,142,790 samples, 1.59%)</title><rect x="64.3606%" y="4437" width="1.5920%" height="15" fill="rgb(225,197,26)" fg:x="248344811" fg:w="6142790"/><text x="64.6106%" y="4447.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (6,142,790 samples, 1.59%)</title><rect x="64.3606%" y="4421" width="1.5920%" height="15" fill="rgb(214,17,42)" fg:x="248344811" fg:w="6142790"/><text x="64.6106%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (6,142,790 samples, 1.59%)</title><rect x="64.3606%" y="4405" width="1.5920%" height="15" fill="rgb(224,165,40)" fg:x="248344811" fg:w="6142790"/><text x="64.6106%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (6,142,790 samples, 1.59%)</title><rect x="64.3606%" y="4389" width="1.5920%" height="15" fill="rgb(246,100,4)" fg:x="248344811" fg:w="6142790"/><text x="64.6106%" y="4399.50"></text></g><g><title>core::hash::Hasher::write_u8 (2,481,709 samples, 0.64%)</title><rect x="65.3094%" y="4373" width="0.6432%" height="15" fill="rgb(222,103,0)" fg:x="252005892" fg:w="2481709"/><text x="65.5594%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,481,709 samples, 0.64%)</title><rect x="65.3094%" y="4357" width="0.6432%" height="15" fill="rgb(227,189,26)" fg:x="252005892" fg:w="2481709"/><text x="65.5594%" y="4367.50"></text></g><g><title>core::hash::sip::u8to64_le (1,242,630 samples, 0.32%)</title><rect x="65.6305%" y="4341" width="0.3220%" height="15" fill="rgb(214,202,17)" fg:x="253244971" fg:w="1242630"/><text x="65.8805%" y="4351.50"></text></g><g><title>core::intrinsics::likely (1,252,696 samples, 0.32%)</title><rect x="65.9525%" y="4437" width="0.3246%" height="15" fill="rgb(229,111,3)" fg:x="254487601" fg:w="1252696"/><text x="66.2025%" y="4447.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (1,172,847 samples, 0.30%)</title><rect x="66.2772%" y="4437" width="0.3040%" height="15" fill="rgb(229,172,15)" fg:x="255740297" fg:w="1172847"/><text x="66.5272%" y="4447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,172,847 samples, 0.30%)</title><rect x="66.2772%" y="4421" width="0.3040%" height="15" fill="rgb(230,224,35)" fg:x="255740297" fg:w="1172847"/><text x="66.5272%" y="4431.50"></text></g><g><title>hashbrown::control::tag::Tag::full (2,442,632 samples, 0.63%)</title><rect x="66.5811%" y="4437" width="0.6330%" height="15" fill="rgb(251,141,6)" fg:x="256913144" fg:w="2442632"/><text x="66.8311%" y="4447.50"></text></g><g><title>main::benchmark::matches_class_id (21,681,864 samples, 5.62%)</title><rect x="61.8838%" y="4565" width="5.6190%" height="15" fill="rgb(225,208,6)" fg:x="238787714" fg:w="21681864"/><text x="62.1338%" y="4575.50">main::b..</text></g><g><title>main::benchmark::node_has_class_id (21,681,864 samples, 5.62%)</title><rect x="61.8838%" y="4549" width="5.6190%" height="15" fill="rgb(246,181,16)" fg:x="238787714" fg:w="21681864"/><text x="62.1338%" y="4559.50">main::b..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (19,343,934 samples, 5.01%)</title><rect x="62.4897%" y="4533" width="5.0131%" height="15" fill="rgb(227,129,36)" fg:x="241125644" fg:w="19343934"/><text x="62.7397%" y="4543.50">std::c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (19,343,934 samples, 5.01%)</title><rect x="62.4897%" y="4517" width="5.0131%" height="15" fill="rgb(248,117,24)" fg:x="241125644" fg:w="19343934"/><text x="62.7397%" y="4527.50">hashbr..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (19,343,934 samples, 5.01%)</title><rect x="62.4897%" y="4501" width="5.0131%" height="15" fill="rgb(214,185,35)" fg:x="241125644" fg:w="19343934"/><text x="62.7397%" y="4511.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5,981,977 samples, 1.55%)</title><rect x="65.9525%" y="4485" width="1.5503%" height="15" fill="rgb(236,150,34)" fg:x="254487601" fg:w="5981977"/><text x="66.2025%" y="4495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5,981,977 samples, 1.55%)</title><rect x="65.9525%" y="4469" width="1.5503%" height="15" fill="rgb(243,228,27)" fg:x="254487601" fg:w="5981977"/><text x="66.2025%" y="4479.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5,981,977 samples, 1.55%)</title><rect x="65.9525%" y="4453" width="1.5503%" height="15" fill="rgb(245,77,44)" fg:x="254487601" fg:w="5981977"/><text x="66.2025%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1,113,802 samples, 0.29%)</title><rect x="67.2141%" y="4437" width="0.2887%" height="15" fill="rgb(235,214,42)" fg:x="259355776" fg:w="1113802"/><text x="67.4641%" y="4447.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1,113,802 samples, 0.29%)</title><rect x="67.2141%" y="4421" width="0.2887%" height="15" fill="rgb(221,74,3)" fg:x="259355776" fg:w="1113802"/><text x="67.4641%" y="4431.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1,113,802 samples, 0.29%)</title><rect x="67.2141%" y="4405" width="0.2887%" height="15" fill="rgb(206,121,29)" fg:x="259355776" fg:w="1113802"/><text x="67.4641%" y="4415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3,694,129 samples, 0.96%)</title><rect x="67.8268%" y="4421" width="0.9574%" height="15" fill="rgb(249,131,53)" fg:x="261719713" fg:w="3694129"/><text x="68.0768%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,694,129 samples, 0.96%)</title><rect x="67.8268%" y="4405" width="0.9574%" height="15" fill="rgb(236,170,29)" fg:x="261719713" fg:w="3694129"/><text x="68.0768%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,694,129 samples, 0.96%)</title><rect x="67.8268%" y="4389" width="0.9574%" height="15" fill="rgb(247,96,15)" fg:x="261719713" fg:w="3694129"/><text x="68.0768%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,210,835 samples, 0.31%)</title><rect x="68.4703%" y="4373" width="0.3138%" height="15" fill="rgb(211,210,7)" fg:x="264203007" fg:w="1210835"/><text x="68.7203%" y="4383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,210,835 samples, 0.31%)</title><rect x="68.4703%" y="4357" width="0.3138%" height="15" fill="rgb(240,88,50)" fg:x="264203007" fg:w="1210835"/><text x="68.7203%" y="4367.50"></text></g><g><title>hashbrown::map::make_hash (6,645,824 samples, 1.72%)</title><rect x="67.5028%" y="4453" width="1.7223%" height="15" fill="rgb(209,229,26)" fg:x="260469578" fg:w="6645824"/><text x="67.7528%" y="4463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5,395,689 samples, 1.40%)</title><rect x="67.8268%" y="4437" width="1.3983%" height="15" fill="rgb(210,68,23)" fg:x="261719713" fg:w="5395689"/><text x="68.0768%" y="4447.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1,701,560 samples, 0.44%)</title><rect x="68.7841%" y="4421" width="0.4410%" height="15" fill="rgb(229,180,13)" fg:x="265413842" fg:w="1701560"/><text x="69.0341%" y="4431.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1,200,056 samples, 0.31%)</title><rect x="68.9141%" y="4405" width="0.3110%" height="15" fill="rgb(236,53,44)" fg:x="265915346" fg:w="1200056"/><text x="69.1641%" y="4415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1,200,056 samples, 0.31%)</title><rect x="68.9141%" y="4389" width="0.3110%" height="15" fill="rgb(244,214,29)" fg:x="265915346" fg:w="1200056"/><text x="69.1641%" y="4399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1,200,056 samples, 0.31%)</title><rect x="68.9141%" y="4373" width="0.3110%" height="15" fill="rgb(220,75,29)" fg:x="265915346" fg:w="1200056"/><text x="69.1641%" y="4383.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (31,939,637 samples, 8.28%)</title><rect x="61.2600%" y="4581" width="8.2774%" height="15" fill="rgb(214,183,37)" fg:x="236380982" fg:w="31939637"/><text x="61.5100%" y="4591.50">main::benchm..</text></g><g><title>main::benchmark::matches_id_id (7,851,041 samples, 2.03%)</title><rect x="67.5028%" y="4565" width="2.0347%" height="15" fill="rgb(239,117,29)" fg:x="260469578" fg:w="7851041"/><text x="67.7528%" y="4575.50">m..</text></g><g><title>main::benchmark::get_node_id_id (7,851,041 samples, 2.03%)</title><rect x="67.5028%" y="4549" width="2.0347%" height="15" fill="rgb(237,171,35)" fg:x="260469578" fg:w="7851041"/><text x="67.7528%" y="4559.50">m..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (7,851,041 samples, 2.03%)</title><rect x="67.5028%" y="4533" width="2.0347%" height="15" fill="rgb(229,178,53)" fg:x="260469578" fg:w="7851041"/><text x="67.7528%" y="4543.50">c..</text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (7,851,041 samples, 2.03%)</title><rect x="67.5028%" y="4517" width="2.0347%" height="15" fill="rgb(210,102,19)" fg:x="260469578" fg:w="7851041"/><text x="67.7528%" y="4527.50">m..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7,851,041 samples, 2.03%)</title><rect x="67.5028%" y="4501" width="2.0347%" height="15" fill="rgb(235,127,22)" fg:x="260469578" fg:w="7851041"/><text x="67.7528%" y="4511.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7,851,041 samples, 2.03%)</title><rect x="67.5028%" y="4485" width="2.0347%" height="15" fill="rgb(244,31,31)" fg:x="260469578" fg:w="7851041"/><text x="67.7528%" y="4495.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7,851,041 samples, 2.03%)</title><rect x="67.5028%" y="4469" width="2.0347%" height="15" fill="rgb(231,43,21)" fg:x="260469578" fg:w="7851041"/><text x="67.7528%" y="4479.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,205,217 samples, 0.31%)</title><rect x="69.2251%" y="4453" width="0.3123%" height="15" fill="rgb(217,131,35)" fg:x="267115402" fg:w="1205217"/><text x="69.4751%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,205,217 samples, 0.31%)</title><rect x="69.2251%" y="4437" width="0.3123%" height="15" fill="rgb(221,149,4)" fg:x="267115402" fg:w="1205217"/><text x="69.4751%" y="4447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,205,217 samples, 0.31%)</title><rect x="69.2251%" y="4421" width="0.3123%" height="15" fill="rgb(232,170,28)" fg:x="267115402" fg:w="1205217"/><text x="69.4751%" y="4431.50"></text></g><g><title>core::intrinsics::likely (1,205,217 samples, 0.31%)</title><rect x="69.2251%" y="4405" width="0.3123%" height="15" fill="rgb(238,56,10)" fg:x="267115402" fg:w="1205217"/><text x="69.4751%" y="4415.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (2,329,085 samples, 0.60%)</title><rect x="70.1187%" y="4549" width="0.6036%" height="15" fill="rgb(235,196,14)" fg:x="270563236" fg:w="2329085"/><text x="70.3687%" y="4559.50"></text></g><g><title>hashbrown::map::make_hash (2,476,906 samples, 0.64%)</title><rect x="70.7223%" y="4469" width="0.6419%" height="15" fill="rgb(216,45,48)" fg:x="272892321" fg:w="2476906"/><text x="70.9723%" y="4479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,476,906 samples, 0.64%)</title><rect x="70.7223%" y="4453" width="0.6419%" height="15" fill="rgb(238,213,17)" fg:x="272892321" fg:w="2476906"/><text x="70.9723%" y="4463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,476,906 samples, 0.64%)</title><rect x="70.7223%" y="4437" width="0.6419%" height="15" fill="rgb(212,13,2)" fg:x="272892321" fg:w="2476906"/><text x="70.9723%" y="4447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,476,906 samples, 0.64%)</title><rect x="70.7223%" y="4421" width="0.6419%" height="15" fill="rgb(240,114,20)" fg:x="272892321" fg:w="2476906"/><text x="70.9723%" y="4431.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2,476,906 samples, 0.64%)</title><rect x="70.7223%" y="4405" width="0.6419%" height="15" fill="rgb(228,41,40)" fg:x="272892321" fg:w="2476906"/><text x="70.9723%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2,476,906 samples, 0.64%)</title><rect x="70.7223%" y="4389" width="0.6419%" height="15" fill="rgb(244,132,35)" fg:x="272892321" fg:w="2476906"/><text x="70.9723%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2,476,906 samples, 0.64%)</title><rect x="70.7223%" y="4373" width="0.6419%" height="15" fill="rgb(253,189,4)" fg:x="272892321" fg:w="2476906"/><text x="70.9723%" y="4383.50"></text></g><g><title>core::hash::Hasher::write_u8 (2,476,906 samples, 0.64%)</title><rect x="70.7223%" y="4357" width="0.6419%" height="15" fill="rgb(224,37,19)" fg:x="272892321" fg:w="2476906"/><text x="70.9723%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,476,906 samples, 0.64%)</title><rect x="70.7223%" y="4341" width="0.6419%" height="15" fill="rgb(235,223,18)" fg:x="272892321" fg:w="2476906"/><text x="70.9723%" y="4351.50"></text></g><g><title>core::hash::sip::u8to64_le (2,476,906 samples, 0.64%)</title><rect x="70.7223%" y="4325" width="0.6419%" height="15" fill="rgb(235,163,25)" fg:x="272892321" fg:w="2476906"/><text x="70.9723%" y="4335.50"></text></g><g><title>main::benchmark::matches_class_id (3,726,073 samples, 0.97%)</title><rect x="70.7223%" y="4549" width="0.9656%" height="15" fill="rgb(217,145,28)" fg:x="272892321" fg:w="3726073"/><text x="70.9723%" y="4559.50"></text></g><g><title>main::benchmark::node_has_class_id (3,726,073 samples, 0.97%)</title><rect x="70.7223%" y="4533" width="0.9656%" height="15" fill="rgb(223,223,32)" fg:x="272892321" fg:w="3726073"/><text x="70.9723%" y="4543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,726,073 samples, 0.97%)</title><rect x="70.7223%" y="4517" width="0.9656%" height="15" fill="rgb(227,189,39)" fg:x="272892321" fg:w="3726073"/><text x="70.9723%" y="4527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,726,073 samples, 0.97%)</title><rect x="70.7223%" y="4501" width="0.9656%" height="15" fill="rgb(248,10,22)" fg:x="272892321" fg:w="3726073"/><text x="70.9723%" y="4511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,726,073 samples, 0.97%)</title><rect x="70.7223%" y="4485" width="0.9656%" height="15" fill="rgb(248,46,39)" fg:x="272892321" fg:w="3726073"/><text x="70.9723%" y="4495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,249,167 samples, 0.32%)</title><rect x="71.3642%" y="4469" width="0.3237%" height="15" fill="rgb(248,113,48)" fg:x="275369227" fg:w="1249167"/><text x="71.6142%" y="4479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,249,167 samples, 0.32%)</title><rect x="71.3642%" y="4453" width="0.3237%" height="15" fill="rgb(245,16,25)" fg:x="275369227" fg:w="1249167"/><text x="71.6142%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,249,167 samples, 0.32%)</title><rect x="71.3642%" y="4437" width="0.3237%" height="15" fill="rgb(249,152,16)" fg:x="275369227" fg:w="1249167"/><text x="71.6142%" y="4447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1,249,167 samples, 0.32%)</title><rect x="71.3642%" y="4421" width="0.3237%" height="15" fill="rgb(250,16,1)" fg:x="275369227" fg:w="1249167"/><text x="71.6142%" y="4431.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1,249,167 samples, 0.32%)</title><rect x="71.3642%" y="4405" width="0.3237%" height="15" fill="rgb(249,138,3)" fg:x="275369227" fg:w="1249167"/><text x="71.6142%" y="4415.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1,249,167 samples, 0.32%)</title><rect x="71.3642%" y="4389" width="0.3237%" height="15" fill="rgb(227,71,41)" fg:x="275369227" fg:w="1249167"/><text x="71.6142%" y="4399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,249,167 samples, 0.32%)</title><rect x="71.3642%" y="4373" width="0.3237%" height="15" fill="rgb(209,184,23)" fg:x="275369227" fg:w="1249167"/><text x="71.6142%" y="4383.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,249,167 samples, 0.32%)</title><rect x="71.3642%" y="4357" width="0.3237%" height="15" fill="rgb(223,215,31)" fg:x="275369227" fg:w="1249167"/><text x="71.6142%" y="4367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,249,167 samples, 0.32%)</title><rect x="71.3642%" y="4341" width="0.3237%" height="15" fill="rgb(210,146,28)" fg:x="275369227" fg:w="1249167"/><text x="71.6142%" y="4351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,249,167 samples, 0.32%)</title><rect x="71.3642%" y="4325" width="0.3237%" height="15" fill="rgb(209,183,41)" fg:x="275369227" fg:w="1249167"/><text x="71.6142%" y="4335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,249,167 samples, 0.32%)</title><rect x="71.3642%" y="4309" width="0.3237%" height="15" fill="rgb(209,224,45)" fg:x="275369227" fg:w="1249167"/><text x="71.6142%" y="4319.50"></text></g><g><title>[libc.so.6] (1,249,167 samples, 0.32%)</title><rect x="71.3642%" y="4293" width="0.3237%" height="15" fill="rgb(224,209,51)" fg:x="275369227" fg:w="1249167"/><text x="71.6142%" y="4303.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3,643,419 samples, 0.94%)</title><rect x="71.6879%" y="4405" width="0.9442%" height="15" fill="rgb(223,17,39)" fg:x="276618394" fg:w="3643419"/><text x="71.9379%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,643,419 samples, 0.94%)</title><rect x="71.6879%" y="4389" width="0.9442%" height="15" fill="rgb(234,204,37)" fg:x="276618394" fg:w="3643419"/><text x="71.9379%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,643,419 samples, 0.94%)</title><rect x="71.6879%" y="4373" width="0.9442%" height="15" fill="rgb(236,120,5)" fg:x="276618394" fg:w="3643419"/><text x="71.9379%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2,445,379 samples, 0.63%)</title><rect x="71.9984%" y="4357" width="0.6337%" height="15" fill="rgb(248,97,27)" fg:x="277816434" fg:w="2445379"/><text x="72.2484%" y="4367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,202,475 samples, 0.31%)</title><rect x="72.3205%" y="4341" width="0.3116%" height="15" fill="rgb(240,66,17)" fg:x="279059338" fg:w="1202475"/><text x="72.5705%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,228,438 samples, 0.32%)</title><rect x="72.6321%" y="4325" width="0.3184%" height="15" fill="rgb(210,79,3)" fg:x="280261813" fg:w="1228438"/><text x="72.8821%" y="4335.50"></text></g><g><title>hashbrown::map::make_hash (6,087,168 samples, 1.58%)</title><rect x="71.6879%" y="4437" width="1.5775%" height="15" fill="rgb(214,176,27)" fg:x="276618394" fg:w="6087168"/><text x="71.9379%" y="4447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6,087,168 samples, 1.58%)</title><rect x="71.6879%" y="4421" width="1.5775%" height="15" fill="rgb(235,185,3)" fg:x="276618394" fg:w="6087168"/><text x="71.9379%" y="4431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,443,749 samples, 0.63%)</title><rect x="72.6321%" y="4405" width="0.6333%" height="15" fill="rgb(227,24,12)" fg:x="280261813" fg:w="2443749"/><text x="72.8821%" y="4415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,443,749 samples, 0.63%)</title><rect x="72.6321%" y="4389" width="0.6333%" height="15" fill="rgb(252,169,48)" fg:x="280261813" fg:w="2443749"/><text x="72.8821%" y="4399.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2,443,749 samples, 0.63%)</title><rect x="72.6321%" y="4373" width="0.6333%" height="15" fill="rgb(212,65,1)" fg:x="280261813" fg:w="2443749"/><text x="72.8821%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2,443,749 samples, 0.63%)</title><rect x="72.6321%" y="4357" width="0.6333%" height="15" fill="rgb(242,39,24)" fg:x="280261813" fg:w="2443749"/><text x="72.8821%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2,443,749 samples, 0.63%)</title><rect x="72.6321%" y="4341" width="0.6333%" height="15" fill="rgb(249,32,23)" fg:x="280261813" fg:w="2443749"/><text x="72.8821%" y="4351.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,215,311 samples, 0.31%)</title><rect x="72.9505%" y="4325" width="0.3150%" height="15" fill="rgb(251,195,23)" fg:x="281490251" fg:w="1215311"/><text x="73.2005%" y="4335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,215,311 samples, 0.31%)</title><rect x="72.9505%" y="4309" width="0.3150%" height="15" fill="rgb(236,174,8)" fg:x="281490251" fg:w="1215311"/><text x="73.2005%" y="4319.50"></text></g><g><title>main::benchmark::matches_id_id (7,311,819 samples, 1.89%)</title><rect x="71.6879%" y="4549" width="1.8949%" height="15" fill="rgb(220,197,8)" fg:x="276618394" fg:w="7311819"/><text x="71.9379%" y="4559.50">m..</text></g><g><title>main::benchmark::get_node_id_id (7,311,819 samples, 1.89%)</title><rect x="71.6879%" y="4533" width="1.8949%" height="15" fill="rgb(240,108,37)" fg:x="276618394" fg:w="7311819"/><text x="71.9379%" y="4543.50">m..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (7,311,819 samples, 1.89%)</title><rect x="71.6879%" y="4517" width="1.8949%" height="15" fill="rgb(232,176,24)" fg:x="276618394" fg:w="7311819"/><text x="71.9379%" y="4527.50">c..</text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (7,311,819 samples, 1.89%)</title><rect x="71.6879%" y="4501" width="1.8949%" height="15" fill="rgb(243,35,29)" fg:x="276618394" fg:w="7311819"/><text x="71.9379%" y="4511.50">m..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7,311,819 samples, 1.89%)</title><rect x="71.6879%" y="4485" width="1.8949%" height="15" fill="rgb(210,37,18)" fg:x="276618394" fg:w="7311819"/><text x="71.9379%" y="4495.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7,311,819 samples, 1.89%)</title><rect x="71.6879%" y="4469" width="1.8949%" height="15" fill="rgb(224,184,40)" fg:x="276618394" fg:w="7311819"/><text x="71.9379%" y="4479.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7,311,819 samples, 1.89%)</title><rect x="71.6879%" y="4453" width="1.8949%" height="15" fill="rgb(236,39,29)" fg:x="276618394" fg:w="7311819"/><text x="71.9379%" y="4463.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,224,651 samples, 0.32%)</title><rect x="73.2654%" y="4437" width="0.3174%" height="15" fill="rgb(232,48,39)" fg:x="282705562" fg:w="1224651"/><text x="73.5154%" y="4447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,224,651 samples, 0.32%)</title><rect x="73.2654%" y="4421" width="0.3174%" height="15" fill="rgb(236,34,42)" fg:x="282705562" fg:w="1224651"/><text x="73.5154%" y="4431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,224,651 samples, 0.32%)</title><rect x="73.2654%" y="4405" width="0.3174%" height="15" fill="rgb(243,106,37)" fg:x="282705562" fg:w="1224651"/><text x="73.5154%" y="4415.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty (1,224,651 samples, 0.32%)</title><rect x="73.2654%" y="4389" width="0.3174%" height="15" fill="rgb(218,96,6)" fg:x="282705562" fg:w="1224651"/><text x="73.5154%" y="4399.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (1,224,651 samples, 0.32%)</title><rect x="73.2654%" y="4373" width="0.3174%" height="15" fill="rgb(235,130,12)" fg:x="282705562" fg:w="1224651"/><text x="73.5154%" y="4383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,224,651 samples, 0.32%)</title><rect x="73.2654%" y="4357" width="0.3174%" height="15" fill="rgb(231,95,0)" fg:x="282705562" fg:w="1224651"/><text x="73.5154%" y="4367.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (16,862,384 samples, 4.37%)</title><rect x="69.5375%" y="4565" width="4.3700%" height="15" fill="rgb(228,12,23)" fg:x="268320619" fg:w="16862384"/><text x="69.7875%" y="4575.50">main:..</text></g><g><title>main::benchmark::matches_tag_id (1,252,790 samples, 0.32%)</title><rect x="73.5828%" y="4549" width="0.3247%" height="15" fill="rgb(216,12,1)" fg:x="283930213" fg:w="1252790"/><text x="73.8328%" y="4559.50"></text></g><g><title>main::benchmark::get_node_tag_id (1,252,790 samples, 0.32%)</title><rect x="73.5828%" y="4533" width="0.3247%" height="15" fill="rgb(219,59,3)" fg:x="283930213" fg:w="1252790"/><text x="73.8328%" y="4543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,252,790 samples, 0.32%)</title><rect x="73.5828%" y="4517" width="0.3247%" height="15" fill="rgb(215,208,46)" fg:x="283930213" fg:w="1252790"/><text x="73.8328%" y="4527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,252,790 samples, 0.32%)</title><rect x="73.5828%" y="4501" width="0.3247%" height="15" fill="rgb(254,224,29)" fg:x="283930213" fg:w="1252790"/><text x="73.8328%" y="4511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,252,790 samples, 0.32%)</title><rect x="73.5828%" y="4485" width="0.3247%" height="15" fill="rgb(232,14,29)" fg:x="283930213" fg:w="1252790"/><text x="73.8328%" y="4495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,252,790 samples, 0.32%)</title><rect x="73.5828%" y="4469" width="0.3247%" height="15" fill="rgb(208,45,52)" fg:x="283930213" fg:w="1252790"/><text x="73.8328%" y="4479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,252,790 samples, 0.32%)</title><rect x="73.5828%" y="4453" width="0.3247%" height="15" fill="rgb(234,191,28)" fg:x="283930213" fg:w="1252790"/><text x="73.8328%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,252,790 samples, 0.32%)</title><rect x="73.5828%" y="4437" width="0.3247%" height="15" fill="rgb(244,67,43)" fg:x="283930213" fg:w="1252790"/><text x="73.8328%" y="4447.50"></text></g><g><title>hashbrown::control::tag::Tag::full (1,252,790 samples, 0.32%)</title><rect x="73.5828%" y="4421" width="0.3247%" height="15" fill="rgb(236,189,24)" fg:x="283930213" fg:w="1252790"/><text x="73.8328%" y="4431.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,280,288 samples, 0.33%)</title><rect x="73.9075%" y="4533" width="0.3318%" height="15" fill="rgb(239,214,33)" fg:x="285183003" fg:w="1280288"/><text x="74.1575%" y="4543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,280,288 samples, 0.33%)</title><rect x="73.9075%" y="4517" width="0.3318%" height="15" fill="rgb(226,176,41)" fg:x="285183003" fg:w="1280288"/><text x="74.1575%" y="4527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,280,288 samples, 0.33%)</title><rect x="73.9075%" y="4501" width="0.3318%" height="15" fill="rgb(248,47,8)" fg:x="285183003" fg:w="1280288"/><text x="74.1575%" y="4511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,280,288 samples, 0.33%)</title><rect x="73.9075%" y="4485" width="0.3318%" height="15" fill="rgb(218,81,44)" fg:x="285183003" fg:w="1280288"/><text x="74.1575%" y="4495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,280,288 samples, 0.33%)</title><rect x="73.9075%" y="4469" width="0.3318%" height="15" fill="rgb(213,98,6)" fg:x="285183003" fg:w="1280288"/><text x="74.1575%" y="4479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,280,288 samples, 0.33%)</title><rect x="73.9075%" y="4453" width="0.3318%" height="15" fill="rgb(222,85,22)" fg:x="285183003" fg:w="1280288"/><text x="74.1575%" y="4463.50"></text></g><g><title>alloc::alloc::dealloc (1,280,288 samples, 0.33%)</title><rect x="73.9075%" y="4437" width="0.3318%" height="15" fill="rgb(239,46,39)" fg:x="285183003" fg:w="1280288"/><text x="74.1575%" y="4447.50"></text></g><g><title>cfree (1,280,288 samples, 0.33%)</title><rect x="73.9075%" y="4421" width="0.3318%" height="15" fill="rgb(237,12,29)" fg:x="285183003" fg:w="1280288"/><text x="74.1575%" y="4431.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (1,230,332 samples, 0.32%)</title><rect x="74.2393%" y="4533" width="0.3189%" height="15" fill="rgb(214,77,8)" fg:x="286463291" fg:w="1230332"/><text x="74.4893%" y="4543.50"></text></g><g><title>css_bitvector_compiler::BitVector::with_capacity (1,143,484 samples, 0.30%)</title><rect x="74.5581%" y="4533" width="0.2963%" height="15" fill="rgb(217,168,37)" fg:x="287693623" fg:w="1143484"/><text x="74.8081%" y="4543.50"></text></g><g><title>alloc::vec::from_elem (1,143,484 samples, 0.30%)</title><rect x="74.5581%" y="4517" width="0.2963%" height="15" fill="rgb(221,217,23)" fg:x="287693623" fg:w="1143484"/><text x="74.8081%" y="4527.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,143,484 samples, 0.30%)</title><rect x="74.5581%" y="4501" width="0.2963%" height="15" fill="rgb(243,229,36)" fg:x="287693623" fg:w="1143484"/><text x="74.8081%" y="4511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,143,484 samples, 0.30%)</title><rect x="74.5581%" y="4485" width="0.2963%" height="15" fill="rgb(251,163,40)" fg:x="287693623" fg:w="1143484"/><text x="74.8081%" y="4495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,143,484 samples, 0.30%)</title><rect x="74.5581%" y="4469" width="0.2963%" height="15" fill="rgb(237,222,12)" fg:x="287693623" fg:w="1143484"/><text x="74.8081%" y="4479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,143,484 samples, 0.30%)</title><rect x="74.5581%" y="4453" width="0.2963%" height="15" fill="rgb(248,132,6)" fg:x="287693623" fg:w="1143484"/><text x="74.8081%" y="4463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,143,484 samples, 0.30%)</title><rect x="74.5581%" y="4437" width="0.2963%" height="15" fill="rgb(227,167,50)" fg:x="287693623" fg:w="1143484"/><text x="74.8081%" y="4447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,143,484 samples, 0.30%)</title><rect x="74.5581%" y="4421" width="0.2963%" height="15" fill="rgb(242,84,37)" fg:x="287693623" fg:w="1143484"/><text x="74.8081%" y="4431.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,143,484 samples, 0.30%)</title><rect x="74.5581%" y="4405" width="0.2963%" height="15" fill="rgb(212,4,50)" fg:x="287693623" fg:w="1143484"/><text x="74.8081%" y="4415.50"></text></g><g><title>__libc_calloc (1,143,484 samples, 0.30%)</title><rect x="74.5581%" y="4389" width="0.2963%" height="15" fill="rgb(230,228,32)" fg:x="287693623" fg:w="1143484"/><text x="74.8081%" y="4399.50"></text></g><g><title>&lt;&amp;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,212,894 samples, 0.31%)</title><rect x="74.8545%" y="4501" width="0.3143%" height="15" fill="rgb(248,217,23)" fg:x="288837107" fg:w="1212894"/><text x="75.1045%" y="4511.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (1,212,894 samples, 0.31%)</title><rect x="74.8545%" y="4485" width="0.3143%" height="15" fill="rgb(238,197,32)" fg:x="288837107" fg:w="1212894"/><text x="75.1045%" y="4495.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (1,212,894 samples, 0.31%)</title><rect x="74.8545%" y="4469" width="0.3143%" height="15" fill="rgb(236,106,1)" fg:x="288837107" fg:w="1212894"/><text x="75.1045%" y="4479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (1,212,894 samples, 0.31%)</title><rect x="74.8545%" y="4453" width="0.3143%" height="15" fill="rgb(219,228,13)" fg:x="288837107" fg:w="1212894"/><text x="75.1045%" y="4463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1,212,894 samples, 0.31%)</title><rect x="74.8545%" y="4437" width="0.3143%" height="15" fill="rgb(238,30,35)" fg:x="288837107" fg:w="1212894"/><text x="75.1045%" y="4447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1,212,894 samples, 0.31%)</title><rect x="74.8545%" y="4421" width="0.3143%" height="15" fill="rgb(236,70,23)" fg:x="288837107" fg:w="1212894"/><text x="75.1045%" y="4431.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,212,894 samples, 0.31%)</title><rect x="74.8545%" y="4405" width="0.3143%" height="15" fill="rgb(249,104,48)" fg:x="288837107" fg:w="1212894"/><text x="75.1045%" y="4415.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,212,894 samples, 0.31%)</title><rect x="74.8545%" y="4389" width="0.3143%" height="15" fill="rgb(254,117,50)" fg:x="288837107" fg:w="1212894"/><text x="75.1045%" y="4399.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (1,212,894 samples, 0.31%)</title><rect x="74.8545%" y="4373" width="0.3143%" height="15" fill="rgb(223,152,4)" fg:x="288837107" fg:w="1212894"/><text x="75.1045%" y="4383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1,212,894 samples, 0.31%)</title><rect x="74.8545%" y="4357" width="0.3143%" height="15" fill="rgb(245,6,2)" fg:x="288837107" fg:w="1212894"/><text x="75.1045%" y="4367.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,248,322 samples, 0.32%)</title><rect x="75.1688%" y="4501" width="0.3235%" height="15" fill="rgb(249,150,24)" fg:x="290050001" fg:w="1248322"/><text x="75.4188%" y="4511.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,248,322 samples, 0.32%)</title><rect x="75.1688%" y="4485" width="0.3235%" height="15" fill="rgb(228,185,42)" fg:x="290050001" fg:w="1248322"/><text x="75.4188%" y="4495.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,248,322 samples, 0.32%)</title><rect x="75.1688%" y="4469" width="0.3235%" height="15" fill="rgb(226,39,33)" fg:x="290050001" fg:w="1248322"/><text x="75.4188%" y="4479.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,248,322 samples, 0.32%)</title><rect x="75.1688%" y="4453" width="0.3235%" height="15" fill="rgb(221,166,19)" fg:x="290050001" fg:w="1248322"/><text x="75.4188%" y="4463.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,248,322 samples, 0.32%)</title><rect x="75.1688%" y="4437" width="0.3235%" height="15" fill="rgb(209,109,2)" fg:x="290050001" fg:w="1248322"/><text x="75.4188%" y="4447.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1,248,322 samples, 0.32%)</title><rect x="75.1688%" y="4421" width="0.3235%" height="15" fill="rgb(252,216,26)" fg:x="290050001" fg:w="1248322"/><text x="75.4188%" y="4431.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,248,322 samples, 0.32%)</title><rect x="75.1688%" y="4405" width="0.3235%" height="15" fill="rgb(227,173,36)" fg:x="290050001" fg:w="1248322"/><text x="75.4188%" y="4415.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,248,322 samples, 0.32%)</title><rect x="75.1688%" y="4389" width="0.3235%" height="15" fill="rgb(209,90,7)" fg:x="290050001" fg:w="1248322"/><text x="75.4188%" y="4399.50"></text></g><g><title>main::benchmark::get_string_to_id_map (1,173,015 samples, 0.30%)</title><rect x="75.4923%" y="4501" width="0.3040%" height="15" fill="rgb(250,194,11)" fg:x="291298323" fg:w="1173015"/><text x="75.7423%" y="4511.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (1,173,015 samples, 0.30%)</title><rect x="75.4923%" y="4485" width="0.3040%" height="15" fill="rgb(220,72,50)" fg:x="291298323" fg:w="1173015"/><text x="75.7423%" y="4495.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (1,173,015 samples, 0.30%)</title><rect x="75.4923%" y="4469" width="0.3040%" height="15" fill="rgb(222,106,48)" fg:x="291298323" fg:w="1173015"/><text x="75.7423%" y="4479.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get (1,173,015 samples, 0.30%)</title><rect x="75.4923%" y="4453" width="0.3040%" height="15" fill="rgb(216,220,45)" fg:x="291298323" fg:w="1173015"/><text x="75.7423%" y="4463.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::is_initialized (1,173,015 samples, 0.30%)</title><rect x="75.4923%" y="4437" width="0.3040%" height="15" fill="rgb(234,112,18)" fg:x="291298323" fg:w="1173015"/><text x="75.7423%" y="4447.50"></text></g><g><title>std::sync::poison::once::Once::is_completed (1,173,015 samples, 0.30%)</title><rect x="75.4923%" y="4421" width="0.3040%" height="15" fill="rgb(206,179,9)" fg:x="291298323" fg:w="1173015"/><text x="75.7423%" y="4431.50"></text></g><g><title>std::sys::sync::once::futex::Once::is_completed (1,173,015 samples, 0.30%)</title><rect x="75.4923%" y="4405" width="0.3040%" height="15" fill="rgb(215,115,40)" fg:x="291298323" fg:w="1173015"/><text x="75.7423%" y="4415.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1,173,015 samples, 0.30%)</title><rect x="75.4923%" y="4389" width="0.3040%" height="15" fill="rgb(222,69,34)" fg:x="291298323" fg:w="1173015"/><text x="75.7423%" y="4399.50"></text></g><g><title>core::sync::atomic::atomic_load (1,173,015 samples, 0.30%)</title><rect x="75.4923%" y="4373" width="0.3040%" height="15" fill="rgb(209,161,10)" fg:x="291298323" fg:w="1173015"/><text x="75.7423%" y="4383.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,449,553 samples, 0.63%)</title><rect x="75.7963%" y="4421" width="0.6348%" height="15" fill="rgb(217,6,38)" fg:x="292471338" fg:w="2449553"/><text x="76.0463%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,449,553 samples, 0.63%)</title><rect x="75.7963%" y="4405" width="0.6348%" height="15" fill="rgb(229,229,48)" fg:x="292471338" fg:w="2449553"/><text x="76.0463%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,449,553 samples, 0.63%)</title><rect x="75.7963%" y="4389" width="0.6348%" height="15" fill="rgb(225,21,28)" fg:x="292471338" fg:w="2449553"/><text x="76.0463%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,249,101 samples, 0.32%)</title><rect x="76.1074%" y="4373" width="0.3237%" height="15" fill="rgb(206,33,13)" fg:x="293671790" fg:w="1249101"/><text x="76.3574%" y="4383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,249,101 samples, 0.32%)</title><rect x="76.1074%" y="4357" width="0.3237%" height="15" fill="rgb(242,178,17)" fg:x="293671790" fg:w="1249101"/><text x="76.3574%" y="4367.50"></text></g><g><title>hashbrown::map::make_hash (4,758,906 samples, 1.23%)</title><rect x="75.7963%" y="4453" width="1.2333%" height="15" fill="rgb(220,162,5)" fg:x="292471338" fg:w="4758906"/><text x="76.0463%" y="4463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,758,906 samples, 1.23%)</title><rect x="75.7963%" y="4437" width="1.2333%" height="15" fill="rgb(210,33,43)" fg:x="292471338" fg:w="4758906"/><text x="76.0463%" y="4447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,309,353 samples, 0.60%)</title><rect x="76.4311%" y="4421" width="0.5985%" height="15" fill="rgb(216,116,54)" fg:x="294920891" fg:w="2309353"/><text x="76.6811%" y="4431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,309,353 samples, 0.60%)</title><rect x="76.4311%" y="4405" width="0.5985%" height="15" fill="rgb(249,92,24)" fg:x="294920891" fg:w="2309353"/><text x="76.6811%" y="4415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2,309,353 samples, 0.60%)</title><rect x="76.4311%" y="4389" width="0.5985%" height="15" fill="rgb(231,189,14)" fg:x="294920891" fg:w="2309353"/><text x="76.6811%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2,309,353 samples, 0.60%)</title><rect x="76.4311%" y="4373" width="0.5985%" height="15" fill="rgb(230,8,41)" fg:x="294920891" fg:w="2309353"/><text x="76.6811%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2,309,353 samples, 0.60%)</title><rect x="76.4311%" y="4357" width="0.5985%" height="15" fill="rgb(249,7,27)" fg:x="294920891" fg:w="2309353"/><text x="76.6811%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,309,353 samples, 0.60%)</title><rect x="76.4311%" y="4341" width="0.5985%" height="15" fill="rgb(232,86,5)" fg:x="294920891" fg:w="2309353"/><text x="76.6811%" y="4351.50"></text></g><g><title>hashbrown::control::tag::Tag::full (1,234,645 samples, 0.32%)</title><rect x="77.0296%" y="4405" width="0.3200%" height="15" fill="rgb(224,175,18)" fg:x="297230244" fg:w="1234645"/><text x="77.2796%" y="4415.50"></text></g><g><title>main::benchmark::matches_class_id (10,867,228 samples, 2.82%)</title><rect x="74.8545%" y="4533" width="2.8163%" height="15" fill="rgb(220,129,12)" fg:x="288837107" fg:w="10867228"/><text x="75.1045%" y="4543.50">ma..</text></g><g><title>main::benchmark::node_has_class_id (10,867,228 samples, 2.82%)</title><rect x="74.8545%" y="4517" width="2.8163%" height="15" fill="rgb(210,19,36)" fg:x="288837107" fg:w="10867228"/><text x="75.1045%" y="4527.50">ma..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7,232,997 samples, 1.87%)</title><rect x="75.7963%" y="4501" width="1.8745%" height="15" fill="rgb(219,96,14)" fg:x="292471338" fg:w="7232997"/><text x="76.0463%" y="4511.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7,232,997 samples, 1.87%)</title><rect x="75.7963%" y="4485" width="1.8745%" height="15" fill="rgb(249,106,1)" fg:x="292471338" fg:w="7232997"/><text x="76.0463%" y="4495.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7,232,997 samples, 1.87%)</title><rect x="75.7963%" y="4469" width="1.8745%" height="15" fill="rgb(249,155,20)" fg:x="292471338" fg:w="7232997"/><text x="76.0463%" y="4479.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,474,091 samples, 0.64%)</title><rect x="77.0296%" y="4453" width="0.6412%" height="15" fill="rgb(244,168,9)" fg:x="297230244" fg:w="2474091"/><text x="77.2796%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,474,091 samples, 0.64%)</title><rect x="77.0296%" y="4437" width="0.6412%" height="15" fill="rgb(216,23,50)" fg:x="297230244" fg:w="2474091"/><text x="77.2796%" y="4447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,474,091 samples, 0.64%)</title><rect x="77.0296%" y="4421" width="0.6412%" height="15" fill="rgb(224,219,20)" fg:x="297230244" fg:w="2474091"/><text x="77.2796%" y="4431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1,239,446 samples, 0.32%)</title><rect x="77.3496%" y="4405" width="0.3212%" height="15" fill="rgb(222,156,15)" fg:x="298464889" fg:w="1239446"/><text x="77.5996%" y="4415.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1,239,446 samples, 0.32%)</title><rect x="77.3496%" y="4389" width="0.3212%" height="15" fill="rgb(231,97,17)" fg:x="298464889" fg:w="1239446"/><text x="77.5996%" y="4399.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1,239,446 samples, 0.32%)</title><rect x="77.3496%" y="4373" width="0.3212%" height="15" fill="rgb(218,70,48)" fg:x="298464889" fg:w="1239446"/><text x="77.5996%" y="4383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,239,446 samples, 0.32%)</title><rect x="77.3496%" y="4357" width="0.3212%" height="15" fill="rgb(212,196,52)" fg:x="298464889" fg:w="1239446"/><text x="77.5996%" y="4367.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,239,446 samples, 0.32%)</title><rect x="77.3496%" y="4341" width="0.3212%" height="15" fill="rgb(243,203,18)" fg:x="298464889" fg:w="1239446"/><text x="77.5996%" y="4351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,239,446 samples, 0.32%)</title><rect x="77.3496%" y="4325" width="0.3212%" height="15" fill="rgb(252,125,41)" fg:x="298464889" fg:w="1239446"/><text x="77.5996%" y="4335.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,239,446 samples, 0.32%)</title><rect x="77.3496%" y="4309" width="0.3212%" height="15" fill="rgb(223,180,33)" fg:x="298464889" fg:w="1239446"/><text x="77.5996%" y="4319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,239,446 samples, 0.32%)</title><rect x="77.3496%" y="4293" width="0.3212%" height="15" fill="rgb(254,159,46)" fg:x="298464889" fg:w="1239446"/><text x="77.5996%" y="4303.50"></text></g><g><title>[libc.so.6] (1,239,446 samples, 0.32%)</title><rect x="77.3496%" y="4277" width="0.3212%" height="15" fill="rgb(254,38,10)" fg:x="298464889" fg:w="1239446"/><text x="77.5996%" y="4287.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1,185,572 samples, 0.31%)</title><rect x="77.9834%" y="4389" width="0.3073%" height="15" fill="rgb(208,217,32)" fg:x="300910411" fg:w="1185572"/><text x="78.2334%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,227,586 samples, 0.32%)</title><rect x="78.2906%" y="4309" width="0.3181%" height="15" fill="rgb(221,120,13)" fg:x="302095983" fg:w="1227586"/><text x="78.5406%" y="4319.50"></text></g><g><title>core::hash::sip::u8to64_le (1,227,586 samples, 0.32%)</title><rect x="78.2906%" y="4293" width="0.3181%" height="15" fill="rgb(246,54,52)" fg:x="302095983" fg:w="1227586"/><text x="78.5406%" y="4303.50"></text></g><g><title>hashbrown::map::make_hash (7,304,177 samples, 1.89%)</title><rect x="77.6708%" y="4421" width="1.8929%" height="15" fill="rgb(242,34,25)" fg:x="299704335" fg:w="7304177"/><text x="77.9208%" y="4431.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (6,098,101 samples, 1.58%)</title><rect x="77.9834%" y="4405" width="1.5804%" height="15" fill="rgb(247,209,9)" fg:x="300910411" fg:w="6098101"/><text x="78.2334%" y="4415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4,912,529 samples, 1.27%)</title><rect x="78.2906%" y="4389" width="1.2731%" height="15" fill="rgb(228,71,26)" fg:x="302095983" fg:w="4912529"/><text x="78.5406%" y="4399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4,912,529 samples, 1.27%)</title><rect x="78.2906%" y="4373" width="1.2731%" height="15" fill="rgb(222,145,49)" fg:x="302095983" fg:w="4912529"/><text x="78.5406%" y="4383.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (4,912,529 samples, 1.27%)</title><rect x="78.2906%" y="4357" width="1.2731%" height="15" fill="rgb(218,121,17)" fg:x="302095983" fg:w="4912529"/><text x="78.5406%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (4,912,529 samples, 1.27%)</title><rect x="78.2906%" y="4341" width="1.2731%" height="15" fill="rgb(244,50,7)" fg:x="302095983" fg:w="4912529"/><text x="78.5406%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (4,912,529 samples, 1.27%)</title><rect x="78.2906%" y="4325" width="1.2731%" height="15" fill="rgb(246,229,37)" fg:x="302095983" fg:w="4912529"/><text x="78.5406%" y="4335.50"></text></g><g><title>core::hash::Hasher::write_u8 (3,684,943 samples, 0.95%)</title><rect x="78.6088%" y="4309" width="0.9550%" height="15" fill="rgb(225,18,5)" fg:x="303323569" fg:w="3684943"/><text x="78.8588%" y="4319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,434,867 samples, 0.63%)</title><rect x="78.9327%" y="4293" width="0.6310%" height="15" fill="rgb(213,204,8)" fg:x="304573645" fg:w="2434867"/><text x="79.1827%" y="4303.50"></text></g><g><title>core::hash::sip::u8to64_le (2,434,867 samples, 0.63%)</title><rect x="78.9327%" y="4277" width="0.6310%" height="15" fill="rgb(238,103,6)" fg:x="304573645" fg:w="2434867"/><text x="79.1827%" y="4287.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (1,195,818 samples, 0.31%)</title><rect x="79.5637%" y="4373" width="0.3099%" height="15" fill="rgb(222,25,35)" fg:x="307008512" fg:w="1195818"/><text x="79.8137%" y="4383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,195,818 samples, 0.31%)</title><rect x="79.5637%" y="4357" width="0.3099%" height="15" fill="rgb(213,203,35)" fg:x="307008512" fg:w="1195818"/><text x="79.8137%" y="4367.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (1,263,089 samples, 0.33%)</title><rect x="79.8736%" y="4373" width="0.3273%" height="15" fill="rgb(221,79,53)" fg:x="308204330" fg:w="1263089"/><text x="80.1236%" y="4383.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (25,511,042 samples, 6.61%)</title><rect x="73.9075%" y="4549" width="6.6114%" height="15" fill="rgb(243,200,35)" fg:x="285183003" fg:w="25511042"/><text x="74.1575%" y="4559.50">main::ben..</text></g><g><title>main::benchmark::matches_id_id (10,989,710 samples, 2.85%)</title><rect x="77.6708%" y="4533" width="2.8481%" height="15" fill="rgb(248,60,25)" fg:x="299704335" fg:w="10989710"/><text x="77.9208%" y="4543.50">ma..</text></g><g><title>main::benchmark::get_node_id_id (10,989,710 samples, 2.85%)</title><rect x="77.6708%" y="4517" width="2.8481%" height="15" fill="rgb(227,53,46)" fg:x="299704335" fg:w="10989710"/><text x="77.9208%" y="4527.50">ma..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (10,989,710 samples, 2.85%)</title><rect x="77.6708%" y="4501" width="2.8481%" height="15" fill="rgb(216,120,32)" fg:x="299704335" fg:w="10989710"/><text x="77.9208%" y="4511.50">co..</text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (10,989,710 samples, 2.85%)</title><rect x="77.6708%" y="4485" width="2.8481%" height="15" fill="rgb(220,134,1)" fg:x="299704335" fg:w="10989710"/><text x="77.9208%" y="4495.50">ma..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10,989,710 samples, 2.85%)</title><rect x="77.6708%" y="4469" width="2.8481%" height="15" fill="rgb(237,168,5)" fg:x="299704335" fg:w="10989710"/><text x="77.9208%" y="4479.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10,989,710 samples, 2.85%)</title><rect x="77.6708%" y="4453" width="2.8481%" height="15" fill="rgb(231,100,33)" fg:x="299704335" fg:w="10989710"/><text x="77.9208%" y="4463.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10,989,710 samples, 2.85%)</title><rect x="77.6708%" y="4437" width="2.8481%" height="15" fill="rgb(236,177,47)" fg:x="299704335" fg:w="10989710"/><text x="77.9208%" y="4447.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3,685,533 samples, 0.96%)</title><rect x="79.5637%" y="4421" width="0.9551%" height="15" fill="rgb(235,7,49)" fg:x="307008512" fg:w="3685533"/><text x="79.8137%" y="4431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,685,533 samples, 0.96%)</title><rect x="79.5637%" y="4405" width="0.9551%" height="15" fill="rgb(232,119,22)" fg:x="307008512" fg:w="3685533"/><text x="79.8137%" y="4415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3,685,533 samples, 0.96%)</title><rect x="79.5637%" y="4389" width="0.9551%" height="15" fill="rgb(254,73,53)" fg:x="307008512" fg:w="3685533"/><text x="79.8137%" y="4399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1,226,626 samples, 0.32%)</title><rect x="80.2010%" y="4373" width="0.3179%" height="15" fill="rgb(251,35,20)" fg:x="309467419" fg:w="1226626"/><text x="80.4510%" y="4383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1,226,626 samples, 0.32%)</title><rect x="80.2010%" y="4357" width="0.3179%" height="15" fill="rgb(241,119,20)" fg:x="309467419" fg:w="1226626"/><text x="80.4510%" y="4367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1,226,626 samples, 0.32%)</title><rect x="80.2010%" y="4341" width="0.3179%" height="15" fill="rgb(207,102,14)" fg:x="309467419" fg:w="1226626"/><text x="80.4510%" y="4351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1,226,626 samples, 0.32%)</title><rect x="80.2010%" y="4325" width="0.3179%" height="15" fill="rgb(248,201,50)" fg:x="309467419" fg:w="1226626"/><text x="80.4510%" y="4335.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,260,363 samples, 0.33%)</title><rect x="80.5189%" y="4517" width="0.3266%" height="15" fill="rgb(222,185,44)" fg:x="310694045" fg:w="1260363"/><text x="80.7689%" y="4527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,260,363 samples, 0.33%)</title><rect x="80.5189%" y="4501" width="0.3266%" height="15" fill="rgb(218,107,18)" fg:x="310694045" fg:w="1260363"/><text x="80.7689%" y="4511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,260,363 samples, 0.33%)</title><rect x="80.5189%" y="4485" width="0.3266%" height="15" fill="rgb(237,177,39)" fg:x="310694045" fg:w="1260363"/><text x="80.7689%" y="4495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,363 samples, 0.33%)</title><rect x="80.5189%" y="4469" width="0.3266%" height="15" fill="rgb(246,69,6)" fg:x="310694045" fg:w="1260363"/><text x="80.7689%" y="4479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,260,363 samples, 0.33%)</title><rect x="80.5189%" y="4453" width="0.3266%" height="15" fill="rgb(234,208,37)" fg:x="310694045" fg:w="1260363"/><text x="80.7689%" y="4463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,260,363 samples, 0.33%)</title><rect x="80.5189%" y="4437" width="0.3266%" height="15" fill="rgb(225,4,6)" fg:x="310694045" fg:w="1260363"/><text x="80.7689%" y="4447.50"></text></g><g><title>alloc::alloc::dealloc (1,260,363 samples, 0.33%)</title><rect x="80.5189%" y="4421" width="0.3266%" height="15" fill="rgb(233,45,0)" fg:x="310694045" fg:w="1260363"/><text x="80.7689%" y="4431.50"></text></g><g><title>cfree (1,260,363 samples, 0.33%)</title><rect x="80.5189%" y="4405" width="0.3266%" height="15" fill="rgb(226,136,5)" fg:x="310694045" fg:w="1260363"/><text x="80.7689%" y="4415.50"></text></g><g><title>main::benchmark::matches_class_id (1,237,131 samples, 0.32%)</title><rect x="80.8455%" y="4517" width="0.3206%" height="15" fill="rgb(211,91,47)" fg:x="311954408" fg:w="1237131"/><text x="81.0955%" y="4527.50"></text></g><g><title>main::benchmark::node_has_class_id (1,237,131 samples, 0.32%)</title><rect x="80.8455%" y="4501" width="0.3206%" height="15" fill="rgb(242,88,51)" fg:x="311954408" fg:w="1237131"/><text x="81.0955%" y="4511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,237,131 samples, 0.32%)</title><rect x="80.8455%" y="4485" width="0.3206%" height="15" fill="rgb(230,91,28)" fg:x="311954408" fg:w="1237131"/><text x="81.0955%" y="4495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,237,131 samples, 0.32%)</title><rect x="80.8455%" y="4469" width="0.3206%" height="15" fill="rgb(254,186,29)" fg:x="311954408" fg:w="1237131"/><text x="81.0955%" y="4479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,237,131 samples, 0.32%)</title><rect x="80.8455%" y="4453" width="0.3206%" height="15" fill="rgb(238,6,4)" fg:x="311954408" fg:w="1237131"/><text x="81.0955%" y="4463.50"></text></g><g><title>hashbrown::map::make_hash (1,237,131 samples, 0.32%)</title><rect x="80.8455%" y="4437" width="0.3206%" height="15" fill="rgb(221,151,16)" fg:x="311954408" fg:w="1237131"/><text x="81.0955%" y="4447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,237,131 samples, 0.32%)</title><rect x="80.8455%" y="4421" width="0.3206%" height="15" fill="rgb(251,143,52)" fg:x="311954408" fg:w="1237131"/><text x="81.0955%" y="4431.50"></text></g><g><title>main::benchmark::matches_id_id (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4517" width="0.3066%" height="15" fill="rgb(206,90,15)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4527.50"></text></g><g><title>main::benchmark::get_node_id_id (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4501" width="0.3066%" height="15" fill="rgb(218,35,8)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4511.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4485" width="0.3066%" height="15" fill="rgb(239,215,6)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4495.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4469" width="0.3066%" height="15" fill="rgb(245,116,39)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4453" width="0.3066%" height="15" fill="rgb(242,65,28)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4437" width="0.3066%" height="15" fill="rgb(252,132,53)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4421" width="0.3066%" height="15" fill="rgb(224,159,50)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4431.50"></text></g><g><title>hashbrown::map::make_hash (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4405" width="0.3066%" height="15" fill="rgb(224,93,4)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4389" width="0.3066%" height="15" fill="rgb(208,81,34)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4373" width="0.3066%" height="15" fill="rgb(233,92,54)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4357" width="0.3066%" height="15" fill="rgb(237,21,14)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4341" width="0.3066%" height="15" fill="rgb(249,128,51)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4325" width="0.3066%" height="15" fill="rgb(223,129,24)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4309" width="0.3066%" height="15" fill="rgb(231,168,25)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4293" width="0.3066%" height="15" fill="rgb(224,39,20)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4303.50"></text></g><g><title>core::hash::sip::u8to64_le (1,182,980 samples, 0.31%)</title><rect x="81.1661%" y="4277" width="0.3066%" height="15" fill="rgb(225,152,53)" fg:x="313191539" fg:w="1182980"/><text x="81.4161%" y="4287.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (4,860,508 samples, 1.26%)</title><rect x="80.5189%" y="4533" width="1.2596%" height="15" fill="rgb(252,17,24)" fg:x="310694045" fg:w="4860508"/><text x="80.7689%" y="4543.50"></text></g><g><title>main::benchmark::matches_tag_id (1,180,034 samples, 0.31%)</title><rect x="81.4727%" y="4517" width="0.3058%" height="15" fill="rgb(250,114,30)" fg:x="314374519" fg:w="1180034"/><text x="81.7227%" y="4527.50"></text></g><g><title>main::benchmark::get_node_tag_id (1,180,034 samples, 0.31%)</title><rect x="81.4727%" y="4501" width="0.3058%" height="15" fill="rgb(229,5,4)" fg:x="314374519" fg:w="1180034"/><text x="81.7227%" y="4511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,180,034 samples, 0.31%)</title><rect x="81.4727%" y="4485" width="0.3058%" height="15" fill="rgb(225,176,49)" fg:x="314374519" fg:w="1180034"/><text x="81.7227%" y="4495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,180,034 samples, 0.31%)</title><rect x="81.4727%" y="4469" width="0.3058%" height="15" fill="rgb(224,221,49)" fg:x="314374519" fg:w="1180034"/><text x="81.7227%" y="4479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,180,034 samples, 0.31%)</title><rect x="81.4727%" y="4453" width="0.3058%" height="15" fill="rgb(253,169,27)" fg:x="314374519" fg:w="1180034"/><text x="81.7227%" y="4463.50"></text></g><g><title>hashbrown::map::make_hash (1,180,034 samples, 0.31%)</title><rect x="81.4727%" y="4437" width="0.3058%" height="15" fill="rgb(211,206,16)" fg:x="314374519" fg:w="1180034"/><text x="81.7227%" y="4447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,180,034 samples, 0.31%)</title><rect x="81.4727%" y="4421" width="0.3058%" height="15" fill="rgb(244,87,35)" fg:x="314374519" fg:w="1180034"/><text x="81.7227%" y="4431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,180,034 samples, 0.31%)</title><rect x="81.4727%" y="4405" width="0.3058%" height="15" fill="rgb(246,28,10)" fg:x="314374519" fg:w="1180034"/><text x="81.7227%" y="4415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,180,034 samples, 0.31%)</title><rect x="81.4727%" y="4389" width="0.3058%" height="15" fill="rgb(229,12,44)" fg:x="314374519" fg:w="1180034"/><text x="81.7227%" y="4399.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,180,034 samples, 0.31%)</title><rect x="81.4727%" y="4373" width="0.3058%" height="15" fill="rgb(210,145,37)" fg:x="314374519" fg:w="1180034"/><text x="81.7227%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,180,034 samples, 0.31%)</title><rect x="81.4727%" y="4357" width="0.3058%" height="15" fill="rgb(227,112,52)" fg:x="314374519" fg:w="1180034"/><text x="81.7227%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,180,034 samples, 0.31%)</title><rect x="81.4727%" y="4341" width="0.3058%" height="15" fill="rgb(238,155,34)" fg:x="314374519" fg:w="1180034"/><text x="81.7227%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,180,034 samples, 0.31%)</title><rect x="81.4727%" y="4325" width="0.3058%" height="15" fill="rgb(239,226,36)" fg:x="314374519" fg:w="1180034"/><text x="81.7227%" y="4335.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (1,211,692 samples, 0.31%)</title><rect x="82.1039%" y="4501" width="0.3140%" height="15" fill="rgb(230,16,23)" fg:x="316810114" fg:w="1211692"/><text x="82.3539%" y="4511.50"></text></g><g><title>&lt;&amp;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,139,873 samples, 0.30%)</title><rect x="82.4179%" y="4469" width="0.2954%" height="15" fill="rgb(236,171,36)" fg:x="318021806" fg:w="1139873"/><text x="82.6679%" y="4479.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (1,139,873 samples, 0.30%)</title><rect x="82.4179%" y="4453" width="0.2954%" height="15" fill="rgb(221,22,14)" fg:x="318021806" fg:w="1139873"/><text x="82.6679%" y="4463.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (1,139,873 samples, 0.30%)</title><rect x="82.4179%" y="4437" width="0.2954%" height="15" fill="rgb(242,43,11)" fg:x="318021806" fg:w="1139873"/><text x="82.6679%" y="4447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (1,139,873 samples, 0.30%)</title><rect x="82.4179%" y="4421" width="0.2954%" height="15" fill="rgb(232,69,23)" fg:x="318021806" fg:w="1139873"/><text x="82.6679%" y="4431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1,139,873 samples, 0.30%)</title><rect x="82.4179%" y="4405" width="0.2954%" height="15" fill="rgb(216,180,54)" fg:x="318021806" fg:w="1139873"/><text x="82.6679%" y="4415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1,139,873 samples, 0.30%)</title><rect x="82.4179%" y="4389" width="0.2954%" height="15" fill="rgb(216,5,24)" fg:x="318021806" fg:w="1139873"/><text x="82.6679%" y="4399.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,139,873 samples, 0.30%)</title><rect x="82.4179%" y="4373" width="0.2954%" height="15" fill="rgb(225,89,9)" fg:x="318021806" fg:w="1139873"/><text x="82.6679%" y="4383.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,139,873 samples, 0.30%)</title><rect x="82.4179%" y="4357" width="0.2954%" height="15" fill="rgb(243,75,33)" fg:x="318021806" fg:w="1139873"/><text x="82.6679%" y="4367.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_full (1,139,873 samples, 0.30%)</title><rect x="82.4179%" y="4341" width="0.2954%" height="15" fill="rgb(247,141,45)" fg:x="318021806" fg:w="1139873"/><text x="82.6679%" y="4351.50"></text></g><g><title>main::benchmark::matches_class_id (3,509,787 samples, 0.91%)</title><rect x="82.4179%" y="4501" width="0.9096%" height="15" fill="rgb(232,177,36)" fg:x="318021806" fg:w="3509787"/><text x="82.6679%" y="4511.50"></text></g><g><title>main::benchmark::node_has_class_id (3,509,787 samples, 0.91%)</title><rect x="82.4179%" y="4485" width="0.9096%" height="15" fill="rgb(219,125,36)" fg:x="318021806" fg:w="3509787"/><text x="82.6679%" y="4495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,369,914 samples, 0.61%)</title><rect x="82.7133%" y="4469" width="0.6142%" height="15" fill="rgb(227,94,9)" fg:x="319161679" fg:w="2369914"/><text x="82.9633%" y="4479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,369,914 samples, 0.61%)</title><rect x="82.7133%" y="4453" width="0.6142%" height="15" fill="rgb(240,34,52)" fg:x="319161679" fg:w="2369914"/><text x="82.9633%" y="4463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,369,914 samples, 0.61%)</title><rect x="82.7133%" y="4437" width="0.6142%" height="15" fill="rgb(216,45,12)" fg:x="319161679" fg:w="2369914"/><text x="82.9633%" y="4447.50"></text></g><g><title>hashbrown::map::make_hash (2,369,914 samples, 0.61%)</title><rect x="82.7133%" y="4421" width="0.6142%" height="15" fill="rgb(246,21,19)" fg:x="319161679" fg:w="2369914"/><text x="82.9633%" y="4431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,369,914 samples, 0.61%)</title><rect x="82.7133%" y="4405" width="0.6142%" height="15" fill="rgb(213,98,42)" fg:x="319161679" fg:w="2369914"/><text x="82.9633%" y="4415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,369,914 samples, 0.61%)</title><rect x="82.7133%" y="4389" width="0.6142%" height="15" fill="rgb(250,136,47)" fg:x="319161679" fg:w="2369914"/><text x="82.9633%" y="4399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,369,914 samples, 0.61%)</title><rect x="82.7133%" y="4373" width="0.6142%" height="15" fill="rgb(251,124,27)" fg:x="319161679" fg:w="2369914"/><text x="82.9633%" y="4383.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2,369,914 samples, 0.61%)</title><rect x="82.7133%" y="4357" width="0.6142%" height="15" fill="rgb(229,180,14)" fg:x="319161679" fg:w="2369914"/><text x="82.9633%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2,369,914 samples, 0.61%)</title><rect x="82.7133%" y="4341" width="0.6142%" height="15" fill="rgb(245,216,25)" fg:x="319161679" fg:w="2369914"/><text x="82.9633%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2,369,914 samples, 0.61%)</title><rect x="82.7133%" y="4325" width="0.6142%" height="15" fill="rgb(251,43,5)" fg:x="319161679" fg:w="2369914"/><text x="82.9633%" y="4335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,369,914 samples, 0.61%)</title><rect x="82.7133%" y="4309" width="0.6142%" height="15" fill="rgb(250,128,24)" fg:x="319161679" fg:w="2369914"/><text x="82.9633%" y="4319.50"></text></g><g><title>core::hash::sip::u8to64_le (1,148,834 samples, 0.30%)</title><rect x="83.0298%" y="4293" width="0.2977%" height="15" fill="rgb(217,117,27)" fg:x="320382759" fg:w="1148834"/><text x="83.2798%" y="4303.50"></text></g><g><title>main::benchmark::matches_id_id (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4501" width="0.2678%" height="15" fill="rgb(245,147,4)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4511.50"></text></g><g><title>main::benchmark::get_node_id_id (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4485" width="0.2678%" height="15" fill="rgb(242,201,35)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4495.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4469" width="0.2678%" height="15" fill="rgb(218,181,1)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4479.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4453" width="0.2678%" height="15" fill="rgb(222,6,29)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4437" width="0.2678%" height="15" fill="rgb(208,186,3)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4421" width="0.2678%" height="15" fill="rgb(216,36,26)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4405" width="0.2678%" height="15" fill="rgb(248,201,23)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4415.50"></text></g><g><title>hashbrown::map::make_hash (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4389" width="0.2678%" height="15" fill="rgb(251,170,31)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4373" width="0.2678%" height="15" fill="rgb(207,110,25)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4357" width="0.2678%" height="15" fill="rgb(250,54,15)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4341" width="0.2678%" height="15" fill="rgb(227,68,33)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4325" width="0.2678%" height="15" fill="rgb(238,34,41)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4309" width="0.2678%" height="15" fill="rgb(220,11,15)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4293" width="0.2678%" height="15" fill="rgb(246,111,35)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4303.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4277" width="0.2678%" height="15" fill="rgb(209,88,53)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4261" width="0.2678%" height="15" fill="rgb(231,185,47)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4271.50"></text></g><g><title>core::hash::sip::u8to64_le (1,033,400 samples, 0.27%)</title><rect x="83.3275%" y="4245" width="0.2678%" height="15" fill="rgb(233,154,1)" fg:x="321531593" fg:w="1033400"/><text x="83.5775%" y="4255.50"></text></g><g><title>hashbrown::map::make_hash (1,277,698 samples, 0.33%)</title><rect x="83.5953%" y="4421" width="0.3311%" height="15" fill="rgb(225,15,46)" fg:x="322564993" fg:w="1277698"/><text x="83.8453%" y="4431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,277,698 samples, 0.33%)</title><rect x="83.5953%" y="4405" width="0.3311%" height="15" fill="rgb(211,135,41)" fg:x="322564993" fg:w="1277698"/><text x="83.8453%" y="4415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,277,698 samples, 0.33%)</title><rect x="83.5953%" y="4389" width="0.3311%" height="15" fill="rgb(208,54,0)" fg:x="322564993" fg:w="1277698"/><text x="83.8453%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,277,698 samples, 0.33%)</title><rect x="83.5953%" y="4373" width="0.3311%" height="15" fill="rgb(244,136,14)" fg:x="322564993" fg:w="1277698"/><text x="83.8453%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,277,698 samples, 0.33%)</title><rect x="83.5953%" y="4357" width="0.3311%" height="15" fill="rgb(241,56,14)" fg:x="322564993" fg:w="1277698"/><text x="83.8453%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,277,698 samples, 0.33%)</title><rect x="83.5953%" y="4341" width="0.3311%" height="15" fill="rgb(205,80,24)" fg:x="322564993" fg:w="1277698"/><text x="83.8453%" y="4351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,277,698 samples, 0.33%)</title><rect x="83.5953%" y="4325" width="0.3311%" height="15" fill="rgb(220,57,4)" fg:x="322564993" fg:w="1277698"/><text x="83.8453%" y="4335.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (9,451,992 samples, 2.45%)</title><rect x="81.7785%" y="4517" width="2.4496%" height="15" fill="rgb(226,193,50)" fg:x="315554553" fg:w="9451992"/><text x="82.0285%" y="4527.50">ma..</text></g><g><title>main::benchmark::matches_tag_id (2,441,552 samples, 0.63%)</title><rect x="83.5953%" y="4501" width="0.6327%" height="15" fill="rgb(231,168,22)" fg:x="322564993" fg:w="2441552"/><text x="83.8453%" y="4511.50"></text></g><g><title>main::benchmark::get_node_tag_id (2,441,552 samples, 0.63%)</title><rect x="83.5953%" y="4485" width="0.6327%" height="15" fill="rgb(254,215,14)" fg:x="322564993" fg:w="2441552"/><text x="83.8453%" y="4495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,441,552 samples, 0.63%)</title><rect x="83.5953%" y="4469" width="0.6327%" height="15" fill="rgb(211,115,16)" fg:x="322564993" fg:w="2441552"/><text x="83.8453%" y="4479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,441,552 samples, 0.63%)</title><rect x="83.5953%" y="4453" width="0.6327%" height="15" fill="rgb(236,210,16)" fg:x="322564993" fg:w="2441552"/><text x="83.8453%" y="4463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,441,552 samples, 0.63%)</title><rect x="83.5953%" y="4437" width="0.6327%" height="15" fill="rgb(221,94,12)" fg:x="322564993" fg:w="2441552"/><text x="83.8453%" y="4447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,163,854 samples, 0.30%)</title><rect x="83.9265%" y="4421" width="0.3016%" height="15" fill="rgb(235,218,49)" fg:x="323842691" fg:w="1163854"/><text x="84.1765%" y="4431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,163,854 samples, 0.30%)</title><rect x="83.9265%" y="4405" width="0.3016%" height="15" fill="rgb(217,114,14)" fg:x="323842691" fg:w="1163854"/><text x="84.1765%" y="4415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,163,854 samples, 0.30%)</title><rect x="83.9265%" y="4389" width="0.3016%" height="15" fill="rgb(216,145,22)" fg:x="323842691" fg:w="1163854"/><text x="84.1765%" y="4399.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,163,854 samples, 0.30%)</title><rect x="83.9265%" y="4373" width="0.3016%" height="15" fill="rgb(217,112,39)" fg:x="323842691" fg:w="1163854"/><text x="84.1765%" y="4383.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,163,854 samples, 0.30%)</title><rect x="83.9265%" y="4357" width="0.3016%" height="15" fill="rgb(225,85,32)" fg:x="323842691" fg:w="1163854"/><text x="84.1765%" y="4367.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (1,201,690 samples, 0.31%)</title><rect x="84.8745%" y="4485" width="0.3114%" height="15" fill="rgb(245,209,47)" fg:x="327500862" fg:w="1201690"/><text x="85.1245%" y="4495.50"></text></g><g><title>main::benchmark::get_string_to_id_map (1,265,954 samples, 0.33%)</title><rect x="85.1859%" y="4421" width="0.3281%" height="15" fill="rgb(218,220,15)" fg:x="328702552" fg:w="1265954"/><text x="85.4359%" y="4431.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (1,265,954 samples, 0.33%)</title><rect x="85.1859%" y="4405" width="0.3281%" height="15" fill="rgb(222,202,31)" fg:x="328702552" fg:w="1265954"/><text x="85.4359%" y="4415.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (1,265,954 samples, 0.33%)</title><rect x="85.1859%" y="4389" width="0.3281%" height="15" fill="rgb(243,203,4)" fg:x="328702552" fg:w="1265954"/><text x="85.4359%" y="4399.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,233,736 samples, 0.32%)</title><rect x="85.5140%" y="4341" width="0.3197%" height="15" fill="rgb(237,92,17)" fg:x="329968506" fg:w="1233736"/><text x="85.7640%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,233,736 samples, 0.32%)</title><rect x="85.5140%" y="4325" width="0.3197%" height="15" fill="rgb(231,119,7)" fg:x="329968506" fg:w="1233736"/><text x="85.7640%" y="4335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,233,736 samples, 0.32%)</title><rect x="85.5140%" y="4309" width="0.3197%" height="15" fill="rgb(237,82,41)" fg:x="329968506" fg:w="1233736"/><text x="85.7640%" y="4319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,233,736 samples, 0.32%)</title><rect x="85.5140%" y="4293" width="0.3197%" height="15" fill="rgb(226,81,48)" fg:x="329968506" fg:w="1233736"/><text x="85.7640%" y="4303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,245,392 samples, 0.32%)</title><rect x="85.8337%" y="4261" width="0.3228%" height="15" fill="rgb(234,70,51)" fg:x="331202242" fg:w="1245392"/><text x="86.0837%" y="4271.50"></text></g><g><title>hashbrown::map::make_hash (3,729,050 samples, 0.97%)</title><rect x="85.5140%" y="4373" width="0.9664%" height="15" fill="rgb(251,86,4)" fg:x="329968506" fg:w="3729050"/><text x="85.7640%" y="4383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,729,050 samples, 0.97%)</title><rect x="85.5140%" y="4357" width="0.9664%" height="15" fill="rgb(244,144,28)" fg:x="329968506" fg:w="3729050"/><text x="85.7640%" y="4367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,495,314 samples, 0.65%)</title><rect x="85.8337%" y="4341" width="0.6467%" height="15" fill="rgb(232,161,39)" fg:x="331202242" fg:w="2495314"/><text x="86.0837%" y="4351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,495,314 samples, 0.65%)</title><rect x="85.8337%" y="4325" width="0.6467%" height="15" fill="rgb(247,34,51)" fg:x="331202242" fg:w="2495314"/><text x="86.0837%" y="4335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2,495,314 samples, 0.65%)</title><rect x="85.8337%" y="4309" width="0.6467%" height="15" fill="rgb(225,132,2)" fg:x="331202242" fg:w="2495314"/><text x="86.0837%" y="4319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2,495,314 samples, 0.65%)</title><rect x="85.8337%" y="4293" width="0.6467%" height="15" fill="rgb(209,159,44)" fg:x="331202242" fg:w="2495314"/><text x="86.0837%" y="4303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2,495,314 samples, 0.65%)</title><rect x="85.8337%" y="4277" width="0.6467%" height="15" fill="rgb(251,214,1)" fg:x="331202242" fg:w="2495314"/><text x="86.0837%" y="4287.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,249,922 samples, 0.32%)</title><rect x="86.1565%" y="4261" width="0.3239%" height="15" fill="rgb(247,84,47)" fg:x="332447634" fg:w="1249922"/><text x="86.4065%" y="4271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,249,922 samples, 0.32%)</title><rect x="86.1565%" y="4245" width="0.3239%" height="15" fill="rgb(240,111,43)" fg:x="332447634" fg:w="1249922"/><text x="86.4065%" y="4255.50"></text></g><g><title>core::hash::sip::u8to64_le (1,249,922 samples, 0.32%)</title><rect x="86.1565%" y="4229" width="0.3239%" height="15" fill="rgb(215,214,35)" fg:x="332447634" fg:w="1249922"/><text x="86.4065%" y="4239.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,218,131 samples, 0.32%)</title><rect x="86.7565%" y="4325" width="0.3157%" height="15" fill="rgb(248,207,23)" fg:x="334762729" fg:w="1218131"/><text x="87.0065%" y="4335.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,218,131 samples, 0.32%)</title><rect x="86.7565%" y="4309" width="0.3157%" height="15" fill="rgb(214,186,4)" fg:x="334762729" fg:w="1218131"/><text x="87.0065%" y="4319.50"></text></g><g><title>main::benchmark::invoke_full_layout (184,225,021 samples, 47.74%)</title><rect x="39.6489%" y="4805" width="47.7434%" height="15" fill="rgb(220,133,22)" fg:x="152991323" fg:w="184225021"/><text x="39.8989%" y="4815.50">main::benchmark::invoke_full_layout</text></g><g><title>main::benchmark::process_tree_full_recompute (184,225,021 samples, 47.74%)</title><rect x="39.6489%" y="4789" width="47.7434%" height="15" fill="rgb(239,134,19)" fg:x="152991323" fg:w="184225021"/><text x="39.8989%" y="4799.50">main::benchmark::process_tree_full_recompute</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (184,225,021 samples, 47.74%)</title><rect x="39.6489%" y="4773" width="47.7434%" height="15" fill="rgb(250,140,9)" fg:x="152991323" fg:w="184225021"/><text x="39.8989%" y="4783.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (182,982,982 samples, 47.42%)</title><rect x="39.9708%" y="4757" width="47.4215%" height="15" fill="rgb(225,59,14)" fg:x="154233362" fg:w="182982982"/><text x="40.2208%" y="4767.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (182,982,982 samples, 47.42%)</title><rect x="39.9708%" y="4741" width="47.4215%" height="15" fill="rgb(214,152,51)" fg:x="154233362" fg:w="182982982"/><text x="40.2208%" y="4751.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (181,767,819 samples, 47.11%)</title><rect x="40.2857%" y="4725" width="47.1066%" height="15" fill="rgb(251,227,43)" fg:x="155448525" fg:w="181767819"/><text x="40.5357%" y="4735.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (174,496,372 samples, 45.22%)</title><rect x="42.1702%" y="4709" width="45.2221%" height="15" fill="rgb(241,96,17)" fg:x="162719972" fg:w="174496372"/><text x="42.4202%" y="4719.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (172,124,440 samples, 44.61%)</title><rect x="42.7849%" y="4693" width="44.6074%" height="15" fill="rgb(234,198,43)" fg:x="165091904" fg:w="172124440"/><text x="43.0349%" y="4703.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (169,643,382 samples, 43.96%)</title><rect x="43.4279%" y="4677" width="43.9645%" height="15" fill="rgb(220,108,29)" fg:x="167572962" fg:w="169643382"/><text x="43.6779%" y="4687.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (167,304,353 samples, 43.36%)</title><rect x="44.0341%" y="4661" width="43.3583%" height="15" fill="rgb(226,163,33)" fg:x="169911991" fg:w="167304353"/><text x="44.2841%" y="4671.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (163,070,166 samples, 42.26%)</title><rect x="45.1314%" y="4645" width="42.2610%" height="15" fill="rgb(205,194,45)" fg:x="174146178" fg:w="163070166"/><text x="45.3814%" y="4655.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (156,325,361 samples, 40.51%)</title><rect x="46.8794%" y="4629" width="40.5130%" height="15" fill="rgb(206,143,44)" fg:x="180890983" fg:w="156325361"/><text x="47.1294%" y="4639.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (133,660,935 samples, 34.64%)</title><rect x="52.7530%" y="4613" width="34.6393%" height="15" fill="rgb(236,136,36)" fg:x="203555409" fg:w="133660935"/><text x="53.0030%" y="4623.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (100,835,362 samples, 26.13%)</title><rect x="61.2600%" y="4597" width="26.1323%" height="15" fill="rgb(249,172,42)" fg:x="236380982" fg:w="100835362"/><text x="61.5100%" y="4607.50">main::benchmark::process_tree_recursive_fr..</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (68,895,725 samples, 17.85%)</title><rect x="69.5375%" y="4581" width="17.8549%" height="15" fill="rgb(216,139,23)" fg:x="268320619" fg:w="68895725"/><text x="69.7875%" y="4591.50">main::benchmark::process_tre..</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (52,033,341 samples, 13.48%)</title><rect x="73.9075%" y="4565" width="13.4849%" height="15" fill="rgb(207,166,20)" fg:x="285183003" fg:w="52033341"/><text x="74.1575%" y="4575.50">main::benchmark::pro..</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (26,522,299 samples, 6.87%)</title><rect x="80.5189%" y="4549" width="6.8735%" height="15" fill="rgb(210,209,22)" fg:x="310694045" fg:w="26522299"/><text x="80.7689%" y="4559.50">main::ben..</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (21,661,791 samples, 5.61%)</title><rect x="81.7785%" y="4533" width="5.6138%" height="15" fill="rgb(232,118,20)" fg:x="315554553" fg:w="21661791"/><text x="82.0285%" y="4543.50">main::b..</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (12,209,799 samples, 3.16%)</title><rect x="84.2281%" y="4517" width="3.1643%" height="15" fill="rgb(238,113,42)" fg:x="325006545" fg:w="12209799"/><text x="84.4781%" y="4527.50">mai..</text></g><g><title>main::benchmark::process_node_generated_from_scratch (12,209,799 samples, 3.16%)</title><rect x="84.2281%" y="4501" width="3.1643%" height="15" fill="rgb(231,42,5)" fg:x="325006545" fg:w="12209799"/><text x="84.4781%" y="4511.50">mai..</text></g><g><title>main::benchmark::matches_id_id (8,513,792 samples, 2.21%)</title><rect x="85.1859%" y="4485" width="2.2064%" height="15" fill="rgb(243,166,24)" fg:x="328702552" fg:w="8513792"/><text x="85.4359%" y="4495.50">m..</text></g><g><title>main::benchmark::get_node_id_id (8,513,792 samples, 2.21%)</title><rect x="85.1859%" y="4469" width="2.2064%" height="15" fill="rgb(237,226,12)" fg:x="328702552" fg:w="8513792"/><text x="85.4359%" y="4479.50">m..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (8,513,792 samples, 2.21%)</title><rect x="85.1859%" y="4453" width="2.2064%" height="15" fill="rgb(229,133,24)" fg:x="328702552" fg:w="8513792"/><text x="85.4359%" y="4463.50">c..</text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (8,513,792 samples, 2.21%)</title><rect x="85.1859%" y="4437" width="2.2064%" height="15" fill="rgb(238,33,43)" fg:x="328702552" fg:w="8513792"/><text x="85.4359%" y="4447.50">m..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7,247,838 samples, 1.88%)</title><rect x="85.5140%" y="4421" width="1.8783%" height="15" fill="rgb(227,59,38)" fg:x="329968506" fg:w="7247838"/><text x="85.7640%" y="4431.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7,247,838 samples, 1.88%)</title><rect x="85.5140%" y="4405" width="1.8783%" height="15" fill="rgb(230,97,0)" fg:x="329968506" fg:w="7247838"/><text x="85.7640%" y="4415.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7,247,838 samples, 1.88%)</title><rect x="85.5140%" y="4389" width="1.8783%" height="15" fill="rgb(250,173,50)" fg:x="329968506" fg:w="7247838"/><text x="85.7640%" y="4399.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3,518,788 samples, 0.91%)</title><rect x="86.4804%" y="4373" width="0.9119%" height="15" fill="rgb(240,15,50)" fg:x="333697556" fg:w="3518788"/><text x="86.7304%" y="4383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,518,788 samples, 0.91%)</title><rect x="86.4804%" y="4357" width="0.9119%" height="15" fill="rgb(221,93,22)" fg:x="333697556" fg:w="3518788"/><text x="86.7304%" y="4367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3,518,788 samples, 0.91%)</title><rect x="86.4804%" y="4341" width="0.9119%" height="15" fill="rgb(245,180,53)" fg:x="333697556" fg:w="3518788"/><text x="86.7304%" y="4351.50"></text></g><g><title>hashbrown::control::tag::Tag::full (1,235,484 samples, 0.32%)</title><rect x="87.0722%" y="4325" width="0.3202%" height="15" fill="rgb(231,88,51)" fg:x="335980860" fg:w="1235484"/><text x="87.3222%" y="4335.50"></text></g><g><title>main::benchmark::benchmark_accumulated_modifications (234,657,201 samples, 60.81%)</title><rect x="26.8981%" y="4821" width="60.8133%" height="15" fill="rgb(240,58,21)" fg:x="103790470" fg:w="234657201"/><text x="27.1481%" y="4831.50">main::benchmark::benchmark_accumulated_modifications</text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4805" width="0.3191%" height="15" fill="rgb(237,21,10)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4815.50"></text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4789" width="0.3191%" height="15" fill="rgb(218,43,11)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4799.50"></text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4773" width="0.3191%" height="15" fill="rgb(218,221,29)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4783.50"></text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4757" width="0.3191%" height="15" fill="rgb(214,118,42)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4767.50"></text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4741" width="0.3191%" height="15" fill="rgb(251,200,26)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4751.50"></text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4725" width="0.3191%" height="15" fill="rgb(237,101,39)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4735.50"></text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4709" width="0.3191%" height="15" fill="rgb(251,117,11)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4719.50"></text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4693" width="0.3191%" height="15" fill="rgb(216,223,23)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4703.50"></text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4677" width="0.3191%" height="15" fill="rgb(251,54,12)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4687.50"></text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4661" width="0.3191%" height="15" fill="rgb(254,176,54)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4671.50"></text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4645" width="0.3191%" height="15" fill="rgb(210,32,8)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4655.50"></text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4629" width="0.3191%" height="15" fill="rgb(235,52,38)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4639.50"></text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4613" width="0.3191%" height="15" fill="rgb(231,4,44)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4623.50"></text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4597" width="0.3191%" height="15" fill="rgb(249,2,32)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4607.50"></text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4581" width="0.3191%" height="15" fill="rgb(224,65,26)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4591.50"></text></g><g><title>main::benchmark::mark_all_dirty_for_layout (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4565" width="0.3191%" height="15" fill="rgb(250,73,40)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4575.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::mark_dirty (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4549" width="0.3191%" height="15" fill="rgb(253,177,16)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4559.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::set_summary_bit_on_ancestors (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4533" width="0.3191%" height="15" fill="rgb(217,32,34)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4543.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::set_summary_bit (1,231,327 samples, 0.32%)</title><rect x="87.3923%" y="4517" width="0.3191%" height="15" fill="rgb(212,7,10)" fg:x="337216344" fg:w="1231327"/><text x="87.6423%" y="4527.50"></text></g><g><title>main::benchmark::get_frame_description (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4821" width="0.3274%" height="15" fill="rgb(245,89,8)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4831.50"></text></g><g><title>main::benchmark::extract_path_from_command (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4805" width="0.3274%" height="15" fill="rgb(237,16,53)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4789" width="0.3274%" height="15" fill="rgb(250,204,30)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4799.50"></text></g><g><title>main::benchmark::extract_path_from_command::_{{closure}} (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4773" width="0.3274%" height="15" fill="rgb(208,77,27)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4757" width="0.3274%" height="15" fill="rgb(250,204,28)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4741" width="0.3274%" height="15" fill="rgb(244,63,21)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4725" width="0.3274%" height="15" fill="rgb(236,85,44)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4709" width="0.3274%" height="15" fill="rgb(215,98,4)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4693" width="0.3274%" height="15" fill="rgb(235,38,11)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4677" width="0.3274%" height="15" fill="rgb(254,186,25)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4661" width="0.3274%" height="15" fill="rgb(225,55,31)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4645" width="0.3274%" height="15" fill="rgb(211,15,21)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4629" width="0.3274%" height="15" fill="rgb(215,187,41)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4613" width="0.3274%" height="15" fill="rgb(248,69,32)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4597" width="0.3274%" height="15" fill="rgb(252,102,52)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4581" width="0.3274%" height="15" fill="rgb(253,140,32)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4565" width="0.3274%" height="15" fill="rgb(216,56,42)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4549" width="0.3274%" height="15" fill="rgb(216,184,14)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4559.50"></text></g><g><title>alloc::alloc::realloc (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4533" width="0.3274%" height="15" fill="rgb(237,187,27)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4543.50"></text></g><g><title>realloc (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4517" width="0.3274%" height="15" fill="rgb(219,65,3)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4527.50"></text></g><g><title>[libc.so.6] (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4501" width="0.3274%" height="15" fill="rgb(245,83,25)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4511.50"></text></g><g><title>[libc.so.6] (1,263,216 samples, 0.33%)</title><rect x="87.7115%" y="4485" width="0.3274%" height="15" fill="rgb(214,205,45)" fg:x="338447671" fg:w="1263216"/><text x="87.9615%" y="4495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (927,914 samples, 0.24%)</title><rect x="88.0388%" y="4805" width="0.2405%" height="15" fill="rgb(241,20,18)" fg:x="339710887" fg:w="927914"/><text x="88.2888%" y="4815.50"></text></g><g><title>core::ptr::write (927,914 samples, 0.24%)</title><rect x="88.0388%" y="4789" width="0.2405%" height="15" fill="rgb(232,163,23)" fg:x="339710887" fg:w="927914"/><text x="88.2888%" y="4799.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (940,889 samples, 0.24%)</title><rect x="88.4440%" y="3989" width="0.2438%" height="15" fill="rgb(214,5,46)" fg:x="341274402" fg:w="940889"/><text x="88.6940%" y="3999.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (940,889 samples, 0.24%)</title><rect x="88.4440%" y="3973" width="0.2438%" height="15" fill="rgb(229,78,17)" fg:x="341274402" fg:w="940889"/><text x="88.6940%" y="3983.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (940,889 samples, 0.24%)</title><rect x="88.4440%" y="3957" width="0.2438%" height="15" fill="rgb(248,89,10)" fg:x="341274402" fg:w="940889"/><text x="88.6940%" y="3967.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (940,889 samples, 0.24%)</title><rect x="88.4440%" y="3941" width="0.2438%" height="15" fill="rgb(248,54,15)" fg:x="341274402" fg:w="940889"/><text x="88.6940%" y="3951.50"></text></g><g><title>malloc (940,889 samples, 0.24%)</title><rect x="88.4440%" y="3925" width="0.2438%" height="15" fill="rgb(223,116,6)" fg:x="341274402" fg:w="940889"/><text x="88.6940%" y="3935.50"></text></g><g><title>[libc.so.6] (940,889 samples, 0.24%)</title><rect x="88.4440%" y="3909" width="0.2438%" height="15" fill="rgb(205,125,38)" fg:x="341274402" fg:w="940889"/><text x="88.6940%" y="3919.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (893,438 samples, 0.23%)</title><rect x="88.6879%" y="3269" width="0.2315%" height="15" fill="rgb(251,78,38)" fg:x="342215291" fg:w="893438"/><text x="88.9379%" y="3279.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (893,438 samples, 0.23%)</title><rect x="88.6879%" y="3253" width="0.2315%" height="15" fill="rgb(253,78,28)" fg:x="342215291" fg:w="893438"/><text x="88.9379%" y="3263.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (893,438 samples, 0.23%)</title><rect x="88.6879%" y="3237" width="0.2315%" height="15" fill="rgb(209,120,3)" fg:x="342215291" fg:w="893438"/><text x="88.9379%" y="3247.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (893,438 samples, 0.23%)</title><rect x="88.6879%" y="3221" width="0.2315%" height="15" fill="rgb(238,229,9)" fg:x="342215291" fg:w="893438"/><text x="88.9379%" y="3231.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (893,438 samples, 0.23%)</title><rect x="88.6879%" y="3205" width="0.2315%" height="15" fill="rgb(253,159,18)" fg:x="342215291" fg:w="893438"/><text x="88.9379%" y="3215.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (893,438 samples, 0.23%)</title><rect x="88.6879%" y="3189" width="0.2315%" height="15" fill="rgb(244,42,34)" fg:x="342215291" fg:w="893438"/><text x="88.9379%" y="3199.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (893,438 samples, 0.23%)</title><rect x="88.6879%" y="3173" width="0.2315%" height="15" fill="rgb(224,8,7)" fg:x="342215291" fg:w="893438"/><text x="88.9379%" y="3183.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (893,438 samples, 0.23%)</title><rect x="88.6879%" y="3157" width="0.2315%" height="15" fill="rgb(210,201,45)" fg:x="342215291" fg:w="893438"/><text x="88.9379%" y="3167.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (893,438 samples, 0.23%)</title><rect x="88.6879%" y="3141" width="0.2315%" height="15" fill="rgb(252,185,21)" fg:x="342215291" fg:w="893438"/><text x="88.9379%" y="3151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (893,438 samples, 0.23%)</title><rect x="88.6879%" y="3125" width="0.2315%" height="15" fill="rgb(223,131,1)" fg:x="342215291" fg:w="893438"/><text x="88.9379%" y="3135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (893,438 samples, 0.23%)</title><rect x="88.6879%" y="3109" width="0.2315%" height="15" fill="rgb(245,141,16)" fg:x="342215291" fg:w="893438"/><text x="88.9379%" y="3119.50"></text></g><g><title>alloc::alloc::alloc (893,438 samples, 0.23%)</title><rect x="88.6879%" y="3093" width="0.2315%" height="15" fill="rgb(229,55,45)" fg:x="342215291" fg:w="893438"/><text x="88.9379%" y="3103.50"></text></g><g><title>malloc (893,438 samples, 0.23%)</title><rect x="88.6879%" y="3077" width="0.2315%" height="15" fill="rgb(208,92,15)" fg:x="342215291" fg:w="893438"/><text x="88.9379%" y="3087.50"></text></g><g><title>[libc.so.6] (893,438 samples, 0.23%)</title><rect x="88.6879%" y="3061" width="0.2315%" height="15" fill="rgb(234,185,47)" fg:x="342215291" fg:w="893438"/><text x="88.9379%" y="3071.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (501,504 samples, 0.13%)</title><rect x="89.2817%" y="2901" width="0.1300%" height="15" fill="rgb(253,104,50)" fg:x="344506846" fg:w="501504"/><text x="89.5317%" y="2911.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (501,504 samples, 0.13%)</title><rect x="89.2817%" y="2885" width="0.1300%" height="15" fill="rgb(205,70,7)" fg:x="344506846" fg:w="501504"/><text x="89.5317%" y="2895.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (501,504 samples, 0.13%)</title><rect x="89.2817%" y="2869" width="0.1300%" height="15" fill="rgb(240,178,43)" fg:x="344506846" fg:w="501504"/><text x="89.5317%" y="2879.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (501,504 samples, 0.13%)</title><rect x="89.2817%" y="2853" width="0.1300%" height="15" fill="rgb(214,112,2)" fg:x="344506846" fg:w="501504"/><text x="89.5317%" y="2863.50"></text></g><g><title>malloc (501,504 samples, 0.13%)</title><rect x="89.2817%" y="2837" width="0.1300%" height="15" fill="rgb(206,46,17)" fg:x="344506846" fg:w="501504"/><text x="89.5317%" y="2847.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.13%)</title><rect x="89.2817%" y="2821" width="0.1300%" height="15" fill="rgb(225,220,16)" fg:x="344506846" fg:w="501504"/><text x="89.5317%" y="2831.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,453,195 samples, 0.38%)</title><rect x="89.2817%" y="2917" width="0.3766%" height="15" fill="rgb(238,65,40)" fg:x="344506846" fg:w="1453195"/><text x="89.5317%" y="2927.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (951,691 samples, 0.25%)</title><rect x="89.4117%" y="2901" width="0.2466%" height="15" fill="rgb(230,151,21)" fg:x="345008350" fg:w="951691"/><text x="89.6617%" y="2911.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (951,691 samples, 0.25%)</title><rect x="89.4117%" y="2885" width="0.2466%" height="15" fill="rgb(218,58,49)" fg:x="345008350" fg:w="951691"/><text x="89.6617%" y="2895.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (873,051 samples, 0.23%)</title><rect x="89.6583%" y="2741" width="0.2263%" height="15" fill="rgb(219,179,14)" fg:x="345960041" fg:w="873051"/><text x="89.9083%" y="2751.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (873,051 samples, 0.23%)</title><rect x="89.6583%" y="2725" width="0.2263%" height="15" fill="rgb(223,72,1)" fg:x="345960041" fg:w="873051"/><text x="89.9083%" y="2735.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (873,051 samples, 0.23%)</title><rect x="89.6583%" y="2709" width="0.2263%" height="15" fill="rgb(238,126,10)" fg:x="345960041" fg:w="873051"/><text x="89.9083%" y="2719.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (873,051 samples, 0.23%)</title><rect x="89.6583%" y="2693" width="0.2263%" height="15" fill="rgb(224,206,38)" fg:x="345960041" fg:w="873051"/><text x="89.9083%" y="2703.50"></text></g><g><title>malloc (873,051 samples, 0.23%)</title><rect x="89.6583%" y="2677" width="0.2263%" height="15" fill="rgb(212,201,54)" fg:x="345960041" fg:w="873051"/><text x="89.9083%" y="2687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (788,922 samples, 0.20%)</title><rect x="89.8846%" y="2709" width="0.2045%" height="15" fill="rgb(218,154,48)" fg:x="346833092" fg:w="788922"/><text x="90.1346%" y="2719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (788,922 samples, 0.20%)</title><rect x="89.8846%" y="2693" width="0.2045%" height="15" fill="rgb(232,93,24)" fg:x="346833092" fg:w="788922"/><text x="90.1346%" y="2703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (788,922 samples, 0.20%)</title><rect x="89.8846%" y="2677" width="0.2045%" height="15" fill="rgb(245,30,21)" fg:x="346833092" fg:w="788922"/><text x="90.1346%" y="2687.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (788,922 samples, 0.20%)</title><rect x="89.8846%" y="2661" width="0.2045%" height="15" fill="rgb(242,148,29)" fg:x="346833092" fg:w="788922"/><text x="90.1346%" y="2671.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (788,922 samples, 0.20%)</title><rect x="89.8846%" y="2645" width="0.2045%" height="15" fill="rgb(244,153,54)" fg:x="346833092" fg:w="788922"/><text x="90.1346%" y="2655.50"></text></g><g><title>malloc (788,922 samples, 0.20%)</title><rect x="89.8846%" y="2629" width="0.2045%" height="15" fill="rgb(252,87,22)" fg:x="346833092" fg:w="788922"/><text x="90.1346%" y="2639.50"></text></g><g><title>[libc.so.6] (788,922 samples, 0.20%)</title><rect x="89.8846%" y="2613" width="0.2045%" height="15" fill="rgb(210,51,29)" fg:x="346833092" fg:w="788922"/><text x="90.1346%" y="2623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (954,689 samples, 0.25%)</title><rect x="90.0891%" y="2117" width="0.2474%" height="15" fill="rgb(242,136,47)" fg:x="347622014" fg:w="954689"/><text x="90.3391%" y="2127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (985,127 samples, 0.26%)</title><rect x="90.3365%" y="1253" width="0.2553%" height="15" fill="rgb(238,68,4)" fg:x="348576703" fg:w="985127"/><text x="90.5865%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (985,127 samples, 0.26%)</title><rect x="90.3365%" y="1237" width="0.2553%" height="15" fill="rgb(242,161,30)" fg:x="348576703" fg:w="985127"/><text x="90.5865%" y="1247.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (985,127 samples, 0.26%)</title><rect x="90.3365%" y="1221" width="0.2553%" height="15" fill="rgb(218,58,44)" fg:x="348576703" fg:w="985127"/><text x="90.5865%" y="1231.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (985,127 samples, 0.26%)</title><rect x="90.3365%" y="1205" width="0.2553%" height="15" fill="rgb(252,125,32)" fg:x="348576703" fg:w="985127"/><text x="90.5865%" y="1215.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (985,127 samples, 0.26%)</title><rect x="90.3365%" y="1189" width="0.2553%" height="15" fill="rgb(219,178,0)" fg:x="348576703" fg:w="985127"/><text x="90.5865%" y="1199.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (985,127 samples, 0.26%)</title><rect x="90.3365%" y="1173" width="0.2553%" height="15" fill="rgb(213,152,7)" fg:x="348576703" fg:w="985127"/><text x="90.5865%" y="1183.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (985,127 samples, 0.26%)</title><rect x="90.3365%" y="1157" width="0.2553%" height="15" fill="rgb(249,109,34)" fg:x="348576703" fg:w="985127"/><text x="90.5865%" y="1167.50"></text></g><g><title>serde::de::MapAccess::next_entry (749,111 samples, 0.19%)</title><rect x="90.5918%" y="1077" width="0.1941%" height="15" fill="rgb(232,96,21)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="1087.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (749,111 samples, 0.19%)</title><rect x="90.5918%" y="1061" width="0.1941%" height="15" fill="rgb(228,27,39)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="1071.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (749,111 samples, 0.19%)</title><rect x="90.5918%" y="1045" width="0.1941%" height="15" fill="rgb(211,182,52)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="1055.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (749,111 samples, 0.19%)</title><rect x="90.5918%" y="1029" width="0.1941%" height="15" fill="rgb(234,178,38)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="1039.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (749,111 samples, 0.19%)</title><rect x="90.5918%" y="1013" width="0.1941%" height="15" fill="rgb(221,111,3)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="1023.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (749,111 samples, 0.19%)</title><rect x="90.5918%" y="997" width="0.1941%" height="15" fill="rgb(228,175,21)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="1007.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (749,111 samples, 0.19%)</title><rect x="90.5918%" y="981" width="0.1941%" height="15" fill="rgb(228,174,43)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="991.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (749,111 samples, 0.19%)</title><rect x="90.5918%" y="965" width="0.1941%" height="15" fill="rgb(211,191,0)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (749,111 samples, 0.19%)</title><rect x="90.5918%" y="949" width="0.1941%" height="15" fill="rgb(253,117,3)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (749,111 samples, 0.19%)</title><rect x="90.5918%" y="933" width="0.1941%" height="15" fill="rgb(241,127,19)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (749,111 samples, 0.19%)</title><rect x="90.5918%" y="917" width="0.1941%" height="15" fill="rgb(218,103,12)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (749,111 samples, 0.19%)</title><rect x="90.5918%" y="901" width="0.1941%" height="15" fill="rgb(236,214,43)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (749,111 samples, 0.19%)</title><rect x="90.5918%" y="885" width="0.1941%" height="15" fill="rgb(244,144,19)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (749,111 samples, 0.19%)</title><rect x="90.5918%" y="869" width="0.1941%" height="15" fill="rgb(246,188,10)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (749,111 samples, 0.19%)</title><rect x="90.5918%" y="853" width="0.1941%" height="15" fill="rgb(212,193,33)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (749,111 samples, 0.19%)</title><rect x="90.5918%" y="837" width="0.1941%" height="15" fill="rgb(241,51,29)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (749,111 samples, 0.19%)</title><rect x="90.5918%" y="821" width="0.1941%" height="15" fill="rgb(211,58,19)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (749,111 samples, 0.19%)</title><rect x="90.5918%" y="805" width="0.1941%" height="15" fill="rgb(229,111,26)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (749,111 samples, 0.19%)</title><rect x="90.5918%" y="789" width="0.1941%" height="15" fill="rgb(213,115,40)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (749,111 samples, 0.19%)</title><rect x="90.5918%" y="773" width="0.1941%" height="15" fill="rgb(209,56,44)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (749,111 samples, 0.19%)</title><rect x="90.5918%" y="757" width="0.1941%" height="15" fill="rgb(230,108,32)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="767.50"></text></g><g><title>alloc::alloc::alloc (749,111 samples, 0.19%)</title><rect x="90.5918%" y="741" width="0.1941%" height="15" fill="rgb(216,165,31)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="751.50"></text></g><g><title>malloc (749,111 samples, 0.19%)</title><rect x="90.5918%" y="725" width="0.1941%" height="15" fill="rgb(218,122,21)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="735.50"></text></g><g><title>[libc.so.6] (749,111 samples, 0.19%)</title><rect x="90.5918%" y="709" width="0.1941%" height="15" fill="rgb(223,224,47)" fg:x="349561830" fg:w="749111"/><text x="90.8418%" y="719.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1909" width="0.6200%" height="15" fill="rgb(238,102,44)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1919.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1893" width="0.6200%" height="15" fill="rgb(236,46,40)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1903.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1877" width="0.6200%" height="15" fill="rgb(247,202,50)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1887.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1861" width="0.6200%" height="15" fill="rgb(209,99,20)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1871.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1845" width="0.6200%" height="15" fill="rgb(252,27,34)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1855.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1829" width="0.6200%" height="15" fill="rgb(215,206,23)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1839.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1813" width="0.6200%" height="15" fill="rgb(212,135,36)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1823.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1797" width="0.6200%" height="15" fill="rgb(240,189,1)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1807.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1781" width="0.6200%" height="15" fill="rgb(242,56,20)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1791.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1765" width="0.6200%" height="15" fill="rgb(247,132,33)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1775.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1749" width="0.6200%" height="15" fill="rgb(208,149,11)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1759.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1733" width="0.6200%" height="15" fill="rgb(211,33,11)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1743.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1717" width="0.6200%" height="15" fill="rgb(221,29,38)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1727.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1701" width="0.6200%" height="15" fill="rgb(206,182,49)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1711.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1685" width="0.6200%" height="15" fill="rgb(216,140,1)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1695.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1669" width="0.6200%" height="15" fill="rgb(232,57,40)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1679.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1653" width="0.6200%" height="15" fill="rgb(224,186,18)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1663.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1637" width="0.6200%" height="15" fill="rgb(215,121,11)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1647.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1621" width="0.6200%" height="15" fill="rgb(245,147,10)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1631.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1605" width="0.6200%" height="15" fill="rgb(238,153,13)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1615.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1589" width="0.6200%" height="15" fill="rgb(233,108,0)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1599.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1573" width="0.6200%" height="15" fill="rgb(212,157,17)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1583.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1557" width="0.6200%" height="15" fill="rgb(225,213,38)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1567.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1541" width="0.6200%" height="15" fill="rgb(248,16,11)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1551.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1525" width="0.6200%" height="15" fill="rgb(241,33,4)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1535.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1509" width="0.6200%" height="15" fill="rgb(222,26,43)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1519.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1493" width="0.6200%" height="15" fill="rgb(243,29,36)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1503.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1477" width="0.6200%" height="15" fill="rgb(241,9,27)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1487.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1461" width="0.6200%" height="15" fill="rgb(205,117,26)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1471.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1445" width="0.6200%" height="15" fill="rgb(209,80,39)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1455.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1429" width="0.6200%" height="15" fill="rgb(239,155,6)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1439.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1413" width="0.6200%" height="15" fill="rgb(212,104,12)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1423.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1397" width="0.6200%" height="15" fill="rgb(234,204,3)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1407.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1381" width="0.6200%" height="15" fill="rgb(251,218,7)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1391.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1365" width="0.6200%" height="15" fill="rgb(221,81,32)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1375.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1349" width="0.6200%" height="15" fill="rgb(214,152,26)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1359.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1333" width="0.6200%" height="15" fill="rgb(223,22,3)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1343.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1317" width="0.6200%" height="15" fill="rgb(207,174,7)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1327.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1301" width="0.6200%" height="15" fill="rgb(224,19,52)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1311.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1285" width="0.6200%" height="15" fill="rgb(228,24,14)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1295.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,392,433 samples, 0.62%)</title><rect x="90.3365%" y="1269" width="0.6200%" height="15" fill="rgb(230,153,43)" fg:x="348576703" fg:w="2392433"/><text x="90.5865%" y="1279.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,407,306 samples, 0.36%)</title><rect x="90.5918%" y="1253" width="0.3647%" height="15" fill="rgb(231,106,12)" fg:x="349561830" fg:w="1407306"/><text x="90.8418%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,407,306 samples, 0.36%)</title><rect x="90.5918%" y="1237" width="0.3647%" height="15" fill="rgb(215,92,2)" fg:x="349561830" fg:w="1407306"/><text x="90.8418%" y="1247.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,407,306 samples, 0.36%)</title><rect x="90.5918%" y="1221" width="0.3647%" height="15" fill="rgb(249,143,25)" fg:x="349561830" fg:w="1407306"/><text x="90.8418%" y="1231.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,407,306 samples, 0.36%)</title><rect x="90.5918%" y="1205" width="0.3647%" height="15" fill="rgb(252,7,35)" fg:x="349561830" fg:w="1407306"/><text x="90.8418%" y="1215.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,407,306 samples, 0.36%)</title><rect x="90.5918%" y="1189" width="0.3647%" height="15" fill="rgb(216,69,40)" fg:x="349561830" fg:w="1407306"/><text x="90.8418%" y="1199.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,407,306 samples, 0.36%)</title><rect x="90.5918%" y="1173" width="0.3647%" height="15" fill="rgb(240,36,33)" fg:x="349561830" fg:w="1407306"/><text x="90.8418%" y="1183.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,407,306 samples, 0.36%)</title><rect x="90.5918%" y="1157" width="0.3647%" height="15" fill="rgb(231,128,14)" fg:x="349561830" fg:w="1407306"/><text x="90.8418%" y="1167.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,407,306 samples, 0.36%)</title><rect x="90.5918%" y="1141" width="0.3647%" height="15" fill="rgb(245,143,14)" fg:x="349561830" fg:w="1407306"/><text x="90.8418%" y="1151.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,407,306 samples, 0.36%)</title><rect x="90.5918%" y="1125" width="0.3647%" height="15" fill="rgb(222,130,28)" fg:x="349561830" fg:w="1407306"/><text x="90.8418%" y="1135.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,407,306 samples, 0.36%)</title><rect x="90.5918%" y="1109" width="0.3647%" height="15" fill="rgb(212,10,48)" fg:x="349561830" fg:w="1407306"/><text x="90.8418%" y="1119.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,407,306 samples, 0.36%)</title><rect x="90.5918%" y="1093" width="0.3647%" height="15" fill="rgb(254,118,45)" fg:x="349561830" fg:w="1407306"/><text x="90.8418%" y="1103.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (658,195 samples, 0.17%)</title><rect x="90.7859%" y="1077" width="0.1706%" height="15" fill="rgb(228,6,45)" fg:x="350310941" fg:w="658195"/><text x="91.0359%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (658,195 samples, 0.17%)</title><rect x="90.7859%" y="1061" width="0.1706%" height="15" fill="rgb(241,18,35)" fg:x="350310941" fg:w="658195"/><text x="91.0359%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (658,195 samples, 0.17%)</title><rect x="90.7859%" y="1045" width="0.1706%" height="15" fill="rgb(227,214,53)" fg:x="350310941" fg:w="658195"/><text x="91.0359%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (658,195 samples, 0.17%)</title><rect x="90.7859%" y="1029" width="0.1706%" height="15" fill="rgb(224,107,51)" fg:x="350310941" fg:w="658195"/><text x="91.0359%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (658,195 samples, 0.17%)</title><rect x="90.7859%" y="1013" width="0.1706%" height="15" fill="rgb(248,60,28)" fg:x="350310941" fg:w="658195"/><text x="91.0359%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::DormantMut,K,V,NodeType&gt;,HandleType&gt;::awaken (658,195 samples, 0.17%)</title><rect x="90.7859%" y="997" width="0.1706%" height="15" fill="rgb(249,101,23)" fg:x="350310941" fg:w="658195"/><text x="91.0359%" y="1007.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,784,182 samples, 0.72%)</title><rect x="90.3365%" y="2021" width="0.7215%" height="15" fill="rgb(228,51,19)" fg:x="348576703" fg:w="2784182"/><text x="90.5865%" y="2031.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,784,182 samples, 0.72%)</title><rect x="90.3365%" y="2005" width="0.7215%" height="15" fill="rgb(213,20,6)" fg:x="348576703" fg:w="2784182"/><text x="90.5865%" y="2015.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,784,182 samples, 0.72%)</title><rect x="90.3365%" y="1989" width="0.7215%" height="15" fill="rgb(212,124,10)" fg:x="348576703" fg:w="2784182"/><text x="90.5865%" y="1999.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,784,182 samples, 0.72%)</title><rect x="90.3365%" y="1973" width="0.7215%" height="15" fill="rgb(248,3,40)" fg:x="348576703" fg:w="2784182"/><text x="90.5865%" y="1983.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,784,182 samples, 0.72%)</title><rect x="90.3365%" y="1957" width="0.7215%" height="15" fill="rgb(223,178,23)" fg:x="348576703" fg:w="2784182"/><text x="90.5865%" y="1967.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,784,182 samples, 0.72%)</title><rect x="90.3365%" y="1941" width="0.7215%" height="15" fill="rgb(240,132,45)" fg:x="348576703" fg:w="2784182"/><text x="90.5865%" y="1951.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,784,182 samples, 0.72%)</title><rect x="90.3365%" y="1925" width="0.7215%" height="15" fill="rgb(245,164,36)" fg:x="348576703" fg:w="2784182"/><text x="90.5865%" y="1935.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (391,749 samples, 0.10%)</title><rect x="90.9565%" y="1909" width="0.1015%" height="15" fill="rgb(231,188,53)" fg:x="350969136" fg:w="391749"/><text x="91.2065%" y="1919.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (391,749 samples, 0.10%)</title><rect x="90.9565%" y="1893" width="0.1015%" height="15" fill="rgb(237,198,39)" fg:x="350969136" fg:w="391749"/><text x="91.2065%" y="1903.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (391,749 samples, 0.10%)</title><rect x="90.9565%" y="1877" width="0.1015%" height="15" fill="rgb(223,120,35)" fg:x="350969136" fg:w="391749"/><text x="91.2065%" y="1887.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (391,749 samples, 0.10%)</title><rect x="90.9565%" y="1861" width="0.1015%" height="15" fill="rgb(253,107,49)" fg:x="350969136" fg:w="391749"/><text x="91.2065%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (391,749 samples, 0.10%)</title><rect x="90.9565%" y="1845" width="0.1015%" height="15" fill="rgb(216,44,31)" fg:x="350969136" fg:w="391749"/><text x="91.2065%" y="1855.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (391,749 samples, 0.10%)</title><rect x="90.9565%" y="1829" width="0.1015%" height="15" fill="rgb(253,87,21)" fg:x="350969136" fg:w="391749"/><text x="91.2065%" y="1839.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (391,749 samples, 0.10%)</title><rect x="90.9565%" y="1813" width="0.1015%" height="15" fill="rgb(226,18,2)" fg:x="350969136" fg:w="391749"/><text x="91.2065%" y="1823.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (391,749 samples, 0.10%)</title><rect x="90.9565%" y="1797" width="0.1015%" height="15" fill="rgb(216,8,46)" fg:x="350969136" fg:w="391749"/><text x="91.2065%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (391,749 samples, 0.10%)</title><rect x="90.9565%" y="1781" width="0.1015%" height="15" fill="rgb(226,140,39)" fg:x="350969136" fg:w="391749"/><text x="91.2065%" y="1791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (391,749 samples, 0.10%)</title><rect x="90.9565%" y="1765" width="0.1015%" height="15" fill="rgb(221,194,54)" fg:x="350969136" fg:w="391749"/><text x="91.2065%" y="1775.50"></text></g><g><title>alloc::alloc::alloc (391,749 samples, 0.10%)</title><rect x="90.9565%" y="1749" width="0.1015%" height="15" fill="rgb(213,92,11)" fg:x="350969136" fg:w="391749"/><text x="91.2065%" y="1759.50"></text></g><g><title>malloc (391,749 samples, 0.10%)</title><rect x="90.9565%" y="1733" width="0.1015%" height="15" fill="rgb(229,162,46)" fg:x="350969136" fg:w="391749"/><text x="91.2065%" y="1743.50"></text></g><g><title>[libc.so.6] (391,749 samples, 0.10%)</title><rect x="90.9565%" y="1717" width="0.1015%" height="15" fill="rgb(214,111,36)" fg:x="350969136" fg:w="391749"/><text x="91.2065%" y="1727.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,251,543 samples, 0.84%)</title><rect x="90.3365%" y="2117" width="0.8427%" height="15" fill="rgb(207,6,21)" fg:x="348576703" fg:w="3251543"/><text x="90.5865%" y="2127.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,251,543 samples, 0.84%)</title><rect x="90.3365%" y="2101" width="0.8427%" height="15" fill="rgb(213,127,38)" fg:x="348576703" fg:w="3251543"/><text x="90.5865%" y="2111.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,251,543 samples, 0.84%)</title><rect x="90.3365%" y="2085" width="0.8427%" height="15" fill="rgb(238,118,32)" fg:x="348576703" fg:w="3251543"/><text x="90.5865%" y="2095.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,251,543 samples, 0.84%)</title><rect x="90.3365%" y="2069" width="0.8427%" height="15" fill="rgb(240,139,39)" fg:x="348576703" fg:w="3251543"/><text x="90.5865%" y="2079.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,251,543 samples, 0.84%)</title><rect x="90.3365%" y="2053" width="0.8427%" height="15" fill="rgb(235,10,37)" fg:x="348576703" fg:w="3251543"/><text x="90.5865%" y="2063.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,251,543 samples, 0.84%)</title><rect x="90.3365%" y="2037" width="0.8427%" height="15" fill="rgb(249,171,38)" fg:x="348576703" fg:w="3251543"/><text x="90.5865%" y="2047.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (467,361 samples, 0.12%)</title><rect x="91.0580%" y="2021" width="0.1211%" height="15" fill="rgb(242,144,32)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="2031.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (467,361 samples, 0.12%)</title><rect x="91.0580%" y="2005" width="0.1211%" height="15" fill="rgb(217,117,21)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="2015.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1989" width="0.1211%" height="15" fill="rgb(249,87,1)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1999.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1973" width="0.1211%" height="15" fill="rgb(248,196,48)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1983.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1957" width="0.1211%" height="15" fill="rgb(251,206,33)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1941" width="0.1211%" height="15" fill="rgb(232,141,28)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1951.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1925" width="0.1211%" height="15" fill="rgb(209,167,14)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1935.50"></text></g><g><title>alloc::slice::hack::to_vec (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1909" width="0.1211%" height="15" fill="rgb(225,11,50)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1919.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1893" width="0.1211%" height="15" fill="rgb(209,50,20)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1877" width="0.1211%" height="15" fill="rgb(212,17,46)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1861" width="0.1211%" height="15" fill="rgb(216,101,39)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1845" width="0.1211%" height="15" fill="rgb(212,228,48)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1829" width="0.1211%" height="15" fill="rgb(250,6,50)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1813" width="0.1211%" height="15" fill="rgb(250,160,48)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1823.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1797" width="0.1211%" height="15" fill="rgb(244,216,33)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1807.50"></text></g><g><title>alloc::alloc::alloc (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1781" width="0.1211%" height="15" fill="rgb(207,157,5)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1791.50"></text></g><g><title>malloc (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1765" width="0.1211%" height="15" fill="rgb(228,199,8)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1775.50"></text></g><g><title>[libc.so.6] (467,361 samples, 0.12%)</title><rect x="91.0580%" y="1749" width="0.1211%" height="15" fill="rgb(227,80,20)" fg:x="351360885" fg:w="467361"/><text x="91.3080%" y="1759.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2645" width="1.7250%" height="15" fill="rgb(222,9,33)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2655.50"></text></g><g><title>serde::de::SeqAccess::next_element (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2629" width="1.7250%" height="15" fill="rgb(239,44,28)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2639.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2613" width="1.7250%" height="15" fill="rgb(249,187,43)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2597" width="1.7250%" height="15" fill="rgb(216,141,28)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2581" width="1.7250%" height="15" fill="rgb(230,154,53)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2565" width="1.7250%" height="15" fill="rgb(227,82,4)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2549" width="1.7250%" height="15" fill="rgb(220,107,16)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2559.50"></text></g><g><title>serde::de::MapAccess::next_entry (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2533" width="1.7250%" height="15" fill="rgb(207,187,2)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2543.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2517" width="1.7250%" height="15" fill="rgb(210,162,52)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2501" width="1.7250%" height="15" fill="rgb(217,216,49)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2485" width="1.7250%" height="15" fill="rgb(218,146,49)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2469" width="1.7250%" height="15" fill="rgb(216,55,40)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2453" width="1.7250%" height="15" fill="rgb(208,196,21)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2437" width="1.7250%" height="15" fill="rgb(242,117,42)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2447.50"></text></g><g><title>serde::de::SeqAccess::next_element (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2421" width="1.7250%" height="15" fill="rgb(210,11,23)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2431.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2405" width="1.7250%" height="15" fill="rgb(217,110,2)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2415.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2389" width="1.7250%" height="15" fill="rgb(229,77,54)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2373" width="1.7250%" height="15" fill="rgb(218,53,16)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2357" width="1.7250%" height="15" fill="rgb(215,38,13)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2341" width="1.7250%" height="15" fill="rgb(235,42,18)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2351.50"></text></g><g><title>serde::de::MapAccess::next_entry (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2325" width="1.7250%" height="15" fill="rgb(219,66,54)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2335.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2309" width="1.7250%" height="15" fill="rgb(222,205,4)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2293" width="1.7250%" height="15" fill="rgb(227,213,46)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2303.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2277" width="1.7250%" height="15" fill="rgb(250,145,42)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2261" width="1.7250%" height="15" fill="rgb(219,15,2)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2245" width="1.7250%" height="15" fill="rgb(231,181,52)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2229" width="1.7250%" height="15" fill="rgb(235,1,42)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2239.50"></text></g><g><title>serde::de::SeqAccess::next_element (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2213" width="1.7250%" height="15" fill="rgb(249,88,27)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2223.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2197" width="1.7250%" height="15" fill="rgb(235,145,16)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2207.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2181" width="1.7250%" height="15" fill="rgb(237,114,19)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2165" width="1.7250%" height="15" fill="rgb(238,51,50)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2149" width="1.7250%" height="15" fill="rgb(205,194,25)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,656,074 samples, 1.72%)</title><rect x="90.0891%" y="2133" width="1.7250%" height="15" fill="rgb(215,203,17)" fg:x="347622014" fg:w="6656074"/><text x="90.3391%" y="2143.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,449,842 samples, 0.63%)</title><rect x="91.1791%" y="2117" width="0.6349%" height="15" fill="rgb(233,112,49)" fg:x="351828246" fg:w="2449842"/><text x="91.4291%" y="2127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,449,842 samples, 0.63%)</title><rect x="91.1791%" y="2101" width="0.6349%" height="15" fill="rgb(241,130,26)" fg:x="351828246" fg:w="2449842"/><text x="91.4291%" y="2111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2,449,842 samples, 0.63%)</title><rect x="91.1791%" y="2085" width="0.6349%" height="15" fill="rgb(252,223,19)" fg:x="351828246" fg:w="2449842"/><text x="91.4291%" y="2095.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (2,449,842 samples, 0.63%)</title><rect x="91.1791%" y="2069" width="0.6349%" height="15" fill="rgb(211,95,25)" fg:x="351828246" fg:w="2449842"/><text x="91.4291%" y="2079.50"></text></g><g><title>serde::de::MapAccess::next_entry (8,443,425 samples, 2.19%)</title><rect x="89.8846%" y="2741" width="2.1882%" height="15" fill="rgb(251,182,27)" fg:x="346833092" fg:w="8443425"/><text x="90.1346%" y="2751.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (8,443,425 samples, 2.19%)</title><rect x="89.8846%" y="2725" width="2.1882%" height="15" fill="rgb(238,24,4)" fg:x="346833092" fg:w="8443425"/><text x="90.1346%" y="2735.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,654,503 samples, 1.98%)</title><rect x="90.0891%" y="2709" width="1.9837%" height="15" fill="rgb(224,220,25)" fg:x="347622014" fg:w="7654503"/><text x="90.3391%" y="2719.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,654,503 samples, 1.98%)</title><rect x="90.0891%" y="2693" width="1.9837%" height="15" fill="rgb(239,133,26)" fg:x="347622014" fg:w="7654503"/><text x="90.3391%" y="2703.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,654,503 samples, 1.98%)</title><rect x="90.0891%" y="2677" width="1.9837%" height="15" fill="rgb(211,94,48)" fg:x="347622014" fg:w="7654503"/><text x="90.3391%" y="2687.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,654,503 samples, 1.98%)</title><rect x="90.0891%" y="2661" width="1.9837%" height="15" fill="rgb(239,87,6)" fg:x="347622014" fg:w="7654503"/><text x="90.3391%" y="2671.50">&lt;..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_any_number (998,429 samples, 0.26%)</title><rect x="91.8140%" y="2645" width="0.2588%" height="15" fill="rgb(227,62,0)" fg:x="354278088" fg:w="998429"/><text x="92.0640%" y="2655.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (998,429 samples, 0.26%)</title><rect x="91.8140%" y="2629" width="0.2588%" height="15" fill="rgb(211,226,4)" fg:x="354278088" fg:w="998429"/><text x="92.0640%" y="2639.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::next_char (998,429 samples, 0.26%)</title><rect x="91.8140%" y="2613" width="0.2588%" height="15" fill="rgb(253,38,52)" fg:x="354278088" fg:w="998429"/><text x="92.0640%" y="2623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::next (998,429 samples, 0.26%)</title><rect x="91.8140%" y="2597" width="0.2588%" height="15" fill="rgb(229,126,40)" fg:x="354278088" fg:w="998429"/><text x="92.0640%" y="2607.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::next (998,429 samples, 0.26%)</title><rect x="91.8140%" y="2581" width="0.2588%" height="15" fill="rgb(229,165,44)" fg:x="354278088" fg:w="998429"/><text x="92.0640%" y="2591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,631,103 samples, 0.42%)</title><rect x="92.0728%" y="2709" width="0.4227%" height="15" fill="rgb(247,95,47)" fg:x="355276517" fg:w="1631103"/><text x="92.3228%" y="2719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,631,103 samples, 0.42%)</title><rect x="92.0728%" y="2693" width="0.4227%" height="15" fill="rgb(216,140,30)" fg:x="355276517" fg:w="1631103"/><text x="92.3228%" y="2703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,631,103 samples, 0.42%)</title><rect x="92.0728%" y="2677" width="0.4227%" height="15" fill="rgb(246,214,8)" fg:x="355276517" fg:w="1631103"/><text x="92.3228%" y="2687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,631,103 samples, 0.42%)</title><rect x="92.0728%" y="2661" width="0.4227%" height="15" fill="rgb(227,224,15)" fg:x="355276517" fg:w="1631103"/><text x="92.3228%" y="2671.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (924,157 samples, 0.24%)</title><rect x="92.2560%" y="2645" width="0.2395%" height="15" fill="rgb(233,175,4)" fg:x="355983463" fg:w="924157"/><text x="92.5060%" y="2655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (924,157 samples, 0.24%)</title><rect x="92.2560%" y="2629" width="0.2395%" height="15" fill="rgb(221,66,45)" fg:x="355983463" fg:w="924157"/><text x="92.5060%" y="2639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (924,157 samples, 0.24%)</title><rect x="92.2560%" y="2613" width="0.2395%" height="15" fill="rgb(221,178,18)" fg:x="355983463" fg:w="924157"/><text x="92.5060%" y="2623.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (924,157 samples, 0.24%)</title><rect x="92.2560%" y="2597" width="0.2395%" height="15" fill="rgb(213,81,29)" fg:x="355983463" fg:w="924157"/><text x="92.5060%" y="2607.50"></text></g><g><title>[libc.so.6] (924,157 samples, 0.24%)</title><rect x="92.2560%" y="2581" width="0.2395%" height="15" fill="rgb(220,89,49)" fg:x="355983463" fg:w="924157"/><text x="92.5060%" y="2591.50"></text></g><g><title>serde::de::MapAccess::next_entry (15,077,599 samples, 3.91%)</title><rect x="89.0494%" y="3157" width="3.9075%" height="15" fill="rgb(227,60,33)" fg:x="343610233" fg:w="15077599"/><text x="89.2994%" y="3167.50">serd..</text></g><g><title>serde::de::MapAccess::next_entry_seed (15,077,599 samples, 3.91%)</title><rect x="89.0494%" y="3141" width="3.9075%" height="15" fill="rgb(205,113,12)" fg:x="343610233" fg:w="15077599"/><text x="89.2994%" y="3151.50">serd..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (15,077,599 samples, 3.91%)</title><rect x="89.0494%" y="3125" width="3.9075%" height="15" fill="rgb(211,32,1)" fg:x="343610233" fg:w="15077599"/><text x="89.2994%" y="3135.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15,077,599 samples, 3.91%)</title><rect x="89.0494%" y="3109" width="3.9075%" height="15" fill="rgb(246,2,12)" fg:x="343610233" fg:w="15077599"/><text x="89.2994%" y="3119.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,077,599 samples, 3.91%)</title><rect x="89.0494%" y="3093" width="3.9075%" height="15" fill="rgb(243,37,27)" fg:x="343610233" fg:w="15077599"/><text x="89.2994%" y="3103.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,077,599 samples, 3.91%)</title><rect x="89.0494%" y="3077" width="3.9075%" height="15" fill="rgb(248,211,31)" fg:x="343610233" fg:w="15077599"/><text x="89.2994%" y="3087.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (14,180,986 samples, 3.68%)</title><rect x="89.2817%" y="3061" width="3.6751%" height="15" fill="rgb(242,146,47)" fg:x="344506846" fg:w="14180986"/><text x="89.5317%" y="3071.50">&lt;ser..</text></g><g><title>serde::de::SeqAccess::next_element (14,180,986 samples, 3.68%)</title><rect x="89.2817%" y="3045" width="3.6751%" height="15" fill="rgb(206,70,20)" fg:x="344506846" fg:w="14180986"/><text x="89.5317%" y="3055.50">serd..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (14,180,986 samples, 3.68%)</title><rect x="89.2817%" y="3029" width="3.6751%" height="15" fill="rgb(215,10,51)" fg:x="344506846" fg:w="14180986"/><text x="89.5317%" y="3039.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14,180,986 samples, 3.68%)</title><rect x="89.2817%" y="3013" width="3.6751%" height="15" fill="rgb(243,178,53)" fg:x="344506846" fg:w="14180986"/><text x="89.5317%" y="3023.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,180,986 samples, 3.68%)</title><rect x="89.2817%" y="2997" width="3.6751%" height="15" fill="rgb(233,221,20)" fg:x="344506846" fg:w="14180986"/><text x="89.5317%" y="3007.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,180,986 samples, 3.68%)</title><rect x="89.2817%" y="2981" width="3.6751%" height="15" fill="rgb(218,95,35)" fg:x="344506846" fg:w="14180986"/><text x="89.5317%" y="2991.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14,180,986 samples, 3.68%)</title><rect x="89.2817%" y="2965" width="3.6751%" height="15" fill="rgb(229,13,5)" fg:x="344506846" fg:w="14180986"/><text x="89.5317%" y="2975.50">&lt;ser..</text></g><g><title>serde::de::MapAccess::next_entry (14,180,986 samples, 3.68%)</title><rect x="89.2817%" y="2949" width="3.6751%" height="15" fill="rgb(252,164,30)" fg:x="344506846" fg:w="14180986"/><text x="89.5317%" y="2959.50">serd..</text></g><g><title>serde::de::MapAccess::next_entry_seed (14,180,986 samples, 3.68%)</title><rect x="89.2817%" y="2933" width="3.6751%" height="15" fill="rgb(232,68,36)" fg:x="344506846" fg:w="14180986"/><text x="89.5317%" y="2943.50">serd..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,727,791 samples, 3.30%)</title><rect x="89.6583%" y="2917" width="3.2985%" height="15" fill="rgb(219,59,54)" fg:x="345960041" fg:w="12727791"/><text x="89.9083%" y="2927.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,727,791 samples, 3.30%)</title><rect x="89.6583%" y="2901" width="3.2985%" height="15" fill="rgb(250,92,33)" fg:x="345960041" fg:w="12727791"/><text x="89.9083%" y="2911.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,727,791 samples, 3.30%)</title><rect x="89.6583%" y="2885" width="3.2985%" height="15" fill="rgb(229,162,54)" fg:x="345960041" fg:w="12727791"/><text x="89.9083%" y="2895.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,727,791 samples, 3.30%)</title><rect x="89.6583%" y="2869" width="3.2985%" height="15" fill="rgb(244,114,52)" fg:x="345960041" fg:w="12727791"/><text x="89.9083%" y="2879.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12,727,791 samples, 3.30%)</title><rect x="89.6583%" y="2853" width="3.2985%" height="15" fill="rgb(212,211,43)" fg:x="345960041" fg:w="12727791"/><text x="89.9083%" y="2863.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (12,727,791 samples, 3.30%)</title><rect x="89.6583%" y="2837" width="3.2985%" height="15" fill="rgb(226,147,8)" fg:x="345960041" fg:w="12727791"/><text x="89.9083%" y="2847.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12,727,791 samples, 3.30%)</title><rect x="89.6583%" y="2821" width="3.2985%" height="15" fill="rgb(226,23,13)" fg:x="345960041" fg:w="12727791"/><text x="89.9083%" y="2831.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,727,791 samples, 3.30%)</title><rect x="89.6583%" y="2805" width="3.2985%" height="15" fill="rgb(240,63,4)" fg:x="345960041" fg:w="12727791"/><text x="89.9083%" y="2815.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,727,791 samples, 3.30%)</title><rect x="89.6583%" y="2789" width="3.2985%" height="15" fill="rgb(221,1,32)" fg:x="345960041" fg:w="12727791"/><text x="89.9083%" y="2799.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,727,791 samples, 3.30%)</title><rect x="89.6583%" y="2773" width="3.2985%" height="15" fill="rgb(242,117,10)" fg:x="345960041" fg:w="12727791"/><text x="89.9083%" y="2783.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,727,791 samples, 3.30%)</title><rect x="89.6583%" y="2757" width="3.2985%" height="15" fill="rgb(249,172,44)" fg:x="345960041" fg:w="12727791"/><text x="89.9083%" y="2767.50">&lt;se..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (3,411,315 samples, 0.88%)</title><rect x="92.0728%" y="2741" width="0.8841%" height="15" fill="rgb(244,46,45)" fg:x="355276517" fg:w="3411315"/><text x="92.3228%" y="2751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3,411,315 samples, 0.88%)</title><rect x="92.0728%" y="2725" width="0.8841%" height="15" fill="rgb(206,43,17)" fg:x="355276517" fg:w="3411315"/><text x="92.3228%" y="2735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,780,212 samples, 0.46%)</title><rect x="92.4955%" y="2709" width="0.4614%" height="15" fill="rgb(239,218,39)" fg:x="356907620" fg:w="1780212"/><text x="92.7455%" y="2719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,780,212 samples, 0.46%)</title><rect x="92.4955%" y="2693" width="0.4614%" height="15" fill="rgb(208,169,54)" fg:x="356907620" fg:w="1780212"/><text x="92.7455%" y="2703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (765,492 samples, 0.20%)</title><rect x="92.7585%" y="2677" width="0.1984%" height="15" fill="rgb(247,25,42)" fg:x="357922340" fg:w="765492"/><text x="93.0085%" y="2687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (765,492 samples, 0.20%)</title><rect x="92.7585%" y="2661" width="0.1984%" height="15" fill="rgb(226,23,31)" fg:x="357922340" fg:w="765492"/><text x="93.0085%" y="2671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (765,492 samples, 0.20%)</title><rect x="92.7585%" y="2645" width="0.1984%" height="15" fill="rgb(247,16,28)" fg:x="357922340" fg:w="765492"/><text x="93.0085%" y="2655.50"></text></g><g><title>serde::de::MapAccess::next_entry (16,925,762 samples, 4.39%)</title><rect x="88.6879%" y="3365" width="4.3864%" height="15" fill="rgb(231,147,38)" fg:x="342215291" fg:w="16925762"/><text x="88.9379%" y="3375.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (16,925,762 samples, 4.39%)</title><rect x="88.6879%" y="3349" width="4.3864%" height="15" fill="rgb(253,81,48)" fg:x="342215291" fg:w="16925762"/><text x="88.9379%" y="3359.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (16,925,762 samples, 4.39%)</title><rect x="88.6879%" y="3333" width="4.3864%" height="15" fill="rgb(249,222,43)" fg:x="342215291" fg:w="16925762"/><text x="88.9379%" y="3343.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (16,925,762 samples, 4.39%)</title><rect x="88.6879%" y="3317" width="4.3864%" height="15" fill="rgb(221,3,27)" fg:x="342215291" fg:w="16925762"/><text x="88.9379%" y="3327.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (16,925,762 samples, 4.39%)</title><rect x="88.6879%" y="3301" width="4.3864%" height="15" fill="rgb(228,180,5)" fg:x="342215291" fg:w="16925762"/><text x="88.9379%" y="3311.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16,925,762 samples, 4.39%)</title><rect x="88.6879%" y="3285" width="4.3864%" height="15" fill="rgb(227,131,42)" fg:x="342215291" fg:w="16925762"/><text x="88.9379%" y="3295.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (16,032,324 samples, 4.15%)</title><rect x="88.9194%" y="3269" width="4.1549%" height="15" fill="rgb(212,3,39)" fg:x="343108729" fg:w="16032324"/><text x="89.1694%" y="3279.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (15,530,820 samples, 4.02%)</title><rect x="89.0494%" y="3253" width="4.0249%" height="15" fill="rgb(226,45,5)" fg:x="343610233" fg:w="15530820"/><text x="89.2994%" y="3263.50">serd..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (15,530,820 samples, 4.02%)</title><rect x="89.0494%" y="3237" width="4.0249%" height="15" fill="rgb(215,167,45)" fg:x="343610233" fg:w="15530820"/><text x="89.2994%" y="3247.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15,530,820 samples, 4.02%)</title><rect x="89.0494%" y="3221" width="4.0249%" height="15" fill="rgb(250,218,53)" fg:x="343610233" fg:w="15530820"/><text x="89.2994%" y="3231.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,530,820 samples, 4.02%)</title><rect x="89.0494%" y="3205" width="4.0249%" height="15" fill="rgb(207,140,0)" fg:x="343610233" fg:w="15530820"/><text x="89.2994%" y="3215.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,530,820 samples, 4.02%)</title><rect x="89.0494%" y="3189" width="4.0249%" height="15" fill="rgb(238,133,51)" fg:x="343610233" fg:w="15530820"/><text x="89.2994%" y="3199.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15,530,820 samples, 4.02%)</title><rect x="89.0494%" y="3173" width="4.0249%" height="15" fill="rgb(218,203,53)" fg:x="343610233" fg:w="15530820"/><text x="89.2994%" y="3183.50">&lt;ser..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (453,221 samples, 0.12%)</title><rect x="92.9569%" y="3157" width="0.1175%" height="15" fill="rgb(226,184,25)" fg:x="358687832" fg:w="453221"/><text x="93.2069%" y="3167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (453,221 samples, 0.12%)</title><rect x="92.9569%" y="3141" width="0.1175%" height="15" fill="rgb(231,121,21)" fg:x="358687832" fg:w="453221"/><text x="93.2069%" y="3151.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (453,221 samples, 0.12%)</title><rect x="92.9569%" y="3125" width="0.1175%" height="15" fill="rgb(251,14,34)" fg:x="358687832" fg:w="453221"/><text x="93.2069%" y="3135.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (453,221 samples, 0.12%)</title><rect x="92.9569%" y="3109" width="0.1175%" height="15" fill="rgb(249,193,11)" fg:x="358687832" fg:w="453221"/><text x="93.2069%" y="3119.50"></text></g><g><title>serde::de::MapAccess::next_entry (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3781" width="4.5986%" height="15" fill="rgb(220,172,37)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3791.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3765" width="4.5986%" height="15" fill="rgb(231,229,43)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3775.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3749" width="4.5986%" height="15" fill="rgb(250,161,5)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3759.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3733" width="4.5986%" height="15" fill="rgb(218,225,18)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3743.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3717" width="4.5986%" height="15" fill="rgb(245,45,42)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3727.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3701" width="4.5986%" height="15" fill="rgb(211,115,1)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3711.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3685" width="4.5986%" height="15" fill="rgb(248,133,52)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3695.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3669" width="4.5986%" height="15" fill="rgb(238,100,21)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3679.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3653" width="4.5986%" height="15" fill="rgb(247,144,11)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3663.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3637" width="4.5986%" height="15" fill="rgb(206,164,16)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3647.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3621" width="4.5986%" height="15" fill="rgb(222,34,3)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3631.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3605" width="4.5986%" height="15" fill="rgb(248,82,4)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3615.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3589" width="4.5986%" height="15" fill="rgb(228,81,46)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3599.50">&lt;serd..</text></g><g><title>serde::de::MapAccess::next_entry (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3573" width="4.5986%" height="15" fill="rgb(227,67,47)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3583.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3557" width="4.5986%" height="15" fill="rgb(215,93,53)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3567.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3541" width="4.5986%" height="15" fill="rgb(248,194,39)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3551.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3525" width="4.5986%" height="15" fill="rgb(215,5,19)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3535.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3509" width="4.5986%" height="15" fill="rgb(226,215,51)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3519.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3493" width="4.5986%" height="15" fill="rgb(225,56,26)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3503.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3477" width="4.5986%" height="15" fill="rgb(222,75,29)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3487.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3461" width="4.5986%" height="15" fill="rgb(236,139,6)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3471.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3445" width="4.5986%" height="15" fill="rgb(223,137,36)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3455.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3429" width="4.5986%" height="15" fill="rgb(226,99,2)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3439.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3413" width="4.5986%" height="15" fill="rgb(206,133,23)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3423.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3397" width="4.5986%" height="15" fill="rgb(243,173,15)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3407.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17,744,208 samples, 4.60%)</title><rect x="88.6879%" y="3381" width="4.5986%" height="15" fill="rgb(228,69,28)" fg:x="342215291" fg:w="17744208"/><text x="88.9379%" y="3391.50">&lt;serd..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (818,446 samples, 0.21%)</title><rect x="93.0743%" y="3365" width="0.2121%" height="15" fill="rgb(212,51,22)" fg:x="359141053" fg:w="818446"/><text x="93.3243%" y="3375.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (818,446 samples, 0.21%)</title><rect x="93.0743%" y="3349" width="0.2121%" height="15" fill="rgb(227,113,0)" fg:x="359141053" fg:w="818446"/><text x="93.3243%" y="3359.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (818,446 samples, 0.21%)</title><rect x="93.0743%" y="3333" width="0.2121%" height="15" fill="rgb(252,84,27)" fg:x="359141053" fg:w="818446"/><text x="93.3243%" y="3343.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (818,446 samples, 0.21%)</title><rect x="93.0743%" y="3317" width="0.2121%" height="15" fill="rgb(223,145,39)" fg:x="359141053" fg:w="818446"/><text x="93.3243%" y="3327.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (818,446 samples, 0.21%)</title><rect x="93.0743%" y="3301" width="0.2121%" height="15" fill="rgb(239,219,30)" fg:x="359141053" fg:w="818446"/><text x="93.3243%" y="3311.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (818,446 samples, 0.21%)</title><rect x="93.0743%" y="3285" width="0.2121%" height="15" fill="rgb(224,196,39)" fg:x="359141053" fg:w="818446"/><text x="93.3243%" y="3295.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (818,446 samples, 0.21%)</title><rect x="93.0743%" y="3269" width="0.2121%" height="15" fill="rgb(205,35,43)" fg:x="359141053" fg:w="818446"/><text x="93.3243%" y="3279.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (818,446 samples, 0.21%)</title><rect x="93.0743%" y="3253" width="0.2121%" height="15" fill="rgb(228,201,21)" fg:x="359141053" fg:w="818446"/><text x="93.3243%" y="3263.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (818,446 samples, 0.21%)</title><rect x="93.0743%" y="3237" width="0.2121%" height="15" fill="rgb(237,118,16)" fg:x="359141053" fg:w="818446"/><text x="93.3243%" y="3247.50"></text></g><g><title>main::benchmark::parse_web_layout_trace (20,849,396 samples, 5.40%)</title><rect x="88.0388%" y="4821" width="5.4033%" height="15" fill="rgb(241,17,19)" fg:x="339710887" fg:w="20849396"/><text x="88.2888%" y="4831.50">main::b..</text></g><g><title>serde_json::de::from_str (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4805" width="5.1628%" height="15" fill="rgb(214,10,25)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4815.50">serde_..</text></g><g><title>serde_json::de::from_trait (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4789" width="5.1628%" height="15" fill="rgb(238,37,29)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4799.50">serde_..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4773" width="5.1628%" height="15" fill="rgb(253,83,25)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4783.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4757" width="5.1628%" height="15" fill="rgb(234,192,12)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4767.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4741" width="5.1628%" height="15" fill="rgb(241,216,45)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4751.50">&lt;serde..</text></g><g><title>serde::de::MapAccess::next_entry (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4725" width="5.1628%" height="15" fill="rgb(242,22,33)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4735.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4709" width="5.1628%" height="15" fill="rgb(231,105,49)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4719.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4693" width="5.1628%" height="15" fill="rgb(218,204,15)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4703.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4677" width="5.1628%" height="15" fill="rgb(235,138,41)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4687.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4661" width="5.1628%" height="15" fill="rgb(246,0,9)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4671.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4645" width="5.1628%" height="15" fill="rgb(210,74,4)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4655.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4629" width="5.1628%" height="15" fill="rgb(250,60,41)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4639.50">&lt;serde..</text></g><g><title>serde::de::MapAccess::next_entry (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4613" width="5.1628%" height="15" fill="rgb(220,115,12)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4623.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4597" width="5.1628%" height="15" fill="rgb(237,100,13)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4607.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4581" width="5.1628%" height="15" fill="rgb(213,55,26)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4591.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4565" width="5.1628%" height="15" fill="rgb(216,17,4)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4575.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4549" width="5.1628%" height="15" fill="rgb(220,153,47)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4559.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4533" width="5.1628%" height="15" fill="rgb(215,131,9)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4543.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4517" width="5.1628%" height="15" fill="rgb(233,46,42)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4527.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4501" width="5.1628%" height="15" fill="rgb(226,86,7)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4511.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4485" width="5.1628%" height="15" fill="rgb(239,226,21)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4495.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4469" width="5.1628%" height="15" fill="rgb(244,137,22)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4479.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4453" width="5.1628%" height="15" fill="rgb(211,139,35)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4463.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4437" width="5.1628%" height="15" fill="rgb(214,62,50)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4447.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4421" width="5.1628%" height="15" fill="rgb(212,113,44)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4431.50">&lt;serde..</text></g><g><title>serde::de::MapAccess::next_entry (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4405" width="5.1628%" height="15" fill="rgb(226,150,43)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4415.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4389" width="5.1628%" height="15" fill="rgb(250,71,37)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4399.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4373" width="5.1628%" height="15" fill="rgb(219,76,19)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4383.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4357" width="5.1628%" height="15" fill="rgb(250,39,11)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4367.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4341" width="5.1628%" height="15" fill="rgb(230,64,31)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4351.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4325" width="5.1628%" height="15" fill="rgb(208,222,23)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4335.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4309" width="5.1628%" height="15" fill="rgb(227,125,18)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4319.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4293" width="5.1628%" height="15" fill="rgb(234,210,9)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4303.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4277" width="5.1628%" height="15" fill="rgb(217,127,24)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4287.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4261" width="5.1628%" height="15" fill="rgb(239,141,48)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4271.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4245" width="5.1628%" height="15" fill="rgb(227,109,8)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4255.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4229" width="5.1628%" height="15" fill="rgb(235,184,23)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4239.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4213" width="5.1628%" height="15" fill="rgb(227,226,48)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4223.50">&lt;serde..</text></g><g><title>serde::de::MapAccess::next_entry (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4197" width="5.1628%" height="15" fill="rgb(206,150,11)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4207.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4181" width="5.1628%" height="15" fill="rgb(254,2,33)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4191.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4165" width="5.1628%" height="15" fill="rgb(243,160,20)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4175.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4149" width="5.1628%" height="15" fill="rgb(218,208,30)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4159.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4133" width="5.1628%" height="15" fill="rgb(224,120,49)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4143.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4117" width="5.1628%" height="15" fill="rgb(246,12,2)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4127.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4101" width="5.1628%" height="15" fill="rgb(236,117,3)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4111.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4085" width="5.1628%" height="15" fill="rgb(216,128,52)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4095.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4069" width="5.1628%" height="15" fill="rgb(246,145,19)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4079.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4053" width="5.1628%" height="15" fill="rgb(222,11,46)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4063.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4037" width="5.1628%" height="15" fill="rgb(245,82,36)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4047.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4021" width="5.1628%" height="15" fill="rgb(250,73,51)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4031.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19,921,482 samples, 5.16%)</title><rect x="88.2793%" y="4005" width="5.1628%" height="15" fill="rgb(221,189,23)" fg:x="340638801" fg:w="19921482"/><text x="88.5293%" y="4015.50">&lt;serde..</text></g><g><title>serde::de::MapAccess::next_entry (18,344,992 samples, 4.75%)</title><rect x="88.6879%" y="3989" width="4.7543%" height="15" fill="rgb(210,33,7)" fg:x="342215291" fg:w="18344992"/><text x="88.9379%" y="3999.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (18,344,992 samples, 4.75%)</title><rect x="88.6879%" y="3973" width="4.7543%" height="15" fill="rgb(210,107,22)" fg:x="342215291" fg:w="18344992"/><text x="88.9379%" y="3983.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (18,344,992 samples, 4.75%)</title><rect x="88.6879%" y="3957" width="4.7543%" height="15" fill="rgb(222,116,37)" fg:x="342215291" fg:w="18344992"/><text x="88.9379%" y="3967.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18,344,992 samples, 4.75%)</title><rect x="88.6879%" y="3941" width="4.7543%" height="15" fill="rgb(254,17,48)" fg:x="342215291" fg:w="18344992"/><text x="88.9379%" y="3951.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18,344,992 samples, 4.75%)</title><rect x="88.6879%" y="3925" width="4.7543%" height="15" fill="rgb(224,36,32)" fg:x="342215291" fg:w="18344992"/><text x="88.9379%" y="3935.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18,344,992 samples, 4.75%)</title><rect x="88.6879%" y="3909" width="4.7543%" height="15" fill="rgb(232,90,46)" fg:x="342215291" fg:w="18344992"/><text x="88.9379%" y="3919.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (18,344,992 samples, 4.75%)</title><rect x="88.6879%" y="3893" width="4.7543%" height="15" fill="rgb(241,66,40)" fg:x="342215291" fg:w="18344992"/><text x="88.9379%" y="3903.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (18,344,992 samples, 4.75%)</title><rect x="88.6879%" y="3877" width="4.7543%" height="15" fill="rgb(249,184,29)" fg:x="342215291" fg:w="18344992"/><text x="88.9379%" y="3887.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (18,344,992 samples, 4.75%)</title><rect x="88.6879%" y="3861" width="4.7543%" height="15" fill="rgb(231,181,1)" fg:x="342215291" fg:w="18344992"/><text x="88.9379%" y="3871.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18,344,992 samples, 4.75%)</title><rect x="88.6879%" y="3845" width="4.7543%" height="15" fill="rgb(224,94,2)" fg:x="342215291" fg:w="18344992"/><text x="88.9379%" y="3855.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18,344,992 samples, 4.75%)</title><rect x="88.6879%" y="3829" width="4.7543%" height="15" fill="rgb(229,170,15)" fg:x="342215291" fg:w="18344992"/><text x="88.9379%" y="3839.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18,344,992 samples, 4.75%)</title><rect x="88.6879%" y="3813" width="4.7543%" height="15" fill="rgb(240,127,35)" fg:x="342215291" fg:w="18344992"/><text x="88.9379%" y="3823.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18,344,992 samples, 4.75%)</title><rect x="88.6879%" y="3797" width="4.7543%" height="15" fill="rgb(248,196,34)" fg:x="342215291" fg:w="18344992"/><text x="88.9379%" y="3807.50">&lt;serde..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (600,784 samples, 0.16%)</title><rect x="93.2864%" y="3781" width="0.1557%" height="15" fill="rgb(236,137,7)" fg:x="359959499" fg:w="600784"/><text x="93.5364%" y="3791.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (600,784 samples, 0.16%)</title><rect x="93.2864%" y="3765" width="0.1557%" height="15" fill="rgb(235,127,16)" fg:x="359959499" fg:w="600784"/><text x="93.5364%" y="3775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (600,784 samples, 0.16%)</title><rect x="93.2864%" y="3749" width="0.1557%" height="15" fill="rgb(250,192,54)" fg:x="359959499" fg:w="600784"/><text x="93.5364%" y="3759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (600,784 samples, 0.16%)</title><rect x="93.2864%" y="3733" width="0.1557%" height="15" fill="rgb(218,98,20)" fg:x="359959499" fg:w="600784"/><text x="93.5364%" y="3743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (600,784 samples, 0.16%)</title><rect x="93.2864%" y="3717" width="0.1557%" height="15" fill="rgb(230,176,47)" fg:x="359959499" fg:w="600784"/><text x="93.5364%" y="3727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (600,784 samples, 0.16%)</title><rect x="93.2864%" y="3701" width="0.1557%" height="15" fill="rgb(244,2,33)" fg:x="359959499" fg:w="600784"/><text x="93.5364%" y="3711.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (600,784 samples, 0.16%)</title><rect x="93.2864%" y="3685" width="0.1557%" height="15" fill="rgb(231,100,17)" fg:x="359959499" fg:w="600784"/><text x="93.5364%" y="3695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (600,784 samples, 0.16%)</title><rect x="93.2864%" y="3669" width="0.1557%" height="15" fill="rgb(245,23,12)" fg:x="359959499" fg:w="600784"/><text x="93.5364%" y="3679.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (600,784 samples, 0.16%)</title><rect x="93.2864%" y="3653" width="0.1557%" height="15" fill="rgb(249,55,22)" fg:x="359959499" fg:w="600784"/><text x="93.5364%" y="3663.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (600,784 samples, 0.16%)</title><rect x="93.2864%" y="3637" width="0.1557%" height="15" fill="rgb(207,134,9)" fg:x="359959499" fg:w="600784"/><text x="93.5364%" y="3647.50"></text></g><g><title>[libc.so.6] (600,784 samples, 0.16%)</title><rect x="93.2864%" y="3621" width="0.1557%" height="15" fill="rgb(218,134,0)" fg:x="359959499" fg:w="600784"/><text x="93.5364%" y="3631.50"></text></g><g><title>main::benchmark::print_web_layout_trace_summary (1,261,364 samples, 0.33%)</title><rect x="93.4421%" y="4821" width="0.3269%" height="15" fill="rgb(213,212,33)" fg:x="360560283" fg:w="1261364"/><text x="93.6921%" y="4831.50"></text></g><g><title>std::io::stdio::_print (1,261,364 samples, 0.33%)</title><rect x="93.4421%" y="4805" width="0.3269%" height="15" fill="rgb(252,106,18)" fg:x="360560283" fg:w="1261364"/><text x="93.6921%" y="4815.50"></text></g><g><title>std::io::stdio::print_to (1,261,364 samples, 0.33%)</title><rect x="93.4421%" y="4789" width="0.3269%" height="15" fill="rgb(208,126,42)" fg:x="360560283" fg:w="1261364"/><text x="93.6921%" y="4799.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,261,364 samples, 0.33%)</title><rect x="93.4421%" y="4773" width="0.3269%" height="15" fill="rgb(246,175,29)" fg:x="360560283" fg:w="1261364"/><text x="93.6921%" y="4783.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,261,364 samples, 0.33%)</title><rect x="93.4421%" y="4757" width="0.3269%" height="15" fill="rgb(215,13,50)" fg:x="360560283" fg:w="1261364"/><text x="93.6921%" y="4767.50"></text></g><g><title>std::io::Write::write_fmt (1,261,364 samples, 0.33%)</title><rect x="93.4421%" y="4741" width="0.3269%" height="15" fill="rgb(216,172,15)" fg:x="360560283" fg:w="1261364"/><text x="93.6921%" y="4751.50"></text></g><g><title>core::fmt::write (1,261,364 samples, 0.33%)</title><rect x="93.4421%" y="4725" width="0.3269%" height="15" fill="rgb(212,103,13)" fg:x="360560283" fg:w="1261364"/><text x="93.6921%" y="4735.50"></text></g><g><title>core::fmt::run (1,261,364 samples, 0.33%)</title><rect x="93.4421%" y="4709" width="0.3269%" height="15" fill="rgb(231,171,36)" fg:x="360560283" fg:w="1261364"/><text x="93.6921%" y="4719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1,261,364 samples, 0.33%)</title><rect x="93.4421%" y="4693" width="0.3269%" height="15" fill="rgb(250,123,20)" fg:x="360560283" fg:w="1261364"/><text x="93.6921%" y="4703.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (1,261,364 samples, 0.33%)</title><rect x="93.4421%" y="4677" width="0.3269%" height="15" fill="rgb(212,53,50)" fg:x="360560283" fg:w="1261364"/><text x="93.6921%" y="4687.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (1,261,364 samples, 0.33%)</title><rect x="93.4421%" y="4661" width="0.3269%" height="15" fill="rgb(243,54,12)" fg:x="360560283" fg:w="1261364"/><text x="93.6921%" y="4671.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,261,364 samples, 0.33%)</title><rect x="93.4421%" y="4645" width="0.3269%" height="15" fill="rgb(234,101,34)" fg:x="360560283" fg:w="1261364"/><text x="93.6921%" y="4655.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (1,261,364 samples, 0.33%)</title><rect x="93.4421%" y="4629" width="0.3269%" height="15" fill="rgb(254,67,22)" fg:x="360560283" fg:w="1261364"/><text x="93.6921%" y="4639.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::format_exact (1,261,364 samples, 0.33%)</title><rect x="93.4421%" y="4613" width="0.3269%" height="15" fill="rgb(250,35,47)" fg:x="360560283" fg:w="1261364"/><text x="93.6921%" y="4623.50"></text></g><g><title>core::num::bignum::Big32x40::mul_pow2 (1,261,364 samples, 0.33%)</title><rect x="93.4421%" y="4597" width="0.3269%" height="15" fill="rgb(226,126,38)" fg:x="360560283" fg:w="1261364"/><text x="93.6921%" y="4607.50"></text></g><g><title>_start (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="5109" width="79.0944%" height="15" fill="rgb(216,138,53)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="5119.50">_start</text></g><g><title>__libc_start_main (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="5093" width="79.0944%" height="15" fill="rgb(246,199,43)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="5103.50">__libc_start_main</text></g><g><title>[libc.so.6] (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="5077" width="79.0944%" height="15" fill="rgb(232,125,11)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="5087.50">[libc.so.6]</text></g><g><title>main (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="5061" width="79.0944%" height="15" fill="rgb(218,219,45)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="5071.50">main</text></g><g><title>std::rt::lang_start_internal (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="5045" width="79.0944%" height="15" fill="rgb(216,102,54)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="5055.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="5029" width="79.0944%" height="15" fill="rgb(250,228,7)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="5039.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="5013" width="79.0944%" height="15" fill="rgb(226,125,25)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="5023.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="4997" width="79.0944%" height="15" fill="rgb(224,165,27)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="5007.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="4981" width="79.0944%" height="15" fill="rgb(233,86,3)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="4991.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="4965" width="79.0944%" height="15" fill="rgb(228,116,20)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="4975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="4949" width="79.0944%" height="15" fill="rgb(209,192,17)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="4959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="4933" width="79.0944%" height="15" fill="rgb(224,88,34)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="4943.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="4917" width="79.0944%" height="15" fill="rgb(233,38,6)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="4927.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="4901" width="79.0944%" height="15" fill="rgb(212,59,30)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="4911.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="4885" width="79.0944%" height="15" fill="rgb(213,80,3)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="4895.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="4869" width="79.0944%" height="15" fill="rgb(251,178,7)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="4879.50">core::ops::function::FnOnce::call_once</text></g><g><title>main::main (305,197,625 samples, 79.09%)</title><rect x="14.9977%" y="4853" width="79.0944%" height="15" fill="rgb(213,154,26)" fg:x="57870978" fg:w="305197625"/><text x="15.2477%" y="4863.50">main::main</text></g><g><title>main::benchmark::run_web_browser_layout_trace_benchmark (300,201,565 samples, 77.80%)</title><rect x="16.2925%" y="4837" width="77.7997%" height="15" fill="rgb(238,165,49)" fg:x="62867038" fg:w="300201565"/><text x="16.5425%" y="4847.50">main::benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>std::io::stdio::_print (1,246,956 samples, 0.32%)</title><rect x="93.7690%" y="4821" width="0.3232%" height="15" fill="rgb(248,91,46)" fg:x="361821647" fg:w="1246956"/><text x="94.0190%" y="4831.50"></text></g><g><title>std::io::stdio::print_to (1,246,956 samples, 0.32%)</title><rect x="93.7690%" y="4805" width="0.3232%" height="15" fill="rgb(244,21,52)" fg:x="361821647" fg:w="1246956"/><text x="94.0190%" y="4815.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,246,956 samples, 0.32%)</title><rect x="93.7690%" y="4789" width="0.3232%" height="15" fill="rgb(247,122,20)" fg:x="361821647" fg:w="1246956"/><text x="94.0190%" y="4799.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,246,956 samples, 0.32%)</title><rect x="93.7690%" y="4773" width="0.3232%" height="15" fill="rgb(218,27,9)" fg:x="361821647" fg:w="1246956"/><text x="94.0190%" y="4783.50"></text></g><g><title>std::io::Write::write_fmt (1,246,956 samples, 0.32%)</title><rect x="93.7690%" y="4757" width="0.3232%" height="15" fill="rgb(246,7,6)" fg:x="361821647" fg:w="1246956"/><text x="94.0190%" y="4767.50"></text></g><g><title>core::fmt::write (1,246,956 samples, 0.32%)</title><rect x="93.7690%" y="4741" width="0.3232%" height="15" fill="rgb(227,135,54)" fg:x="361821647" fg:w="1246956"/><text x="94.0190%" y="4751.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1,246,956 samples, 0.32%)</title><rect x="93.7690%" y="4725" width="0.3232%" height="15" fill="rgb(247,14,11)" fg:x="361821647" fg:w="1246956"/><text x="94.0190%" y="4735.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1,246,956 samples, 0.32%)</title><rect x="93.7690%" y="4709" width="0.3232%" height="15" fill="rgb(206,149,34)" fg:x="361821647" fg:w="1246956"/><text x="94.0190%" y="4719.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1,246,956 samples, 0.32%)</title><rect x="93.7690%" y="4693" width="0.3232%" height="15" fill="rgb(227,228,4)" fg:x="361821647" fg:w="1246956"/><text x="94.0190%" y="4703.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1,246,956 samples, 0.32%)</title><rect x="93.7690%" y="4677" width="0.3232%" height="15" fill="rgb(238,218,28)" fg:x="361821647" fg:w="1246956"/><text x="94.0190%" y="4687.50"></text></g><g><title>core::slice::memchr::memrchr (1,246,956 samples, 0.32%)</title><rect x="93.7690%" y="4661" width="0.3232%" height="15" fill="rgb(252,86,40)" fg:x="361821647" fg:w="1246956"/><text x="94.0190%" y="4671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,659,868 samples, 0.43%)</title><rect x="94.0922%" y="5109" width="0.4302%" height="15" fill="rgb(251,225,11)" fg:x="363068603" fg:w="1659868"/><text x="94.3422%" y="5119.50"></text></g><g><title>alloc::raw_vec::finish_grow (501,504 samples, 0.13%)</title><rect x="94.5223%" y="5109" width="0.1300%" height="15" fill="rgb(206,46,49)" fg:x="364728471" fg:w="501504"/><text x="94.7723%" y="5119.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1,238,517 samples, 0.32%)</title><rect x="94.6523%" y="5109" width="0.3210%" height="15" fill="rgb(245,128,24)" fg:x="365229975" fg:w="1238517"/><text x="94.9023%" y="5119.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,585,381 samples, 0.93%)</title><rect x="94.9733%" y="5109" width="0.9292%" height="15" fill="rgb(219,177,34)" fg:x="366468492" fg:w="3585381"/><text x="95.2233%" y="5119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,363,605 samples, 0.61%)</title><rect x="95.2899%" y="5093" width="0.6125%" height="15" fill="rgb(218,60,48)" fg:x="367690268" fg:w="2363605"/><text x="95.5399%" y="5103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,363,605 samples, 0.61%)</title><rect x="95.2899%" y="5077" width="0.6125%" height="15" fill="rgb(221,11,5)" fg:x="367690268" fg:w="2363605"/><text x="95.5399%" y="5087.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2,363,605 samples, 0.61%)</title><rect x="95.2899%" y="5061" width="0.6125%" height="15" fill="rgb(220,148,13)" fg:x="367690268" fg:w="2363605"/><text x="95.5399%" y="5071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2,363,605 samples, 0.61%)</title><rect x="95.2899%" y="5045" width="0.6125%" height="15" fill="rgb(210,16,3)" fg:x="367690268" fg:w="2363605"/><text x="95.5399%" y="5055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2,363,605 samples, 0.61%)</title><rect x="95.2899%" y="5029" width="0.6125%" height="15" fill="rgb(236,80,2)" fg:x="367690268" fg:w="2363605"/><text x="95.5399%" y="5039.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,706 samples, 0.32%)</title><rect x="95.9025%" y="5109" width="0.3244%" height="15" fill="rgb(239,129,19)" fg:x="370053873" fg:w="1251706"/><text x="96.1525%" y="5119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,706 samples, 0.32%)</title><rect x="95.9025%" y="5093" width="0.3244%" height="15" fill="rgb(220,106,35)" fg:x="370053873" fg:w="1251706"/><text x="96.1525%" y="5103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,706 samples, 0.32%)</title><rect x="95.9025%" y="5077" width="0.3244%" height="15" fill="rgb(252,139,45)" fg:x="370053873" fg:w="1251706"/><text x="96.1525%" y="5087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,706 samples, 0.32%)</title><rect x="95.9025%" y="5061" width="0.3244%" height="15" fill="rgb(229,8,36)" fg:x="370053873" fg:w="1251706"/><text x="96.1525%" y="5071.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (4,717,778 samples, 1.22%)</title><rect x="96.2268%" y="5109" width="1.2227%" height="15" fill="rgb(230,126,33)" fg:x="371305579" fg:w="4717778"/><text x="96.4768%" y="5119.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,479,556 samples, 0.64%)</title><rect x="97.4495%" y="5109" width="0.6426%" height="15" fill="rgb(239,140,21)" fg:x="376023357" fg:w="2479556"/><text x="97.6995%" y="5119.50"></text></g><g><title>all (385,864,863 samples, 100%)</title><rect x="0.0000%" y="5141" width="100.0000%" height="15" fill="rgb(254,104,9)" fg:x="0" fg:w="385864863"/><text x="0.2500%" y="5151.50"></text></g><g><title>main (385,864,863 samples, 100.00%)</title><rect x="0.0000%" y="5125" width="100.0000%" height="15" fill="rgb(239,52,14)" fg:x="0" fg:w="385864863"/><text x="0.2500%" y="5135.50">main</text></g><g><title>main::benchmark::node_has_class_id (7,361,950 samples, 1.91%)</title><rect x="98.0921%" y="5109" width="1.9079%" height="15" fill="rgb(208,227,44)" fg:x="378502913" fg:w="7361950"/><text x="98.3421%" y="5119.50">m..</text></g></svg></svg>