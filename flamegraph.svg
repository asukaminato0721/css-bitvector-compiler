<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="4374" onload="init(evt)" viewBox="0 0 1200 4374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="4374" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="4357.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="4357.00"> </text><svg id="frames" x="10" width="1180" total_samples="135114145"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,502,934 samples, 2.59%)</title><rect x="0.0000%" y="4293" width="2.5926%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3502934"/><text x="0.2500%" y="4303.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,502,934 samples, 2.59%)</title><rect x="0.0000%" y="4277" width="2.5926%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3502934"/><text x="0.2500%" y="4287.50">al..</text></g><g><title>alloc::slice::hack::to_vec (3,502,934 samples, 2.59%)</title><rect x="0.0000%" y="4261" width="2.5926%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="3502934"/><text x="0.2500%" y="4271.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,502,934 samples, 2.59%)</title><rect x="0.0000%" y="4245" width="2.5926%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="3502934"/><text x="0.2500%" y="4255.50">&lt;T..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,502,934 samples, 2.59%)</title><rect x="0.0000%" y="4229" width="2.5926%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="3502934"/><text x="0.2500%" y="4239.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,502,934 samples, 2.59%)</title><rect x="0.0000%" y="4213" width="2.5926%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="3502934"/><text x="0.2500%" y="4223.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,502,934 samples, 2.59%)</title><rect x="0.0000%" y="4197" width="2.5926%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="3502934"/><text x="0.2500%" y="4207.50">&lt;a..</text></g><g><title>[libc.so.6] (3,384,166 samples, 2.50%)</title><rect x="2.5926%" y="4293" width="2.5047%" height="15" fill="rgb(228,23,34)" fg:x="3502934" fg:w="3384166"/><text x="2.8426%" y="4303.50">[l..</text></g><g><title>[unknown] (4,569,244 samples, 3.38%)</title><rect x="5.0972%" y="4293" width="3.3818%" height="15" fill="rgb(218,30,26)" fg:x="6887100" fg:w="4569244"/><text x="5.3472%" y="4303.50">[un..</text></g><g><title>[libc.so.6] (3,566,236 samples, 2.64%)</title><rect x="5.8396%" y="4277" width="2.6394%" height="15" fill="rgb(220,122,19)" fg:x="7890108" fg:w="3566236"/><text x="6.0896%" y="4287.50">[l..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;main::benchmark::WebLayoutFrameResult&gt;&gt; (7,342,070 samples, 5.43%)</title><rect x="8.4790%" y="4021" width="5.4340%" height="15" fill="rgb(250,228,42)" fg:x="11456344" fg:w="7342070"/><text x="8.7290%" y="4031.50">core::p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,342,070 samples, 5.43%)</title><rect x="8.4790%" y="4005" width="5.4340%" height="15" fill="rgb(240,193,28)" fg:x="11456344" fg:w="7342070"/><text x="8.7290%" y="4015.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::WebLayoutFrameResult]&gt; (7,342,070 samples, 5.43%)</title><rect x="8.4790%" y="3989" width="5.4340%" height="15" fill="rgb(216,20,37)" fg:x="11456344" fg:w="7342070"/><text x="8.7290%" y="3999.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::WebLayoutFrameResult&gt; (7,342,070 samples, 5.43%)</title><rect x="8.4790%" y="3973" width="5.4340%" height="15" fill="rgb(206,188,39)" fg:x="11456344" fg:w="7342070"/><text x="8.7290%" y="3983.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7,342,070 samples, 5.43%)</title><rect x="8.4790%" y="3957" width="5.4340%" height="15" fill="rgb(217,207,13)" fg:x="11456344" fg:w="7342070"/><text x="8.7290%" y="3967.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7,342,070 samples, 5.43%)</title><rect x="8.4790%" y="3941" width="5.4340%" height="15" fill="rgb(231,73,38)" fg:x="11456344" fg:w="7342070"/><text x="8.7290%" y="3951.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7,342,070 samples, 5.43%)</title><rect x="8.4790%" y="3925" width="5.4340%" height="15" fill="rgb(225,20,46)" fg:x="11456344" fg:w="7342070"/><text x="8.7290%" y="3935.50">core::p..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,342,070 samples, 5.43%)</title><rect x="8.4790%" y="3909" width="5.4340%" height="15" fill="rgb(210,31,41)" fg:x="11456344" fg:w="7342070"/><text x="8.7290%" y="3919.50">&lt;alloc:..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7,342,070 samples, 5.43%)</title><rect x="8.4790%" y="3893" width="5.4340%" height="15" fill="rgb(221,200,47)" fg:x="11456344" fg:w="7342070"/><text x="8.7290%" y="3903.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,342,070 samples, 5.43%)</title><rect x="8.4790%" y="3877" width="5.4340%" height="15" fill="rgb(226,26,5)" fg:x="11456344" fg:w="7342070"/><text x="8.7290%" y="3887.50">&lt;alloc:..</text></g><g><title>alloc::alloc::dealloc (7,342,070 samples, 5.43%)</title><rect x="8.4790%" y="3861" width="5.4340%" height="15" fill="rgb(249,33,26)" fg:x="11456344" fg:w="7342070"/><text x="8.7290%" y="3871.50">alloc::..</text></g><g><title>cfree (7,342,070 samples, 5.43%)</title><rect x="8.4790%" y="3845" width="5.4340%" height="15" fill="rgb(235,183,28)" fg:x="11456344" fg:w="7342070"/><text x="8.7290%" y="3855.50">cfree</text></g><g><title>[libc.so.6] (7,342,070 samples, 5.43%)</title><rect x="8.4790%" y="3829" width="5.4340%" height="15" fill="rgb(221,5,38)" fg:x="11456344" fg:w="7342070"/><text x="8.7290%" y="3839.50">[libc.s..</text></g><g><title>[libc.so.6] (7,342,070 samples, 5.43%)</title><rect x="8.4790%" y="3813" width="5.4340%" height="15" fill="rgb(247,18,42)" fg:x="11456344" fg:w="7342070"/><text x="8.7290%" y="3823.50">[libc.s..</text></g><g><title>[libc.so.6] (3,712,921 samples, 2.75%)</title><rect x="11.1650%" y="3797" width="2.7480%" height="15" fill="rgb(241,131,45)" fg:x="15085493" fg:w="3712921"/><text x="11.4150%" y="3807.50">[l..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2565" width="2.1129%" height="15" fill="rgb(249,31,29)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2575.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2549" width="2.1129%" height="15" fill="rgb(225,111,53)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2559.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2533" width="2.1129%" height="15" fill="rgb(238,160,17)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2543.50">a..</text></g><g><title>alloc::slice::hack::to_vec (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2517" width="2.1129%" height="15" fill="rgb(214,148,48)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2527.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2501" width="2.1129%" height="15" fill="rgb(232,36,49)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2511.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2485" width="2.1129%" height="15" fill="rgb(209,103,24)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2495.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2469" width="2.1129%" height="15" fill="rgb(229,88,8)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2479.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2453" width="2.1129%" height="15" fill="rgb(213,181,19)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2463.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2437" width="2.1129%" height="15" fill="rgb(254,191,54)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2447.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2421" width="2.1129%" height="15" fill="rgb(241,83,37)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2431.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2405" width="2.1129%" height="15" fill="rgb(233,36,39)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2415.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2389" width="2.1129%" height="15" fill="rgb(226,3,54)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2399.50">a..</text></g><g><title>alloc::slice::hack::to_vec (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2373" width="2.1129%" height="15" fill="rgb(245,192,40)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2383.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2357" width="2.1129%" height="15" fill="rgb(238,167,29)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2367.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2341" width="2.1129%" height="15" fill="rgb(232,182,51)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2351.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2325" width="2.1129%" height="15" fill="rgb(231,60,39)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2335.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2309" width="2.1129%" height="15" fill="rgb(208,69,12)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2319.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2293" width="2.1129%" height="15" fill="rgb(235,93,37)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2303.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2277" width="2.1129%" height="15" fill="rgb(213,116,39)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2287.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2261" width="2.1129%" height="15" fill="rgb(222,207,29)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2271.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2245" width="2.1129%" height="15" fill="rgb(206,96,30)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2255.50">a..</text></g><g><title>alloc::slice::hack::to_vec (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2229" width="2.1129%" height="15" fill="rgb(218,138,4)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2239.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2213" width="2.1129%" height="15" fill="rgb(250,191,14)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2223.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2197" width="2.1129%" height="15" fill="rgb(239,60,40)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2207.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2181" width="2.1129%" height="15" fill="rgb(206,27,48)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2191.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2165" width="2.1129%" height="15" fill="rgb(225,35,8)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2175.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2149" width="2.1129%" height="15" fill="rgb(250,213,24)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2159.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2133" width="2.1129%" height="15" fill="rgb(247,123,22)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2143.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2117" width="2.1129%" height="15" fill="rgb(231,138,38)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2127.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2101" width="2.1129%" height="15" fill="rgb(231,145,46)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2111.50">a..</text></g><g><title>alloc::slice::hack::to_vec (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2085" width="2.1129%" height="15" fill="rgb(251,118,11)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2095.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2069" width="2.1129%" height="15" fill="rgb(217,147,25)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2079.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2053" width="2.1129%" height="15" fill="rgb(247,81,37)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2063.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2037" width="2.1129%" height="15" fill="rgb(209,12,38)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2047.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2021" width="2.1129%" height="15" fill="rgb(227,1,9)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2031.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="2005" width="2.1129%" height="15" fill="rgb(248,47,43)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="2015.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="1989" width="2.1129%" height="15" fill="rgb(221,10,30)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="1999.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="1973" width="2.1129%" height="15" fill="rgb(210,229,1)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="1983.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="1957" width="2.1129%" height="15" fill="rgb(222,148,37)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="1967.50">a..</text></g><g><title>alloc::slice::hack::to_vec (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="1941" width="2.1129%" height="15" fill="rgb(234,67,33)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="1951.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="1925" width="2.1129%" height="15" fill="rgb(247,98,35)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="1935.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="1909" width="2.1129%" height="15" fill="rgb(247,138,52)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="1919.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="1893" width="2.1129%" height="15" fill="rgb(213,79,30)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="1903.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="1877" width="2.1129%" height="15" fill="rgb(246,177,23)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="1887.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="1861" width="2.1129%" height="15" fill="rgb(230,62,27)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="1871.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (2,854,820 samples, 2.11%)</title><rect x="16.1814%" y="1845" width="2.1129%" height="15" fill="rgb(216,154,8)" fg:x="21863353" fg:w="2854820"/><text x="16.4314%" y="1855.50">a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,326,153 samples, 4.68%)</title><rect x="16.1814%" y="2629" width="4.6821%" height="15" fill="rgb(244,35,45)" fg:x="21863353" fg:w="6326153"/><text x="16.4314%" y="2639.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (6,326,153 samples, 4.68%)</title><rect x="16.1814%" y="2613" width="4.6821%" height="15" fill="rgb(251,115,12)" fg:x="21863353" fg:w="6326153"/><text x="16.4314%" y="2623.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (6,326,153 samples, 4.68%)</title><rect x="16.1814%" y="2597" width="4.6821%" height="15" fill="rgb(240,54,50)" fg:x="21863353" fg:w="6326153"/><text x="16.4314%" y="2607.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6,326,153 samples, 4.68%)</title><rect x="16.1814%" y="2581" width="4.6821%" height="15" fill="rgb(233,84,52)" fg:x="21863353" fg:w="6326153"/><text x="16.4314%" y="2591.50">&lt;allo..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (3,471,333 samples, 2.57%)</title><rect x="18.2943%" y="2565" width="2.5692%" height="15" fill="rgb(207,117,47)" fg:x="24718173" fg:w="3471333"/><text x="18.5443%" y="2575.50">al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,861,770 samples, 7.30%)</title><rect x="16.1814%" y="2773" width="7.2988%" height="15" fill="rgb(249,43,39)" fg:x="21863353" fg:w="9861770"/><text x="16.4314%" y="2783.50">&lt;serde_jso..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (9,861,770 samples, 7.30%)</title><rect x="16.1814%" y="2757" width="7.2988%" height="15" fill="rgb(209,38,44)" fg:x="21863353" fg:w="9861770"/><text x="16.4314%" y="2767.50">&lt;serde_jso..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (9,861,770 samples, 7.30%)</title><rect x="16.1814%" y="2741" width="7.2988%" height="15" fill="rgb(236,212,23)" fg:x="21863353" fg:w="9861770"/><text x="16.4314%" y="2751.50">&lt;alloc::co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9,861,770 samples, 7.30%)</title><rect x="16.1814%" y="2725" width="7.2988%" height="15" fill="rgb(242,79,21)" fg:x="21863353" fg:w="9861770"/><text x="16.4314%" y="2735.50">&lt;alloc::co..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,861,770 samples, 7.30%)</title><rect x="16.1814%" y="2709" width="7.2988%" height="15" fill="rgb(211,96,35)" fg:x="21863353" fg:w="9861770"/><text x="16.4314%" y="2719.50">&lt;serde_jso..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,861,770 samples, 7.30%)</title><rect x="16.1814%" y="2693" width="7.2988%" height="15" fill="rgb(253,215,40)" fg:x="21863353" fg:w="9861770"/><text x="16.4314%" y="2703.50">&lt;alloc::ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,861,770 samples, 7.30%)</title><rect x="16.1814%" y="2677" width="7.2988%" height="15" fill="rgb(211,81,21)" fg:x="21863353" fg:w="9861770"/><text x="16.4314%" y="2687.50">alloc::sli..</text></g><g><title>alloc::slice::hack::to_vec (9,861,770 samples, 7.30%)</title><rect x="16.1814%" y="2661" width="7.2988%" height="15" fill="rgb(208,190,38)" fg:x="21863353" fg:w="9861770"/><text x="16.4314%" y="2671.50">alloc::sli..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,861,770 samples, 7.30%)</title><rect x="16.1814%" y="2645" width="7.2988%" height="15" fill="rgb(235,213,38)" fg:x="21863353" fg:w="9861770"/><text x="16.4314%" y="2655.50">&lt;T as allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,535,617 samples, 2.62%)</title><rect x="20.8635%" y="2629" width="2.6168%" height="15" fill="rgb(237,122,38)" fg:x="28189506" fg:w="3535617"/><text x="21.1135%" y="2639.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,535,617 samples, 2.62%)</title><rect x="20.8635%" y="2613" width="2.6168%" height="15" fill="rgb(244,218,35)" fg:x="28189506" fg:w="3535617"/><text x="21.1135%" y="2623.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,535,617 samples, 2.62%)</title><rect x="20.8635%" y="2597" width="2.6168%" height="15" fill="rgb(240,68,47)" fg:x="28189506" fg:w="3535617"/><text x="21.1135%" y="2607.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,535,617 samples, 2.62%)</title><rect x="20.8635%" y="2581" width="2.6168%" height="15" fill="rgb(210,16,53)" fg:x="28189506" fg:w="3535617"/><text x="21.1135%" y="2591.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,535,617 samples, 2.62%)</title><rect x="20.8635%" y="2565" width="2.6168%" height="15" fill="rgb(235,124,12)" fg:x="28189506" fg:w="3535617"/><text x="21.1135%" y="2575.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (3,535,617 samples, 2.62%)</title><rect x="20.8635%" y="2549" width="2.6168%" height="15" fill="rgb(224,169,11)" fg:x="28189506" fg:w="3535617"/><text x="21.1135%" y="2559.50">al..</text></g><g><title>alloc::alloc::alloc (3,535,617 samples, 2.62%)</title><rect x="20.8635%" y="2533" width="2.6168%" height="15" fill="rgb(250,166,2)" fg:x="28189506" fg:w="3535617"/><text x="21.1135%" y="2543.50">al..</text></g><g><title>malloc (3,535,617 samples, 2.62%)</title><rect x="20.8635%" y="2517" width="2.6168%" height="15" fill="rgb(242,216,29)" fg:x="28189506" fg:w="3535617"/><text x="21.1135%" y="2527.50">ma..</text></g><g><title>&lt;main::benchmark::LayoutFrame as core::clone::Clone&gt;::clone (16,459,203 samples, 12.18%)</title><rect x="13.9130%" y="4005" width="12.1817%" height="15" fill="rgb(230,116,27)" fg:x="18798414" fg:w="16459203"/><text x="14.1630%" y="4015.50">&lt;main::benchmark::..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (16,459,203 samples, 12.18%)</title><rect x="13.9130%" y="3989" width="12.1817%" height="15" fill="rgb(228,99,48)" fg:x="18798414" fg:w="16459203"/><text x="14.1630%" y="3999.50">&lt;serde_json::value..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (16,459,203 samples, 12.18%)</title><rect x="13.9130%" y="3973" width="12.1817%" height="15" fill="rgb(253,11,6)" fg:x="18798414" fg:w="16459203"/><text x="14.1630%" y="3983.50">&lt;serde_json::map::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (16,459,203 samples, 12.18%)</title><rect x="13.9130%" y="3957" width="12.1817%" height="15" fill="rgb(247,143,39)" fg:x="18798414" fg:w="16459203"/><text x="14.1630%" y="3967.50">&lt;alloc::collection..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (16,459,203 samples, 12.18%)</title><rect x="13.9130%" y="3941" width="12.1817%" height="15" fill="rgb(236,97,10)" fg:x="18798414" fg:w="16459203"/><text x="14.1630%" y="3951.50">&lt;alloc::collection..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (16,459,203 samples, 12.18%)</title><rect x="13.9130%" y="3925" width="12.1817%" height="15" fill="rgb(233,208,19)" fg:x="18798414" fg:w="16459203"/><text x="14.1630%" y="3935.50">&lt;serde_json::value..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (16,459,203 samples, 12.18%)</title><rect x="13.9130%" y="3909" width="12.1817%" height="15" fill="rgb(216,164,2)" fg:x="18798414" fg:w="16459203"/><text x="14.1630%" y="3919.50">&lt;serde_json::map::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (16,459,203 samples, 12.18%)</title><rect x="13.9130%" y="3893" width="12.1817%" height="15" fill="rgb(220,129,5)" fg:x="18798414" fg:w="16459203"/><text x="14.1630%" y="3903.50">&lt;alloc::collection..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (16,459,203 samples, 12.18%)</title><rect x="13.9130%" y="3877" width="12.1817%" height="15" fill="rgb(242,17,10)" fg:x="18798414" fg:w="16459203"/><text x="14.1630%" y="3887.50">&lt;alloc::collection..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (16,459,203 samples, 12.18%)</title><rect x="13.9130%" y="3861" width="12.1817%" height="15" fill="rgb(242,107,0)" fg:x="18798414" fg:w="16459203"/><text x="14.1630%" y="3871.50">&lt;serde_json::value..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,459,203 samples, 12.18%)</title><rect x="13.9130%" y="3845" width="12.1817%" height="15" fill="rgb(251,28,31)" fg:x="18798414" fg:w="16459203"/><text x="14.1630%" y="3855.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,459,203 samples, 12.18%)</title><rect x="13.9130%" y="3829" width="12.1817%" height="15" fill="rgb(233,223,10)" fg:x="18798414" fg:w="16459203"/><text x="14.1630%" y="3839.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (16,459,203 samples, 12.18%)</title><rect x="13.9130%" y="3813" width="12.1817%" height="15" fill="rgb(215,21,27)" fg:x="18798414" fg:w="16459203"/><text x="14.1630%" y="3823.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16,459,203 samples, 12.18%)</title><rect x="13.9130%" y="3797" width="12.1817%" height="15" fill="rgb(232,23,21)" fg:x="18798414" fg:w="16459203"/><text x="14.1630%" y="3807.50">&lt;T as alloc::slice..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (16,459,203 samples, 12.18%)</title><rect x="13.9130%" y="3781" width="12.1817%" height="15" fill="rgb(244,5,23)" fg:x="18798414" fg:w="16459203"/><text x="14.1630%" y="3791.50">&lt;serde_json::value..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3765" width="9.9133%" height="15" fill="rgb(226,81,46)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3775.50">&lt;serde_json::m..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3749" width="9.9133%" height="15" fill="rgb(247,70,30)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3759.50">&lt;alloc::collec..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3733" width="9.9133%" height="15" fill="rgb(212,68,19)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3743.50">&lt;alloc::collec..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3717" width="9.9133%" height="15" fill="rgb(240,187,13)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3727.50">&lt;serde_json::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3701" width="9.9133%" height="15" fill="rgb(223,113,26)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3711.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3685" width="9.9133%" height="15" fill="rgb(206,192,2)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3695.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3669" width="9.9133%" height="15" fill="rgb(241,108,4)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3679.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3653" width="9.9133%" height="15" fill="rgb(247,173,49)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3663.50">&lt;T as alloc::s..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3637" width="9.9133%" height="15" fill="rgb(224,114,35)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3647.50">&lt;serde_json::v..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3621" width="9.9133%" height="15" fill="rgb(245,159,27)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3631.50">&lt;serde_json::m..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3605" width="9.9133%" height="15" fill="rgb(245,172,44)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3615.50">&lt;alloc::collec..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3589" width="9.9133%" height="15" fill="rgb(236,23,11)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3599.50">&lt;alloc::collec..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3573" width="9.9133%" height="15" fill="rgb(205,117,38)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3583.50">&lt;serde_json::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3557" width="9.9133%" height="15" fill="rgb(237,72,25)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3567.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3541" width="9.9133%" height="15" fill="rgb(244,70,9)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3551.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3525" width="9.9133%" height="15" fill="rgb(217,125,39)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3535.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3509" width="9.9133%" height="15" fill="rgb(235,36,10)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3519.50">&lt;T as alloc::s..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3493" width="9.9133%" height="15" fill="rgb(251,123,47)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3503.50">&lt;serde_json::v..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3477" width="9.9133%" height="15" fill="rgb(221,13,13)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3487.50">&lt;serde_json::m..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3461" width="9.9133%" height="15" fill="rgb(238,131,9)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3471.50">&lt;alloc::collec..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3445" width="9.9133%" height="15" fill="rgb(211,50,8)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3455.50">&lt;alloc::collec..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3429" width="9.9133%" height="15" fill="rgb(245,182,24)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3439.50">&lt;serde_json::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3413" width="9.9133%" height="15" fill="rgb(242,14,37)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3423.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3397" width="9.9133%" height="15" fill="rgb(246,228,12)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3407.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3381" width="9.9133%" height="15" fill="rgb(213,55,15)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3391.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3365" width="9.9133%" height="15" fill="rgb(209,9,3)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3375.50">&lt;T as alloc::s..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3349" width="9.9133%" height="15" fill="rgb(230,59,30)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3359.50">&lt;serde_json::v..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3333" width="9.9133%" height="15" fill="rgb(209,121,21)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3343.50">&lt;serde_json::m..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3317" width="9.9133%" height="15" fill="rgb(220,109,13)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3327.50">&lt;alloc::collec..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3301" width="9.9133%" height="15" fill="rgb(232,18,1)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3311.50">&lt;alloc::collec..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3285" width="9.9133%" height="15" fill="rgb(215,41,42)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3295.50">&lt;serde_json::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3269" width="9.9133%" height="15" fill="rgb(224,123,36)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3279.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3253" width="9.9133%" height="15" fill="rgb(240,125,3)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3263.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3237" width="9.9133%" height="15" fill="rgb(205,98,50)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3247.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3221" width="9.9133%" height="15" fill="rgb(205,185,37)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3231.50">&lt;T as alloc::s..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3205" width="9.9133%" height="15" fill="rgb(238,207,15)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3215.50">&lt;serde_json::v..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3189" width="9.9133%" height="15" fill="rgb(213,199,42)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3199.50">&lt;serde_json::m..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3173" width="9.9133%" height="15" fill="rgb(235,201,11)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3183.50">&lt;alloc::collec..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3157" width="9.9133%" height="15" fill="rgb(207,46,11)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3167.50">&lt;alloc::collec..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3141" width="9.9133%" height="15" fill="rgb(241,35,35)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3151.50">&lt;serde_json::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3125" width="9.9133%" height="15" fill="rgb(243,32,47)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3135.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3109" width="9.9133%" height="15" fill="rgb(247,202,23)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3119.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3093" width="9.9133%" height="15" fill="rgb(219,102,11)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3103.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3077" width="9.9133%" height="15" fill="rgb(243,110,44)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3087.50">&lt;T as alloc::s..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3061" width="9.9133%" height="15" fill="rgb(222,74,54)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3071.50">&lt;serde_json::v..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3045" width="9.9133%" height="15" fill="rgb(216,99,12)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3055.50">&lt;serde_json::m..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3029" width="9.9133%" height="15" fill="rgb(226,22,26)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3039.50">&lt;alloc::collec..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="3013" width="9.9133%" height="15" fill="rgb(217,163,10)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3023.50">&lt;alloc::collec..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="2997" width="9.9133%" height="15" fill="rgb(213,25,53)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="3007.50">&lt;serde_json::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="2981" width="9.9133%" height="15" fill="rgb(252,105,26)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="2991.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="2965" width="9.9133%" height="15" fill="rgb(220,39,43)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="2975.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="2949" width="9.9133%" height="15" fill="rgb(229,68,48)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="2959.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="2933" width="9.9133%" height="15" fill="rgb(252,8,32)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="2943.50">&lt;T as alloc::s..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="2917" width="9.9133%" height="15" fill="rgb(223,20,43)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="2927.50">&lt;serde_json::v..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="2901" width="9.9133%" height="15" fill="rgb(229,81,49)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="2911.50">&lt;serde_json::m..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="2885" width="9.9133%" height="15" fill="rgb(236,28,36)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="2895.50">&lt;alloc::collec..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="2869" width="9.9133%" height="15" fill="rgb(249,185,26)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="2879.50">&lt;alloc::collec..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="2853" width="9.9133%" height="15" fill="rgb(249,174,33)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="2863.50">&lt;serde_json::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="2837" width="9.9133%" height="15" fill="rgb(233,201,37)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="2847.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="2821" width="9.9133%" height="15" fill="rgb(221,78,26)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="2831.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="2805" width="9.9133%" height="15" fill="rgb(250,127,30)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="2815.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,394,264 samples, 9.91%)</title><rect x="16.1814%" y="2789" width="9.9133%" height="15" fill="rgb(230,49,44)" fg:x="21863353" fg:w="13394264"/><text x="16.4314%" y="2799.50">&lt;T as alloc::s..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,532,494 samples, 2.61%)</title><rect x="23.4802%" y="2773" width="2.6145%" height="15" fill="rgb(229,67,23)" fg:x="31725123" fg:w="3532494"/><text x="23.7302%" y="2783.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,532,494 samples, 2.61%)</title><rect x="23.4802%" y="2757" width="2.6145%" height="15" fill="rgb(249,83,47)" fg:x="31725123" fg:w="3532494"/><text x="23.7302%" y="2767.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,532,494 samples, 2.61%)</title><rect x="23.4802%" y="2741" width="2.6145%" height="15" fill="rgb(215,43,3)" fg:x="31725123" fg:w="3532494"/><text x="23.7302%" y="2751.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,532,494 samples, 2.61%)</title><rect x="23.4802%" y="2725" width="2.6145%" height="15" fill="rgb(238,154,13)" fg:x="31725123" fg:w="3532494"/><text x="23.7302%" y="2735.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,532,494 samples, 2.61%)</title><rect x="23.4802%" y="2709" width="2.6145%" height="15" fill="rgb(219,56,2)" fg:x="31725123" fg:w="3532494"/><text x="23.7302%" y="2719.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (3,532,494 samples, 2.61%)</title><rect x="23.4802%" y="2693" width="2.6145%" height="15" fill="rgb(233,0,4)" fg:x="31725123" fg:w="3532494"/><text x="23.7302%" y="2703.50">al..</text></g><g><title>alloc::alloc::alloc (3,532,494 samples, 2.61%)</title><rect x="23.4802%" y="2677" width="2.6145%" height="15" fill="rgb(235,30,7)" fg:x="31725123" fg:w="3532494"/><text x="23.7302%" y="2687.50">al..</text></g><g><title>malloc (3,532,494 samples, 2.61%)</title><rect x="23.4802%" y="2661" width="2.6145%" height="15" fill="rgb(250,79,13)" fg:x="31725123" fg:w="3532494"/><text x="23.7302%" y="2671.50">ma..</text></g><g><title>[libc.so.6] (3,532,494 samples, 2.61%)</title><rect x="23.4802%" y="2645" width="2.6145%" height="15" fill="rgb(211,146,34)" fg:x="31725123" fg:w="3532494"/><text x="23.7302%" y="2655.50">[l..</text></g><g><title>[libc.so.6] (3,532,494 samples, 2.61%)</title><rect x="23.4802%" y="2629" width="2.6145%" height="15" fill="rgb(228,22,38)" fg:x="31725123" fg:w="3532494"/><text x="23.7302%" y="2639.50">[l..</text></g><g><title>[libc.so.6] (3,532,494 samples, 2.61%)</title><rect x="23.4802%" y="2613" width="2.6145%" height="15" fill="rgb(235,168,5)" fg:x="31725123" fg:w="3532494"/><text x="23.7302%" y="2623.50">[l..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,215,722 samples, 2.38%)</title><rect x="26.0947%" y="3653" width="2.3800%" height="15" fill="rgb(221,155,16)" fg:x="35257617" fg:w="3215722"/><text x="26.3447%" y="3663.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,215,722 samples, 2.38%)</title><rect x="26.0947%" y="3637" width="2.3800%" height="15" fill="rgb(215,215,53)" fg:x="35257617" fg:w="3215722"/><text x="26.3447%" y="3647.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,215,722 samples, 2.38%)</title><rect x="26.0947%" y="3621" width="2.3800%" height="15" fill="rgb(223,4,10)" fg:x="35257617" fg:w="3215722"/><text x="26.3447%" y="3631.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,215,722 samples, 2.38%)</title><rect x="26.0947%" y="3605" width="2.3800%" height="15" fill="rgb(234,103,6)" fg:x="35257617" fg:w="3215722"/><text x="26.3447%" y="3615.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,215,722 samples, 2.38%)</title><rect x="26.0947%" y="3589" width="2.3800%" height="15" fill="rgb(227,97,0)" fg:x="35257617" fg:w="3215722"/><text x="26.3447%" y="3599.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,215,722 samples, 2.38%)</title><rect x="26.0947%" y="3573" width="2.3800%" height="15" fill="rgb(234,150,53)" fg:x="35257617" fg:w="3215722"/><text x="26.3447%" y="3583.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,215,722 samples, 2.38%)</title><rect x="26.0947%" y="3557" width="2.3800%" height="15" fill="rgb(228,201,54)" fg:x="35257617" fg:w="3215722"/><text x="26.3447%" y="3567.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (3,215,722 samples, 2.38%)</title><rect x="26.0947%" y="3541" width="2.3800%" height="15" fill="rgb(222,22,37)" fg:x="35257617" fg:w="3215722"/><text x="26.3447%" y="3551.50">al..</text></g><g><title>__rdl_dealloc (3,215,722 samples, 2.38%)</title><rect x="26.0947%" y="3525" width="2.3800%" height="15" fill="rgb(237,53,32)" fg:x="35257617" fg:w="3215722"/><text x="26.3447%" y="3535.50">__..</text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,215,722 samples, 2.38%)</title><rect x="26.0947%" y="3509" width="2.3800%" height="15" fill="rgb(233,25,53)" fg:x="35257617" fg:w="3215722"/><text x="26.3447%" y="3519.50">st..</text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3,343,089 samples, 2.47%)</title><rect x="28.4747%" y="3429" width="2.4743%" height="15" fill="rgb(210,40,34)" fg:x="38473339" fg:w="3343089"/><text x="28.7247%" y="3439.50">al..</text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (3,343,089 samples, 2.47%)</title><rect x="28.4747%" y="3413" width="2.4743%" height="15" fill="rgb(241,220,44)" fg:x="38473339" fg:w="3343089"/><text x="28.7247%" y="3423.50">al..</text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (3,343,089 samples, 2.47%)</title><rect x="28.4747%" y="3397" width="2.4743%" height="15" fill="rgb(235,28,35)" fg:x="38473339" fg:w="3343089"/><text x="28.7247%" y="3407.50">al..</text></g><g><title>alloc::collections::btree::mem::replace (3,343,089 samples, 2.47%)</title><rect x="28.4747%" y="3381" width="2.4743%" height="15" fill="rgb(210,56,17)" fg:x="38473339" fg:w="3343089"/><text x="28.7247%" y="3391.50">al..</text></g><g><title>core::ptr::write (3,343,089 samples, 2.47%)</title><rect x="28.4747%" y="3365" width="2.4743%" height="15" fill="rgb(224,130,29)" fg:x="38473339" fg:w="3343089"/><text x="28.7247%" y="3375.50">co..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="4005" width="7.3200%" height="15" fill="rgb(235,212,8)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="4015.50">alloc::vec..</text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::LayoutFrame]&gt; (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3989" width="7.3200%" height="15" fill="rgb(223,33,50)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3999.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::LayoutFrame&gt; (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3973" width="7.3200%" height="15" fill="rgb(219,149,13)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3983.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3957" width="7.3200%" height="15" fill="rgb(250,156,29)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3967.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3941" width="7.3200%" height="15" fill="rgb(216,193,19)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3951.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3925" width="7.3200%" height="15" fill="rgb(216,135,14)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3935.50">core::ptr:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3909" width="7.3200%" height="15" fill="rgb(241,47,5)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3919.50">&lt;alloc::co..</text></g><g><title>core::mem::drop (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3893" width="7.3200%" height="15" fill="rgb(233,42,35)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3903.50">core::mem:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3877" width="7.3200%" height="15" fill="rgb(231,13,6)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3887.50">core::ptr:..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3861" width="7.3200%" height="15" fill="rgb(207,181,40)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3871.50">&lt;alloc::co..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3845" width="7.3200%" height="15" fill="rgb(254,173,49)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3855.50">alloc::col..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3829" width="7.3200%" height="15" fill="rgb(221,1,38)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3839.50">core::ptr:..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3813" width="7.3200%" height="15" fill="rgb(206,124,46)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3823.50">&lt;alloc::co..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3797" width="7.3200%" height="15" fill="rgb(249,21,11)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3807.50">core::mem:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3781" width="7.3200%" height="15" fill="rgb(222,201,40)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3791.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3765" width="7.3200%" height="15" fill="rgb(235,61,29)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3775.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3749" width="7.3200%" height="15" fill="rgb(219,207,3)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3759.50">core::ptr:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3733" width="7.3200%" height="15" fill="rgb(222,56,46)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3743.50">&lt;alloc::co..</text></g><g><title>core::mem::drop (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3717" width="7.3200%" height="15" fill="rgb(239,76,54)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3727.50">core::mem:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3701" width="7.3200%" height="15" fill="rgb(231,124,27)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3711.50">core::ptr:..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3685" width="7.3200%" height="15" fill="rgb(249,195,6)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3695.50">&lt;alloc::co..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (9,890,361 samples, 7.32%)</title><rect x="26.0947%" y="3669" width="7.3200%" height="15" fill="rgb(237,174,47)" fg:x="35257617" fg:w="9890361"/><text x="26.3447%" y="3679.50">alloc::col..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,674,639 samples, 4.94%)</title><rect x="28.4747%" y="3653" width="4.9400%" height="15" fill="rgb(206,201,31)" fg:x="38473339" fg:w="6674639"/><text x="28.7247%" y="3663.50">core::..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,674,639 samples, 4.94%)</title><rect x="28.4747%" y="3637" width="4.9400%" height="15" fill="rgb(231,57,52)" fg:x="38473339" fg:w="6674639"/><text x="28.7247%" y="3647.50">&lt;alloc..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,674,639 samples, 4.94%)</title><rect x="28.4747%" y="3621" width="4.9400%" height="15" fill="rgb(248,177,22)" fg:x="38473339" fg:w="6674639"/><text x="28.7247%" y="3631.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,674,639 samples, 4.94%)</title><rect x="28.4747%" y="3605" width="4.9400%" height="15" fill="rgb(215,211,37)" fg:x="38473339" fg:w="6674639"/><text x="28.7247%" y="3615.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,674,639 samples, 4.94%)</title><rect x="28.4747%" y="3589" width="4.9400%" height="15" fill="rgb(241,128,51)" fg:x="38473339" fg:w="6674639"/><text x="28.7247%" y="3599.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,674,639 samples, 4.94%)</title><rect x="28.4747%" y="3573" width="4.9400%" height="15" fill="rgb(227,165,31)" fg:x="38473339" fg:w="6674639"/><text x="28.7247%" y="3583.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,674,639 samples, 4.94%)</title><rect x="28.4747%" y="3557" width="4.9400%" height="15" fill="rgb(228,167,24)" fg:x="38473339" fg:w="6674639"/><text x="28.7247%" y="3567.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,674,639 samples, 4.94%)</title><rect x="28.4747%" y="3541" width="4.9400%" height="15" fill="rgb(228,143,12)" fg:x="38473339" fg:w="6674639"/><text x="28.7247%" y="3551.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,674,639 samples, 4.94%)</title><rect x="28.4747%" y="3525" width="4.9400%" height="15" fill="rgb(249,149,8)" fg:x="38473339" fg:w="6674639"/><text x="28.7247%" y="3535.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,674,639 samples, 4.94%)</title><rect x="28.4747%" y="3509" width="4.9400%" height="15" fill="rgb(243,35,44)" fg:x="38473339" fg:w="6674639"/><text x="28.7247%" y="3519.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,674,639 samples, 4.94%)</title><rect x="28.4747%" y="3493" width="4.9400%" height="15" fill="rgb(246,89,9)" fg:x="38473339" fg:w="6674639"/><text x="28.7247%" y="3503.50">&lt;alloc..</text></g><g><title>core::mem::drop (6,674,639 samples, 4.94%)</title><rect x="28.4747%" y="3477" width="4.9400%" height="15" fill="rgb(233,213,13)" fg:x="38473339" fg:w="6674639"/><text x="28.7247%" y="3487.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,674,639 samples, 4.94%)</title><rect x="28.4747%" y="3461" width="4.9400%" height="15" fill="rgb(233,141,41)" fg:x="38473339" fg:w="6674639"/><text x="28.7247%" y="3471.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,674,639 samples, 4.94%)</title><rect x="28.4747%" y="3445" width="4.9400%" height="15" fill="rgb(239,167,4)" fg:x="38473339" fg:w="6674639"/><text x="28.7247%" y="3455.50">&lt;alloc..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3429" width="2.4657%" height="15" fill="rgb(209,217,16)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3439.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3413" width="2.4657%" height="15" fill="rgb(219,88,35)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3423.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3397" width="2.4657%" height="15" fill="rgb(220,193,23)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3407.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3381" width="2.4657%" height="15" fill="rgb(230,90,52)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3391.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3365" width="2.4657%" height="15" fill="rgb(252,106,19)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3375.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3349" width="2.4657%" height="15" fill="rgb(206,74,20)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3359.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3333" width="2.4657%" height="15" fill="rgb(230,138,44)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3343.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3317" width="2.4657%" height="15" fill="rgb(235,182,43)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3327.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3301" width="2.4657%" height="15" fill="rgb(242,16,51)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3311.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3285" width="2.4657%" height="15" fill="rgb(248,9,4)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3295.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3269" width="2.4657%" height="15" fill="rgb(210,31,22)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3279.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3253" width="2.4657%" height="15" fill="rgb(239,54,39)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3263.50">&lt;a..</text></g><g><title>core::mem::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3237" width="2.4657%" height="15" fill="rgb(230,99,41)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3247.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3221" width="2.4657%" height="15" fill="rgb(253,106,12)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3231.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3205" width="2.4657%" height="15" fill="rgb(213,46,41)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3215.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3189" width="2.4657%" height="15" fill="rgb(215,133,35)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3199.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3173" width="2.4657%" height="15" fill="rgb(213,28,5)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3183.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3157" width="2.4657%" height="15" fill="rgb(215,77,49)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3167.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3141" width="2.4657%" height="15" fill="rgb(248,100,22)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3151.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3125" width="2.4657%" height="15" fill="rgb(208,67,9)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3135.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3109" width="2.4657%" height="15" fill="rgb(219,133,21)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3119.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3093" width="2.4657%" height="15" fill="rgb(246,46,29)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3103.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3077" width="2.4657%" height="15" fill="rgb(246,185,52)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3087.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3061" width="2.4657%" height="15" fill="rgb(252,136,11)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3071.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3045" width="2.4657%" height="15" fill="rgb(219,138,53)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3055.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3029" width="2.4657%" height="15" fill="rgb(211,51,23)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3039.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="3013" width="2.4657%" height="15" fill="rgb(247,221,28)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3023.50">&lt;a..</text></g><g><title>core::mem::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2997" width="2.4657%" height="15" fill="rgb(251,222,45)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="3007.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2981" width="2.4657%" height="15" fill="rgb(217,162,53)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2991.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2965" width="2.4657%" height="15" fill="rgb(229,93,14)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2975.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2949" width="2.4657%" height="15" fill="rgb(209,67,49)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2959.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2933" width="2.4657%" height="15" fill="rgb(213,87,29)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2943.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2917" width="2.4657%" height="15" fill="rgb(205,151,52)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2927.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2901" width="2.4657%" height="15" fill="rgb(253,215,39)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2911.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2885" width="2.4657%" height="15" fill="rgb(221,220,41)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2895.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2869" width="2.4657%" height="15" fill="rgb(218,133,21)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2879.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2853" width="2.4657%" height="15" fill="rgb(221,193,43)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2863.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2837" width="2.4657%" height="15" fill="rgb(240,128,52)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2847.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2821" width="2.4657%" height="15" fill="rgb(253,114,12)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2831.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2805" width="2.4657%" height="15" fill="rgb(215,223,47)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2815.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2789" width="2.4657%" height="15" fill="rgb(248,225,23)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2799.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2773" width="2.4657%" height="15" fill="rgb(250,108,0)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2783.50">&lt;a..</text></g><g><title>core::mem::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2757" width="2.4657%" height="15" fill="rgb(228,208,7)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2767.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2741" width="2.4657%" height="15" fill="rgb(244,45,10)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2751.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2725" width="2.4657%" height="15" fill="rgb(207,125,25)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2735.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2709" width="2.4657%" height="15" fill="rgb(210,195,18)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2719.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2693" width="2.4657%" height="15" fill="rgb(249,80,12)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2703.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2677" width="2.4657%" height="15" fill="rgb(221,65,9)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2687.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2661" width="2.4657%" height="15" fill="rgb(235,49,36)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2671.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2645" width="2.4657%" height="15" fill="rgb(225,32,20)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2655.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2629" width="2.4657%" height="15" fill="rgb(215,141,46)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2639.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2613" width="2.4657%" height="15" fill="rgb(250,160,47)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2623.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2597" width="2.4657%" height="15" fill="rgb(216,222,40)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2607.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2581" width="2.4657%" height="15" fill="rgb(234,217,39)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2591.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2565" width="2.4657%" height="15" fill="rgb(207,178,40)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2575.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2549" width="2.4657%" height="15" fill="rgb(221,136,13)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2559.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2533" width="2.4657%" height="15" fill="rgb(249,199,10)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2543.50">&lt;a..</text></g><g><title>core::mem::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2517" width="2.4657%" height="15" fill="rgb(249,222,13)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2527.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2501" width="2.4657%" height="15" fill="rgb(244,185,38)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2511.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2485" width="2.4657%" height="15" fill="rgb(236,202,9)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2495.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2469" width="2.4657%" height="15" fill="rgb(250,229,37)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2479.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2453" width="2.4657%" height="15" fill="rgb(206,174,23)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2463.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2437" width="2.4657%" height="15" fill="rgb(211,33,43)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2447.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2421" width="2.4657%" height="15" fill="rgb(245,58,50)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2431.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2405" width="2.4657%" height="15" fill="rgb(244,68,36)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2415.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2389" width="2.4657%" height="15" fill="rgb(232,229,15)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2399.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2373" width="2.4657%" height="15" fill="rgb(254,30,23)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2383.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2357" width="2.4657%" height="15" fill="rgb(235,160,14)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2367.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2341" width="2.4657%" height="15" fill="rgb(212,155,44)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2351.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2325" width="2.4657%" height="15" fill="rgb(226,2,50)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2335.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2309" width="2.4657%" height="15" fill="rgb(234,177,6)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2319.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2293" width="2.4657%" height="15" fill="rgb(217,24,9)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2303.50">&lt;a..</text></g><g><title>core::mem::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2277" width="2.4657%" height="15" fill="rgb(220,13,46)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2287.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2261" width="2.4657%" height="15" fill="rgb(239,221,27)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2271.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2245" width="2.4657%" height="15" fill="rgb(222,198,25)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2255.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2229" width="2.4657%" height="15" fill="rgb(211,99,13)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2239.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2213" width="2.4657%" height="15" fill="rgb(232,111,31)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2223.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2197" width="2.4657%" height="15" fill="rgb(245,82,37)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2207.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2181" width="2.4657%" height="15" fill="rgb(227,149,46)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2191.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2165" width="2.4657%" height="15" fill="rgb(218,36,50)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2175.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2149" width="2.4657%" height="15" fill="rgb(226,80,48)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2159.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2133" width="2.4657%" height="15" fill="rgb(238,224,15)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2143.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2117" width="2.4657%" height="15" fill="rgb(241,136,10)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2127.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2101" width="2.4657%" height="15" fill="rgb(208,32,45)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2111.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2085" width="2.4657%" height="15" fill="rgb(207,135,9)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2095.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2069" width="2.4657%" height="15" fill="rgb(206,86,44)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2079.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2053" width="2.4657%" height="15" fill="rgb(245,177,15)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2063.50">&lt;a..</text></g><g><title>core::mem::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2037" width="2.4657%" height="15" fill="rgb(206,64,50)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2047.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2021" width="2.4657%" height="15" fill="rgb(234,36,40)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2031.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="2005" width="2.4657%" height="15" fill="rgb(213,64,8)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="2015.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1989" width="2.4657%" height="15" fill="rgb(210,75,36)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1999.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1973" width="2.4657%" height="15" fill="rgb(229,88,21)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1983.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1957" width="2.4657%" height="15" fill="rgb(252,204,47)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1967.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1941" width="2.4657%" height="15" fill="rgb(208,77,27)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1951.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1925" width="2.4657%" height="15" fill="rgb(221,76,26)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1935.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1909" width="2.4657%" height="15" fill="rgb(225,139,18)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1919.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1893" width="2.4657%" height="15" fill="rgb(230,137,11)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1903.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1877" width="2.4657%" height="15" fill="rgb(212,28,1)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1887.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1861" width="2.4657%" height="15" fill="rgb(248,164,17)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1871.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1845" width="2.4657%" height="15" fill="rgb(222,171,42)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1855.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1829" width="2.4657%" height="15" fill="rgb(243,84,45)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1839.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1813" width="2.4657%" height="15" fill="rgb(252,49,23)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1823.50">&lt;a..</text></g><g><title>core::mem::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1797" width="2.4657%" height="15" fill="rgb(215,19,7)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1807.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1781" width="2.4657%" height="15" fill="rgb(238,81,41)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1791.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1765" width="2.4657%" height="15" fill="rgb(210,199,37)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1775.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1749" width="2.4657%" height="15" fill="rgb(244,192,49)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1759.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1733" width="2.4657%" height="15" fill="rgb(226,211,11)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1743.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1717" width="2.4657%" height="15" fill="rgb(236,162,54)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1727.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1701" width="2.4657%" height="15" fill="rgb(220,229,9)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1711.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1685" width="2.4657%" height="15" fill="rgb(250,87,22)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1695.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1669" width="2.4657%" height="15" fill="rgb(239,43,17)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1679.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1653" width="2.4657%" height="15" fill="rgb(231,177,25)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1663.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1637" width="2.4657%" height="15" fill="rgb(219,179,1)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1647.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1621" width="2.4657%" height="15" fill="rgb(238,219,53)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1631.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1605" width="2.4657%" height="15" fill="rgb(232,167,36)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1615.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1589" width="2.4657%" height="15" fill="rgb(244,19,51)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1599.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1573" width="2.4657%" height="15" fill="rgb(224,6,22)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1583.50">&lt;a..</text></g><g><title>core::mem::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1557" width="2.4657%" height="15" fill="rgb(224,145,5)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1567.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1541" width="2.4657%" height="15" fill="rgb(234,130,49)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1551.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1525" width="2.4657%" height="15" fill="rgb(254,6,2)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1535.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1509" width="2.4657%" height="15" fill="rgb(208,96,46)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1519.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1493" width="2.4657%" height="15" fill="rgb(239,3,39)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1503.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1477" width="2.4657%" height="15" fill="rgb(233,210,1)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1487.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1461" width="2.4657%" height="15" fill="rgb(244,137,37)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1471.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1445" width="2.4657%" height="15" fill="rgb(240,136,2)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1455.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1429" width="2.4657%" height="15" fill="rgb(239,18,37)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1439.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1413" width="2.4657%" height="15" fill="rgb(218,185,22)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1423.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1397" width="2.4657%" height="15" fill="rgb(225,218,4)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1407.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1381" width="2.4657%" height="15" fill="rgb(230,182,32)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1391.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1365" width="2.4657%" height="15" fill="rgb(242,56,43)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1375.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1349" width="2.4657%" height="15" fill="rgb(233,99,24)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1359.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1333" width="2.4657%" height="15" fill="rgb(234,209,42)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1343.50">&lt;a..</text></g><g><title>core::mem::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1317" width="2.4657%" height="15" fill="rgb(227,7,12)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1327.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1301" width="2.4657%" height="15" fill="rgb(245,203,43)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1311.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1285" width="2.4657%" height="15" fill="rgb(238,205,33)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1295.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1269" width="2.4657%" height="15" fill="rgb(231,56,7)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1279.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1253" width="2.4657%" height="15" fill="rgb(244,186,29)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1263.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1237" width="2.4657%" height="15" fill="rgb(234,111,31)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1247.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1221" width="2.4657%" height="15" fill="rgb(241,149,10)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1231.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1205" width="2.4657%" height="15" fill="rgb(249,206,44)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1215.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1189" width="2.4657%" height="15" fill="rgb(251,153,30)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1199.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1173" width="2.4657%" height="15" fill="rgb(239,152,38)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1183.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1157" width="2.4657%" height="15" fill="rgb(249,139,47)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1167.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1141" width="2.4657%" height="15" fill="rgb(244,64,35)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1151.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1125" width="2.4657%" height="15" fill="rgb(216,46,15)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1135.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1109" width="2.4657%" height="15" fill="rgb(250,74,19)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1119.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1093" width="2.4657%" height="15" fill="rgb(249,42,33)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1103.50">&lt;a..</text></g><g><title>core::mem::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1077" width="2.4657%" height="15" fill="rgb(242,149,17)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1087.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1061" width="2.4657%" height="15" fill="rgb(244,29,21)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1071.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1045" width="2.4657%" height="15" fill="rgb(220,130,37)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1055.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1029" width="2.4657%" height="15" fill="rgb(211,67,2)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1039.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="1013" width="2.4657%" height="15" fill="rgb(235,68,52)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1023.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="997" width="2.4657%" height="15" fill="rgb(246,142,3)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="1007.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="981" width="2.4657%" height="15" fill="rgb(241,25,7)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="991.50">co..</text></g><g><title>cfree (3,331,550 samples, 2.47%)</title><rect x="30.9490%" y="965" width="2.4657%" height="15" fill="rgb(242,119,39)" fg:x="41816428" fg:w="3331550"/><text x="31.1990%" y="975.50">cf..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,592,610 samples, 2.66%)</title><rect x="33.4147%" y="1173" width="2.6589%" height="15" fill="rgb(241,98,45)" fg:x="45147978" fg:w="3592610"/><text x="33.6647%" y="1183.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,592,610 samples, 2.66%)</title><rect x="33.4147%" y="1157" width="2.6589%" height="15" fill="rgb(254,28,30)" fg:x="45147978" fg:w="3592610"/><text x="33.6647%" y="1167.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,592,610 samples, 2.66%)</title><rect x="33.4147%" y="1141" width="2.6589%" height="15" fill="rgb(241,142,54)" fg:x="45147978" fg:w="3592610"/><text x="33.6647%" y="1151.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,592,610 samples, 2.66%)</title><rect x="33.4147%" y="1125" width="2.6589%" height="15" fill="rgb(222,85,15)" fg:x="45147978" fg:w="3592610"/><text x="33.6647%" y="1135.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3333" width="5.2782%" height="15" fill="rgb(210,85,47)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3343.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3317" width="5.2782%" height="15" fill="rgb(224,206,25)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3327.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3301" width="5.2782%" height="15" fill="rgb(243,201,19)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3311.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3285" width="5.2782%" height="15" fill="rgb(236,59,4)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3295.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3269" width="5.2782%" height="15" fill="rgb(254,179,45)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3279.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3253" width="5.2782%" height="15" fill="rgb(226,14,10)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3263.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3237" width="5.2782%" height="15" fill="rgb(244,27,41)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3247.50">&lt;alloc..</text></g><g><title>core::mem::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3221" width="5.2782%" height="15" fill="rgb(235,35,32)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3231.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3205" width="5.2782%" height="15" fill="rgb(218,68,31)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3215.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3189" width="5.2782%" height="15" fill="rgb(207,120,37)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3199.50">&lt;alloc..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3173" width="5.2782%" height="15" fill="rgb(227,98,0)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3183.50">alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3157" width="5.2782%" height="15" fill="rgb(207,7,3)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3167.50">core::..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3141" width="5.2782%" height="15" fill="rgb(206,98,19)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3151.50">&lt;alloc..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3125" width="5.2782%" height="15" fill="rgb(217,5,26)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3135.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3109" width="5.2782%" height="15" fill="rgb(235,190,38)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3119.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3093" width="5.2782%" height="15" fill="rgb(247,86,24)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3103.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3077" width="5.2782%" height="15" fill="rgb(205,101,16)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3087.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3061" width="5.2782%" height="15" fill="rgb(246,168,33)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3071.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3045" width="5.2782%" height="15" fill="rgb(231,114,1)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3055.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3029" width="5.2782%" height="15" fill="rgb(207,184,53)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3039.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="3013" width="5.2782%" height="15" fill="rgb(224,95,51)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3023.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2997" width="5.2782%" height="15" fill="rgb(212,188,45)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="3007.50">&lt;alloc..</text></g><g><title>core::mem::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2981" width="5.2782%" height="15" fill="rgb(223,154,38)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2991.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2965" width="5.2782%" height="15" fill="rgb(251,22,52)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2975.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2949" width="5.2782%" height="15" fill="rgb(229,209,22)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2959.50">&lt;alloc..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2933" width="5.2782%" height="15" fill="rgb(234,138,34)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2943.50">alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2917" width="5.2782%" height="15" fill="rgb(212,95,11)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2927.50">core::..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2901" width="5.2782%" height="15" fill="rgb(240,179,47)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2911.50">&lt;alloc..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2885" width="5.2782%" height="15" fill="rgb(240,163,11)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2895.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2869" width="5.2782%" height="15" fill="rgb(236,37,12)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2879.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2853" width="5.2782%" height="15" fill="rgb(232,164,16)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2863.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2837" width="5.2782%" height="15" fill="rgb(244,205,15)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2847.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2821" width="5.2782%" height="15" fill="rgb(223,117,47)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2831.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2805" width="5.2782%" height="15" fill="rgb(244,107,35)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2815.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2789" width="5.2782%" height="15" fill="rgb(205,140,8)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2799.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2773" width="5.2782%" height="15" fill="rgb(228,84,46)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2783.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2757" width="5.2782%" height="15" fill="rgb(254,188,9)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2767.50">&lt;alloc..</text></g><g><title>core::mem::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2741" width="5.2782%" height="15" fill="rgb(206,112,54)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2751.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2725" width="5.2782%" height="15" fill="rgb(216,84,49)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2735.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2709" width="5.2782%" height="15" fill="rgb(214,194,35)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2719.50">&lt;alloc..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2693" width="5.2782%" height="15" fill="rgb(249,28,3)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2703.50">alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2677" width="5.2782%" height="15" fill="rgb(222,56,52)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2687.50">core::..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2661" width="5.2782%" height="15" fill="rgb(245,217,50)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2671.50">&lt;alloc..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2645" width="5.2782%" height="15" fill="rgb(213,201,24)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2655.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2629" width="5.2782%" height="15" fill="rgb(248,116,28)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2639.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2613" width="5.2782%" height="15" fill="rgb(219,72,43)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2623.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2597" width="5.2782%" height="15" fill="rgb(209,138,14)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2607.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2581" width="5.2782%" height="15" fill="rgb(222,18,33)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2591.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2565" width="5.2782%" height="15" fill="rgb(213,199,7)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2575.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2549" width="5.2782%" height="15" fill="rgb(250,110,10)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2559.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2533" width="5.2782%" height="15" fill="rgb(248,123,6)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2543.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2517" width="5.2782%" height="15" fill="rgb(206,91,31)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2527.50">&lt;alloc..</text></g><g><title>core::mem::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2501" width="5.2782%" height="15" fill="rgb(211,154,13)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2511.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2485" width="5.2782%" height="15" fill="rgb(225,148,7)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2495.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2469" width="5.2782%" height="15" fill="rgb(220,160,43)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2479.50">&lt;alloc..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2453" width="5.2782%" height="15" fill="rgb(213,52,39)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2463.50">alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2437" width="5.2782%" height="15" fill="rgb(243,137,7)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2447.50">core::..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2421" width="5.2782%" height="15" fill="rgb(230,79,13)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2431.50">&lt;alloc..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2405" width="5.2782%" height="15" fill="rgb(247,105,23)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2415.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2389" width="5.2782%" height="15" fill="rgb(223,179,41)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2399.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2373" width="5.2782%" height="15" fill="rgb(218,9,34)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2383.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2357" width="5.2782%" height="15" fill="rgb(222,106,8)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2367.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2341" width="5.2782%" height="15" fill="rgb(211,220,0)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2351.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2325" width="5.2782%" height="15" fill="rgb(229,52,16)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2335.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2309" width="5.2782%" height="15" fill="rgb(212,155,18)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2319.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2293" width="5.2782%" height="15" fill="rgb(242,21,14)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2303.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2277" width="5.2782%" height="15" fill="rgb(222,19,48)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2287.50">&lt;alloc..</text></g><g><title>core::mem::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2261" width="5.2782%" height="15" fill="rgb(232,45,27)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2271.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2245" width="5.2782%" height="15" fill="rgb(249,103,42)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2255.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2229" width="5.2782%" height="15" fill="rgb(246,81,33)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2239.50">&lt;alloc..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2213" width="5.2782%" height="15" fill="rgb(252,33,42)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2223.50">alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2197" width="5.2782%" height="15" fill="rgb(209,212,41)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2207.50">core::..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2181" width="5.2782%" height="15" fill="rgb(207,154,6)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2191.50">&lt;alloc..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2165" width="5.2782%" height="15" fill="rgb(223,64,47)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2175.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2149" width="5.2782%" height="15" fill="rgb(211,161,38)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2159.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2133" width="5.2782%" height="15" fill="rgb(219,138,40)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2143.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2117" width="5.2782%" height="15" fill="rgb(241,228,46)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2127.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2101" width="5.2782%" height="15" fill="rgb(223,209,38)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2111.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2085" width="5.2782%" height="15" fill="rgb(236,164,45)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2095.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2069" width="5.2782%" height="15" fill="rgb(231,15,5)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2079.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2053" width="5.2782%" height="15" fill="rgb(252,35,15)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2063.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2037" width="5.2782%" height="15" fill="rgb(248,181,18)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2047.50">&lt;alloc..</text></g><g><title>core::mem::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2021" width="5.2782%" height="15" fill="rgb(233,39,42)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2031.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="2005" width="5.2782%" height="15" fill="rgb(238,110,33)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="2015.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1989" width="5.2782%" height="15" fill="rgb(233,195,10)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1999.50">&lt;alloc..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1973" width="5.2782%" height="15" fill="rgb(254,105,3)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1983.50">alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1957" width="5.2782%" height="15" fill="rgb(221,225,9)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1967.50">core::..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1941" width="5.2782%" height="15" fill="rgb(224,227,45)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1951.50">&lt;alloc..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1925" width="5.2782%" height="15" fill="rgb(229,198,43)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1935.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1909" width="5.2782%" height="15" fill="rgb(206,209,35)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1919.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1893" width="5.2782%" height="15" fill="rgb(245,195,53)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1903.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1877" width="5.2782%" height="15" fill="rgb(240,92,26)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1887.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1861" width="5.2782%" height="15" fill="rgb(207,40,23)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1871.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1845" width="5.2782%" height="15" fill="rgb(223,111,35)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1855.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1829" width="5.2782%" height="15" fill="rgb(229,147,28)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1839.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1813" width="5.2782%" height="15" fill="rgb(211,29,28)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1823.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1797" width="5.2782%" height="15" fill="rgb(228,72,33)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1807.50">&lt;alloc..</text></g><g><title>core::mem::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1781" width="5.2782%" height="15" fill="rgb(205,214,31)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1791.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1765" width="5.2782%" height="15" fill="rgb(224,111,15)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1775.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1749" width="5.2782%" height="15" fill="rgb(253,21,26)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1759.50">&lt;alloc..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1733" width="5.2782%" height="15" fill="rgb(245,139,43)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1743.50">alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1717" width="5.2782%" height="15" fill="rgb(252,170,7)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1727.50">core::..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1701" width="5.2782%" height="15" fill="rgb(231,118,14)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1711.50">&lt;alloc..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1685" width="5.2782%" height="15" fill="rgb(238,83,0)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1695.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1669" width="5.2782%" height="15" fill="rgb(221,39,39)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1679.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1653" width="5.2782%" height="15" fill="rgb(222,119,46)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1663.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1637" width="5.2782%" height="15" fill="rgb(222,165,49)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1647.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1621" width="5.2782%" height="15" fill="rgb(219,113,52)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1631.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1605" width="5.2782%" height="15" fill="rgb(214,7,15)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1615.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1589" width="5.2782%" height="15" fill="rgb(235,32,4)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1599.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1573" width="5.2782%" height="15" fill="rgb(238,90,54)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1583.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1557" width="5.2782%" height="15" fill="rgb(213,208,19)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1567.50">&lt;alloc..</text></g><g><title>core::mem::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1541" width="5.2782%" height="15" fill="rgb(233,156,4)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1551.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1525" width="5.2782%" height="15" fill="rgb(207,194,5)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1535.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1509" width="5.2782%" height="15" fill="rgb(206,111,30)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1519.50">&lt;alloc..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1493" width="5.2782%" height="15" fill="rgb(243,70,54)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1503.50">alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1477" width="5.2782%" height="15" fill="rgb(242,28,8)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1487.50">core::..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1461" width="5.2782%" height="15" fill="rgb(219,106,18)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1471.50">&lt;alloc..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1445" width="5.2782%" height="15" fill="rgb(244,222,10)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1455.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1429" width="5.2782%" height="15" fill="rgb(236,179,52)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1439.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1413" width="5.2782%" height="15" fill="rgb(213,23,39)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1423.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1397" width="5.2782%" height="15" fill="rgb(238,48,10)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1407.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1381" width="5.2782%" height="15" fill="rgb(251,196,23)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1391.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1365" width="5.2782%" height="15" fill="rgb(250,152,24)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1375.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1349" width="5.2782%" height="15" fill="rgb(209,150,17)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1359.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1333" width="5.2782%" height="15" fill="rgb(234,202,34)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1343.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1317" width="5.2782%" height="15" fill="rgb(253,148,53)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1327.50">&lt;alloc..</text></g><g><title>core::mem::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1301" width="5.2782%" height="15" fill="rgb(218,129,16)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1311.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1285" width="5.2782%" height="15" fill="rgb(216,85,19)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1295.50">core::..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1269" width="5.2782%" height="15" fill="rgb(235,228,7)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1279.50">&lt;alloc..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1253" width="5.2782%" height="15" fill="rgb(245,175,0)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1263.50">alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1237" width="5.2782%" height="15" fill="rgb(208,168,36)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1247.50">core::..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1221" width="5.2782%" height="15" fill="rgb(246,171,24)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1231.50">&lt;alloc..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1205" width="5.2782%" height="15" fill="rgb(215,142,24)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1215.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,131,535 samples, 5.28%)</title><rect x="33.4147%" y="1189" width="5.2782%" height="15" fill="rgb(250,187,7)" fg:x="45147978" fg:w="7131535"/><text x="33.6647%" y="1199.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="1173" width="2.6192%" height="15" fill="rgb(228,66,33)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="1183.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="1157" width="2.6192%" height="15" fill="rgb(234,215,21)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="1167.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="1141" width="2.6192%" height="15" fill="rgb(222,191,20)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="1151.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="1125" width="2.6192%" height="15" fill="rgb(245,79,54)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="1135.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="1109" width="2.6192%" height="15" fill="rgb(240,10,37)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="1119.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="1093" width="2.6192%" height="15" fill="rgb(214,192,32)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="1103.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="1077" width="2.6192%" height="15" fill="rgb(209,36,54)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="1087.50">&lt;a..</text></g><g><title>core::mem::drop (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="1061" width="2.6192%" height="15" fill="rgb(220,10,11)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="1071.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="1045" width="2.6192%" height="15" fill="rgb(221,106,17)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="1055.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="1029" width="2.6192%" height="15" fill="rgb(251,142,44)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="1039.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="1013" width="2.6192%" height="15" fill="rgb(238,13,15)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="1023.50">al..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="997" width="2.6192%" height="15" fill="rgb(208,107,27)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="1007.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="981" width="2.6192%" height="15" fill="rgb(205,136,37)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="991.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="965" width="2.6192%" height="15" fill="rgb(250,205,27)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="975.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="949" width="2.6192%" height="15" fill="rgb(210,80,43)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="959.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="933" width="2.6192%" height="15" fill="rgb(247,160,36)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="943.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="917" width="2.6192%" height="15" fill="rgb(234,13,49)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="927.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="901" width="2.6192%" height="15" fill="rgb(234,122,0)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="911.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="885" width="2.6192%" height="15" fill="rgb(207,146,38)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="895.50">al..</text></g><g><title>cfree (3,538,925 samples, 2.62%)</title><rect x="36.0736%" y="869" width="2.6192%" height="15" fill="rgb(207,177,25)" fg:x="48740588" fg:w="3538925"/><text x="36.3236%" y="879.50">cf..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;main::benchmark::LayoutFrame&gt;&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="4005" width="7.8903%" height="15" fill="rgb(211,178,42)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="4015.50">core::ptr::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3989" width="7.8903%" height="15" fill="rgb(230,69,54)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3999.50">&lt;alloc::vec..</text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::LayoutFrame]&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3973" width="7.8903%" height="15" fill="rgb(214,135,41)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3983.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::LayoutFrame&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3957" width="7.8903%" height="15" fill="rgb(237,67,25)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3967.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3941" width="7.8903%" height="15" fill="rgb(222,189,50)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3951.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3925" width="7.8903%" height="15" fill="rgb(245,148,34)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3935.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3909" width="7.8903%" height="15" fill="rgb(222,29,6)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3919.50">core::ptr::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3893" width="7.8903%" height="15" fill="rgb(221,189,43)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3903.50">&lt;alloc::col..</text></g><g><title>core::mem::drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3877" width="7.8903%" height="15" fill="rgb(207,36,27)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3887.50">core::mem::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3861" width="7.8903%" height="15" fill="rgb(217,90,24)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3871.50">core::ptr::..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3845" width="7.8903%" height="15" fill="rgb(224,66,35)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3855.50">&lt;alloc::col..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3829" width="7.8903%" height="15" fill="rgb(221,13,50)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3839.50">alloc::coll..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3813" width="7.8903%" height="15" fill="rgb(236,68,49)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3823.50">core::ptr::..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3797" width="7.8903%" height="15" fill="rgb(229,146,28)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3807.50">&lt;alloc::col..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3781" width="7.8903%" height="15" fill="rgb(225,31,38)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3791.50">core::mem::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3765" width="7.8903%" height="15" fill="rgb(250,208,3)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3775.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3749" width="7.8903%" height="15" fill="rgb(246,54,23)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3759.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3733" width="7.8903%" height="15" fill="rgb(243,76,11)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3743.50">core::ptr::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3717" width="7.8903%" height="15" fill="rgb(245,21,50)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3727.50">&lt;alloc::col..</text></g><g><title>core::mem::drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3701" width="7.8903%" height="15" fill="rgb(228,9,43)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3711.50">core::mem::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3685" width="7.8903%" height="15" fill="rgb(208,100,47)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3695.50">core::ptr::..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3669" width="7.8903%" height="15" fill="rgb(232,26,8)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3679.50">&lt;alloc::col..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3653" width="7.8903%" height="15" fill="rgb(216,166,38)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3663.50">alloc::coll..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3637" width="7.8903%" height="15" fill="rgb(251,202,51)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3647.50">core::ptr::..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3621" width="7.8903%" height="15" fill="rgb(254,216,34)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3631.50">&lt;alloc::col..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3605" width="7.8903%" height="15" fill="rgb(251,32,27)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3615.50">core::mem::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3589" width="7.8903%" height="15" fill="rgb(208,127,28)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3599.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3573" width="7.8903%" height="15" fill="rgb(224,137,22)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3583.50">core::ptr::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3557" width="7.8903%" height="15" fill="rgb(254,70,32)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3567.50">&lt;alloc::vec..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3541" width="7.8903%" height="15" fill="rgb(229,75,37)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3551.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3525" width="7.8903%" height="15" fill="rgb(252,64,23)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3535.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3509" width="7.8903%" height="15" fill="rgb(232,162,48)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3519.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3493" width="7.8903%" height="15" fill="rgb(246,160,12)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3503.50">core::ptr::..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3477" width="7.8903%" height="15" fill="rgb(247,166,0)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3487.50">&lt;alloc::col..</text></g><g><title>core::mem::drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3461" width="7.8903%" height="15" fill="rgb(249,219,21)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3471.50">core::mem::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3445" width="7.8903%" height="15" fill="rgb(205,209,3)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3455.50">core::ptr::..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3429" width="7.8903%" height="15" fill="rgb(243,44,1)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3439.50">&lt;alloc::col..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3413" width="7.8903%" height="15" fill="rgb(206,159,16)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3423.50">alloc::coll..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3397" width="7.8903%" height="15" fill="rgb(244,77,30)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3407.50">core::ptr::..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3381" width="7.8903%" height="15" fill="rgb(218,69,12)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3391.50">&lt;alloc::col..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3365" width="7.8903%" height="15" fill="rgb(212,87,7)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3375.50">core::mem::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10,660,871 samples, 7.89%)</title><rect x="33.4147%" y="3349" width="7.8903%" height="15" fill="rgb(245,114,25)" fg:x="45147978" fg:w="10660871"/><text x="33.6647%" y="3359.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,529,336 samples, 2.61%)</title><rect x="38.6928%" y="3333" width="2.6121%" height="15" fill="rgb(210,61,42)" fg:x="52279513" fg:w="3529336"/><text x="38.9428%" y="3343.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,529,336 samples, 2.61%)</title><rect x="38.6928%" y="3317" width="2.6121%" height="15" fill="rgb(211,52,33)" fg:x="52279513" fg:w="3529336"/><text x="38.9428%" y="3327.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,529,336 samples, 2.61%)</title><rect x="38.6928%" y="3301" width="2.6121%" height="15" fill="rgb(234,58,33)" fg:x="52279513" fg:w="3529336"/><text x="38.9428%" y="3311.50">&lt;a..</text></g><g><title>core::mem::drop (3,529,336 samples, 2.61%)</title><rect x="38.6928%" y="3285" width="2.6121%" height="15" fill="rgb(220,115,36)" fg:x="52279513" fg:w="3529336"/><text x="38.9428%" y="3295.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,529,336 samples, 2.61%)</title><rect x="38.6928%" y="3269" width="2.6121%" height="15" fill="rgb(243,153,54)" fg:x="52279513" fg:w="3529336"/><text x="38.9428%" y="3279.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,529,336 samples, 2.61%)</title><rect x="38.6928%" y="3253" width="2.6121%" height="15" fill="rgb(251,47,18)" fg:x="52279513" fg:w="3529336"/><text x="38.9428%" y="3263.50">&lt;a..</text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3,529,336 samples, 2.61%)</title><rect x="38.6928%" y="3237" width="2.6121%" height="15" fill="rgb(242,102,42)" fg:x="52279513" fg:w="3529336"/><text x="38.9428%" y="3247.50">al..</text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (3,529,336 samples, 2.61%)</title><rect x="38.6928%" y="3221" width="2.6121%" height="15" fill="rgb(234,31,38)" fg:x="52279513" fg:w="3529336"/><text x="38.9428%" y="3231.50">al..</text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (3,529,336 samples, 2.61%)</title><rect x="38.6928%" y="3205" width="2.6121%" height="15" fill="rgb(221,117,51)" fg:x="52279513" fg:w="3529336"/><text x="38.9428%" y="3215.50">al..</text></g><g><title>alloc::collections::btree::mem::replace (3,529,336 samples, 2.61%)</title><rect x="38.6928%" y="3189" width="2.6121%" height="15" fill="rgb(212,20,18)" fg:x="52279513" fg:w="3529336"/><text x="38.9428%" y="3199.50">al..</text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (3,529,336 samples, 2.61%)</title><rect x="38.6928%" y="3173" width="2.6121%" height="15" fill="rgb(245,133,36)" fg:x="52279513" fg:w="3529336"/><text x="38.9428%" y="3183.50">al..</text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (3,529,336 samples, 2.61%)</title><rect x="38.6928%" y="3157" width="2.6121%" height="15" fill="rgb(212,6,19)" fg:x="52279513" fg:w="3529336"/><text x="38.9428%" y="3167.50">al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (3,529,336 samples, 2.61%)</title><rect x="38.6928%" y="3141" width="2.6121%" height="15" fill="rgb(218,1,36)" fg:x="52279513" fg:w="3529336"/><text x="38.9428%" y="3151.50">al..</text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (3,529,336 samples, 2.61%)</title><rect x="38.6928%" y="3125" width="2.6121%" height="15" fill="rgb(246,84,54)" fg:x="52279513" fg:w="3529336"/><text x="38.9428%" y="3135.50">al..</text></g><g><title>main::benchmark::apply_frame_modifications (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="4005" width="2.4514%" height="15" fill="rgb(242,110,6)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="4015.50">ma..</text></g><g><title>main::benchmark::json_to_html_node (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3989" width="2.4514%" height="15" fill="rgb(214,47,5)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3999.50">ma..</text></g><g><title>main::benchmark::json_to_html_node (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3973" width="2.4514%" height="15" fill="rgb(218,159,25)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3983.50">ma..</text></g><g><title>main::benchmark::json_to_html_node (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3957" width="2.4514%" height="15" fill="rgb(215,211,28)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3967.50">ma..</text></g><g><title>main::benchmark::json_to_html_node (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3941" width="2.4514%" height="15" fill="rgb(238,59,32)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3951.50">ma..</text></g><g><title>serde_json::value::Value::get (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3925" width="2.4514%" height="15" fill="rgb(226,82,3)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3935.50">se..</text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3909" width="2.4514%" height="15" fill="rgb(240,164,32)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3919.50">&lt;&amp;..</text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3893" width="2.4514%" height="15" fill="rgb(232,46,7)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3903.50">&lt;s..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3877" width="2.4514%" height="15" fill="rgb(229,129,53)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3887.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3861" width="2.4514%" height="15" fill="rgb(234,188,29)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3871.50">al..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3845" width="2.4514%" height="15" fill="rgb(246,141,4)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3855.50">al..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3829" width="2.4514%" height="15" fill="rgb(229,23,39)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3839.50">al..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3813" width="2.4514%" height="15" fill="rgb(206,12,3)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3823.50">al..</text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3797" width="2.4514%" height="15" fill="rgb(252,226,20)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3807.50">co..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3781" width="2.4514%" height="15" fill="rgb(216,123,35)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3791.50">co..</text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3765" width="2.4514%" height="15" fill="rgb(212,68,40)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3775.50">&lt;A..</text></g><g><title>[libc.so.6] (3,312,192 samples, 2.45%)</title><rect x="41.3050%" y="3749" width="2.4514%" height="15" fill="rgb(254,125,32)" fg:x="55808849" fg:w="3312192"/><text x="41.5550%" y="3759.50">[l..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,200,846 samples, 2.37%)</title><rect x="43.7564%" y="2933" width="2.3690%" height="15" fill="rgb(253,97,22)" fg:x="59121041" fg:w="3200846"/><text x="44.0064%" y="2943.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,200,846 samples, 2.37%)</title><rect x="43.7564%" y="2917" width="2.3690%" height="15" fill="rgb(241,101,14)" fg:x="59121041" fg:w="3200846"/><text x="44.0064%" y="2927.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,200,846 samples, 2.37%)</title><rect x="43.7564%" y="2901" width="2.3690%" height="15" fill="rgb(238,103,29)" fg:x="59121041" fg:w="3200846"/><text x="44.0064%" y="2911.50">al..</text></g><g><title>alloc::slice::hack::to_vec (3,200,846 samples, 2.37%)</title><rect x="43.7564%" y="2885" width="2.3690%" height="15" fill="rgb(233,195,47)" fg:x="59121041" fg:w="3200846"/><text x="44.0064%" y="2895.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,200,846 samples, 2.37%)</title><rect x="43.7564%" y="2869" width="2.3690%" height="15" fill="rgb(246,218,30)" fg:x="59121041" fg:w="3200846"/><text x="44.0064%" y="2879.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,200,846 samples, 2.37%)</title><rect x="43.7564%" y="2853" width="2.3690%" height="15" fill="rgb(219,145,47)" fg:x="59121041" fg:w="3200846"/><text x="44.0064%" y="2863.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,200,846 samples, 2.37%)</title><rect x="43.7564%" y="2837" width="2.3690%" height="15" fill="rgb(243,12,26)" fg:x="59121041" fg:w="3200846"/><text x="44.0064%" y="2847.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,200,846 samples, 2.37%)</title><rect x="43.7564%" y="2821" width="2.3690%" height="15" fill="rgb(214,87,16)" fg:x="59121041" fg:w="3200846"/><text x="44.0064%" y="2831.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,200,846 samples, 2.37%)</title><rect x="43.7564%" y="2805" width="2.3690%" height="15" fill="rgb(208,99,42)" fg:x="59121041" fg:w="3200846"/><text x="44.0064%" y="2815.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,200,846 samples, 2.37%)</title><rect x="43.7564%" y="2789" width="2.3690%" height="15" fill="rgb(253,99,2)" fg:x="59121041" fg:w="3200846"/><text x="44.0064%" y="2799.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (3,200,846 samples, 2.37%)</title><rect x="43.7564%" y="2773" width="2.3690%" height="15" fill="rgb(220,168,23)" fg:x="59121041" fg:w="3200846"/><text x="44.0064%" y="2783.50">al..</text></g><g><title>alloc::alloc::alloc (3,200,846 samples, 2.37%)</title><rect x="43.7564%" y="2757" width="2.3690%" height="15" fill="rgb(242,38,24)" fg:x="59121041" fg:w="3200846"/><text x="44.0064%" y="2767.50">al..</text></g><g><title>malloc (3,200,846 samples, 2.37%)</title><rect x="43.7564%" y="2741" width="2.3690%" height="15" fill="rgb(225,182,9)" fg:x="59121041" fg:w="3200846"/><text x="44.0064%" y="2751.50">ma..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,816,218 samples, 5.04%)</title><rect x="43.7564%" y="3013" width="5.0448%" height="15" fill="rgb(243,178,37)" fg:x="59121041" fg:w="6816218"/><text x="44.0064%" y="3023.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,816,218 samples, 5.04%)</title><rect x="43.7564%" y="2997" width="5.0448%" height="15" fill="rgb(232,139,19)" fg:x="59121041" fg:w="6816218"/><text x="44.0064%" y="3007.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (6,816,218 samples, 5.04%)</title><rect x="43.7564%" y="2981" width="5.0448%" height="15" fill="rgb(225,201,24)" fg:x="59121041" fg:w="6816218"/><text x="44.0064%" y="2991.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,816,218 samples, 5.04%)</title><rect x="43.7564%" y="2965" width="5.0448%" height="15" fill="rgb(221,47,46)" fg:x="59121041" fg:w="6816218"/><text x="44.0064%" y="2975.50">&lt;T as ..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (6,816,218 samples, 5.04%)</title><rect x="43.7564%" y="2949" width="5.0448%" height="15" fill="rgb(249,23,13)" fg:x="59121041" fg:w="6816218"/><text x="44.0064%" y="2959.50">&lt;css_b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2933" width="2.6758%" height="15" fill="rgb(219,9,5)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2943.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2917" width="2.6758%" height="15" fill="rgb(254,171,16)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2927.50">al..</text></g><g><title>alloc::slice::hack::to_vec (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2901" width="2.6758%" height="15" fill="rgb(230,171,20)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2911.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2885" width="2.6758%" height="15" fill="rgb(210,71,41)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2895.50">&lt;T..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2869" width="2.6758%" height="15" fill="rgb(206,173,20)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2879.50">&lt;c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2853" width="2.6758%" height="15" fill="rgb(233,88,34)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2863.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2837" width="2.6758%" height="15" fill="rgb(223,209,46)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2847.50">al..</text></g><g><title>alloc::slice::hack::to_vec (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2821" width="2.6758%" height="15" fill="rgb(250,43,18)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2831.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2805" width="2.6758%" height="15" fill="rgb(208,13,10)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2815.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2789" width="2.6758%" height="15" fill="rgb(212,200,36)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2799.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2773" width="2.6758%" height="15" fill="rgb(225,90,30)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2783.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2757" width="2.6758%" height="15" fill="rgb(236,182,39)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2767.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2741" width="2.6758%" height="15" fill="rgb(212,144,35)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2751.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2725" width="2.6758%" height="15" fill="rgb(228,63,44)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2735.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2709" width="2.6758%" height="15" fill="rgb(228,109,6)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2719.50">al..</text></g><g><title>alloc::alloc::alloc (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2693" width="2.6758%" height="15" fill="rgb(238,117,24)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2703.50">al..</text></g><g><title>malloc (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2677" width="2.6758%" height="15" fill="rgb(242,26,26)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2687.50">ma..</text></g><g><title>[libc.so.6] (3,615,372 samples, 2.68%)</title><rect x="46.1254%" y="2661" width="2.6758%" height="15" fill="rgb(221,92,48)" fg:x="62321887" fg:w="3615372"/><text x="46.3754%" y="2671.50">[l..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,795,076 samples, 2.07%)</title><rect x="48.8012%" y="3013" width="2.0687%" height="15" fill="rgb(209,209,32)" fg:x="65937259" fg:w="2795076"/><text x="49.0512%" y="3023.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,795,076 samples, 2.07%)</title><rect x="48.8012%" y="2997" width="2.0687%" height="15" fill="rgb(221,70,22)" fg:x="65937259" fg:w="2795076"/><text x="49.0512%" y="3007.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,795,076 samples, 2.07%)</title><rect x="48.8012%" y="2981" width="2.0687%" height="15" fill="rgb(248,145,5)" fg:x="65937259" fg:w="2795076"/><text x="49.0512%" y="2991.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,795,076 samples, 2.07%)</title><rect x="48.8012%" y="2965" width="2.0687%" height="15" fill="rgb(226,116,26)" fg:x="65937259" fg:w="2795076"/><text x="49.0512%" y="2975.50">a..</text></g><g><title>alloc::slice::hack::to_vec (2,795,076 samples, 2.07%)</title><rect x="48.8012%" y="2949" width="2.0687%" height="15" fill="rgb(244,5,17)" fg:x="65937259" fg:w="2795076"/><text x="49.0512%" y="2959.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,795,076 samples, 2.07%)</title><rect x="48.8012%" y="2933" width="2.0687%" height="15" fill="rgb(252,159,33)" fg:x="65937259" fg:w="2795076"/><text x="49.0512%" y="2943.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,795,076 samples, 2.07%)</title><rect x="48.8012%" y="2917" width="2.0687%" height="15" fill="rgb(206,71,0)" fg:x="65937259" fg:w="2795076"/><text x="49.0512%" y="2927.50">c..</text></g><g><title>core::intrinsics::copy_nonoverlapping (2,795,076 samples, 2.07%)</title><rect x="48.8012%" y="2901" width="2.0687%" height="15" fill="rgb(233,118,54)" fg:x="65937259" fg:w="2795076"/><text x="49.0512%" y="2911.50">c..</text></g><g><title>[libc.so.6] (2,795,076 samples, 2.07%)</title><rect x="48.8012%" y="2885" width="2.0687%" height="15" fill="rgb(234,83,48)" fg:x="65937259" fg:w="2795076"/><text x="49.0512%" y="2895.50">[..</text></g><g><title>core::clone::Clone::clone (3,228,282 samples, 2.39%)</title><rect x="50.8698%" y="2917" width="2.3893%" height="15" fill="rgb(228,3,54)" fg:x="68732335" fg:w="3228282"/><text x="51.1198%" y="2927.50">co..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,228,282 samples, 2.39%)</title><rect x="50.8698%" y="2901" width="2.3893%" height="15" fill="rgb(226,155,13)" fg:x="68732335" fg:w="3228282"/><text x="51.1198%" y="2911.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,228,282 samples, 2.39%)</title><rect x="50.8698%" y="2885" width="2.3893%" height="15" fill="rgb(241,28,37)" fg:x="68732335" fg:w="3228282"/><text x="51.1198%" y="2895.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,228,282 samples, 2.39%)</title><rect x="50.8698%" y="2869" width="2.3893%" height="15" fill="rgb(233,93,10)" fg:x="68732335" fg:w="3228282"/><text x="51.1198%" y="2879.50">al..</text></g><g><title>alloc::slice::hack::to_vec (3,228,282 samples, 2.39%)</title><rect x="50.8698%" y="2853" width="2.3893%" height="15" fill="rgb(225,113,19)" fg:x="68732335" fg:w="3228282"/><text x="51.1198%" y="2863.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,228,282 samples, 2.39%)</title><rect x="50.8698%" y="2837" width="2.3893%" height="15" fill="rgb(241,2,18)" fg:x="68732335" fg:w="3228282"/><text x="51.1198%" y="2847.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,228,282 samples, 2.39%)</title><rect x="50.8698%" y="2821" width="2.3893%" height="15" fill="rgb(228,207,21)" fg:x="68732335" fg:w="3228282"/><text x="51.1198%" y="2831.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,228,282 samples, 2.39%)</title><rect x="50.8698%" y="2805" width="2.3893%" height="15" fill="rgb(213,211,35)" fg:x="68732335" fg:w="3228282"/><text x="51.1198%" y="2815.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,228,282 samples, 2.39%)</title><rect x="50.8698%" y="2789" width="2.3893%" height="15" fill="rgb(209,83,10)" fg:x="68732335" fg:w="3228282"/><text x="51.1198%" y="2799.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,228,282 samples, 2.39%)</title><rect x="50.8698%" y="2773" width="2.3893%" height="15" fill="rgb(209,164,1)" fg:x="68732335" fg:w="3228282"/><text x="51.1198%" y="2783.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,228,282 samples, 2.39%)</title><rect x="50.8698%" y="2757" width="2.3893%" height="15" fill="rgb(213,184,43)" fg:x="68732335" fg:w="3228282"/><text x="51.1198%" y="2767.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (3,228,282 samples, 2.39%)</title><rect x="50.8698%" y="2741" width="2.3893%" height="15" fill="rgb(231,61,34)" fg:x="68732335" fg:w="3228282"/><text x="51.1198%" y="2751.50">al..</text></g><g><title>alloc::alloc::alloc (3,228,282 samples, 2.39%)</title><rect x="50.8698%" y="2725" width="2.3893%" height="15" fill="rgb(235,75,3)" fg:x="68732335" fg:w="3228282"/><text x="51.1198%" y="2735.50">al..</text></g><g><title>malloc (3,228,282 samples, 2.39%)</title><rect x="50.8698%" y="2709" width="2.3893%" height="15" fill="rgb(220,106,47)" fg:x="68732335" fg:w="3228282"/><text x="51.1198%" y="2719.50">ma..</text></g><g><title>[libc.so.6] (3,228,282 samples, 2.39%)</title><rect x="50.8698%" y="2693" width="2.3893%" height="15" fill="rgb(210,196,33)" fg:x="68732335" fg:w="3228282"/><text x="51.1198%" y="2703.50">[l..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3333" width="12.0125%" height="15" fill="rgb(229,154,42)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3343.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3317" width="12.0125%" height="15" fill="rgb(228,114,26)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3327.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3301" width="12.0125%" height="15" fill="rgb(208,144,1)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3311.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3285" width="12.0125%" height="15" fill="rgb(239,112,37)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3295.50">&lt;T as alloc::slice..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3269" width="12.0125%" height="15" fill="rgb(210,96,50)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3279.50">&lt;css_bitvector_com..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3253" width="12.0125%" height="15" fill="rgb(222,178,2)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3263.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3237" width="12.0125%" height="15" fill="rgb(226,74,18)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3247.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3221" width="12.0125%" height="15" fill="rgb(225,67,54)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3231.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3205" width="12.0125%" height="15" fill="rgb(251,92,32)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3215.50">&lt;T as alloc::slice..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3189" width="12.0125%" height="15" fill="rgb(228,149,22)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3199.50">&lt;css_bitvector_com..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3173" width="12.0125%" height="15" fill="rgb(243,54,13)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3183.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3157" width="12.0125%" height="15" fill="rgb(243,180,28)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3167.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3141" width="12.0125%" height="15" fill="rgb(208,167,24)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3151.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3125" width="12.0125%" height="15" fill="rgb(245,73,45)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3135.50">&lt;T as alloc::slice..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3109" width="12.0125%" height="15" fill="rgb(237,203,48)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3119.50">&lt;css_bitvector_com..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3093" width="12.0125%" height="15" fill="rgb(211,197,16)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3103.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3077" width="12.0125%" height="15" fill="rgb(243,99,51)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3087.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3061" width="12.0125%" height="15" fill="rgb(215,123,29)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3071.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3045" width="12.0125%" height="15" fill="rgb(239,186,37)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3055.50">&lt;T as alloc::slice..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (16,230,558 samples, 12.01%)</title><rect x="43.7564%" y="3029" width="12.0125%" height="15" fill="rgb(252,136,39)" fg:x="59121041" fg:w="16230558"/><text x="44.0064%" y="3039.50">&lt;css_bitvector_com..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6,619,264 samples, 4.90%)</title><rect x="50.8698%" y="3013" width="4.8990%" height="15" fill="rgb(223,213,32)" fg:x="68732335" fg:w="6619264"/><text x="51.1198%" y="3023.50">&lt;std::..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6,619,264 samples, 4.90%)</title><rect x="50.8698%" y="2997" width="4.8990%" height="15" fill="rgb(233,115,5)" fg:x="68732335" fg:w="6619264"/><text x="51.1198%" y="3007.50">&lt;hashb..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6,619,264 samples, 4.90%)</title><rect x="50.8698%" y="2981" width="4.8990%" height="15" fill="rgb(207,226,44)" fg:x="68732335" fg:w="6619264"/><text x="51.1198%" y="2991.50">&lt;hashb..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,619,264 samples, 4.90%)</title><rect x="50.8698%" y="2965" width="4.8990%" height="15" fill="rgb(208,126,0)" fg:x="68732335" fg:w="6619264"/><text x="51.1198%" y="2975.50">&lt;hashb..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (6,619,264 samples, 4.90%)</title><rect x="50.8698%" y="2949" width="4.8990%" height="15" fill="rgb(244,66,21)" fg:x="68732335" fg:w="6619264"/><text x="51.1198%" y="2959.50">&lt;hashb..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (6,619,264 samples, 4.90%)</title><rect x="50.8698%" y="2933" width="4.8990%" height="15" fill="rgb(222,97,12)" fg:x="68732335" fg:w="6619264"/><text x="51.1198%" y="2943.50">hashbr..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (3,390,982 samples, 2.51%)</title><rect x="53.2591%" y="2917" width="2.5097%" height="15" fill="rgb(219,213,19)" fg:x="71960617" fg:w="3390982"/><text x="53.5091%" y="2927.50">co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (3,390,982 samples, 2.51%)</title><rect x="53.2591%" y="2901" width="2.5097%" height="15" fill="rgb(252,169,30)" fg:x="71960617" fg:w="3390982"/><text x="53.5091%" y="2911.50">co..</text></g><g><title>[libc.so.6] (3,390,982 samples, 2.51%)</title><rect x="53.2591%" y="2885" width="2.5097%" height="15" fill="rgb(206,32,51)" fg:x="71960617" fg:w="3390982"/><text x="53.5091%" y="2895.50">[l..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3989" width="14.5620%" height="15" fill="rgb(250,172,42)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3999.50">&lt;css_bitvector_compile..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3973" width="14.5620%" height="15" fill="rgb(209,34,43)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3983.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3957" width="14.5620%" height="15" fill="rgb(223,11,35)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3967.50">alloc::slice::&lt;impl [T..</text></g><g><title>alloc::slice::hack::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3941" width="14.5620%" height="15" fill="rgb(251,219,26)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3951.50">alloc::slice::hack::to..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3925" width="14.5620%" height="15" fill="rgb(231,119,3)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3935.50">&lt;T as alloc::slice::ha..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3909" width="14.5620%" height="15" fill="rgb(216,97,11)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3919.50">&lt;css_bitvector_compile..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3893" width="14.5620%" height="15" fill="rgb(223,59,9)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3903.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3877" width="14.5620%" height="15" fill="rgb(233,93,31)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3887.50">alloc::slice::&lt;impl [T..</text></g><g><title>alloc::slice::hack::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3861" width="14.5620%" height="15" fill="rgb(239,81,33)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3871.50">alloc::slice::hack::to..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3845" width="14.5620%" height="15" fill="rgb(213,120,34)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3855.50">&lt;T as alloc::slice::ha..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3829" width="14.5620%" height="15" fill="rgb(243,49,53)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3839.50">&lt;css_bitvector_compile..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3813" width="14.5620%" height="15" fill="rgb(247,216,33)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3823.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3797" width="14.5620%" height="15" fill="rgb(226,26,14)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3807.50">alloc::slice::&lt;impl [T..</text></g><g><title>alloc::slice::hack::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3781" width="14.5620%" height="15" fill="rgb(215,49,53)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3791.50">alloc::slice::hack::to..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3765" width="14.5620%" height="15" fill="rgb(245,162,40)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3775.50">&lt;T as alloc::slice::ha..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3749" width="14.5620%" height="15" fill="rgb(229,68,17)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3759.50">&lt;css_bitvector_compile..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3733" width="14.5620%" height="15" fill="rgb(213,182,10)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3743.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3717" width="14.5620%" height="15" fill="rgb(245,125,30)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3727.50">alloc::slice::&lt;impl [T..</text></g><g><title>alloc::slice::hack::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3701" width="14.5620%" height="15" fill="rgb(232,202,2)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3711.50">alloc::slice::hack::to..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3685" width="14.5620%" height="15" fill="rgb(237,140,51)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3695.50">&lt;T as alloc::slice::ha..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3669" width="14.5620%" height="15" fill="rgb(236,157,25)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3679.50">&lt;css_bitvector_compile..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3653" width="14.5620%" height="15" fill="rgb(219,209,0)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3663.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3637" width="14.5620%" height="15" fill="rgb(240,116,54)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3647.50">alloc::slice::&lt;impl [T..</text></g><g><title>alloc::slice::hack::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3621" width="14.5620%" height="15" fill="rgb(216,10,36)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3631.50">alloc::slice::hack::to..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3605" width="14.5620%" height="15" fill="rgb(222,72,44)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3615.50">&lt;T as alloc::slice::ha..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3589" width="14.5620%" height="15" fill="rgb(232,159,9)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3599.50">&lt;css_bitvector_compile..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3573" width="14.5620%" height="15" fill="rgb(210,39,32)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3583.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3557" width="14.5620%" height="15" fill="rgb(216,194,45)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3567.50">alloc::slice::&lt;impl [T..</text></g><g><title>alloc::slice::hack::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3541" width="14.5620%" height="15" fill="rgb(218,18,35)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3551.50">alloc::slice::hack::to..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3525" width="14.5620%" height="15" fill="rgb(207,83,51)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3535.50">&lt;T as alloc::slice::ha..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3509" width="14.5620%" height="15" fill="rgb(225,63,43)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3519.50">&lt;css_bitvector_compile..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3493" width="14.5620%" height="15" fill="rgb(207,57,36)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3503.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3477" width="14.5620%" height="15" fill="rgb(216,99,33)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3487.50">alloc::slice::&lt;impl [T..</text></g><g><title>alloc::slice::hack::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3461" width="14.5620%" height="15" fill="rgb(225,42,16)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3471.50">alloc::slice::hack::to..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3445" width="14.5620%" height="15" fill="rgb(220,201,45)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3455.50">&lt;T as alloc::slice::ha..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3429" width="14.5620%" height="15" fill="rgb(225,33,4)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3439.50">&lt;css_bitvector_compile..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3413" width="14.5620%" height="15" fill="rgb(224,33,50)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3423.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3397" width="14.5620%" height="15" fill="rgb(246,198,51)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3407.50">alloc::slice::&lt;impl [T..</text></g><g><title>alloc::slice::hack::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3381" width="14.5620%" height="15" fill="rgb(205,22,4)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3391.50">alloc::slice::hack::to..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3365" width="14.5620%" height="15" fill="rgb(206,3,8)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3375.50">&lt;T as alloc::slice::ha..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,675,269 samples, 14.56%)</title><rect x="43.7564%" y="3349" width="14.5620%" height="15" fill="rgb(251,23,15)" fg:x="59121041" fg:w="19675269"/><text x="44.0064%" y="3359.50">&lt;css_bitvector_compile..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,444,711 samples, 2.55%)</title><rect x="55.7688%" y="3333" width="2.5495%" height="15" fill="rgb(252,88,28)" fg:x="75351599" fg:w="3444711"/><text x="56.0188%" y="3343.50">&lt;c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,444,711 samples, 2.55%)</title><rect x="55.7688%" y="3317" width="2.5495%" height="15" fill="rgb(212,127,14)" fg:x="75351599" fg:w="3444711"/><text x="56.0188%" y="3327.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,444,711 samples, 2.55%)</title><rect x="55.7688%" y="3301" width="2.5495%" height="15" fill="rgb(247,145,37)" fg:x="75351599" fg:w="3444711"/><text x="56.0188%" y="3311.50">al..</text></g><g><title>alloc::slice::hack::to_vec (3,444,711 samples, 2.55%)</title><rect x="55.7688%" y="3285" width="2.5495%" height="15" fill="rgb(209,117,53)" fg:x="75351599" fg:w="3444711"/><text x="56.0188%" y="3295.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,444,711 samples, 2.55%)</title><rect x="55.7688%" y="3269" width="2.5495%" height="15" fill="rgb(212,90,42)" fg:x="75351599" fg:w="3444711"/><text x="56.0188%" y="3279.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,444,711 samples, 2.55%)</title><rect x="55.7688%" y="3253" width="2.5495%" height="15" fill="rgb(218,164,37)" fg:x="75351599" fg:w="3444711"/><text x="56.0188%" y="3263.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,444,711 samples, 2.55%)</title><rect x="55.7688%" y="3237" width="2.5495%" height="15" fill="rgb(246,65,34)" fg:x="75351599" fg:w="3444711"/><text x="56.0188%" y="3247.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,444,711 samples, 2.55%)</title><rect x="55.7688%" y="3221" width="2.5495%" height="15" fill="rgb(231,100,33)" fg:x="75351599" fg:w="3444711"/><text x="56.0188%" y="3231.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,444,711 samples, 2.55%)</title><rect x="55.7688%" y="3205" width="2.5495%" height="15" fill="rgb(228,126,14)" fg:x="75351599" fg:w="3444711"/><text x="56.0188%" y="3215.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,444,711 samples, 2.55%)</title><rect x="55.7688%" y="3189" width="2.5495%" height="15" fill="rgb(215,173,21)" fg:x="75351599" fg:w="3444711"/><text x="56.0188%" y="3199.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (3,444,711 samples, 2.55%)</title><rect x="55.7688%" y="3173" width="2.5495%" height="15" fill="rgb(210,6,40)" fg:x="75351599" fg:w="3444711"/><text x="56.0188%" y="3183.50">al..</text></g><g><title>alloc::alloc::alloc (3,444,711 samples, 2.55%)</title><rect x="55.7688%" y="3157" width="2.5495%" height="15" fill="rgb(212,48,18)" fg:x="75351599" fg:w="3444711"/><text x="56.0188%" y="3167.50">al..</text></g><g><title>malloc (3,444,711 samples, 2.55%)</title><rect x="55.7688%" y="3141" width="2.5495%" height="15" fill="rgb(230,214,11)" fg:x="75351599" fg:w="3444711"/><text x="56.0188%" y="3151.50">ma..</text></g><g><title>[libc.so.6] (3,444,711 samples, 2.55%)</title><rect x="55.7688%" y="3125" width="2.5495%" height="15" fill="rgb(254,105,39)" fg:x="75351599" fg:w="3444711"/><text x="56.0188%" y="3135.50">[l..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3333" width="2.2010%" height="15" fill="rgb(245,158,5)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3343.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3317" width="2.2010%" height="15" fill="rgb(249,208,11)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3327.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3301" width="2.2010%" height="15" fill="rgb(210,39,28)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3311.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3285" width="2.2010%" height="15" fill="rgb(211,56,53)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3295.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3269" width="2.2010%" height="15" fill="rgb(226,201,30)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3279.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3253" width="2.2010%" height="15" fill="rgb(239,101,34)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3263.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3237" width="2.2010%" height="15" fill="rgb(226,209,5)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3247.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3221" width="2.2010%" height="15" fill="rgb(250,105,47)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3231.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3205" width="2.2010%" height="15" fill="rgb(230,72,3)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3215.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3189" width="2.2010%" height="15" fill="rgb(232,218,39)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3199.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3173" width="2.2010%" height="15" fill="rgb(248,166,6)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3183.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3157" width="2.2010%" height="15" fill="rgb(247,89,20)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3167.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3141" width="2.2010%" height="15" fill="rgb(248,130,54)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3151.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3125" width="2.2010%" height="15" fill="rgb(234,196,4)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3135.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3109" width="2.2010%" height="15" fill="rgb(250,143,31)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3119.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3093" width="2.2010%" height="15" fill="rgb(211,110,34)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3103.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3077" width="2.2010%" height="15" fill="rgb(215,124,48)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3087.50">&lt;..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3061" width="2.2010%" height="15" fill="rgb(216,46,13)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3071.50">h..</text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3045" width="2.2010%" height="15" fill="rgb(205,184,25)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3055.50">h..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3029" width="2.2010%" height="15" fill="rgb(228,1,10)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3039.50">h..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="3013" width="2.2010%" height="15" fill="rgb(213,116,27)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3023.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="2997" width="2.2010%" height="15" fill="rgb(241,95,50)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="3007.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="2981" width="2.2010%" height="15" fill="rgb(238,48,32)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="2991.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="2965" width="2.2010%" height="15" fill="rgb(235,113,49)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="2975.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="2949" width="2.2010%" height="15" fill="rgb(205,127,43)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="2959.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="2933" width="2.2010%" height="15" fill="rgb(250,162,2)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="2943.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="2917" width="2.2010%" height="15" fill="rgb(220,13,41)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="2927.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="2901" width="2.2010%" height="15" fill="rgb(249,221,25)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="2911.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="2885" width="2.2010%" height="15" fill="rgb(215,208,19)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="2895.50">a..</text></g><g><title>cfree (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="2869" width="2.2010%" height="15" fill="rgb(236,175,2)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="2879.50">c..</text></g><g><title>[libc.so.6] (2,973,809 samples, 2.20%)</title><rect x="58.3183%" y="2853" width="2.2010%" height="15" fill="rgb(241,52,2)" fg:x="78796310" fg:w="2973809"/><text x="58.5683%" y="2863.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,423,615 samples, 4.75%)</title><rect x="58.3183%" y="3445" width="4.7542%" height="15" fill="rgb(248,140,14)" fg:x="78796310" fg:w="6423615"/><text x="58.5683%" y="3455.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,423,615 samples, 4.75%)</title><rect x="58.3183%" y="3429" width="4.7542%" height="15" fill="rgb(253,22,42)" fg:x="78796310" fg:w="6423615"/><text x="58.5683%" y="3439.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,423,615 samples, 4.75%)</title><rect x="58.3183%" y="3413" width="4.7542%" height="15" fill="rgb(234,61,47)" fg:x="78796310" fg:w="6423615"/><text x="58.5683%" y="3423.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,423,615 samples, 4.75%)</title><rect x="58.3183%" y="3397" width="4.7542%" height="15" fill="rgb(208,226,15)" fg:x="78796310" fg:w="6423615"/><text x="58.5683%" y="3407.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,423,615 samples, 4.75%)</title><rect x="58.3183%" y="3381" width="4.7542%" height="15" fill="rgb(217,221,4)" fg:x="78796310" fg:w="6423615"/><text x="58.5683%" y="3391.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,423,615 samples, 4.75%)</title><rect x="58.3183%" y="3365" width="4.7542%" height="15" fill="rgb(212,174,34)" fg:x="78796310" fg:w="6423615"/><text x="58.5683%" y="3375.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,423,615 samples, 4.75%)</title><rect x="58.3183%" y="3349" width="4.7542%" height="15" fill="rgb(253,83,4)" fg:x="78796310" fg:w="6423615"/><text x="58.5683%" y="3359.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,449,806 samples, 2.55%)</title><rect x="60.5193%" y="3333" width="2.5533%" height="15" fill="rgb(250,195,49)" fg:x="81770119" fg:w="3449806"/><text x="60.7693%" y="3343.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,449,806 samples, 2.55%)</title><rect x="60.5193%" y="3317" width="2.5533%" height="15" fill="rgb(241,192,25)" fg:x="81770119" fg:w="3449806"/><text x="60.7693%" y="3327.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,449,806 samples, 2.55%)</title><rect x="60.5193%" y="3301" width="2.5533%" height="15" fill="rgb(208,124,10)" fg:x="81770119" fg:w="3449806"/><text x="60.7693%" y="3311.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,449,806 samples, 2.55%)</title><rect x="60.5193%" y="3285" width="2.5533%" height="15" fill="rgb(222,33,0)" fg:x="81770119" fg:w="3449806"/><text x="60.7693%" y="3295.50">co..</text></g><g><title>cfree (3,449,806 samples, 2.55%)</title><rect x="60.5193%" y="3269" width="2.5533%" height="15" fill="rgb(234,209,28)" fg:x="81770119" fg:w="3449806"/><text x="60.7693%" y="3279.50">cf..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3781" width="7.2884%" height="15" fill="rgb(224,11,23)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3791.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3765" width="7.2884%" height="15" fill="rgb(232,99,1)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3775.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3749" width="7.2884%" height="15" fill="rgb(237,95,45)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3759.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3733" width="7.2884%" height="15" fill="rgb(208,109,11)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3743.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3717" width="7.2884%" height="15" fill="rgb(216,190,48)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3727.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3701" width="7.2884%" height="15" fill="rgb(251,171,36)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3711.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3685" width="7.2884%" height="15" fill="rgb(230,62,22)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3695.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3669" width="7.2884%" height="15" fill="rgb(225,114,35)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3679.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3653" width="7.2884%" height="15" fill="rgb(215,118,42)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3663.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3637" width="7.2884%" height="15" fill="rgb(243,119,21)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3647.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3621" width="7.2884%" height="15" fill="rgb(252,177,53)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3631.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3605" width="7.2884%" height="15" fill="rgb(237,209,29)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3615.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3589" width="7.2884%" height="15" fill="rgb(212,65,23)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3599.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3573" width="7.2884%" height="15" fill="rgb(230,222,46)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3583.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3557" width="7.2884%" height="15" fill="rgb(215,135,32)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3567.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3541" width="7.2884%" height="15" fill="rgb(246,101,22)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3551.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3525" width="7.2884%" height="15" fill="rgb(206,107,13)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3535.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3509" width="7.2884%" height="15" fill="rgb(250,100,44)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3519.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3493" width="7.2884%" height="15" fill="rgb(231,147,38)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3503.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3477" width="7.2884%" height="15" fill="rgb(229,8,40)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3487.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,847,634 samples, 7.29%)</title><rect x="58.3183%" y="3461" width="7.2884%" height="15" fill="rgb(221,135,30)" fg:x="78796310" fg:w="9847634"/><text x="58.5683%" y="3471.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,424,019 samples, 2.53%)</title><rect x="63.0725%" y="3445" width="2.5342%" height="15" fill="rgb(249,193,18)" fg:x="85219925" fg:w="3424019"/><text x="63.3225%" y="3455.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,424,019 samples, 2.53%)</title><rect x="63.0725%" y="3429" width="2.5342%" height="15" fill="rgb(209,133,39)" fg:x="85219925" fg:w="3424019"/><text x="63.3225%" y="3439.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,424,019 samples, 2.53%)</title><rect x="63.0725%" y="3413" width="2.5342%" height="15" fill="rgb(232,100,14)" fg:x="85219925" fg:w="3424019"/><text x="63.3225%" y="3423.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,424,019 samples, 2.53%)</title><rect x="63.0725%" y="3397" width="2.5342%" height="15" fill="rgb(224,185,1)" fg:x="85219925" fg:w="3424019"/><text x="63.3225%" y="3407.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (3,424,019 samples, 2.53%)</title><rect x="63.0725%" y="3381" width="2.5342%" height="15" fill="rgb(223,139,8)" fg:x="85219925" fg:w="3424019"/><text x="63.3225%" y="3391.50">al..</text></g><g><title>cfree (3,424,019 samples, 2.53%)</title><rect x="63.0725%" y="3365" width="2.5342%" height="15" fill="rgb(232,213,38)" fg:x="85219925" fg:w="3424019"/><text x="63.3225%" y="3375.50">cf..</text></g><g><title>[libc.so.6] (3,424,019 samples, 2.53%)</title><rect x="63.0725%" y="3349" width="2.5342%" height="15" fill="rgb(207,94,22)" fg:x="85219925" fg:w="3424019"/><text x="63.3225%" y="3359.50">[l..</text></g><g><title>[libc.so.6] (3,424,019 samples, 2.53%)</title><rect x="63.0725%" y="3333" width="2.5342%" height="15" fill="rgb(219,183,54)" fg:x="85219925" fg:w="3424019"/><text x="63.3225%" y="3343.50">[l..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (13,439,488 samples, 9.95%)</title><rect x="58.3183%" y="3989" width="9.9468%" height="15" fill="rgb(216,185,54)" fg:x="78796310" fg:w="13439488"/><text x="58.5683%" y="3999.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,439,488 samples, 9.95%)</title><rect x="58.3183%" y="3973" width="9.9468%" height="15" fill="rgb(254,217,39)" fg:x="78796310" fg:w="13439488"/><text x="58.5683%" y="3983.50">core::ptr::dro..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,439,488 samples, 9.95%)</title><rect x="58.3183%" y="3957" width="9.9468%" height="15" fill="rgb(240,178,23)" fg:x="78796310" fg:w="13439488"/><text x="58.5683%" y="3967.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (13,439,488 samples, 9.95%)</title><rect x="58.3183%" y="3941" width="9.9468%" height="15" fill="rgb(218,11,47)" fg:x="78796310" fg:w="13439488"/><text x="58.5683%" y="3951.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (13,439,488 samples, 9.95%)</title><rect x="58.3183%" y="3925" width="9.9468%" height="15" fill="rgb(218,51,51)" fg:x="78796310" fg:w="13439488"/><text x="58.5683%" y="3935.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,439,488 samples, 9.95%)</title><rect x="58.3183%" y="3909" width="9.9468%" height="15" fill="rgb(238,126,27)" fg:x="78796310" fg:w="13439488"/><text x="58.5683%" y="3919.50">core::ptr::dro..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,439,488 samples, 9.95%)</title><rect x="58.3183%" y="3893" width="9.9468%" height="15" fill="rgb(249,202,22)" fg:x="78796310" fg:w="13439488"/><text x="58.5683%" y="3903.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (13,439,488 samples, 9.95%)</title><rect x="58.3183%" y="3877" width="9.9468%" height="15" fill="rgb(254,195,49)" fg:x="78796310" fg:w="13439488"/><text x="58.5683%" y="3887.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (13,439,488 samples, 9.95%)</title><rect x="58.3183%" y="3861" width="9.9468%" height="15" fill="rgb(208,123,14)" fg:x="78796310" fg:w="13439488"/><text x="58.5683%" y="3871.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,439,488 samples, 9.95%)</title><rect x="58.3183%" y="3845" width="9.9468%" height="15" fill="rgb(224,200,8)" fg:x="78796310" fg:w="13439488"/><text x="58.5683%" y="3855.50">core::ptr::dro..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,439,488 samples, 9.95%)</title><rect x="58.3183%" y="3829" width="9.9468%" height="15" fill="rgb(217,61,36)" fg:x="78796310" fg:w="13439488"/><text x="58.5683%" y="3839.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (13,439,488 samples, 9.95%)</title><rect x="58.3183%" y="3813" width="9.9468%" height="15" fill="rgb(206,35,45)" fg:x="78796310" fg:w="13439488"/><text x="58.5683%" y="3823.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (13,439,488 samples, 9.95%)</title><rect x="58.3183%" y="3797" width="9.9468%" height="15" fill="rgb(217,65,33)" fg:x="78796310" fg:w="13439488"/><text x="58.5683%" y="3807.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,591,854 samples, 2.66%)</title><rect x="65.6067%" y="3781" width="2.6584%" height="15" fill="rgb(222,158,48)" fg:x="88643944" fg:w="3591854"/><text x="65.8567%" y="3791.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,591,854 samples, 2.66%)</title><rect x="65.6067%" y="3765" width="2.6584%" height="15" fill="rgb(254,2,54)" fg:x="88643944" fg:w="3591854"/><text x="65.8567%" y="3775.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,591,854 samples, 2.66%)</title><rect x="65.6067%" y="3749" width="2.6584%" height="15" fill="rgb(250,143,38)" fg:x="88643944" fg:w="3591854"/><text x="65.8567%" y="3759.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,591,854 samples, 2.66%)</title><rect x="65.6067%" y="3733" width="2.6584%" height="15" fill="rgb(248,25,0)" fg:x="88643944" fg:w="3591854"/><text x="65.8567%" y="3743.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,591,854 samples, 2.66%)</title><rect x="65.6067%" y="3717" width="2.6584%" height="15" fill="rgb(206,152,27)" fg:x="88643944" fg:w="3591854"/><text x="65.8567%" y="3727.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,591,854 samples, 2.66%)</title><rect x="65.6067%" y="3701" width="2.6584%" height="15" fill="rgb(240,77,30)" fg:x="88643944" fg:w="3591854"/><text x="65.8567%" y="3711.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (3,591,854 samples, 2.66%)</title><rect x="65.6067%" y="3685" width="2.6584%" height="15" fill="rgb(231,5,3)" fg:x="88643944" fg:w="3591854"/><text x="65.8567%" y="3695.50">ha..</text></g><g><title>main::benchmark::apply_frame_modifications (3,107,118 samples, 2.30%)</title><rect x="68.2651%" y="3989" width="2.2996%" height="15" fill="rgb(207,226,32)" fg:x="92235798" fg:w="3107118"/><text x="68.5151%" y="3999.50">m..</text></g><g><title>std::io::stdio::_print (3,107,118 samples, 2.30%)</title><rect x="68.2651%" y="3973" width="2.2996%" height="15" fill="rgb(222,207,47)" fg:x="92235798" fg:w="3107118"/><text x="68.5151%" y="3983.50">s..</text></g><g><title>std::io::stdio::print_to (3,107,118 samples, 2.30%)</title><rect x="68.2651%" y="3957" width="2.2996%" height="15" fill="rgb(229,115,45)" fg:x="92235798" fg:w="3107118"/><text x="68.5151%" y="3967.50">s..</text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (3,107,118 samples, 2.30%)</title><rect x="68.2651%" y="3941" width="2.2996%" height="15" fill="rgb(224,191,6)" fg:x="92235798" fg:w="3107118"/><text x="68.5151%" y="3951.50">&lt;..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (3,107,118 samples, 2.30%)</title><rect x="68.2651%" y="3925" width="2.2996%" height="15" fill="rgb(230,227,24)" fg:x="92235798" fg:w="3107118"/><text x="68.5151%" y="3935.50">&lt;..</text></g><g><title>std::io::Write::write_fmt (3,107,118 samples, 2.30%)</title><rect x="68.2651%" y="3909" width="2.2996%" height="15" fill="rgb(228,80,19)" fg:x="92235798" fg:w="3107118"/><text x="68.5151%" y="3919.50">s..</text></g><g><title>core::fmt::write (3,107,118 samples, 2.30%)</title><rect x="68.2651%" y="3893" width="2.2996%" height="15" fill="rgb(247,229,0)" fg:x="92235798" fg:w="3107118"/><text x="68.5151%" y="3903.50">c..</text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3,107,118 samples, 2.30%)</title><rect x="68.2651%" y="3877" width="2.2996%" height="15" fill="rgb(237,194,15)" fg:x="92235798" fg:w="3107118"/><text x="68.5151%" y="3887.50">&lt;..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3,107,118 samples, 2.30%)</title><rect x="68.2651%" y="3861" width="2.2996%" height="15" fill="rgb(219,203,20)" fg:x="92235798" fg:w="3107118"/><text x="68.5151%" y="3871.50">&lt;..</text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (3,107,118 samples, 2.30%)</title><rect x="68.2651%" y="3845" width="2.2996%" height="15" fill="rgb(234,128,8)" fg:x="92235798" fg:w="3107118"/><text x="68.5151%" y="3855.50">&lt;..</text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (3,107,118 samples, 2.30%)</title><rect x="68.2651%" y="3829" width="2.2996%" height="15" fill="rgb(248,202,8)" fg:x="92235798" fg:w="3107118"/><text x="68.5151%" y="3839.50">&lt;..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_node_generated_bitvector_incremental (3,068,941 samples, 2.27%)</title><rect x="70.5647%" y="3941" width="2.2714%" height="15" fill="rgb(206,104,37)" fg:x="95342916" fg:w="3068941"/><text x="70.8147%" y="3951.50">c..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::matches_id_id (3,068,941 samples, 2.27%)</title><rect x="70.5647%" y="3925" width="2.2714%" height="15" fill="rgb(223,8,27)" fg:x="95342916" fg:w="3068941"/><text x="70.8147%" y="3935.50">c..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::get_node_id_id (3,068,941 samples, 2.27%)</title><rect x="70.5647%" y="3909" width="2.2714%" height="15" fill="rgb(216,217,28)" fg:x="95342916" fg:w="3068941"/><text x="70.8147%" y="3919.50">c..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (3,068,941 samples, 2.27%)</title><rect x="70.5647%" y="3893" width="2.2714%" height="15" fill="rgb(249,199,1)" fg:x="95342916" fg:w="3068941"/><text x="70.8147%" y="3903.50">c..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::get_node_id_id::_{{closure}} (3,068,941 samples, 2.27%)</title><rect x="70.5647%" y="3877" width="2.2714%" height="15" fill="rgb(240,85,17)" fg:x="95342916" fg:w="3068941"/><text x="70.8147%" y="3887.50">c..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,068,941 samples, 2.27%)</title><rect x="70.5647%" y="3861" width="2.2714%" height="15" fill="rgb(206,108,45)" fg:x="95342916" fg:w="3068941"/><text x="70.8147%" y="3871.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,068,941 samples, 2.27%)</title><rect x="70.5647%" y="3845" width="2.2714%" height="15" fill="rgb(245,210,41)" fg:x="95342916" fg:w="3068941"/><text x="70.8147%" y="3855.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,068,941 samples, 2.27%)</title><rect x="70.5647%" y="3829" width="2.2714%" height="15" fill="rgb(206,13,37)" fg:x="95342916" fg:w="3068941"/><text x="70.8147%" y="3839.50">h..</text></g><g><title>hashbrown::map::make_hash (3,068,941 samples, 2.27%)</title><rect x="70.5647%" y="3813" width="2.2714%" height="15" fill="rgb(250,61,18)" fg:x="95342916" fg:w="3068941"/><text x="70.8147%" y="3823.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (3,068,941 samples, 2.27%)</title><rect x="70.5647%" y="3797" width="2.2714%" height="15" fill="rgb(235,172,48)" fg:x="95342916" fg:w="3068941"/><text x="70.8147%" y="3807.50">c..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3,068,941 samples, 2.27%)</title><rect x="70.5647%" y="3781" width="2.2714%" height="15" fill="rgb(249,201,17)" fg:x="95342916" fg:w="3068941"/><text x="70.8147%" y="3791.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,068,941 samples, 2.27%)</title><rect x="70.5647%" y="3765" width="2.2714%" height="15" fill="rgb(219,208,6)" fg:x="95342916" fg:w="3068941"/><text x="70.8147%" y="3775.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,068,941 samples, 2.27%)</title><rect x="70.5647%" y="3749" width="2.2714%" height="15" fill="rgb(248,31,23)" fg:x="95342916" fg:w="3068941"/><text x="70.8147%" y="3759.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3,068,941 samples, 2.27%)</title><rect x="70.5647%" y="3733" width="2.2714%" height="15" fill="rgb(245,15,42)" fg:x="95342916" fg:w="3068941"/><text x="70.8147%" y="3743.50">&lt;..</text></g><g><title>main::benchmark::invoke_bitvector_layout (6,665,212 samples, 4.93%)</title><rect x="70.5647%" y="3989" width="4.9330%" height="15" fill="rgb(222,217,39)" fg:x="95342916" fg:w="6665212"/><text x="70.8147%" y="3999.50">main::..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_bitvector_incremental_with_stats (6,665,212 samples, 4.93%)</title><rect x="70.5647%" y="3973" width="4.9330%" height="15" fill="rgb(210,219,27)" fg:x="95342916" fg:w="6665212"/><text x="70.8147%" y="3983.50">css_bi..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_recursive_bitvector_incremental (6,665,212 samples, 4.93%)</title><rect x="70.5647%" y="3957" width="4.9330%" height="15" fill="rgb(252,166,36)" fg:x="95342916" fg:w="6665212"/><text x="70.8147%" y="3967.50">css_bi..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_recursive_bitvector_incremental (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3941" width="2.6617%" height="15" fill="rgb(245,132,34)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3951.50">cs..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_node_generated_bitvector_incremental (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3925" width="2.6617%" height="15" fill="rgb(236,54,3)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3935.50">cs..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::matches_id_id (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3909" width="2.6617%" height="15" fill="rgb(241,173,43)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3919.50">cs..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::get_node_id_id (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3893" width="2.6617%" height="15" fill="rgb(215,190,9)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3903.50">cs..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3877" width="2.6617%" height="15" fill="rgb(242,101,16)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3887.50">co..</text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::get_node_id_id::_{{closure}} (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3861" width="2.6617%" height="15" fill="rgb(223,190,21)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3871.50">cs..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3845" width="2.6617%" height="15" fill="rgb(215,228,25)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3855.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3829" width="2.6617%" height="15" fill="rgb(225,36,22)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3839.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3813" width="2.6617%" height="15" fill="rgb(251,106,46)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3823.50">ha..</text></g><g><title>hashbrown::map::make_hash (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3797" width="2.6617%" height="15" fill="rgb(208,90,1)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3807.50">ha..</text></g><g><title>core::hash::BuildHasher::hash_one (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3781" width="2.6617%" height="15" fill="rgb(243,10,4)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3791.50">co..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3765" width="2.6617%" height="15" fill="rgb(212,137,27)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3775.50">&lt;s..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3749" width="2.6617%" height="15" fill="rgb(231,220,49)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3759.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3733" width="2.6617%" height="15" fill="rgb(237,96,20)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3743.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3717" width="2.6617%" height="15" fill="rgb(239,229,30)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3727.50">&lt;c..</text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3,596,271 samples, 2.66%)</title><rect x="72.8361%" y="3701" width="2.6617%" height="15" fill="rgb(219,65,33)" fg:x="98411857" fg:w="3596271"/><text x="73.0861%" y="3711.50">co..</text></g><g><title>main::benchmark::benchmark_accumulated_modifications (46,466,268 samples, 34.39%)</title><rect x="43.7564%" y="4005" width="34.3904%" height="15" fill="rgb(243,134,7)" fg:x="59121041" fg:w="46466268"/><text x="44.0064%" y="4015.50">main::benchmark::benchmark_accumulated_modifications</text></g><g><title>main::benchmark::invoke_trivector_layout (3,579,181 samples, 2.65%)</title><rect x="75.4977%" y="3989" width="2.6490%" height="15" fill="rgb(216,177,54)" fg:x="102008128" fg:w="3579181"/><text x="75.7477%" y="3999.50">ma..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_tree_incremental_with_stats (3,579,181 samples, 2.65%)</title><rect x="75.4977%" y="3973" width="2.6490%" height="15" fill="rgb(211,160,20)" fg:x="102008128" fg:w="3579181"/><text x="75.7477%" y="3983.50">cs..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_tree_recursive_incremental (3,579,181 samples, 2.65%)</title><rect x="75.4977%" y="3957" width="2.6490%" height="15" fill="rgb(239,85,39)" fg:x="102008128" fg:w="3579181"/><text x="75.7477%" y="3967.50">cs..</text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_incremental (3,579,181 samples, 2.65%)</title><rect x="75.4977%" y="3941" width="2.6490%" height="15" fill="rgb(232,125,22)" fg:x="102008128" fg:w="3579181"/><text x="75.7477%" y="3951.50">cs..</text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (3,579,181 samples, 2.65%)</title><rect x="75.4977%" y="3925" width="2.6490%" height="15" fill="rgb(244,57,34)" fg:x="102008128" fg:w="3579181"/><text x="75.7477%" y="3935.50">cs..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,373,371 samples, 1.02%)</title><rect x="78.1467%" y="3077" width="1.0165%" height="15" fill="rgb(214,203,32)" fg:x="105587309" fg:w="1373371"/><text x="78.3967%" y="3087.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,373,371 samples, 1.02%)</title><rect x="78.1467%" y="3061" width="1.0165%" height="15" fill="rgb(207,58,43)" fg:x="105587309" fg:w="1373371"/><text x="78.3967%" y="3071.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,373,371 samples, 1.02%)</title><rect x="78.1467%" y="3045" width="1.0165%" height="15" fill="rgb(215,193,15)" fg:x="105587309" fg:w="1373371"/><text x="78.3967%" y="3055.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,373,371 samples, 1.02%)</title><rect x="78.1467%" y="3029" width="1.0165%" height="15" fill="rgb(232,15,44)" fg:x="105587309" fg:w="1373371"/><text x="78.3967%" y="3039.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,373,371 samples, 1.02%)</title><rect x="78.1467%" y="3013" width="1.0165%" height="15" fill="rgb(212,3,48)" fg:x="105587309" fg:w="1373371"/><text x="78.3967%" y="3023.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,373,371 samples, 1.02%)</title><rect x="78.1467%" y="2997" width="1.0165%" height="15" fill="rgb(218,128,7)" fg:x="105587309" fg:w="1373371"/><text x="78.3967%" y="3007.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,373,371 samples, 1.02%)</title><rect x="78.1467%" y="2981" width="1.0165%" height="15" fill="rgb(226,216,39)" fg:x="105587309" fg:w="1373371"/><text x="78.3967%" y="2991.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1893" width="3.3577%" height="15" fill="rgb(243,47,51)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1903.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1877" width="3.3577%" height="15" fill="rgb(241,183,40)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1887.50">&lt;co..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1861" width="3.3577%" height="15" fill="rgb(231,217,32)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1871.50">ser..</text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1845" width="3.3577%" height="15" fill="rgb(229,61,38)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1855.50">&lt;se..</text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1829" width="3.3577%" height="15" fill="rgb(225,210,5)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1839.50">&lt;se..</text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1813" width="3.3577%" height="15" fill="rgb(231,79,45)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1823.50">&lt;se..</text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1797" width="3.3577%" height="15" fill="rgb(224,100,7)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1807.50">all..</text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1781" width="3.3577%" height="15" fill="rgb(241,198,18)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1791.50">all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1765" width="3.3577%" height="15" fill="rgb(252,97,53)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1775.50">all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1749" width="3.3577%" height="15" fill="rgb(220,88,7)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1759.50">all..</text></g><g><title>alloc::slice::hack::to_vec (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1733" width="3.3577%" height="15" fill="rgb(213,176,14)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1743.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1717" width="3.3577%" height="15" fill="rgb(246,73,7)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1727.50">&lt;T ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1701" width="3.3577%" height="15" fill="rgb(245,64,36)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1711.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1685" width="3.3577%" height="15" fill="rgb(245,80,10)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1695.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1669" width="3.3577%" height="15" fill="rgb(232,107,50)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1679.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1653" width="3.3577%" height="15" fill="rgb(253,3,0)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1663.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1637" width="3.3577%" height="15" fill="rgb(212,99,53)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1647.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1621" width="3.3577%" height="15" fill="rgb(249,111,54)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1631.50">all..</text></g><g><title>alloc::alloc::alloc (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1605" width="3.3577%" height="15" fill="rgb(249,55,30)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1615.50">all..</text></g><g><title>malloc (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1589" width="3.3577%" height="15" fill="rgb(237,47,42)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1599.50">mal..</text></g><g><title>[libc.so.6] (4,536,760 samples, 3.36%)</title><rect x="81.0286%" y="1573" width="3.3577%" height="15" fill="rgb(211,20,18)" fg:x="109481134" fg:w="4536760"/><text x="81.2786%" y="1583.50">[li..</text></g><g><title>serde::de::MapAccess::next_entry (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="1093" width="3.3257%" height="15" fill="rgb(231,203,46)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="1103.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="1077" width="3.3257%" height="15" fill="rgb(237,142,3)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="1087.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="1061" width="3.3257%" height="15" fill="rgb(241,107,1)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="1071.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="1045" width="3.3257%" height="15" fill="rgb(229,83,13)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="1055.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="1029" width="3.3257%" height="15" fill="rgb(241,91,40)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="1039.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="1013" width="3.3257%" height="15" fill="rgb(225,3,45)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="1023.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="997" width="3.3257%" height="15" fill="rgb(244,223,14)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="1007.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="981" width="3.3257%" height="15" fill="rgb(224,124,37)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="991.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="965" width="3.3257%" height="15" fill="rgb(251,171,30)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="975.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="949" width="3.3257%" height="15" fill="rgb(236,46,54)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="959.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="933" width="3.3257%" height="15" fill="rgb(245,213,5)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="943.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="917" width="3.3257%" height="15" fill="rgb(230,144,27)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="927.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="901" width="3.3257%" height="15" fill="rgb(220,86,6)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="911.50">&lt;se..</text></g><g><title>serde::de::MapAccess::next_entry (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="885" width="3.3257%" height="15" fill="rgb(240,20,13)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="895.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="869" width="3.3257%" height="15" fill="rgb(217,89,34)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="879.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="853" width="3.3257%" height="15" fill="rgb(229,13,5)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="863.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="837" width="3.3257%" height="15" fill="rgb(244,67,35)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="847.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="821" width="3.3257%" height="15" fill="rgb(221,40,2)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="831.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="805" width="3.3257%" height="15" fill="rgb(237,157,21)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="815.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="789" width="3.3257%" height="15" fill="rgb(222,94,11)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="799.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="773" width="3.3257%" height="15" fill="rgb(249,113,6)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="783.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="757" width="3.3257%" height="15" fill="rgb(238,137,36)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="767.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="741" width="3.3257%" height="15" fill="rgb(210,102,26)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="751.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="725" width="3.3257%" height="15" fill="rgb(218,30,30)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="735.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="709" width="3.3257%" height="15" fill="rgb(214,67,26)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="719.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="693" width="3.3257%" height="15" fill="rgb(251,9,53)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="703.50">&lt;se..</text></g><g><title>serde::de::MapAccess::next_entry (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="677" width="3.3257%" height="15" fill="rgb(228,204,25)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="687.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="661" width="3.3257%" height="15" fill="rgb(207,153,8)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="671.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="645" width="3.3257%" height="15" fill="rgb(242,9,16)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="655.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="629" width="3.3257%" height="15" fill="rgb(217,211,10)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="639.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="613" width="3.3257%" height="15" fill="rgb(219,228,52)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="623.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="597" width="3.3257%" height="15" fill="rgb(231,92,29)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="607.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="581" width="3.3257%" height="15" fill="rgb(232,8,23)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="591.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="565" width="3.3257%" height="15" fill="rgb(216,211,34)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="575.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="549" width="3.3257%" height="15" fill="rgb(236,151,0)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="559.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="533" width="3.3257%" height="15" fill="rgb(209,168,3)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="543.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="517" width="3.3257%" height="15" fill="rgb(208,129,28)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="527.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="501" width="3.3257%" height="15" fill="rgb(229,78,22)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="511.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="485" width="3.3257%" height="15" fill="rgb(228,187,13)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="495.50">&lt;se..</text></g><g><title>serde::de::MapAccess::next_entry (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="469" width="3.3257%" height="15" fill="rgb(240,119,24)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="479.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="453" width="3.3257%" height="15" fill="rgb(209,194,42)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="463.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="437" width="3.3257%" height="15" fill="rgb(247,200,46)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="447.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="421" width="3.3257%" height="15" fill="rgb(218,76,16)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="431.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="405" width="3.3257%" height="15" fill="rgb(225,21,48)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="415.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="389" width="3.3257%" height="15" fill="rgb(239,223,50)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="399.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="373" width="3.3257%" height="15" fill="rgb(244,45,21)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="383.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="357" width="3.3257%" height="15" fill="rgb(232,33,43)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="367.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="341" width="3.3257%" height="15" fill="rgb(209,8,3)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="351.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="325" width="3.3257%" height="15" fill="rgb(214,25,53)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="335.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="309" width="3.3257%" height="15" fill="rgb(254,186,54)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="319.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,493,520 samples, 3.33%)</title><rect x="84.3863%" y="293" width="3.3257%" height="15" fill="rgb(208,174,49)" fg:x="114017894" fg:w="4493520"/><text x="84.6363%" y="303.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="277" width="1.9099%" height="15" fill="rgb(233,191,51)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="287.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="261" width="1.9099%" height="15" fill="rgb(222,134,10)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="271.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="245" width="1.9099%" height="15" fill="rgb(230,226,20)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="255.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="229" width="1.9099%" height="15" fill="rgb(251,111,25)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="239.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="213" width="1.9099%" height="15" fill="rgb(224,40,46)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="223.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="197" width="1.9099%" height="15" fill="rgb(236,108,47)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="207.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="181" width="1.9099%" height="15" fill="rgb(234,93,0)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="191.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="165" width="1.9099%" height="15" fill="rgb(224,213,32)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="175.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="149" width="1.9099%" height="15" fill="rgb(251,11,48)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="159.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="133" width="1.9099%" height="15" fill="rgb(236,173,5)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="143.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="117" width="1.9099%" height="15" fill="rgb(230,95,12)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="127.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="101" width="1.9099%" height="15" fill="rgb(232,209,1)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="111.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="85" width="1.9099%" height="15" fill="rgb(232,6,1)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="95.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="69" width="1.9099%" height="15" fill="rgb(210,224,50)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="79.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="53" width="1.9099%" height="15" fill="rgb(228,127,35)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="63.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (2,580,560 samples, 1.91%)</title><rect x="85.8022%" y="37" width="1.9099%" height="15" fill="rgb(245,102,45)" fg:x="115930854" fg:w="2580560"/><text x="86.0522%" y="47.50">s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13,312,659 samples, 9.85%)</title><rect x="79.1632%" y="2197" width="9.8529%" height="15" fill="rgb(214,1,49)" fg:x="106960680" fg:w="13312659"/><text x="79.4132%" y="2207.50">&lt;core::marker:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13,312,659 samples, 9.85%)</title><rect x="79.1632%" y="2181" width="9.8529%" height="15" fill="rgb(226,163,40)" fg:x="106960680" fg:w="13312659"/><text x="79.4132%" y="2191.50">serde_json::va..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13,312,659 samples, 9.85%)</title><rect x="79.1632%" y="2165" width="9.8529%" height="15" fill="rgb(239,212,28)" fg:x="106960680" fg:w="13312659"/><text x="79.4132%" y="2175.50">&lt;&amp;mut serde_js..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13,312,659 samples, 9.85%)</title><rect x="79.1632%" y="2149" width="9.8529%" height="15" fill="rgb(220,20,13)" fg:x="106960680" fg:w="13312659"/><text x="79.4132%" y="2159.50">&lt;serde_json::v..</text></g><g><title>serde::de::MapAccess::next_entry (13,312,659 samples, 9.85%)</title><rect x="79.1632%" y="2133" width="9.8529%" height="15" fill="rgb(210,164,35)" fg:x="106960680" fg:w="13312659"/><text x="79.4132%" y="2143.50">serde::de::Map..</text></g><g><title>serde::de::MapAccess::next_entry_seed (13,312,659 samples, 9.85%)</title><rect x="79.1632%" y="2117" width="9.8529%" height="15" fill="rgb(248,109,41)" fg:x="106960680" fg:w="13312659"/><text x="79.4132%" y="2127.50">serde::de::Map..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10,792,205 samples, 7.99%)</title><rect x="81.0286%" y="2101" width="7.9875%" height="15" fill="rgb(238,23,50)" fg:x="109481134" fg:w="10792205"/><text x="81.2786%" y="2111.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,792,205 samples, 7.99%)</title><rect x="81.0286%" y="2085" width="7.9875%" height="15" fill="rgb(211,48,49)" fg:x="109481134" fg:w="10792205"/><text x="81.2786%" y="2095.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,792,205 samples, 7.99%)</title><rect x="81.0286%" y="2069" width="7.9875%" height="15" fill="rgb(223,36,21)" fg:x="109481134" fg:w="10792205"/><text x="81.2786%" y="2079.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,792,205 samples, 7.99%)</title><rect x="81.0286%" y="2053" width="7.9875%" height="15" fill="rgb(207,123,46)" fg:x="109481134" fg:w="10792205"/><text x="81.2786%" y="2063.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (10,792,205 samples, 7.99%)</title><rect x="81.0286%" y="2037" width="7.9875%" height="15" fill="rgb(240,218,32)" fg:x="109481134" fg:w="10792205"/><text x="81.2786%" y="2047.50">&lt;serde_json..</text></g><g><title>serde::de::SeqAccess::next_element (10,792,205 samples, 7.99%)</title><rect x="81.0286%" y="2021" width="7.9875%" height="15" fill="rgb(252,5,43)" fg:x="109481134" fg:w="10792205"/><text x="81.2786%" y="2031.50">serde::de::..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (10,792,205 samples, 7.99%)</title><rect x="81.0286%" y="2005" width="7.9875%" height="15" fill="rgb(252,84,19)" fg:x="109481134" fg:w="10792205"/><text x="81.2786%" y="2015.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,792,205 samples, 7.99%)</title><rect x="81.0286%" y="1989" width="7.9875%" height="15" fill="rgb(243,152,39)" fg:x="109481134" fg:w="10792205"/><text x="81.2786%" y="1999.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,792,205 samples, 7.99%)</title><rect x="81.0286%" y="1973" width="7.9875%" height="15" fill="rgb(234,160,15)" fg:x="109481134" fg:w="10792205"/><text x="81.2786%" y="1983.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,792,205 samples, 7.99%)</title><rect x="81.0286%" y="1957" width="7.9875%" height="15" fill="rgb(237,34,20)" fg:x="109481134" fg:w="10792205"/><text x="81.2786%" y="1967.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,792,205 samples, 7.99%)</title><rect x="81.0286%" y="1941" width="7.9875%" height="15" fill="rgb(229,97,13)" fg:x="109481134" fg:w="10792205"/><text x="81.2786%" y="1951.50">&lt;serde_json..</text></g><g><title>serde::de::MapAccess::next_entry (10,792,205 samples, 7.99%)</title><rect x="81.0286%" y="1925" width="7.9875%" height="15" fill="rgb(234,71,50)" fg:x="109481134" fg:w="10792205"/><text x="81.2786%" y="1935.50">serde::de::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (10,792,205 samples, 7.99%)</title><rect x="81.0286%" y="1909" width="7.9875%" height="15" fill="rgb(253,155,4)" fg:x="109481134" fg:w="10792205"/><text x="81.2786%" y="1919.50">serde::de::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1893" width="4.6297%" height="15" fill="rgb(222,185,37)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1903.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1877" width="4.6297%" height="15" fill="rgb(251,177,13)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1887.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1861" width="4.6297%" height="15" fill="rgb(250,179,40)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1871.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1845" width="4.6297%" height="15" fill="rgb(242,44,2)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1855.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1829" width="4.6297%" height="15" fill="rgb(216,177,13)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1839.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1813" width="4.6297%" height="15" fill="rgb(216,106,43)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1823.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1797" width="4.6297%" height="15" fill="rgb(216,183,2)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1807.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1781" width="4.6297%" height="15" fill="rgb(249,75,3)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1791.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1765" width="4.6297%" height="15" fill="rgb(219,67,39)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1775.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1749" width="4.6297%" height="15" fill="rgb(253,228,2)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1759.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1733" width="4.6297%" height="15" fill="rgb(235,138,27)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1743.50">&lt;serd..</text></g><g><title>serde::de::MapAccess::next_entry (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1717" width="4.6297%" height="15" fill="rgb(236,97,51)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1727.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1701" width="4.6297%" height="15" fill="rgb(240,80,30)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1711.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1685" width="4.6297%" height="15" fill="rgb(230,178,19)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1695.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1669" width="4.6297%" height="15" fill="rgb(210,190,27)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1679.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1653" width="4.6297%" height="15" fill="rgb(222,107,31)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1663.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1637" width="4.6297%" height="15" fill="rgb(216,127,34)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1647.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1621" width="4.6297%" height="15" fill="rgb(234,116,52)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1631.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1605" width="4.6297%" height="15" fill="rgb(222,124,15)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1615.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1589" width="4.6297%" height="15" fill="rgb(231,179,28)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1599.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1573" width="4.6297%" height="15" fill="rgb(226,93,45)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1583.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1557" width="4.6297%" height="15" fill="rgb(215,8,51)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1567.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1541" width="4.6297%" height="15" fill="rgb(223,106,5)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1551.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1525" width="4.6297%" height="15" fill="rgb(250,191,5)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1535.50">&lt;serd..</text></g><g><title>serde::de::MapAccess::next_entry (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1509" width="4.6297%" height="15" fill="rgb(242,132,44)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1519.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1493" width="4.6297%" height="15" fill="rgb(251,152,29)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1503.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1477" width="4.6297%" height="15" fill="rgb(218,179,5)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1487.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1461" width="4.6297%" height="15" fill="rgb(227,67,19)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1471.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1445" width="4.6297%" height="15" fill="rgb(233,119,31)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1455.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1429" width="4.6297%" height="15" fill="rgb(241,120,22)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1439.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1413" width="4.6297%" height="15" fill="rgb(224,102,30)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1423.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1397" width="4.6297%" height="15" fill="rgb(210,164,37)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1407.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1381" width="4.6297%" height="15" fill="rgb(226,191,16)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1391.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1365" width="4.6297%" height="15" fill="rgb(214,40,45)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1375.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1349" width="4.6297%" height="15" fill="rgb(244,29,26)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1359.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1333" width="4.6297%" height="15" fill="rgb(216,16,5)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1343.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1317" width="4.6297%" height="15" fill="rgb(249,76,35)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1327.50">&lt;serd..</text></g><g><title>serde::de::MapAccess::next_entry (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1301" width="4.6297%" height="15" fill="rgb(207,11,44)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1311.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1285" width="4.6297%" height="15" fill="rgb(228,190,49)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1295.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1269" width="4.6297%" height="15" fill="rgb(214,173,12)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1279.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1253" width="4.6297%" height="15" fill="rgb(218,26,35)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1263.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1237" width="4.6297%" height="15" fill="rgb(220,200,19)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1247.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1221" width="4.6297%" height="15" fill="rgb(239,95,49)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1231.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1205" width="4.6297%" height="15" fill="rgb(235,85,53)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1215.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1189" width="4.6297%" height="15" fill="rgb(233,133,31)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1199.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1173" width="4.6297%" height="15" fill="rgb(218,25,20)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1183.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1157" width="4.6297%" height="15" fill="rgb(252,210,38)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1167.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1141" width="4.6297%" height="15" fill="rgb(242,134,21)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1151.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1125" width="4.6297%" height="15" fill="rgb(213,28,48)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1135.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,255,445 samples, 4.63%)</title><rect x="84.3863%" y="1109" width="4.6297%" height="15" fill="rgb(250,196,2)" fg:x="114017894" fg:w="6255445"/><text x="84.6363%" y="1119.50">&lt;serd..</text></g><g><title>serde::de::MapAccess::next_value (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="1093" width="1.3040%" height="15" fill="rgb(227,5,17)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="1103.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="1077" width="1.3040%" height="15" fill="rgb(221,226,24)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="1087.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="1061" width="1.3040%" height="15" fill="rgb(211,5,48)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="1071.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="1045" width="1.3040%" height="15" fill="rgb(219,150,6)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="1055.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="1029" width="1.3040%" height="15" fill="rgb(251,46,16)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="1039.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="1013" width="1.3040%" height="15" fill="rgb(220,204,40)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="1023.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="997" width="1.3040%" height="15" fill="rgb(211,85,2)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="981" width="1.3040%" height="15" fill="rgb(229,17,7)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="991.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="965" width="1.3040%" height="15" fill="rgb(239,72,28)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="949" width="1.3040%" height="15" fill="rgb(230,47,54)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="933" width="1.3040%" height="15" fill="rgb(214,50,8)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="917" width="1.3040%" height="15" fill="rgb(216,198,43)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="901" width="1.3040%" height="15" fill="rgb(234,20,35)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="885" width="1.3040%" height="15" fill="rgb(254,45,19)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="869" width="1.3040%" height="15" fill="rgb(219,14,44)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="853" width="1.3040%" height="15" fill="rgb(217,220,26)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="837" width="1.3040%" height="15" fill="rgb(213,158,28)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="821" width="1.3040%" height="15" fill="rgb(252,51,52)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="805" width="1.3040%" height="15" fill="rgb(246,89,16)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="789" width="1.3040%" height="15" fill="rgb(216,158,49)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="773" width="1.3040%" height="15" fill="rgb(236,107,19)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="783.50"></text></g><g><title>malloc (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="757" width="1.3040%" height="15" fill="rgb(228,185,30)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="767.50"></text></g><g><title>[libc.so.6] (1,761,925 samples, 1.30%)</title><rect x="87.7121%" y="741" width="1.3040%" height="15" fill="rgb(246,134,8)" fg:x="118511414" fg:w="1761925"/><text x="87.9621%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (14,448,463 samples, 10.69%)</title><rect x="79.1632%" y="2245" width="10.6935%" height="15" fill="rgb(214,143,50)" fg:x="106960680" fg:w="14448463"/><text x="79.4132%" y="2255.50">&lt;serde_json::val..</text></g><g><title>serde::de::SeqAccess::next_element (14,448,463 samples, 10.69%)</title><rect x="79.1632%" y="2229" width="10.6935%" height="15" fill="rgb(228,75,8)" fg:x="106960680" fg:w="14448463"/><text x="79.4132%" y="2239.50">serde::de::SeqAc..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (14,448,463 samples, 10.69%)</title><rect x="79.1632%" y="2213" width="10.6935%" height="15" fill="rgb(207,175,4)" fg:x="106960680" fg:w="14448463"/><text x="79.4132%" y="2223.50">&lt;serde_json::de:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed::has_next_element (1,135,804 samples, 0.84%)</title><rect x="89.0161%" y="2197" width="0.8406%" height="15" fill="rgb(205,108,24)" fg:x="120273339" fg:w="1135804"/><text x="89.2661%" y="2207.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1,135,804 samples, 0.84%)</title><rect x="89.0161%" y="2181" width="0.8406%" height="15" fill="rgb(244,120,49)" fg:x="120273339" fg:w="1135804"/><text x="89.2661%" y="2191.50"></text></g><g><title>serde::de::MapAccess::next_entry (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2549" width="11.1045%" height="15" fill="rgb(223,47,38)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2559.50">serde::de::MapAc..</text></g><g><title>serde::de::MapAccess::next_entry_seed (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2533" width="11.1045%" height="15" fill="rgb(229,179,11)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2543.50">serde::de::MapAc..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2517" width="11.1045%" height="15" fill="rgb(231,122,1)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2527.50">&lt;serde_json::de:..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2501" width="11.1045%" height="15" fill="rgb(245,119,9)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2511.50">&lt;core::marker::P..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2485" width="11.1045%" height="15" fill="rgb(241,163,25)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2495.50">serde_json::valu..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2469" width="11.1045%" height="15" fill="rgb(217,214,3)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2479.50">&lt;&amp;mut serde_json..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2453" width="11.1045%" height="15" fill="rgb(240,86,28)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2463.50">&lt;serde_json::val..</text></g><g><title>serde::de::SeqAccess::next_element (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2437" width="11.1045%" height="15" fill="rgb(215,47,9)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2447.50">serde::de::SeqAc..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2421" width="11.1045%" height="15" fill="rgb(252,25,45)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2431.50">&lt;serde_json::de:..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2405" width="11.1045%" height="15" fill="rgb(251,164,9)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2415.50">&lt;core::marker::P..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2389" width="11.1045%" height="15" fill="rgb(233,194,0)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2399.50">serde_json::valu..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2373" width="11.1045%" height="15" fill="rgb(249,111,24)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2383.50">&lt;&amp;mut serde_json..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2357" width="11.1045%" height="15" fill="rgb(250,223,3)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2367.50">&lt;serde_json::val..</text></g><g><title>serde::de::MapAccess::next_entry (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2341" width="11.1045%" height="15" fill="rgb(236,178,37)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2351.50">serde::de::MapAc..</text></g><g><title>serde::de::MapAccess::next_entry_seed (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2325" width="11.1045%" height="15" fill="rgb(241,158,50)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2335.50">serde::de::MapAc..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2309" width="11.1045%" height="15" fill="rgb(213,121,41)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2319.50">&lt;serde_json::de:..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2293" width="11.1045%" height="15" fill="rgb(240,92,3)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2303.50">&lt;core::marker::P..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2277" width="11.1045%" height="15" fill="rgb(205,123,3)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2287.50">serde_json::valu..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,003,746 samples, 11.10%)</title><rect x="79.1632%" y="2261" width="11.1045%" height="15" fill="rgb(205,97,47)" fg:x="106960680" fg:w="15003746"/><text x="79.4132%" y="2271.50">&lt;&amp;mut serde_json..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2245" width="0.4110%" height="15" fill="rgb(247,152,14)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2229" width="0.4110%" height="15" fill="rgb(248,195,53)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2239.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2213" width="0.4110%" height="15" fill="rgb(226,201,16)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2223.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2197" width="0.4110%" height="15" fill="rgb(205,98,0)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2207.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2181" width="0.4110%" height="15" fill="rgb(214,191,48)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2191.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2165" width="0.4110%" height="15" fill="rgb(237,112,39)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2175.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2149" width="0.4110%" height="15" fill="rgb(247,203,27)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2159.50"></text></g><g><title>alloc::slice::hack::to_vec (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2133" width="0.4110%" height="15" fill="rgb(235,124,28)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2143.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2117" width="0.4110%" height="15" fill="rgb(208,207,46)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2101" width="0.4110%" height="15" fill="rgb(234,176,4)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2085" width="0.4110%" height="15" fill="rgb(230,133,28)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2069" width="0.4110%" height="15" fill="rgb(211,137,40)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2053" width="0.4110%" height="15" fill="rgb(254,35,13)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2063.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2037" width="0.4110%" height="15" fill="rgb(225,49,51)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2047.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2021" width="0.4110%" height="15" fill="rgb(251,10,15)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2031.50"></text></g><g><title>alloc::alloc::alloc (555,283 samples, 0.41%)</title><rect x="89.8567%" y="2005" width="0.4110%" height="15" fill="rgb(228,207,15)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="2015.50"></text></g><g><title>malloc (555,283 samples, 0.41%)</title><rect x="89.8567%" y="1989" width="0.4110%" height="15" fill="rgb(241,99,19)" fg:x="121409143" fg:w="555283"/><text x="90.1067%" y="1999.50"></text></g><g><title>_start (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4293" width="82.4227%" height="15" fill="rgb(207,104,49)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4303.50">_start</text></g><g><title>__libc_start_main (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4277" width="82.4227%" height="15" fill="rgb(234,99,18)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4287.50">__libc_start_main</text></g><g><title>[libc.so.6] (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4261" width="82.4227%" height="15" fill="rgb(213,191,49)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4271.50">[libc.so.6]</text></g><g><title>main (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4245" width="82.4227%" height="15" fill="rgb(210,226,19)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4255.50">main</text></g><g><title>std::rt::lang_start_internal (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4229" width="82.4227%" height="15" fill="rgb(229,97,18)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4239.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4213" width="82.4227%" height="15" fill="rgb(211,167,15)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4223.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4197" width="82.4227%" height="15" fill="rgb(210,169,34)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4207.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4181" width="82.4227%" height="15" fill="rgb(241,121,31)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4191.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4165" width="82.4227%" height="15" fill="rgb(232,40,11)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4175.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4149" width="82.4227%" height="15" fill="rgb(205,86,26)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4159.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4133" width="82.4227%" height="15" fill="rgb(231,126,28)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4143.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4117" width="82.4227%" height="15" fill="rgb(219,221,18)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4127.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4101" width="82.4227%" height="15" fill="rgb(211,40,0)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4111.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4085" width="82.4227%" height="15" fill="rgb(239,85,43)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4095.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4069" width="82.4227%" height="15" fill="rgb(231,55,21)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4079.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4053" width="82.4227%" height="15" fill="rgb(225,184,43)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4063.50">core::ops::function::FnOnce::call_once</text></g><g><title>main::main (111,364,688 samples, 82.42%)</title><rect x="8.4790%" y="4037" width="82.4227%" height="15" fill="rgb(251,158,41)" fg:x="11456344" fg:w="111364688"/><text x="8.7290%" y="4047.50">main::main</text></g><g><title>main::benchmark::run_web_browser_layout_trace_benchmark (104,022,618 samples, 76.99%)</title><rect x="13.9130%" y="4021" width="76.9887%" height="15" fill="rgb(234,159,37)" fg:x="18798414" fg:w="104022618"/><text x="14.1630%" y="4031.50">main::benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>main::benchmark::parse_web_layout_trace (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="4005" width="12.7549%" height="15" fill="rgb(216,204,22)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="4015.50">main::benchmark::pa..</text></g><g><title>serde_json::de::from_str (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3989" width="12.7549%" height="15" fill="rgb(214,17,3)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3999.50">serde_json::de::fro..</text></g><g><title>serde_json::de::from_trait (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3973" width="12.7549%" height="15" fill="rgb(212,111,17)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3983.50">serde_json::de::fro..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3957" width="12.7549%" height="15" fill="rgb(221,157,24)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3967.50">serde_json::value::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3941" width="12.7549%" height="15" fill="rgb(252,16,13)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3951.50">&lt;&amp;mut serde_json::d..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3925" width="12.7549%" height="15" fill="rgb(221,62,2)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3935.50">&lt;serde_json::value:..</text></g><g><title>serde::de::MapAccess::next_entry (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3909" width="12.7549%" height="15" fill="rgb(247,87,22)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3919.50">serde::de::MapAcces..</text></g><g><title>serde::de::MapAccess::next_entry_seed (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3893" width="12.7549%" height="15" fill="rgb(215,73,9)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3903.50">serde::de::MapAcces..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3877" width="12.7549%" height="15" fill="rgb(207,175,33)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3887.50">&lt;serde_json::de::Ma..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3861" width="12.7549%" height="15" fill="rgb(243,129,54)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3871.50">&lt;core::marker::Phan..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3845" width="12.7549%" height="15" fill="rgb(227,119,45)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3855.50">serde_json::value::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3829" width="12.7549%" height="15" fill="rgb(205,109,36)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3839.50">&lt;&amp;mut serde_json::d..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3813" width="12.7549%" height="15" fill="rgb(205,6,39)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3823.50">&lt;serde_json::value:..</text></g><g><title>serde::de::MapAccess::next_entry (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3797" width="12.7549%" height="15" fill="rgb(221,32,16)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3807.50">serde::de::MapAcces..</text></g><g><title>serde::de::MapAccess::next_entry_seed (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3781" width="12.7549%" height="15" fill="rgb(228,144,50)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3791.50">serde::de::MapAcces..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3765" width="12.7549%" height="15" fill="rgb(229,201,53)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3775.50">&lt;serde_json::de::Ma..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3749" width="12.7549%" height="15" fill="rgb(249,153,27)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3759.50">&lt;core::marker::Phan..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3733" width="12.7549%" height="15" fill="rgb(227,106,25)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3743.50">serde_json::value::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3717" width="12.7549%" height="15" fill="rgb(230,65,29)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3727.50">&lt;&amp;mut serde_json::d..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3701" width="12.7549%" height="15" fill="rgb(221,57,46)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3711.50">&lt;serde_json::value:..</text></g><g><title>serde::de::SeqAccess::next_element (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3685" width="12.7549%" height="15" fill="rgb(229,161,17)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3695.50">serde::de::SeqAcces..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3669" width="12.7549%" height="15" fill="rgb(222,213,11)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3679.50">&lt;serde_json::de::Se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3653" width="12.7549%" height="15" fill="rgb(235,35,13)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3663.50">&lt;core::marker::Phan..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3637" width="12.7549%" height="15" fill="rgb(233,158,34)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3647.50">serde_json::value::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3621" width="12.7549%" height="15" fill="rgb(215,151,48)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3631.50">&lt;&amp;mut serde_json::d..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3605" width="12.7549%" height="15" fill="rgb(229,84,14)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3615.50">&lt;serde_json::value:..</text></g><g><title>serde::de::MapAccess::next_entry (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3589" width="12.7549%" height="15" fill="rgb(229,68,14)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3599.50">serde::de::MapAcces..</text></g><g><title>serde::de::MapAccess::next_entry_seed (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3573" width="12.7549%" height="15" fill="rgb(243,106,26)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3583.50">serde::de::MapAcces..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3557" width="12.7549%" height="15" fill="rgb(206,45,38)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3567.50">&lt;serde_json::de::Ma..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3541" width="12.7549%" height="15" fill="rgb(226,6,15)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3551.50">&lt;core::marker::Phan..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3525" width="12.7549%" height="15" fill="rgb(232,22,54)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3535.50">serde_json::value::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3509" width="12.7549%" height="15" fill="rgb(229,222,32)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3519.50">&lt;&amp;mut serde_json::d..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3493" width="12.7549%" height="15" fill="rgb(228,62,29)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3503.50">&lt;serde_json::value:..</text></g><g><title>serde::de::SeqAccess::next_element (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3477" width="12.7549%" height="15" fill="rgb(251,103,34)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3487.50">serde::de::SeqAcces..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3461" width="12.7549%" height="15" fill="rgb(233,12,30)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3471.50">&lt;serde_json::de::Se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3445" width="12.7549%" height="15" fill="rgb(238,52,0)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3455.50">&lt;core::marker::Phan..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3429" width="12.7549%" height="15" fill="rgb(223,98,5)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3439.50">serde_json::value::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3413" width="12.7549%" height="15" fill="rgb(228,75,37)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3423.50">&lt;&amp;mut serde_json::d..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3397" width="12.7549%" height="15" fill="rgb(205,115,49)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3407.50">&lt;serde_json::value:..</text></g><g><title>serde::de::MapAccess::next_entry (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3381" width="12.7549%" height="15" fill="rgb(250,154,43)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3391.50">serde::de::MapAcces..</text></g><g><title>serde::de::MapAccess::next_entry_seed (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3365" width="12.7549%" height="15" fill="rgb(226,43,29)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3375.50">serde::de::MapAcces..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3349" width="12.7549%" height="15" fill="rgb(249,228,39)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3359.50">&lt;serde_json::de::Ma..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3333" width="12.7549%" height="15" fill="rgb(216,79,43)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3343.50">&lt;core::marker::Phan..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3317" width="12.7549%" height="15" fill="rgb(228,95,12)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3327.50">serde_json::value::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3301" width="12.7549%" height="15" fill="rgb(249,221,15)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3311.50">&lt;&amp;mut serde_json::d..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3285" width="12.7549%" height="15" fill="rgb(233,34,13)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3295.50">&lt;serde_json::value:..</text></g><g><title>serde::de::SeqAccess::next_element (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3269" width="12.7549%" height="15" fill="rgb(214,103,39)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3279.50">serde::de::SeqAcces..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3253" width="12.7549%" height="15" fill="rgb(251,126,39)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3263.50">&lt;serde_json::de::Se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3237" width="12.7549%" height="15" fill="rgb(214,216,36)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3247.50">&lt;core::marker::Phan..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3221" width="12.7549%" height="15" fill="rgb(220,221,8)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3231.50">serde_json::value::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3205" width="12.7549%" height="15" fill="rgb(240,216,3)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3215.50">&lt;&amp;mut serde_json::d..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3189" width="12.7549%" height="15" fill="rgb(232,218,17)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3199.50">&lt;serde_json::value:..</text></g><g><title>serde::de::MapAccess::next_entry (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3173" width="12.7549%" height="15" fill="rgb(229,163,45)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3183.50">serde::de::MapAcces..</text></g><g><title>serde::de::MapAccess::next_entry_seed (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3157" width="12.7549%" height="15" fill="rgb(231,110,42)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3167.50">serde::de::MapAcces..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3141" width="12.7549%" height="15" fill="rgb(208,170,48)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3151.50">&lt;serde_json::de::Ma..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3125" width="12.7549%" height="15" fill="rgb(239,116,25)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3135.50">&lt;core::marker::Phan..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3109" width="12.7549%" height="15" fill="rgb(219,200,50)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3119.50">serde_json::value::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,233,723 samples, 12.75%)</title><rect x="78.1467%" y="3093" width="12.7549%" height="15" fill="rgb(245,200,0)" fg:x="105587309" fg:w="17233723"/><text x="78.3967%" y="3103.50">&lt;&amp;mut serde_json::d..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="3077" width="11.7385%" height="15" fill="rgb(245,119,33)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="3087.50">&lt;serde_json::valu..</text></g><g><title>serde::de::SeqAccess::next_element (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="3061" width="11.7385%" height="15" fill="rgb(231,125,12)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="3071.50">serde::de::SeqAcc..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="3045" width="11.7385%" height="15" fill="rgb(216,96,41)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="3055.50">&lt;serde_json::de::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="3029" width="11.7385%" height="15" fill="rgb(248,43,45)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="3039.50">&lt;core::marker::Ph..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="3013" width="11.7385%" height="15" fill="rgb(217,222,7)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="3023.50">serde_json::value..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2997" width="11.7385%" height="15" fill="rgb(233,28,6)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="3007.50">&lt;&amp;mut serde_json:..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2981" width="11.7385%" height="15" fill="rgb(231,218,15)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2991.50">&lt;serde_json::valu..</text></g><g><title>serde::de::MapAccess::next_entry (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2965" width="11.7385%" height="15" fill="rgb(226,171,48)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2975.50">serde::de::MapAcc..</text></g><g><title>serde::de::MapAccess::next_entry_seed (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2949" width="11.7385%" height="15" fill="rgb(235,201,9)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2959.50">serde::de::MapAcc..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2933" width="11.7385%" height="15" fill="rgb(217,80,15)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2943.50">&lt;serde_json::de::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2917" width="11.7385%" height="15" fill="rgb(219,152,8)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2927.50">&lt;core::marker::Ph..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2901" width="11.7385%" height="15" fill="rgb(243,107,38)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2911.50">serde_json::value..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2885" width="11.7385%" height="15" fill="rgb(231,17,5)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2895.50">&lt;&amp;mut serde_json:..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2869" width="11.7385%" height="15" fill="rgb(209,25,54)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2879.50">&lt;serde_json::valu..</text></g><g><title>serde::de::SeqAccess::next_element (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2853" width="11.7385%" height="15" fill="rgb(219,0,2)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2863.50">serde::de::SeqAcc..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2837" width="11.7385%" height="15" fill="rgb(246,9,5)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2847.50">&lt;serde_json::de::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2821" width="11.7385%" height="15" fill="rgb(226,159,4)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2831.50">&lt;core::marker::Ph..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2805" width="11.7385%" height="15" fill="rgb(219,175,34)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2815.50">serde_json::value..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2789" width="11.7385%" height="15" fill="rgb(236,10,46)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2799.50">&lt;&amp;mut serde_json:..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2773" width="11.7385%" height="15" fill="rgb(240,211,16)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2783.50">&lt;serde_json::valu..</text></g><g><title>serde::de::MapAccess::next_entry (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2757" width="11.7385%" height="15" fill="rgb(205,3,43)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2767.50">serde::de::MapAcc..</text></g><g><title>serde::de::MapAccess::next_entry_seed (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2741" width="11.7385%" height="15" fill="rgb(245,7,22)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2751.50">serde::de::MapAcc..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2725" width="11.7385%" height="15" fill="rgb(239,132,32)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2735.50">&lt;serde_json::de::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2709" width="11.7385%" height="15" fill="rgb(228,202,34)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2719.50">&lt;core::marker::Ph..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2693" width="11.7385%" height="15" fill="rgb(254,200,22)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2703.50">serde_json::value..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2677" width="11.7385%" height="15" fill="rgb(219,10,39)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2687.50">&lt;&amp;mut serde_json:..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2661" width="11.7385%" height="15" fill="rgb(226,210,39)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2671.50">&lt;serde_json::valu..</text></g><g><title>serde::de::SeqAccess::next_element (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2645" width="11.7385%" height="15" fill="rgb(208,219,16)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2655.50">serde::de::SeqAcc..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2629" width="11.7385%" height="15" fill="rgb(216,158,51)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2639.50">&lt;serde_json::de::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2613" width="11.7385%" height="15" fill="rgb(233,14,44)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2623.50">&lt;core::marker::Ph..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2597" width="11.7385%" height="15" fill="rgb(237,97,39)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2607.50">serde_json::value..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2581" width="11.7385%" height="15" fill="rgb(218,198,43)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2591.50">&lt;&amp;mut serde_json:..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15,860,352 samples, 11.74%)</title><rect x="79.1632%" y="2565" width="11.7385%" height="15" fill="rgb(231,104,20)" fg:x="106960680" fg:w="15860352"/><text x="79.4132%" y="2575.50">&lt;serde_json::valu..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (856,606 samples, 0.63%)</title><rect x="90.2677%" y="2549" width="0.6340%" height="15" fill="rgb(254,36,13)" fg:x="121964426" fg:w="856606"/><text x="90.5177%" y="2559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (856,606 samples, 0.63%)</title><rect x="90.2677%" y="2533" width="0.6340%" height="15" fill="rgb(248,14,50)" fg:x="121964426" fg:w="856606"/><text x="90.5177%" y="2543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (856,606 samples, 0.63%)</title><rect x="90.2677%" y="2517" width="0.6340%" height="15" fill="rgb(217,107,29)" fg:x="121964426" fg:w="856606"/><text x="90.5177%" y="2527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (856,606 samples, 0.63%)</title><rect x="90.2677%" y="2501" width="0.6340%" height="15" fill="rgb(251,169,33)" fg:x="121964426" fg:w="856606"/><text x="90.5177%" y="2511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,681,230 samples, 1.98%)</title><rect x="90.9017%" y="4293" width="1.9844%" height="15" fill="rgb(217,108,32)" fg:x="122821032" fg:w="2681230"/><text x="91.1517%" y="4303.50">a..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (2,681,230 samples, 1.98%)</title><rect x="90.9017%" y="4277" width="1.9844%" height="15" fill="rgb(219,66,42)" fg:x="122821032" fg:w="2681230"/><text x="91.1517%" y="4287.50">a..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2,681,230 samples, 1.98%)</title><rect x="90.9017%" y="4261" width="1.9844%" height="15" fill="rgb(206,180,7)" fg:x="122821032" fg:w="2681230"/><text x="91.1517%" y="4271.50">a..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2,681,230 samples, 1.98%)</title><rect x="90.9017%" y="4245" width="1.9844%" height="15" fill="rgb(208,226,31)" fg:x="122821032" fg:w="2681230"/><text x="91.1517%" y="4255.50">a..</text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2,681,230 samples, 1.98%)</title><rect x="90.9017%" y="4229" width="1.9844%" height="15" fill="rgb(218,26,49)" fg:x="122821032" fg:w="2681230"/><text x="91.1517%" y="4239.50">a..</text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (2,681,230 samples, 1.98%)</title><rect x="90.9017%" y="4213" width="1.9844%" height="15" fill="rgb(233,197,48)" fg:x="122821032" fg:w="2681230"/><text x="91.1517%" y="4223.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (2,681,230 samples, 1.98%)</title><rect x="90.9017%" y="4197" width="1.9844%" height="15" fill="rgb(252,181,51)" fg:x="122821032" fg:w="2681230"/><text x="91.1517%" y="4207.50">&lt;..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (2,681,230 samples, 1.98%)</title><rect x="90.9017%" y="4181" width="1.9844%" height="15" fill="rgb(253,90,19)" fg:x="122821032" fg:w="2681230"/><text x="91.1517%" y="4191.50">c..</text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (2,681,230 samples, 1.98%)</title><rect x="90.9017%" y="4165" width="1.9844%" height="15" fill="rgb(215,171,30)" fg:x="122821032" fg:w="2681230"/><text x="91.1517%" y="4175.50">&lt;..</text></g><g><title>cfree (3,285,326 samples, 2.43%)</title><rect x="92.8861%" y="4293" width="2.4315%" height="15" fill="rgb(214,222,9)" fg:x="125502262" fg:w="3285326"/><text x="93.1361%" y="4303.50">cf..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,561,754 samples, 2.64%)</title><rect x="95.3176%" y="4293" width="2.6361%" height="15" fill="rgb(223,3,22)" fg:x="128787588" fg:w="3561754"/><text x="95.5676%" y="4303.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,561,754 samples, 2.64%)</title><rect x="95.3176%" y="4277" width="2.6361%" height="15" fill="rgb(225,196,46)" fg:x="128787588" fg:w="3561754"/><text x="95.5676%" y="4287.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,561,754 samples, 2.64%)</title><rect x="95.3176%" y="4261" width="2.6361%" height="15" fill="rgb(209,110,37)" fg:x="128787588" fg:w="3561754"/><text x="95.5676%" y="4271.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,561,754 samples, 2.64%)</title><rect x="95.3176%" y="4245" width="2.6361%" height="15" fill="rgb(249,89,12)" fg:x="128787588" fg:w="3561754"/><text x="95.5676%" y="4255.50">co..</text></g><g><title>all (135,114,145 samples, 100%)</title><rect x="0.0000%" y="4325" width="100.0000%" height="15" fill="rgb(226,27,33)" fg:x="0" fg:w="135114145"/><text x="0.2500%" y="4335.50"></text></g><g><title>main (135,114,145 samples, 100.00%)</title><rect x="0.0000%" y="4309" width="100.0000%" height="15" fill="rgb(213,82,22)" fg:x="0" fg:w="135114145"/><text x="0.2500%" y="4319.50">main</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,764,803 samples, 2.05%)</title><rect x="97.9537%" y="4293" width="2.0463%" height="15" fill="rgb(248,140,0)" fg:x="132349342" fg:w="2764803"/><text x="98.2037%" y="4303.50">c..</text></g></svg></svg>