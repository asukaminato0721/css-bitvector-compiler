<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="3206" onload="init(evt)" viewBox="0 0 1200 3206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="3206" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="3189.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="3189.00"> </text><svg id="frames" x="10" width="1180" total_samples="229372268"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,819,052 samples, 1.23%)</title><rect x="0.0000%" y="3125" width="1.2290%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2819052"/><text x="0.2500%" y="3135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,330,276 samples, 0.58%)</title><rect x="0.6491%" y="3109" width="0.5800%" height="15" fill="rgb(217,0,24)" fg:x="1488776" fg:w="1330276"/><text x="0.8991%" y="3119.50"></text></g><g><title>alloc::slice::hack::to_vec (1,330,276 samples, 0.58%)</title><rect x="0.6491%" y="3093" width="0.5800%" height="15" fill="rgb(221,193,54)" fg:x="1488776" fg:w="1330276"/><text x="0.8991%" y="3103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,330,276 samples, 0.58%)</title><rect x="0.6491%" y="3077" width="0.5800%" height="15" fill="rgb(248,212,6)" fg:x="1488776" fg:w="1330276"/><text x="0.8991%" y="3087.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,330,276 samples, 0.58%)</title><rect x="0.6491%" y="3061" width="0.5800%" height="15" fill="rgb(208,68,35)" fg:x="1488776" fg:w="1330276"/><text x="0.8991%" y="3071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,330,276 samples, 0.58%)</title><rect x="0.6491%" y="3045" width="0.5800%" height="15" fill="rgb(232,128,0)" fg:x="1488776" fg:w="1330276"/><text x="0.8991%" y="3055.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,477,433 samples, 0.64%)</title><rect x="1.2290%" y="3125" width="0.6441%" height="15" fill="rgb(207,160,47)" fg:x="2819052" fg:w="1477433"/><text x="1.4790%" y="3135.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (834,111 samples, 0.36%)</title><rect x="1.8731%" y="3125" width="0.3636%" height="15" fill="rgb(228,23,34)" fg:x="4296485" fg:w="834111"/><text x="2.1231%" y="3135.50"></text></g><g><title>[libc.so.6] (4,540,329 samples, 1.98%)</title><rect x="2.2368%" y="3125" width="1.9795%" height="15" fill="rgb(218,30,26)" fg:x="5130596" fg:w="4540329"/><text x="2.4868%" y="3135.50">[..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,448,359 samples, 0.63%)</title><rect x="4.7126%" y="3109" width="0.6314%" height="15" fill="rgb(220,122,19)" fg:x="10809451" fg:w="1448359"/><text x="4.9626%" y="3119.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,448,359 samples, 0.63%)</title><rect x="4.7126%" y="3093" width="0.6314%" height="15" fill="rgb(250,228,42)" fg:x="10809451" fg:w="1448359"/><text x="4.9626%" y="3103.50"></text></g><g><title>[unknown] (1,523,579 samples, 0.66%)</title><rect x="5.3441%" y="3109" width="0.6642%" height="15" fill="rgb(240,193,28)" fg:x="12257810" fg:w="1523579"/><text x="5.5941%" y="3119.50"></text></g><g><title>benchmark::clear_dirty_flags (1,523,579 samples, 0.66%)</title><rect x="5.3441%" y="3093" width="0.6642%" height="15" fill="rgb(216,20,37)" fg:x="12257810" fg:w="1523579"/><text x="5.5941%" y="3103.50"></text></g><g><title>__rdl_dealloc (1,256,700 samples, 0.55%)</title><rect x="6.0083%" y="3109" width="0.5479%" height="15" fill="rgb(206,188,39)" fg:x="13781389" fg:w="1256700"/><text x="6.2583%" y="3119.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,256,700 samples, 0.55%)</title><rect x="6.0083%" y="3093" width="0.5479%" height="15" fill="rgb(217,207,13)" fg:x="13781389" fg:w="1256700"/><text x="6.2583%" y="3103.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,676,838 samples, 0.73%)</title><rect x="6.5562%" y="3109" width="0.7311%" height="15" fill="rgb(231,73,38)" fg:x="15038089" fg:w="1676838"/><text x="6.8062%" y="3119.50"></text></g><g><title>[unknown] (8,346,541 samples, 3.64%)</title><rect x="4.2163%" y="3125" width="3.6389%" height="15" fill="rgb(225,20,46)" fg:x="9670925" fg:w="8346541"/><text x="4.4663%" y="3135.50">[unk..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,302,539 samples, 0.57%)</title><rect x="7.2872%" y="3109" width="0.5679%" height="15" fill="rgb(210,31,41)" fg:x="16714927" fg:w="1302539"/><text x="7.5372%" y="3119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,302,539 samples, 0.57%)</title><rect x="7.2872%" y="3093" width="0.5679%" height="15" fill="rgb(221,200,47)" fg:x="16714927" fg:w="1302539"/><text x="7.5372%" y="3103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,302,539 samples, 0.57%)</title><rect x="7.2872%" y="3077" width="0.5679%" height="15" fill="rgb(226,26,5)" fg:x="16714927" fg:w="1302539"/><text x="7.5372%" y="3087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,302,539 samples, 0.57%)</title><rect x="7.2872%" y="3061" width="0.5679%" height="15" fill="rgb(249,33,26)" fg:x="16714927" fg:w="1302539"/><text x="7.5372%" y="3071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,302,539 samples, 0.57%)</title><rect x="7.2872%" y="3045" width="0.5679%" height="15" fill="rgb(235,183,28)" fg:x="16714927" fg:w="1302539"/><text x="7.5372%" y="3055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,302,539 samples, 0.57%)</title><rect x="7.2872%" y="3029" width="0.5679%" height="15" fill="rgb(221,5,38)" fg:x="16714927" fg:w="1302539"/><text x="7.5372%" y="3039.50"></text></g><g><title>alloc::alloc::dealloc (1,302,539 samples, 0.57%)</title><rect x="7.2872%" y="3013" width="0.5679%" height="15" fill="rgb(247,18,42)" fg:x="16714927" fg:w="1302539"/><text x="7.5372%" y="3023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,296,960 samples, 0.57%)</title><rect x="7.8551%" y="2741" width="0.5654%" height="15" fill="rgb(241,131,45)" fg:x="18017466" fg:w="1296960"/><text x="8.1051%" y="2751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,296,960 samples, 0.57%)</title><rect x="7.8551%" y="2725" width="0.5654%" height="15" fill="rgb(249,31,29)" fg:x="18017466" fg:w="1296960"/><text x="8.1051%" y="2735.50"></text></g><g><title>alloc::slice::hack::to_vec (1,296,960 samples, 0.57%)</title><rect x="7.8551%" y="2709" width="0.5654%" height="15" fill="rgb(225,111,53)" fg:x="18017466" fg:w="1296960"/><text x="8.1051%" y="2719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,296,960 samples, 0.57%)</title><rect x="7.8551%" y="2693" width="0.5654%" height="15" fill="rgb(238,160,17)" fg:x="18017466" fg:w="1296960"/><text x="8.1051%" y="2703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,296,960 samples, 0.57%)</title><rect x="7.8551%" y="2677" width="0.5654%" height="15" fill="rgb(214,148,48)" fg:x="18017466" fg:w="1296960"/><text x="8.1051%" y="2687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2389" width="0.6253%" height="15" fill="rgb(232,36,49)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2373" width="0.6253%" height="15" fill="rgb(209,103,24)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2383.50"></text></g><g><title>alloc::slice::hack::to_vec (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2357" width="0.6253%" height="15" fill="rgb(229,88,8)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2341" width="0.6253%" height="15" fill="rgb(213,181,19)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2351.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2325" width="0.6253%" height="15" fill="rgb(254,191,54)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2335.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2309" width="0.6253%" height="15" fill="rgb(241,83,37)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2293" width="0.6253%" height="15" fill="rgb(233,36,39)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2277" width="0.6253%" height="15" fill="rgb(226,3,54)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2261" width="0.6253%" height="15" fill="rgb(245,192,40)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2245" width="0.6253%" height="15" fill="rgb(238,167,29)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2229" width="0.6253%" height="15" fill="rgb(232,182,51)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2239.50"></text></g><g><title>alloc::slice::hack::to_vec (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2213" width="0.6253%" height="15" fill="rgb(231,60,39)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2197" width="0.6253%" height="15" fill="rgb(208,69,12)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2181" width="0.6253%" height="15" fill="rgb(235,93,37)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2165" width="0.6253%" height="15" fill="rgb(213,116,39)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2149" width="0.6253%" height="15" fill="rgb(222,207,29)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2133" width="0.6253%" height="15" fill="rgb(206,96,30)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2117" width="0.6253%" height="15" fill="rgb(218,138,4)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2101" width="0.6253%" height="15" fill="rgb(250,191,14)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2111.50"></text></g><g><title>alloc::alloc::alloc (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2085" width="0.6253%" height="15" fill="rgb(239,60,40)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2095.50"></text></g><g><title>malloc (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2069" width="0.6253%" height="15" fill="rgb(206,27,48)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2079.50"></text></g><g><title>[libc.so.6] (1,434,367 samples, 0.63%)</title><rect x="8.4206%" y="2053" width="0.6253%" height="15" fill="rgb(225,35,8)" fg:x="19314426" fg:w="1434367"/><text x="8.6706%" y="2063.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (4,232,837 samples, 1.85%)</title><rect x="7.8551%" y="2837" width="1.8454%" height="15" fill="rgb(250,213,24)" fg:x="18017466" fg:w="4232837"/><text x="8.1051%" y="2847.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,232,837 samples, 1.85%)</title><rect x="7.8551%" y="2821" width="1.8454%" height="15" fill="rgb(247,123,22)" fg:x="18017466" fg:w="4232837"/><text x="8.1051%" y="2831.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,232,837 samples, 1.85%)</title><rect x="7.8551%" y="2805" width="1.8454%" height="15" fill="rgb(231,138,38)" fg:x="18017466" fg:w="4232837"/><text x="8.1051%" y="2815.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,232,837 samples, 1.85%)</title><rect x="7.8551%" y="2789" width="1.8454%" height="15" fill="rgb(231,145,46)" fg:x="18017466" fg:w="4232837"/><text x="8.1051%" y="2799.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,232,837 samples, 1.85%)</title><rect x="7.8551%" y="2773" width="1.8454%" height="15" fill="rgb(251,118,11)" fg:x="18017466" fg:w="4232837"/><text x="8.1051%" y="2783.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,232,837 samples, 1.85%)</title><rect x="7.8551%" y="2757" width="1.8454%" height="15" fill="rgb(217,147,25)" fg:x="18017466" fg:w="4232837"/><text x="8.1051%" y="2767.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2741" width="1.2800%" height="15" fill="rgb(247,81,37)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2725" width="1.2800%" height="15" fill="rgb(209,12,38)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2709" width="1.2800%" height="15" fill="rgb(227,1,9)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2719.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2693" width="1.2800%" height="15" fill="rgb(248,47,43)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2677" width="1.2800%" height="15" fill="rgb(221,10,30)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2661" width="1.2800%" height="15" fill="rgb(210,229,1)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2671.50"></text></g><g><title>alloc::slice::hack::to_vec (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2645" width="1.2800%" height="15" fill="rgb(222,148,37)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2629" width="1.2800%" height="15" fill="rgb(234,67,33)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2639.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2613" width="1.2800%" height="15" fill="rgb(247,98,35)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2623.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2597" width="1.2800%" height="15" fill="rgb(247,138,52)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2581" width="1.2800%" height="15" fill="rgb(213,79,30)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2565" width="1.2800%" height="15" fill="rgb(246,177,23)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2575.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2549" width="1.2800%" height="15" fill="rgb(230,62,27)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2533" width="1.2800%" height="15" fill="rgb(216,154,8)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2517" width="1.2800%" height="15" fill="rgb(244,35,45)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2527.50"></text></g><g><title>alloc::slice::hack::to_vec (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2501" width="1.2800%" height="15" fill="rgb(251,115,12)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2485" width="1.2800%" height="15" fill="rgb(240,54,50)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2495.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2469" width="1.2800%" height="15" fill="rgb(233,84,52)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2479.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2453" width="1.2800%" height="15" fill="rgb(207,117,47)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2437" width="1.2800%" height="15" fill="rgb(249,43,39)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2421" width="1.2800%" height="15" fill="rgb(209,38,44)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2431.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,935,877 samples, 1.28%)</title><rect x="8.4206%" y="2405" width="1.2800%" height="15" fill="rgb(236,212,23)" fg:x="19314426" fg:w="2935877"/><text x="8.6706%" y="2415.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2389" width="0.6546%" height="15" fill="rgb(242,79,21)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2373" width="0.6546%" height="15" fill="rgb(211,96,35)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2357" width="0.6546%" height="15" fill="rgb(253,215,40)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2341" width="0.6546%" height="15" fill="rgb(211,81,21)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2325" width="0.6546%" height="15" fill="rgb(208,190,38)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2309" width="0.6546%" height="15" fill="rgb(235,213,38)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2319.50"></text></g><g><title>alloc::slice::hack::to_vec (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2293" width="0.6546%" height="15" fill="rgb(237,122,38)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2277" width="0.6546%" height="15" fill="rgb(244,218,35)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2261" width="0.6546%" height="15" fill="rgb(240,68,47)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2245" width="0.6546%" height="15" fill="rgb(210,16,53)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2229" width="0.6546%" height="15" fill="rgb(235,124,12)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2213" width="0.6546%" height="15" fill="rgb(224,169,11)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2197" width="0.6546%" height="15" fill="rgb(250,166,2)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2181" width="0.6546%" height="15" fill="rgb(242,216,29)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2191.50"></text></g><g><title>alloc::alloc::alloc (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2165" width="0.6546%" height="15" fill="rgb(230,116,27)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2175.50"></text></g><g><title>malloc (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2149" width="0.6546%" height="15" fill="rgb(228,99,48)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2159.50"></text></g><g><title>[libc.so.6] (1,501,510 samples, 0.65%)</title><rect x="9.0459%" y="2133" width="0.6546%" height="15" fill="rgb(253,11,6)" fg:x="20748793" fg:w="1501510"/><text x="9.2959%" y="2143.50"></text></g><g><title>alloc::fmt::format (501,504 samples, 0.22%)</title><rect x="9.7005%" y="2837" width="0.2186%" height="15" fill="rgb(247,143,39)" fg:x="22250303" fg:w="501504"/><text x="9.9505%" y="2847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (501,504 samples, 0.22%)</title><rect x="9.7005%" y="2821" width="0.2186%" height="15" fill="rgb(236,97,10)" fg:x="22250303" fg:w="501504"/><text x="9.9505%" y="2831.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (501,504 samples, 0.22%)</title><rect x="9.7005%" y="2805" width="0.2186%" height="15" fill="rgb(233,208,19)" fg:x="22250303" fg:w="501504"/><text x="9.9505%" y="2815.50"></text></g><g><title>alloc::fmt::format::format_inner (501,504 samples, 0.22%)</title><rect x="9.7005%" y="2789" width="0.2186%" height="15" fill="rgb(216,164,2)" fg:x="22250303" fg:w="501504"/><text x="9.9505%" y="2799.50"></text></g><g><title>core::fmt::Write::write_fmt (501,504 samples, 0.22%)</title><rect x="9.7005%" y="2773" width="0.2186%" height="15" fill="rgb(220,129,5)" fg:x="22250303" fg:w="501504"/><text x="9.9505%" y="2783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (501,504 samples, 0.22%)</title><rect x="9.7005%" y="2757" width="0.2186%" height="15" fill="rgb(242,17,10)" fg:x="22250303" fg:w="501504"/><text x="9.9505%" y="2767.50"></text></g><g><title>core::fmt::write (501,504 samples, 0.22%)</title><rect x="9.7005%" y="2741" width="0.2186%" height="15" fill="rgb(242,107,0)" fg:x="22250303" fg:w="501504"/><text x="9.9505%" y="2751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (501,504 samples, 0.22%)</title><rect x="9.7005%" y="2725" width="0.2186%" height="15" fill="rgb(251,28,31)" fg:x="22250303" fg:w="501504"/><text x="9.9505%" y="2735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (501,504 samples, 0.22%)</title><rect x="9.7005%" y="2709" width="0.2186%" height="15" fill="rgb(233,223,10)" fg:x="22250303" fg:w="501504"/><text x="9.9505%" y="2719.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,469,335 samples, 0.64%)</title><rect x="9.9192%" y="2485" width="0.6406%" height="15" fill="rgb(215,21,27)" fg:x="22751807" fg:w="1469335"/><text x="10.1692%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,469,335 samples, 0.64%)</title><rect x="9.9192%" y="2469" width="0.6406%" height="15" fill="rgb(232,23,21)" fg:x="22751807" fg:w="1469335"/><text x="10.1692%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,469,335 samples, 0.64%)</title><rect x="9.9192%" y="2453" width="0.6406%" height="15" fill="rgb(244,5,23)" fg:x="22751807" fg:w="1469335"/><text x="10.1692%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,469,335 samples, 0.64%)</title><rect x="9.9192%" y="2437" width="0.6406%" height="15" fill="rgb(226,81,46)" fg:x="22751807" fg:w="1469335"/><text x="10.1692%" y="2447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,469,335 samples, 0.64%)</title><rect x="9.9192%" y="2421" width="0.6406%" height="15" fill="rgb(247,70,30)" fg:x="22751807" fg:w="1469335"/><text x="10.1692%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,469,335 samples, 0.64%)</title><rect x="9.9192%" y="2405" width="0.6406%" height="15" fill="rgb(212,68,19)" fg:x="22751807" fg:w="1469335"/><text x="10.1692%" y="2415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,469,335 samples, 0.64%)</title><rect x="9.9192%" y="2389" width="0.6406%" height="15" fill="rgb(240,187,13)" fg:x="22751807" fg:w="1469335"/><text x="10.1692%" y="2399.50"></text></g><g><title>alloc::alloc::dealloc (1,469,335 samples, 0.64%)</title><rect x="9.9192%" y="2373" width="0.6406%" height="15" fill="rgb(223,113,26)" fg:x="22751807" fg:w="1469335"/><text x="10.1692%" y="2383.50"></text></g><g><title>cfree (1,469,335 samples, 0.64%)</title><rect x="9.9192%" y="2357" width="0.6406%" height="15" fill="rgb(206,192,2)" fg:x="22751807" fg:w="1469335"/><text x="10.1692%" y="2367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,571,426 samples, 0.69%)</title><rect x="10.5598%" y="2021" width="0.6851%" height="15" fill="rgb(241,108,4)" fg:x="24221142" fg:w="1571426"/><text x="10.8098%" y="2031.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,571,426 samples, 0.69%)</title><rect x="10.5598%" y="2005" width="0.6851%" height="15" fill="rgb(247,173,49)" fg:x="24221142" fg:w="1571426"/><text x="10.8098%" y="2015.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,571,426 samples, 0.69%)</title><rect x="10.5598%" y="1989" width="0.6851%" height="15" fill="rgb(224,114,35)" fg:x="24221142" fg:w="1571426"/><text x="10.8098%" y="1999.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,571,426 samples, 0.69%)</title><rect x="10.5598%" y="1973" width="0.6851%" height="15" fill="rgb(245,159,27)" fg:x="24221142" fg:w="1571426"/><text x="10.8098%" y="1983.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,571,426 samples, 0.69%)</title><rect x="10.5598%" y="1957" width="0.6851%" height="15" fill="rgb(245,172,44)" fg:x="24221142" fg:w="1571426"/><text x="10.8098%" y="1967.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,571,426 samples, 0.69%)</title><rect x="10.5598%" y="1941" width="0.6851%" height="15" fill="rgb(236,23,11)" fg:x="24221142" fg:w="1571426"/><text x="10.8098%" y="1951.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (1,571,426 samples, 0.69%)</title><rect x="10.5598%" y="1925" width="0.6851%" height="15" fill="rgb(205,117,38)" fg:x="24221142" fg:w="1571426"/><text x="10.8098%" y="1935.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (1,571,426 samples, 0.69%)</title><rect x="10.5598%" y="1909" width="0.6851%" height="15" fill="rgb(237,72,25)" fg:x="24221142" fg:w="1571426"/><text x="10.8098%" y="1919.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (1,571,426 samples, 0.69%)</title><rect x="10.5598%" y="1893" width="0.6851%" height="15" fill="rgb(244,70,9)" fg:x="24221142" fg:w="1571426"/><text x="10.8098%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1461" width="1.1724%" height="15" fill="rgb(217,125,39)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1445" width="1.1724%" height="15" fill="rgb(235,36,10)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1429" width="1.1724%" height="15" fill="rgb(251,123,47)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1413" width="1.1724%" height="15" fill="rgb(221,13,13)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1397" width="1.1724%" height="15" fill="rgb(238,131,9)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1381" width="1.1724%" height="15" fill="rgb(211,50,8)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1365" width="1.1724%" height="15" fill="rgb(245,182,24)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1375.50"></text></g><g><title>core::mem::drop (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1349" width="1.1724%" height="15" fill="rgb(242,14,37)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1333" width="1.1724%" height="15" fill="rgb(246,228,12)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1317" width="1.1724%" height="15" fill="rgb(213,55,15)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1327.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1301" width="1.1724%" height="15" fill="rgb(209,9,3)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1285" width="1.1724%" height="15" fill="rgb(230,59,30)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1295.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1269" width="1.1724%" height="15" fill="rgb(209,121,21)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1279.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1253" width="1.1724%" height="15" fill="rgb(220,109,13)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1237" width="1.1724%" height="15" fill="rgb(232,18,1)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1221" width="1.1724%" height="15" fill="rgb(215,41,42)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1205" width="1.1724%" height="15" fill="rgb(224,123,36)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1189" width="1.1724%" height="15" fill="rgb(240,125,3)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1173" width="1.1724%" height="15" fill="rgb(205,98,50)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1157" width="1.1724%" height="15" fill="rgb(205,185,37)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1141" width="1.1724%" height="15" fill="rgb(238,207,15)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1125" width="1.1724%" height="15" fill="rgb(213,199,42)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1135.50"></text></g><g><title>core::mem::drop (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1109" width="1.1724%" height="15" fill="rgb(235,201,11)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1093" width="1.1724%" height="15" fill="rgb(207,46,11)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1077" width="1.1724%" height="15" fill="rgb(241,35,35)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1061" width="1.1724%" height="15" fill="rgb(243,32,47)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1045" width="1.1724%" height="15" fill="rgb(247,202,23)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1029" width="1.1724%" height="15" fill="rgb(219,102,11)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1039.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="1013" width="1.1724%" height="15" fill="rgb(243,110,44)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,689,061 samples, 1.17%)</title><rect x="11.2449%" y="997" width="1.1724%" height="15" fill="rgb(222,74,54)" fg:x="25792568" fg:w="2689061"/><text x="11.4949%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="981" width="0.5558%" height="15" fill="rgb(216,99,12)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="965" width="0.5558%" height="15" fill="rgb(226,22,26)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="949" width="0.5558%" height="15" fill="rgb(217,163,10)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="933" width="0.5558%" height="15" fill="rgb(213,25,53)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="917" width="0.5558%" height="15" fill="rgb(252,105,26)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="901" width="0.5558%" height="15" fill="rgb(220,39,43)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="885" width="0.5558%" height="15" fill="rgb(229,68,48)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="895.50"></text></g><g><title>core::mem::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="869" width="0.5558%" height="15" fill="rgb(252,8,32)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="853" width="0.5558%" height="15" fill="rgb(223,20,43)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="837" width="0.5558%" height="15" fill="rgb(229,81,49)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="847.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="821" width="0.5558%" height="15" fill="rgb(236,28,36)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="805" width="0.5558%" height="15" fill="rgb(249,185,26)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="789" width="0.5558%" height="15" fill="rgb(249,174,33)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="799.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="773" width="0.5558%" height="15" fill="rgb(233,201,37)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="757" width="0.5558%" height="15" fill="rgb(221,78,26)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="741" width="0.5558%" height="15" fill="rgb(250,127,30)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="725" width="0.5558%" height="15" fill="rgb(230,49,44)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="709" width="0.5558%" height="15" fill="rgb(229,67,23)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="693" width="0.5558%" height="15" fill="rgb(249,83,47)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="677" width="0.5558%" height="15" fill="rgb(215,43,3)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="661" width="0.5558%" height="15" fill="rgb(238,154,13)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="645" width="0.5558%" height="15" fill="rgb(219,56,2)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="655.50"></text></g><g><title>core::mem::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="629" width="0.5558%" height="15" fill="rgb(233,0,4)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="613" width="0.5558%" height="15" fill="rgb(235,30,7)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="597" width="0.5558%" height="15" fill="rgb(250,79,13)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="581" width="0.5558%" height="15" fill="rgb(211,146,34)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="565" width="0.5558%" height="15" fill="rgb(228,22,38)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="549" width="0.5558%" height="15" fill="rgb(235,168,5)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="533" width="0.5558%" height="15" fill="rgb(221,155,16)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="517" width="0.5558%" height="15" fill="rgb(215,215,53)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="501" width="0.5558%" height="15" fill="rgb(223,4,10)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="485" width="0.5558%" height="15" fill="rgb(234,103,6)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="469" width="0.5558%" height="15" fill="rgb(227,97,0)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="453" width="0.5558%" height="15" fill="rgb(234,150,53)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="437" width="0.5558%" height="15" fill="rgb(228,201,54)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="421" width="0.5558%" height="15" fill="rgb(222,22,37)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="405" width="0.5558%" height="15" fill="rgb(237,53,32)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="415.50"></text></g><g><title>core::mem::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="389" width="0.5558%" height="15" fill="rgb(233,25,53)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="373" width="0.5558%" height="15" fill="rgb(210,40,34)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="357" width="0.5558%" height="15" fill="rgb(241,220,44)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="341" width="0.5558%" height="15" fill="rgb(235,28,35)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="325" width="0.5558%" height="15" fill="rgb(210,56,17)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="309" width="0.5558%" height="15" fill="rgb(224,130,29)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="319.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="293" width="0.5558%" height="15" fill="rgb(235,212,8)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="277" width="0.5558%" height="15" fill="rgb(223,33,50)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="261" width="0.5558%" height="15" fill="rgb(219,149,13)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="245" width="0.5558%" height="15" fill="rgb(250,156,29)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="229" width="0.5558%" height="15" fill="rgb(216,193,19)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="213" width="0.5558%" height="15" fill="rgb(216,135,14)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="197" width="0.5558%" height="15" fill="rgb(241,47,5)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="181" width="0.5558%" height="15" fill="rgb(233,42,35)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="165" width="0.5558%" height="15" fill="rgb(231,13,6)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="175.50"></text></g><g><title>core::mem::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="149" width="0.5558%" height="15" fill="rgb(207,181,40)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="133" width="0.5558%" height="15" fill="rgb(254,173,49)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="117" width="0.5558%" height="15" fill="rgb(221,1,38)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="127.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="101" width="0.5558%" height="15" fill="rgb(206,124,46)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="85" width="0.5558%" height="15" fill="rgb(249,21,11)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="69" width="0.5558%" height="15" fill="rgb(222,201,40)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="79.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="53" width="0.5558%" height="15" fill="rgb(235,61,29)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,274,877 samples, 0.56%)</title><rect x="11.8614%" y="37" width="0.5558%" height="15" fill="rgb(219,207,3)" fg:x="27206752" fg:w="1274877"/><text x="12.1114%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2837" width="2.9259%" height="15" fill="rgb(222,56,46)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2847.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2821" width="2.9259%" height="15" fill="rgb(239,76,54)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2831.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2805" width="2.9259%" height="15" fill="rgb(231,124,27)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2815.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2789" width="2.9259%" height="15" fill="rgb(249,195,6)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2799.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2773" width="2.9259%" height="15" fill="rgb(237,174,47)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2783.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2757" width="2.9259%" height="15" fill="rgb(206,201,31)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2767.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2741" width="2.9259%" height="15" fill="rgb(231,57,52)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2751.50">&lt;a..</text></g><g><title>core::mem::drop (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2725" width="2.9259%" height="15" fill="rgb(248,177,22)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2735.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2709" width="2.9259%" height="15" fill="rgb(215,211,37)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2719.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2693" width="2.9259%" height="15" fill="rgb(241,128,51)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2703.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2677" width="2.9259%" height="15" fill="rgb(227,165,31)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2687.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2661" width="2.9259%" height="15" fill="rgb(228,167,24)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2671.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2645" width="2.9259%" height="15" fill="rgb(228,143,12)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2655.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2629" width="2.9259%" height="15" fill="rgb(249,149,8)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2639.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2613" width="2.9259%" height="15" fill="rgb(243,35,44)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2623.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2597" width="2.9259%" height="15" fill="rgb(246,89,9)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2607.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2581" width="2.9259%" height="15" fill="rgb(233,213,13)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2591.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2565" width="2.9259%" height="15" fill="rgb(233,141,41)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2575.50">&lt;a..</text></g><g><title>core::mem::drop (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2549" width="2.9259%" height="15" fill="rgb(239,167,4)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2559.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2533" width="2.9259%" height="15" fill="rgb(209,217,16)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2543.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2517" width="2.9259%" height="15" fill="rgb(219,88,35)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2527.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,711,281 samples, 2.93%)</title><rect x="9.9192%" y="2501" width="2.9259%" height="15" fill="rgb(220,193,23)" fg:x="22751807" fg:w="6711281"/><text x="10.1692%" y="2511.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2485" width="2.2853%" height="15" fill="rgb(230,90,52)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2495.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2469" width="2.2853%" height="15" fill="rgb(252,106,19)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2479.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2453" width="2.2853%" height="15" fill="rgb(206,74,20)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2463.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2437" width="2.2853%" height="15" fill="rgb(230,138,44)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2421" width="2.2853%" height="15" fill="rgb(235,182,43)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2431.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2405" width="2.2853%" height="15" fill="rgb(242,16,51)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2415.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2389" width="2.2853%" height="15" fill="rgb(248,9,4)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2373" width="2.2853%" height="15" fill="rgb(210,31,22)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2383.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2357" width="2.2853%" height="15" fill="rgb(239,54,39)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2367.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2341" width="2.2853%" height="15" fill="rgb(230,99,41)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2351.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2325" width="2.2853%" height="15" fill="rgb(253,106,12)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2335.50">&lt;..</text></g><g><title>core::mem::drop (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2309" width="2.2853%" height="15" fill="rgb(213,46,41)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2319.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2293" width="2.2853%" height="15" fill="rgb(215,133,35)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2303.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2277" width="2.2853%" height="15" fill="rgb(213,28,5)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2287.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2261" width="2.2853%" height="15" fill="rgb(215,77,49)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2271.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2245" width="2.2853%" height="15" fill="rgb(248,100,22)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2255.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2229" width="2.2853%" height="15" fill="rgb(208,67,9)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2239.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2213" width="2.2853%" height="15" fill="rgb(219,133,21)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2223.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2197" width="2.2853%" height="15" fill="rgb(246,46,29)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2207.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2181" width="2.2853%" height="15" fill="rgb(246,185,52)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2191.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2165" width="2.2853%" height="15" fill="rgb(252,136,11)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2175.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2149" width="2.2853%" height="15" fill="rgb(219,138,53)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2159.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2133" width="2.2853%" height="15" fill="rgb(211,51,23)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2143.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2117" width="2.2853%" height="15" fill="rgb(247,221,28)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2127.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2101" width="2.2853%" height="15" fill="rgb(251,222,45)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2111.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2085" width="2.2853%" height="15" fill="rgb(217,162,53)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2095.50">&lt;..</text></g><g><title>core::mem::drop (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2069" width="2.2853%" height="15" fill="rgb(229,93,14)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2079.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2053" width="2.2853%" height="15" fill="rgb(209,67,49)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2063.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,241,946 samples, 2.29%)</title><rect x="10.5598%" y="2037" width="2.2853%" height="15" fill="rgb(213,87,29)" fg:x="24221142" fg:w="5241946"/><text x="10.8098%" y="2047.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="2021" width="1.6002%" height="15" fill="rgb(205,151,52)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="2005" width="1.6002%" height="15" fill="rgb(253,215,39)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="2015.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1989" width="1.6002%" height="15" fill="rgb(221,220,41)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1999.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1973" width="1.6002%" height="15" fill="rgb(218,133,21)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1957" width="1.6002%" height="15" fill="rgb(221,193,43)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1941" width="1.6002%" height="15" fill="rgb(240,128,52)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1925" width="1.6002%" height="15" fill="rgb(253,114,12)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1909" width="1.6002%" height="15" fill="rgb(215,223,47)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1893" width="1.6002%" height="15" fill="rgb(248,225,23)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1877" width="1.6002%" height="15" fill="rgb(250,108,0)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1861" width="1.6002%" height="15" fill="rgb(228,208,7)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1845" width="1.6002%" height="15" fill="rgb(244,45,10)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1855.50"></text></g><g><title>core::mem::drop (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1829" width="1.6002%" height="15" fill="rgb(207,125,25)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1813" width="1.6002%" height="15" fill="rgb(210,195,18)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1797" width="1.6002%" height="15" fill="rgb(249,80,12)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1807.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1781" width="1.6002%" height="15" fill="rgb(221,65,9)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1765" width="1.6002%" height="15" fill="rgb(235,49,36)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1775.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1749" width="1.6002%" height="15" fill="rgb(225,32,20)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1759.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1733" width="1.6002%" height="15" fill="rgb(215,141,46)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1717" width="1.6002%" height="15" fill="rgb(250,160,47)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1701" width="1.6002%" height="15" fill="rgb(216,222,40)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1685" width="1.6002%" height="15" fill="rgb(234,217,39)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1669" width="1.6002%" height="15" fill="rgb(207,178,40)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1653" width="1.6002%" height="15" fill="rgb(221,136,13)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1637" width="1.6002%" height="15" fill="rgb(249,199,10)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1621" width="1.6002%" height="15" fill="rgb(249,222,13)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1605" width="1.6002%" height="15" fill="rgb(244,185,38)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1615.50"></text></g><g><title>core::mem::drop (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1589" width="1.6002%" height="15" fill="rgb(236,202,9)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1573" width="1.6002%" height="15" fill="rgb(250,229,37)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1557" width="1.6002%" height="15" fill="rgb(206,174,23)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1541" width="1.6002%" height="15" fill="rgb(211,33,43)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1525" width="1.6002%" height="15" fill="rgb(245,58,50)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1535.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1509" width="1.6002%" height="15" fill="rgb(244,68,36)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1519.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1493" width="1.6002%" height="15" fill="rgb(232,229,15)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,670,520 samples, 1.60%)</title><rect x="11.2449%" y="1477" width="1.6002%" height="15" fill="rgb(254,30,23)" fg:x="25792568" fg:w="3670520"/><text x="11.4949%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (981,459 samples, 0.43%)</title><rect x="12.4172%" y="1461" width="0.4279%" height="15" fill="rgb(235,160,14)" fg:x="28481629" fg:w="981459"/><text x="12.6672%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (981,459 samples, 0.43%)</title><rect x="12.4172%" y="1445" width="0.4279%" height="15" fill="rgb(212,155,44)" fg:x="28481629" fg:w="981459"/><text x="12.6672%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (981,459 samples, 0.43%)</title><rect x="12.4172%" y="1429" width="0.4279%" height="15" fill="rgb(226,2,50)" fg:x="28481629" fg:w="981459"/><text x="12.6672%" y="1439.50"></text></g><g><title>core::mem::drop (981,459 samples, 0.43%)</title><rect x="12.4172%" y="1413" width="0.4279%" height="15" fill="rgb(234,177,6)" fg:x="28481629" fg:w="981459"/><text x="12.6672%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (981,459 samples, 0.43%)</title><rect x="12.4172%" y="1397" width="0.4279%" height="15" fill="rgb(217,24,9)" fg:x="28481629" fg:w="981459"/><text x="12.6672%" y="1407.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (981,459 samples, 0.43%)</title><rect x="12.4172%" y="1381" width="0.4279%" height="15" fill="rgb(220,13,46)" fg:x="28481629" fg:w="981459"/><text x="12.6672%" y="1391.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (981,459 samples, 0.43%)</title><rect x="12.4172%" y="1365" width="0.4279%" height="15" fill="rgb(239,221,27)" fg:x="28481629" fg:w="981459"/><text x="12.6672%" y="1375.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (981,459 samples, 0.43%)</title><rect x="12.4172%" y="1349" width="0.4279%" height="15" fill="rgb(222,198,25)" fg:x="28481629" fg:w="981459"/><text x="12.6672%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (981,459 samples, 0.43%)</title><rect x="12.4172%" y="1333" width="0.4279%" height="15" fill="rgb(211,99,13)" fg:x="28481629" fg:w="981459"/><text x="12.6672%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (981,459 samples, 0.43%)</title><rect x="12.4172%" y="1317" width="0.4279%" height="15" fill="rgb(232,111,31)" fg:x="28481629" fg:w="981459"/><text x="12.6672%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (981,459 samples, 0.43%)</title><rect x="12.4172%" y="1301" width="0.4279%" height="15" fill="rgb(245,82,37)" fg:x="28481629" fg:w="981459"/><text x="12.6672%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (981,459 samples, 0.43%)</title><rect x="12.4172%" y="1285" width="0.4279%" height="15" fill="rgb(227,149,46)" fg:x="28481629" fg:w="981459"/><text x="12.6672%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (2,869,869 samples, 1.25%)</title><rect x="12.8451%" y="2821" width="1.2512%" height="15" fill="rgb(218,36,50)" fg:x="29463088" fg:w="2869869"/><text x="13.0951%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,869,869 samples, 1.25%)</title><rect x="12.8451%" y="2805" width="1.2512%" height="15" fill="rgb(226,80,48)" fg:x="29463088" fg:w="2869869"/><text x="13.0951%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,869,869 samples, 1.25%)</title><rect x="12.8451%" y="2789" width="1.2512%" height="15" fill="rgb(238,224,15)" fg:x="29463088" fg:w="2869869"/><text x="13.0951%" y="2799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,869,869 samples, 1.25%)</title><rect x="12.8451%" y="2773" width="1.2512%" height="15" fill="rgb(241,136,10)" fg:x="29463088" fg:w="2869869"/><text x="13.0951%" y="2783.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,869,869 samples, 1.25%)</title><rect x="12.8451%" y="2757" width="1.2512%" height="15" fill="rgb(208,32,45)" fg:x="29463088" fg:w="2869869"/><text x="13.0951%" y="2767.50"></text></g><g><title>malloc (2,869,869 samples, 1.25%)</title><rect x="12.8451%" y="2741" width="1.2512%" height="15" fill="rgb(207,135,9)" fg:x="29463088" fg:w="2869869"/><text x="13.0951%" y="2751.50"></text></g><g><title>[libc.so.6] (2,869,869 samples, 1.25%)</title><rect x="12.8451%" y="2725" width="1.2512%" height="15" fill="rgb(206,86,44)" fg:x="29463088" fg:w="2869869"/><text x="13.0951%" y="2735.50"></text></g><g><title>[libc.so.6] (2,869,869 samples, 1.25%)</title><rect x="12.8451%" y="2709" width="1.2512%" height="15" fill="rgb(245,177,15)" fg:x="29463088" fg:w="2869869"/><text x="13.0951%" y="2719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8,323,389 samples, 3.63%)</title><rect x="14.0963%" y="2805" width="3.6288%" height="15" fill="rgb(206,64,50)" fg:x="32332957" fg:w="8323389"/><text x="14.3463%" y="2815.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8,323,389 samples, 3.63%)</title><rect x="14.0963%" y="2789" width="3.6288%" height="15" fill="rgb(234,36,40)" fg:x="32332957" fg:w="8323389"/><text x="14.3463%" y="2799.50">allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (8,323,389 samples, 3.63%)</title><rect x="14.0963%" y="2773" width="3.6288%" height="15" fill="rgb(213,64,8)" fg:x="32332957" fg:w="8323389"/><text x="14.3463%" y="2783.50">allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (8,323,389 samples, 3.63%)</title><rect x="14.0963%" y="2757" width="3.6288%" height="15" fill="rgb(210,75,36)" fg:x="32332957" fg:w="8323389"/><text x="14.3463%" y="2767.50">allo..</text></g><g><title>alloc::raw_vec::finish_grow (8,323,389 samples, 3.63%)</title><rect x="14.0963%" y="2741" width="3.6288%" height="15" fill="rgb(229,88,21)" fg:x="32332957" fg:w="8323389"/><text x="14.3463%" y="2751.50">allo..</text></g><g><title>malloc (8,323,389 samples, 3.63%)</title><rect x="14.0963%" y="2725" width="3.6288%" height="15" fill="rgb(252,204,47)" fg:x="32332957" fg:w="8323389"/><text x="14.3463%" y="2735.50">mall..</text></g><g><title>[libc.so.6] (7,233,571 samples, 3.15%)</title><rect x="14.5714%" y="2709" width="3.1536%" height="15" fill="rgb(208,77,27)" fg:x="33422775" fg:w="7233571"/><text x="14.8214%" y="2719.50">[li..</text></g><g><title>[libc.so.6] (5,752,218 samples, 2.51%)</title><rect x="15.2172%" y="2693" width="2.5078%" height="15" fill="rgb(221,76,26)" fg:x="34904128" fg:w="5752218"/><text x="15.4672%" y="2703.50">[l..</text></g><g><title>[libc.so.6] (1,409,250 samples, 0.61%)</title><rect x="17.1107%" y="2677" width="0.6144%" height="15" fill="rgb(225,139,18)" fg:x="39247096" fg:w="1409250"/><text x="17.3607%" y="2687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,420,605 samples, 0.62%)</title><rect x="17.7250%" y="2789" width="0.6193%" height="15" fill="rgb(230,137,11)" fg:x="40656346" fg:w="1420605"/><text x="17.9750%" y="2799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,420,605 samples, 0.62%)</title><rect x="17.7250%" y="2773" width="0.6193%" height="15" fill="rgb(212,28,1)" fg:x="40656346" fg:w="1420605"/><text x="17.9750%" y="2783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,420,605 samples, 0.62%)</title><rect x="17.7250%" y="2757" width="0.6193%" height="15" fill="rgb(248,164,17)" fg:x="40656346" fg:w="1420605"/><text x="17.9750%" y="2767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,420,605 samples, 0.62%)</title><rect x="17.7250%" y="2741" width="0.6193%" height="15" fill="rgb(222,171,42)" fg:x="40656346" fg:w="1420605"/><text x="17.9750%" y="2751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,420,605 samples, 0.62%)</title><rect x="17.7250%" y="2725" width="0.6193%" height="15" fill="rgb(243,84,45)" fg:x="40656346" fg:w="1420605"/><text x="17.9750%" y="2735.50"></text></g><g><title>malloc (1,420,605 samples, 0.62%)</title><rect x="17.7250%" y="2709" width="0.6193%" height="15" fill="rgb(252,49,23)" fg:x="40656346" fg:w="1420605"/><text x="17.9750%" y="2719.50"></text></g><g><title>[libc.so.6] (1,420,605 samples, 0.62%)</title><rect x="17.7250%" y="2693" width="0.6193%" height="15" fill="rgb(215,19,7)" fg:x="40656346" fg:w="1420605"/><text x="17.9750%" y="2703.50"></text></g><g><title>[libc.so.6] (1,420,605 samples, 0.62%)</title><rect x="17.7250%" y="2677" width="0.6193%" height="15" fill="rgb(238,81,41)" fg:x="40656346" fg:w="1420605"/><text x="17.9750%" y="2687.50"></text></g><g><title>[libc.so.6] (1,420,605 samples, 0.62%)</title><rect x="17.7250%" y="2661" width="0.6193%" height="15" fill="rgb(210,199,37)" fg:x="40656346" fg:w="1420605"/><text x="17.9750%" y="2671.50"></text></g><g><title>benchmark::json_to_html_node (1,045,868 samples, 0.46%)</title><rect x="18.3444%" y="2757" width="0.4560%" height="15" fill="rgb(244,192,49)" fg:x="42076951" fg:w="1045868"/><text x="18.5944%" y="2767.50"></text></g><g><title>benchmark::json_to_html_node (1,045,868 samples, 0.46%)</title><rect x="18.3444%" y="2741" width="0.4560%" height="15" fill="rgb(226,211,11)" fg:x="42076951" fg:w="1045868"/><text x="18.5944%" y="2751.50"></text></g><g><title>serde_json::value::Value::get (1,045,868 samples, 0.46%)</title><rect x="18.3444%" y="2725" width="0.4560%" height="15" fill="rgb(236,162,54)" fg:x="42076951" fg:w="1045868"/><text x="18.5944%" y="2735.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,045,868 samples, 0.46%)</title><rect x="18.3444%" y="2709" width="0.4560%" height="15" fill="rgb(220,229,9)" fg:x="42076951" fg:w="1045868"/><text x="18.5944%" y="2719.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,045,868 samples, 0.46%)</title><rect x="18.3444%" y="2693" width="0.4560%" height="15" fill="rgb(250,87,22)" fg:x="42076951" fg:w="1045868"/><text x="18.5944%" y="2703.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,045,868 samples, 0.46%)</title><rect x="18.3444%" y="2677" width="0.4560%" height="15" fill="rgb(239,43,17)" fg:x="42076951" fg:w="1045868"/><text x="18.5944%" y="2687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,045,868 samples, 0.46%)</title><rect x="18.3444%" y="2661" width="0.4560%" height="15" fill="rgb(231,177,25)" fg:x="42076951" fg:w="1045868"/><text x="18.5944%" y="2671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,045,868 samples, 0.46%)</title><rect x="18.3444%" y="2645" width="0.4560%" height="15" fill="rgb(219,179,1)" fg:x="42076951" fg:w="1045868"/><text x="18.5944%" y="2655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,045,868 samples, 0.46%)</title><rect x="18.3444%" y="2629" width="0.4560%" height="15" fill="rgb(238,219,53)" fg:x="42076951" fg:w="1045868"/><text x="18.5944%" y="2639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,045,868 samples, 0.46%)</title><rect x="18.3444%" y="2613" width="0.4560%" height="15" fill="rgb(232,167,36)" fg:x="42076951" fg:w="1045868"/><text x="18.5944%" y="2623.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,045,868 samples, 0.46%)</title><rect x="18.3444%" y="2597" width="0.4560%" height="15" fill="rgb(244,19,51)" fg:x="42076951" fg:w="1045868"/><text x="18.5944%" y="2607.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,045,868 samples, 0.46%)</title><rect x="18.3444%" y="2581" width="0.4560%" height="15" fill="rgb(224,6,22)" fg:x="42076951" fg:w="1045868"/><text x="18.5944%" y="2591.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,045,868 samples, 0.46%)</title><rect x="18.3444%" y="2565" width="0.4560%" height="15" fill="rgb(224,145,5)" fg:x="42076951" fg:w="1045868"/><text x="18.5944%" y="2575.50"></text></g><g><title>benchmark::json_to_html_node (3,727,530 samples, 1.63%)</title><rect x="17.7250%" y="2805" width="1.6251%" height="15" fill="rgb(234,130,49)" fg:x="40656346" fg:w="3727530"/><text x="17.9750%" y="2815.50"></text></g><g><title>benchmark::json_to_html_node (2,306,925 samples, 1.01%)</title><rect x="18.3444%" y="2789" width="1.0058%" height="15" fill="rgb(254,6,2)" fg:x="42076951" fg:w="2306925"/><text x="18.5944%" y="2799.50"></text></g><g><title>benchmark::json_to_html_node (2,306,925 samples, 1.01%)</title><rect x="18.3444%" y="2773" width="1.0058%" height="15" fill="rgb(208,96,46)" fg:x="42076951" fg:w="2306925"/><text x="18.5944%" y="2783.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,261,057 samples, 0.55%)</title><rect x="18.8004%" y="2757" width="0.5498%" height="15" fill="rgb(239,3,39)" fg:x="43122819" fg:w="1261057"/><text x="19.0504%" y="2767.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,261,057 samples, 0.55%)</title><rect x="18.8004%" y="2741" width="0.5498%" height="15" fill="rgb(233,210,1)" fg:x="43122819" fg:w="1261057"/><text x="19.0504%" y="2751.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,261,057 samples, 0.55%)</title><rect x="18.8004%" y="2725" width="0.5498%" height="15" fill="rgb(244,137,37)" fg:x="43122819" fg:w="1261057"/><text x="19.0504%" y="2735.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,261,057 samples, 0.55%)</title><rect x="18.8004%" y="2709" width="0.5498%" height="15" fill="rgb(240,136,2)" fg:x="43122819" fg:w="1261057"/><text x="19.0504%" y="2719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,261,057 samples, 0.55%)</title><rect x="18.8004%" y="2693" width="0.5498%" height="15" fill="rgb(239,18,37)" fg:x="43122819" fg:w="1261057"/><text x="19.0504%" y="2703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,261,057 samples, 0.55%)</title><rect x="18.8004%" y="2677" width="0.5498%" height="15" fill="rgb(218,185,22)" fg:x="43122819" fg:w="1261057"/><text x="19.0504%" y="2687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,261,057 samples, 0.55%)</title><rect x="18.8004%" y="2661" width="0.5498%" height="15" fill="rgb(225,218,4)" fg:x="43122819" fg:w="1261057"/><text x="19.0504%" y="2671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,261,057 samples, 0.55%)</title><rect x="18.8004%" y="2645" width="0.5498%" height="15" fill="rgb(230,182,32)" fg:x="43122819" fg:w="1261057"/><text x="19.0504%" y="2655.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,261,057 samples, 0.55%)</title><rect x="18.8004%" y="2629" width="0.5498%" height="15" fill="rgb(242,56,43)" fg:x="43122819" fg:w="1261057"/><text x="19.0504%" y="2639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,261,057 samples, 0.55%)</title><rect x="18.8004%" y="2613" width="0.5498%" height="15" fill="rgb(233,99,24)" fg:x="43122819" fg:w="1261057"/><text x="19.0504%" y="2623.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,261,057 samples, 0.55%)</title><rect x="18.8004%" y="2597" width="0.5498%" height="15" fill="rgb(234,209,42)" fg:x="43122819" fg:w="1261057"/><text x="19.0504%" y="2607.50"></text></g><g><title>[libc.so.6] (1,261,057 samples, 0.55%)</title><rect x="18.8004%" y="2581" width="0.5498%" height="15" fill="rgb(227,7,12)" fg:x="43122819" fg:w="1261057"/><text x="19.0504%" y="2591.50"></text></g><g><title>benchmark::apply_frame_modifications (16,391,025 samples, 7.15%)</title><rect x="12.8451%" y="2837" width="7.1460%" height="15" fill="rgb(245,203,43)" fg:x="29463088" fg:w="16391025"/><text x="13.0951%" y="2847.50">benchmark:..</text></g><g><title>benchmark::json_to_html_node (13,521,156 samples, 5.89%)</title><rect x="14.0963%" y="2821" width="5.8949%" height="15" fill="rgb(238,205,33)" fg:x="32332957" fg:w="13521156"/><text x="14.3463%" y="2831.50">benchma..</text></g><g><title>css_bitvector_compiler::HtmlNode::new (1,470,237 samples, 0.64%)</title><rect x="19.3501%" y="2805" width="0.6410%" height="15" fill="rgb(231,56,7)" fg:x="44383876" fg:w="1470237"/><text x="19.6001%" y="2815.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1,470,237 samples, 0.64%)</title><rect x="19.3501%" y="2789" width="0.6410%" height="15" fill="rgb(244,186,29)" fg:x="44383876" fg:w="1470237"/><text x="19.6001%" y="2799.50"></text></g><g><title>alloc::str::convert_while_ascii (1,470,237 samples, 0.64%)</title><rect x="19.3501%" y="2773" width="0.6410%" height="15" fill="rgb(234,111,31)" fg:x="44383876" fg:w="1470237"/><text x="19.6001%" y="2783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,470,237 samples, 0.64%)</title><rect x="19.3501%" y="2757" width="0.6410%" height="15" fill="rgb(241,149,10)" fg:x="44383876" fg:w="1470237"/><text x="19.6001%" y="2767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,470,237 samples, 0.64%)</title><rect x="19.3501%" y="2741" width="0.6410%" height="15" fill="rgb(249,206,44)" fg:x="44383876" fg:w="1470237"/><text x="19.6001%" y="2751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,470,237 samples, 0.64%)</title><rect x="19.3501%" y="2725" width="0.6410%" height="15" fill="rgb(251,153,30)" fg:x="44383876" fg:w="1470237"/><text x="19.6001%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,470,237 samples, 0.64%)</title><rect x="19.3501%" y="2709" width="0.6410%" height="15" fill="rgb(239,152,38)" fg:x="44383876" fg:w="1470237"/><text x="19.6001%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,470,237 samples, 0.64%)</title><rect x="19.3501%" y="2693" width="0.6410%" height="15" fill="rgb(249,139,47)" fg:x="44383876" fg:w="1470237"/><text x="19.6001%" y="2703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,470,237 samples, 0.64%)</title><rect x="19.3501%" y="2677" width="0.6410%" height="15" fill="rgb(244,64,35)" fg:x="44383876" fg:w="1470237"/><text x="19.6001%" y="2687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,470,237 samples, 0.64%)</title><rect x="19.3501%" y="2661" width="0.6410%" height="15" fill="rgb(216,46,15)" fg:x="44383876" fg:w="1470237"/><text x="19.6001%" y="2671.50"></text></g><g><title>alloc::alloc::alloc (1,470,237 samples, 0.64%)</title><rect x="19.3501%" y="2645" width="0.6410%" height="15" fill="rgb(250,74,19)" fg:x="44383876" fg:w="1470237"/><text x="19.6001%" y="2655.50"></text></g><g><title>malloc (1,470,237 samples, 0.64%)</title><rect x="19.3501%" y="2629" width="0.6410%" height="15" fill="rgb(249,42,33)" fg:x="44383876" fg:w="1470237"/><text x="19.6001%" y="2639.50"></text></g><g><title>[libc.so.6] (1,470,237 samples, 0.64%)</title><rect x="19.3501%" y="2613" width="0.6410%" height="15" fill="rgb(242,149,17)" fg:x="44383876" fg:w="1470237"/><text x="19.6001%" y="2623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,511,987 samples, 0.66%)</title><rect x="19.9911%" y="2565" width="0.6592%" height="15" fill="rgb(244,29,21)" fg:x="45854113" fg:w="1511987"/><text x="20.2411%" y="2575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,511,987 samples, 0.66%)</title><rect x="19.9911%" y="2549" width="0.6592%" height="15" fill="rgb(220,130,37)" fg:x="45854113" fg:w="1511987"/><text x="20.2411%" y="2559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,511,987 samples, 0.66%)</title><rect x="19.9911%" y="2533" width="0.6592%" height="15" fill="rgb(211,67,2)" fg:x="45854113" fg:w="1511987"/><text x="20.2411%" y="2543.50"></text></g><g><title>alloc::slice::hack::to_vec (1,511,987 samples, 0.66%)</title><rect x="19.9911%" y="2517" width="0.6592%" height="15" fill="rgb(235,68,52)" fg:x="45854113" fg:w="1511987"/><text x="20.2411%" y="2527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,511,987 samples, 0.66%)</title><rect x="19.9911%" y="2501" width="0.6592%" height="15" fill="rgb(246,142,3)" fg:x="45854113" fg:w="1511987"/><text x="20.2411%" y="2511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,511,987 samples, 0.66%)</title><rect x="19.9911%" y="2485" width="0.6592%" height="15" fill="rgb(241,25,7)" fg:x="45854113" fg:w="1511987"/><text x="20.2411%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,511,987 samples, 0.66%)</title><rect x="19.9911%" y="2469" width="0.6592%" height="15" fill="rgb(242,119,39)" fg:x="45854113" fg:w="1511987"/><text x="20.2411%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,511,987 samples, 0.66%)</title><rect x="19.9911%" y="2453" width="0.6592%" height="15" fill="rgb(241,98,45)" fg:x="45854113" fg:w="1511987"/><text x="20.2411%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,511,987 samples, 0.66%)</title><rect x="19.9911%" y="2437" width="0.6592%" height="15" fill="rgb(254,28,30)" fg:x="45854113" fg:w="1511987"/><text x="20.2411%" y="2447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,511,987 samples, 0.66%)</title><rect x="19.9911%" y="2421" width="0.6592%" height="15" fill="rgb(241,142,54)" fg:x="45854113" fg:w="1511987"/><text x="20.2411%" y="2431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,511,987 samples, 0.66%)</title><rect x="19.9911%" y="2405" width="0.6592%" height="15" fill="rgb(222,85,15)" fg:x="45854113" fg:w="1511987"/><text x="20.2411%" y="2415.50"></text></g><g><title>alloc::alloc::alloc (1,511,987 samples, 0.66%)</title><rect x="19.9911%" y="2389" width="0.6592%" height="15" fill="rgb(210,85,47)" fg:x="45854113" fg:w="1511987"/><text x="20.2411%" y="2399.50"></text></g><g><title>malloc (1,511,987 samples, 0.66%)</title><rect x="19.9911%" y="2373" width="0.6592%" height="15" fill="rgb(224,206,25)" fg:x="45854113" fg:w="1511987"/><text x="20.2411%" y="2383.50"></text></g><g><title>[libc.so.6] (1,511,987 samples, 0.66%)</title><rect x="19.9911%" y="2357" width="0.6592%" height="15" fill="rgb(243,201,19)" fg:x="45854113" fg:w="1511987"/><text x="20.2411%" y="2367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,273,586 samples, 0.56%)</title><rect x="20.6503%" y="2485" width="0.5552%" height="15" fill="rgb(236,59,4)" fg:x="47366100" fg:w="1273586"/><text x="20.9003%" y="2495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,273,586 samples, 0.56%)</title><rect x="20.6503%" y="2469" width="0.5552%" height="15" fill="rgb(254,179,45)" fg:x="47366100" fg:w="1273586"/><text x="20.9003%" y="2479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,273,586 samples, 0.56%)</title><rect x="20.6503%" y="2453" width="0.5552%" height="15" fill="rgb(226,14,10)" fg:x="47366100" fg:w="1273586"/><text x="20.9003%" y="2463.50"></text></g><g><title>alloc::slice::hack::to_vec (1,273,586 samples, 0.56%)</title><rect x="20.6503%" y="2437" width="0.5552%" height="15" fill="rgb(244,27,41)" fg:x="47366100" fg:w="1273586"/><text x="20.9003%" y="2447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,273,586 samples, 0.56%)</title><rect x="20.6503%" y="2421" width="0.5552%" height="15" fill="rgb(235,35,32)" fg:x="47366100" fg:w="1273586"/><text x="20.9003%" y="2431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,273,586 samples, 0.56%)</title><rect x="20.6503%" y="2405" width="0.5552%" height="15" fill="rgb(218,68,31)" fg:x="47366100" fg:w="1273586"/><text x="20.9003%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,273,586 samples, 0.56%)</title><rect x="20.6503%" y="2389" width="0.5552%" height="15" fill="rgb(207,120,37)" fg:x="47366100" fg:w="1273586"/><text x="20.9003%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,273,586 samples, 0.56%)</title><rect x="20.6503%" y="2373" width="0.5552%" height="15" fill="rgb(227,98,0)" fg:x="47366100" fg:w="1273586"/><text x="20.9003%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,273,586 samples, 0.56%)</title><rect x="20.6503%" y="2357" width="0.5552%" height="15" fill="rgb(207,7,3)" fg:x="47366100" fg:w="1273586"/><text x="20.9003%" y="2367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,273,586 samples, 0.56%)</title><rect x="20.6503%" y="2341" width="0.5552%" height="15" fill="rgb(206,98,19)" fg:x="47366100" fg:w="1273586"/><text x="20.9003%" y="2351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,273,586 samples, 0.56%)</title><rect x="20.6503%" y="2325" width="0.5552%" height="15" fill="rgb(217,5,26)" fg:x="47366100" fg:w="1273586"/><text x="20.9003%" y="2335.50"></text></g><g><title>alloc::alloc::alloc (1,273,586 samples, 0.56%)</title><rect x="20.6503%" y="2309" width="0.5552%" height="15" fill="rgb(235,190,38)" fg:x="47366100" fg:w="1273586"/><text x="20.9003%" y="2319.50"></text></g><g><title>__rdl_alloc (1,273,586 samples, 0.56%)</title><rect x="20.6503%" y="2293" width="0.5552%" height="15" fill="rgb(247,86,24)" fg:x="47366100" fg:w="1273586"/><text x="20.9003%" y="2303.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,273,586 samples, 0.56%)</title><rect x="20.6503%" y="2277" width="0.5552%" height="15" fill="rgb(205,101,16)" fg:x="47366100" fg:w="1273586"/><text x="20.9003%" y="2287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,445,232 samples, 0.63%)</title><rect x="21.2056%" y="2325" width="0.6301%" height="15" fill="rgb(246,168,33)" fg:x="48639686" fg:w="1445232"/><text x="21.4556%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,445,232 samples, 0.63%)</title><rect x="21.2056%" y="2309" width="0.6301%" height="15" fill="rgb(231,114,1)" fg:x="48639686" fg:w="1445232"/><text x="21.4556%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,445,232 samples, 0.63%)</title><rect x="21.2056%" y="2293" width="0.6301%" height="15" fill="rgb(207,184,53)" fg:x="48639686" fg:w="1445232"/><text x="21.4556%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,445,232 samples, 0.63%)</title><rect x="21.2056%" y="2277" width="0.6301%" height="15" fill="rgb(224,95,51)" fg:x="48639686" fg:w="1445232"/><text x="21.4556%" y="2287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,445,232 samples, 0.63%)</title><rect x="21.2056%" y="2261" width="0.6301%" height="15" fill="rgb(212,188,45)" fg:x="48639686" fg:w="1445232"/><text x="21.4556%" y="2271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,445,232 samples, 0.63%)</title><rect x="21.2056%" y="2245" width="0.6301%" height="15" fill="rgb(223,154,38)" fg:x="48639686" fg:w="1445232"/><text x="21.4556%" y="2255.50"></text></g><g><title>alloc::alloc::alloc (1,445,232 samples, 0.63%)</title><rect x="21.2056%" y="2229" width="0.6301%" height="15" fill="rgb(251,22,52)" fg:x="48639686" fg:w="1445232"/><text x="21.4556%" y="2239.50"></text></g><g><title>malloc (1,445,232 samples, 0.63%)</title><rect x="21.2056%" y="2213" width="0.6301%" height="15" fill="rgb(229,209,22)" fg:x="48639686" fg:w="1445232"/><text x="21.4556%" y="2223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,887,872 samples, 1.26%)</title><rect x="21.2056%" y="2405" width="1.2590%" height="15" fill="rgb(234,138,34)" fg:x="48639686" fg:w="2887872"/><text x="21.4556%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,887,872 samples, 1.26%)</title><rect x="21.2056%" y="2389" width="1.2590%" height="15" fill="rgb(212,95,11)" fg:x="48639686" fg:w="2887872"/><text x="21.4556%" y="2399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,887,872 samples, 1.26%)</title><rect x="21.2056%" y="2373" width="1.2590%" height="15" fill="rgb(240,179,47)" fg:x="48639686" fg:w="2887872"/><text x="21.4556%" y="2383.50"></text></g><g><title>alloc::slice::hack::to_vec (2,887,872 samples, 1.26%)</title><rect x="21.2056%" y="2357" width="1.2590%" height="15" fill="rgb(240,163,11)" fg:x="48639686" fg:w="2887872"/><text x="21.4556%" y="2367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,887,872 samples, 1.26%)</title><rect x="21.2056%" y="2341" width="1.2590%" height="15" fill="rgb(236,37,12)" fg:x="48639686" fg:w="2887872"/><text x="21.4556%" y="2351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,442,640 samples, 0.63%)</title><rect x="21.8356%" y="2325" width="0.6290%" height="15" fill="rgb(232,164,16)" fg:x="50084918" fg:w="1442640"/><text x="22.0856%" y="2335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,442,640 samples, 0.63%)</title><rect x="21.8356%" y="2309" width="0.6290%" height="15" fill="rgb(244,205,15)" fg:x="50084918" fg:w="1442640"/><text x="22.0856%" y="2319.50"></text></g><g><title>[libc.so.6] (1,442,640 samples, 0.63%)</title><rect x="21.8356%" y="2293" width="0.6290%" height="15" fill="rgb(223,117,47)" fg:x="50084918" fg:w="1442640"/><text x="22.0856%" y="2303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,152,440 samples, 1.81%)</title><rect x="22.4646%" y="2325" width="1.8103%" height="15" fill="rgb(244,107,35)" fg:x="51527558" fg:w="4152440"/><text x="22.7146%" y="2335.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,152,440 samples, 1.81%)</title><rect x="22.4646%" y="2309" width="1.8103%" height="15" fill="rgb(205,140,8)" fg:x="51527558" fg:w="4152440"/><text x="22.7146%" y="2319.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,152,440 samples, 1.81%)</title><rect x="22.4646%" y="2293" width="1.8103%" height="15" fill="rgb(228,84,46)" fg:x="51527558" fg:w="4152440"/><text x="22.7146%" y="2303.50">a..</text></g><g><title>alloc::slice::hack::to_vec (4,152,440 samples, 1.81%)</title><rect x="22.4646%" y="2277" width="1.8103%" height="15" fill="rgb(254,188,9)" fg:x="51527558" fg:w="4152440"/><text x="22.7146%" y="2287.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,152,440 samples, 1.81%)</title><rect x="22.4646%" y="2261" width="1.8103%" height="15" fill="rgb(206,112,54)" fg:x="51527558" fg:w="4152440"/><text x="22.7146%" y="2271.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,152,440 samples, 1.81%)</title><rect x="22.4646%" y="2245" width="1.8103%" height="15" fill="rgb(216,84,49)" fg:x="51527558" fg:w="4152440"/><text x="22.7146%" y="2255.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,152,440 samples, 1.81%)</title><rect x="22.4646%" y="2229" width="1.8103%" height="15" fill="rgb(214,194,35)" fg:x="51527558" fg:w="4152440"/><text x="22.7146%" y="2239.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,152,440 samples, 1.81%)</title><rect x="22.4646%" y="2213" width="1.8103%" height="15" fill="rgb(249,28,3)" fg:x="51527558" fg:w="4152440"/><text x="22.7146%" y="2223.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,152,440 samples, 1.81%)</title><rect x="22.4646%" y="2197" width="1.8103%" height="15" fill="rgb(222,56,52)" fg:x="51527558" fg:w="4152440"/><text x="22.7146%" y="2207.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,881,866 samples, 1.26%)</title><rect x="23.0185%" y="2181" width="1.2564%" height="15" fill="rgb(245,217,50)" fg:x="52798132" fg:w="2881866"/><text x="23.2685%" y="2191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,881,866 samples, 1.26%)</title><rect x="23.0185%" y="2165" width="1.2564%" height="15" fill="rgb(213,201,24)" fg:x="52798132" fg:w="2881866"/><text x="23.2685%" y="2175.50"></text></g><g><title>alloc::alloc::alloc (2,881,866 samples, 1.26%)</title><rect x="23.0185%" y="2149" width="1.2564%" height="15" fill="rgb(248,116,28)" fg:x="52798132" fg:w="2881866"/><text x="23.2685%" y="2159.50"></text></g><g><title>malloc (2,881,866 samples, 1.26%)</title><rect x="23.0185%" y="2133" width="1.2564%" height="15" fill="rgb(219,72,43)" fg:x="52798132" fg:w="2881866"/><text x="23.2685%" y="2143.50"></text></g><g><title>[libc.so.6] (2,881,866 samples, 1.26%)</title><rect x="23.0185%" y="2117" width="1.2564%" height="15" fill="rgb(209,138,14)" fg:x="52798132" fg:w="2881866"/><text x="23.2685%" y="2127.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,363,819 samples, 1.03%)</title><rect x="24.8805%" y="2245" width="1.0306%" height="15" fill="rgb(222,18,33)" fg:x="57068979" fg:w="2363819"/><text x="25.1305%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,330,158 samples, 0.58%)</title><rect x="25.3312%" y="2229" width="0.5799%" height="15" fill="rgb(213,199,7)" fg:x="58102640" fg:w="1330158"/><text x="25.5812%" y="2239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,330,158 samples, 0.58%)</title><rect x="25.3312%" y="2213" width="0.5799%" height="15" fill="rgb(250,110,10)" fg:x="58102640" fg:w="1330158"/><text x="25.5812%" y="2223.50"></text></g><g><title>alloc::slice::hack::to_vec (1,330,158 samples, 0.58%)</title><rect x="25.3312%" y="2197" width="0.5799%" height="15" fill="rgb(248,123,6)" fg:x="58102640" fg:w="1330158"/><text x="25.5812%" y="2207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,330,158 samples, 0.58%)</title><rect x="25.3312%" y="2181" width="0.5799%" height="15" fill="rgb(206,91,31)" fg:x="58102640" fg:w="1330158"/><text x="25.5812%" y="2191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,330,158 samples, 0.58%)</title><rect x="25.3312%" y="2165" width="0.5799%" height="15" fill="rgb(211,154,13)" fg:x="58102640" fg:w="1330158"/><text x="25.5812%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,330,158 samples, 0.58%)</title><rect x="25.3312%" y="2149" width="0.5799%" height="15" fill="rgb(225,148,7)" fg:x="58102640" fg:w="1330158"/><text x="25.5812%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,330,158 samples, 0.58%)</title><rect x="25.3312%" y="2133" width="0.5799%" height="15" fill="rgb(220,160,43)" fg:x="58102640" fg:w="1330158"/><text x="25.5812%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,330,158 samples, 0.58%)</title><rect x="25.3312%" y="2117" width="0.5799%" height="15" fill="rgb(213,52,39)" fg:x="58102640" fg:w="1330158"/><text x="25.5812%" y="2127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,330,158 samples, 0.58%)</title><rect x="25.3312%" y="2101" width="0.5799%" height="15" fill="rgb(243,137,7)" fg:x="58102640" fg:w="1330158"/><text x="25.5812%" y="2111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,330,158 samples, 0.58%)</title><rect x="25.3312%" y="2085" width="0.5799%" height="15" fill="rgb(230,79,13)" fg:x="58102640" fg:w="1330158"/><text x="25.5812%" y="2095.50"></text></g><g><title>alloc::alloc::alloc (1,330,158 samples, 0.58%)</title><rect x="25.3312%" y="2069" width="0.5799%" height="15" fill="rgb(247,105,23)" fg:x="58102640" fg:w="1330158"/><text x="25.5812%" y="2079.50"></text></g><g><title>malloc (1,330,158 samples, 0.58%)</title><rect x="25.3312%" y="2053" width="0.5799%" height="15" fill="rgb(223,179,41)" fg:x="58102640" fg:w="1330158"/><text x="25.5812%" y="2063.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,957,611 samples, 1.29%)</title><rect x="25.9111%" y="2085" width="1.2894%" height="15" fill="rgb(218,9,34)" fg:x="59432798" fg:w="2957611"/><text x="26.1611%" y="2095.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,957,611 samples, 1.29%)</title><rect x="25.9111%" y="2069" width="1.2894%" height="15" fill="rgb(222,106,8)" fg:x="59432798" fg:w="2957611"/><text x="26.1611%" y="2079.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,957,611 samples, 1.29%)</title><rect x="25.9111%" y="2053" width="1.2894%" height="15" fill="rgb(211,220,0)" fg:x="59432798" fg:w="2957611"/><text x="26.1611%" y="2063.50"></text></g><g><title>alloc::slice::hack::to_vec (2,957,611 samples, 1.29%)</title><rect x="25.9111%" y="2037" width="1.2894%" height="15" fill="rgb(229,52,16)" fg:x="59432798" fg:w="2957611"/><text x="26.1611%" y="2047.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,957,611 samples, 1.29%)</title><rect x="25.9111%" y="2021" width="1.2894%" height="15" fill="rgb(212,155,18)" fg:x="59432798" fg:w="2957611"/><text x="26.1611%" y="2031.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,957,611 samples, 1.29%)</title><rect x="25.9111%" y="2005" width="1.2894%" height="15" fill="rgb(242,21,14)" fg:x="59432798" fg:w="2957611"/><text x="26.1611%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,957,611 samples, 1.29%)</title><rect x="25.9111%" y="1989" width="1.2894%" height="15" fill="rgb(222,19,48)" fg:x="59432798" fg:w="2957611"/><text x="26.1611%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,957,611 samples, 1.29%)</title><rect x="25.9111%" y="1973" width="1.2894%" height="15" fill="rgb(232,45,27)" fg:x="59432798" fg:w="2957611"/><text x="26.1611%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,957,611 samples, 1.29%)</title><rect x="25.9111%" y="1957" width="1.2894%" height="15" fill="rgb(249,103,42)" fg:x="59432798" fg:w="2957611"/><text x="26.1611%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,957,611 samples, 1.29%)</title><rect x="25.9111%" y="1941" width="1.2894%" height="15" fill="rgb(246,81,33)" fg:x="59432798" fg:w="2957611"/><text x="26.1611%" y="1951.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,957,611 samples, 1.29%)</title><rect x="25.9111%" y="1925" width="1.2894%" height="15" fill="rgb(252,33,42)" fg:x="59432798" fg:w="2957611"/><text x="26.1611%" y="1935.50"></text></g><g><title>alloc::alloc::alloc (2,957,611 samples, 1.29%)</title><rect x="25.9111%" y="1909" width="1.2894%" height="15" fill="rgb(209,212,41)" fg:x="59432798" fg:w="2957611"/><text x="26.1611%" y="1919.50"></text></g><g><title>malloc (2,957,611 samples, 1.29%)</title><rect x="25.9111%" y="1893" width="1.2894%" height="15" fill="rgb(207,154,6)" fg:x="59432798" fg:w="2957611"/><text x="26.1611%" y="1903.50"></text></g><g><title>[libc.so.6] (2,957,611 samples, 1.29%)</title><rect x="25.9111%" y="1877" width="1.2894%" height="15" fill="rgb(223,64,47)" fg:x="59432798" fg:w="2957611"/><text x="26.1611%" y="1887.50"></text></g><g><title>[libc.so.6] (1,517,149 samples, 0.66%)</title><rect x="26.5391%" y="1861" width="0.6614%" height="15" fill="rgb(211,161,38)" fg:x="60873260" fg:w="1517149"/><text x="26.7891%" y="1871.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,126,697 samples, 0.49%)</title><rect x="27.2005%" y="2005" width="0.4912%" height="15" fill="rgb(219,138,40)" fg:x="62390409" fg:w="1126697"/><text x="27.4505%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,126,697 samples, 0.49%)</title><rect x="27.2005%" y="1989" width="0.4912%" height="15" fill="rgb(241,228,46)" fg:x="62390409" fg:w="1126697"/><text x="27.4505%" y="1999.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,126,697 samples, 0.49%)</title><rect x="27.2005%" y="1973" width="0.4912%" height="15" fill="rgb(223,209,38)" fg:x="62390409" fg:w="1126697"/><text x="27.4505%" y="1983.50"></text></g><g><title>alloc::slice::hack::to_vec (1,126,697 samples, 0.49%)</title><rect x="27.2005%" y="1957" width="0.4912%" height="15" fill="rgb(236,164,45)" fg:x="62390409" fg:w="1126697"/><text x="27.4505%" y="1967.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,126,697 samples, 0.49%)</title><rect x="27.2005%" y="1941" width="0.4912%" height="15" fill="rgb(231,15,5)" fg:x="62390409" fg:w="1126697"/><text x="27.4505%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,126,697 samples, 0.49%)</title><rect x="27.2005%" y="1925" width="0.4912%" height="15" fill="rgb(252,35,15)" fg:x="62390409" fg:w="1126697"/><text x="27.4505%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,126,697 samples, 0.49%)</title><rect x="27.2005%" y="1909" width="0.4912%" height="15" fill="rgb(248,181,18)" fg:x="62390409" fg:w="1126697"/><text x="27.4505%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,126,697 samples, 0.49%)</title><rect x="27.2005%" y="1893" width="0.4912%" height="15" fill="rgb(233,39,42)" fg:x="62390409" fg:w="1126697"/><text x="27.4505%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,126,697 samples, 0.49%)</title><rect x="27.2005%" y="1877" width="0.4912%" height="15" fill="rgb(238,110,33)" fg:x="62390409" fg:w="1126697"/><text x="27.4505%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,126,697 samples, 0.49%)</title><rect x="27.2005%" y="1861" width="0.4912%" height="15" fill="rgb(233,195,10)" fg:x="62390409" fg:w="1126697"/><text x="27.4505%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,126,697 samples, 0.49%)</title><rect x="27.2005%" y="1845" width="0.4912%" height="15" fill="rgb(254,105,3)" fg:x="62390409" fg:w="1126697"/><text x="27.4505%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (1,126,697 samples, 0.49%)</title><rect x="27.2005%" y="1829" width="0.4912%" height="15" fill="rgb(221,225,9)" fg:x="62390409" fg:w="1126697"/><text x="27.4505%" y="1839.50"></text></g><g><title>malloc (1,126,697 samples, 0.49%)</title><rect x="27.2005%" y="1813" width="0.4912%" height="15" fill="rgb(224,227,45)" fg:x="62390409" fg:w="1126697"/><text x="27.4505%" y="1823.50"></text></g><g><title>[libc.so.6] (1,126,697 samples, 0.49%)</title><rect x="27.2005%" y="1797" width="0.4912%" height="15" fill="rgb(229,198,43)" fg:x="62390409" fg:w="1126697"/><text x="27.4505%" y="1807.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,156,493 samples, 1.81%)</title><rect x="27.6917%" y="1925" width="1.8121%" height="15" fill="rgb(206,209,35)" fg:x="63517106" fg:w="4156493"/><text x="27.9417%" y="1935.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,889,001 samples, 1.26%)</title><rect x="28.2443%" y="1909" width="1.2595%" height="15" fill="rgb(245,195,53)" fg:x="64784598" fg:w="2889001"/><text x="28.4943%" y="1919.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,889,001 samples, 1.26%)</title><rect x="28.2443%" y="1893" width="1.2595%" height="15" fill="rgb(240,92,26)" fg:x="64784598" fg:w="2889001"/><text x="28.4943%" y="1903.50"></text></g><g><title>alloc::slice::hack::to_vec (2,889,001 samples, 1.26%)</title><rect x="28.2443%" y="1877" width="1.2595%" height="15" fill="rgb(207,40,23)" fg:x="64784598" fg:w="2889001"/><text x="28.4943%" y="1887.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,889,001 samples, 1.26%)</title><rect x="28.2443%" y="1861" width="1.2595%" height="15" fill="rgb(223,111,35)" fg:x="64784598" fg:w="2889001"/><text x="28.4943%" y="1871.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,889,001 samples, 1.26%)</title><rect x="28.2443%" y="1845" width="1.2595%" height="15" fill="rgb(229,147,28)" fg:x="64784598" fg:w="2889001"/><text x="28.4943%" y="1855.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,889,001 samples, 1.26%)</title><rect x="28.2443%" y="1829" width="1.2595%" height="15" fill="rgb(211,29,28)" fg:x="64784598" fg:w="2889001"/><text x="28.4943%" y="1839.50"></text></g><g><title>[libc.so.6] (1,436,097 samples, 0.63%)</title><rect x="28.8777%" y="1813" width="0.6261%" height="15" fill="rgb(228,72,33)" fg:x="66237502" fg:w="1436097"/><text x="29.1277%" y="1823.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,274,048 samples, 0.56%)</title><rect x="29.5038%" y="1765" width="0.5554%" height="15" fill="rgb(205,214,31)" fg:x="67673599" fg:w="1274048"/><text x="29.7538%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,274,048 samples, 0.56%)</title><rect x="29.5038%" y="1749" width="0.5554%" height="15" fill="rgb(224,111,15)" fg:x="67673599" fg:w="1274048"/><text x="29.7538%" y="1759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,274,048 samples, 0.56%)</title><rect x="29.5038%" y="1733" width="0.5554%" height="15" fill="rgb(253,21,26)" fg:x="67673599" fg:w="1274048"/><text x="29.7538%" y="1743.50"></text></g><g><title>alloc::slice::hack::to_vec (1,274,048 samples, 0.56%)</title><rect x="29.5038%" y="1717" width="0.5554%" height="15" fill="rgb(245,139,43)" fg:x="67673599" fg:w="1274048"/><text x="29.7538%" y="1727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,274,048 samples, 0.56%)</title><rect x="29.5038%" y="1701" width="0.5554%" height="15" fill="rgb(252,170,7)" fg:x="67673599" fg:w="1274048"/><text x="29.7538%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,274,048 samples, 0.56%)</title><rect x="29.5038%" y="1685" width="0.5554%" height="15" fill="rgb(231,118,14)" fg:x="67673599" fg:w="1274048"/><text x="29.7538%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,274,048 samples, 0.56%)</title><rect x="29.5038%" y="1669" width="0.5554%" height="15" fill="rgb(238,83,0)" fg:x="67673599" fg:w="1274048"/><text x="29.7538%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,274,048 samples, 0.56%)</title><rect x="29.5038%" y="1653" width="0.5554%" height="15" fill="rgb(221,39,39)" fg:x="67673599" fg:w="1274048"/><text x="29.7538%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,274,048 samples, 0.56%)</title><rect x="29.5038%" y="1637" width="0.5554%" height="15" fill="rgb(222,119,46)" fg:x="67673599" fg:w="1274048"/><text x="29.7538%" y="1647.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,315,283 samples, 0.57%)</title><rect x="30.0593%" y="1605" width="0.5734%" height="15" fill="rgb(222,165,49)" fg:x="68947647" fg:w="1315283"/><text x="30.3093%" y="1615.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,508,964 samples, 0.66%)</title><rect x="30.6327%" y="1365" width="0.6579%" height="15" fill="rgb(219,113,52)" fg:x="70262930" fg:w="1508964"/><text x="30.8827%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,508,964 samples, 0.66%)</title><rect x="30.6327%" y="1349" width="0.6579%" height="15" fill="rgb(214,7,15)" fg:x="70262930" fg:w="1508964"/><text x="30.8827%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,508,964 samples, 0.66%)</title><rect x="30.6327%" y="1333" width="0.6579%" height="15" fill="rgb(235,32,4)" fg:x="70262930" fg:w="1508964"/><text x="30.8827%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (1,508,964 samples, 0.66%)</title><rect x="30.6327%" y="1317" width="0.6579%" height="15" fill="rgb(238,90,54)" fg:x="70262930" fg:w="1508964"/><text x="30.8827%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,508,964 samples, 0.66%)</title><rect x="30.6327%" y="1301" width="0.6579%" height="15" fill="rgb(213,208,19)" fg:x="70262930" fg:w="1508964"/><text x="30.8827%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,508,964 samples, 0.66%)</title><rect x="30.6327%" y="1285" width="0.6579%" height="15" fill="rgb(233,156,4)" fg:x="70262930" fg:w="1508964"/><text x="30.8827%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,508,964 samples, 0.66%)</title><rect x="30.6327%" y="1269" width="0.6579%" height="15" fill="rgb(207,194,5)" fg:x="70262930" fg:w="1508964"/><text x="30.8827%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,508,964 samples, 0.66%)</title><rect x="30.6327%" y="1253" width="0.6579%" height="15" fill="rgb(206,111,30)" fg:x="70262930" fg:w="1508964"/><text x="30.8827%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,508,964 samples, 0.66%)</title><rect x="30.6327%" y="1237" width="0.6579%" height="15" fill="rgb(243,70,54)" fg:x="70262930" fg:w="1508964"/><text x="30.8827%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,508,964 samples, 0.66%)</title><rect x="30.6327%" y="1221" width="0.6579%" height="15" fill="rgb(242,28,8)" fg:x="70262930" fg:w="1508964"/><text x="30.8827%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,508,964 samples, 0.66%)</title><rect x="30.6327%" y="1205" width="0.6579%" height="15" fill="rgb(219,106,18)" fg:x="70262930" fg:w="1508964"/><text x="30.8827%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (1,508,964 samples, 0.66%)</title><rect x="30.6327%" y="1189" width="0.6579%" height="15" fill="rgb(244,222,10)" fg:x="70262930" fg:w="1508964"/><text x="30.8827%" y="1199.50"></text></g><g><title>malloc (1,508,964 samples, 0.66%)</title><rect x="30.6327%" y="1173" width="0.6579%" height="15" fill="rgb(236,179,52)" fg:x="70262930" fg:w="1508964"/><text x="30.8827%" y="1183.50"></text></g><g><title>[libc.so.6] (1,508,964 samples, 0.66%)</title><rect x="30.6327%" y="1157" width="0.6579%" height="15" fill="rgb(213,23,39)" fg:x="70262930" fg:w="1508964"/><text x="30.8827%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,033,054 samples, 1.32%)</title><rect x="30.6327%" y="1445" width="1.3223%" height="15" fill="rgb(238,48,10)" fg:x="70262930" fg:w="3033054"/><text x="30.8827%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,033,054 samples, 1.32%)</title><rect x="30.6327%" y="1429" width="1.3223%" height="15" fill="rgb(251,196,23)" fg:x="70262930" fg:w="3033054"/><text x="30.8827%" y="1439.50"></text></g><g><title>alloc::slice::hack::to_vec (3,033,054 samples, 1.32%)</title><rect x="30.6327%" y="1413" width="1.3223%" height="15" fill="rgb(250,152,24)" fg:x="70262930" fg:w="3033054"/><text x="30.8827%" y="1423.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,033,054 samples, 1.32%)</title><rect x="30.6327%" y="1397" width="1.3223%" height="15" fill="rgb(209,150,17)" fg:x="70262930" fg:w="3033054"/><text x="30.8827%" y="1407.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,033,054 samples, 1.32%)</title><rect x="30.6327%" y="1381" width="1.3223%" height="15" fill="rgb(234,202,34)" fg:x="70262930" fg:w="3033054"/><text x="30.8827%" y="1391.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,524,090 samples, 0.66%)</title><rect x="31.2906%" y="1365" width="0.6645%" height="15" fill="rgb(253,148,53)" fg:x="71771894" fg:w="1524090"/><text x="31.5406%" y="1375.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,524,090 samples, 0.66%)</title><rect x="31.2906%" y="1349" width="0.6645%" height="15" fill="rgb(218,129,16)" fg:x="71771894" fg:w="1524090"/><text x="31.5406%" y="1359.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,524,090 samples, 0.66%)</title><rect x="31.2906%" y="1333" width="0.6645%" height="15" fill="rgb(216,85,19)" fg:x="71771894" fg:w="1524090"/><text x="31.5406%" y="1343.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,524,090 samples, 0.66%)</title><rect x="31.2906%" y="1317" width="0.6645%" height="15" fill="rgb(235,228,7)" fg:x="71771894" fg:w="1524090"/><text x="31.5406%" y="1327.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,524,090 samples, 0.66%)</title><rect x="31.2906%" y="1301" width="0.6645%" height="15" fill="rgb(245,175,0)" fg:x="71771894" fg:w="1524090"/><text x="31.5406%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,524,090 samples, 0.66%)</title><rect x="31.2906%" y="1285" width="0.6645%" height="15" fill="rgb(208,168,36)" fg:x="71771894" fg:w="1524090"/><text x="31.5406%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTableInner::ctrl (1,524,090 samples, 0.66%)</title><rect x="31.2906%" y="1269" width="0.6645%" height="15" fill="rgb(246,171,24)" fg:x="71771894" fg:w="1524090"/><text x="31.5406%" y="1279.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,434,386 samples, 0.63%)</title><rect x="31.9550%" y="1445" width="0.6254%" height="15" fill="rgb(215,142,24)" fg:x="73295984" fg:w="1434386"/><text x="32.2050%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,434,386 samples, 0.63%)</title><rect x="31.9550%" y="1429" width="0.6254%" height="15" fill="rgb(250,187,7)" fg:x="73295984" fg:w="1434386"/><text x="32.2050%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,434,386 samples, 0.63%)</title><rect x="31.9550%" y="1413" width="0.6254%" height="15" fill="rgb(228,66,33)" fg:x="73295984" fg:w="1434386"/><text x="32.2050%" y="1423.50"></text></g><g><title>alloc::slice::hack::to_vec (1,434,386 samples, 0.63%)</title><rect x="31.9550%" y="1397" width="0.6254%" height="15" fill="rgb(234,215,21)" fg:x="73295984" fg:w="1434386"/><text x="32.2050%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,434,386 samples, 0.63%)</title><rect x="31.9550%" y="1381" width="0.6254%" height="15" fill="rgb(222,191,20)" fg:x="73295984" fg:w="1434386"/><text x="32.2050%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,434,386 samples, 0.63%)</title><rect x="31.9550%" y="1365" width="0.6254%" height="15" fill="rgb(245,79,54)" fg:x="73295984" fg:w="1434386"/><text x="32.2050%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,434,386 samples, 0.63%)</title><rect x="31.9550%" y="1349" width="0.6254%" height="15" fill="rgb(240,10,37)" fg:x="73295984" fg:w="1434386"/><text x="32.2050%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,434,386 samples, 0.63%)</title><rect x="31.9550%" y="1333" width="0.6254%" height="15" fill="rgb(214,192,32)" fg:x="73295984" fg:w="1434386"/><text x="32.2050%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,434,386 samples, 0.63%)</title><rect x="31.9550%" y="1317" width="0.6254%" height="15" fill="rgb(209,36,54)" fg:x="73295984" fg:w="1434386"/><text x="32.2050%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,434,386 samples, 0.63%)</title><rect x="31.9550%" y="1301" width="0.6254%" height="15" fill="rgb(220,10,11)" fg:x="73295984" fg:w="1434386"/><text x="32.2050%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,434,386 samples, 0.63%)</title><rect x="31.9550%" y="1285" width="0.6254%" height="15" fill="rgb(221,106,17)" fg:x="73295984" fg:w="1434386"/><text x="32.2050%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (1,434,386 samples, 0.63%)</title><rect x="31.9550%" y="1269" width="0.6254%" height="15" fill="rgb(251,142,44)" fg:x="73295984" fg:w="1434386"/><text x="32.2050%" y="1279.50"></text></g><g><title>malloc (1,434,386 samples, 0.63%)</title><rect x="31.9550%" y="1253" width="0.6254%" height="15" fill="rgb(238,13,15)" fg:x="73295984" fg:w="1434386"/><text x="32.2050%" y="1263.50"></text></g><g><title>[unknown] (1,434,386 samples, 0.63%)</title><rect x="31.9550%" y="1237" width="0.6254%" height="15" fill="rgb(208,107,27)" fg:x="73295984" fg:w="1434386"/><text x="32.2050%" y="1247.50"></text></g><g><title>[libc.so.6] (1,434,386 samples, 0.63%)</title><rect x="31.9550%" y="1221" width="0.6254%" height="15" fill="rgb(205,136,37)" fg:x="73295984" fg:w="1434386"/><text x="32.2050%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,919,381 samples, 2.58%)</title><rect x="30.6327%" y="1525" width="2.5807%" height="15" fill="rgb(250,205,27)" fg:x="70262930" fg:w="5919381"/><text x="30.8827%" y="1535.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,919,381 samples, 2.58%)</title><rect x="30.6327%" y="1509" width="2.5807%" height="15" fill="rgb(210,80,43)" fg:x="70262930" fg:w="5919381"/><text x="30.8827%" y="1519.50">al..</text></g><g><title>alloc::slice::hack::to_vec (5,919,381 samples, 2.58%)</title><rect x="30.6327%" y="1493" width="2.5807%" height="15" fill="rgb(247,160,36)" fg:x="70262930" fg:w="5919381"/><text x="30.8827%" y="1503.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,919,381 samples, 2.58%)</title><rect x="30.6327%" y="1477" width="2.5807%" height="15" fill="rgb(234,13,49)" fg:x="70262930" fg:w="5919381"/><text x="30.8827%" y="1487.50">&lt;T..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (5,919,381 samples, 2.58%)</title><rect x="30.6327%" y="1461" width="2.5807%" height="15" fill="rgb(234,122,0)" fg:x="70262930" fg:w="5919381"/><text x="30.8827%" y="1471.50">&lt;c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1445" width="0.6330%" height="15" fill="rgb(207,146,38)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1455.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1429" width="0.6330%" height="15" fill="rgb(207,177,25)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1439.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1413" width="0.6330%" height="15" fill="rgb(211,178,42)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1423.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1397" width="0.6330%" height="15" fill="rgb(230,69,54)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1407.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1381" width="0.6330%" height="15" fill="rgb(214,135,41)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1365" width="0.6330%" height="15" fill="rgb(237,67,25)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1375.50"></text></g><g><title>core::clone::Clone::clone (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1349" width="0.6330%" height="15" fill="rgb(222,189,50)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1359.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1333" width="0.6330%" height="15" fill="rgb(245,148,34)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1317" width="0.6330%" height="15" fill="rgb(222,29,6)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1301" width="0.6330%" height="15" fill="rgb(221,189,43)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1311.50"></text></g><g><title>alloc::slice::hack::to_vec (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1285" width="0.6330%" height="15" fill="rgb(207,36,27)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1269" width="0.6330%" height="15" fill="rgb(217,90,24)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1253" width="0.6330%" height="15" fill="rgb(224,66,35)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1237" width="0.6330%" height="15" fill="rgb(221,13,50)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1221" width="0.6330%" height="15" fill="rgb(236,68,49)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1205" width="0.6330%" height="15" fill="rgb(229,146,28)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1189" width="0.6330%" height="15" fill="rgb(225,31,38)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1173" width="0.6330%" height="15" fill="rgb(250,208,3)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1157" width="0.6330%" height="15" fill="rgb(246,54,23)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1167.50"></text></g><g><title>malloc (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1141" width="0.6330%" height="15" fill="rgb(243,76,11)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1151.50"></text></g><g><title>[libc.so.6] (1,451,941 samples, 0.63%)</title><rect x="32.5804%" y="1125" width="0.6330%" height="15" fill="rgb(245,21,50)" fg:x="74730370" fg:w="1451941"/><text x="32.8304%" y="1135.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,385,491 samples, 0.60%)</title><rect x="33.2134%" y="1525" width="0.6040%" height="15" fill="rgb(228,9,43)" fg:x="76182311" fg:w="1385491"/><text x="33.4634%" y="1535.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,385,491 samples, 0.60%)</title><rect x="33.2134%" y="1509" width="0.6040%" height="15" fill="rgb(208,100,47)" fg:x="76182311" fg:w="1385491"/><text x="33.4634%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,385,491 samples, 0.60%)</title><rect x="33.2134%" y="1493" width="0.6040%" height="15" fill="rgb(232,26,8)" fg:x="76182311" fg:w="1385491"/><text x="33.4634%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,385,491 samples, 0.60%)</title><rect x="33.2134%" y="1477" width="0.6040%" height="15" fill="rgb(216,166,38)" fg:x="76182311" fg:w="1385491"/><text x="33.4634%" y="1487.50"></text></g><g><title>alloc::slice::hack::to_vec (1,385,491 samples, 0.60%)</title><rect x="33.2134%" y="1461" width="0.6040%" height="15" fill="rgb(251,202,51)" fg:x="76182311" fg:w="1385491"/><text x="33.4634%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,385,491 samples, 0.60%)</title><rect x="33.2134%" y="1445" width="0.6040%" height="15" fill="rgb(254,216,34)" fg:x="76182311" fg:w="1385491"/><text x="33.4634%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,385,491 samples, 0.60%)</title><rect x="33.2134%" y="1429" width="0.6040%" height="15" fill="rgb(251,32,27)" fg:x="76182311" fg:w="1385491"/><text x="33.4634%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,385,491 samples, 0.60%)</title><rect x="33.2134%" y="1413" width="0.6040%" height="15" fill="rgb(208,127,28)" fg:x="76182311" fg:w="1385491"/><text x="33.4634%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,385,491 samples, 0.60%)</title><rect x="33.2134%" y="1397" width="0.6040%" height="15" fill="rgb(224,137,22)" fg:x="76182311" fg:w="1385491"/><text x="33.4634%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,385,491 samples, 0.60%)</title><rect x="33.2134%" y="1381" width="0.6040%" height="15" fill="rgb(254,70,32)" fg:x="76182311" fg:w="1385491"/><text x="33.4634%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,385,491 samples, 0.60%)</title><rect x="33.2134%" y="1365" width="0.6040%" height="15" fill="rgb(229,75,37)" fg:x="76182311" fg:w="1385491"/><text x="33.4634%" y="1375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,385,491 samples, 0.60%)</title><rect x="33.2134%" y="1349" width="0.6040%" height="15" fill="rgb(252,64,23)" fg:x="76182311" fg:w="1385491"/><text x="33.4634%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (1,385,491 samples, 0.60%)</title><rect x="33.2134%" y="1333" width="0.6040%" height="15" fill="rgb(232,162,48)" fg:x="76182311" fg:w="1385491"/><text x="33.4634%" y="1343.50"></text></g><g><title>malloc (1,385,491 samples, 0.60%)</title><rect x="33.2134%" y="1317" width="0.6040%" height="15" fill="rgb(246,160,12)" fg:x="76182311" fg:w="1385491"/><text x="33.4634%" y="1327.50"></text></g><g><title>[libc.so.6] (1,385,491 samples, 0.60%)</title><rect x="33.2134%" y="1301" width="0.6040%" height="15" fill="rgb(247,166,0)" fg:x="76182311" fg:w="1385491"/><text x="33.4634%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,858,509 samples, 3.86%)</title><rect x="30.6327%" y="1605" width="3.8621%" height="15" fill="rgb(249,219,21)" fg:x="70262930" fg:w="8858509"/><text x="30.8827%" y="1615.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,858,509 samples, 3.86%)</title><rect x="30.6327%" y="1589" width="3.8621%" height="15" fill="rgb(205,209,3)" fg:x="70262930" fg:w="8858509"/><text x="30.8827%" y="1599.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (8,858,509 samples, 3.86%)</title><rect x="30.6327%" y="1573" width="3.8621%" height="15" fill="rgb(243,44,1)" fg:x="70262930" fg:w="8858509"/><text x="30.8827%" y="1583.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,858,509 samples, 3.86%)</title><rect x="30.6327%" y="1557" width="3.8621%" height="15" fill="rgb(206,159,16)" fg:x="70262930" fg:w="8858509"/><text x="30.8827%" y="1567.50">&lt;T a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (8,858,509 samples, 3.86%)</title><rect x="30.6327%" y="1541" width="3.8621%" height="15" fill="rgb(244,77,30)" fg:x="70262930" fg:w="8858509"/><text x="30.8827%" y="1551.50">&lt;css..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,553,637 samples, 0.68%)</title><rect x="33.8174%" y="1525" width="0.6773%" height="15" fill="rgb(218,69,12)" fg:x="77567802" fg:w="1553637"/><text x="34.0674%" y="1535.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,553,637 samples, 0.68%)</title><rect x="33.8174%" y="1509" width="0.6773%" height="15" fill="rgb(212,87,7)" fg:x="77567802" fg:w="1553637"/><text x="34.0674%" y="1519.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,553,637 samples, 0.68%)</title><rect x="33.8174%" y="1493" width="0.6773%" height="15" fill="rgb(245,114,25)" fg:x="77567802" fg:w="1553637"/><text x="34.0674%" y="1503.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,553,637 samples, 0.68%)</title><rect x="33.8174%" y="1477" width="0.6773%" height="15" fill="rgb(210,61,42)" fg:x="77567802" fg:w="1553637"/><text x="34.0674%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,553,637 samples, 0.68%)</title><rect x="33.8174%" y="1461" width="0.6773%" height="15" fill="rgb(211,52,33)" fg:x="77567802" fg:w="1553637"/><text x="34.0674%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,553,637 samples, 0.68%)</title><rect x="33.8174%" y="1445" width="0.6773%" height="15" fill="rgb(234,58,33)" fg:x="77567802" fg:w="1553637"/><text x="34.0674%" y="1455.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (1,553,637 samples, 0.68%)</title><rect x="33.8174%" y="1429" width="0.6773%" height="15" fill="rgb(220,115,36)" fg:x="77567802" fg:w="1553637"/><text x="34.0674%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,751,157 samples, 5.12%)</title><rect x="30.0593%" y="1685" width="5.1232%" height="15" fill="rgb(243,153,54)" fg:x="68947647" fg:w="11751157"/><text x="30.3093%" y="1695.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11,751,157 samples, 5.12%)</title><rect x="30.0593%" y="1669" width="5.1232%" height="15" fill="rgb(251,47,18)" fg:x="68947647" fg:w="11751157"/><text x="30.3093%" y="1679.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (11,751,157 samples, 5.12%)</title><rect x="30.0593%" y="1653" width="5.1232%" height="15" fill="rgb(242,102,42)" fg:x="68947647" fg:w="11751157"/><text x="30.3093%" y="1663.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11,751,157 samples, 5.12%)</title><rect x="30.0593%" y="1637" width="5.1232%" height="15" fill="rgb(234,31,38)" fg:x="68947647" fg:w="11751157"/><text x="30.3093%" y="1647.50">&lt;T as ..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (11,751,157 samples, 5.12%)</title><rect x="30.0593%" y="1621" width="5.1232%" height="15" fill="rgb(221,117,51)" fg:x="68947647" fg:w="11751157"/><text x="30.3093%" y="1631.50">&lt;css_b..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1605" width="0.6877%" height="15" fill="rgb(212,20,18)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1615.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1589" width="0.6877%" height="15" fill="rgb(245,133,36)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1599.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1573" width="0.6877%" height="15" fill="rgb(212,6,19)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1583.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1557" width="0.6877%" height="15" fill="rgb(218,1,36)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1567.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1541" width="0.6877%" height="15" fill="rgb(246,84,54)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1525" width="0.6877%" height="15" fill="rgb(242,110,6)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1535.50"></text></g><g><title>core::clone::Clone::clone (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1509" width="0.6877%" height="15" fill="rgb(214,47,5)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1519.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1493" width="0.6877%" height="15" fill="rgb(218,159,25)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1477" width="0.6877%" height="15" fill="rgb(215,211,28)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1461" width="0.6877%" height="15" fill="rgb(238,59,32)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1471.50"></text></g><g><title>alloc::slice::hack::to_vec (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1445" width="0.6877%" height="15" fill="rgb(226,82,3)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1455.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1429" width="0.6877%" height="15" fill="rgb(240,164,32)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1413" width="0.6877%" height="15" fill="rgb(232,46,7)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1397" width="0.6877%" height="15" fill="rgb(229,129,53)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1381" width="0.6877%" height="15" fill="rgb(234,188,29)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1365" width="0.6877%" height="15" fill="rgb(246,141,4)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1349" width="0.6877%" height="15" fill="rgb(229,23,39)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1333" width="0.6877%" height="15" fill="rgb(206,12,3)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1317" width="0.6877%" height="15" fill="rgb(252,226,20)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1327.50"></text></g><g><title>malloc (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1301" width="0.6877%" height="15" fill="rgb(216,123,35)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1311.50"></text></g><g><title>[libc.so.6] (1,577,365 samples, 0.69%)</title><rect x="34.4948%" y="1285" width="0.6877%" height="15" fill="rgb(212,68,40)" fg:x="79121439" fg:w="1577365"/><text x="34.7448%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,027,203 samples, 5.68%)</title><rect x="30.0593%" y="1765" width="5.6795%" height="15" fill="rgb(254,125,32)" fg:x="68947647" fg:w="13027203"/><text x="30.3093%" y="1775.50">&lt;alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,027,203 samples, 5.68%)</title><rect x="30.0593%" y="1749" width="5.6795%" height="15" fill="rgb(253,97,22)" fg:x="68947647" fg:w="13027203"/><text x="30.3093%" y="1759.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (13,027,203 samples, 5.68%)</title><rect x="30.0593%" y="1733" width="5.6795%" height="15" fill="rgb(241,101,14)" fg:x="68947647" fg:w="13027203"/><text x="30.3093%" y="1743.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,027,203 samples, 5.68%)</title><rect x="30.0593%" y="1717" width="5.6795%" height="15" fill="rgb(238,103,29)" fg:x="68947647" fg:w="13027203"/><text x="30.3093%" y="1727.50">&lt;T as a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (13,027,203 samples, 5.68%)</title><rect x="30.0593%" y="1701" width="5.6795%" height="15" fill="rgb(233,195,47)" fg:x="68947647" fg:w="13027203"/><text x="30.3093%" y="1711.50">&lt;css_bi..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,276,046 samples, 0.56%)</title><rect x="35.1825%" y="1685" width="0.5563%" height="15" fill="rgb(246,218,30)" fg:x="80698804" fg:w="1276046"/><text x="35.4325%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,276,046 samples, 0.56%)</title><rect x="35.1825%" y="1669" width="0.5563%" height="15" fill="rgb(219,145,47)" fg:x="80698804" fg:w="1276046"/><text x="35.4325%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,276,046 samples, 0.56%)</title><rect x="35.1825%" y="1653" width="0.5563%" height="15" fill="rgb(243,12,26)" fg:x="80698804" fg:w="1276046"/><text x="35.4325%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (1,276,046 samples, 0.56%)</title><rect x="35.1825%" y="1637" width="0.5563%" height="15" fill="rgb(214,87,16)" fg:x="80698804" fg:w="1276046"/><text x="35.4325%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,276,046 samples, 0.56%)</title><rect x="35.1825%" y="1621" width="0.5563%" height="15" fill="rgb(208,99,42)" fg:x="80698804" fg:w="1276046"/><text x="35.4325%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,276,046 samples, 0.56%)</title><rect x="35.1825%" y="1605" width="0.5563%" height="15" fill="rgb(253,99,2)" fg:x="80698804" fg:w="1276046"/><text x="35.4325%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,276,046 samples, 0.56%)</title><rect x="35.1825%" y="1589" width="0.5563%" height="15" fill="rgb(220,168,23)" fg:x="80698804" fg:w="1276046"/><text x="35.4325%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,276,046 samples, 0.56%)</title><rect x="35.1825%" y="1573" width="0.5563%" height="15" fill="rgb(242,38,24)" fg:x="80698804" fg:w="1276046"/><text x="35.4325%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,276,046 samples, 0.56%)</title><rect x="35.1825%" y="1557" width="0.5563%" height="15" fill="rgb(225,182,9)" fg:x="80698804" fg:w="1276046"/><text x="35.4325%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,276,046 samples, 0.56%)</title><rect x="35.1825%" y="1541" width="0.5563%" height="15" fill="rgb(243,178,37)" fg:x="80698804" fg:w="1276046"/><text x="35.4325%" y="1551.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,276,046 samples, 0.56%)</title><rect x="35.1825%" y="1525" width="0.5563%" height="15" fill="rgb(232,139,19)" fg:x="80698804" fg:w="1276046"/><text x="35.4325%" y="1535.50"></text></g><g><title>alloc::alloc::alloc (1,276,046 samples, 0.56%)</title><rect x="35.1825%" y="1509" width="0.5563%" height="15" fill="rgb(225,201,24)" fg:x="80698804" fg:w="1276046"/><text x="35.4325%" y="1519.50"></text></g><g><title>malloc (1,276,046 samples, 0.56%)</title><rect x="35.1825%" y="1493" width="0.5563%" height="15" fill="rgb(221,47,46)" fg:x="80698804" fg:w="1276046"/><text x="35.4325%" y="1503.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,487,707 samples, 0.65%)</title><rect x="35.7388%" y="1765" width="0.6486%" height="15" fill="rgb(249,23,13)" fg:x="81974850" fg:w="1487707"/><text x="35.9888%" y="1775.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,487,707 samples, 0.65%)</title><rect x="35.7388%" y="1749" width="0.6486%" height="15" fill="rgb(219,9,5)" fg:x="81974850" fg:w="1487707"/><text x="35.9888%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,487,707 samples, 0.65%)</title><rect x="35.7388%" y="1733" width="0.6486%" height="15" fill="rgb(254,171,16)" fg:x="81974850" fg:w="1487707"/><text x="35.9888%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,487,707 samples, 0.65%)</title><rect x="35.7388%" y="1717" width="0.6486%" height="15" fill="rgb(230,171,20)" fg:x="81974850" fg:w="1487707"/><text x="35.9888%" y="1727.50"></text></g><g><title>alloc::slice::hack::to_vec (1,487,707 samples, 0.65%)</title><rect x="35.7388%" y="1701" width="0.6486%" height="15" fill="rgb(210,71,41)" fg:x="81974850" fg:w="1487707"/><text x="35.9888%" y="1711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,487,707 samples, 0.65%)</title><rect x="35.7388%" y="1685" width="0.6486%" height="15" fill="rgb(206,173,20)" fg:x="81974850" fg:w="1487707"/><text x="35.9888%" y="1695.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,487,707 samples, 0.65%)</title><rect x="35.7388%" y="1669" width="0.6486%" height="15" fill="rgb(233,88,34)" fg:x="81974850" fg:w="1487707"/><text x="35.9888%" y="1679.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,487,707 samples, 0.65%)</title><rect x="35.7388%" y="1653" width="0.6486%" height="15" fill="rgb(223,209,46)" fg:x="81974850" fg:w="1487707"/><text x="35.9888%" y="1663.50"></text></g><g><title>[libc.so.6] (1,487,707 samples, 0.65%)</title><rect x="35.7388%" y="1637" width="0.6486%" height="15" fill="rgb(250,43,18)" fg:x="81974850" fg:w="1487707"/><text x="35.9888%" y="1647.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,512,517 samples, 0.66%)</title><rect x="36.3874%" y="1765" width="0.6594%" height="15" fill="rgb(208,13,10)" fg:x="83462557" fg:w="1512517"/><text x="36.6374%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,512,517 samples, 0.66%)</title><rect x="36.3874%" y="1749" width="0.6594%" height="15" fill="rgb(212,200,36)" fg:x="83462557" fg:w="1512517"/><text x="36.6374%" y="1759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,512,517 samples, 0.66%)</title><rect x="36.3874%" y="1733" width="0.6594%" height="15" fill="rgb(225,90,30)" fg:x="83462557" fg:w="1512517"/><text x="36.6374%" y="1743.50"></text></g><g><title>alloc::slice::hack::to_vec (1,512,517 samples, 0.66%)</title><rect x="36.3874%" y="1717" width="0.6594%" height="15" fill="rgb(236,182,39)" fg:x="83462557" fg:w="1512517"/><text x="36.6374%" y="1727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,512,517 samples, 0.66%)</title><rect x="36.3874%" y="1701" width="0.6594%" height="15" fill="rgb(212,144,35)" fg:x="83462557" fg:w="1512517"/><text x="36.6374%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,512,517 samples, 0.66%)</title><rect x="36.3874%" y="1685" width="0.6594%" height="15" fill="rgb(228,63,44)" fg:x="83462557" fg:w="1512517"/><text x="36.6374%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,512,517 samples, 0.66%)</title><rect x="36.3874%" y="1669" width="0.6594%" height="15" fill="rgb(228,109,6)" fg:x="83462557" fg:w="1512517"/><text x="36.6374%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,512,517 samples, 0.66%)</title><rect x="36.3874%" y="1653" width="0.6594%" height="15" fill="rgb(238,117,24)" fg:x="83462557" fg:w="1512517"/><text x="36.6374%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,512,517 samples, 0.66%)</title><rect x="36.3874%" y="1637" width="0.6594%" height="15" fill="rgb(242,26,26)" fg:x="83462557" fg:w="1512517"/><text x="36.6374%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,512,517 samples, 0.66%)</title><rect x="36.3874%" y="1621" width="0.6594%" height="15" fill="rgb(221,92,48)" fg:x="83462557" fg:w="1512517"/><text x="36.6374%" y="1631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,512,517 samples, 0.66%)</title><rect x="36.3874%" y="1605" width="0.6594%" height="15" fill="rgb(209,209,32)" fg:x="83462557" fg:w="1512517"/><text x="36.6374%" y="1615.50"></text></g><g><title>alloc::alloc::alloc (1,512,517 samples, 0.66%)</title><rect x="36.3874%" y="1589" width="0.6594%" height="15" fill="rgb(221,70,22)" fg:x="83462557" fg:w="1512517"/><text x="36.6374%" y="1599.50"></text></g><g><title>malloc (1,512,517 samples, 0.66%)</title><rect x="36.3874%" y="1573" width="0.6594%" height="15" fill="rgb(248,145,5)" fg:x="83462557" fg:w="1512517"/><text x="36.6374%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18,629,123 samples, 8.12%)</title><rect x="29.5038%" y="1845" width="8.1218%" height="15" fill="rgb(226,116,26)" fg:x="67673599" fg:w="18629123"/><text x="29.7538%" y="1855.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18,629,123 samples, 8.12%)</title><rect x="29.5038%" y="1829" width="8.1218%" height="15" fill="rgb(244,5,17)" fg:x="67673599" fg:w="18629123"/><text x="29.7538%" y="1839.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (18,629,123 samples, 8.12%)</title><rect x="29.5038%" y="1813" width="8.1218%" height="15" fill="rgb(252,159,33)" fg:x="67673599" fg:w="18629123"/><text x="29.7538%" y="1823.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18,629,123 samples, 8.12%)</title><rect x="29.5038%" y="1797" width="8.1218%" height="15" fill="rgb(206,71,0)" fg:x="67673599" fg:w="18629123"/><text x="29.7538%" y="1807.50">&lt;T as alloc..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (18,629,123 samples, 8.12%)</title><rect x="29.5038%" y="1781" width="8.1218%" height="15" fill="rgb(233,118,54)" fg:x="67673599" fg:w="18629123"/><text x="29.7538%" y="1791.50">&lt;css_bitvec..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,327,648 samples, 0.58%)</title><rect x="37.0468%" y="1765" width="0.5788%" height="15" fill="rgb(234,83,48)" fg:x="84975074" fg:w="1327648"/><text x="37.2968%" y="1775.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,327,648 samples, 0.58%)</title><rect x="37.0468%" y="1749" width="0.5788%" height="15" fill="rgb(228,3,54)" fg:x="84975074" fg:w="1327648"/><text x="37.2968%" y="1759.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,327,648 samples, 0.58%)</title><rect x="37.0468%" y="1733" width="0.5788%" height="15" fill="rgb(226,155,13)" fg:x="84975074" fg:w="1327648"/><text x="37.2968%" y="1743.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,327,648 samples, 0.58%)</title><rect x="37.0468%" y="1717" width="0.5788%" height="15" fill="rgb(241,28,37)" fg:x="84975074" fg:w="1327648"/><text x="37.2968%" y="1727.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,327,648 samples, 0.58%)</title><rect x="37.0468%" y="1701" width="0.5788%" height="15" fill="rgb(233,93,10)" fg:x="84975074" fg:w="1327648"/><text x="37.2968%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,327,648 samples, 0.58%)</title><rect x="37.0468%" y="1685" width="0.5788%" height="15" fill="rgb(225,113,19)" fg:x="84975074" fg:w="1327648"/><text x="37.2968%" y="1695.50"></text></g><g><title>core::clone::Clone::clone (1,327,648 samples, 0.58%)</title><rect x="37.0468%" y="1669" width="0.5788%" height="15" fill="rgb(241,2,18)" fg:x="84975074" fg:w="1327648"/><text x="37.2968%" y="1679.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,327,648 samples, 0.58%)</title><rect x="37.0468%" y="1653" width="0.5788%" height="15" fill="rgb(228,207,21)" fg:x="84975074" fg:w="1327648"/><text x="37.2968%" y="1663.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,564,114 samples, 0.68%)</title><rect x="37.6256%" y="1845" width="0.6819%" height="15" fill="rgb(213,211,35)" fg:x="86302722" fg:w="1564114"/><text x="37.8756%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,564,114 samples, 0.68%)</title><rect x="37.6256%" y="1829" width="0.6819%" height="15" fill="rgb(209,83,10)" fg:x="86302722" fg:w="1564114"/><text x="37.8756%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,564,114 samples, 0.68%)</title><rect x="37.6256%" y="1813" width="0.6819%" height="15" fill="rgb(209,164,1)" fg:x="86302722" fg:w="1564114"/><text x="37.8756%" y="1823.50"></text></g><g><title>alloc::slice::hack::to_vec (1,564,114 samples, 0.68%)</title><rect x="37.6256%" y="1797" width="0.6819%" height="15" fill="rgb(213,184,43)" fg:x="86302722" fg:w="1564114"/><text x="37.8756%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,564,114 samples, 0.68%)</title><rect x="37.6256%" y="1781" width="0.6819%" height="15" fill="rgb(231,61,34)" fg:x="86302722" fg:w="1564114"/><text x="37.8756%" y="1791.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,564,114 samples, 0.68%)</title><rect x="37.6256%" y="1765" width="0.6819%" height="15" fill="rgb(235,75,3)" fg:x="86302722" fg:w="1564114"/><text x="37.8756%" y="1775.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,564,114 samples, 0.68%)</title><rect x="37.6256%" y="1749" width="0.6819%" height="15" fill="rgb(220,106,47)" fg:x="86302722" fg:w="1564114"/><text x="37.8756%" y="1759.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (25,664,286 samples, 11.19%)</title><rect x="27.6917%" y="1941" width="11.1889%" height="15" fill="rgb(210,196,33)" fg:x="63517106" fg:w="25664286"/><text x="27.9417%" y="1951.50">&lt;css_bitvector_c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21,507,793 samples, 9.38%)</title><rect x="29.5038%" y="1925" width="9.3768%" height="15" fill="rgb(229,154,42)" fg:x="67673599" fg:w="21507793"/><text x="29.7538%" y="1935.50">&lt;alloc::vec::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21,507,793 samples, 9.38%)</title><rect x="29.5038%" y="1909" width="9.3768%" height="15" fill="rgb(228,114,26)" fg:x="67673599" fg:w="21507793"/><text x="29.7538%" y="1919.50">alloc::slice:..</text></g><g><title>alloc::slice::hack::to_vec (21,507,793 samples, 9.38%)</title><rect x="29.5038%" y="1893" width="9.3768%" height="15" fill="rgb(208,144,1)" fg:x="67673599" fg:w="21507793"/><text x="29.7538%" y="1903.50">alloc::slice:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21,507,793 samples, 9.38%)</title><rect x="29.5038%" y="1877" width="9.3768%" height="15" fill="rgb(239,112,37)" fg:x="67673599" fg:w="21507793"/><text x="29.7538%" y="1887.50">&lt;T as alloc::..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (21,507,793 samples, 9.38%)</title><rect x="29.5038%" y="1861" width="9.3768%" height="15" fill="rgb(210,96,50)" fg:x="67673599" fg:w="21507793"/><text x="29.7538%" y="1871.50">&lt;css_bitvecto..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,314,556 samples, 0.57%)</title><rect x="38.3075%" y="1845" width="0.5731%" height="15" fill="rgb(222,178,2)" fg:x="87866836" fg:w="1314556"/><text x="38.5575%" y="1855.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,314,556 samples, 0.57%)</title><rect x="38.3075%" y="1829" width="0.5731%" height="15" fill="rgb(226,74,18)" fg:x="87866836" fg:w="1314556"/><text x="38.5575%" y="1839.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,314,556 samples, 0.57%)</title><rect x="38.3075%" y="1813" width="0.5731%" height="15" fill="rgb(225,67,54)" fg:x="87866836" fg:w="1314556"/><text x="38.5575%" y="1823.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,314,556 samples, 0.57%)</title><rect x="38.3075%" y="1797" width="0.5731%" height="15" fill="rgb(251,92,32)" fg:x="87866836" fg:w="1314556"/><text x="38.5575%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,314,556 samples, 0.57%)</title><rect x="38.3075%" y="1781" width="0.5731%" height="15" fill="rgb(228,149,22)" fg:x="87866836" fg:w="1314556"/><text x="38.5575%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,314,556 samples, 0.57%)</title><rect x="38.3075%" y="1765" width="0.5731%" height="15" fill="rgb(243,54,13)" fg:x="87866836" fg:w="1314556"/><text x="38.5575%" y="1775.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,314,556 samples, 0.57%)</title><rect x="38.3075%" y="1749" width="0.5731%" height="15" fill="rgb(243,180,28)" fg:x="87866836" fg:w="1314556"/><text x="38.5575%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,314,556 samples, 0.57%)</title><rect x="38.3075%" y="1733" width="0.5731%" height="15" fill="rgb(208,167,24)" fg:x="87866836" fg:w="1314556"/><text x="38.5575%" y="1743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,314,556 samples, 0.57%)</title><rect x="38.3075%" y="1717" width="0.5731%" height="15" fill="rgb(245,73,45)" fg:x="87866836" fg:w="1314556"/><text x="38.5575%" y="1727.50"></text></g><g><title>alloc::alloc::alloc (1,314,556 samples, 0.57%)</title><rect x="38.3075%" y="1701" width="0.5731%" height="15" fill="rgb(237,203,48)" fg:x="87866836" fg:w="1314556"/><text x="38.5575%" y="1711.50"></text></g><g><title>malloc (1,314,556 samples, 0.57%)</title><rect x="38.3075%" y="1685" width="0.5731%" height="15" fill="rgb(211,197,16)" fg:x="87866836" fg:w="1314556"/><text x="38.5575%" y="1695.50"></text></g><g><title>[libc.so.6] (1,314,556 samples, 0.57%)</title><rect x="38.3075%" y="1669" width="0.5731%" height="15" fill="rgb(243,99,51)" fg:x="87866836" fg:w="1314556"/><text x="38.5575%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27,134,147 samples, 11.83%)</title><rect x="27.6917%" y="2005" width="11.8297%" height="15" fill="rgb(215,123,29)" fg:x="63517106" fg:w="27134147"/><text x="27.9417%" y="2015.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27,134,147 samples, 11.83%)</title><rect x="27.6917%" y="1989" width="11.8297%" height="15" fill="rgb(239,186,37)" fg:x="63517106" fg:w="27134147"/><text x="27.9417%" y="1999.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (27,134,147 samples, 11.83%)</title><rect x="27.6917%" y="1973" width="11.8297%" height="15" fill="rgb(252,136,39)" fg:x="63517106" fg:w="27134147"/><text x="27.9417%" y="1983.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27,134,147 samples, 11.83%)</title><rect x="27.6917%" y="1957" width="11.8297%" height="15" fill="rgb(223,213,32)" fg:x="63517106" fg:w="27134147"/><text x="27.9417%" y="1967.50">&lt;T as alloc::slice..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,469,861 samples, 0.64%)</title><rect x="38.8806%" y="1941" width="0.6408%" height="15" fill="rgb(233,115,5)" fg:x="89181392" fg:w="1469861"/><text x="39.1306%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,469,861 samples, 0.64%)</title><rect x="38.8806%" y="1925" width="0.6408%" height="15" fill="rgb(207,226,44)" fg:x="89181392" fg:w="1469861"/><text x="39.1306%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,469,861 samples, 0.64%)</title><rect x="38.8806%" y="1909" width="0.6408%" height="15" fill="rgb(208,126,0)" fg:x="89181392" fg:w="1469861"/><text x="39.1306%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,469,861 samples, 0.64%)</title><rect x="38.8806%" y="1893" width="0.6408%" height="15" fill="rgb(244,66,21)" fg:x="89181392" fg:w="1469861"/><text x="39.1306%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,469,861 samples, 0.64%)</title><rect x="38.8806%" y="1877" width="0.6408%" height="15" fill="rgb(222,97,12)" fg:x="89181392" fg:w="1469861"/><text x="39.1306%" y="1887.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,469,861 samples, 0.64%)</title><rect x="38.8806%" y="1861" width="0.6408%" height="15" fill="rgb(219,213,19)" fg:x="89181392" fg:w="1469861"/><text x="39.1306%" y="1871.50"></text></g><g><title>alloc::alloc::alloc (1,469,861 samples, 0.64%)</title><rect x="38.8806%" y="1845" width="0.6408%" height="15" fill="rgb(252,169,30)" fg:x="89181392" fg:w="1469861"/><text x="39.1306%" y="1855.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (29,754,794 samples, 12.97%)</title><rect x="27.2005%" y="2021" width="12.9723%" height="15" fill="rgb(206,32,51)" fg:x="62390409" fg:w="29754794"/><text x="27.4505%" y="2031.50">&lt;css_bitvector_comp..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,493,950 samples, 0.65%)</title><rect x="39.5215%" y="2005" width="0.6513%" height="15" fill="rgb(250,172,42)" fg:x="90651253" fg:w="1493950"/><text x="39.7715%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,493,950 samples, 0.65%)</title><rect x="39.5215%" y="1989" width="0.6513%" height="15" fill="rgb(209,34,43)" fg:x="90651253" fg:w="1493950"/><text x="39.7715%" y="1999.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,493,950 samples, 0.65%)</title><rect x="39.5215%" y="1973" width="0.6513%" height="15" fill="rgb(223,11,35)" fg:x="90651253" fg:w="1493950"/><text x="39.7715%" y="1983.50"></text></g><g><title>alloc::slice::hack::to_vec (1,493,950 samples, 0.65%)</title><rect x="39.5215%" y="1957" width="0.6513%" height="15" fill="rgb(251,219,26)" fg:x="90651253" fg:w="1493950"/><text x="39.7715%" y="1967.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,493,950 samples, 0.65%)</title><rect x="39.5215%" y="1941" width="0.6513%" height="15" fill="rgb(231,119,3)" fg:x="90651253" fg:w="1493950"/><text x="39.7715%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,493,950 samples, 0.65%)</title><rect x="39.5215%" y="1925" width="0.6513%" height="15" fill="rgb(216,97,11)" fg:x="90651253" fg:w="1493950"/><text x="39.7715%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,493,950 samples, 0.65%)</title><rect x="39.5215%" y="1909" width="0.6513%" height="15" fill="rgb(223,59,9)" fg:x="90651253" fg:w="1493950"/><text x="39.7715%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,493,950 samples, 0.65%)</title><rect x="39.5215%" y="1893" width="0.6513%" height="15" fill="rgb(233,93,31)" fg:x="90651253" fg:w="1493950"/><text x="39.7715%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,493,950 samples, 0.65%)</title><rect x="39.5215%" y="1877" width="0.6513%" height="15" fill="rgb(239,81,33)" fg:x="90651253" fg:w="1493950"/><text x="39.7715%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,493,950 samples, 0.65%)</title><rect x="39.5215%" y="1861" width="0.6513%" height="15" fill="rgb(213,120,34)" fg:x="90651253" fg:w="1493950"/><text x="39.7715%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,493,950 samples, 0.65%)</title><rect x="39.5215%" y="1845" width="0.6513%" height="15" fill="rgb(243,49,53)" fg:x="90651253" fg:w="1493950"/><text x="39.7715%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (1,493,950 samples, 0.65%)</title><rect x="39.5215%" y="1829" width="0.6513%" height="15" fill="rgb(247,216,33)" fg:x="90651253" fg:w="1493950"/><text x="39.7715%" y="1839.50"></text></g><g><title>malloc (1,493,950 samples, 0.65%)</title><rect x="39.5215%" y="1813" width="0.6513%" height="15" fill="rgb(226,26,14)" fg:x="90651253" fg:w="1493950"/><text x="39.7715%" y="1823.50"></text></g><g><title>[libc.so.6] (1,493,950 samples, 0.65%)</title><rect x="39.5215%" y="1797" width="0.6513%" height="15" fill="rgb(215,49,53)" fg:x="90651253" fg:w="1493950"/><text x="39.7715%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31,264,652 samples, 13.63%)</title><rect x="27.2005%" y="2085" width="13.6305%" height="15" fill="rgb(245,162,40)" fg:x="62390409" fg:w="31264652"/><text x="27.4505%" y="2095.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31,264,652 samples, 13.63%)</title><rect x="27.2005%" y="2069" width="13.6305%" height="15" fill="rgb(229,68,17)" fg:x="62390409" fg:w="31264652"/><text x="27.4505%" y="2079.50">alloc::slice::&lt;impl [..</text></g><g><title>alloc::slice::hack::to_vec (31,264,652 samples, 13.63%)</title><rect x="27.2005%" y="2053" width="13.6305%" height="15" fill="rgb(213,182,10)" fg:x="62390409" fg:w="31264652"/><text x="27.4505%" y="2063.50">alloc::slice::hack::t..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31,264,652 samples, 13.63%)</title><rect x="27.2005%" y="2037" width="13.6305%" height="15" fill="rgb(245,125,30)" fg:x="62390409" fg:w="31264652"/><text x="27.4505%" y="2047.50">&lt;T as alloc::slice::h..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,509,858 samples, 0.66%)</title><rect x="40.1728%" y="2021" width="0.6583%" height="15" fill="rgb(232,202,2)" fg:x="92145203" fg:w="1509858"/><text x="40.4228%" y="2031.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,427,786 samples, 0.62%)</title><rect x="40.8310%" y="2085" width="0.6225%" height="15" fill="rgb(237,140,51)" fg:x="93655061" fg:w="1427786"/><text x="41.0810%" y="2095.50"></text></g><g><title>malloc (1,427,786 samples, 0.62%)</title><rect x="40.8310%" y="2069" width="0.6225%" height="15" fill="rgb(236,157,25)" fg:x="93655061" fg:w="1427786"/><text x="41.0810%" y="2079.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,452,627 samples, 0.63%)</title><rect x="41.4535%" y="2085" width="0.6333%" height="15" fill="rgb(219,209,0)" fg:x="95082847" fg:w="1452627"/><text x="41.7035%" y="2095.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,452,627 samples, 0.63%)</title><rect x="41.4535%" y="2069" width="0.6333%" height="15" fill="rgb(240,116,54)" fg:x="95082847" fg:w="1452627"/><text x="41.7035%" y="2079.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,452,627 samples, 0.63%)</title><rect x="41.4535%" y="2053" width="0.6333%" height="15" fill="rgb(216,10,36)" fg:x="95082847" fg:w="1452627"/><text x="41.7035%" y="2063.50"></text></g><g><title>alloc::slice::hack::to_vec (1,452,627 samples, 0.63%)</title><rect x="41.4535%" y="2037" width="0.6333%" height="15" fill="rgb(222,72,44)" fg:x="95082847" fg:w="1452627"/><text x="41.7035%" y="2047.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,452,627 samples, 0.63%)</title><rect x="41.4535%" y="2021" width="0.6333%" height="15" fill="rgb(232,159,9)" fg:x="95082847" fg:w="1452627"/><text x="41.7035%" y="2031.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,452,627 samples, 0.63%)</title><rect x="41.4535%" y="2005" width="0.6333%" height="15" fill="rgb(210,39,32)" fg:x="95082847" fg:w="1452627"/><text x="41.7035%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,452,627 samples, 0.63%)</title><rect x="41.4535%" y="1989" width="0.6333%" height="15" fill="rgb(216,194,45)" fg:x="95082847" fg:w="1452627"/><text x="41.7035%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,452,627 samples, 0.63%)</title><rect x="41.4535%" y="1973" width="0.6333%" height="15" fill="rgb(218,18,35)" fg:x="95082847" fg:w="1452627"/><text x="41.7035%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,452,627 samples, 0.63%)</title><rect x="41.4535%" y="1957" width="0.6333%" height="15" fill="rgb(207,83,51)" fg:x="95082847" fg:w="1452627"/><text x="41.7035%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,452,627 samples, 0.63%)</title><rect x="41.4535%" y="1941" width="0.6333%" height="15" fill="rgb(225,63,43)" fg:x="95082847" fg:w="1452627"/><text x="41.7035%" y="1951.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,452,627 samples, 0.63%)</title><rect x="41.4535%" y="1925" width="0.6333%" height="15" fill="rgb(207,57,36)" fg:x="95082847" fg:w="1452627"/><text x="41.7035%" y="1935.50"></text></g><g><title>alloc::alloc::alloc (1,452,627 samples, 0.63%)</title><rect x="41.4535%" y="1909" width="0.6333%" height="15" fill="rgb(216,99,33)" fg:x="95082847" fg:w="1452627"/><text x="41.7035%" y="1919.50"></text></g><g><title>malloc (1,452,627 samples, 0.63%)</title><rect x="41.4535%" y="1893" width="0.6333%" height="15" fill="rgb(225,42,16)" fg:x="95082847" fg:w="1452627"/><text x="41.7035%" y="1903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,536,657 samples, 0.67%)</title><rect x="42.0868%" y="1893" width="0.6699%" height="15" fill="rgb(220,201,45)" fg:x="96535474" fg:w="1536657"/><text x="42.3368%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,536,657 samples, 0.67%)</title><rect x="42.0868%" y="1877" width="0.6699%" height="15" fill="rgb(225,33,4)" fg:x="96535474" fg:w="1536657"/><text x="42.3368%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,536,657 samples, 0.67%)</title><rect x="42.0868%" y="1861" width="0.6699%" height="15" fill="rgb(224,33,50)" fg:x="96535474" fg:w="1536657"/><text x="42.3368%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,536,657 samples, 0.67%)</title><rect x="42.0868%" y="1845" width="0.6699%" height="15" fill="rgb(246,198,51)" fg:x="96535474" fg:w="1536657"/><text x="42.3368%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,536,657 samples, 0.67%)</title><rect x="42.0868%" y="1829" width="0.6699%" height="15" fill="rgb(205,22,4)" fg:x="96535474" fg:w="1536657"/><text x="42.3368%" y="1839.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,536,657 samples, 0.67%)</title><rect x="42.0868%" y="1813" width="0.6699%" height="15" fill="rgb(206,3,8)" fg:x="96535474" fg:w="1536657"/><text x="42.3368%" y="1823.50"></text></g><g><title>alloc::alloc::alloc (1,536,657 samples, 0.67%)</title><rect x="42.0868%" y="1797" width="0.6699%" height="15" fill="rgb(251,23,15)" fg:x="96535474" fg:w="1536657"/><text x="42.3368%" y="1807.50"></text></g><g><title>__rdl_alloc (1,536,657 samples, 0.67%)</title><rect x="42.0868%" y="1781" width="0.6699%" height="15" fill="rgb(252,88,28)" fg:x="96535474" fg:w="1536657"/><text x="42.3368%" y="1791.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,536,657 samples, 0.67%)</title><rect x="42.0868%" y="1765" width="0.6699%" height="15" fill="rgb(212,127,14)" fg:x="96535474" fg:w="1536657"/><text x="42.3368%" y="1775.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (39,907,962 samples, 17.40%)</title><rect x="25.9111%" y="2101" width="17.3988%" height="15" fill="rgb(247,145,37)" fg:x="59432798" fg:w="39907962"/><text x="26.1611%" y="2111.50">&lt;css_bitvector_compiler::Ht..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,805,286 samples, 1.22%)</title><rect x="42.0868%" y="2085" width="1.2230%" height="15" fill="rgb(209,117,53)" fg:x="96535474" fg:w="2805286"/><text x="42.3368%" y="2095.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,805,286 samples, 1.22%)</title><rect x="42.0868%" y="2069" width="1.2230%" height="15" fill="rgb(212,90,42)" fg:x="96535474" fg:w="2805286"/><text x="42.3368%" y="2079.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,805,286 samples, 1.22%)</title><rect x="42.0868%" y="2053" width="1.2230%" height="15" fill="rgb(218,164,37)" fg:x="96535474" fg:w="2805286"/><text x="42.3368%" y="2063.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,805,286 samples, 1.22%)</title><rect x="42.0868%" y="2037" width="1.2230%" height="15" fill="rgb(246,65,34)" fg:x="96535474" fg:w="2805286"/><text x="42.3368%" y="2047.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,805,286 samples, 1.22%)</title><rect x="42.0868%" y="2021" width="1.2230%" height="15" fill="rgb(231,100,33)" fg:x="96535474" fg:w="2805286"/><text x="42.3368%" y="2031.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,805,286 samples, 1.22%)</title><rect x="42.0868%" y="2005" width="1.2230%" height="15" fill="rgb(228,126,14)" fg:x="96535474" fg:w="2805286"/><text x="42.3368%" y="2015.50"></text></g><g><title>core::clone::Clone::clone (2,805,286 samples, 1.22%)</title><rect x="42.0868%" y="1989" width="1.2230%" height="15" fill="rgb(215,173,21)" fg:x="96535474" fg:w="2805286"/><text x="42.3368%" y="1999.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,805,286 samples, 1.22%)</title><rect x="42.0868%" y="1973" width="1.2230%" height="15" fill="rgb(210,6,40)" fg:x="96535474" fg:w="2805286"/><text x="42.3368%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,805,286 samples, 1.22%)</title><rect x="42.0868%" y="1957" width="1.2230%" height="15" fill="rgb(212,48,18)" fg:x="96535474" fg:w="2805286"/><text x="42.3368%" y="1967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,805,286 samples, 1.22%)</title><rect x="42.0868%" y="1941" width="1.2230%" height="15" fill="rgb(230,214,11)" fg:x="96535474" fg:w="2805286"/><text x="42.3368%" y="1951.50"></text></g><g><title>alloc::slice::hack::to_vec (2,805,286 samples, 1.22%)</title><rect x="42.0868%" y="1925" width="1.2230%" height="15" fill="rgb(254,105,39)" fg:x="96535474" fg:w="2805286"/><text x="42.3368%" y="1935.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,805,286 samples, 1.22%)</title><rect x="42.0868%" y="1909" width="1.2230%" height="15" fill="rgb(245,158,5)" fg:x="96535474" fg:w="2805286"/><text x="42.3368%" y="1919.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,268,629 samples, 0.55%)</title><rect x="42.7568%" y="1893" width="0.5531%" height="15" fill="rgb(249,208,11)" fg:x="98072131" fg:w="1268629"/><text x="43.0068%" y="1903.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,268,629 samples, 0.55%)</title><rect x="42.7568%" y="1877" width="0.5531%" height="15" fill="rgb(210,39,28)" fg:x="98072131" fg:w="1268629"/><text x="43.0068%" y="1887.50"></text></g><g><title>[libc.so.6] (1,268,629 samples, 0.55%)</title><rect x="42.7568%" y="1861" width="0.5531%" height="15" fill="rgb(211,56,53)" fg:x="98072131" fg:w="1268629"/><text x="43.0068%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (41,218,016 samples, 17.97%)</title><rect x="25.9111%" y="2245" width="17.9699%" height="15" fill="rgb(226,201,30)" fg:x="59432798" fg:w="41218016"/><text x="26.1611%" y="2255.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (41,218,016 samples, 17.97%)</title><rect x="25.9111%" y="2229" width="17.9699%" height="15" fill="rgb(239,101,34)" fg:x="59432798" fg:w="41218016"/><text x="26.1611%" y="2239.50">alloc::slice::&lt;impl [T]&gt;::to..</text></g><g><title>alloc::slice::hack::to_vec (41,218,016 samples, 17.97%)</title><rect x="25.9111%" y="2213" width="17.9699%" height="15" fill="rgb(226,209,5)" fg:x="59432798" fg:w="41218016"/><text x="26.1611%" y="2223.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (41,218,016 samples, 17.97%)</title><rect x="25.9111%" y="2197" width="17.9699%" height="15" fill="rgb(250,105,47)" fg:x="59432798" fg:w="41218016"/><text x="26.1611%" y="2207.50">&lt;T as alloc::slice::hack::Co..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (41,218,016 samples, 17.97%)</title><rect x="25.9111%" y="2181" width="17.9699%" height="15" fill="rgb(230,72,3)" fg:x="59432798" fg:w="41218016"/><text x="26.1611%" y="2191.50">&lt;css_bitvector_compiler::Htm..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (41,218,016 samples, 17.97%)</title><rect x="25.9111%" y="2165" width="17.9699%" height="15" fill="rgb(232,218,39)" fg:x="59432798" fg:w="41218016"/><text x="26.1611%" y="2175.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (41,218,016 samples, 17.97%)</title><rect x="25.9111%" y="2149" width="17.9699%" height="15" fill="rgb(248,166,6)" fg:x="59432798" fg:w="41218016"/><text x="26.1611%" y="2159.50">alloc::slice::&lt;impl [T]&gt;::to..</text></g><g><title>alloc::slice::hack::to_vec (41,218,016 samples, 17.97%)</title><rect x="25.9111%" y="2133" width="17.9699%" height="15" fill="rgb(247,89,20)" fg:x="59432798" fg:w="41218016"/><text x="26.1611%" y="2143.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (41,218,016 samples, 17.97%)</title><rect x="25.9111%" y="2117" width="17.9699%" height="15" fill="rgb(248,130,54)" fg:x="59432798" fg:w="41218016"/><text x="26.1611%" y="2127.50">&lt;T as alloc::slice::hack::Co..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,310,054 samples, 0.57%)</title><rect x="43.3098%" y="2101" width="0.5711%" height="15" fill="rgb(234,196,4)" fg:x="99340760" fg:w="1310054"/><text x="43.5598%" y="2111.50"></text></g><g><title>__rdl_alloc (1,378,397 samples, 0.60%)</title><rect x="43.8810%" y="2037" width="0.6009%" height="15" fill="rgb(250,143,31)" fg:x="100650814" fg:w="1378397"/><text x="44.1310%" y="2047.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,378,397 samples, 0.60%)</title><rect x="43.8810%" y="2021" width="0.6009%" height="15" fill="rgb(211,110,34)" fg:x="100650814" fg:w="1378397"/><text x="44.1310%" y="2031.50"></text></g><g><title>__rust_alloc (1,392,341 samples, 0.61%)</title><rect x="44.4819%" y="2037" width="0.6070%" height="15" fill="rgb(215,124,48)" fg:x="102029211" fg:w="1392341"/><text x="44.7319%" y="2047.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5,524,766 samples, 2.41%)</title><rect x="43.8810%" y="2245" width="2.4086%" height="15" fill="rgb(216,46,13)" fg:x="100650814" fg:w="5524766"/><text x="44.1310%" y="2255.50">&lt;c..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,524,766 samples, 2.41%)</title><rect x="43.8810%" y="2229" width="2.4086%" height="15" fill="rgb(205,184,25)" fg:x="100650814" fg:w="5524766"/><text x="44.1310%" y="2239.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,524,766 samples, 2.41%)</title><rect x="43.8810%" y="2213" width="2.4086%" height="15" fill="rgb(228,1,10)" fg:x="100650814" fg:w="5524766"/><text x="44.1310%" y="2223.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,524,766 samples, 2.41%)</title><rect x="43.8810%" y="2197" width="2.4086%" height="15" fill="rgb(213,116,27)" fg:x="100650814" fg:w="5524766"/><text x="44.1310%" y="2207.50">al..</text></g><g><title>alloc::slice::hack::to_vec (5,524,766 samples, 2.41%)</title><rect x="43.8810%" y="2181" width="2.4086%" height="15" fill="rgb(241,95,50)" fg:x="100650814" fg:w="5524766"/><text x="44.1310%" y="2191.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,524,766 samples, 2.41%)</title><rect x="43.8810%" y="2165" width="2.4086%" height="15" fill="rgb(238,48,32)" fg:x="100650814" fg:w="5524766"/><text x="44.1310%" y="2175.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,524,766 samples, 2.41%)</title><rect x="43.8810%" y="2149" width="2.4086%" height="15" fill="rgb(235,113,49)" fg:x="100650814" fg:w="5524766"/><text x="44.1310%" y="2159.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,524,766 samples, 2.41%)</title><rect x="43.8810%" y="2133" width="2.4086%" height="15" fill="rgb(205,127,43)" fg:x="100650814" fg:w="5524766"/><text x="44.1310%" y="2143.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,524,766 samples, 2.41%)</title><rect x="43.8810%" y="2117" width="2.4086%" height="15" fill="rgb(250,162,2)" fg:x="100650814" fg:w="5524766"/><text x="44.1310%" y="2127.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,524,766 samples, 2.41%)</title><rect x="43.8810%" y="2101" width="2.4086%" height="15" fill="rgb(220,13,41)" fg:x="100650814" fg:w="5524766"/><text x="44.1310%" y="2111.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,524,766 samples, 2.41%)</title><rect x="43.8810%" y="2085" width="2.4086%" height="15" fill="rgb(249,221,25)" fg:x="100650814" fg:w="5524766"/><text x="44.1310%" y="2095.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,524,766 samples, 2.41%)</title><rect x="43.8810%" y="2069" width="2.4086%" height="15" fill="rgb(215,208,19)" fg:x="100650814" fg:w="5524766"/><text x="44.1310%" y="2079.50">al..</text></g><g><title>alloc::alloc::alloc (5,524,766 samples, 2.41%)</title><rect x="43.8810%" y="2053" width="2.4086%" height="15" fill="rgb(236,175,2)" fg:x="100650814" fg:w="5524766"/><text x="44.1310%" y="2063.50">al..</text></g><g><title>malloc (2,754,028 samples, 1.20%)</title><rect x="45.0890%" y="2037" width="1.2007%" height="15" fill="rgb(241,52,2)" fg:x="103421552" fg:w="2754028"/><text x="45.3390%" y="2047.50"></text></g><g><title>[libc.so.6] (2,754,028 samples, 1.20%)</title><rect x="45.0890%" y="2021" width="1.2007%" height="15" fill="rgb(248,140,14)" fg:x="103421552" fg:w="2754028"/><text x="45.3390%" y="2031.50"></text></g><g><title>[libc.so.6] (1,307,311 samples, 0.57%)</title><rect x="45.7197%" y="2005" width="0.5700%" height="15" fill="rgb(253,22,42)" fg:x="104868269" fg:w="1307311"/><text x="45.9697%" y="2015.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,127,836 samples, 1.80%)</title><rect x="46.2896%" y="2165" width="1.7996%" height="15" fill="rgb(234,61,47)" fg:x="106175580" fg:w="4127836"/><text x="46.5396%" y="2175.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,127,836 samples, 1.80%)</title><rect x="46.2896%" y="2149" width="1.7996%" height="15" fill="rgb(208,226,15)" fg:x="106175580" fg:w="4127836"/><text x="46.5396%" y="2159.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,127,836 samples, 1.80%)</title><rect x="46.2896%" y="2133" width="1.7996%" height="15" fill="rgb(217,221,4)" fg:x="106175580" fg:w="4127836"/><text x="46.5396%" y="2143.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,127,836 samples, 1.80%)</title><rect x="46.2896%" y="2117" width="1.7996%" height="15" fill="rgb(212,174,34)" fg:x="106175580" fg:w="4127836"/><text x="46.5396%" y="2127.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,127,836 samples, 1.80%)</title><rect x="46.2896%" y="2101" width="1.7996%" height="15" fill="rgb(253,83,4)" fg:x="106175580" fg:w="4127836"/><text x="46.5396%" y="2111.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (4,127,836 samples, 1.80%)</title><rect x="46.2896%" y="2085" width="1.7996%" height="15" fill="rgb(250,195,49)" fg:x="106175580" fg:w="4127836"/><text x="46.5396%" y="2095.50">a..</text></g><g><title>alloc::alloc::alloc (4,127,836 samples, 1.80%)</title><rect x="46.2896%" y="2069" width="1.7996%" height="15" fill="rgb(241,192,25)" fg:x="106175580" fg:w="4127836"/><text x="46.5396%" y="2079.50">a..</text></g><g><title>malloc (4,127,836 samples, 1.80%)</title><rect x="46.2896%" y="2053" width="1.7996%" height="15" fill="rgb(208,124,10)" fg:x="106175580" fg:w="4127836"/><text x="46.5396%" y="2063.50">m..</text></g><g><title>[libc.so.6] (4,127,836 samples, 1.80%)</title><rect x="46.2896%" y="2037" width="1.7996%" height="15" fill="rgb(222,33,0)" fg:x="106175580" fg:w="4127836"/><text x="46.5396%" y="2047.50">[..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (54,442,300 samples, 23.74%)</title><rect x="24.8805%" y="2261" width="23.7353%" height="15" fill="rgb(234,209,28)" fg:x="57068979" fg:w="54442300"/><text x="25.1305%" y="2271.50">&lt;css_bitvector_compiler::HtmlNode as c..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (5,335,699 samples, 2.33%)</title><rect x="46.2896%" y="2245" width="2.3262%" height="15" fill="rgb(224,11,23)" fg:x="106175580" fg:w="5335699"/><text x="46.5396%" y="2255.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,335,699 samples, 2.33%)</title><rect x="46.2896%" y="2229" width="2.3262%" height="15" fill="rgb(232,99,1)" fg:x="106175580" fg:w="5335699"/><text x="46.5396%" y="2239.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,335,699 samples, 2.33%)</title><rect x="46.2896%" y="2213" width="2.3262%" height="15" fill="rgb(237,95,45)" fg:x="106175580" fg:w="5335699"/><text x="46.5396%" y="2223.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,335,699 samples, 2.33%)</title><rect x="46.2896%" y="2197" width="2.3262%" height="15" fill="rgb(208,109,11)" fg:x="106175580" fg:w="5335699"/><text x="46.5396%" y="2207.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,335,699 samples, 2.33%)</title><rect x="46.2896%" y="2181" width="2.3262%" height="15" fill="rgb(216,190,48)" fg:x="106175580" fg:w="5335699"/><text x="46.5396%" y="2191.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,207,863 samples, 0.53%)</title><rect x="48.0893%" y="2165" width="0.5266%" height="15" fill="rgb(251,171,36)" fg:x="110303416" fg:w="1207863"/><text x="48.3393%" y="2175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,207,863 samples, 0.53%)</title><rect x="48.0893%" y="2149" width="0.5266%" height="15" fill="rgb(230,62,22)" fg:x="110303416" fg:w="1207863"/><text x="48.3393%" y="2159.50"></text></g><g><title>[libc.so.6] (1,207,863 samples, 0.53%)</title><rect x="48.0893%" y="2133" width="0.5266%" height="15" fill="rgb(225,114,35)" fg:x="110303416" fg:w="1207863"/><text x="48.3393%" y="2143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (57,235,122 samples, 24.95%)</title><rect x="24.2749%" y="2325" width="24.9529%" height="15" fill="rgb(215,118,42)" fg:x="55679998" fg:w="57235122"/><text x="24.5249%" y="2335.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (57,235,122 samples, 24.95%)</title><rect x="24.2749%" y="2309" width="24.9529%" height="15" fill="rgb(243,119,21)" fg:x="55679998" fg:w="57235122"/><text x="24.5249%" y="2319.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (57,235,122 samples, 24.95%)</title><rect x="24.2749%" y="2293" width="24.9529%" height="15" fill="rgb(252,177,53)" fg:x="55679998" fg:w="57235122"/><text x="24.5249%" y="2303.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (57,235,122 samples, 24.95%)</title><rect x="24.2749%" y="2277" width="24.9529%" height="15" fill="rgb(237,209,29)" fg:x="55679998" fg:w="57235122"/><text x="24.5249%" y="2287.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::t..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,403,841 samples, 0.61%)</title><rect x="48.6159%" y="2261" width="0.6120%" height="15" fill="rgb(212,65,23)" fg:x="111511279" fg:w="1403841"/><text x="48.8659%" y="2271.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,542,347 samples, 0.67%)</title><rect x="49.2279%" y="2325" width="0.6724%" height="15" fill="rgb(230,222,46)" fg:x="112915120" fg:w="1542347"/><text x="49.4779%" y="2335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,542,347 samples, 0.67%)</title><rect x="49.2279%" y="2309" width="0.6724%" height="15" fill="rgb(215,135,32)" fg:x="112915120" fg:w="1542347"/><text x="49.4779%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,542,347 samples, 0.67%)</title><rect x="49.2279%" y="2293" width="0.6724%" height="15" fill="rgb(246,101,22)" fg:x="112915120" fg:w="1542347"/><text x="49.4779%" y="2303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,542,347 samples, 0.67%)</title><rect x="49.2279%" y="2277" width="0.6724%" height="15" fill="rgb(206,107,13)" fg:x="112915120" fg:w="1542347"/><text x="49.4779%" y="2287.50"></text></g><g><title>alloc::slice::hack::to_vec (1,542,347 samples, 0.67%)</title><rect x="49.2279%" y="2261" width="0.6724%" height="15" fill="rgb(250,100,44)" fg:x="112915120" fg:w="1542347"/><text x="49.4779%" y="2271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,542,347 samples, 0.67%)</title><rect x="49.2279%" y="2245" width="0.6724%" height="15" fill="rgb(231,147,38)" fg:x="112915120" fg:w="1542347"/><text x="49.4779%" y="2255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,542,347 samples, 0.67%)</title><rect x="49.2279%" y="2229" width="0.6724%" height="15" fill="rgb(229,8,40)" fg:x="112915120" fg:w="1542347"/><text x="49.4779%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,542,347 samples, 0.67%)</title><rect x="49.2279%" y="2213" width="0.6724%" height="15" fill="rgb(221,135,30)" fg:x="112915120" fg:w="1542347"/><text x="49.4779%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,542,347 samples, 0.67%)</title><rect x="49.2279%" y="2197" width="0.6724%" height="15" fill="rgb(249,193,18)" fg:x="112915120" fg:w="1542347"/><text x="49.4779%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,542,347 samples, 0.67%)</title><rect x="49.2279%" y="2181" width="0.6724%" height="15" fill="rgb(209,133,39)" fg:x="112915120" fg:w="1542347"/><text x="49.4779%" y="2191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,542,347 samples, 0.67%)</title><rect x="49.2279%" y="2165" width="0.6724%" height="15" fill="rgb(232,100,14)" fg:x="112915120" fg:w="1542347"/><text x="49.4779%" y="2175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,542,347 samples, 0.67%)</title><rect x="49.2279%" y="2149" width="0.6724%" height="15" fill="rgb(224,185,1)" fg:x="112915120" fg:w="1542347"/><text x="49.4779%" y="2159.50"></text></g><g><title>alloc::alloc::alloc (1,542,347 samples, 0.67%)</title><rect x="49.2279%" y="2133" width="0.6724%" height="15" fill="rgb(223,139,8)" fg:x="112915120" fg:w="1542347"/><text x="49.4779%" y="2143.50"></text></g><g><title>[libc.so.6] (1,542,347 samples, 0.67%)</title><rect x="49.2279%" y="2117" width="0.6724%" height="15" fill="rgb(232,213,38)" fg:x="112915120" fg:w="1542347"/><text x="49.4779%" y="2127.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (64,206,163 samples, 27.99%)</title><rect x="22.4646%" y="2341" width="27.9921%" height="15" fill="rgb(207,94,22)" fg:x="51527558" fg:w="64206163"/><text x="22.7146%" y="2351.50">&lt;css_bitvector_compiler::HtmlNode as core::cl..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,276,254 samples, 0.56%)</title><rect x="49.9003%" y="2325" width="0.5564%" height="15" fill="rgb(219,183,54)" fg:x="114457467" fg:w="1276254"/><text x="50.1503%" y="2335.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,276,254 samples, 0.56%)</title><rect x="49.9003%" y="2309" width="0.5564%" height="15" fill="rgb(216,185,54)" fg:x="114457467" fg:w="1276254"/><text x="50.1503%" y="2319.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,276,254 samples, 0.56%)</title><rect x="49.9003%" y="2293" width="0.5564%" height="15" fill="rgb(254,217,39)" fg:x="114457467" fg:w="1276254"/><text x="50.1503%" y="2303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,276,254 samples, 0.56%)</title><rect x="49.9003%" y="2277" width="0.5564%" height="15" fill="rgb(240,178,23)" fg:x="114457467" fg:w="1276254"/><text x="50.1503%" y="2287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,276,254 samples, 0.56%)</title><rect x="49.9003%" y="2261" width="0.5564%" height="15" fill="rgb(218,11,47)" fg:x="114457467" fg:w="1276254"/><text x="50.1503%" y="2271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,276,254 samples, 0.56%)</title><rect x="49.9003%" y="2245" width="0.5564%" height="15" fill="rgb(218,51,51)" fg:x="114457467" fg:w="1276254"/><text x="50.1503%" y="2255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1,276,254 samples, 0.56%)</title><rect x="49.9003%" y="2229" width="0.5564%" height="15" fill="rgb(238,126,27)" fg:x="114457467" fg:w="1276254"/><text x="50.1503%" y="2239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,276,254 samples, 0.56%)</title><rect x="49.9003%" y="2213" width="0.5564%" height="15" fill="rgb(249,202,22)" fg:x="114457467" fg:w="1276254"/><text x="50.1503%" y="2223.50"></text></g><g><title>[libc.so.6] (1,276,254 samples, 0.56%)</title><rect x="49.9003%" y="2197" width="0.5564%" height="15" fill="rgb(254,195,49)" fg:x="114457467" fg:w="1276254"/><text x="50.1503%" y="2207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (65,455,639 samples, 28.54%)</title><rect x="22.4646%" y="2405" width="28.5369%" height="15" fill="rgb(208,123,14)" fg:x="51527558" fg:w="65455639"/><text x="22.7146%" y="2415.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (65,455,639 samples, 28.54%)</title><rect x="22.4646%" y="2389" width="28.5369%" height="15" fill="rgb(224,200,8)" fg:x="51527558" fg:w="65455639"/><text x="22.7146%" y="2399.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (65,455,639 samples, 28.54%)</title><rect x="22.4646%" y="2373" width="28.5369%" height="15" fill="rgb(217,61,36)" fg:x="51527558" fg:w="65455639"/><text x="22.7146%" y="2383.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (65,455,639 samples, 28.54%)</title><rect x="22.4646%" y="2357" width="28.5369%" height="15" fill="rgb(206,35,45)" fg:x="51527558" fg:w="65455639"/><text x="22.7146%" y="2367.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,249,476 samples, 0.54%)</title><rect x="50.4567%" y="2341" width="0.5447%" height="15" fill="rgb(217,65,33)" fg:x="115733721" fg:w="1249476"/><text x="50.7067%" y="2351.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,385,321 samples, 0.60%)</title><rect x="51.0015%" y="2405" width="0.6040%" height="15" fill="rgb(222,158,48)" fg:x="116983197" fg:w="1385321"/><text x="51.2515%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,385,321 samples, 0.60%)</title><rect x="51.0015%" y="2389" width="0.6040%" height="15" fill="rgb(254,2,54)" fg:x="116983197" fg:w="1385321"/><text x="51.2515%" y="2399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,385,321 samples, 0.60%)</title><rect x="51.0015%" y="2373" width="0.6040%" height="15" fill="rgb(250,143,38)" fg:x="116983197" fg:w="1385321"/><text x="51.2515%" y="2383.50"></text></g><g><title>alloc::slice::hack::to_vec (1,385,321 samples, 0.60%)</title><rect x="51.0015%" y="2357" width="0.6040%" height="15" fill="rgb(248,25,0)" fg:x="116983197" fg:w="1385321"/><text x="51.2515%" y="2367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,385,321 samples, 0.60%)</title><rect x="51.0015%" y="2341" width="0.6040%" height="15" fill="rgb(206,152,27)" fg:x="116983197" fg:w="1385321"/><text x="51.2515%" y="2351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,385,321 samples, 0.60%)</title><rect x="51.0015%" y="2325" width="0.6040%" height="15" fill="rgb(240,77,30)" fg:x="116983197" fg:w="1385321"/><text x="51.2515%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,385,321 samples, 0.60%)</title><rect x="51.0015%" y="2309" width="0.6040%" height="15" fill="rgb(231,5,3)" fg:x="116983197" fg:w="1385321"/><text x="51.2515%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,385,321 samples, 0.60%)</title><rect x="51.0015%" y="2293" width="0.6040%" height="15" fill="rgb(207,226,32)" fg:x="116983197" fg:w="1385321"/><text x="51.2515%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,385,321 samples, 0.60%)</title><rect x="51.0015%" y="2277" width="0.6040%" height="15" fill="rgb(222,207,47)" fg:x="116983197" fg:w="1385321"/><text x="51.2515%" y="2287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,385,321 samples, 0.60%)</title><rect x="51.0015%" y="2261" width="0.6040%" height="15" fill="rgb(229,115,45)" fg:x="116983197" fg:w="1385321"/><text x="51.2515%" y="2271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,385,321 samples, 0.60%)</title><rect x="51.0015%" y="2245" width="0.6040%" height="15" fill="rgb(224,191,6)" fg:x="116983197" fg:w="1385321"/><text x="51.2515%" y="2255.50"></text></g><g><title>alloc::alloc::alloc (1,385,321 samples, 0.60%)</title><rect x="51.0015%" y="2229" width="0.6040%" height="15" fill="rgb(230,227,24)" fg:x="116983197" fg:w="1385321"/><text x="51.2515%" y="2239.50"></text></g><g><title>malloc (1,385,321 samples, 0.60%)</title><rect x="51.0015%" y="2213" width="0.6040%" height="15" fill="rgb(228,80,19)" fg:x="116983197" fg:w="1385321"/><text x="51.2515%" y="2223.50"></text></g><g><title>[libc.so.6] (1,385,321 samples, 0.60%)</title><rect x="51.0015%" y="2197" width="0.6040%" height="15" fill="rgb(247,229,0)" fg:x="116983197" fg:w="1385321"/><text x="51.2515%" y="2207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (71,065,112 samples, 30.98%)</title><rect x="21.2056%" y="2485" width="30.9824%" height="15" fill="rgb(237,194,15)" fg:x="48639686" fg:w="71065112"/><text x="21.4556%" y="2495.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (71,065,112 samples, 30.98%)</title><rect x="21.2056%" y="2469" width="30.9824%" height="15" fill="rgb(219,203,20)" fg:x="48639686" fg:w="71065112"/><text x="21.4556%" y="2479.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (71,065,112 samples, 30.98%)</title><rect x="21.2056%" y="2453" width="30.9824%" height="15" fill="rgb(234,128,8)" fg:x="48639686" fg:w="71065112"/><text x="21.4556%" y="2463.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (71,065,112 samples, 30.98%)</title><rect x="21.2056%" y="2437" width="30.9824%" height="15" fill="rgb(248,202,8)" fg:x="48639686" fg:w="71065112"/><text x="21.4556%" y="2447.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (71,065,112 samples, 30.98%)</title><rect x="21.2056%" y="2421" width="30.9824%" height="15" fill="rgb(206,104,37)" fg:x="48639686" fg:w="71065112"/><text x="21.4556%" y="2431.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,336,280 samples, 0.58%)</title><rect x="51.6054%" y="2405" width="0.5826%" height="15" fill="rgb(223,8,27)" fg:x="118368518" fg:w="1336280"/><text x="51.8554%" y="2415.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,336,280 samples, 0.58%)</title><rect x="51.6054%" y="2389" width="0.5826%" height="15" fill="rgb(216,217,28)" fg:x="118368518" fg:w="1336280"/><text x="51.8554%" y="2399.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,336,280 samples, 0.58%)</title><rect x="51.6054%" y="2373" width="0.5826%" height="15" fill="rgb(249,199,1)" fg:x="118368518" fg:w="1336280"/><text x="51.8554%" y="2383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,336,280 samples, 0.58%)</title><rect x="51.6054%" y="2357" width="0.5826%" height="15" fill="rgb(240,85,17)" fg:x="118368518" fg:w="1336280"/><text x="51.8554%" y="2367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,336,280 samples, 0.58%)</title><rect x="51.6054%" y="2341" width="0.5826%" height="15" fill="rgb(206,108,45)" fg:x="118368518" fg:w="1336280"/><text x="51.8554%" y="2351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,336,280 samples, 0.58%)</title><rect x="51.6054%" y="2325" width="0.5826%" height="15" fill="rgb(245,210,41)" fg:x="118368518" fg:w="1336280"/><text x="51.8554%" y="2335.50"></text></g><g><title>core::clone::Clone::clone (1,336,280 samples, 0.58%)</title><rect x="51.6054%" y="2309" width="0.5826%" height="15" fill="rgb(206,13,37)" fg:x="118368518" fg:w="1336280"/><text x="51.8554%" y="2319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,336,280 samples, 0.58%)</title><rect x="51.6054%" y="2293" width="0.5826%" height="15" fill="rgb(250,61,18)" fg:x="118368518" fg:w="1336280"/><text x="51.8554%" y="2303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,401,991 samples, 0.61%)</title><rect x="52.1880%" y="2389" width="0.6112%" height="15" fill="rgb(235,172,48)" fg:x="119704798" fg:w="1401991"/><text x="52.4380%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,401,991 samples, 0.61%)</title><rect x="52.1880%" y="2373" width="0.6112%" height="15" fill="rgb(249,201,17)" fg:x="119704798" fg:w="1401991"/><text x="52.4380%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,401,991 samples, 0.61%)</title><rect x="52.1880%" y="2357" width="0.6112%" height="15" fill="rgb(219,208,6)" fg:x="119704798" fg:w="1401991"/><text x="52.4380%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,401,991 samples, 0.61%)</title><rect x="52.1880%" y="2341" width="0.6112%" height="15" fill="rgb(248,31,23)" fg:x="119704798" fg:w="1401991"/><text x="52.4380%" y="2351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,401,991 samples, 0.61%)</title><rect x="52.1880%" y="2325" width="0.6112%" height="15" fill="rgb(245,15,42)" fg:x="119704798" fg:w="1401991"/><text x="52.4380%" y="2335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,401,991 samples, 0.61%)</title><rect x="52.1880%" y="2309" width="0.6112%" height="15" fill="rgb(222,217,39)" fg:x="119704798" fg:w="1401991"/><text x="52.4380%" y="2319.50"></text></g><g><title>alloc::alloc::alloc (1,401,991 samples, 0.61%)</title><rect x="52.1880%" y="2293" width="0.6112%" height="15" fill="rgb(210,219,27)" fg:x="119704798" fg:w="1401991"/><text x="52.4380%" y="2303.50"></text></g><g><title>__rdl_alloc (1,401,991 samples, 0.61%)</title><rect x="52.1880%" y="2277" width="0.6112%" height="15" fill="rgb(252,166,36)" fg:x="119704798" fg:w="1401991"/><text x="52.4380%" y="2287.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,401,991 samples, 0.61%)</title><rect x="52.1880%" y="2261" width="0.6112%" height="15" fill="rgb(245,132,34)" fg:x="119704798" fg:w="1401991"/><text x="52.4380%" y="2271.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,794,718 samples, 1.22%)</title><rect x="52.1880%" y="2485" width="1.2184%" height="15" fill="rgb(236,54,3)" fg:x="119704798" fg:w="2794718"/><text x="52.4380%" y="2495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,794,718 samples, 1.22%)</title><rect x="52.1880%" y="2469" width="1.2184%" height="15" fill="rgb(241,173,43)" fg:x="119704798" fg:w="2794718"/><text x="52.4380%" y="2479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,794,718 samples, 1.22%)</title><rect x="52.1880%" y="2453" width="1.2184%" height="15" fill="rgb(215,190,9)" fg:x="119704798" fg:w="2794718"/><text x="52.4380%" y="2463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,794,718 samples, 1.22%)</title><rect x="52.1880%" y="2437" width="1.2184%" height="15" fill="rgb(242,101,16)" fg:x="119704798" fg:w="2794718"/><text x="52.4380%" y="2447.50"></text></g><g><title>alloc::slice::hack::to_vec (2,794,718 samples, 1.22%)</title><rect x="52.1880%" y="2421" width="1.2184%" height="15" fill="rgb(223,190,21)" fg:x="119704798" fg:w="2794718"/><text x="52.4380%" y="2431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,794,718 samples, 1.22%)</title><rect x="52.1880%" y="2405" width="1.2184%" height="15" fill="rgb(215,228,25)" fg:x="119704798" fg:w="2794718"/><text x="52.4380%" y="2415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,392,727 samples, 0.61%)</title><rect x="52.7992%" y="2389" width="0.6072%" height="15" fill="rgb(225,36,22)" fg:x="121106789" fg:w="1392727"/><text x="53.0492%" y="2399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,392,727 samples, 0.61%)</title><rect x="52.7992%" y="2373" width="0.6072%" height="15" fill="rgb(251,106,46)" fg:x="121106789" fg:w="1392727"/><text x="53.0492%" y="2383.50"></text></g><g><title>[libc.so.6] (1,392,727 samples, 0.61%)</title><rect x="52.7992%" y="2357" width="0.6072%" height="15" fill="rgb(208,90,1)" fg:x="121106789" fg:w="1392727"/><text x="53.0492%" y="2367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (76,692,737 samples, 33.44%)</title><rect x="20.6503%" y="2565" width="33.4359%" height="15" fill="rgb(243,10,4)" fg:x="47366100" fg:w="76692737"/><text x="20.9003%" y="2575.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (76,692,737 samples, 33.44%)</title><rect x="20.6503%" y="2549" width="33.4359%" height="15" fill="rgb(212,137,27)" fg:x="47366100" fg:w="76692737"/><text x="20.9003%" y="2559.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (76,692,737 samples, 33.44%)</title><rect x="20.6503%" y="2533" width="33.4359%" height="15" fill="rgb(231,220,49)" fg:x="47366100" fg:w="76692737"/><text x="20.9003%" y="2543.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (76,692,737 samples, 33.44%)</title><rect x="20.6503%" y="2517" width="33.4359%" height="15" fill="rgb(237,96,20)" fg:x="47366100" fg:w="76692737"/><text x="20.9003%" y="2527.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (76,692,737 samples, 33.44%)</title><rect x="20.6503%" y="2501" width="33.4359%" height="15" fill="rgb(239,229,30)" fg:x="47366100" fg:w="76692737"/><text x="20.9003%" y="2511.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clon..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,559,321 samples, 0.68%)</title><rect x="53.4064%" y="2485" width="0.6798%" height="15" fill="rgb(219,65,33)" fg:x="122499516" fg:w="1559321"/><text x="53.6564%" y="2495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,559,321 samples, 0.68%)</title><rect x="53.4064%" y="2469" width="0.6798%" height="15" fill="rgb(243,134,7)" fg:x="122499516" fg:w="1559321"/><text x="53.6564%" y="2479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,559,321 samples, 0.68%)</title><rect x="53.4064%" y="2453" width="0.6798%" height="15" fill="rgb(216,177,54)" fg:x="122499516" fg:w="1559321"/><text x="53.6564%" y="2463.50"></text></g><g><title>alloc::slice::hack::to_vec (1,559,321 samples, 0.68%)</title><rect x="53.4064%" y="2437" width="0.6798%" height="15" fill="rgb(211,160,20)" fg:x="122499516" fg:w="1559321"/><text x="53.6564%" y="2447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,559,321 samples, 0.68%)</title><rect x="53.4064%" y="2421" width="0.6798%" height="15" fill="rgb(239,85,39)" fg:x="122499516" fg:w="1559321"/><text x="53.6564%" y="2431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,559,321 samples, 0.68%)</title><rect x="53.4064%" y="2405" width="0.6798%" height="15" fill="rgb(232,125,22)" fg:x="122499516" fg:w="1559321"/><text x="53.6564%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,559,321 samples, 0.68%)</title><rect x="53.4064%" y="2389" width="0.6798%" height="15" fill="rgb(244,57,34)" fg:x="122499516" fg:w="1559321"/><text x="53.6564%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,559,321 samples, 0.68%)</title><rect x="53.4064%" y="2373" width="0.6798%" height="15" fill="rgb(214,203,32)" fg:x="122499516" fg:w="1559321"/><text x="53.6564%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,559,321 samples, 0.68%)</title><rect x="53.4064%" y="2357" width="0.6798%" height="15" fill="rgb(207,58,43)" fg:x="122499516" fg:w="1559321"/><text x="53.6564%" y="2367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,559,321 samples, 0.68%)</title><rect x="53.4064%" y="2341" width="0.6798%" height="15" fill="rgb(215,193,15)" fg:x="122499516" fg:w="1559321"/><text x="53.6564%" y="2351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,559,321 samples, 0.68%)</title><rect x="53.4064%" y="2325" width="0.6798%" height="15" fill="rgb(232,15,44)" fg:x="122499516" fg:w="1559321"/><text x="53.6564%" y="2335.50"></text></g><g><title>alloc::alloc::alloc (1,559,321 samples, 0.68%)</title><rect x="53.4064%" y="2309" width="0.6798%" height="15" fill="rgb(212,3,48)" fg:x="122499516" fg:w="1559321"/><text x="53.6564%" y="2319.50"></text></g><g><title>malloc (1,559,321 samples, 0.68%)</title><rect x="53.4064%" y="2293" width="0.6798%" height="15" fill="rgb(218,128,7)" fg:x="122499516" fg:w="1559321"/><text x="53.6564%" y="2303.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (79,472,147 samples, 34.65%)</title><rect x="19.9911%" y="2581" width="34.6477%" height="15" fill="rgb(226,216,39)" fg:x="45854113" fg:w="79472147"/><text x="20.2411%" y="2591.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,267,423 samples, 0.55%)</title><rect x="54.0862%" y="2565" width="0.5526%" height="15" fill="rgb(243,47,51)" fg:x="124058837" fg:w="1267423"/><text x="54.3362%" y="2575.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (84,760,529 samples, 36.95%)</title><rect x="19.9911%" y="2821" width="36.9533%" height="15" fill="rgb(241,183,40)" fg:x="45854113" fg:w="84760529"/><text x="20.2411%" y="2831.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::cl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (84,760,529 samples, 36.95%)</title><rect x="19.9911%" y="2805" width="36.9533%" height="15" fill="rgb(231,217,32)" fg:x="45854113" fg:w="84760529"/><text x="20.2411%" y="2815.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (84,760,529 samples, 36.95%)</title><rect x="19.9911%" y="2789" width="36.9533%" height="15" fill="rgb(229,61,38)" fg:x="45854113" fg:w="84760529"/><text x="20.2411%" y="2799.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (84,760,529 samples, 36.95%)</title><rect x="19.9911%" y="2773" width="36.9533%" height="15" fill="rgb(225,210,5)" fg:x="45854113" fg:w="84760529"/><text x="20.2411%" y="2783.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (84,760,529 samples, 36.95%)</title><rect x="19.9911%" y="2757" width="36.9533%" height="15" fill="rgb(231,79,45)" fg:x="45854113" fg:w="84760529"/><text x="20.2411%" y="2767.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (84,760,529 samples, 36.95%)</title><rect x="19.9911%" y="2741" width="36.9533%" height="15" fill="rgb(224,100,7)" fg:x="45854113" fg:w="84760529"/><text x="20.2411%" y="2751.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::cl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (84,760,529 samples, 36.95%)</title><rect x="19.9911%" y="2725" width="36.9533%" height="15" fill="rgb(241,198,18)" fg:x="45854113" fg:w="84760529"/><text x="20.2411%" y="2735.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (84,760,529 samples, 36.95%)</title><rect x="19.9911%" y="2709" width="36.9533%" height="15" fill="rgb(252,97,53)" fg:x="45854113" fg:w="84760529"/><text x="20.2411%" y="2719.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (84,760,529 samples, 36.95%)</title><rect x="19.9911%" y="2693" width="36.9533%" height="15" fill="rgb(220,88,7)" fg:x="45854113" fg:w="84760529"/><text x="20.2411%" y="2703.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (84,760,529 samples, 36.95%)</title><rect x="19.9911%" y="2677" width="36.9533%" height="15" fill="rgb(213,176,14)" fg:x="45854113" fg:w="84760529"/><text x="20.2411%" y="2687.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (84,760,529 samples, 36.95%)</title><rect x="19.9911%" y="2661" width="36.9533%" height="15" fill="rgb(246,73,7)" fg:x="45854113" fg:w="84760529"/><text x="20.2411%" y="2671.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::cl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (84,760,529 samples, 36.95%)</title><rect x="19.9911%" y="2645" width="36.9533%" height="15" fill="rgb(245,64,36)" fg:x="45854113" fg:w="84760529"/><text x="20.2411%" y="2655.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (84,760,529 samples, 36.95%)</title><rect x="19.9911%" y="2629" width="36.9533%" height="15" fill="rgb(245,80,10)" fg:x="45854113" fg:w="84760529"/><text x="20.2411%" y="2639.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (84,760,529 samples, 36.95%)</title><rect x="19.9911%" y="2613" width="36.9533%" height="15" fill="rgb(232,107,50)" fg:x="45854113" fg:w="84760529"/><text x="20.2411%" y="2623.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (84,760,529 samples, 36.95%)</title><rect x="19.9911%" y="2597" width="36.9533%" height="15" fill="rgb(253,3,0)" fg:x="45854113" fg:w="84760529"/><text x="20.2411%" y="2607.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,288,382 samples, 2.31%)</title><rect x="54.6388%" y="2581" width="2.3056%" height="15" fill="rgb(212,99,53)" fg:x="125326260" fg:w="5288382"/><text x="54.8888%" y="2591.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,288,382 samples, 2.31%)</title><rect x="54.6388%" y="2565" width="2.3056%" height="15" fill="rgb(249,111,54)" fg:x="125326260" fg:w="5288382"/><text x="54.8888%" y="2575.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,288,382 samples, 2.31%)</title><rect x="54.6388%" y="2549" width="2.3056%" height="15" fill="rgb(249,55,30)" fg:x="125326260" fg:w="5288382"/><text x="54.8888%" y="2559.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,288,382 samples, 2.31%)</title><rect x="54.6388%" y="2533" width="2.3056%" height="15" fill="rgb(237,47,42)" fg:x="125326260" fg:w="5288382"/><text x="54.8888%" y="2543.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,288,382 samples, 2.31%)</title><rect x="54.6388%" y="2517" width="2.3056%" height="15" fill="rgb(211,20,18)" fg:x="125326260" fg:w="5288382"/><text x="54.8888%" y="2527.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,288,382 samples, 2.31%)</title><rect x="54.6388%" y="2501" width="2.3056%" height="15" fill="rgb(231,203,46)" fg:x="125326260" fg:w="5288382"/><text x="54.8888%" y="2511.50">a..</text></g><g><title>alloc::alloc::alloc (5,288,382 samples, 2.31%)</title><rect x="54.6388%" y="2485" width="2.3056%" height="15" fill="rgb(237,142,3)" fg:x="125326260" fg:w="5288382"/><text x="54.8888%" y="2495.50">a..</text></g><g><title>malloc (5,288,382 samples, 2.31%)</title><rect x="54.6388%" y="2469" width="2.3056%" height="15" fill="rgb(241,107,1)" fg:x="125326260" fg:w="5288382"/><text x="54.8888%" y="2479.50">m..</text></g><g><title>[libc.so.6] (5,288,382 samples, 2.31%)</title><rect x="54.6388%" y="2453" width="2.3056%" height="15" fill="rgb(229,83,13)" fg:x="125326260" fg:w="5288382"/><text x="54.8888%" y="2463.50">[..</text></g><g><title>[libc.so.6] (3,974,611 samples, 1.73%)</title><rect x="55.2116%" y="2437" width="1.7328%" height="15" fill="rgb(241,91,40)" fg:x="126640031" fg:w="3974611"/><text x="55.4616%" y="2447.50"></text></g><g><title>[libc.so.6] (2,650,676 samples, 1.16%)</title><rect x="55.7888%" y="2421" width="1.1556%" height="15" fill="rgb(225,3,45)" fg:x="127963966" fg:w="2650676"/><text x="56.0388%" y="2431.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,031,805 samples, 0.45%)</title><rect x="56.9444%" y="2741" width="0.4498%" height="15" fill="rgb(244,223,14)" fg:x="130614642" fg:w="1031805"/><text x="57.1944%" y="2751.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (1,031,805 samples, 0.45%)</title><rect x="56.9444%" y="2725" width="0.4498%" height="15" fill="rgb(224,124,37)" fg:x="130614642" fg:w="1031805"/><text x="57.1944%" y="2735.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (1,031,805 samples, 0.45%)</title><rect x="56.9444%" y="2709" width="0.4498%" height="15" fill="rgb(251,171,30)" fg:x="130614642" fg:w="1031805"/><text x="57.1944%" y="2719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,031,805 samples, 0.45%)</title><rect x="56.9444%" y="2693" width="0.4498%" height="15" fill="rgb(236,46,54)" fg:x="130614642" fg:w="1031805"/><text x="57.1944%" y="2703.50"></text></g><g><title>alloc::string::String::push_str (1,031,805 samples, 0.45%)</title><rect x="56.9444%" y="2677" width="0.4498%" height="15" fill="rgb(245,213,5)" fg:x="130614642" fg:w="1031805"/><text x="57.1944%" y="2687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,031,805 samples, 0.45%)</title><rect x="56.9444%" y="2661" width="0.4498%" height="15" fill="rgb(230,144,27)" fg:x="130614642" fg:w="1031805"/><text x="57.1944%" y="2671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,031,805 samples, 0.45%)</title><rect x="56.9444%" y="2645" width="0.4498%" height="15" fill="rgb(220,86,6)" fg:x="130614642" fg:w="1031805"/><text x="57.1944%" y="2655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,031,805 samples, 0.45%)</title><rect x="56.9444%" y="2629" width="0.4498%" height="15" fill="rgb(240,20,13)" fg:x="130614642" fg:w="1031805"/><text x="57.1944%" y="2639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,031,805 samples, 0.45%)</title><rect x="56.9444%" y="2613" width="0.4498%" height="15" fill="rgb(217,89,34)" fg:x="130614642" fg:w="1031805"/><text x="57.1944%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,031,805 samples, 0.45%)</title><rect x="56.9444%" y="2597" width="0.4498%" height="15" fill="rgb(229,13,5)" fg:x="130614642" fg:w="1031805"/><text x="57.1944%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,031,805 samples, 0.45%)</title><rect x="56.9444%" y="2581" width="0.4498%" height="15" fill="rgb(244,67,35)" fg:x="130614642" fg:w="1031805"/><text x="57.1944%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,031,805 samples, 0.45%)</title><rect x="56.9444%" y="2565" width="0.4498%" height="15" fill="rgb(221,40,2)" fg:x="130614642" fg:w="1031805"/><text x="57.1944%" y="2575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,031,805 samples, 0.45%)</title><rect x="56.9444%" y="2549" width="0.4498%" height="15" fill="rgb(237,157,21)" fg:x="130614642" fg:w="1031805"/><text x="57.1944%" y="2559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,031,805 samples, 0.45%)</title><rect x="56.9444%" y="2533" width="0.4498%" height="15" fill="rgb(222,94,11)" fg:x="130614642" fg:w="1031805"/><text x="57.1944%" y="2543.50"></text></g><g><title>[libc.so.6] (1,031,805 samples, 0.45%)</title><rect x="56.9444%" y="2517" width="0.4498%" height="15" fill="rgb(249,113,6)" fg:x="130614642" fg:w="1031805"/><text x="57.1944%" y="2527.50"></text></g><g><title>benchmark::json_to_html_node (1,529,683 samples, 0.67%)</title><rect x="57.3942%" y="2741" width="0.6669%" height="15" fill="rgb(238,137,36)" fg:x="131646447" fg:w="1529683"/><text x="57.6442%" y="2751.50"></text></g><g><title>benchmark::json_to_html_node (1,529,683 samples, 0.67%)</title><rect x="57.3942%" y="2725" width="0.6669%" height="15" fill="rgb(210,102,26)" fg:x="131646447" fg:w="1529683"/><text x="57.6442%" y="2735.50"></text></g><g><title>benchmark::json_to_html_node (1,529,683 samples, 0.67%)</title><rect x="57.3942%" y="2709" width="0.6669%" height="15" fill="rgb(218,30,30)" fg:x="131646447" fg:w="1529683"/><text x="57.6442%" y="2719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,529,683 samples, 0.67%)</title><rect x="57.3942%" y="2693" width="0.6669%" height="15" fill="rgb(214,67,26)" fg:x="131646447" fg:w="1529683"/><text x="57.6442%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,529,683 samples, 0.67%)</title><rect x="57.3942%" y="2677" width="0.6669%" height="15" fill="rgb(251,9,53)" fg:x="131646447" fg:w="1529683"/><text x="57.6442%" y="2687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,529,683 samples, 0.67%)</title><rect x="57.3942%" y="2661" width="0.6669%" height="15" fill="rgb(228,204,25)" fg:x="131646447" fg:w="1529683"/><text x="57.6442%" y="2671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,529,683 samples, 0.67%)</title><rect x="57.3942%" y="2645" width="0.6669%" height="15" fill="rgb(207,153,8)" fg:x="131646447" fg:w="1529683"/><text x="57.6442%" y="2655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,529,683 samples, 0.67%)</title><rect x="57.3942%" y="2629" width="0.6669%" height="15" fill="rgb(242,9,16)" fg:x="131646447" fg:w="1529683"/><text x="57.6442%" y="2639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,529,683 samples, 0.67%)</title><rect x="57.3942%" y="2613" width="0.6669%" height="15" fill="rgb(217,211,10)" fg:x="131646447" fg:w="1529683"/><text x="57.6442%" y="2623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,529,683 samples, 0.67%)</title><rect x="57.3942%" y="2597" width="0.6669%" height="15" fill="rgb(219,228,52)" fg:x="131646447" fg:w="1529683"/><text x="57.6442%" y="2607.50"></text></g><g><title>alloc::alloc::realloc (1,529,683 samples, 0.67%)</title><rect x="57.3942%" y="2581" width="0.6669%" height="15" fill="rgb(231,92,29)" fg:x="131646447" fg:w="1529683"/><text x="57.6442%" y="2591.50"></text></g><g><title>realloc (1,529,683 samples, 0.67%)</title><rect x="57.3942%" y="2565" width="0.6669%" height="15" fill="rgb(232,8,23)" fg:x="131646447" fg:w="1529683"/><text x="57.6442%" y="2575.50"></text></g><g><title>[libc.so.6] (1,529,683 samples, 0.67%)</title><rect x="57.3942%" y="2549" width="0.6669%" height="15" fill="rgb(216,211,34)" fg:x="131646447" fg:w="1529683"/><text x="57.6442%" y="2559.50"></text></g><g><title>[libc.so.6] (1,529,683 samples, 0.67%)</title><rect x="57.3942%" y="2533" width="0.6669%" height="15" fill="rgb(236,151,0)" fg:x="131646447" fg:w="1529683"/><text x="57.6442%" y="2543.50"></text></g><g><title>benchmark::json_to_html_node (3,685,207 samples, 1.61%)</title><rect x="56.9444%" y="2757" width="1.6066%" height="15" fill="rgb(209,168,3)" fg:x="130614642" fg:w="3685207"/><text x="57.1944%" y="2767.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,123,719 samples, 0.49%)</title><rect x="58.0611%" y="2741" width="0.4899%" height="15" fill="rgb(208,129,28)" fg:x="133176130" fg:w="1123719"/><text x="58.3111%" y="2751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,123,719 samples, 0.49%)</title><rect x="58.0611%" y="2725" width="0.4899%" height="15" fill="rgb(229,78,22)" fg:x="133176130" fg:w="1123719"/><text x="58.3111%" y="2735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,123,719 samples, 0.49%)</title><rect x="58.0611%" y="2709" width="0.4899%" height="15" fill="rgb(228,187,13)" fg:x="133176130" fg:w="1123719"/><text x="58.3111%" y="2719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,123,719 samples, 0.49%)</title><rect x="58.0611%" y="2693" width="0.4899%" height="15" fill="rgb(240,119,24)" fg:x="133176130" fg:w="1123719"/><text x="58.3111%" y="2703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,123,719 samples, 0.49%)</title><rect x="58.0611%" y="2677" width="0.4899%" height="15" fill="rgb(209,194,42)" fg:x="133176130" fg:w="1123719"/><text x="58.3111%" y="2687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (1,123,719 samples, 0.49%)</title><rect x="58.0611%" y="2661" width="0.4899%" height="15" fill="rgb(247,200,46)" fg:x="133176130" fg:w="1123719"/><text x="58.3111%" y="2671.50"></text></g><g><title>benchmark::json_to_html_node (4,962,620 samples, 2.16%)</title><rect x="56.9444%" y="2773" width="2.1636%" height="15" fill="rgb(218,76,16)" fg:x="130614642" fg:w="4962620"/><text x="57.1944%" y="2783.50">b..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2757" width="0.5569%" height="15" fill="rgb(225,21,48)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2741" width="0.5569%" height="15" fill="rgb(239,223,50)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2751.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2725" width="0.5569%" height="15" fill="rgb(244,45,21)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2735.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2709" width="0.5569%" height="15" fill="rgb(232,33,43)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2693" width="0.5569%" height="15" fill="rgb(209,8,3)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2677" width="0.5569%" height="15" fill="rgb(214,25,53)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2661" width="0.5569%" height="15" fill="rgb(254,186,54)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2645" width="0.5569%" height="15" fill="rgb(208,174,49)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2629" width="0.5569%" height="15" fill="rgb(233,191,51)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2639.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2613" width="0.5569%" height="15" fill="rgb(222,134,10)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2623.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2597" width="0.5569%" height="15" fill="rgb(230,226,20)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2581" width="0.5569%" height="15" fill="rgb(251,111,25)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2565" width="0.5569%" height="15" fill="rgb(224,40,46)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2549" width="0.5569%" height="15" fill="rgb(236,108,47)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2559.50"></text></g><g><title>hashbrown::map::make_hash (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2533" width="0.5569%" height="15" fill="rgb(234,93,0)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2517" width="0.5569%" height="15" fill="rgb(224,213,32)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2527.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2501" width="0.5569%" height="15" fill="rgb(251,11,48)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2485" width="0.5569%" height="15" fill="rgb(236,173,5)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2469" width="0.5569%" height="15" fill="rgb(230,95,12)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2453" width="0.5569%" height="15" fill="rgb(232,209,1)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,277,413 samples, 0.56%)</title><rect x="58.5510%" y="2437" width="0.5569%" height="15" fill="rgb(232,6,1)" fg:x="134299849" fg:w="1277413"/><text x="58.8010%" y="2447.50"></text></g><g><title>benchmark::json_to_html_node (6,037,436 samples, 2.63%)</title><rect x="56.9444%" y="2789" width="2.6322%" height="15" fill="rgb(210,224,50)" fg:x="130614642" fg:w="6037436"/><text x="57.1944%" y="2799.50">be..</text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,074,816 samples, 0.47%)</title><rect x="59.1080%" y="2773" width="0.4686%" height="15" fill="rgb(228,127,35)" fg:x="135577262" fg:w="1074816"/><text x="59.3580%" y="2783.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,074,816 samples, 0.47%)</title><rect x="59.1080%" y="2757" width="0.4686%" height="15" fill="rgb(245,102,45)" fg:x="135577262" fg:w="1074816"/><text x="59.3580%" y="2767.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,074,816 samples, 0.47%)</title><rect x="59.1080%" y="2741" width="0.4686%" height="15" fill="rgb(214,1,49)" fg:x="135577262" fg:w="1074816"/><text x="59.3580%" y="2751.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (1,500,100 samples, 0.65%)</title><rect x="59.5765%" y="2789" width="0.6540%" height="15" fill="rgb(226,163,40)" fg:x="136652078" fg:w="1500100"/><text x="59.8265%" y="2799.50"></text></g><g><title>css_bitvector_compiler::BitVector::new (1,500,100 samples, 0.65%)</title><rect x="59.5765%" y="2773" width="0.6540%" height="15" fill="rgb(239,212,28)" fg:x="136652078" fg:w="1500100"/><text x="59.8265%" y="2783.50"></text></g><g><title>alloc::vec::from_elem (1,500,100 samples, 0.65%)</title><rect x="59.5765%" y="2757" width="0.6540%" height="15" fill="rgb(220,20,13)" fg:x="136652078" fg:w="1500100"/><text x="59.8265%" y="2767.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,500,100 samples, 0.65%)</title><rect x="59.5765%" y="2741" width="0.6540%" height="15" fill="rgb(210,164,35)" fg:x="136652078" fg:w="1500100"/><text x="59.8265%" y="2751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,500,100 samples, 0.65%)</title><rect x="59.5765%" y="2725" width="0.6540%" height="15" fill="rgb(248,109,41)" fg:x="136652078" fg:w="1500100"/><text x="59.8265%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,500,100 samples, 0.65%)</title><rect x="59.5765%" y="2709" width="0.6540%" height="15" fill="rgb(238,23,50)" fg:x="136652078" fg:w="1500100"/><text x="59.8265%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,500,100 samples, 0.65%)</title><rect x="59.5765%" y="2693" width="0.6540%" height="15" fill="rgb(211,48,49)" fg:x="136652078" fg:w="1500100"/><text x="59.8265%" y="2703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,500,100 samples, 0.65%)</title><rect x="59.5765%" y="2677" width="0.6540%" height="15" fill="rgb(223,36,21)" fg:x="136652078" fg:w="1500100"/><text x="59.8265%" y="2687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,500,100 samples, 0.65%)</title><rect x="59.5765%" y="2661" width="0.6540%" height="15" fill="rgb(207,123,46)" fg:x="136652078" fg:w="1500100"/><text x="59.8265%" y="2671.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,500,100 samples, 0.65%)</title><rect x="59.5765%" y="2645" width="0.6540%" height="15" fill="rgb(240,218,32)" fg:x="136652078" fg:w="1500100"/><text x="59.8265%" y="2655.50"></text></g><g><title>__libc_calloc (1,500,100 samples, 0.65%)</title><rect x="59.5765%" y="2629" width="0.6540%" height="15" fill="rgb(252,5,43)" fg:x="136652078" fg:w="1500100"/><text x="59.8265%" y="2639.50"></text></g><g><title>[libc.so.6] (1,500,100 samples, 0.65%)</title><rect x="59.5765%" y="2613" width="0.6540%" height="15" fill="rgb(252,84,19)" fg:x="136652078" fg:w="1500100"/><text x="59.8265%" y="2623.50"></text></g><g><title>benchmark::json_to_html_node (8,990,970 samples, 3.92%)</title><rect x="56.9444%" y="2805" width="3.9198%" height="15" fill="rgb(243,152,39)" fg:x="130614642" fg:w="8990970"/><text x="57.1944%" y="2815.50">benc..</text></g><g><title>serde_json::value::Value::as_object (1,453,434 samples, 0.63%)</title><rect x="60.2305%" y="2789" width="0.6337%" height="15" fill="rgb(234,160,15)" fg:x="138152178" fg:w="1453434"/><text x="60.4805%" y="2799.50"></text></g><g><title>benchmark::apply_frame_modifications (9,991,353 samples, 4.36%)</title><rect x="56.9444%" y="2821" width="4.3560%" height="15" fill="rgb(237,34,20)" fg:x="130614642" fg:w="9991353"/><text x="57.1944%" y="2831.50">bench..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,000,383 samples, 0.44%)</title><rect x="60.8642%" y="2805" width="0.4361%" height="15" fill="rgb(229,97,13)" fg:x="139605612" fg:w="1000383"/><text x="61.1142%" y="2815.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,000,383 samples, 0.44%)</title><rect x="60.8642%" y="2789" width="0.4361%" height="15" fill="rgb(234,71,50)" fg:x="139605612" fg:w="1000383"/><text x="61.1142%" y="2799.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,000,383 samples, 0.44%)</title><rect x="60.8642%" y="2773" width="0.4361%" height="15" fill="rgb(253,155,4)" fg:x="139605612" fg:w="1000383"/><text x="61.1142%" y="2783.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,000,383 samples, 0.44%)</title><rect x="60.8642%" y="2757" width="0.4361%" height="15" fill="rgb(222,185,37)" fg:x="139605612" fg:w="1000383"/><text x="61.1142%" y="2767.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,000,383 samples, 0.44%)</title><rect x="60.8642%" y="2741" width="0.4361%" height="15" fill="rgb(251,177,13)" fg:x="139605612" fg:w="1000383"/><text x="61.1142%" y="2751.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,000,383 samples, 0.44%)</title><rect x="60.8642%" y="2725" width="0.4361%" height="15" fill="rgb(250,179,40)" fg:x="139605612" fg:w="1000383"/><text x="61.1142%" y="2735.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,000,383 samples, 0.44%)</title><rect x="60.8642%" y="2709" width="0.4361%" height="15" fill="rgb(242,44,2)" fg:x="139605612" fg:w="1000383"/><text x="61.1142%" y="2719.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,000,383 samples, 0.44%)</title><rect x="60.8642%" y="2693" width="0.4361%" height="15" fill="rgb(216,177,13)" fg:x="139605612" fg:w="1000383"/><text x="61.1142%" y="2703.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,572,504 samples, 0.69%)</title><rect x="61.3003%" y="2709" width="0.6856%" height="15" fill="rgb(216,106,43)" fg:x="140605995" fg:w="1572504"/><text x="61.5503%" y="2719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,572,504 samples, 0.69%)</title><rect x="61.3003%" y="2693" width="0.6856%" height="15" fill="rgb(216,183,2)" fg:x="140605995" fg:w="1572504"/><text x="61.5503%" y="2703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,572,504 samples, 0.69%)</title><rect x="61.3003%" y="2677" width="0.6856%" height="15" fill="rgb(249,75,3)" fg:x="140605995" fg:w="1572504"/><text x="61.5503%" y="2687.50"></text></g><g><title>benchmark::clear_dirty_flags (2,874,525 samples, 1.25%)</title><rect x="61.3003%" y="2821" width="1.2532%" height="15" fill="rgb(219,67,39)" fg:x="140605995" fg:w="2874525"/><text x="61.5503%" y="2831.50"></text></g><g><title>benchmark::clear_dirty_flags (2,874,525 samples, 1.25%)</title><rect x="61.3003%" y="2805" width="1.2532%" height="15" fill="rgb(253,228,2)" fg:x="140605995" fg:w="2874525"/><text x="61.5503%" y="2815.50"></text></g><g><title>benchmark::clear_dirty_flags (2,874,525 samples, 1.25%)</title><rect x="61.3003%" y="2789" width="1.2532%" height="15" fill="rgb(235,138,27)" fg:x="140605995" fg:w="2874525"/><text x="61.5503%" y="2799.50"></text></g><g><title>benchmark::clear_dirty_flags (2,874,525 samples, 1.25%)</title><rect x="61.3003%" y="2773" width="1.2532%" height="15" fill="rgb(236,97,51)" fg:x="140605995" fg:w="2874525"/><text x="61.5503%" y="2783.50"></text></g><g><title>benchmark::clear_dirty_flags (2,874,525 samples, 1.25%)</title><rect x="61.3003%" y="2757" width="1.2532%" height="15" fill="rgb(240,80,30)" fg:x="140605995" fg:w="2874525"/><text x="61.5503%" y="2767.50"></text></g><g><title>benchmark::clear_dirty_flags (2,874,525 samples, 1.25%)</title><rect x="61.3003%" y="2741" width="1.2532%" height="15" fill="rgb(230,178,19)" fg:x="140605995" fg:w="2874525"/><text x="61.5503%" y="2751.50"></text></g><g><title>benchmark::clear_dirty_flags (2,874,525 samples, 1.25%)</title><rect x="61.3003%" y="2725" width="1.2532%" height="15" fill="rgb(210,190,27)" fg:x="140605995" fg:w="2874525"/><text x="61.5503%" y="2735.50"></text></g><g><title>benchmark::clear_dirty_flags (1,302,021 samples, 0.57%)</title><rect x="61.9859%" y="2709" width="0.5676%" height="15" fill="rgb(222,107,31)" fg:x="142178499" fg:w="1302021"/><text x="62.2359%" y="2719.50"></text></g><g><title>benchmark::clear_dirty_flags (1,302,021 samples, 0.57%)</title><rect x="61.9859%" y="2693" width="0.5676%" height="15" fill="rgb(216,127,34)" fg:x="142178499" fg:w="1302021"/><text x="62.2359%" y="2703.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,302,021 samples, 0.57%)</title><rect x="61.9859%" y="2677" width="0.5676%" height="15" fill="rgb(234,116,52)" fg:x="142178499" fg:w="1302021"/><text x="62.2359%" y="2687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,302,021 samples, 0.57%)</title><rect x="61.9859%" y="2661" width="0.5676%" height="15" fill="rgb(222,124,15)" fg:x="142178499" fg:w="1302021"/><text x="62.2359%" y="2671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,302,021 samples, 0.57%)</title><rect x="61.9859%" y="2645" width="0.5676%" height="15" fill="rgb(231,179,28)" fg:x="142178499" fg:w="1302021"/><text x="62.2359%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,299,930 samples, 0.57%)</title><rect x="62.5536%" y="2613" width="0.5667%" height="15" fill="rgb(226,93,45)" fg:x="143480520" fg:w="1299930"/><text x="62.8036%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,299,930 samples, 0.57%)</title><rect x="62.5536%" y="2597" width="0.5667%" height="15" fill="rgb(215,8,51)" fg:x="143480520" fg:w="1299930"/><text x="62.8036%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,299,930 samples, 0.57%)</title><rect x="62.5536%" y="2581" width="0.5667%" height="15" fill="rgb(223,106,5)" fg:x="143480520" fg:w="1299930"/><text x="62.8036%" y="2591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,299,930 samples, 0.57%)</title><rect x="62.5536%" y="2565" width="0.5667%" height="15" fill="rgb(250,191,5)" fg:x="143480520" fg:w="1299930"/><text x="62.8036%" y="2575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,299,930 samples, 0.57%)</title><rect x="62.5536%" y="2549" width="0.5667%" height="15" fill="rgb(242,132,44)" fg:x="143480520" fg:w="1299930"/><text x="62.8036%" y="2559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,299,930 samples, 0.57%)</title><rect x="62.5536%" y="2533" width="0.5667%" height="15" fill="rgb(251,152,29)" fg:x="143480520" fg:w="1299930"/><text x="62.8036%" y="2543.50"></text></g><g><title>alloc::alloc::dealloc (1,299,930 samples, 0.57%)</title><rect x="62.5536%" y="2517" width="0.5667%" height="15" fill="rgb(218,179,5)" fg:x="143480520" fg:w="1299930"/><text x="62.8036%" y="2527.50"></text></g><g><title>cfree (1,299,930 samples, 0.57%)</title><rect x="62.5536%" y="2501" width="0.5667%" height="15" fill="rgb(227,67,19)" fg:x="143480520" fg:w="1299930"/><text x="62.8036%" y="2511.50"></text></g><g><title>__rdl_dealloc (1,329,291 samples, 0.58%)</title><rect x="63.1203%" y="2245" width="0.5795%" height="15" fill="rgb(233,119,31)" fg:x="144780450" fg:w="1329291"/><text x="63.3703%" y="2255.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,329,291 samples, 0.58%)</title><rect x="63.1203%" y="2229" width="0.5795%" height="15" fill="rgb(241,120,22)" fg:x="144780450" fg:w="1329291"/><text x="63.3703%" y="2239.50"></text></g><g><title>__rust_dealloc (1,519,889 samples, 0.66%)</title><rect x="63.6998%" y="2245" width="0.6626%" height="15" fill="rgb(224,102,30)" fg:x="146109741" fg:w="1519889"/><text x="63.9498%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5,696,710 samples, 2.48%)</title><rect x="63.1203%" y="2357" width="2.4836%" height="15" fill="rgb(210,164,37)" fg:x="144780450" fg:w="5696710"/><text x="63.3703%" y="2367.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5,696,710 samples, 2.48%)</title><rect x="63.1203%" y="2341" width="2.4836%" height="15" fill="rgb(226,191,16)" fg:x="144780450" fg:w="5696710"/><text x="63.3703%" y="2351.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5,696,710 samples, 2.48%)</title><rect x="63.1203%" y="2325" width="2.4836%" height="15" fill="rgb(214,40,45)" fg:x="144780450" fg:w="5696710"/><text x="63.3703%" y="2335.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,696,710 samples, 2.48%)</title><rect x="63.1203%" y="2309" width="2.4836%" height="15" fill="rgb(244,29,26)" fg:x="144780450" fg:w="5696710"/><text x="63.3703%" y="2319.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,696,710 samples, 2.48%)</title><rect x="63.1203%" y="2293" width="2.4836%" height="15" fill="rgb(216,16,5)" fg:x="144780450" fg:w="5696710"/><text x="63.3703%" y="2303.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,696,710 samples, 2.48%)</title><rect x="63.1203%" y="2277" width="2.4836%" height="15" fill="rgb(249,76,35)" fg:x="144780450" fg:w="5696710"/><text x="63.3703%" y="2287.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (5,696,710 samples, 2.48%)</title><rect x="63.1203%" y="2261" width="2.4836%" height="15" fill="rgb(207,11,44)" fg:x="144780450" fg:w="5696710"/><text x="63.3703%" y="2271.50">al..</text></g><g><title>cfree (2,847,530 samples, 1.24%)</title><rect x="64.3625%" y="2245" width="1.2414%" height="15" fill="rgb(228,190,49)" fg:x="147629630" fg:w="2847530"/><text x="64.6125%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,436,775 samples, 0.63%)</title><rect x="65.6039%" y="2101" width="0.6264%" height="15" fill="rgb(214,173,12)" fg:x="150477160" fg:w="1436775"/><text x="65.8539%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,436,775 samples, 0.63%)</title><rect x="65.6039%" y="2085" width="0.6264%" height="15" fill="rgb(218,26,35)" fg:x="150477160" fg:w="1436775"/><text x="65.8539%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,436,775 samples, 0.63%)</title><rect x="65.6039%" y="2069" width="0.6264%" height="15" fill="rgb(220,200,19)" fg:x="150477160" fg:w="1436775"/><text x="65.8539%" y="2079.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,436,775 samples, 0.63%)</title><rect x="65.6039%" y="2053" width="0.6264%" height="15" fill="rgb(239,95,49)" fg:x="150477160" fg:w="1436775"/><text x="65.8539%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,436,775 samples, 0.63%)</title><rect x="65.6039%" y="2037" width="0.6264%" height="15" fill="rgb(235,85,53)" fg:x="150477160" fg:w="1436775"/><text x="65.8539%" y="2047.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,436,775 samples, 0.63%)</title><rect x="65.6039%" y="2021" width="0.6264%" height="15" fill="rgb(233,133,31)" fg:x="150477160" fg:w="1436775"/><text x="65.8539%" y="2031.50"></text></g><g><title>alloc::alloc::dealloc (1,436,775 samples, 0.63%)</title><rect x="65.6039%" y="2005" width="0.6264%" height="15" fill="rgb(218,25,20)" fg:x="150477160" fg:w="1436775"/><text x="65.8539%" y="2015.50"></text></g><g><title>cfree (1,436,775 samples, 0.63%)</title><rect x="65.6039%" y="1989" width="0.6264%" height="15" fill="rgb(252,210,38)" fg:x="150477160" fg:w="1436775"/><text x="65.8539%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,534,678 samples, 0.67%)</title><rect x="66.2303%" y="1717" width="0.6691%" height="15" fill="rgb(242,134,21)" fg:x="151913935" fg:w="1534678"/><text x="66.4803%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,534,678 samples, 0.67%)</title><rect x="66.2303%" y="1701" width="0.6691%" height="15" fill="rgb(213,28,48)" fg:x="151913935" fg:w="1534678"/><text x="66.4803%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,534,678 samples, 0.67%)</title><rect x="66.2303%" y="1685" width="0.6691%" height="15" fill="rgb(250,196,2)" fg:x="151913935" fg:w="1534678"/><text x="66.4803%" y="1695.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,534,678 samples, 0.67%)</title><rect x="66.2303%" y="1669" width="0.6691%" height="15" fill="rgb(227,5,17)" fg:x="151913935" fg:w="1534678"/><text x="66.4803%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,534,678 samples, 0.67%)</title><rect x="66.2303%" y="1653" width="0.6691%" height="15" fill="rgb(221,226,24)" fg:x="151913935" fg:w="1534678"/><text x="66.4803%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,534,678 samples, 0.67%)</title><rect x="66.2303%" y="1637" width="0.6691%" height="15" fill="rgb(211,5,48)" fg:x="151913935" fg:w="1534678"/><text x="66.4803%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (1,534,678 samples, 0.67%)</title><rect x="66.2303%" y="1621" width="0.6691%" height="15" fill="rgb(219,150,6)" fg:x="151913935" fg:w="1534678"/><text x="66.4803%" y="1631.50"></text></g><g><title>cfree (1,534,678 samples, 0.67%)</title><rect x="66.2303%" y="1605" width="0.6691%" height="15" fill="rgb(251,46,16)" fg:x="151913935" fg:w="1534678"/><text x="66.4803%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,055,903 samples, 1.33%)</title><rect x="66.2303%" y="1909" width="1.3323%" height="15" fill="rgb(220,204,40)" fg:x="151913935" fg:w="3055903"/><text x="66.4803%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,055,903 samples, 1.33%)</title><rect x="66.2303%" y="1893" width="1.3323%" height="15" fill="rgb(211,85,2)" fg:x="151913935" fg:w="3055903"/><text x="66.4803%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,055,903 samples, 1.33%)</title><rect x="66.2303%" y="1877" width="1.3323%" height="15" fill="rgb(229,17,7)" fg:x="151913935" fg:w="3055903"/><text x="66.4803%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,055,903 samples, 1.33%)</title><rect x="66.2303%" y="1861" width="1.3323%" height="15" fill="rgb(239,72,28)" fg:x="151913935" fg:w="3055903"/><text x="66.4803%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,055,903 samples, 1.33%)</title><rect x="66.2303%" y="1845" width="1.3323%" height="15" fill="rgb(230,47,54)" fg:x="151913935" fg:w="3055903"/><text x="66.4803%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,055,903 samples, 1.33%)</title><rect x="66.2303%" y="1829" width="1.3323%" height="15" fill="rgb(214,50,8)" fg:x="151913935" fg:w="3055903"/><text x="66.4803%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,055,903 samples, 1.33%)</title><rect x="66.2303%" y="1813" width="1.3323%" height="15" fill="rgb(216,198,43)" fg:x="151913935" fg:w="3055903"/><text x="66.4803%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,055,903 samples, 1.33%)</title><rect x="66.2303%" y="1797" width="1.3323%" height="15" fill="rgb(234,20,35)" fg:x="151913935" fg:w="3055903"/><text x="66.4803%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,055,903 samples, 1.33%)</title><rect x="66.2303%" y="1781" width="1.3323%" height="15" fill="rgb(254,45,19)" fg:x="151913935" fg:w="3055903"/><text x="66.4803%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,055,903 samples, 1.33%)</title><rect x="66.2303%" y="1765" width="1.3323%" height="15" fill="rgb(219,14,44)" fg:x="151913935" fg:w="3055903"/><text x="66.4803%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,055,903 samples, 1.33%)</title><rect x="66.2303%" y="1749" width="1.3323%" height="15" fill="rgb(217,220,26)" fg:x="151913935" fg:w="3055903"/><text x="66.4803%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,055,903 samples, 1.33%)</title><rect x="66.2303%" y="1733" width="1.3323%" height="15" fill="rgb(213,158,28)" fg:x="151913935" fg:w="3055903"/><text x="66.4803%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,521,225 samples, 0.66%)</title><rect x="66.8994%" y="1717" width="0.6632%" height="15" fill="rgb(252,51,52)" fg:x="153448613" fg:w="1521225"/><text x="67.1494%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,521,225 samples, 0.66%)</title><rect x="66.8994%" y="1701" width="0.6632%" height="15" fill="rgb(246,89,16)" fg:x="153448613" fg:w="1521225"/><text x="67.1494%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,521,225 samples, 0.66%)</title><rect x="66.8994%" y="1685" width="0.6632%" height="15" fill="rgb(216,158,49)" fg:x="153448613" fg:w="1521225"/><text x="67.1494%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,521,225 samples, 0.66%)</title><rect x="66.8994%" y="1669" width="0.6632%" height="15" fill="rgb(236,107,19)" fg:x="153448613" fg:w="1521225"/><text x="67.1494%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,521,225 samples, 0.66%)</title><rect x="66.8994%" y="1653" width="0.6632%" height="15" fill="rgb(228,185,30)" fg:x="153448613" fg:w="1521225"/><text x="67.1494%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,521,225 samples, 0.66%)</title><rect x="66.8994%" y="1637" width="0.6632%" height="15" fill="rgb(246,134,8)" fg:x="153448613" fg:w="1521225"/><text x="67.1494%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,521,225 samples, 0.66%)</title><rect x="66.8994%" y="1621" width="0.6632%" height="15" fill="rgb(214,143,50)" fg:x="153448613" fg:w="1521225"/><text x="67.1494%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,521,225 samples, 0.66%)</title><rect x="66.8994%" y="1605" width="0.6632%" height="15" fill="rgb(228,75,8)" fg:x="153448613" fg:w="1521225"/><text x="67.1494%" y="1615.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,521,225 samples, 0.66%)</title><rect x="66.8994%" y="1589" width="0.6632%" height="15" fill="rgb(207,175,4)" fg:x="153448613" fg:w="1521225"/><text x="67.1494%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,521,225 samples, 0.66%)</title><rect x="66.8994%" y="1573" width="0.6632%" height="15" fill="rgb(205,108,24)" fg:x="153448613" fg:w="1521225"/><text x="67.1494%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,521,225 samples, 0.66%)</title><rect x="66.8994%" y="1557" width="0.6632%" height="15" fill="rgb(244,120,49)" fg:x="153448613" fg:w="1521225"/><text x="67.1494%" y="1567.50"></text></g><g><title>alloc::alloc::dealloc (1,521,225 samples, 0.66%)</title><rect x="66.8994%" y="1541" width="0.6632%" height="15" fill="rgb(223,47,38)" fg:x="153448613" fg:w="1521225"/><text x="67.1494%" y="1551.50"></text></g><g><title>cfree (1,521,225 samples, 0.66%)</title><rect x="66.8994%" y="1525" width="0.6632%" height="15" fill="rgb(229,179,11)" fg:x="153448613" fg:w="1521225"/><text x="67.1494%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (4,551,955 samples, 1.98%)</title><rect x="66.2303%" y="2037" width="1.9845%" height="15" fill="rgb(231,122,1)" fg:x="151913935" fg:w="4551955"/><text x="66.4803%" y="2047.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,551,955 samples, 1.98%)</title><rect x="66.2303%" y="2021" width="1.9845%" height="15" fill="rgb(245,119,9)" fg:x="151913935" fg:w="4551955"/><text x="66.4803%" y="2031.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (4,551,955 samples, 1.98%)</title><rect x="66.2303%" y="2005" width="1.9845%" height="15" fill="rgb(241,163,25)" fg:x="151913935" fg:w="4551955"/><text x="66.4803%" y="2015.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (4,551,955 samples, 1.98%)</title><rect x="66.2303%" y="1989" width="1.9845%" height="15" fill="rgb(217,214,3)" fg:x="151913935" fg:w="4551955"/><text x="66.4803%" y="1999.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (4,551,955 samples, 1.98%)</title><rect x="66.2303%" y="1973" width="1.9845%" height="15" fill="rgb(240,86,28)" fg:x="151913935" fg:w="4551955"/><text x="66.4803%" y="1983.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,551,955 samples, 1.98%)</title><rect x="66.2303%" y="1957" width="1.9845%" height="15" fill="rgb(215,47,9)" fg:x="151913935" fg:w="4551955"/><text x="66.4803%" y="1967.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (4,551,955 samples, 1.98%)</title><rect x="66.2303%" y="1941" width="1.9845%" height="15" fill="rgb(252,25,45)" fg:x="151913935" fg:w="4551955"/><text x="66.4803%" y="1951.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (4,551,955 samples, 1.98%)</title><rect x="66.2303%" y="1925" width="1.9845%" height="15" fill="rgb(251,164,9)" fg:x="151913935" fg:w="4551955"/><text x="66.4803%" y="1935.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,496,052 samples, 0.65%)</title><rect x="67.5626%" y="1909" width="0.6522%" height="15" fill="rgb(233,194,0)" fg:x="154969838" fg:w="1496052"/><text x="67.8126%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,496,052 samples, 0.65%)</title><rect x="67.5626%" y="1893" width="0.6522%" height="15" fill="rgb(249,111,24)" fg:x="154969838" fg:w="1496052"/><text x="67.8126%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,496,052 samples, 0.65%)</title><rect x="67.5626%" y="1877" width="0.6522%" height="15" fill="rgb(250,223,3)" fg:x="154969838" fg:w="1496052"/><text x="67.8126%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,496,052 samples, 0.65%)</title><rect x="67.5626%" y="1861" width="0.6522%" height="15" fill="rgb(236,178,37)" fg:x="154969838" fg:w="1496052"/><text x="67.8126%" y="1871.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,496,052 samples, 0.65%)</title><rect x="67.5626%" y="1845" width="0.6522%" height="15" fill="rgb(241,158,50)" fg:x="154969838" fg:w="1496052"/><text x="67.8126%" y="1855.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,496,052 samples, 0.65%)</title><rect x="67.5626%" y="1829" width="0.6522%" height="15" fill="rgb(213,121,41)" fg:x="154969838" fg:w="1496052"/><text x="67.8126%" y="1839.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,496,052 samples, 0.65%)</title><rect x="67.5626%" y="1813" width="0.6522%" height="15" fill="rgb(240,92,3)" fg:x="154969838" fg:w="1496052"/><text x="67.8126%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,068,414 samples, 2.65%)</title><rect x="66.2303%" y="2085" width="2.6457%" height="15" fill="rgb(205,123,3)" fg:x="151913935" fg:w="6068414"/><text x="66.4803%" y="2095.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,068,414 samples, 2.65%)</title><rect x="66.2303%" y="2069" width="2.6457%" height="15" fill="rgb(205,97,47)" fg:x="151913935" fg:w="6068414"/><text x="66.4803%" y="2079.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,068,414 samples, 2.65%)</title><rect x="66.2303%" y="2053" width="2.6457%" height="15" fill="rgb(247,152,14)" fg:x="151913935" fg:w="6068414"/><text x="66.4803%" y="2063.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,516,459 samples, 0.66%)</title><rect x="68.2148%" y="2037" width="0.6611%" height="15" fill="rgb(248,195,53)" fg:x="156465890" fg:w="1516459"/><text x="68.4648%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,516,459 samples, 0.66%)</title><rect x="68.2148%" y="2021" width="0.6611%" height="15" fill="rgb(226,201,16)" fg:x="156465890" fg:w="1516459"/><text x="68.4648%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,516,459 samples, 0.66%)</title><rect x="68.2148%" y="2005" width="0.6611%" height="15" fill="rgb(205,98,0)" fg:x="156465890" fg:w="1516459"/><text x="68.4648%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,516,459 samples, 0.66%)</title><rect x="68.2148%" y="1989" width="0.6611%" height="15" fill="rgb(214,191,48)" fg:x="156465890" fg:w="1516459"/><text x="68.4648%" y="1999.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,516,459 samples, 0.66%)</title><rect x="68.2148%" y="1973" width="0.6611%" height="15" fill="rgb(237,112,39)" fg:x="156465890" fg:w="1516459"/><text x="68.4648%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,516,459 samples, 0.66%)</title><rect x="68.2148%" y="1957" width="0.6611%" height="15" fill="rgb(247,203,27)" fg:x="156465890" fg:w="1516459"/><text x="68.4648%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,516,459 samples, 0.66%)</title><rect x="68.2148%" y="1941" width="0.6611%" height="15" fill="rgb(235,124,28)" fg:x="156465890" fg:w="1516459"/><text x="68.4648%" y="1951.50"></text></g><g><title>alloc::alloc::dealloc (1,516,459 samples, 0.66%)</title><rect x="68.2148%" y="1925" width="0.6611%" height="15" fill="rgb(208,207,46)" fg:x="156465890" fg:w="1516459"/><text x="68.4648%" y="1935.50"></text></g><g><title>cfree (1,516,459 samples, 0.66%)</title><rect x="68.2148%" y="1909" width="0.6611%" height="15" fill="rgb(234,176,4)" fg:x="156465890" fg:w="1516459"/><text x="68.4648%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (10,203,655 samples, 4.45%)</title><rect x="65.6039%" y="2165" width="4.4485%" height="15" fill="rgb(230,133,28)" fg:x="150477160" fg:w="10203655"/><text x="65.8539%" y="2175.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,203,655 samples, 4.45%)</title><rect x="65.6039%" y="2149" width="4.4485%" height="15" fill="rgb(211,137,40)" fg:x="150477160" fg:w="10203655"/><text x="65.8539%" y="2159.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (10,203,655 samples, 4.45%)</title><rect x="65.6039%" y="2133" width="4.4485%" height="15" fill="rgb(254,35,13)" fg:x="150477160" fg:w="10203655"/><text x="65.8539%" y="2143.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (10,203,655 samples, 4.45%)</title><rect x="65.6039%" y="2117" width="4.4485%" height="15" fill="rgb(225,49,51)" fg:x="150477160" fg:w="10203655"/><text x="65.8539%" y="2127.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (8,766,880 samples, 3.82%)</title><rect x="66.2303%" y="2101" width="3.8221%" height="15" fill="rgb(251,10,15)" fg:x="151913935" fg:w="8766880"/><text x="66.4803%" y="2111.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,466 samples, 1.18%)</title><rect x="68.8760%" y="2085" width="1.1765%" height="15" fill="rgb(228,207,15)" fg:x="157982349" fg:w="2698466"/><text x="69.1260%" y="2095.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,466 samples, 1.18%)</title><rect x="68.8760%" y="2069" width="1.1765%" height="15" fill="rgb(241,99,19)" fg:x="157982349" fg:w="2698466"/><text x="69.1260%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,698,466 samples, 1.18%)</title><rect x="68.8760%" y="2053" width="1.1765%" height="15" fill="rgb(207,104,49)" fg:x="157982349" fg:w="2698466"/><text x="69.1260%" y="2063.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,698,466 samples, 1.18%)</title><rect x="68.8760%" y="2037" width="1.1765%" height="15" fill="rgb(234,99,18)" fg:x="157982349" fg:w="2698466"/><text x="69.1260%" y="2047.50"></text></g><g><title>alloc::alloc::dealloc (2,698,466 samples, 1.18%)</title><rect x="68.8760%" y="2021" width="1.1765%" height="15" fill="rgb(213,191,49)" fg:x="157982349" fg:w="2698466"/><text x="69.1260%" y="2031.50"></text></g><g><title>cfree (2,698,466 samples, 1.18%)</title><rect x="68.8760%" y="2005" width="1.1765%" height="15" fill="rgb(210,226,19)" fg:x="157982349" fg:w="2698466"/><text x="69.1260%" y="2015.50"></text></g><g><title>[libc.so.6] (2,698,466 samples, 1.18%)</title><rect x="68.8760%" y="1989" width="1.1765%" height="15" fill="rgb(229,97,18)" fg:x="157982349" fg:w="2698466"/><text x="69.1260%" y="1999.50"></text></g><g><title>[libc.so.6] (2,698,466 samples, 1.18%)</title><rect x="68.8760%" y="1973" width="1.1765%" height="15" fill="rgb(211,167,15)" fg:x="157982349" fg:w="2698466"/><text x="69.1260%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (12,835,192 samples, 5.60%)</title><rect x="65.6039%" y="2293" width="5.5958%" height="15" fill="rgb(210,169,34)" fg:x="150477160" fg:w="12835192"/><text x="65.8539%" y="2303.50">core::p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,835,192 samples, 5.60%)</title><rect x="65.6039%" y="2277" width="5.5958%" height="15" fill="rgb(241,121,31)" fg:x="150477160" fg:w="12835192"/><text x="65.8539%" y="2287.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (12,835,192 samples, 5.60%)</title><rect x="65.6039%" y="2261" width="5.5958%" height="15" fill="rgb(232,40,11)" fg:x="150477160" fg:w="12835192"/><text x="65.8539%" y="2271.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (12,835,192 samples, 5.60%)</title><rect x="65.6039%" y="2245" width="5.5958%" height="15" fill="rgb(205,86,26)" fg:x="150477160" fg:w="12835192"/><text x="65.8539%" y="2255.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (12,835,192 samples, 5.60%)</title><rect x="65.6039%" y="2229" width="5.5958%" height="15" fill="rgb(231,126,28)" fg:x="150477160" fg:w="12835192"/><text x="65.8539%" y="2239.50">core::p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,835,192 samples, 5.60%)</title><rect x="65.6039%" y="2213" width="5.5958%" height="15" fill="rgb(219,221,18)" fg:x="150477160" fg:w="12835192"/><text x="65.8539%" y="2223.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (12,835,192 samples, 5.60%)</title><rect x="65.6039%" y="2197" width="5.5958%" height="15" fill="rgb(211,40,0)" fg:x="150477160" fg:w="12835192"/><text x="65.8539%" y="2207.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (12,835,192 samples, 5.60%)</title><rect x="65.6039%" y="2181" width="5.5958%" height="15" fill="rgb(239,85,43)" fg:x="150477160" fg:w="12835192"/><text x="65.8539%" y="2191.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="2165" width="1.1473%" height="15" fill="rgb(231,55,21)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="2149" width="1.1473%" height="15" fill="rgb(225,184,43)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="2133" width="1.1473%" height="15" fill="rgb(251,158,41)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="2117" width="1.1473%" height="15" fill="rgb(234,159,37)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="2127.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="2101" width="1.1473%" height="15" fill="rgb(216,204,22)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="2111.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="2085" width="1.1473%" height="15" fill="rgb(214,17,3)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="2095.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="2069" width="1.1473%" height="15" fill="rgb(212,111,17)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="2079.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="2053" width="1.1473%" height="15" fill="rgb(221,157,24)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="2063.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="2037" width="1.1473%" height="15" fill="rgb(252,16,13)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="2021" width="1.1473%" height="15" fill="rgb(221,62,2)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="2005" width="1.1473%" height="15" fill="rgb(247,87,22)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="1989" width="1.1473%" height="15" fill="rgb(215,73,9)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="1973" width="1.1473%" height="15" fill="rgb(207,175,33)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="1983.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="1957" width="1.1473%" height="15" fill="rgb(243,129,54)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="1941" width="1.1473%" height="15" fill="rgb(227,119,45)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="1951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="1925" width="1.1473%" height="15" fill="rgb(205,109,36)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="1935.50"></text></g><g><title>alloc::alloc::dealloc (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="1909" width="1.1473%" height="15" fill="rgb(205,6,39)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="1919.50"></text></g><g><title>cfree (2,631,537 samples, 1.15%)</title><rect x="70.0524%" y="1893" width="1.1473%" height="15" fill="rgb(221,32,16)" fg:x="160680815" fg:w="2631537"/><text x="70.3024%" y="1903.50"></text></g><g><title>[libc.so.6] (1,182,423 samples, 0.52%)</title><rect x="70.6842%" y="1877" width="0.5155%" height="15" fill="rgb(228,144,50)" fg:x="162129929" fg:w="1182423"/><text x="70.9342%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (14,102,120 samples, 6.15%)</title><rect x="65.6039%" y="2357" width="6.1481%" height="15" fill="rgb(229,201,53)" fg:x="150477160" fg:w="14102120"/><text x="65.8539%" y="2367.50">core::pt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,102,120 samples, 6.15%)</title><rect x="65.6039%" y="2341" width="6.1481%" height="15" fill="rgb(249,153,27)" fg:x="150477160" fg:w="14102120"/><text x="65.8539%" y="2351.50">&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (14,102,120 samples, 6.15%)</title><rect x="65.6039%" y="2325" width="6.1481%" height="15" fill="rgb(227,106,25)" fg:x="150477160" fg:w="14102120"/><text x="65.8539%" y="2335.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (14,102,120 samples, 6.15%)</title><rect x="65.6039%" y="2309" width="6.1481%" height="15" fill="rgb(230,65,29)" fg:x="150477160" fg:w="14102120"/><text x="65.8539%" y="2319.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,266,928 samples, 0.55%)</title><rect x="71.1997%" y="2293" width="0.5523%" height="15" fill="rgb(221,57,46)" fg:x="163312352" fg:w="1266928"/><text x="71.4497%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,266,928 samples, 0.55%)</title><rect x="71.1997%" y="2277" width="0.5523%" height="15" fill="rgb(229,161,17)" fg:x="163312352" fg:w="1266928"/><text x="71.4497%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,266,928 samples, 0.55%)</title><rect x="71.1997%" y="2261" width="0.5523%" height="15" fill="rgb(222,213,11)" fg:x="163312352" fg:w="1266928"/><text x="71.4497%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,266,928 samples, 0.55%)</title><rect x="71.1997%" y="2245" width="0.5523%" height="15" fill="rgb(235,35,13)" fg:x="163312352" fg:w="1266928"/><text x="71.4497%" y="2255.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,266,928 samples, 0.55%)</title><rect x="71.1997%" y="2229" width="0.5523%" height="15" fill="rgb(233,158,34)" fg:x="163312352" fg:w="1266928"/><text x="71.4497%" y="2239.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,266,928 samples, 0.55%)</title><rect x="71.1997%" y="2213" width="0.5523%" height="15" fill="rgb(215,151,48)" fg:x="163312352" fg:w="1266928"/><text x="71.4497%" y="2223.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,266,928 samples, 0.55%)</title><rect x="71.1997%" y="2197" width="0.5523%" height="15" fill="rgb(229,84,14)" fg:x="163312352" fg:w="1266928"/><text x="71.4497%" y="2207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,266,928 samples, 0.55%)</title><rect x="71.1997%" y="2181" width="0.5523%" height="15" fill="rgb(229,68,14)" fg:x="163312352" fg:w="1266928"/><text x="71.4497%" y="2191.50"></text></g><g><title>alloc::alloc::dealloc (1,266,928 samples, 0.55%)</title><rect x="71.1997%" y="2165" width="0.5523%" height="15" fill="rgb(243,106,26)" fg:x="163312352" fg:w="1266928"/><text x="71.4497%" y="2175.50"></text></g><g><title>cfree (1,266,928 samples, 0.55%)</title><rect x="71.1997%" y="2149" width="0.5523%" height="15" fill="rgb(206,45,38)" fg:x="163312352" fg:w="1266928"/><text x="71.4497%" y="2159.50"></text></g><g><title>[libc.so.6] (1,266,928 samples, 0.55%)</title><rect x="71.1997%" y="2133" width="0.5523%" height="15" fill="rgb(226,6,15)" fg:x="163312352" fg:w="1266928"/><text x="71.4497%" y="2143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21,091,909 samples, 9.20%)</title><rect x="63.1203%" y="2405" width="9.1955%" height="15" fill="rgb(232,22,54)" fg:x="144780450" fg:w="21091909"/><text x="63.3703%" y="2415.50">&lt;alloc::vec::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (21,091,909 samples, 9.20%)</title><rect x="63.1203%" y="2389" width="9.1955%" height="15" fill="rgb(229,222,32)" fg:x="144780450" fg:w="21091909"/><text x="63.3703%" y="2399.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (21,091,909 samples, 9.20%)</title><rect x="63.1203%" y="2373" width="9.1955%" height="15" fill="rgb(228,62,29)" fg:x="144780450" fg:w="21091909"/><text x="63.3703%" y="2383.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,293,079 samples, 0.56%)</title><rect x="71.7520%" y="2357" width="0.5637%" height="15" fill="rgb(251,103,34)" fg:x="164579280" fg:w="1293079"/><text x="72.0020%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,293,079 samples, 0.56%)</title><rect x="71.7520%" y="2341" width="0.5637%" height="15" fill="rgb(233,12,30)" fg:x="164579280" fg:w="1293079"/><text x="72.0020%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,293,079 samples, 0.56%)</title><rect x="71.7520%" y="2325" width="0.5637%" height="15" fill="rgb(238,52,0)" fg:x="164579280" fg:w="1293079"/><text x="72.0020%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,293,079 samples, 0.56%)</title><rect x="71.7520%" y="2309" width="0.5637%" height="15" fill="rgb(223,98,5)" fg:x="164579280" fg:w="1293079"/><text x="72.0020%" y="2319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,293,079 samples, 0.56%)</title><rect x="71.7520%" y="2293" width="0.5637%" height="15" fill="rgb(228,75,37)" fg:x="164579280" fg:w="1293079"/><text x="72.0020%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,293,079 samples, 0.56%)</title><rect x="71.7520%" y="2277" width="0.5637%" height="15" fill="rgb(205,115,49)" fg:x="164579280" fg:w="1293079"/><text x="72.0020%" y="2287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,293,079 samples, 0.56%)</title><rect x="71.7520%" y="2261" width="0.5637%" height="15" fill="rgb(250,154,43)" fg:x="164579280" fg:w="1293079"/><text x="72.0020%" y="2271.50"></text></g><g><title>alloc::alloc::dealloc (1,293,079 samples, 0.56%)</title><rect x="71.7520%" y="2245" width="0.5637%" height="15" fill="rgb(226,43,29)" fg:x="164579280" fg:w="1293079"/><text x="72.0020%" y="2255.50"></text></g><g><title>__rust_dealloc (1,293,079 samples, 0.56%)</title><rect x="71.7520%" y="2229" width="0.5637%" height="15" fill="rgb(249,228,39)" fg:x="164579280" fg:w="1293079"/><text x="72.0020%" y="2239.50"></text></g><g><title>__rust_dealloc (1,103,253 samples, 0.48%)</title><rect x="72.3158%" y="2325" width="0.4810%" height="15" fill="rgb(216,79,43)" fg:x="165872359" fg:w="1103253"/><text x="72.5658%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (23,571,045 samples, 10.28%)</title><rect x="63.1203%" y="2421" width="10.2763%" height="15" fill="rgb(228,95,12)" fg:x="144780450" fg:w="23571045"/><text x="63.3703%" y="2431.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,479,136 samples, 1.08%)</title><rect x="72.3158%" y="2405" width="1.0808%" height="15" fill="rgb(249,221,15)" fg:x="165872359" fg:w="2479136"/><text x="72.5658%" y="2415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,479,136 samples, 1.08%)</title><rect x="72.3158%" y="2389" width="1.0808%" height="15" fill="rgb(233,34,13)" fg:x="165872359" fg:w="2479136"/><text x="72.5658%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,479,136 samples, 1.08%)</title><rect x="72.3158%" y="2373" width="1.0808%" height="15" fill="rgb(214,103,39)" fg:x="165872359" fg:w="2479136"/><text x="72.5658%" y="2383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,479,136 samples, 1.08%)</title><rect x="72.3158%" y="2357" width="1.0808%" height="15" fill="rgb(251,126,39)" fg:x="165872359" fg:w="2479136"/><text x="72.5658%" y="2367.50"></text></g><g><title>alloc::alloc::dealloc (2,479,136 samples, 1.08%)</title><rect x="72.3158%" y="2341" width="1.0808%" height="15" fill="rgb(214,216,36)" fg:x="165872359" fg:w="2479136"/><text x="72.5658%" y="2351.50"></text></g><g><title>cfree (1,375,883 samples, 0.60%)</title><rect x="72.7968%" y="2325" width="0.5998%" height="15" fill="rgb(220,221,8)" fg:x="166975612" fg:w="1375883"/><text x="73.0468%" y="2335.50"></text></g><g><title>[libc.so.6] (1,375,883 samples, 0.60%)</title><rect x="72.7968%" y="2309" width="0.5998%" height="15" fill="rgb(240,216,3)" fg:x="166975612" fg:w="1375883"/><text x="73.0468%" y="2319.50"></text></g><g><title>[libc.so.6] (1,375,883 samples, 0.60%)</title><rect x="72.7968%" y="2293" width="0.5998%" height="15" fill="rgb(232,218,17)" fg:x="166975612" fg:w="1375883"/><text x="73.0468%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,526,040 samples, 0.67%)</title><rect x="73.3966%" y="2421" width="0.6653%" height="15" fill="rgb(229,163,45)" fg:x="168351495" fg:w="1526040"/><text x="73.6466%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,526,040 samples, 0.67%)</title><rect x="73.3966%" y="2405" width="0.6653%" height="15" fill="rgb(231,110,42)" fg:x="168351495" fg:w="1526040"/><text x="73.6466%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,526,040 samples, 0.67%)</title><rect x="73.3966%" y="2389" width="0.6653%" height="15" fill="rgb(208,170,48)" fg:x="168351495" fg:w="1526040"/><text x="73.6466%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,526,040 samples, 0.67%)</title><rect x="73.3966%" y="2373" width="0.6653%" height="15" fill="rgb(239,116,25)" fg:x="168351495" fg:w="1526040"/><text x="73.6466%" y="2383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,526,040 samples, 0.67%)</title><rect x="73.3966%" y="2357" width="0.6653%" height="15" fill="rgb(219,200,50)" fg:x="168351495" fg:w="1526040"/><text x="73.6466%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,526,040 samples, 0.67%)</title><rect x="73.3966%" y="2341" width="0.6653%" height="15" fill="rgb(245,200,0)" fg:x="168351495" fg:w="1526040"/><text x="73.6466%" y="2351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,526,040 samples, 0.67%)</title><rect x="73.3966%" y="2325" width="0.6653%" height="15" fill="rgb(245,119,33)" fg:x="168351495" fg:w="1526040"/><text x="73.6466%" y="2335.50"></text></g><g><title>alloc::alloc::dealloc (1,526,040 samples, 0.67%)</title><rect x="73.3966%" y="2309" width="0.6653%" height="15" fill="rgb(231,125,12)" fg:x="168351495" fg:w="1526040"/><text x="73.6466%" y="2319.50"></text></g><g><title>cfree (1,526,040 samples, 0.67%)</title><rect x="73.3966%" y="2293" width="0.6653%" height="15" fill="rgb(216,96,41)" fg:x="168351495" fg:w="1526040"/><text x="73.6466%" y="2303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26,097,389 samples, 11.38%)</title><rect x="63.1203%" y="2469" width="11.3777%" height="15" fill="rgb(248,43,45)" fg:x="144780450" fg:w="26097389"/><text x="63.3703%" y="2479.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (26,097,389 samples, 11.38%)</title><rect x="63.1203%" y="2453" width="11.3777%" height="15" fill="rgb(217,222,7)" fg:x="144780450" fg:w="26097389"/><text x="63.3703%" y="2463.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (26,097,389 samples, 11.38%)</title><rect x="63.1203%" y="2437" width="11.3777%" height="15" fill="rgb(233,28,6)" fg:x="144780450" fg:w="26097389"/><text x="63.3703%" y="2447.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;css_bitvector_compiler::BitVector&gt;&gt; (1,000,304 samples, 0.44%)</title><rect x="74.0619%" y="2421" width="0.4361%" height="15" fill="rgb(231,218,15)" fg:x="169877535" fg:w="1000304"/><text x="74.3119%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (39,017,183 samples, 17.01%)</title><rect x="63.1203%" y="2613" width="17.0104%" height="15" fill="rgb(226,171,48)" fg:x="144780450" fg:w="39017183"/><text x="63.3703%" y="2623.50">core::ptr::drop_in_place&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39,017,183 samples, 17.01%)</title><rect x="63.1203%" y="2597" width="17.0104%" height="15" fill="rgb(235,201,9)" fg:x="144780450" fg:w="39017183"/><text x="63.3703%" y="2607.50">&lt;alloc::vec::Vec&lt;T,A&gt; as c..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (39,017,183 samples, 17.01%)</title><rect x="63.1203%" y="2581" width="17.0104%" height="15" fill="rgb(217,80,15)" fg:x="144780450" fg:w="39017183"/><text x="63.3703%" y="2591.50">core::ptr::drop_in_place&lt;[..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (39,017,183 samples, 17.01%)</title><rect x="63.1203%" y="2565" width="17.0104%" height="15" fill="rgb(219,152,8)" fg:x="144780450" fg:w="39017183"/><text x="63.3703%" y="2575.50">core::ptr::drop_in_place&lt;c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (39,017,183 samples, 17.01%)</title><rect x="63.1203%" y="2549" width="17.0104%" height="15" fill="rgb(243,107,38)" fg:x="144780450" fg:w="39017183"/><text x="63.3703%" y="2559.50">core::ptr::drop_in_place&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39,017,183 samples, 17.01%)</title><rect x="63.1203%" y="2533" width="17.0104%" height="15" fill="rgb(231,17,5)" fg:x="144780450" fg:w="39017183"/><text x="63.3703%" y="2543.50">&lt;alloc::vec::Vec&lt;T,A&gt; as c..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (39,017,183 samples, 17.01%)</title><rect x="63.1203%" y="2517" width="17.0104%" height="15" fill="rgb(209,25,54)" fg:x="144780450" fg:w="39017183"/><text x="63.3703%" y="2527.50">core::ptr::drop_in_place&lt;[..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (39,017,183 samples, 17.01%)</title><rect x="63.1203%" y="2501" width="17.0104%" height="15" fill="rgb(219,0,2)" fg:x="144780450" fg:w="39017183"/><text x="63.3703%" y="2511.50">core::ptr::drop_in_place&lt;c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (39,017,183 samples, 17.01%)</title><rect x="63.1203%" y="2485" width="17.0104%" height="15" fill="rgb(246,9,5)" fg:x="144780450" fg:w="39017183"/><text x="63.3703%" y="2495.50">core::ptr::drop_in_place&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (12,919,794 samples, 5.63%)</title><rect x="74.4980%" y="2469" width="5.6327%" height="15" fill="rgb(226,159,4)" fg:x="170877839" fg:w="12919794"/><text x="74.7480%" y="2479.50">core::p..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,919,794 samples, 5.63%)</title><rect x="74.4980%" y="2453" width="5.6327%" height="15" fill="rgb(219,175,34)" fg:x="170877839" fg:w="12919794"/><text x="74.7480%" y="2463.50">&lt;alloc:..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (12,919,794 samples, 5.63%)</title><rect x="74.4980%" y="2437" width="5.6327%" height="15" fill="rgb(236,10,46)" fg:x="170877839" fg:w="12919794"/><text x="74.7480%" y="2447.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12,919,794 samples, 5.63%)</title><rect x="74.4980%" y="2421" width="5.6327%" height="15" fill="rgb(240,211,16)" fg:x="170877839" fg:w="12919794"/><text x="74.7480%" y="2431.50">&lt;alloc:..</text></g><g><title>alloc::alloc::dealloc (12,919,794 samples, 5.63%)</title><rect x="74.4980%" y="2405" width="5.6327%" height="15" fill="rgb(205,3,43)" fg:x="170877839" fg:w="12919794"/><text x="74.7480%" y="2415.50">alloc::..</text></g><g><title>cfree (12,919,794 samples, 5.63%)</title><rect x="74.4980%" y="2389" width="5.6327%" height="15" fill="rgb(245,7,22)" fg:x="170877839" fg:w="12919794"/><text x="74.7480%" y="2399.50">cfree</text></g><g><title>[libc.so.6] (12,919,794 samples, 5.63%)</title><rect x="74.4980%" y="2373" width="5.6327%" height="15" fill="rgb(239,132,32)" fg:x="170877839" fg:w="12919794"/><text x="74.7480%" y="2383.50">[libc.s..</text></g><g><title>[libc.so.6] (12,919,794 samples, 5.63%)</title><rect x="74.4980%" y="2357" width="5.6327%" height="15" fill="rgb(228,202,34)" fg:x="170877839" fg:w="12919794"/><text x="74.7480%" y="2367.50">[libc.s..</text></g><g><title>[libc.so.6] (2,647,116 samples, 1.15%)</title><rect x="78.9766%" y="2341" width="1.1541%" height="15" fill="rgb(254,200,22)" fg:x="181150517" fg:w="2647116"/><text x="79.2266%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (41,595,363 samples, 18.13%)</title><rect x="62.5536%" y="2821" width="18.1344%" height="15" fill="rgb(219,10,39)" fg:x="143480520" fg:w="41595363"/><text x="62.8036%" y="2831.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (41,595,363 samples, 18.13%)</title><rect x="62.5536%" y="2805" width="18.1344%" height="15" fill="rgb(226,210,39)" fg:x="143480520" fg:w="41595363"/><text x="62.8036%" y="2815.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41,595,363 samples, 18.13%)</title><rect x="62.5536%" y="2789" width="18.1344%" height="15" fill="rgb(208,219,16)" fg:x="143480520" fg:w="41595363"/><text x="62.8036%" y="2799.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (41,595,363 samples, 18.13%)</title><rect x="62.5536%" y="2773" width="18.1344%" height="15" fill="rgb(216,158,51)" fg:x="143480520" fg:w="41595363"/><text x="62.8036%" y="2783.50">core::ptr::drop_in_place&lt;[cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (41,595,363 samples, 18.13%)</title><rect x="62.5536%" y="2757" width="18.1344%" height="15" fill="rgb(233,14,44)" fg:x="143480520" fg:w="41595363"/><text x="62.8036%" y="2767.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (41,595,363 samples, 18.13%)</title><rect x="62.5536%" y="2741" width="18.1344%" height="15" fill="rgb(237,97,39)" fg:x="143480520" fg:w="41595363"/><text x="62.8036%" y="2751.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41,595,363 samples, 18.13%)</title><rect x="62.5536%" y="2725" width="18.1344%" height="15" fill="rgb(218,198,43)" fg:x="143480520" fg:w="41595363"/><text x="62.8036%" y="2735.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (41,595,363 samples, 18.13%)</title><rect x="62.5536%" y="2709" width="18.1344%" height="15" fill="rgb(231,104,20)" fg:x="143480520" fg:w="41595363"/><text x="62.8036%" y="2719.50">core::ptr::drop_in_place&lt;[cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (41,595,363 samples, 18.13%)</title><rect x="62.5536%" y="2693" width="18.1344%" height="15" fill="rgb(254,36,13)" fg:x="143480520" fg:w="41595363"/><text x="62.8036%" y="2703.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (41,595,363 samples, 18.13%)</title><rect x="62.5536%" y="2677" width="18.1344%" height="15" fill="rgb(248,14,50)" fg:x="143480520" fg:w="41595363"/><text x="62.8036%" y="2687.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41,595,363 samples, 18.13%)</title><rect x="62.5536%" y="2661" width="18.1344%" height="15" fill="rgb(217,107,29)" fg:x="143480520" fg:w="41595363"/><text x="62.8036%" y="2671.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (41,595,363 samples, 18.13%)</title><rect x="62.5536%" y="2645" width="18.1344%" height="15" fill="rgb(251,169,33)" fg:x="143480520" fg:w="41595363"/><text x="62.8036%" y="2655.50">core::ptr::drop_in_place&lt;[cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (41,595,363 samples, 18.13%)</title><rect x="62.5536%" y="2629" width="18.1344%" height="15" fill="rgb(217,108,32)" fg:x="143480520" fg:w="41595363"/><text x="62.8036%" y="2639.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,278,250 samples, 0.56%)</title><rect x="80.1307%" y="2613" width="0.5573%" height="15" fill="rgb(219,66,42)" fg:x="183797633" fg:w="1278250"/><text x="80.3807%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,278,250 samples, 0.56%)</title><rect x="80.1307%" y="2597" width="0.5573%" height="15" fill="rgb(206,180,7)" fg:x="183797633" fg:w="1278250"/><text x="80.3807%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,278,250 samples, 0.56%)</title><rect x="80.1307%" y="2581" width="0.5573%" height="15" fill="rgb(208,226,31)" fg:x="183797633" fg:w="1278250"/><text x="80.3807%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,278,250 samples, 0.56%)</title><rect x="80.1307%" y="2565" width="0.5573%" height="15" fill="rgb(218,26,49)" fg:x="183797633" fg:w="1278250"/><text x="80.3807%" y="2575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,278,250 samples, 0.56%)</title><rect x="80.1307%" y="2549" width="0.5573%" height="15" fill="rgb(233,197,48)" fg:x="183797633" fg:w="1278250"/><text x="80.3807%" y="2559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,278,250 samples, 0.56%)</title><rect x="80.1307%" y="2533" width="0.5573%" height="15" fill="rgb(252,181,51)" fg:x="183797633" fg:w="1278250"/><text x="80.3807%" y="2543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,278,250 samples, 0.56%)</title><rect x="80.1307%" y="2517" width="0.5573%" height="15" fill="rgb(253,90,19)" fg:x="183797633" fg:w="1278250"/><text x="80.3807%" y="2527.50"></text></g><g><title>alloc::alloc::dealloc (1,278,250 samples, 0.56%)</title><rect x="80.1307%" y="2501" width="0.5573%" height="15" fill="rgb(215,171,30)" fg:x="183797633" fg:w="1278250"/><text x="80.3807%" y="2511.50"></text></g><g><title>cfree (1,278,250 samples, 0.56%)</title><rect x="80.1307%" y="2485" width="0.5573%" height="15" fill="rgb(214,222,9)" fg:x="183797633" fg:w="1278250"/><text x="80.3807%" y="2495.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (140,794,349 samples, 61.38%)</title><rect x="19.9911%" y="2837" width="61.3825%" height="15" fill="rgb(223,3,22)" fg:x="45854113" fg:w="140794349"/><text x="20.2411%" y="2847.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,572,579 samples, 0.69%)</title><rect x="80.6880%" y="2821" width="0.6856%" height="15" fill="rgb(225,196,46)" fg:x="185075883" fg:w="1572579"/><text x="80.9380%" y="2831.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,572,579 samples, 0.69%)</title><rect x="80.6880%" y="2805" width="0.6856%" height="15" fill="rgb(209,110,37)" fg:x="185075883" fg:w="1572579"/><text x="80.9380%" y="2815.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,572,579 samples, 0.69%)</title><rect x="80.6880%" y="2789" width="0.6856%" height="15" fill="rgb(249,89,12)" fg:x="185075883" fg:w="1572579"/><text x="80.9380%" y="2799.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,572,579 samples, 0.69%)</title><rect x="80.6880%" y="2773" width="0.6856%" height="15" fill="rgb(226,27,33)" fg:x="185075883" fg:w="1572579"/><text x="80.9380%" y="2783.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,572,579 samples, 0.69%)</title><rect x="80.6880%" y="2757" width="0.6856%" height="15" fill="rgb(213,82,22)" fg:x="185075883" fg:w="1572579"/><text x="80.9380%" y="2767.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,572,579 samples, 0.69%)</title><rect x="80.6880%" y="2741" width="0.6856%" height="15" fill="rgb(248,140,0)" fg:x="185075883" fg:w="1572579"/><text x="80.9380%" y="2751.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,572,579 samples, 0.69%)</title><rect x="80.6880%" y="2725" width="0.6856%" height="15" fill="rgb(228,106,3)" fg:x="185075883" fg:w="1572579"/><text x="80.9380%" y="2735.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,117,513 samples, 0.49%)</title><rect x="81.3736%" y="2821" width="0.4872%" height="15" fill="rgb(209,23,37)" fg:x="186648462" fg:w="1117513"/><text x="81.6236%" y="2831.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1,117,513 samples, 0.49%)</title><rect x="81.3736%" y="2805" width="0.4872%" height="15" fill="rgb(241,93,50)" fg:x="186648462" fg:w="1117513"/><text x="81.6236%" y="2815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,117,513 samples, 0.49%)</title><rect x="81.3736%" y="2789" width="0.4872%" height="15" fill="rgb(253,46,43)" fg:x="186648462" fg:w="1117513"/><text x="81.6236%" y="2799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,117,513 samples, 0.49%)</title><rect x="81.3736%" y="2773" width="0.4872%" height="15" fill="rgb(226,206,43)" fg:x="186648462" fg:w="1117513"/><text x="81.6236%" y="2783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,117,513 samples, 0.49%)</title><rect x="81.3736%" y="2757" width="0.4872%" height="15" fill="rgb(217,54,7)" fg:x="186648462" fg:w="1117513"/><text x="81.6236%" y="2767.50"></text></g><g><title>&lt;core::str::LinesMap as core::ops::function::FnMut&lt;(&amp;str,)&gt;&gt;::call_mut (1,117,513 samples, 0.49%)</title><rect x="81.3736%" y="2741" width="0.4872%" height="15" fill="rgb(223,5,52)" fg:x="186648462" fg:w="1117513"/><text x="81.6236%" y="2751.50"></text></g><g><title>&lt;core::str::LinesMap as core::ops::function::Fn&lt;(&amp;str,)&gt;&gt;::call (1,117,513 samples, 0.49%)</title><rect x="81.3736%" y="2725" width="0.4872%" height="15" fill="rgb(206,52,46)" fg:x="186648462" fg:w="1117513"/><text x="81.6236%" y="2735.50"></text></g><g><title>core::str::&lt;impl str&gt;::strip_suffix (1,117,513 samples, 0.49%)</title><rect x="81.3736%" y="2709" width="0.4872%" height="15" fill="rgb(253,136,11)" fg:x="186648462" fg:w="1117513"/><text x="81.6236%" y="2719.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::strip_suffix_of (1,117,513 samples, 0.49%)</title><rect x="81.3736%" y="2693" width="0.4872%" height="15" fill="rgb(208,106,33)" fg:x="186648462" fg:w="1117513"/><text x="81.6236%" y="2703.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::strip_suffix_of (1,117,513 samples, 0.49%)</title><rect x="81.3736%" y="2677" width="0.4872%" height="15" fill="rgb(206,54,4)" fg:x="186648462" fg:w="1117513"/><text x="81.6236%" y="2687.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_suffix_of (1,117,513 samples, 0.49%)</title><rect x="81.3736%" y="2661" width="0.4872%" height="15" fill="rgb(213,3,15)" fg:x="186648462" fg:w="1117513"/><text x="81.6236%" y="2671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::ends_with (1,117,513 samples, 0.49%)</title><rect x="81.3736%" y="2645" width="0.4872%" height="15" fill="rgb(252,211,39)" fg:x="186648462" fg:w="1117513"/><text x="81.6236%" y="2655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,117,513 samples, 0.49%)</title><rect x="81.3736%" y="2629" width="0.4872%" height="15" fill="rgb(223,6,36)" fg:x="186648462" fg:w="1117513"/><text x="81.6236%" y="2639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,117,513 samples, 0.49%)</title><rect x="81.3736%" y="2613" width="0.4872%" height="15" fill="rgb(252,169,45)" fg:x="186648462" fg:w="1117513"/><text x="81.6236%" y="2623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,117,513 samples, 0.49%)</title><rect x="81.3736%" y="2597" width="0.4872%" height="15" fill="rgb(212,48,26)" fg:x="186648462" fg:w="1117513"/><text x="81.6236%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2821" width="0.4251%" height="15" fill="rgb(251,102,48)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2831.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2805" width="0.4251%" height="15" fill="rgb(243,208,16)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2789" width="0.4251%" height="15" fill="rgb(219,96,24)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2773" width="0.4251%" height="15" fill="rgb(219,33,29)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2783.50"></text></g><g><title>core::mem::drop (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2757" width="0.4251%" height="15" fill="rgb(223,176,5)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2741" width="0.4251%" height="15" fill="rgb(228,140,14)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2751.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2725" width="0.4251%" height="15" fill="rgb(217,179,31)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2709" width="0.4251%" height="15" fill="rgb(230,9,30)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2693" width="0.4251%" height="15" fill="rgb(230,136,20)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2703.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2677" width="0.4251%" height="15" fill="rgb(215,210,22)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2687.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2661" width="0.4251%" height="15" fill="rgb(218,43,5)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2645" width="0.4251%" height="15" fill="rgb(216,11,5)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2629" width="0.4251%" height="15" fill="rgb(209,82,29)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2613" width="0.4251%" height="15" fill="rgb(244,115,12)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2597" width="0.4251%" height="15" fill="rgb(222,82,18)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2607.50"></text></g><g><title>core::mem::drop (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2581" width="0.4251%" height="15" fill="rgb(249,227,8)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2565" width="0.4251%" height="15" fill="rgb(253,141,45)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2549" width="0.4251%" height="15" fill="rgb(234,184,4)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2533" width="0.4251%" height="15" fill="rgb(218,194,23)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2517" width="0.4251%" height="15" fill="rgb(235,66,41)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2527.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2501" width="0.4251%" height="15" fill="rgb(245,217,1)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2485" width="0.4251%" height="15" fill="rgb(229,91,1)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2495.50"></text></g><g><title>cfree (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2469" width="0.4251%" height="15" fill="rgb(207,101,30)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2479.50"></text></g><g><title>[libc.so.6] (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2453" width="0.4251%" height="15" fill="rgb(223,82,49)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2463.50"></text></g><g><title>[libc.so.6] (975,111 samples, 0.43%)</title><rect x="81.8608%" y="2437" width="0.4251%" height="15" fill="rgb(218,167,17)" fg:x="187765975" fg:w="975111"/><text x="82.1108%" y="2447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,178,121 samples, 0.51%)</title><rect x="82.2859%" y="2629" width="0.5136%" height="15" fill="rgb(208,103,14)" fg:x="188741086" fg:w="1178121"/><text x="82.5359%" y="2639.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1,178,121 samples, 0.51%)</title><rect x="82.2859%" y="2613" width="0.5136%" height="15" fill="rgb(238,20,8)" fg:x="188741086" fg:w="1178121"/><text x="82.5359%" y="2623.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1,178,121 samples, 0.51%)</title><rect x="82.2859%" y="2597" width="0.5136%" height="15" fill="rgb(218,80,54)" fg:x="188741086" fg:w="1178121"/><text x="82.5359%" y="2607.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,178,121 samples, 0.51%)</title><rect x="82.2859%" y="2581" width="0.5136%" height="15" fill="rgb(240,144,17)" fg:x="188741086" fg:w="1178121"/><text x="82.5359%" y="2591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,178,121 samples, 0.51%)</title><rect x="82.2859%" y="2565" width="0.5136%" height="15" fill="rgb(245,27,50)" fg:x="188741086" fg:w="1178121"/><text x="82.5359%" y="2575.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,178,121 samples, 0.51%)</title><rect x="82.2859%" y="2549" width="0.5136%" height="15" fill="rgb(251,51,7)" fg:x="188741086" fg:w="1178121"/><text x="82.5359%" y="2559.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,178,121 samples, 0.51%)</title><rect x="82.2859%" y="2533" width="0.5136%" height="15" fill="rgb(245,217,29)" fg:x="188741086" fg:w="1178121"/><text x="82.5359%" y="2543.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,060,541 samples, 0.46%)</title><rect x="83.2752%" y="2293" width="0.4624%" height="15" fill="rgb(221,176,29)" fg:x="191010278" fg:w="1060541"/><text x="83.5252%" y="2303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,588,246 samples, 0.69%)</title><rect x="83.2752%" y="2325" width="0.6924%" height="15" fill="rgb(212,180,24)" fg:x="191010278" fg:w="1588246"/><text x="83.5252%" y="2335.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,588,246 samples, 0.69%)</title><rect x="83.2752%" y="2309" width="0.6924%" height="15" fill="rgb(254,24,2)" fg:x="191010278" fg:w="1588246"/><text x="83.5252%" y="2319.50"></text></g><g><title>serde_json::read::parse_escape (527,705 samples, 0.23%)</title><rect x="83.7376%" y="2293" width="0.2301%" height="15" fill="rgb(230,100,2)" fg:x="192070819" fg:w="527705"/><text x="83.9876%" y="2303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (527,705 samples, 0.23%)</title><rect x="83.7376%" y="2277" width="0.2301%" height="15" fill="rgb(219,142,25)" fg:x="192070819" fg:w="527705"/><text x="83.9876%" y="2287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,162,090 samples, 0.51%)</title><rect x="83.9677%" y="2309" width="0.5066%" height="15" fill="rgb(240,73,43)" fg:x="192598524" fg:w="1162090"/><text x="84.2177%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,162,090 samples, 0.51%)</title><rect x="83.9677%" y="2293" width="0.5066%" height="15" fill="rgb(214,114,15)" fg:x="192598524" fg:w="1162090"/><text x="84.2177%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,162,090 samples, 0.51%)</title><rect x="83.9677%" y="2277" width="0.5066%" height="15" fill="rgb(207,130,4)" fg:x="192598524" fg:w="1162090"/><text x="84.2177%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,162,090 samples, 0.51%)</title><rect x="83.9677%" y="2261" width="0.5066%" height="15" fill="rgb(221,25,40)" fg:x="192598524" fg:w="1162090"/><text x="84.2177%" y="2271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,162,090 samples, 0.51%)</title><rect x="83.9677%" y="2245" width="0.5066%" height="15" fill="rgb(241,184,7)" fg:x="192598524" fg:w="1162090"/><text x="84.2177%" y="2255.50"></text></g><g><title>malloc (1,162,090 samples, 0.51%)</title><rect x="83.9677%" y="2229" width="0.5066%" height="15" fill="rgb(235,159,4)" fg:x="192598524" fg:w="1162090"/><text x="84.2177%" y="2239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,268,488 samples, 0.55%)</title><rect x="84.9377%" y="1909" width="0.5530%" height="15" fill="rgb(214,87,48)" fg:x="194823485" fg:w="1268488"/><text x="85.1877%" y="1919.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,268,488 samples, 0.55%)</title><rect x="84.9377%" y="1893" width="0.5530%" height="15" fill="rgb(246,198,24)" fg:x="194823485" fg:w="1268488"/><text x="85.1877%" y="1903.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,268,488 samples, 0.55%)</title><rect x="84.9377%" y="1877" width="0.5530%" height="15" fill="rgb(209,66,40)" fg:x="194823485" fg:w="1268488"/><text x="85.1877%" y="1887.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,268,488 samples, 0.55%)</title><rect x="84.9377%" y="1861" width="0.5530%" height="15" fill="rgb(233,147,39)" fg:x="194823485" fg:w="1268488"/><text x="85.1877%" y="1871.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,268,488 samples, 0.55%)</title><rect x="84.9377%" y="1845" width="0.5530%" height="15" fill="rgb(231,145,52)" fg:x="194823485" fg:w="1268488"/><text x="85.1877%" y="1855.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,268,488 samples, 0.55%)</title><rect x="84.9377%" y="1829" width="0.5530%" height="15" fill="rgb(206,20,26)" fg:x="194823485" fg:w="1268488"/><text x="85.1877%" y="1839.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,268,488 samples, 0.55%)</title><rect x="84.9377%" y="1813" width="0.5530%" height="15" fill="rgb(238,220,4)" fg:x="194823485" fg:w="1268488"/><text x="85.1877%" y="1823.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1765" width="0.3068%" height="15" fill="rgb(252,195,42)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1775.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1749" width="0.3068%" height="15" fill="rgb(209,10,6)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1759.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1733" width="0.3068%" height="15" fill="rgb(229,3,52)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1743.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1717" width="0.3068%" height="15" fill="rgb(253,49,37)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1727.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1701" width="0.3068%" height="15" fill="rgb(240,103,49)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1711.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1685" width="0.3068%" height="15" fill="rgb(250,182,30)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1695.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1669" width="0.3068%" height="15" fill="rgb(248,8,30)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1653" width="0.3068%" height="15" fill="rgb(237,120,30)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1663.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1637" width="0.3068%" height="15" fill="rgb(221,146,34)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1621" width="0.3068%" height="15" fill="rgb(242,55,13)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1605" width="0.3068%" height="15" fill="rgb(242,112,31)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1589" width="0.3068%" height="15" fill="rgb(249,192,27)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1573" width="0.3068%" height="15" fill="rgb(208,204,44)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1557" width="0.3068%" height="15" fill="rgb(208,93,54)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1541" width="0.3068%" height="15" fill="rgb(242,1,31)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1525" width="0.3068%" height="15" fill="rgb(241,83,25)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1509" width="0.3068%" height="15" fill="rgb(205,169,50)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1493" width="0.3068%" height="15" fill="rgb(239,186,37)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1477" width="0.3068%" height="15" fill="rgb(205,221,10)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1487.50"></text></g><g><title>malloc (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1461" width="0.3068%" height="15" fill="rgb(218,196,15)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1471.50"></text></g><g><title>[libc.so.6] (703,641 samples, 0.31%)</title><rect x="85.9881%" y="1445" width="0.3068%" height="15" fill="rgb(218,196,35)" fg:x="197232936" fg:w="703641"/><text x="86.2381%" y="1455.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (930,086 samples, 0.41%)</title><rect x="86.2949%" y="1701" width="0.4055%" height="15" fill="rgb(233,63,24)" fg:x="197936577" fg:w="930086"/><text x="86.5449%" y="1711.50"></text></g><g><title>serde::de::MapAccess::next_value (930,086 samples, 0.41%)</title><rect x="86.2949%" y="1685" width="0.4055%" height="15" fill="rgb(225,8,4)" fg:x="197936577" fg:w="930086"/><text x="86.5449%" y="1695.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (930,086 samples, 0.41%)</title><rect x="86.2949%" y="1669" width="0.4055%" height="15" fill="rgb(234,105,35)" fg:x="197936577" fg:w="930086"/><text x="86.5449%" y="1679.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (930,086 samples, 0.41%)</title><rect x="86.2949%" y="1653" width="0.4055%" height="15" fill="rgb(236,21,32)" fg:x="197936577" fg:w="930086"/><text x="86.5449%" y="1663.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (930,086 samples, 0.41%)</title><rect x="86.2949%" y="1637" width="0.4055%" height="15" fill="rgb(228,109,6)" fg:x="197936577" fg:w="930086"/><text x="86.5449%" y="1647.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (930,086 samples, 0.41%)</title><rect x="86.2949%" y="1621" width="0.4055%" height="15" fill="rgb(229,215,31)" fg:x="197936577" fg:w="930086"/><text x="86.5449%" y="1631.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (930,086 samples, 0.41%)</title><rect x="86.2949%" y="1605" width="0.4055%" height="15" fill="rgb(221,52,54)" fg:x="197936577" fg:w="930086"/><text x="86.5449%" y="1615.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (930,086 samples, 0.41%)</title><rect x="86.2949%" y="1589" width="0.4055%" height="15" fill="rgb(252,129,43)" fg:x="197936577" fg:w="930086"/><text x="86.5449%" y="1599.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1557" width="0.3321%" height="15" fill="rgb(248,183,27)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1567.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1541" width="0.3321%" height="15" fill="rgb(250,0,22)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1551.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1525" width="0.3321%" height="15" fill="rgb(213,166,10)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1535.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1509" width="0.3321%" height="15" fill="rgb(207,163,36)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1519.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1493" width="0.3321%" height="15" fill="rgb(208,122,22)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1503.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1477" width="0.3321%" height="15" fill="rgb(207,104,49)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1487.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1461" width="0.3321%" height="15" fill="rgb(248,211,50)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1445" width="0.3321%" height="15" fill="rgb(217,13,45)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1429" width="0.3321%" height="15" fill="rgb(211,216,49)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1413" width="0.3321%" height="15" fill="rgb(221,58,53)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1423.50"></text></g><g><title>alloc::slice::hack::to_vec (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1397" width="0.3321%" height="15" fill="rgb(220,112,41)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1381" width="0.3321%" height="15" fill="rgb(236,38,28)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1365" width="0.3321%" height="15" fill="rgb(227,195,22)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1349" width="0.3321%" height="15" fill="rgb(214,55,33)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1333" width="0.3321%" height="15" fill="rgb(248,80,13)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1317" width="0.3321%" height="15" fill="rgb(238,52,6)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1301" width="0.3321%" height="15" fill="rgb(224,198,47)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1285" width="0.3321%" height="15" fill="rgb(233,171,20)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1269" width="0.3321%" height="15" fill="rgb(241,30,25)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1279.50"></text></g><g><title>malloc (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1253" width="0.3321%" height="15" fill="rgb(207,171,38)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1263.50"></text></g><g><title>[libc.so.6] (761,732 samples, 0.33%)</title><rect x="86.7004%" y="1237" width="0.3321%" height="15" fill="rgb(234,70,1)" fg:x="198866663" fg:w="761732"/><text x="86.9504%" y="1247.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,724,701 samples, 0.75%)</title><rect x="86.7004%" y="1589" width="0.7519%" height="15" fill="rgb(232,178,18)" fg:x="198866663" fg:w="1724701"/><text x="86.9504%" y="1599.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,724,701 samples, 0.75%)</title><rect x="86.7004%" y="1573" width="0.7519%" height="15" fill="rgb(241,78,40)" fg:x="198866663" fg:w="1724701"/><text x="86.9504%" y="1583.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1557" width="0.4198%" height="15" fill="rgb(222,35,25)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1567.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1541" width="0.4198%" height="15" fill="rgb(207,92,16)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1551.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1525" width="0.4198%" height="15" fill="rgb(216,59,51)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1535.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1509" width="0.4198%" height="15" fill="rgb(213,80,28)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1519.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1493" width="0.4198%" height="15" fill="rgb(220,93,7)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1503.50"></text></g><g><title>serde::de::SeqAccess::next_element (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1477" width="0.4198%" height="15" fill="rgb(225,24,44)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1487.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1461" width="0.4198%" height="15" fill="rgb(243,74,40)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1471.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1445" width="0.4198%" height="15" fill="rgb(228,39,7)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1455.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1429" width="0.4198%" height="15" fill="rgb(227,79,8)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1439.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1413" width="0.4198%" height="15" fill="rgb(236,58,11)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1423.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1397" width="0.4198%" height="15" fill="rgb(249,63,35)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1407.50"></text></g><g><title>serde::de::MapAccess::next_entry (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1381" width="0.4198%" height="15" fill="rgb(252,114,16)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1391.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1365" width="0.4198%" height="15" fill="rgb(254,151,24)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1375.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1349" width="0.4198%" height="15" fill="rgb(253,54,39)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1359.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1333" width="0.4198%" height="15" fill="rgb(243,25,45)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1343.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1317" width="0.4198%" height="15" fill="rgb(234,134,9)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1327.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1301" width="0.4198%" height="15" fill="rgb(227,166,31)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1311.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1285" width="0.4198%" height="15" fill="rgb(245,143,41)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1295.50"></text></g><g><title>serde::de::SeqAccess::next_element (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1269" width="0.4198%" height="15" fill="rgb(238,181,32)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1279.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1253" width="0.4198%" height="15" fill="rgb(224,113,18)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1237" width="0.4198%" height="15" fill="rgb(240,229,28)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1247.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1221" width="0.4198%" height="15" fill="rgb(250,185,3)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1231.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1205" width="0.4198%" height="15" fill="rgb(212,59,25)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1215.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1189" width="0.4198%" height="15" fill="rgb(221,87,20)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1199.50"></text></g><g><title>serde::de::MapAccess::next_entry (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1173" width="0.4198%" height="15" fill="rgb(213,74,28)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1183.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1157" width="0.4198%" height="15" fill="rgb(224,132,34)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1167.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1141" width="0.4198%" height="15" fill="rgb(222,101,24)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1151.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1125" width="0.4198%" height="15" fill="rgb(254,142,4)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1135.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1109" width="0.4198%" height="15" fill="rgb(230,229,49)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1119.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1093" width="0.4198%" height="15" fill="rgb(238,70,47)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1103.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1077" width="0.4198%" height="15" fill="rgb(231,160,17)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1087.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1061" width="0.4198%" height="15" fill="rgb(218,68,53)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1071.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1045" width="0.4198%" height="15" fill="rgb(236,111,10)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1029" width="0.4198%" height="15" fill="rgb(224,34,41)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (962,969 samples, 0.42%)</title><rect x="87.0325%" y="1013" width="0.4198%" height="15" fill="rgb(241,118,19)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (962,969 samples, 0.42%)</title><rect x="87.0325%" y="997" width="0.4198%" height="15" fill="rgb(238,129,25)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (962,969 samples, 0.42%)</title><rect x="87.0325%" y="981" width="0.4198%" height="15" fill="rgb(238,22,31)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (962,969 samples, 0.42%)</title><rect x="87.0325%" y="965" width="0.4198%" height="15" fill="rgb(222,174,48)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (962,969 samples, 0.42%)</title><rect x="87.0325%" y="949" width="0.4198%" height="15" fill="rgb(206,152,40)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (962,969 samples, 0.42%)</title><rect x="87.0325%" y="933" width="0.4198%" height="15" fill="rgb(218,99,54)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (962,969 samples, 0.42%)</title><rect x="87.0325%" y="917" width="0.4198%" height="15" fill="rgb(220,174,26)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (962,969 samples, 0.42%)</title><rect x="87.0325%" y="901" width="0.4198%" height="15" fill="rgb(245,116,9)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (962,969 samples, 0.42%)</title><rect x="87.0325%" y="885" width="0.4198%" height="15" fill="rgb(209,72,35)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (962,969 samples, 0.42%)</title><rect x="87.0325%" y="869" width="0.4198%" height="15" fill="rgb(226,126,21)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="879.50"></text></g><g><title>alloc::alloc::alloc (962,969 samples, 0.42%)</title><rect x="87.0325%" y="853" width="0.4198%" height="15" fill="rgb(227,192,1)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="863.50"></text></g><g><title>malloc (962,969 samples, 0.42%)</title><rect x="87.0325%" y="837" width="0.4198%" height="15" fill="rgb(237,180,29)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="847.50"></text></g><g><title>[libc.so.6] (962,969 samples, 0.42%)</title><rect x="87.0325%" y="821" width="0.4198%" height="15" fill="rgb(230,197,35)" fg:x="199628395" fg:w="962969"/><text x="87.2825%" y="831.50"></text></g><g><title>serde::de::MapAccess::next_entry (5,350,673 samples, 2.33%)</title><rect x="85.9881%" y="1797" width="2.3327%" height="15" fill="rgb(246,193,31)" fg:x="197232936" fg:w="5350673"/><text x="86.2381%" y="1807.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (5,350,673 samples, 2.33%)</title><rect x="85.9881%" y="1781" width="2.3327%" height="15" fill="rgb(241,36,4)" fg:x="197232936" fg:w="5350673"/><text x="86.2381%" y="1791.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,647,032 samples, 2.03%)</title><rect x="86.2949%" y="1765" width="2.0260%" height="15" fill="rgb(241,130,17)" fg:x="197936577" fg:w="4647032"/><text x="86.5449%" y="1775.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,647,032 samples, 2.03%)</title><rect x="86.2949%" y="1749" width="2.0260%" height="15" fill="rgb(206,137,32)" fg:x="197936577" fg:w="4647032"/><text x="86.5449%" y="1759.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,647,032 samples, 2.03%)</title><rect x="86.2949%" y="1733" width="2.0260%" height="15" fill="rgb(237,228,51)" fg:x="197936577" fg:w="4647032"/><text x="86.5449%" y="1743.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,647,032 samples, 2.03%)</title><rect x="86.2949%" y="1717" width="2.0260%" height="15" fill="rgb(243,6,42)" fg:x="197936577" fg:w="4647032"/><text x="86.5449%" y="1727.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,716,946 samples, 1.62%)</title><rect x="86.7004%" y="1701" width="1.6205%" height="15" fill="rgb(251,74,28)" fg:x="198866663" fg:w="3716946"/><text x="86.9504%" y="1711.50"></text></g><g><title>serde::de::SeqAccess::next_element (3,716,946 samples, 1.62%)</title><rect x="86.7004%" y="1685" width="1.6205%" height="15" fill="rgb(218,20,49)" fg:x="198866663" fg:w="3716946"/><text x="86.9504%" y="1695.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3,716,946 samples, 1.62%)</title><rect x="86.7004%" y="1669" width="1.6205%" height="15" fill="rgb(238,28,14)" fg:x="198866663" fg:w="3716946"/><text x="86.9504%" y="1679.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,716,946 samples, 1.62%)</title><rect x="86.7004%" y="1653" width="1.6205%" height="15" fill="rgb(229,40,46)" fg:x="198866663" fg:w="3716946"/><text x="86.9504%" y="1663.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,716,946 samples, 1.62%)</title><rect x="86.7004%" y="1637" width="1.6205%" height="15" fill="rgb(244,195,20)" fg:x="198866663" fg:w="3716946"/><text x="86.9504%" y="1647.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,716,946 samples, 1.62%)</title><rect x="86.7004%" y="1621" width="1.6205%" height="15" fill="rgb(253,56,35)" fg:x="198866663" fg:w="3716946"/><text x="86.9504%" y="1631.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,716,946 samples, 1.62%)</title><rect x="86.7004%" y="1605" width="1.6205%" height="15" fill="rgb(210,149,44)" fg:x="198866663" fg:w="3716946"/><text x="86.9504%" y="1615.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,992,245 samples, 0.87%)</title><rect x="87.4523%" y="1589" width="0.8686%" height="15" fill="rgb(240,135,12)" fg:x="200591364" fg:w="1992245"/><text x="87.7023%" y="1599.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,992,245 samples, 0.87%)</title><rect x="87.4523%" y="1573" width="0.8686%" height="15" fill="rgb(251,24,50)" fg:x="200591364" fg:w="1992245"/><text x="87.7023%" y="1583.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,992,245 samples, 0.87%)</title><rect x="87.4523%" y="1557" width="0.8686%" height="15" fill="rgb(243,200,47)" fg:x="200591364" fg:w="1992245"/><text x="87.7023%" y="1567.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,992,245 samples, 0.87%)</title><rect x="87.4523%" y="1541" width="0.8686%" height="15" fill="rgb(224,166,26)" fg:x="200591364" fg:w="1992245"/><text x="87.7023%" y="1551.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,992,245 samples, 0.87%)</title><rect x="87.4523%" y="1525" width="0.8686%" height="15" fill="rgb(233,0,47)" fg:x="200591364" fg:w="1992245"/><text x="87.7023%" y="1535.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,992,245 samples, 0.87%)</title><rect x="87.4523%" y="1509" width="0.8686%" height="15" fill="rgb(253,80,5)" fg:x="200591364" fg:w="1992245"/><text x="87.7023%" y="1519.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (1,002,585 samples, 0.44%)</title><rect x="87.8838%" y="1493" width="0.4371%" height="15" fill="rgb(214,133,25)" fg:x="201581024" fg:w="1002585"/><text x="88.1338%" y="1503.50"></text></g><g><title>serde::de::MapAccess::next_entry (13,569,957 samples, 5.92%)</title><rect x="82.7996%" y="2629" width="5.9161%" height="15" fill="rgb(209,27,14)" fg:x="189919207" fg:w="13569957"/><text x="83.0496%" y="2639.50">serde::d..</text></g><g><title>serde::de::MapAccess::next_entry_seed (13,569,957 samples, 5.92%)</title><rect x="82.7996%" y="2613" width="5.9161%" height="15" fill="rgb(219,102,51)" fg:x="189919207" fg:w="13569957"/><text x="83.0496%" y="2623.50">serde::d..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (13,569,957 samples, 5.92%)</title><rect x="82.7996%" y="2597" width="5.9161%" height="15" fill="rgb(237,18,16)" fg:x="189919207" fg:w="13569957"/><text x="83.0496%" y="2607.50">&lt;serde_j..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13,569,957 samples, 5.92%)</title><rect x="82.7996%" y="2581" width="5.9161%" height="15" fill="rgb(241,85,17)" fg:x="189919207" fg:w="13569957"/><text x="83.0496%" y="2591.50">&lt;core::m..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13,569,957 samples, 5.92%)</title><rect x="82.7996%" y="2565" width="5.9161%" height="15" fill="rgb(236,90,42)" fg:x="189919207" fg:w="13569957"/><text x="83.0496%" y="2575.50">serde_js..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13,569,957 samples, 5.92%)</title><rect x="82.7996%" y="2549" width="5.9161%" height="15" fill="rgb(249,57,21)" fg:x="189919207" fg:w="13569957"/><text x="83.0496%" y="2559.50">&lt;&amp;mut se..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12,478,886 samples, 5.44%)</title><rect x="83.2752%" y="2533" width="5.4405%" height="15" fill="rgb(243,12,36)" fg:x="191010278" fg:w="12478886"/><text x="83.5252%" y="2543.50">&lt;serde_..</text></g><g><title>serde::de::SeqAccess::next_element (12,478,886 samples, 5.44%)</title><rect x="83.2752%" y="2517" width="5.4405%" height="15" fill="rgb(253,128,47)" fg:x="191010278" fg:w="12478886"/><text x="83.5252%" y="2527.50">serde::..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12,478,886 samples, 5.44%)</title><rect x="83.2752%" y="2501" width="5.4405%" height="15" fill="rgb(207,33,20)" fg:x="191010278" fg:w="12478886"/><text x="83.5252%" y="2511.50">&lt;serde_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,478,886 samples, 5.44%)</title><rect x="83.2752%" y="2485" width="5.4405%" height="15" fill="rgb(233,215,35)" fg:x="191010278" fg:w="12478886"/><text x="83.5252%" y="2495.50">&lt;core::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,478,886 samples, 5.44%)</title><rect x="83.2752%" y="2469" width="5.4405%" height="15" fill="rgb(249,188,52)" fg:x="191010278" fg:w="12478886"/><text x="83.5252%" y="2479.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,478,886 samples, 5.44%)</title><rect x="83.2752%" y="2453" width="5.4405%" height="15" fill="rgb(225,12,32)" fg:x="191010278" fg:w="12478886"/><text x="83.5252%" y="2463.50">&lt;&amp;mut s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,478,886 samples, 5.44%)</title><rect x="83.2752%" y="2437" width="5.4405%" height="15" fill="rgb(247,98,14)" fg:x="191010278" fg:w="12478886"/><text x="83.5252%" y="2447.50">&lt;serde_..</text></g><g><title>serde::de::MapAccess::next_entry (12,478,886 samples, 5.44%)</title><rect x="83.2752%" y="2421" width="5.4405%" height="15" fill="rgb(247,219,48)" fg:x="191010278" fg:w="12478886"/><text x="83.5252%" y="2431.50">serde::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,478,886 samples, 5.44%)</title><rect x="83.2752%" y="2405" width="5.4405%" height="15" fill="rgb(253,60,48)" fg:x="191010278" fg:w="12478886"/><text x="83.5252%" y="2415.50">serde::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,478,886 samples, 5.44%)</title><rect x="83.2752%" y="2389" width="5.4405%" height="15" fill="rgb(245,15,52)" fg:x="191010278" fg:w="12478886"/><text x="83.5252%" y="2399.50">&lt;serde_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,478,886 samples, 5.44%)</title><rect x="83.2752%" y="2373" width="5.4405%" height="15" fill="rgb(220,133,28)" fg:x="191010278" fg:w="12478886"/><text x="83.5252%" y="2383.50">&lt;core::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,478,886 samples, 5.44%)</title><rect x="83.2752%" y="2357" width="5.4405%" height="15" fill="rgb(217,180,4)" fg:x="191010278" fg:w="12478886"/><text x="83.5252%" y="2367.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,478,886 samples, 5.44%)</title><rect x="83.2752%" y="2341" width="5.4405%" height="15" fill="rgb(251,24,1)" fg:x="191010278" fg:w="12478886"/><text x="83.5252%" y="2351.50">&lt;&amp;mut s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (10,890,640 samples, 4.75%)</title><rect x="83.9677%" y="2325" width="4.7480%" height="15" fill="rgb(212,185,49)" fg:x="192598524" fg:w="10890640"/><text x="84.2177%" y="2335.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (9,728,550 samples, 4.24%)</title><rect x="84.4743%" y="2309" width="4.2414%" height="15" fill="rgb(215,175,22)" fg:x="193760614" fg:w="9728550"/><text x="84.7243%" y="2319.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,728,550 samples, 4.24%)</title><rect x="84.4743%" y="2293" width="4.2414%" height="15" fill="rgb(250,205,14)" fg:x="193760614" fg:w="9728550"/><text x="84.7243%" y="2303.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,728,550 samples, 4.24%)</title><rect x="84.4743%" y="2277" width="4.2414%" height="15" fill="rgb(225,211,22)" fg:x="193760614" fg:w="9728550"/><text x="84.7243%" y="2287.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,728,550 samples, 4.24%)</title><rect x="84.4743%" y="2261" width="4.2414%" height="15" fill="rgb(251,179,42)" fg:x="193760614" fg:w="9728550"/><text x="84.7243%" y="2271.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,728,550 samples, 4.24%)</title><rect x="84.4743%" y="2245" width="4.2414%" height="15" fill="rgb(208,216,51)" fg:x="193760614" fg:w="9728550"/><text x="84.7243%" y="2255.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,728,550 samples, 4.24%)</title><rect x="84.4743%" y="2229" width="4.2414%" height="15" fill="rgb(235,36,11)" fg:x="193760614" fg:w="9728550"/><text x="84.7243%" y="2239.50">&lt;serd..</text></g><g><title>serde::de::MapAccess::next_entry (9,728,550 samples, 4.24%)</title><rect x="84.4743%" y="2213" width="4.2414%" height="15" fill="rgb(213,189,28)" fg:x="193760614" fg:w="9728550"/><text x="84.7243%" y="2223.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (9,728,550 samples, 4.24%)</title><rect x="84.4743%" y="2197" width="4.2414%" height="15" fill="rgb(227,203,42)" fg:x="193760614" fg:w="9728550"/><text x="84.7243%" y="2207.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (9,728,550 samples, 4.24%)</title><rect x="84.4743%" y="2181" width="4.2414%" height="15" fill="rgb(244,72,36)" fg:x="193760614" fg:w="9728550"/><text x="84.7243%" y="2191.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,728,550 samples, 4.24%)</title><rect x="84.4743%" y="2165" width="4.2414%" height="15" fill="rgb(213,53,17)" fg:x="193760614" fg:w="9728550"/><text x="84.7243%" y="2175.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,728,550 samples, 4.24%)</title><rect x="84.4743%" y="2149" width="4.2414%" height="15" fill="rgb(207,167,3)" fg:x="193760614" fg:w="9728550"/><text x="84.7243%" y="2159.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,728,550 samples, 4.24%)</title><rect x="84.4743%" y="2133" width="4.2414%" height="15" fill="rgb(216,98,30)" fg:x="193760614" fg:w="9728550"/><text x="84.7243%" y="2143.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (8,665,679 samples, 3.78%)</title><rect x="84.9377%" y="2117" width="3.7780%" height="15" fill="rgb(236,123,15)" fg:x="194823485" fg:w="8665679"/><text x="85.1877%" y="2127.50">&lt;ser..</text></g><g><title>serde::de::SeqAccess::next_element (8,665,679 samples, 3.78%)</title><rect x="84.9377%" y="2101" width="3.7780%" height="15" fill="rgb(248,81,50)" fg:x="194823485" fg:w="8665679"/><text x="85.1877%" y="2111.50">serd..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (8,665,679 samples, 3.78%)</title><rect x="84.9377%" y="2085" width="3.7780%" height="15" fill="rgb(214,120,4)" fg:x="194823485" fg:w="8665679"/><text x="85.1877%" y="2095.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8,665,679 samples, 3.78%)</title><rect x="84.9377%" y="2069" width="3.7780%" height="15" fill="rgb(208,179,34)" fg:x="194823485" fg:w="8665679"/><text x="85.1877%" y="2079.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8,665,679 samples, 3.78%)</title><rect x="84.9377%" y="2053" width="3.7780%" height="15" fill="rgb(227,140,7)" fg:x="194823485" fg:w="8665679"/><text x="85.1877%" y="2063.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8,665,679 samples, 3.78%)</title><rect x="84.9377%" y="2037" width="3.7780%" height="15" fill="rgb(214,22,6)" fg:x="194823485" fg:w="8665679"/><text x="85.1877%" y="2047.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8,665,679 samples, 3.78%)</title><rect x="84.9377%" y="2021" width="3.7780%" height="15" fill="rgb(207,137,27)" fg:x="194823485" fg:w="8665679"/><text x="85.1877%" y="2031.50">&lt;ser..</text></g><g><title>serde::de::MapAccess::next_entry (8,665,679 samples, 3.78%)</title><rect x="84.9377%" y="2005" width="3.7780%" height="15" fill="rgb(210,8,46)" fg:x="194823485" fg:w="8665679"/><text x="85.1877%" y="2015.50">serd..</text></g><g><title>serde::de::MapAccess::next_entry_seed (8,665,679 samples, 3.78%)</title><rect x="84.9377%" y="1989" width="3.7780%" height="15" fill="rgb(240,16,54)" fg:x="194823485" fg:w="8665679"/><text x="85.1877%" y="1999.50">serd..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (8,665,679 samples, 3.78%)</title><rect x="84.9377%" y="1973" width="3.7780%" height="15" fill="rgb(211,209,29)" fg:x="194823485" fg:w="8665679"/><text x="85.1877%" y="1983.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8,665,679 samples, 3.78%)</title><rect x="84.9377%" y="1957" width="3.7780%" height="15" fill="rgb(226,228,24)" fg:x="194823485" fg:w="8665679"/><text x="85.1877%" y="1967.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8,665,679 samples, 3.78%)</title><rect x="84.9377%" y="1941" width="3.7780%" height="15" fill="rgb(222,84,9)" fg:x="194823485" fg:w="8665679"/><text x="85.1877%" y="1951.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8,665,679 samples, 3.78%)</title><rect x="84.9377%" y="1925" width="3.7780%" height="15" fill="rgb(234,203,30)" fg:x="194823485" fg:w="8665679"/><text x="85.1877%" y="1935.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,397,191 samples, 3.22%)</title><rect x="85.4907%" y="1909" width="3.2250%" height="15" fill="rgb(238,109,14)" fg:x="196091973" fg:w="7397191"/><text x="85.7407%" y="1919.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (7,397,191 samples, 3.22%)</title><rect x="85.4907%" y="1893" width="3.2250%" height="15" fill="rgb(233,206,34)" fg:x="196091973" fg:w="7397191"/><text x="85.7407%" y="1903.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,397,191 samples, 3.22%)</title><rect x="85.4907%" y="1877" width="3.2250%" height="15" fill="rgb(220,167,47)" fg:x="196091973" fg:w="7397191"/><text x="85.7407%" y="1887.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,397,191 samples, 3.22%)</title><rect x="85.4907%" y="1861" width="3.2250%" height="15" fill="rgb(238,105,10)" fg:x="196091973" fg:w="7397191"/><text x="85.7407%" y="1871.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,397,191 samples, 3.22%)</title><rect x="85.4907%" y="1845" width="3.2250%" height="15" fill="rgb(213,227,17)" fg:x="196091973" fg:w="7397191"/><text x="85.7407%" y="1855.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,397,191 samples, 3.22%)</title><rect x="85.4907%" y="1829" width="3.2250%" height="15" fill="rgb(217,132,38)" fg:x="196091973" fg:w="7397191"/><text x="85.7407%" y="1839.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,397,191 samples, 3.22%)</title><rect x="85.4907%" y="1813" width="3.2250%" height="15" fill="rgb(242,146,4)" fg:x="196091973" fg:w="7397191"/><text x="85.7407%" y="1823.50">&lt;se..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (905,555 samples, 0.39%)</title><rect x="88.3209%" y="1797" width="0.3948%" height="15" fill="rgb(212,61,9)" fg:x="202583609" fg:w="905555"/><text x="88.5709%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (905,555 samples, 0.39%)</title><rect x="88.3209%" y="1781" width="0.3948%" height="15" fill="rgb(247,126,22)" fg:x="202583609" fg:w="905555"/><text x="88.5709%" y="1791.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (905,555 samples, 0.39%)</title><rect x="88.3209%" y="1765" width="0.3948%" height="15" fill="rgb(220,196,2)" fg:x="202583609" fg:w="905555"/><text x="88.5709%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (905,555 samples, 0.39%)</title><rect x="88.3209%" y="1749" width="0.3948%" height="15" fill="rgb(208,46,4)" fg:x="202583609" fg:w="905555"/><text x="88.5709%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (927,730 samples, 0.40%)</title><rect x="88.7157%" y="2597" width="0.4045%" height="15" fill="rgb(252,104,46)" fg:x="203489164" fg:w="927730"/><text x="88.9657%" y="2607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (927,730 samples, 0.40%)</title><rect x="88.7157%" y="2581" width="0.4045%" height="15" fill="rgb(237,152,48)" fg:x="203489164" fg:w="927730"/><text x="88.9657%" y="2591.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (927,730 samples, 0.40%)</title><rect x="88.7157%" y="2565" width="0.4045%" height="15" fill="rgb(221,59,37)" fg:x="203489164" fg:w="927730"/><text x="88.9657%" y="2575.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (927,730 samples, 0.40%)</title><rect x="88.7157%" y="2549" width="0.4045%" height="15" fill="rgb(209,202,51)" fg:x="203489164" fg:w="927730"/><text x="88.9657%" y="2559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16,671,453 samples, 7.27%)</title><rect x="82.2859%" y="2645" width="7.2683%" height="15" fill="rgb(228,81,30)" fg:x="188741086" fg:w="16671453"/><text x="82.5359%" y="2655.50">&lt;serde_jso..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,923,375 samples, 0.84%)</title><rect x="88.7157%" y="2629" width="0.8385%" height="15" fill="rgb(227,42,39)" fg:x="203489164" fg:w="1923375"/><text x="88.9657%" y="2639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,923,375 samples, 0.84%)</title><rect x="88.7157%" y="2613" width="0.8385%" height="15" fill="rgb(221,26,2)" fg:x="203489164" fg:w="1923375"/><text x="88.9657%" y="2623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (995,645 samples, 0.43%)</title><rect x="89.1201%" y="2597" width="0.4341%" height="15" fill="rgb(254,61,31)" fg:x="204416894" fg:w="995645"/><text x="89.3701%" y="2607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (995,645 samples, 0.43%)</title><rect x="89.1201%" y="2581" width="0.4341%" height="15" fill="rgb(222,173,38)" fg:x="204416894" fg:w="995645"/><text x="89.3701%" y="2591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,152,780 samples, 0.50%)</title><rect x="89.5542%" y="2629" width="0.5026%" height="15" fill="rgb(218,50,12)" fg:x="205412539" fg:w="1152780"/><text x="89.8042%" y="2639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,152,780 samples, 0.50%)</title><rect x="89.5542%" y="2613" width="0.5026%" height="15" fill="rgb(223,88,40)" fg:x="205412539" fg:w="1152780"/><text x="89.8042%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1,152,780 samples, 0.50%)</title><rect x="89.5542%" y="2597" width="0.5026%" height="15" fill="rgb(237,54,19)" fg:x="205412539" fg:w="1152780"/><text x="89.8042%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (1,152,780 samples, 0.50%)</title><rect x="89.5542%" y="2581" width="0.5026%" height="15" fill="rgb(251,129,25)" fg:x="205412539" fg:w="1152780"/><text x="89.8042%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (1,152,780 samples, 0.50%)</title><rect x="89.5542%" y="2565" width="0.5026%" height="15" fill="rgb(238,97,19)" fg:x="205412539" fg:w="1152780"/><text x="89.8042%" y="2575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,102,597 samples, 0.92%)</title><rect x="89.5542%" y="2645" width="0.9167%" height="15" fill="rgb(240,169,18)" fg:x="205412539" fg:w="2102597"/><text x="89.8042%" y="2655.50"></text></g><g><title>serde::de::SeqAccess::next_element (949,817 samples, 0.41%)</title><rect x="90.0568%" y="2629" width="0.4141%" height="15" fill="rgb(230,187,49)" fg:x="206565319" fg:w="949817"/><text x="90.3068%" y="2639.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (949,817 samples, 0.41%)</title><rect x="90.0568%" y="2613" width="0.4141%" height="15" fill="rgb(209,44,26)" fg:x="206565319" fg:w="949817"/><text x="90.3068%" y="2623.50"></text></g><g><title>benchmark::parse_web_layout_trace (21,945,515 samples, 9.57%)</title><rect x="81.3736%" y="2837" width="9.5676%" height="15" fill="rgb(244,0,6)" fg:x="186648462" fg:w="21945515"/><text x="81.6236%" y="2847.50">benchmark::par..</text></g><g><title>serde_json::de::from_str (19,852,891 samples, 8.66%)</title><rect x="82.2859%" y="2821" width="8.6553%" height="15" fill="rgb(248,18,21)" fg:x="188741086" fg:w="19852891"/><text x="82.5359%" y="2831.50">serde_json::..</text></g><g><title>serde_json::de::from_trait (19,852,891 samples, 8.66%)</title><rect x="82.2859%" y="2805" width="8.6553%" height="15" fill="rgb(245,180,19)" fg:x="188741086" fg:w="19852891"/><text x="82.5359%" y="2815.50">serde_json::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,852,891 samples, 8.66%)</title><rect x="82.2859%" y="2789" width="8.6553%" height="15" fill="rgb(252,118,36)" fg:x="188741086" fg:w="19852891"/><text x="82.5359%" y="2799.50">serde_json::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,852,891 samples, 8.66%)</title><rect x="82.2859%" y="2773" width="8.6553%" height="15" fill="rgb(210,224,19)" fg:x="188741086" fg:w="19852891"/><text x="82.5359%" y="2783.50">&lt;&amp;mut serde_..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19,852,891 samples, 8.66%)</title><rect x="82.2859%" y="2757" width="8.6553%" height="15" fill="rgb(218,30,24)" fg:x="188741086" fg:w="19852891"/><text x="82.5359%" y="2767.50">&lt;serde_json:..</text></g><g><title>serde::de::MapAccess::next_entry (19,852,891 samples, 8.66%)</title><rect x="82.2859%" y="2741" width="8.6553%" height="15" fill="rgb(219,75,50)" fg:x="188741086" fg:w="19852891"/><text x="82.5359%" y="2751.50">serde::de::M..</text></g><g><title>serde::de::MapAccess::next_entry_seed (19,852,891 samples, 8.66%)</title><rect x="82.2859%" y="2725" width="8.6553%" height="15" fill="rgb(234,72,50)" fg:x="188741086" fg:w="19852891"/><text x="82.5359%" y="2735.50">serde::de::M..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (19,852,891 samples, 8.66%)</title><rect x="82.2859%" y="2709" width="8.6553%" height="15" fill="rgb(219,100,48)" fg:x="188741086" fg:w="19852891"/><text x="82.5359%" y="2719.50">&lt;serde_json:..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19,852,891 samples, 8.66%)</title><rect x="82.2859%" y="2693" width="8.6553%" height="15" fill="rgb(253,5,41)" fg:x="188741086" fg:w="19852891"/><text x="82.5359%" y="2703.50">&lt;core::marke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,852,891 samples, 8.66%)</title><rect x="82.2859%" y="2677" width="8.6553%" height="15" fill="rgb(247,181,11)" fg:x="188741086" fg:w="19852891"/><text x="82.5359%" y="2687.50">serde_json::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,852,891 samples, 8.66%)</title><rect x="82.2859%" y="2661" width="8.6553%" height="15" fill="rgb(222,223,25)" fg:x="188741086" fg:w="19852891"/><text x="82.5359%" y="2671.50">&lt;&amp;mut serde_..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2645" width="0.4703%" height="15" fill="rgb(214,198,28)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2629" width="0.4703%" height="15" fill="rgb(230,46,43)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2639.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2613" width="0.4703%" height="15" fill="rgb(233,65,53)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2623.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2597" width="0.4703%" height="15" fill="rgb(221,121,27)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2607.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2581" width="0.4703%" height="15" fill="rgb(247,70,47)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2565" width="0.4703%" height="15" fill="rgb(228,85,35)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2549" width="0.4703%" height="15" fill="rgb(209,50,18)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2559.50"></text></g><g><title>alloc::slice::hack::to_vec (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2533" width="0.4703%" height="15" fill="rgb(250,19,35)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2517" width="0.4703%" height="15" fill="rgb(253,107,29)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2501" width="0.4703%" height="15" fill="rgb(252,179,29)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2485" width="0.4703%" height="15" fill="rgb(238,194,6)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2469" width="0.4703%" height="15" fill="rgb(238,164,29)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2453" width="0.4703%" height="15" fill="rgb(224,25,9)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2437" width="0.4703%" height="15" fill="rgb(244,153,23)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2421" width="0.4703%" height="15" fill="rgb(212,203,14)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2431.50"></text></g><g><title>alloc::alloc::alloc (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2405" width="0.4703%" height="15" fill="rgb(220,164,20)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2415.50"></text></g><g><title>malloc (1,078,841 samples, 0.47%)</title><rect x="90.4709%" y="2389" width="0.4703%" height="15" fill="rgb(222,203,48)" fg:x="207515136" fg:w="1078841"/><text x="90.7209%" y="2399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,478,041 samples, 0.64%)</title><rect x="90.9412%" y="2485" width="0.6444%" height="15" fill="rgb(215,159,22)" fg:x="208593977" fg:w="1478041"/><text x="91.1912%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="1205" width="0.6544%" height="15" fill="rgb(216,183,47)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="1189" width="0.6544%" height="15" fill="rgb(229,195,25)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="1173" width="0.6544%" height="15" fill="rgb(224,132,51)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="1157" width="0.6544%" height="15" fill="rgb(240,63,7)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="1141" width="0.6544%" height="15" fill="rgb(249,182,41)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="1125" width="0.6544%" height="15" fill="rgb(243,47,26)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="1109" width="0.6544%" height="15" fill="rgb(233,48,2)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="1119.50"></text></g><g><title>core::mem::drop (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="1093" width="0.6544%" height="15" fill="rgb(244,165,34)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="1077" width="0.6544%" height="15" fill="rgb(207,89,7)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="1061" width="0.6544%" height="15" fill="rgb(244,117,36)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="1045" width="0.6544%" height="15" fill="rgb(226,144,34)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="1055.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="1029" width="0.6544%" height="15" fill="rgb(213,23,19)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="1013" width="0.6544%" height="15" fill="rgb(217,75,12)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="997" width="0.6544%" height="15" fill="rgb(224,159,17)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="981" width="0.6544%" height="15" fill="rgb(217,118,1)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="965" width="0.6544%" height="15" fill="rgb(232,180,48)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="949" width="0.6544%" height="15" fill="rgb(230,27,33)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="933" width="0.6544%" height="15" fill="rgb(205,31,21)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="917" width="0.6544%" height="15" fill="rgb(253,59,4)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="927.50"></text></g><g><title>cfree (1,501,124 samples, 0.65%)</title><rect x="91.5856%" y="901" width="0.6544%" height="15" fill="rgb(224,201,9)" fg:x="210072018" fg:w="1501124"/><text x="91.8356%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2821" width="1.9476%" height="15" fill="rgb(229,206,30)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2831.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2805" width="1.9476%" height="15" fill="rgb(212,67,47)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2815.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2789" width="1.9476%" height="15" fill="rgb(211,96,50)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2799.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2773" width="1.9476%" height="15" fill="rgb(252,114,18)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2783.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2757" width="1.9476%" height="15" fill="rgb(223,58,37)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2767.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2741" width="1.9476%" height="15" fill="rgb(237,70,4)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2751.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2725" width="1.9476%" height="15" fill="rgb(244,85,46)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2735.50">&lt;..</text></g><g><title>core::mem::drop (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2709" width="1.9476%" height="15" fill="rgb(223,39,52)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2693" width="1.9476%" height="15" fill="rgb(218,200,14)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2703.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2677" width="1.9476%" height="15" fill="rgb(208,171,16)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2687.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2661" width="1.9476%" height="15" fill="rgb(234,200,18)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2671.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2645" width="1.9476%" height="15" fill="rgb(228,45,11)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2655.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2629" width="1.9476%" height="15" fill="rgb(237,182,11)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2639.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2613" width="1.9476%" height="15" fill="rgb(241,175,49)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2623.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2597" width="1.9476%" height="15" fill="rgb(247,38,35)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2607.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2581" width="1.9476%" height="15" fill="rgb(228,39,49)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2591.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2565" width="1.9476%" height="15" fill="rgb(226,101,26)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2575.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2549" width="1.9476%" height="15" fill="rgb(206,141,19)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2559.50">&lt;..</text></g><g><title>core::mem::drop (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2533" width="1.9476%" height="15" fill="rgb(211,200,13)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2543.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2517" width="1.9476%" height="15" fill="rgb(241,121,6)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2527.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,467,307 samples, 1.95%)</title><rect x="90.9412%" y="2501" width="1.9476%" height="15" fill="rgb(234,221,29)" fg:x="208593977" fg:w="4467307"/><text x="91.1912%" y="2511.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2485" width="1.3032%" height="15" fill="rgb(229,136,5)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2469" width="1.3032%" height="15" fill="rgb(238,36,11)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2479.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2453" width="1.3032%" height="15" fill="rgb(251,55,41)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2437" width="1.3032%" height="15" fill="rgb(242,34,40)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2421" width="1.3032%" height="15" fill="rgb(215,42,17)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2405" width="1.3032%" height="15" fill="rgb(207,44,46)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2389" width="1.3032%" height="15" fill="rgb(211,206,28)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2373" width="1.3032%" height="15" fill="rgb(237,167,16)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2357" width="1.3032%" height="15" fill="rgb(233,66,6)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2341" width="1.3032%" height="15" fill="rgb(246,123,29)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2325" width="1.3032%" height="15" fill="rgb(209,62,40)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2309" width="1.3032%" height="15" fill="rgb(218,4,25)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2319.50"></text></g><g><title>core::mem::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2293" width="1.3032%" height="15" fill="rgb(253,91,49)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2277" width="1.3032%" height="15" fill="rgb(228,155,29)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2261" width="1.3032%" height="15" fill="rgb(243,57,37)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2271.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2245" width="1.3032%" height="15" fill="rgb(244,167,17)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2229" width="1.3032%" height="15" fill="rgb(207,181,38)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2239.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2213" width="1.3032%" height="15" fill="rgb(211,8,23)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2223.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2197" width="1.3032%" height="15" fill="rgb(235,11,44)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2181" width="1.3032%" height="15" fill="rgb(248,18,52)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2165" width="1.3032%" height="15" fill="rgb(208,4,7)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2149" width="1.3032%" height="15" fill="rgb(240,17,39)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2133" width="1.3032%" height="15" fill="rgb(207,170,3)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2117" width="1.3032%" height="15" fill="rgb(236,100,52)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2101" width="1.3032%" height="15" fill="rgb(246,78,51)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2085" width="1.3032%" height="15" fill="rgb(211,17,15)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2095.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2069" width="1.3032%" height="15" fill="rgb(209,59,46)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2079.50"></text></g><g><title>core::mem::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2053" width="1.3032%" height="15" fill="rgb(210,92,25)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2037" width="1.3032%" height="15" fill="rgb(238,174,52)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2047.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2021" width="1.3032%" height="15" fill="rgb(230,73,7)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2031.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="2005" width="1.3032%" height="15" fill="rgb(243,124,40)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1989" width="1.3032%" height="15" fill="rgb(244,170,11)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1999.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1973" width="1.3032%" height="15" fill="rgb(207,114,54)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1983.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1957" width="1.3032%" height="15" fill="rgb(205,42,20)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1941" width="1.3032%" height="15" fill="rgb(230,30,28)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1925" width="1.3032%" height="15" fill="rgb(205,73,54)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1909" width="1.3032%" height="15" fill="rgb(254,227,23)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1893" width="1.3032%" height="15" fill="rgb(228,202,34)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1877" width="1.3032%" height="15" fill="rgb(222,225,37)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1861" width="1.3032%" height="15" fill="rgb(221,14,54)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1845" width="1.3032%" height="15" fill="rgb(254,102,2)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1829" width="1.3032%" height="15" fill="rgb(232,104,17)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1839.50"></text></g><g><title>core::mem::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1813" width="1.3032%" height="15" fill="rgb(250,220,14)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1797" width="1.3032%" height="15" fill="rgb(241,158,9)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1781" width="1.3032%" height="15" fill="rgb(246,9,43)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1791.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1765" width="1.3032%" height="15" fill="rgb(206,73,33)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1749" width="1.3032%" height="15" fill="rgb(222,79,8)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1759.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1733" width="1.3032%" height="15" fill="rgb(234,8,54)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1743.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1717" width="1.3032%" height="15" fill="rgb(209,134,38)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1701" width="1.3032%" height="15" fill="rgb(230,127,29)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1685" width="1.3032%" height="15" fill="rgb(242,44,41)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1669" width="1.3032%" height="15" fill="rgb(222,56,43)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1653" width="1.3032%" height="15" fill="rgb(238,39,47)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1637" width="1.3032%" height="15" fill="rgb(226,79,43)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1621" width="1.3032%" height="15" fill="rgb(242,105,53)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1605" width="1.3032%" height="15" fill="rgb(251,132,46)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1589" width="1.3032%" height="15" fill="rgb(231,77,14)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1599.50"></text></g><g><title>core::mem::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1573" width="1.3032%" height="15" fill="rgb(240,135,9)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1557" width="1.3032%" height="15" fill="rgb(248,109,14)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1541" width="1.3032%" height="15" fill="rgb(227,146,52)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1525" width="1.3032%" height="15" fill="rgb(232,54,3)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1509" width="1.3032%" height="15" fill="rgb(229,201,43)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1519.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1493" width="1.3032%" height="15" fill="rgb(252,161,33)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1503.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1477" width="1.3032%" height="15" fill="rgb(226,146,40)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1461" width="1.3032%" height="15" fill="rgb(219,47,25)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1445" width="1.3032%" height="15" fill="rgb(250,135,13)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1429" width="1.3032%" height="15" fill="rgb(219,229,18)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1413" width="1.3032%" height="15" fill="rgb(217,152,27)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1397" width="1.3032%" height="15" fill="rgb(225,71,47)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1381" width="1.3032%" height="15" fill="rgb(220,139,14)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1365" width="1.3032%" height="15" fill="rgb(247,54,32)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1375.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1349" width="1.3032%" height="15" fill="rgb(252,131,39)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1359.50"></text></g><g><title>core::mem::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1333" width="1.3032%" height="15" fill="rgb(210,108,39)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1317" width="1.3032%" height="15" fill="rgb(205,23,29)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1327.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1301" width="1.3032%" height="15" fill="rgb(246,139,46)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1311.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1285" width="1.3032%" height="15" fill="rgb(250,81,26)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1269" width="1.3032%" height="15" fill="rgb(214,104,7)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1279.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1253" width="1.3032%" height="15" fill="rgb(233,189,8)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1263.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1237" width="1.3032%" height="15" fill="rgb(228,141,17)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,266 samples, 1.30%)</title><rect x="91.5856%" y="1221" width="1.3032%" height="15" fill="rgb(247,157,1)" fg:x="210072018" fg:w="2989266"/><text x="91.8356%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,488,142 samples, 0.65%)</title><rect x="92.2401%" y="1205" width="0.6488%" height="15" fill="rgb(249,225,5)" fg:x="211573142" fg:w="1488142"/><text x="92.4901%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,488,142 samples, 0.65%)</title><rect x="92.2401%" y="1189" width="0.6488%" height="15" fill="rgb(242,55,13)" fg:x="211573142" fg:w="1488142"/><text x="92.4901%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,488,142 samples, 0.65%)</title><rect x="92.2401%" y="1173" width="0.6488%" height="15" fill="rgb(230,49,50)" fg:x="211573142" fg:w="1488142"/><text x="92.4901%" y="1183.50"></text></g><g><title>core::mem::drop (1,488,142 samples, 0.65%)</title><rect x="92.2401%" y="1157" width="0.6488%" height="15" fill="rgb(241,111,38)" fg:x="211573142" fg:w="1488142"/><text x="92.4901%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,488,142 samples, 0.65%)</title><rect x="92.2401%" y="1141" width="0.6488%" height="15" fill="rgb(252,155,4)" fg:x="211573142" fg:w="1488142"/><text x="92.4901%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,488,142 samples, 0.65%)</title><rect x="92.2401%" y="1125" width="0.6488%" height="15" fill="rgb(212,69,32)" fg:x="211573142" fg:w="1488142"/><text x="92.4901%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,488,142 samples, 0.65%)</title><rect x="92.2401%" y="1109" width="0.6488%" height="15" fill="rgb(243,107,47)" fg:x="211573142" fg:w="1488142"/><text x="92.4901%" y="1119.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,488,142 samples, 0.65%)</title><rect x="92.2401%" y="1093" width="0.6488%" height="15" fill="rgb(247,130,12)" fg:x="211573142" fg:w="1488142"/><text x="92.4901%" y="1103.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,488,142 samples, 0.65%)</title><rect x="92.2401%" y="1077" width="0.6488%" height="15" fill="rgb(233,74,16)" fg:x="211573142" fg:w="1488142"/><text x="92.4901%" y="1087.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,488,142 samples, 0.65%)</title><rect x="92.2401%" y="1061" width="0.6488%" height="15" fill="rgb(208,58,18)" fg:x="211573142" fg:w="1488142"/><text x="92.4901%" y="1071.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,488,142 samples, 0.65%)</title><rect x="92.2401%" y="1045" width="0.6488%" height="15" fill="rgb(242,225,1)" fg:x="211573142" fg:w="1488142"/><text x="92.4901%" y="1055.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,488,142 samples, 0.65%)</title><rect x="92.2401%" y="1029" width="0.6488%" height="15" fill="rgb(249,39,40)" fg:x="211573142" fg:w="1488142"/><text x="92.4901%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,488,142 samples, 0.65%)</title><rect x="92.2401%" y="1013" width="0.6488%" height="15" fill="rgb(207,72,44)" fg:x="211573142" fg:w="1488142"/><text x="92.4901%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,488,142 samples, 0.65%)</title><rect x="92.2401%" y="997" width="0.6488%" height="15" fill="rgb(215,193,12)" fg:x="211573142" fg:w="1488142"/><text x="92.4901%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (9,070,399 samples, 3.95%)</title><rect x="90.9412%" y="2837" width="3.9544%" height="15" fill="rgb(248,41,39)" fg:x="208593977" fg:w="9070399"/><text x="91.1912%" y="2847.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (4,603,092 samples, 2.01%)</title><rect x="92.8889%" y="2821" width="2.0068%" height="15" fill="rgb(253,85,4)" fg:x="213061284" fg:w="4603092"/><text x="93.1389%" y="2831.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,603,092 samples, 2.01%)</title><rect x="92.8889%" y="2805" width="2.0068%" height="15" fill="rgb(243,70,31)" fg:x="213061284" fg:w="4603092"/><text x="93.1389%" y="2815.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,603,092 samples, 2.01%)</title><rect x="92.8889%" y="2789" width="2.0068%" height="15" fill="rgb(253,195,26)" fg:x="213061284" fg:w="4603092"/><text x="93.1389%" y="2799.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,603,092 samples, 2.01%)</title><rect x="92.8889%" y="2773" width="2.0068%" height="15" fill="rgb(243,42,11)" fg:x="213061284" fg:w="4603092"/><text x="93.1389%" y="2783.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (4,603,092 samples, 2.01%)</title><rect x="92.8889%" y="2757" width="2.0068%" height="15" fill="rgb(239,66,17)" fg:x="213061284" fg:w="4603092"/><text x="93.1389%" y="2767.50">a..</text></g><g><title>cfree (4,603,092 samples, 2.01%)</title><rect x="92.8889%" y="2741" width="2.0068%" height="15" fill="rgb(217,132,21)" fg:x="213061284" fg:w="4603092"/><text x="93.1389%" y="2751.50">c..</text></g><g><title>[libc.so.6] (4,603,092 samples, 2.01%)</title><rect x="92.8889%" y="2725" width="2.0068%" height="15" fill="rgb(252,202,21)" fg:x="213061284" fg:w="4603092"/><text x="93.1389%" y="2735.50">[..</text></g><g><title>[libc.so.6] (4,603,092 samples, 2.01%)</title><rect x="92.8889%" y="2709" width="2.0068%" height="15" fill="rgb(233,98,36)" fg:x="213061284" fg:w="4603092"/><text x="93.1389%" y="2719.50">[..</text></g><g><title>[libc.so.6] (1,527,901 samples, 0.67%)</title><rect x="94.2296%" y="2693" width="0.6661%" height="15" fill="rgb(216,153,54)" fg:x="216136475" fg:w="1527901"/><text x="94.4796%" y="2703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,550,137 samples, 0.68%)</title><rect x="94.8957%" y="2485" width="0.6758%" height="15" fill="rgb(250,99,7)" fg:x="217664376" fg:w="1550137"/><text x="95.1457%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,550,137 samples, 0.68%)</title><rect x="94.8957%" y="2469" width="0.6758%" height="15" fill="rgb(207,56,50)" fg:x="217664376" fg:w="1550137"/><text x="95.1457%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,550,137 samples, 0.68%)</title><rect x="94.8957%" y="2453" width="0.6758%" height="15" fill="rgb(244,61,34)" fg:x="217664376" fg:w="1550137"/><text x="95.1457%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,550,137 samples, 0.68%)</title><rect x="94.8957%" y="2437" width="0.6758%" height="15" fill="rgb(241,50,38)" fg:x="217664376" fg:w="1550137"/><text x="95.1457%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,550,137 samples, 0.68%)</title><rect x="94.8957%" y="2421" width="0.6758%" height="15" fill="rgb(212,166,30)" fg:x="217664376" fg:w="1550137"/><text x="95.1457%" y="2431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,550,137 samples, 0.68%)</title><rect x="94.8957%" y="2405" width="0.6758%" height="15" fill="rgb(249,127,32)" fg:x="217664376" fg:w="1550137"/><text x="95.1457%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,550,137 samples, 0.68%)</title><rect x="94.8957%" y="2389" width="0.6758%" height="15" fill="rgb(209,103,0)" fg:x="217664376" fg:w="1550137"/><text x="95.1457%" y="2399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,550,137 samples, 0.68%)</title><rect x="94.8957%" y="2373" width="0.6758%" height="15" fill="rgb(238,209,51)" fg:x="217664376" fg:w="1550137"/><text x="95.1457%" y="2383.50"></text></g><g><title>alloc::alloc::dealloc (1,550,137 samples, 0.68%)</title><rect x="94.8957%" y="2357" width="0.6758%" height="15" fill="rgb(237,56,23)" fg:x="217664376" fg:w="1550137"/><text x="95.1457%" y="2367.50"></text></g><g><title>cfree (1,550,137 samples, 0.68%)</title><rect x="94.8957%" y="2341" width="0.6758%" height="15" fill="rgb(215,153,46)" fg:x="217664376" fg:w="1550137"/><text x="95.1457%" y="2351.50"></text></g><g><title>[libc.so.6] (1,550,137 samples, 0.68%)</title><rect x="94.8957%" y="2325" width="0.6758%" height="15" fill="rgb(224,49,31)" fg:x="217664376" fg:w="1550137"/><text x="95.1457%" y="2335.50"></text></g><g><title>[libc.so.6] (1,550,137 samples, 0.68%)</title><rect x="94.8957%" y="2309" width="0.6758%" height="15" fill="rgb(250,18,42)" fg:x="217664376" fg:w="1550137"/><text x="95.1457%" y="2319.50"></text></g><g><title>_start (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="3125" width="88.3804%" height="15" fill="rgb(215,176,39)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="3135.50">_start</text></g><g><title>__libc_start_main (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="3109" width="88.3804%" height="15" fill="rgb(223,77,29)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="3119.50">__libc_start_main</text></g><g><title>[libc.so.6] (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="3093" width="88.3804%" height="15" fill="rgb(234,94,52)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="3103.50">[libc.so.6]</text></g><g><title>main (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="3077" width="88.3804%" height="15" fill="rgb(220,154,50)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="3087.50">main</text></g><g><title>std::rt::lang_start_internal (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="3061" width="88.3804%" height="15" fill="rgb(212,11,10)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="3071.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="3045" width="88.3804%" height="15" fill="rgb(205,166,19)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="3055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="3029" width="88.3804%" height="15" fill="rgb(244,198,16)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="3039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="3013" width="88.3804%" height="15" fill="rgb(219,69,12)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="3023.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="2997" width="88.3804%" height="15" fill="rgb(245,30,7)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="3007.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="2981" width="88.3804%" height="15" fill="rgb(218,221,48)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="2991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="2965" width="88.3804%" height="15" fill="rgb(216,66,15)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="2975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="2949" width="88.3804%" height="15" fill="rgb(226,122,50)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="2959.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="2933" width="88.3804%" height="15" fill="rgb(239,156,16)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="2943.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="2917" width="88.3804%" height="15" fill="rgb(224,27,38)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="2927.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="2901" width="88.3804%" height="15" fill="rgb(224,39,27)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="2911.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="2885" width="88.3804%" height="15" fill="rgb(215,92,29)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="2895.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="2869" width="88.3804%" height="15" fill="rgb(207,159,16)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="2879.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (202,720,089 samples, 88.38%)</title><rect x="7.8551%" y="2853" width="88.3804%" height="15" fill="rgb(238,163,47)" fg:x="18017466" fg:w="202720089"/><text x="8.1051%" y="2863.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2837" width="1.3398%" height="15" fill="rgb(219,91,49)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2821" width="1.3398%" height="15" fill="rgb(227,167,31)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2805" width="1.3398%" height="15" fill="rgb(234,80,54)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2789" width="1.3398%" height="15" fill="rgb(212,114,2)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2773" width="1.3398%" height="15" fill="rgb(234,50,24)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2757" width="1.3398%" height="15" fill="rgb(221,68,8)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2741" width="1.3398%" height="15" fill="rgb(254,180,31)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2725" width="1.3398%" height="15" fill="rgb(247,130,50)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2709" width="1.3398%" height="15" fill="rgb(211,109,4)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2693" width="1.3398%" height="15" fill="rgb(238,50,21)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2677" width="1.3398%" height="15" fill="rgb(225,57,45)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2661" width="1.3398%" height="15" fill="rgb(209,196,50)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2645" width="1.3398%" height="15" fill="rgb(242,140,13)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2629" width="1.3398%" height="15" fill="rgb(217,111,7)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2613" width="1.3398%" height="15" fill="rgb(253,193,51)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2597" width="1.3398%" height="15" fill="rgb(252,70,29)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2581" width="1.3398%" height="15" fill="rgb(232,127,12)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2565" width="1.3398%" height="15" fill="rgb(211,180,21)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2549" width="1.3398%" height="15" fill="rgb(229,72,13)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2533" width="1.3398%" height="15" fill="rgb(240,211,49)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2517" width="1.3398%" height="15" fill="rgb(219,149,40)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,073,179 samples, 1.34%)</title><rect x="94.8957%" y="2501" width="1.3398%" height="15" fill="rgb(210,127,46)" fg:x="217664376" fg:w="3073179"/><text x="95.1457%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,523,042 samples, 0.66%)</title><rect x="95.5715%" y="2485" width="0.6640%" height="15" fill="rgb(220,106,7)" fg:x="219214513" fg:w="1523042"/><text x="95.8215%" y="2495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,523,042 samples, 0.66%)</title><rect x="95.5715%" y="2469" width="0.6640%" height="15" fill="rgb(249,31,22)" fg:x="219214513" fg:w="1523042"/><text x="95.8215%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,523,042 samples, 0.66%)</title><rect x="95.5715%" y="2453" width="0.6640%" height="15" fill="rgb(253,1,49)" fg:x="219214513" fg:w="1523042"/><text x="95.8215%" y="2463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,523,042 samples, 0.66%)</title><rect x="95.5715%" y="2437" width="0.6640%" height="15" fill="rgb(227,144,33)" fg:x="219214513" fg:w="1523042"/><text x="95.8215%" y="2447.50"></text></g><g><title>alloc::alloc::dealloc (1,523,042 samples, 0.66%)</title><rect x="95.5715%" y="2421" width="0.6640%" height="15" fill="rgb(249,163,44)" fg:x="219214513" fg:w="1523042"/><text x="95.8215%" y="2431.50"></text></g><g><title>cfree (1,523,042 samples, 0.66%)</title><rect x="95.5715%" y="2405" width="0.6640%" height="15" fill="rgb(234,15,39)" fg:x="219214513" fg:w="1523042"/><text x="95.8215%" y="2415.50"></text></g><g><title>[libc.so.6] (1,523,042 samples, 0.66%)</title><rect x="95.5715%" y="2389" width="0.6640%" height="15" fill="rgb(207,66,16)" fg:x="219214513" fg:w="1523042"/><text x="95.8215%" y="2399.50"></text></g><g><title>[libc.so.6] (1,523,042 samples, 0.66%)</title><rect x="95.5715%" y="2373" width="0.6640%" height="15" fill="rgb(233,112,24)" fg:x="219214513" fg:w="1523042"/><text x="95.8215%" y="2383.50"></text></g><g><title>benchmark::json_to_html_node (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="3125" width="0.6554%" height="15" fill="rgb(230,90,22)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="3135.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="3109" width="0.6554%" height="15" fill="rgb(229,61,13)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="3119.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="3093" width="0.6554%" height="15" fill="rgb(225,57,24)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="3103.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="3077" width="0.6554%" height="15" fill="rgb(208,169,48)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="3087.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="3061" width="0.6554%" height="15" fill="rgb(244,218,51)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="3071.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="3045" width="0.6554%" height="15" fill="rgb(214,148,10)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="3055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="3029" width="0.6554%" height="15" fill="rgb(225,174,27)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="3039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="3013" width="0.6554%" height="15" fill="rgb(230,96,26)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="3023.50"></text></g><g><title>alloc::slice::hack::to_vec (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="2997" width="0.6554%" height="15" fill="rgb(232,10,30)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="3007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="2981" width="0.6554%" height="15" fill="rgb(222,8,50)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="2991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="2965" width="0.6554%" height="15" fill="rgb(213,81,27)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="2975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="2949" width="0.6554%" height="15" fill="rgb(245,50,10)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="2959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="2933" width="0.6554%" height="15" fill="rgb(216,100,18)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="2943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="2917" width="0.6554%" height="15" fill="rgb(236,147,54)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="2927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="2901" width="0.6554%" height="15" fill="rgb(205,143,26)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="2911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="2885" width="0.6554%" height="15" fill="rgb(236,26,9)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="2895.50"></text></g><g><title>alloc::alloc::alloc (1,503,220 samples, 0.66%)</title><rect x="96.2355%" y="2869" width="0.6554%" height="15" fill="rgb(221,165,53)" fg:x="220737555" fg:w="1503220"/><text x="96.4855%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,472,408 samples, 0.64%)</title><rect x="96.8909%" y="3125" width="0.6419%" height="15" fill="rgb(214,110,17)" fg:x="222240775" fg:w="1472408"/><text x="97.1409%" y="3135.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,270,065 samples, 0.55%)</title><rect x="97.5328%" y="3125" width="0.5537%" height="15" fill="rgb(237,197,12)" fg:x="223713183" fg:w="1270065"/><text x="97.7828%" y="3135.50"></text></g><g><title>malloc (1,267,427 samples, 0.55%)</title><rect x="98.0865%" y="3125" width="0.5526%" height="15" fill="rgb(205,84,17)" fg:x="224983248" fg:w="1267427"/><text x="98.3365%" y="3135.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_number (2,096,241 samples, 0.91%)</title><rect x="98.6391%" y="3125" width="0.9139%" height="15" fill="rgb(237,18,45)" fg:x="226250675" fg:w="2096241"/><text x="98.8891%" y="3135.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek_or_null (931,015 samples, 0.41%)</title><rect x="99.1471%" y="3109" width="0.4059%" height="15" fill="rgb(221,87,14)" fg:x="227415901" fg:w="931015"/><text x="99.3971%" y="3119.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (931,015 samples, 0.41%)</title><rect x="99.1471%" y="3093" width="0.4059%" height="15" fill="rgb(238,186,15)" fg:x="227415901" fg:w="931015"/><text x="99.3971%" y="3103.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (931,015 samples, 0.41%)</title><rect x="99.1471%" y="3077" width="0.4059%" height="15" fill="rgb(208,115,11)" fg:x="227415901" fg:w="931015"/><text x="99.3971%" y="3087.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (931,015 samples, 0.41%)</title><rect x="99.1471%" y="3061" width="0.4059%" height="15" fill="rgb(254,175,0)" fg:x="227415901" fg:w="931015"/><text x="99.3971%" y="3071.50"></text></g><g><title>all (229,372,268 samples, 100%)</title><rect x="0.0000%" y="3157" width="100.0000%" height="15" fill="rgb(227,24,42)" fg:x="0" fg:w="229372268"/><text x="0.2500%" y="3167.50"></text></g><g><title>benchmark (229,372,268 samples, 100.00%)</title><rect x="0.0000%" y="3141" width="100.0000%" height="15" fill="rgb(223,211,37)" fg:x="0" fg:w="229372268"/><text x="0.2500%" y="3151.50">benchmark</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,025,352 samples, 0.45%)</title><rect x="99.5530%" y="3125" width="0.4470%" height="15" fill="rgb(235,49,27)" fg:x="228346916" fg:w="1025352"/><text x="99.8030%" y="3135.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,025,352 samples, 0.45%)</title><rect x="99.5530%" y="3109" width="0.4470%" height="15" fill="rgb(254,97,51)" fg:x="228346916" fg:w="1025352"/><text x="99.8030%" y="3119.50"></text></g></svg></svg>