<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2070" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2053.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2053.00"> </text><svg id="frames" x="10" width="1180" total_samples="248399182"><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,942,449 samples, 1.18%)</title><rect x="0.0000%" y="1989" width="1.1846%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2942449"/><text x="0.2500%" y="1999.50"></text></g><g><title>[libc.so.6] (3,125,903 samples, 1.26%)</title><rect x="1.1846%" y="1989" width="1.2584%" height="15" fill="rgb(217,0,24)" fg:x="2942449" fg:w="3125903"/><text x="1.4346%" y="1999.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,971,261 samples, 1.20%)</title><rect x="3.5001%" y="1973" width="1.1962%" height="15" fill="rgb(221,193,54)" fg:x="8694099" fg:w="2971261"/><text x="3.7501%" y="1983.50"></text></g><g><title>[unknown] (14,947,624 samples, 6.02%)</title><rect x="2.4430%" y="1989" width="6.0176%" height="15" fill="rgb(248,212,6)" fg:x="6068352" fg:w="14947624"/><text x="2.6930%" y="1999.50">[unknown]</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,350,616 samples, 3.76%)</title><rect x="4.6962%" y="1973" width="3.7644%" height="15" fill="rgb(208,68,35)" fg:x="11665360" fg:w="9350616"/><text x="4.9462%" y="1983.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,350,616 samples, 3.76%)</title><rect x="4.6962%" y="1957" width="3.7644%" height="15" fill="rgb(232,128,0)" fg:x="11665360" fg:w="9350616"/><text x="4.9462%" y="1967.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,350,616 samples, 3.76%)</title><rect x="4.6962%" y="1941" width="3.7644%" height="15" fill="rgb(207,160,47)" fg:x="11665360" fg:w="9350616"/><text x="4.9462%" y="1951.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,350,616 samples, 3.76%)</title><rect x="4.6962%" y="1925" width="3.7644%" height="15" fill="rgb(228,23,34)" fg:x="11665360" fg:w="9350616"/><text x="4.9462%" y="1935.50">&lt;T a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (9,350,616 samples, 3.76%)</title><rect x="4.6962%" y="1909" width="3.7644%" height="15" fill="rgb(218,30,26)" fg:x="11665360" fg:w="9350616"/><text x="4.9462%" y="1919.50">&lt;css..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (6,400,856 samples, 2.58%)</title><rect x="5.8837%" y="1893" width="2.5768%" height="15" fill="rgb(220,122,19)" fg:x="14615120" fg:w="6400856"/><text x="6.1337%" y="1903.50">&lt;c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,400,856 samples, 2.58%)</title><rect x="5.8837%" y="1877" width="2.5768%" height="15" fill="rgb(250,228,42)" fg:x="14615120" fg:w="6400856"/><text x="6.1337%" y="1887.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,400,856 samples, 2.58%)</title><rect x="5.8837%" y="1861" width="2.5768%" height="15" fill="rgb(240,193,28)" fg:x="14615120" fg:w="6400856"/><text x="6.1337%" y="1871.50">al..</text></g><g><title>alloc::slice::hack::to_vec (6,400,856 samples, 2.58%)</title><rect x="5.8837%" y="1845" width="2.5768%" height="15" fill="rgb(216,20,37)" fg:x="14615120" fg:w="6400856"/><text x="6.1337%" y="1855.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,400,856 samples, 2.58%)</title><rect x="5.8837%" y="1829" width="2.5768%" height="15" fill="rgb(206,188,39)" fg:x="14615120" fg:w="6400856"/><text x="6.1337%" y="1839.50">&lt;T..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6,400,856 samples, 2.58%)</title><rect x="5.8837%" y="1813" width="2.5768%" height="15" fill="rgb(217,207,13)" fg:x="14615120" fg:w="6400856"/><text x="6.1337%" y="1823.50">co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (6,400,856 samples, 2.58%)</title><rect x="5.8837%" y="1797" width="2.5768%" height="15" fill="rgb(231,73,38)" fg:x="14615120" fg:w="6400856"/><text x="6.1337%" y="1807.50">co..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,223,110 samples, 1.30%)</title><rect x="8.4606%" y="1621" width="1.2976%" height="15" fill="rgb(225,20,46)" fg:x="21015976" fg:w="3223110"/><text x="8.7106%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,223,110 samples, 1.30%)</title><rect x="8.4606%" y="1605" width="1.2976%" height="15" fill="rgb(210,31,41)" fg:x="21015976" fg:w="3223110"/><text x="8.7106%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,223,110 samples, 1.30%)</title><rect x="8.4606%" y="1589" width="1.2976%" height="15" fill="rgb(221,200,47)" fg:x="21015976" fg:w="3223110"/><text x="8.7106%" y="1599.50"></text></g><g><title>alloc::slice::hack::to_vec (3,223,110 samples, 1.30%)</title><rect x="8.4606%" y="1573" width="1.2976%" height="15" fill="rgb(226,26,5)" fg:x="21015976" fg:w="3223110"/><text x="8.7106%" y="1583.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,223,110 samples, 1.30%)</title><rect x="8.4606%" y="1557" width="1.2976%" height="15" fill="rgb(249,33,26)" fg:x="21015976" fg:w="3223110"/><text x="8.7106%" y="1567.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,223,110 samples, 1.30%)</title><rect x="8.4606%" y="1541" width="1.2976%" height="15" fill="rgb(235,183,28)" fg:x="21015976" fg:w="3223110"/><text x="8.7106%" y="1551.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,223,110 samples, 1.30%)</title><rect x="8.4606%" y="1525" width="1.2976%" height="15" fill="rgb(221,5,38)" fg:x="21015976" fg:w="3223110"/><text x="8.7106%" y="1535.50"></text></g><g><title>[libc.so.6] (3,223,110 samples, 1.30%)</title><rect x="8.4606%" y="1509" width="1.2976%" height="15" fill="rgb(247,18,42)" fg:x="21015976" fg:w="3223110"/><text x="8.7106%" y="1519.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,522,425 samples, 1.02%)</title><rect x="9.9600%" y="965" width="1.0155%" height="15" fill="rgb(241,131,45)" fg:x="24740590" fg:w="2522425"/><text x="10.2100%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,522,425 samples, 1.02%)</title><rect x="9.9600%" y="949" width="1.0155%" height="15" fill="rgb(249,31,29)" fg:x="24740590" fg:w="2522425"/><text x="10.2100%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,522,425 samples, 1.02%)</title><rect x="9.9600%" y="933" width="1.0155%" height="15" fill="rgb(225,111,53)" fg:x="24740590" fg:w="2522425"/><text x="10.2100%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (2,522,425 samples, 1.02%)</title><rect x="9.9600%" y="917" width="1.0155%" height="15" fill="rgb(238,160,17)" fg:x="24740590" fg:w="2522425"/><text x="10.2100%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,522,425 samples, 1.02%)</title><rect x="9.9600%" y="901" width="1.0155%" height="15" fill="rgb(214,148,48)" fg:x="24740590" fg:w="2522425"/><text x="10.2100%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,522,425 samples, 1.02%)</title><rect x="9.9600%" y="885" width="1.0155%" height="15" fill="rgb(232,36,49)" fg:x="24740590" fg:w="2522425"/><text x="10.2100%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,522,425 samples, 1.02%)</title><rect x="9.9600%" y="869" width="1.0155%" height="15" fill="rgb(209,103,24)" fg:x="24740590" fg:w="2522425"/><text x="10.2100%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,522,425 samples, 1.02%)</title><rect x="9.9600%" y="853" width="1.0155%" height="15" fill="rgb(229,88,8)" fg:x="24740590" fg:w="2522425"/><text x="10.2100%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,522,425 samples, 1.02%)</title><rect x="9.9600%" y="837" width="1.0155%" height="15" fill="rgb(213,181,19)" fg:x="24740590" fg:w="2522425"/><text x="10.2100%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,522,425 samples, 1.02%)</title><rect x="9.9600%" y="821" width="1.0155%" height="15" fill="rgb(254,191,54)" fg:x="24740590" fg:w="2522425"/><text x="10.2100%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,522,425 samples, 1.02%)</title><rect x="9.9600%" y="805" width="1.0155%" height="15" fill="rgb(241,83,37)" fg:x="24740590" fg:w="2522425"/><text x="10.2100%" y="815.50"></text></g><g><title>alloc::alloc::alloc (2,522,425 samples, 1.02%)</title><rect x="9.9600%" y="789" width="1.0155%" height="15" fill="rgb(233,36,39)" fg:x="24740590" fg:w="2522425"/><text x="10.2100%" y="799.50"></text></g><g><title>malloc (2,522,425 samples, 1.02%)</title><rect x="9.9600%" y="773" width="1.0155%" height="15" fill="rgb(226,3,54)" fg:x="24740590" fg:w="2522425"/><text x="10.2100%" y="783.50"></text></g><g><title>[libc.so.6] (2,522,425 samples, 1.02%)</title><rect x="9.9600%" y="757" width="1.0155%" height="15" fill="rgb(245,192,40)" fg:x="24740590" fg:w="2522425"/><text x="10.2100%" y="767.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (9,510,145 samples, 3.83%)</title><rect x="8.4606%" y="1701" width="3.8286%" height="15" fill="rgb(238,167,29)" fg:x="21015976" fg:w="9510145"/><text x="8.7106%" y="1711.50">&lt;ben..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,510,145 samples, 3.83%)</title><rect x="8.4606%" y="1685" width="3.8286%" height="15" fill="rgb(232,182,51)" fg:x="21015976" fg:w="9510145"/><text x="8.7106%" y="1695.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (9,510,145 samples, 3.83%)</title><rect x="8.4606%" y="1669" width="3.8286%" height="15" fill="rgb(231,60,39)" fg:x="21015976" fg:w="9510145"/><text x="8.7106%" y="1679.50">&lt;ser..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (9,510,145 samples, 3.83%)</title><rect x="8.4606%" y="1653" width="3.8286%" height="15" fill="rgb(208,69,12)" fg:x="21015976" fg:w="9510145"/><text x="8.7106%" y="1663.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9,510,145 samples, 3.83%)</title><rect x="8.4606%" y="1637" width="3.8286%" height="15" fill="rgb(235,93,37)" fg:x="21015976" fg:w="9510145"/><text x="8.7106%" y="1647.50">&lt;all..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,287,035 samples, 2.53%)</title><rect x="9.7581%" y="1621" width="2.5310%" height="15" fill="rgb(213,116,39)" fg:x="24239086" fg:w="6287035"/><text x="10.0081%" y="1631.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (6,287,035 samples, 2.53%)</title><rect x="9.7581%" y="1605" width="2.5310%" height="15" fill="rgb(222,207,29)" fg:x="24239086" fg:w="6287035"/><text x="10.0081%" y="1615.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (6,287,035 samples, 2.53%)</title><rect x="9.7581%" y="1589" width="2.5310%" height="15" fill="rgb(206,96,30)" fg:x="24239086" fg:w="6287035"/><text x="10.0081%" y="1599.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6,287,035 samples, 2.53%)</title><rect x="9.7581%" y="1573" width="2.5310%" height="15" fill="rgb(218,138,4)" fg:x="24239086" fg:w="6287035"/><text x="10.0081%" y="1583.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,287,035 samples, 2.53%)</title><rect x="9.7581%" y="1557" width="2.5310%" height="15" fill="rgb(250,191,14)" fg:x="24239086" fg:w="6287035"/><text x="10.0081%" y="1567.50">&lt;s..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,287,035 samples, 2.53%)</title><rect x="9.7581%" y="1541" width="2.5310%" height="15" fill="rgb(239,60,40)" fg:x="24239086" fg:w="6287035"/><text x="10.0081%" y="1551.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,287,035 samples, 2.53%)</title><rect x="9.7581%" y="1525" width="2.5310%" height="15" fill="rgb(206,27,48)" fg:x="24239086" fg:w="6287035"/><text x="10.0081%" y="1535.50">al..</text></g><g><title>alloc::slice::hack::to_vec (6,287,035 samples, 2.53%)</title><rect x="9.7581%" y="1509" width="2.5310%" height="15" fill="rgb(225,35,8)" fg:x="24239086" fg:w="6287035"/><text x="10.0081%" y="1519.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,287,035 samples, 2.53%)</title><rect x="9.7581%" y="1493" width="2.5310%" height="15" fill="rgb(250,213,24)" fg:x="24239086" fg:w="6287035"/><text x="10.0081%" y="1503.50">&lt;T..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,287,035 samples, 2.53%)</title><rect x="9.7581%" y="1477" width="2.5310%" height="15" fill="rgb(247,123,22)" fg:x="24239086" fg:w="6287035"/><text x="10.0081%" y="1487.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (6,287,035 samples, 2.53%)</title><rect x="9.7581%" y="1461" width="2.5310%" height="15" fill="rgb(231,138,38)" fg:x="24239086" fg:w="6287035"/><text x="10.0081%" y="1471.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (6,287,035 samples, 2.53%)</title><rect x="9.7581%" y="1445" width="2.5310%" height="15" fill="rgb(231,145,46)" fg:x="24239086" fg:w="6287035"/><text x="10.0081%" y="1455.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6,287,035 samples, 2.53%)</title><rect x="9.7581%" y="1429" width="2.5310%" height="15" fill="rgb(251,118,11)" fg:x="24239086" fg:w="6287035"/><text x="10.0081%" y="1439.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,287,035 samples, 2.53%)</title><rect x="9.7581%" y="1413" width="2.5310%" height="15" fill="rgb(217,147,25)" fg:x="24239086" fg:w="6287035"/><text x="10.0081%" y="1423.50">&lt;s..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1397" width="2.3291%" height="15" fill="rgb(247,81,37)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1407.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1381" width="2.3291%" height="15" fill="rgb(209,12,38)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1391.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1365" width="2.3291%" height="15" fill="rgb(227,1,9)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1375.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1349" width="2.3291%" height="15" fill="rgb(248,47,43)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1359.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1333" width="2.3291%" height="15" fill="rgb(221,10,30)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1343.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1317" width="2.3291%" height="15" fill="rgb(210,229,1)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1327.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1301" width="2.3291%" height="15" fill="rgb(222,148,37)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1311.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1285" width="2.3291%" height="15" fill="rgb(234,67,33)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1295.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1269" width="2.3291%" height="15" fill="rgb(247,98,35)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1279.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1253" width="2.3291%" height="15" fill="rgb(247,138,52)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1263.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1237" width="2.3291%" height="15" fill="rgb(213,79,30)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1247.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1221" width="2.3291%" height="15" fill="rgb(246,177,23)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1231.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1205" width="2.3291%" height="15" fill="rgb(230,62,27)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1215.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1189" width="2.3291%" height="15" fill="rgb(216,154,8)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1199.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1173" width="2.3291%" height="15" fill="rgb(244,35,45)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1183.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1157" width="2.3291%" height="15" fill="rgb(251,115,12)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1167.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1141" width="2.3291%" height="15" fill="rgb(240,54,50)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1151.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1125" width="2.3291%" height="15" fill="rgb(233,84,52)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1135.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1109" width="2.3291%" height="15" fill="rgb(207,117,47)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1119.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1093" width="2.3291%" height="15" fill="rgb(249,43,39)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1103.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1077" width="2.3291%" height="15" fill="rgb(209,38,44)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1087.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1061" width="2.3291%" height="15" fill="rgb(236,212,23)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1071.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1045" width="2.3291%" height="15" fill="rgb(242,79,21)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1055.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1029" width="2.3291%" height="15" fill="rgb(211,96,35)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1039.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="1013" width="2.3291%" height="15" fill="rgb(253,215,40)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1023.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="997" width="2.3291%" height="15" fill="rgb(211,81,21)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="1007.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,785,531 samples, 2.33%)</title><rect x="9.9600%" y="981" width="2.3291%" height="15" fill="rgb(208,190,38)" fg:x="24740590" fg:w="5785531"/><text x="10.2100%" y="991.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="965" width="1.3137%" height="15" fill="rgb(235,213,38)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="949" width="1.3137%" height="15" fill="rgb(237,122,38)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="933" width="1.3137%" height="15" fill="rgb(244,218,35)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="917" width="1.3137%" height="15" fill="rgb(240,68,47)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="927.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="901" width="1.3137%" height="15" fill="rgb(210,16,53)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="911.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="885" width="1.3137%" height="15" fill="rgb(235,124,12)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="869" width="1.3137%" height="15" fill="rgb(224,169,11)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="853" width="1.3137%" height="15" fill="rgb(250,166,2)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="863.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="837" width="1.3137%" height="15" fill="rgb(242,216,29)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="821" width="1.3137%" height="15" fill="rgb(230,116,27)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="805" width="1.3137%" height="15" fill="rgb(228,99,48)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="789" width="1.3137%" height="15" fill="rgb(253,11,6)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="773" width="1.3137%" height="15" fill="rgb(247,143,39)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="783.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="757" width="1.3137%" height="15" fill="rgb(236,97,10)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="767.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="741" width="1.3137%" height="15" fill="rgb(233,208,19)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="725" width="1.3137%" height="15" fill="rgb(216,164,2)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="709" width="1.3137%" height="15" fill="rgb(220,129,5)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="719.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="693" width="1.3137%" height="15" fill="rgb(242,17,10)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="677" width="1.3137%" height="15" fill="rgb(242,107,0)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="661" width="1.3137%" height="15" fill="rgb(251,28,31)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="645" width="1.3137%" height="15" fill="rgb(233,223,10)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="629" width="1.3137%" height="15" fill="rgb(215,21,27)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="613" width="1.3137%" height="15" fill="rgb(232,23,21)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="597" width="1.3137%" height="15" fill="rgb(244,5,23)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="581" width="1.3137%" height="15" fill="rgb(226,81,46)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="565" width="1.3137%" height="15" fill="rgb(247,70,30)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="549" width="1.3137%" height="15" fill="rgb(212,68,19)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="533" width="1.3137%" height="15" fill="rgb(240,187,13)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="517" width="1.3137%" height="15" fill="rgb(223,113,26)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="527.50"></text></g><g><title>alloc::alloc::alloc (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="501" width="1.3137%" height="15" fill="rgb(206,192,2)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="511.50"></text></g><g><title>malloc (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="485" width="1.3137%" height="15" fill="rgb(241,108,4)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="495.50"></text></g><g><title>[libc.so.6] (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="469" width="1.3137%" height="15" fill="rgb(247,173,49)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="479.50"></text></g><g><title>[libc.so.6] (3,263,106 samples, 1.31%)</title><rect x="10.9755%" y="453" width="1.3137%" height="15" fill="rgb(224,114,35)" fg:x="27263015" fg:w="3263106"/><text x="11.2255%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (6,290,416 samples, 2.53%)</title><rect x="12.2891%" y="1685" width="2.5324%" height="15" fill="rgb(245,159,27)" fg:x="30526121" fg:w="6290416"/><text x="12.5391%" y="1695.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6,290,416 samples, 2.53%)</title><rect x="12.2891%" y="1669" width="2.5324%" height="15" fill="rgb(245,172,44)" fg:x="30526121" fg:w="6290416"/><text x="12.5391%" y="1679.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (6,290,416 samples, 2.53%)</title><rect x="12.2891%" y="1653" width="2.5324%" height="15" fill="rgb(236,23,11)" fg:x="30526121" fg:w="6290416"/><text x="12.5391%" y="1663.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (6,290,416 samples, 2.53%)</title><rect x="12.2891%" y="1637" width="2.5324%" height="15" fill="rgb(205,117,38)" fg:x="30526121" fg:w="6290416"/><text x="12.5391%" y="1647.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (6,290,416 samples, 2.53%)</title><rect x="12.2891%" y="1621" width="2.5324%" height="15" fill="rgb(237,72,25)" fg:x="30526121" fg:w="6290416"/><text x="12.5391%" y="1631.50">al..</text></g><g><title>malloc (6,290,416 samples, 2.53%)</title><rect x="12.2891%" y="1605" width="2.5324%" height="15" fill="rgb(244,70,9)" fg:x="30526121" fg:w="6290416"/><text x="12.5391%" y="1615.50">ma..</text></g><g><title>[libc.so.6] (6,290,416 samples, 2.53%)</title><rect x="12.2891%" y="1589" width="2.5324%" height="15" fill="rgb(217,125,39)" fg:x="30526121" fg:w="6290416"/><text x="12.5391%" y="1599.50">[l..</text></g><g><title>[libc.so.6] (6,290,416 samples, 2.53%)</title><rect x="12.2891%" y="1573" width="2.5324%" height="15" fill="rgb(235,36,10)" fg:x="30526121" fg:w="6290416"/><text x="12.5391%" y="1583.50">[l..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,266,618 samples, 1.32%)</title><rect x="14.8215%" y="1669" width="1.3151%" height="15" fill="rgb(251,123,47)" fg:x="36816537" fg:w="3266618"/><text x="15.0715%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,266,618 samples, 1.32%)</title><rect x="14.8215%" y="1653" width="1.3151%" height="15" fill="rgb(221,13,13)" fg:x="36816537" fg:w="3266618"/><text x="15.0715%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,266,618 samples, 1.32%)</title><rect x="14.8215%" y="1637" width="1.3151%" height="15" fill="rgb(238,131,9)" fg:x="36816537" fg:w="3266618"/><text x="15.0715%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,266,618 samples, 1.32%)</title><rect x="14.8215%" y="1621" width="1.3151%" height="15" fill="rgb(211,50,8)" fg:x="36816537" fg:w="3266618"/><text x="15.0715%" y="1631.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,266,618 samples, 1.32%)</title><rect x="14.8215%" y="1605" width="1.3151%" height="15" fill="rgb(245,182,24)" fg:x="36816537" fg:w="3266618"/><text x="15.0715%" y="1615.50"></text></g><g><title>malloc (3,266,618 samples, 1.32%)</title><rect x="14.8215%" y="1589" width="1.3151%" height="15" fill="rgb(242,14,37)" fg:x="36816537" fg:w="3266618"/><text x="15.0715%" y="1599.50"></text></g><g><title>[libc.so.6] (3,266,618 samples, 1.32%)</title><rect x="14.8215%" y="1573" width="1.3151%" height="15" fill="rgb(246,228,12)" fg:x="36816537" fg:w="3266618"/><text x="15.0715%" y="1583.50"></text></g><g><title>[libc.so.6] (3,266,618 samples, 1.32%)</title><rect x="14.8215%" y="1557" width="1.3151%" height="15" fill="rgb(213,55,15)" fg:x="36816537" fg:w="3266618"/><text x="15.0715%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,430,066 samples, 0.58%)</title><rect x="16.1366%" y="1637" width="0.5757%" height="15" fill="rgb(209,9,3)" fg:x="40083155" fg:w="1430066"/><text x="16.3866%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,430,066 samples, 0.58%)</title><rect x="16.1366%" y="1621" width="0.5757%" height="15" fill="rgb(230,59,30)" fg:x="40083155" fg:w="1430066"/><text x="16.3866%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,430,066 samples, 0.58%)</title><rect x="16.1366%" y="1605" width="0.5757%" height="15" fill="rgb(209,121,21)" fg:x="40083155" fg:w="1430066"/><text x="16.3866%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,430,066 samples, 0.58%)</title><rect x="16.1366%" y="1589" width="0.5757%" height="15" fill="rgb(220,109,13)" fg:x="40083155" fg:w="1430066"/><text x="16.3866%" y="1599.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,430,066 samples, 0.58%)</title><rect x="16.1366%" y="1573" width="0.5757%" height="15" fill="rgb(232,18,1)" fg:x="40083155" fg:w="1430066"/><text x="16.3866%" y="1583.50"></text></g><g><title>malloc (1,430,066 samples, 0.58%)</title><rect x="16.1366%" y="1557" width="0.5757%" height="15" fill="rgb(215,41,42)" fg:x="40083155" fg:w="1430066"/><text x="16.3866%" y="1567.50"></text></g><g><title>[libc.so.6] (1,430,066 samples, 0.58%)</title><rect x="16.1366%" y="1541" width="0.5757%" height="15" fill="rgb(224,123,36)" fg:x="40083155" fg:w="1430066"/><text x="16.3866%" y="1551.50"></text></g><g><title>[libc.so.6] (1,430,066 samples, 0.58%)</title><rect x="16.1366%" y="1525" width="0.5757%" height="15" fill="rgb(240,125,3)" fg:x="40083155" fg:w="1430066"/><text x="16.3866%" y="1535.50"></text></g><g><title>benchmark::apply_frame_modifications (13,546,075 samples, 5.45%)</title><rect x="12.2891%" y="1701" width="5.4533%" height="15" fill="rgb(205,98,50)" fg:x="30526121" fg:w="13546075"/><text x="12.5391%" y="1711.50">benchma..</text></g><g><title>benchmark::json_to_html_node (7,255,659 samples, 2.92%)</title><rect x="14.8215%" y="1685" width="2.9210%" height="15" fill="rgb(205,185,37)" fg:x="36816537" fg:w="7255659"/><text x="15.0715%" y="1695.50">be..</text></g><g><title>benchmark::json_to_html_node (3,989,041 samples, 1.61%)</title><rect x="16.1366%" y="1669" width="1.6059%" height="15" fill="rgb(238,207,15)" fg:x="40083155" fg:w="3989041"/><text x="16.3866%" y="1679.50"></text></g><g><title>benchmark::json_to_html_node (3,989,041 samples, 1.61%)</title><rect x="16.1366%" y="1653" width="1.6059%" height="15" fill="rgb(213,199,42)" fg:x="40083155" fg:w="3989041"/><text x="16.3866%" y="1663.50"></text></g><g><title>benchmark::json_to_html_node (2,558,975 samples, 1.03%)</title><rect x="16.7123%" y="1637" width="1.0302%" height="15" fill="rgb(235,201,11)" fg:x="41513221" fg:w="2558975"/><text x="16.9623%" y="1647.50"></text></g><g><title>benchmark::json_to_html_node (2,558,975 samples, 1.03%)</title><rect x="16.7123%" y="1621" width="1.0302%" height="15" fill="rgb(207,46,11)" fg:x="41513221" fg:w="2558975"/><text x="16.9623%" y="1631.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (2,558,975 samples, 1.03%)</title><rect x="16.7123%" y="1605" width="1.0302%" height="15" fill="rgb(241,35,35)" fg:x="41513221" fg:w="2558975"/><text x="16.9623%" y="1615.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (2,558,975 samples, 1.03%)</title><rect x="16.7123%" y="1589" width="1.0302%" height="15" fill="rgb(243,32,47)" fg:x="41513221" fg:w="2558975"/><text x="16.9623%" y="1599.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (2,558,975 samples, 1.03%)</title><rect x="16.7123%" y="1573" width="1.0302%" height="15" fill="rgb(247,202,23)" fg:x="41513221" fg:w="2558975"/><text x="16.9623%" y="1583.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (2,558,975 samples, 1.03%)</title><rect x="16.7123%" y="1557" width="1.0302%" height="15" fill="rgb(219,102,11)" fg:x="41513221" fg:w="2558975"/><text x="16.9623%" y="1567.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (2,558,975 samples, 1.03%)</title><rect x="16.7123%" y="1541" width="1.0302%" height="15" fill="rgb(243,110,44)" fg:x="41513221" fg:w="2558975"/><text x="16.9623%" y="1551.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2,558,975 samples, 1.03%)</title><rect x="16.7123%" y="1525" width="1.0302%" height="15" fill="rgb(222,74,54)" fg:x="41513221" fg:w="2558975"/><text x="16.9623%" y="1535.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2,558,975 samples, 1.03%)</title><rect x="16.7123%" y="1509" width="1.0302%" height="15" fill="rgb(216,99,12)" fg:x="41513221" fg:w="2558975"/><text x="16.9623%" y="1519.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2,558,975 samples, 1.03%)</title><rect x="16.7123%" y="1493" width="1.0302%" height="15" fill="rgb(226,22,26)" fg:x="41513221" fg:w="2558975"/><text x="16.9623%" y="1503.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (2,558,975 samples, 1.03%)</title><rect x="16.7123%" y="1477" width="1.0302%" height="15" fill="rgb(217,163,10)" fg:x="41513221" fg:w="2558975"/><text x="16.9623%" y="1487.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (2,558,975 samples, 1.03%)</title><rect x="16.7123%" y="1461" width="1.0302%" height="15" fill="rgb(213,25,53)" fg:x="41513221" fg:w="2558975"/><text x="16.9623%" y="1471.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (2,558,975 samples, 1.03%)</title><rect x="16.7123%" y="1445" width="1.0302%" height="15" fill="rgb(252,105,26)" fg:x="41513221" fg:w="2558975"/><text x="16.9623%" y="1455.50"></text></g><g><title>[libc.so.6] (2,558,975 samples, 1.03%)</title><rect x="16.7123%" y="1429" width="1.0302%" height="15" fill="rgb(220,39,43)" fg:x="41513221" fg:w="2558975"/><text x="16.9623%" y="1439.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,192,558 samples, 1.29%)</title><rect x="17.7425%" y="1429" width="1.2853%" height="15" fill="rgb(229,68,48)" fg:x="44072196" fg:w="3192558"/><text x="17.9925%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,192,558 samples, 1.29%)</title><rect x="17.7425%" y="1413" width="1.2853%" height="15" fill="rgb(252,8,32)" fg:x="44072196" fg:w="3192558"/><text x="17.9925%" y="1423.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,192,558 samples, 1.29%)</title><rect x="17.7425%" y="1397" width="1.2853%" height="15" fill="rgb(223,20,43)" fg:x="44072196" fg:w="3192558"/><text x="17.9925%" y="1407.50"></text></g><g><title>alloc::slice::hack::to_vec (3,192,558 samples, 1.29%)</title><rect x="17.7425%" y="1381" width="1.2853%" height="15" fill="rgb(229,81,49)" fg:x="44072196" fg:w="3192558"/><text x="17.9925%" y="1391.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,192,558 samples, 1.29%)</title><rect x="17.7425%" y="1365" width="1.2853%" height="15" fill="rgb(236,28,36)" fg:x="44072196" fg:w="3192558"/><text x="17.9925%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,192,558 samples, 1.29%)</title><rect x="17.7425%" y="1349" width="1.2853%" height="15" fill="rgb(249,185,26)" fg:x="44072196" fg:w="3192558"/><text x="17.9925%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,192,558 samples, 1.29%)</title><rect x="17.7425%" y="1333" width="1.2853%" height="15" fill="rgb(249,174,33)" fg:x="44072196" fg:w="3192558"/><text x="17.9925%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,192,558 samples, 1.29%)</title><rect x="17.7425%" y="1317" width="1.2853%" height="15" fill="rgb(233,201,37)" fg:x="44072196" fg:w="3192558"/><text x="17.9925%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,192,558 samples, 1.29%)</title><rect x="17.7425%" y="1301" width="1.2853%" height="15" fill="rgb(221,78,26)" fg:x="44072196" fg:w="3192558"/><text x="17.9925%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,192,558 samples, 1.29%)</title><rect x="17.7425%" y="1285" width="1.2853%" height="15" fill="rgb(250,127,30)" fg:x="44072196" fg:w="3192558"/><text x="17.9925%" y="1295.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,192,558 samples, 1.29%)</title><rect x="17.7425%" y="1269" width="1.2853%" height="15" fill="rgb(230,49,44)" fg:x="44072196" fg:w="3192558"/><text x="17.9925%" y="1279.50"></text></g><g><title>alloc::alloc::alloc (3,192,558 samples, 1.29%)</title><rect x="17.7425%" y="1253" width="1.2853%" height="15" fill="rgb(229,67,23)" fg:x="44072196" fg:w="3192558"/><text x="17.9925%" y="1263.50"></text></g><g><title>malloc (3,192,558 samples, 1.29%)</title><rect x="17.7425%" y="1237" width="1.2853%" height="15" fill="rgb(249,83,47)" fg:x="44072196" fg:w="3192558"/><text x="17.9925%" y="1247.50"></text></g><g><title>[libc.so.6] (3,192,558 samples, 1.29%)</title><rect x="17.7425%" y="1221" width="1.2853%" height="15" fill="rgb(215,43,3)" fg:x="44072196" fg:w="3192558"/><text x="17.9925%" y="1231.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,024,198 samples, 0.81%)</title><rect x="19.0277%" y="1189" width="0.8149%" height="15" fill="rgb(238,154,13)" fg:x="47264754" fg:w="2024198"/><text x="19.2777%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,024,198 samples, 0.81%)</title><rect x="19.0277%" y="1173" width="0.8149%" height="15" fill="rgb(219,56,2)" fg:x="47264754" fg:w="2024198"/><text x="19.2777%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,024,198 samples, 0.81%)</title><rect x="19.0277%" y="1157" width="0.8149%" height="15" fill="rgb(233,0,4)" fg:x="47264754" fg:w="2024198"/><text x="19.2777%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (2,024,198 samples, 0.81%)</title><rect x="19.0277%" y="1141" width="0.8149%" height="15" fill="rgb(235,30,7)" fg:x="47264754" fg:w="2024198"/><text x="19.2777%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,024,198 samples, 0.81%)</title><rect x="19.0277%" y="1125" width="0.8149%" height="15" fill="rgb(250,79,13)" fg:x="47264754" fg:w="2024198"/><text x="19.2777%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,024,198 samples, 0.81%)</title><rect x="19.0277%" y="1109" width="0.8149%" height="15" fill="rgb(211,146,34)" fg:x="47264754" fg:w="2024198"/><text x="19.2777%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,024,198 samples, 0.81%)</title><rect x="19.0277%" y="1093" width="0.8149%" height="15" fill="rgb(228,22,38)" fg:x="47264754" fg:w="2024198"/><text x="19.2777%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,024,198 samples, 0.81%)</title><rect x="19.0277%" y="1077" width="0.8149%" height="15" fill="rgb(235,168,5)" fg:x="47264754" fg:w="2024198"/><text x="19.2777%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,024,198 samples, 0.81%)</title><rect x="19.0277%" y="1061" width="0.8149%" height="15" fill="rgb(221,155,16)" fg:x="47264754" fg:w="2024198"/><text x="19.2777%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,024,198 samples, 0.81%)</title><rect x="19.0277%" y="1045" width="0.8149%" height="15" fill="rgb(215,215,53)" fg:x="47264754" fg:w="2024198"/><text x="19.2777%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,024,198 samples, 0.81%)</title><rect x="19.0277%" y="1029" width="0.8149%" height="15" fill="rgb(223,4,10)" fg:x="47264754" fg:w="2024198"/><text x="19.2777%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (2,024,198 samples, 0.81%)</title><rect x="19.0277%" y="1013" width="0.8149%" height="15" fill="rgb(234,103,6)" fg:x="47264754" fg:w="2024198"/><text x="19.2777%" y="1023.50"></text></g><g><title>malloc (2,024,198 samples, 0.81%)</title><rect x="19.0277%" y="997" width="0.8149%" height="15" fill="rgb(227,97,0)" fg:x="47264754" fg:w="2024198"/><text x="19.2777%" y="1007.50"></text></g><g><title>[libc.so.6] (2,024,198 samples, 0.81%)</title><rect x="19.0277%" y="981" width="0.8149%" height="15" fill="rgb(234,150,53)" fg:x="47264754" fg:w="2024198"/><text x="19.2777%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,714,565 samples, 1.50%)</title><rect x="19.8426%" y="1109" width="1.4954%" height="15" fill="rgb(228,201,54)" fg:x="49288952" fg:w="3714565"/><text x="20.0926%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (501,504 samples, 0.20%)</title><rect x="21.1361%" y="1093" width="0.2019%" height="15" fill="rgb(222,22,37)" fg:x="52502013" fg:w="501504"/><text x="21.3861%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (501,504 samples, 0.20%)</title><rect x="21.1361%" y="1077" width="0.2019%" height="15" fill="rgb(237,53,32)" fg:x="52502013" fg:w="501504"/><text x="21.3861%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (501,504 samples, 0.20%)</title><rect x="21.1361%" y="1061" width="0.2019%" height="15" fill="rgb(233,25,53)" fg:x="52502013" fg:w="501504"/><text x="21.3861%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (501,504 samples, 0.20%)</title><rect x="21.1361%" y="1045" width="0.2019%" height="15" fill="rgb(210,40,34)" fg:x="52502013" fg:w="501504"/><text x="21.3861%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (501,504 samples, 0.20%)</title><rect x="21.1361%" y="1029" width="0.2019%" height="15" fill="rgb(241,220,44)" fg:x="52502013" fg:w="501504"/><text x="21.3861%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (501,504 samples, 0.20%)</title><rect x="21.1361%" y="1013" width="0.2019%" height="15" fill="rgb(235,28,35)" fg:x="52502013" fg:w="501504"/><text x="21.3861%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (501,504 samples, 0.20%)</title><rect x="21.1361%" y="997" width="0.2019%" height="15" fill="rgb(210,56,17)" fg:x="52502013" fg:w="501504"/><text x="21.3861%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (501,504 samples, 0.20%)</title><rect x="21.1361%" y="981" width="0.2019%" height="15" fill="rgb(224,130,29)" fg:x="52502013" fg:w="501504"/><text x="21.3861%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (501,504 samples, 0.20%)</title><rect x="21.1361%" y="965" width="0.2019%" height="15" fill="rgb(235,212,8)" fg:x="52502013" fg:w="501504"/><text x="21.3861%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (501,504 samples, 0.20%)</title><rect x="21.1361%" y="949" width="0.2019%" height="15" fill="rgb(223,33,50)" fg:x="52502013" fg:w="501504"/><text x="21.3861%" y="959.50"></text></g><g><title>alloc::alloc::alloc (501,504 samples, 0.20%)</title><rect x="21.1361%" y="933" width="0.2019%" height="15" fill="rgb(219,149,13)" fg:x="52502013" fg:w="501504"/><text x="21.3861%" y="943.50"></text></g><g><title>malloc (501,504 samples, 0.20%)</title><rect x="21.1361%" y="917" width="0.2019%" height="15" fill="rgb(250,156,29)" fg:x="52502013" fg:w="501504"/><text x="21.3861%" y="927.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.20%)</title><rect x="21.1361%" y="901" width="0.2019%" height="15" fill="rgb(216,193,19)" fg:x="52502013" fg:w="501504"/><text x="21.3861%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,180,482 samples, 1.28%)</title><rect x="21.3380%" y="1029" width="1.2804%" height="15" fill="rgb(216,135,14)" fg:x="53003517" fg:w="3180482"/><text x="21.5880%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,180,482 samples, 1.28%)</title><rect x="21.3380%" y="1013" width="1.2804%" height="15" fill="rgb(241,47,5)" fg:x="53003517" fg:w="3180482"/><text x="21.5880%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,180,482 samples, 1.28%)</title><rect x="21.3380%" y="997" width="1.2804%" height="15" fill="rgb(233,42,35)" fg:x="53003517" fg:w="3180482"/><text x="21.5880%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (3,180,482 samples, 1.28%)</title><rect x="21.3380%" y="981" width="1.2804%" height="15" fill="rgb(231,13,6)" fg:x="53003517" fg:w="3180482"/><text x="21.5880%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,180,482 samples, 1.28%)</title><rect x="21.3380%" y="965" width="1.2804%" height="15" fill="rgb(207,181,40)" fg:x="53003517" fg:w="3180482"/><text x="21.5880%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,180,482 samples, 1.28%)</title><rect x="21.3380%" y="949" width="1.2804%" height="15" fill="rgb(254,173,49)" fg:x="53003517" fg:w="3180482"/><text x="21.5880%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,180,482 samples, 1.28%)</title><rect x="21.3380%" y="933" width="1.2804%" height="15" fill="rgb(221,1,38)" fg:x="53003517" fg:w="3180482"/><text x="21.5880%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,180,482 samples, 1.28%)</title><rect x="21.3380%" y="917" width="1.2804%" height="15" fill="rgb(206,124,46)" fg:x="53003517" fg:w="3180482"/><text x="21.5880%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,180,482 samples, 1.28%)</title><rect x="21.3380%" y="901" width="1.2804%" height="15" fill="rgb(249,21,11)" fg:x="53003517" fg:w="3180482"/><text x="21.5880%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,180,482 samples, 1.28%)</title><rect x="21.3380%" y="885" width="1.2804%" height="15" fill="rgb(222,201,40)" fg:x="53003517" fg:w="3180482"/><text x="21.5880%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,180,482 samples, 1.28%)</title><rect x="21.3380%" y="869" width="1.2804%" height="15" fill="rgb(235,61,29)" fg:x="53003517" fg:w="3180482"/><text x="21.5880%" y="879.50"></text></g><g><title>alloc::alloc::alloc (3,180,482 samples, 1.28%)</title><rect x="21.3380%" y="853" width="1.2804%" height="15" fill="rgb(219,207,3)" fg:x="53003517" fg:w="3180482"/><text x="21.5880%" y="863.50"></text></g><g><title>malloc (3,180,482 samples, 1.28%)</title><rect x="21.3380%" y="837" width="1.2804%" height="15" fill="rgb(222,56,46)" fg:x="53003517" fg:w="3180482"/><text x="21.5880%" y="847.50"></text></g><g><title>[libc.so.6] (3,180,482 samples, 1.28%)</title><rect x="21.3380%" y="821" width="1.2804%" height="15" fill="rgb(239,76,54)" fg:x="53003517" fg:w="3180482"/><text x="21.5880%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="469" width="1.2997%" height="15" fill="rgb(231,124,27)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="453" width="1.2997%" height="15" fill="rgb(249,195,6)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="437" width="1.2997%" height="15" fill="rgb(237,174,47)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="421" width="1.2997%" height="15" fill="rgb(206,201,31)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="431.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="405" width="1.2997%" height="15" fill="rgb(231,57,52)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="389" width="1.2997%" height="15" fill="rgb(248,177,22)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="373" width="1.2997%" height="15" fill="rgb(215,211,37)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="357" width="1.2997%" height="15" fill="rgb(241,128,51)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="341" width="1.2997%" height="15" fill="rgb(227,165,31)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="351.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="325" width="1.2997%" height="15" fill="rgb(228,167,24)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="309" width="1.2997%" height="15" fill="rgb(228,143,12)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="293" width="1.2997%" height="15" fill="rgb(249,149,8)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="277" width="1.2997%" height="15" fill="rgb(243,35,44)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="261" width="1.2997%" height="15" fill="rgb(246,89,9)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="271.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="245" width="1.2997%" height="15" fill="rgb(233,213,13)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="255.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="229" width="1.2997%" height="15" fill="rgb(233,141,41)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="213" width="1.2997%" height="15" fill="rgb(239,167,4)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="197" width="1.2997%" height="15" fill="rgb(209,217,16)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="181" width="1.2997%" height="15" fill="rgb(219,88,35)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="165" width="1.2997%" height="15" fill="rgb(220,193,23)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="149" width="1.2997%" height="15" fill="rgb(230,90,52)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="133" width="1.2997%" height="15" fill="rgb(252,106,19)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="117" width="1.2997%" height="15" fill="rgb(206,74,20)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="101" width="1.2997%" height="15" fill="rgb(230,138,44)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="85" width="1.2997%" height="15" fill="rgb(235,182,43)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="69" width="1.2997%" height="15" fill="rgb(242,16,51)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="79.50"></text></g><g><title>alloc::alloc::alloc (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="53" width="1.2997%" height="15" fill="rgb(248,9,4)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="63.50"></text></g><g><title>__rust_alloc (3,228,464 samples, 1.30%)</title><rect x="23.9141%" y="37" width="1.2997%" height="15" fill="rgb(210,31,22)" fg:x="59402489" fg:w="3228464"/><text x="24.1641%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,355,301 samples, 2.56%)</title><rect x="23.9141%" y="549" width="2.5585%" height="15" fill="rgb(239,54,39)" fg:x="59402489" fg:w="6355301"/><text x="24.1641%" y="559.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,355,301 samples, 2.56%)</title><rect x="23.9141%" y="533" width="2.5585%" height="15" fill="rgb(230,99,41)" fg:x="59402489" fg:w="6355301"/><text x="24.1641%" y="543.50">al..</text></g><g><title>alloc::slice::hack::to_vec (6,355,301 samples, 2.56%)</title><rect x="23.9141%" y="517" width="2.5585%" height="15" fill="rgb(253,106,12)" fg:x="59402489" fg:w="6355301"/><text x="24.1641%" y="527.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,355,301 samples, 2.56%)</title><rect x="23.9141%" y="501" width="2.5585%" height="15" fill="rgb(213,46,41)" fg:x="59402489" fg:w="6355301"/><text x="24.1641%" y="511.50">&lt;T..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (6,355,301 samples, 2.56%)</title><rect x="23.9141%" y="485" width="2.5585%" height="15" fill="rgb(215,133,35)" fg:x="59402489" fg:w="6355301"/><text x="24.1641%" y="495.50">&lt;c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,126,837 samples, 1.26%)</title><rect x="25.2138%" y="469" width="1.2588%" height="15" fill="rgb(213,28,5)" fg:x="62630953" fg:w="3126837"/><text x="25.4638%" y="479.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,126,837 samples, 1.26%)</title><rect x="25.2138%" y="453" width="1.2588%" height="15" fill="rgb(215,77,49)" fg:x="62630953" fg:w="3126837"/><text x="25.4638%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,126,837 samples, 1.26%)</title><rect x="25.2138%" y="437" width="1.2588%" height="15" fill="rgb(248,100,22)" fg:x="62630953" fg:w="3126837"/><text x="25.4638%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,126,837 samples, 1.26%)</title><rect x="25.2138%" y="421" width="1.2588%" height="15" fill="rgb(208,67,9)" fg:x="62630953" fg:w="3126837"/><text x="25.4638%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3,126,837 samples, 1.26%)</title><rect x="25.2138%" y="405" width="1.2588%" height="15" fill="rgb(219,133,21)" fg:x="62630953" fg:w="3126837"/><text x="25.4638%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,126,837 samples, 1.26%)</title><rect x="25.2138%" y="389" width="1.2588%" height="15" fill="rgb(246,46,29)" fg:x="62630953" fg:w="3126837"/><text x="25.4638%" y="399.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3,126,837 samples, 1.26%)</title><rect x="25.2138%" y="373" width="1.2588%" height="15" fill="rgb(246,185,52)" fg:x="62630953" fg:w="3126837"/><text x="25.4638%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,126,837 samples, 1.26%)</title><rect x="25.2138%" y="357" width="1.2588%" height="15" fill="rgb(252,136,11)" fg:x="62630953" fg:w="3126837"/><text x="25.4638%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,126,837 samples, 1.26%)</title><rect x="25.2138%" y="341" width="1.2588%" height="15" fill="rgb(219,138,53)" fg:x="62630953" fg:w="3126837"/><text x="25.4638%" y="351.50"></text></g><g><title>alloc::alloc::alloc (3,126,837 samples, 1.26%)</title><rect x="25.2138%" y="325" width="1.2588%" height="15" fill="rgb(211,51,23)" fg:x="62630953" fg:w="3126837"/><text x="25.4638%" y="335.50"></text></g><g><title>malloc (3,126,837 samples, 1.26%)</title><rect x="25.2138%" y="309" width="1.2588%" height="15" fill="rgb(247,221,28)" fg:x="62630953" fg:w="3126837"/><text x="25.4638%" y="319.50"></text></g><g><title>[libc.so.6] (3,126,837 samples, 1.26%)</title><rect x="25.2138%" y="293" width="1.2588%" height="15" fill="rgb(251,222,45)" fg:x="62630953" fg:w="3126837"/><text x="25.4638%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,530,012 samples, 3.84%)</title><rect x="23.9141%" y="629" width="3.8366%" height="15" fill="rgb(217,162,53)" fg:x="59402489" fg:w="9530012"/><text x="24.1641%" y="639.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,530,012 samples, 3.84%)</title><rect x="23.9141%" y="613" width="3.8366%" height="15" fill="rgb(229,93,14)" fg:x="59402489" fg:w="9530012"/><text x="24.1641%" y="623.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,530,012 samples, 3.84%)</title><rect x="23.9141%" y="597" width="3.8366%" height="15" fill="rgb(209,67,49)" fg:x="59402489" fg:w="9530012"/><text x="24.1641%" y="607.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,530,012 samples, 3.84%)</title><rect x="23.9141%" y="581" width="3.8366%" height="15" fill="rgb(213,87,29)" fg:x="59402489" fg:w="9530012"/><text x="24.1641%" y="591.50">&lt;T a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (9,530,012 samples, 3.84%)</title><rect x="23.9141%" y="565" width="3.8366%" height="15" fill="rgb(205,151,52)" fg:x="59402489" fg:w="9530012"/><text x="24.1641%" y="575.50">&lt;css..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,174,711 samples, 1.28%)</title><rect x="26.4726%" y="549" width="1.2781%" height="15" fill="rgb(253,215,39)" fg:x="65757790" fg:w="3174711"/><text x="26.7226%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,174,711 samples, 1.28%)</title><rect x="26.4726%" y="533" width="1.2781%" height="15" fill="rgb(221,220,41)" fg:x="65757790" fg:w="3174711"/><text x="26.7226%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,174,711 samples, 1.28%)</title><rect x="26.4726%" y="517" width="1.2781%" height="15" fill="rgb(218,133,21)" fg:x="65757790" fg:w="3174711"/><text x="26.7226%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (3,174,711 samples, 1.28%)</title><rect x="26.4726%" y="501" width="1.2781%" height="15" fill="rgb(221,193,43)" fg:x="65757790" fg:w="3174711"/><text x="26.7226%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,174,711 samples, 1.28%)</title><rect x="26.4726%" y="485" width="1.2781%" height="15" fill="rgb(240,128,52)" fg:x="65757790" fg:w="3174711"/><text x="26.7226%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,174,711 samples, 1.28%)</title><rect x="26.4726%" y="469" width="1.2781%" height="15" fill="rgb(253,114,12)" fg:x="65757790" fg:w="3174711"/><text x="26.7226%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,174,711 samples, 1.28%)</title><rect x="26.4726%" y="453" width="1.2781%" height="15" fill="rgb(215,223,47)" fg:x="65757790" fg:w="3174711"/><text x="26.7226%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,174,711 samples, 1.28%)</title><rect x="26.4726%" y="437" width="1.2781%" height="15" fill="rgb(248,225,23)" fg:x="65757790" fg:w="3174711"/><text x="26.7226%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,174,711 samples, 1.28%)</title><rect x="26.4726%" y="421" width="1.2781%" height="15" fill="rgb(250,108,0)" fg:x="65757790" fg:w="3174711"/><text x="26.7226%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,174,711 samples, 1.28%)</title><rect x="26.4726%" y="405" width="1.2781%" height="15" fill="rgb(228,208,7)" fg:x="65757790" fg:w="3174711"/><text x="26.7226%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,174,711 samples, 1.28%)</title><rect x="26.4726%" y="389" width="1.2781%" height="15" fill="rgb(244,45,10)" fg:x="65757790" fg:w="3174711"/><text x="26.7226%" y="399.50"></text></g><g><title>alloc::alloc::alloc (3,174,711 samples, 1.28%)</title><rect x="26.4726%" y="373" width="1.2781%" height="15" fill="rgb(207,125,25)" fg:x="65757790" fg:w="3174711"/><text x="26.7226%" y="383.50"></text></g><g><title>malloc (3,174,711 samples, 1.28%)</title><rect x="26.4726%" y="357" width="1.2781%" height="15" fill="rgb(210,195,18)" fg:x="65757790" fg:w="3174711"/><text x="26.7226%" y="367.50"></text></g><g><title>[libc.so.6] (3,174,711 samples, 1.28%)</title><rect x="26.4726%" y="341" width="1.2781%" height="15" fill="rgb(249,80,12)" fg:x="65757790" fg:w="3174711"/><text x="26.7226%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,362,606 samples, 4.57%)</title><rect x="23.9141%" y="709" width="4.5743%" height="15" fill="rgb(221,65,9)" fg:x="59402489" fg:w="11362606"/><text x="24.1641%" y="719.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11,362,606 samples, 4.57%)</title><rect x="23.9141%" y="693" width="4.5743%" height="15" fill="rgb(235,49,36)" fg:x="59402489" fg:w="11362606"/><text x="24.1641%" y="703.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (11,362,606 samples, 4.57%)</title><rect x="23.9141%" y="677" width="4.5743%" height="15" fill="rgb(225,32,20)" fg:x="59402489" fg:w="11362606"/><text x="24.1641%" y="687.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11,362,606 samples, 4.57%)</title><rect x="23.9141%" y="661" width="4.5743%" height="15" fill="rgb(215,141,46)" fg:x="59402489" fg:w="11362606"/><text x="24.1641%" y="671.50">&lt;T as..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (11,362,606 samples, 4.57%)</title><rect x="23.9141%" y="645" width="4.5743%" height="15" fill="rgb(250,160,47)" fg:x="59402489" fg:w="11362606"/><text x="24.1641%" y="655.50">&lt;css_..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="629" width="0.7378%" height="15" fill="rgb(216,222,40)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="639.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="613" width="0.7378%" height="15" fill="rgb(234,217,39)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="623.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="597" width="0.7378%" height="15" fill="rgb(207,178,40)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="581" width="0.7378%" height="15" fill="rgb(221,136,13)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="565" width="0.7378%" height="15" fill="rgb(249,199,10)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="549" width="0.7378%" height="15" fill="rgb(249,222,13)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="559.50"></text></g><g><title>core::clone::Clone::clone (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="533" width="0.7378%" height="15" fill="rgb(244,185,38)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="517" width="0.7378%" height="15" fill="rgb(236,202,9)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="501" width="0.7378%" height="15" fill="rgb(250,229,37)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="485" width="0.7378%" height="15" fill="rgb(206,174,23)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="469" width="0.7378%" height="15" fill="rgb(211,33,43)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="453" width="0.7378%" height="15" fill="rgb(245,58,50)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="437" width="0.7378%" height="15" fill="rgb(244,68,36)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="421" width="0.7378%" height="15" fill="rgb(232,229,15)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="405" width="0.7378%" height="15" fill="rgb(254,30,23)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="389" width="0.7378%" height="15" fill="rgb(235,160,14)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="373" width="0.7378%" height="15" fill="rgb(212,155,44)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="357" width="0.7378%" height="15" fill="rgb(226,2,50)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="341" width="0.7378%" height="15" fill="rgb(234,177,6)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="351.50"></text></g><g><title>__rdl_alloc (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="325" width="0.7378%" height="15" fill="rgb(217,24,9)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="335.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,832,594 samples, 0.74%)</title><rect x="27.7507%" y="309" width="0.7378%" height="15" fill="rgb(220,13,46)" fg:x="68932501" fg:w="1832594"/><text x="28.0007%" y="319.50"></text></g><g><title>core::clone::Clone::clone (2,998,978 samples, 1.21%)</title><rect x="28.4885%" y="613" width="1.2073%" height="15" fill="rgb(239,221,27)" fg:x="70765095" fg:w="2998978"/><text x="28.7385%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,998,978 samples, 1.21%)</title><rect x="28.4885%" y="597" width="1.2073%" height="15" fill="rgb(222,198,25)" fg:x="70765095" fg:w="2998978"/><text x="28.7385%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,998,978 samples, 1.21%)</title><rect x="28.4885%" y="581" width="1.2073%" height="15" fill="rgb(211,99,13)" fg:x="70765095" fg:w="2998978"/><text x="28.7385%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,998,978 samples, 1.21%)</title><rect x="28.4885%" y="565" width="1.2073%" height="15" fill="rgb(232,111,31)" fg:x="70765095" fg:w="2998978"/><text x="28.7385%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (2,998,978 samples, 1.21%)</title><rect x="28.4885%" y="549" width="1.2073%" height="15" fill="rgb(245,82,37)" fg:x="70765095" fg:w="2998978"/><text x="28.7385%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,998,978 samples, 1.21%)</title><rect x="28.4885%" y="533" width="1.2073%" height="15" fill="rgb(227,149,46)" fg:x="70765095" fg:w="2998978"/><text x="28.7385%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,998,978 samples, 1.21%)</title><rect x="28.4885%" y="517" width="1.2073%" height="15" fill="rgb(218,36,50)" fg:x="70765095" fg:w="2998978"/><text x="28.7385%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,998,978 samples, 1.21%)</title><rect x="28.4885%" y="501" width="1.2073%" height="15" fill="rgb(226,80,48)" fg:x="70765095" fg:w="2998978"/><text x="28.7385%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,998,978 samples, 1.21%)</title><rect x="28.4885%" y="485" width="1.2073%" height="15" fill="rgb(238,224,15)" fg:x="70765095" fg:w="2998978"/><text x="28.7385%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,998,978 samples, 1.21%)</title><rect x="28.4885%" y="469" width="1.2073%" height="15" fill="rgb(241,136,10)" fg:x="70765095" fg:w="2998978"/><text x="28.7385%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,998,978 samples, 1.21%)</title><rect x="28.4885%" y="453" width="1.2073%" height="15" fill="rgb(208,32,45)" fg:x="70765095" fg:w="2998978"/><text x="28.7385%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,998,978 samples, 1.21%)</title><rect x="28.4885%" y="437" width="1.2073%" height="15" fill="rgb(207,135,9)" fg:x="70765095" fg:w="2998978"/><text x="28.7385%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2,998,978 samples, 1.21%)</title><rect x="28.4885%" y="421" width="1.2073%" height="15" fill="rgb(206,86,44)" fg:x="70765095" fg:w="2998978"/><text x="28.7385%" y="431.50"></text></g><g><title>malloc (2,998,978 samples, 1.21%)</title><rect x="28.4885%" y="405" width="1.2073%" height="15" fill="rgb(245,177,15)" fg:x="70765095" fg:w="2998978"/><text x="28.7385%" y="415.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (20,844,529 samples, 8.39%)</title><rect x="22.6184%" y="805" width="8.3915%" height="15" fill="rgb(206,64,50)" fg:x="56183999" fg:w="20844529"/><text x="22.8684%" y="815.50">&lt;css_bitvect..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20,844,529 samples, 8.39%)</title><rect x="22.6184%" y="789" width="8.3915%" height="15" fill="rgb(234,36,40)" fg:x="56183999" fg:w="20844529"/><text x="22.8684%" y="799.50">&lt;alloc::vec:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20,844,529 samples, 8.39%)</title><rect x="22.6184%" y="773" width="8.3915%" height="15" fill="rgb(213,64,8)" fg:x="56183999" fg:w="20844529"/><text x="22.8684%" y="783.50">alloc::slice..</text></g><g><title>alloc::slice::hack::to_vec (20,844,529 samples, 8.39%)</title><rect x="22.6184%" y="757" width="8.3915%" height="15" fill="rgb(210,75,36)" fg:x="56183999" fg:w="20844529"/><text x="22.8684%" y="767.50">alloc::slice..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20,844,529 samples, 8.39%)</title><rect x="22.6184%" y="741" width="8.3915%" height="15" fill="rgb(229,88,21)" fg:x="56183999" fg:w="20844529"/><text x="22.8684%" y="751.50">&lt;T as alloc:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (20,844,529 samples, 8.39%)</title><rect x="22.6184%" y="725" width="8.3915%" height="15" fill="rgb(252,204,47)" fg:x="56183999" fg:w="20844529"/><text x="22.8684%" y="735.50">&lt;css_bitvect..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6,263,433 samples, 2.52%)</title><rect x="28.4885%" y="709" width="2.5215%" height="15" fill="rgb(208,77,27)" fg:x="70765095" fg:w="6263433"/><text x="28.7385%" y="719.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6,263,433 samples, 2.52%)</title><rect x="28.4885%" y="693" width="2.5215%" height="15" fill="rgb(221,76,26)" fg:x="70765095" fg:w="6263433"/><text x="28.7385%" y="703.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6,263,433 samples, 2.52%)</title><rect x="28.4885%" y="677" width="2.5215%" height="15" fill="rgb(225,139,18)" fg:x="70765095" fg:w="6263433"/><text x="28.7385%" y="687.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,263,433 samples, 2.52%)</title><rect x="28.4885%" y="661" width="2.5215%" height="15" fill="rgb(230,137,11)" fg:x="70765095" fg:w="6263433"/><text x="28.7385%" y="671.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (6,263,433 samples, 2.52%)</title><rect x="28.4885%" y="645" width="2.5215%" height="15" fill="rgb(212,28,1)" fg:x="70765095" fg:w="6263433"/><text x="28.7385%" y="655.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (6,263,433 samples, 2.52%)</title><rect x="28.4885%" y="629" width="2.5215%" height="15" fill="rgb(248,164,17)" fg:x="70765095" fg:w="6263433"/><text x="28.7385%" y="639.50">ha..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3,264,455 samples, 1.31%)</title><rect x="29.6958%" y="613" width="1.3142%" height="15" fill="rgb(222,171,42)" fg:x="73764073" fg:w="3264455"/><text x="29.9458%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3,264,455 samples, 1.31%)</title><rect x="29.6958%" y="597" width="1.3142%" height="15" fill="rgb(243,84,45)" fg:x="73764073" fg:w="3264455"/><text x="29.9458%" y="607.50"></text></g><g><title>core::ptr::write (3,264,455 samples, 1.31%)</title><rect x="29.6958%" y="581" width="1.3142%" height="15" fill="rgb(252,49,23)" fg:x="73764073" fg:w="3264455"/><text x="29.9458%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24,051,318 samples, 9.68%)</title><rect x="22.6184%" y="869" width="9.6825%" height="15" fill="rgb(215,19,7)" fg:x="56183999" fg:w="24051318"/><text x="22.8684%" y="879.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24,051,318 samples, 9.68%)</title><rect x="22.6184%" y="853" width="9.6825%" height="15" fill="rgb(238,81,41)" fg:x="56183999" fg:w="24051318"/><text x="22.8684%" y="863.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (24,051,318 samples, 9.68%)</title><rect x="22.6184%" y="837" width="9.6825%" height="15" fill="rgb(210,199,37)" fg:x="56183999" fg:w="24051318"/><text x="22.8684%" y="847.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24,051,318 samples, 9.68%)</title><rect x="22.6184%" y="821" width="9.6825%" height="15" fill="rgb(244,192,49)" fg:x="56183999" fg:w="24051318"/><text x="22.8684%" y="831.50">&lt;T as alloc::s..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,206,789 samples, 1.29%)</title><rect x="31.0100%" y="805" width="1.2910%" height="15" fill="rgb(226,211,11)" fg:x="77028528" fg:w="3206789"/><text x="31.2600%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30,137,857 samples, 12.13%)</title><rect x="22.6184%" y="1029" width="12.1328%" height="15" fill="rgb(236,162,54)" fg:x="56183999" fg:w="30137857"/><text x="22.8684%" y="1039.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30,137,857 samples, 12.13%)</title><rect x="22.6184%" y="1013" width="12.1328%" height="15" fill="rgb(220,229,9)" fg:x="56183999" fg:w="30137857"/><text x="22.8684%" y="1023.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (30,137,857 samples, 12.13%)</title><rect x="22.6184%" y="997" width="12.1328%" height="15" fill="rgb(250,87,22)" fg:x="56183999" fg:w="30137857"/><text x="22.8684%" y="1007.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30,137,857 samples, 12.13%)</title><rect x="22.6184%" y="981" width="12.1328%" height="15" fill="rgb(239,43,17)" fg:x="56183999" fg:w="30137857"/><text x="22.8684%" y="991.50">&lt;T as alloc::slice..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (30,137,857 samples, 12.13%)</title><rect x="22.6184%" y="965" width="12.1328%" height="15" fill="rgb(231,177,25)" fg:x="56183999" fg:w="30137857"/><text x="22.8684%" y="975.50">&lt;css_bitvector_com..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30,137,857 samples, 12.13%)</title><rect x="22.6184%" y="949" width="12.1328%" height="15" fill="rgb(219,179,1)" fg:x="56183999" fg:w="30137857"/><text x="22.8684%" y="959.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30,137,857 samples, 12.13%)</title><rect x="22.6184%" y="933" width="12.1328%" height="15" fill="rgb(238,219,53)" fg:x="56183999" fg:w="30137857"/><text x="22.8684%" y="943.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (30,137,857 samples, 12.13%)</title><rect x="22.6184%" y="917" width="12.1328%" height="15" fill="rgb(232,167,36)" fg:x="56183999" fg:w="30137857"/><text x="22.8684%" y="927.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30,137,857 samples, 12.13%)</title><rect x="22.6184%" y="901" width="12.1328%" height="15" fill="rgb(244,19,51)" fg:x="56183999" fg:w="30137857"/><text x="22.8684%" y="911.50">&lt;T as alloc::slice..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (30,137,857 samples, 12.13%)</title><rect x="22.6184%" y="885" width="12.1328%" height="15" fill="rgb(224,6,22)" fg:x="56183999" fg:w="30137857"/><text x="22.8684%" y="895.50">&lt;css_bitvector_com..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6,086,539 samples, 2.45%)</title><rect x="32.3010%" y="869" width="2.4503%" height="15" fill="rgb(224,145,5)" fg:x="80235317" fg:w="6086539"/><text x="32.5510%" y="879.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6,086,539 samples, 2.45%)</title><rect x="32.3010%" y="853" width="2.4503%" height="15" fill="rgb(234,130,49)" fg:x="80235317" fg:w="6086539"/><text x="32.5510%" y="863.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6,086,539 samples, 2.45%)</title><rect x="32.3010%" y="837" width="2.4503%" height="15" fill="rgb(254,6,2)" fg:x="80235317" fg:w="6086539"/><text x="32.5510%" y="847.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,252,277 samples, 1.31%)</title><rect x="33.4420%" y="821" width="1.3093%" height="15" fill="rgb(208,96,46)" fg:x="83069579" fg:w="3252277"/><text x="33.6920%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,252,277 samples, 1.31%)</title><rect x="33.4420%" y="805" width="1.3093%" height="15" fill="rgb(239,3,39)" fg:x="83069579" fg:w="3252277"/><text x="33.6920%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,252,277 samples, 1.31%)</title><rect x="33.4420%" y="789" width="1.3093%" height="15" fill="rgb(233,210,1)" fg:x="83069579" fg:w="3252277"/><text x="33.6920%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,252,277 samples, 1.31%)</title><rect x="33.4420%" y="773" width="1.3093%" height="15" fill="rgb(244,137,37)" fg:x="83069579" fg:w="3252277"/><text x="33.6920%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (36,543,968 samples, 14.71%)</title><rect x="21.3380%" y="1109" width="14.7118%" height="15" fill="rgb(240,136,2)" fg:x="53003517" fg:w="36543968"/><text x="21.5880%" y="1119.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (36,543,968 samples, 14.71%)</title><rect x="21.3380%" y="1093" width="14.7118%" height="15" fill="rgb(239,18,37)" fg:x="53003517" fg:w="36543968"/><text x="21.5880%" y="1103.50">alloc::slice::&lt;impl [T..</text></g><g><title>alloc::slice::hack::to_vec (36,543,968 samples, 14.71%)</title><rect x="21.3380%" y="1077" width="14.7118%" height="15" fill="rgb(218,185,22)" fg:x="53003517" fg:w="36543968"/><text x="21.5880%" y="1087.50">alloc::slice::hack::to..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (36,543,968 samples, 14.71%)</title><rect x="21.3380%" y="1061" width="14.7118%" height="15" fill="rgb(225,218,4)" fg:x="53003517" fg:w="36543968"/><text x="21.5880%" y="1071.50">&lt;T as alloc::slice::ha..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (36,543,968 samples, 14.71%)</title><rect x="21.3380%" y="1045" width="14.7118%" height="15" fill="rgb(230,182,32)" fg:x="53003517" fg:w="36543968"/><text x="21.5880%" y="1055.50">&lt;css_bitvector_compile..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,225,629 samples, 1.30%)</title><rect x="34.7513%" y="1029" width="1.2986%" height="15" fill="rgb(242,56,43)" fg:x="86321856" fg:w="3225629"/><text x="35.0013%" y="1039.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,225,629 samples, 1.30%)</title><rect x="34.7513%" y="1013" width="1.2986%" height="15" fill="rgb(233,99,24)" fg:x="86321856" fg:w="3225629"/><text x="35.0013%" y="1023.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,225,629 samples, 1.30%)</title><rect x="34.7513%" y="997" width="1.2986%" height="15" fill="rgb(234,209,42)" fg:x="86321856" fg:w="3225629"/><text x="35.0013%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,225,629 samples, 1.30%)</title><rect x="34.7513%" y="981" width="1.2986%" height="15" fill="rgb(227,7,12)" fg:x="86321856" fg:w="3225629"/><text x="35.0013%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3,225,629 samples, 1.30%)</title><rect x="34.7513%" y="965" width="1.2986%" height="15" fill="rgb(245,203,43)" fg:x="86321856" fg:w="3225629"/><text x="35.0013%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,225,629 samples, 1.30%)</title><rect x="34.7513%" y="949" width="1.2986%" height="15" fill="rgb(238,205,33)" fg:x="86321856" fg:w="3225629"/><text x="35.0013%" y="959.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3,225,629 samples, 1.30%)</title><rect x="34.7513%" y="933" width="1.2986%" height="15" fill="rgb(231,56,7)" fg:x="86321856" fg:w="3225629"/><text x="35.0013%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,225,629 samples, 1.30%)</title><rect x="34.7513%" y="917" width="1.2986%" height="15" fill="rgb(244,186,29)" fg:x="86321856" fg:w="3225629"/><text x="35.0013%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,225,629 samples, 1.30%)</title><rect x="34.7513%" y="901" width="1.2986%" height="15" fill="rgb(234,111,31)" fg:x="86321856" fg:w="3225629"/><text x="35.0013%" y="911.50"></text></g><g><title>alloc::alloc::alloc (3,225,629 samples, 1.30%)</title><rect x="34.7513%" y="885" width="1.2986%" height="15" fill="rgb(241,149,10)" fg:x="86321856" fg:w="3225629"/><text x="35.0013%" y="895.50"></text></g><g><title>malloc (3,225,629 samples, 1.30%)</title><rect x="34.7513%" y="869" width="1.2986%" height="15" fill="rgb(249,206,44)" fg:x="86321856" fg:w="3225629"/><text x="35.0013%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,009,420 samples, 1.21%)</title><rect x="36.0498%" y="1029" width="1.2115%" height="15" fill="rgb(251,153,30)" fg:x="89547485" fg:w="3009420"/><text x="36.2998%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,009,420 samples, 1.21%)</title><rect x="36.0498%" y="1013" width="1.2115%" height="15" fill="rgb(239,152,38)" fg:x="89547485" fg:w="3009420"/><text x="36.2998%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,009,420 samples, 1.21%)</title><rect x="36.0498%" y="997" width="1.2115%" height="15" fill="rgb(249,139,47)" fg:x="89547485" fg:w="3009420"/><text x="36.2998%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,009,420 samples, 1.21%)</title><rect x="36.0498%" y="981" width="1.2115%" height="15" fill="rgb(244,64,35)" fg:x="89547485" fg:w="3009420"/><text x="36.2998%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,420 samples, 1.21%)</title><rect x="36.0498%" y="965" width="1.2115%" height="15" fill="rgb(216,46,15)" fg:x="89547485" fg:w="3009420"/><text x="36.2998%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,420 samples, 1.21%)</title><rect x="36.0498%" y="949" width="1.2115%" height="15" fill="rgb(250,74,19)" fg:x="89547485" fg:w="3009420"/><text x="36.2998%" y="959.50"></text></g><g><title>alloc::alloc::alloc (3,009,420 samples, 1.21%)</title><rect x="36.0498%" y="933" width="1.2115%" height="15" fill="rgb(249,42,33)" fg:x="89547485" fg:w="3009420"/><text x="36.2998%" y="943.50"></text></g><g><title>malloc (3,009,420 samples, 1.21%)</title><rect x="36.0498%" y="917" width="1.2115%" height="15" fill="rgb(242,149,17)" fg:x="89547485" fg:w="3009420"/><text x="36.2998%" y="927.50"></text></g><g><title>[libc.so.6] (3,009,420 samples, 1.21%)</title><rect x="36.0498%" y="901" width="1.2115%" height="15" fill="rgb(244,29,21)" fg:x="89547485" fg:w="3009420"/><text x="36.2998%" y="911.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (8,979,159 samples, 3.61%)</title><rect x="36.0498%" y="1109" width="3.6148%" height="15" fill="rgb(220,130,37)" fg:x="89547485" fg:w="8979159"/><text x="36.2998%" y="1119.50">&lt;css..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,979,159 samples, 3.61%)</title><rect x="36.0498%" y="1093" width="3.6148%" height="15" fill="rgb(211,67,2)" fg:x="89547485" fg:w="8979159"/><text x="36.2998%" y="1103.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,979,159 samples, 3.61%)</title><rect x="36.0498%" y="1077" width="3.6148%" height="15" fill="rgb(235,68,52)" fg:x="89547485" fg:w="8979159"/><text x="36.2998%" y="1087.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (8,979,159 samples, 3.61%)</title><rect x="36.0498%" y="1061" width="3.6148%" height="15" fill="rgb(246,142,3)" fg:x="89547485" fg:w="8979159"/><text x="36.2998%" y="1071.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,979,159 samples, 3.61%)</title><rect x="36.0498%" y="1045" width="3.6148%" height="15" fill="rgb(241,25,7)" fg:x="89547485" fg:w="8979159"/><text x="36.2998%" y="1055.50">&lt;T a..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5,969,739 samples, 2.40%)</title><rect x="37.2614%" y="1029" width="2.4033%" height="15" fill="rgb(242,119,39)" fg:x="92556905" fg:w="5969739"/><text x="37.5114%" y="1039.50">co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (5,969,739 samples, 2.40%)</title><rect x="37.2614%" y="1013" width="2.4033%" height="15" fill="rgb(241,98,45)" fg:x="92556905" fg:w="5969739"/><text x="37.5114%" y="1023.50">co..</text></g><g><title>[libc.so.6] (5,969,739 samples, 2.40%)</title><rect x="37.2614%" y="997" width="2.4033%" height="15" fill="rgb(254,28,30)" fg:x="92556905" fg:w="5969739"/><text x="37.5114%" y="1007.50">[l..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (52,451,857 samples, 21.12%)</title><rect x="19.8426%" y="1125" width="21.1160%" height="15" fill="rgb(241,142,54)" fg:x="49288952" fg:w="52451857"/><text x="20.0926%" y="1135.50">&lt;css_bitvector_compiler::HtmlNode..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,214,165 samples, 1.29%)</title><rect x="39.6646%" y="1109" width="1.2940%" height="15" fill="rgb(222,85,15)" fg:x="98526644" fg:w="3214165"/><text x="39.9146%" y="1119.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,214,165 samples, 1.29%)</title><rect x="39.6646%" y="1093" width="1.2940%" height="15" fill="rgb(210,85,47)" fg:x="98526644" fg:w="3214165"/><text x="39.9146%" y="1103.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,214,165 samples, 1.29%)</title><rect x="39.6646%" y="1077" width="1.2940%" height="15" fill="rgb(224,206,25)" fg:x="98526644" fg:w="3214165"/><text x="39.9146%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,214,165 samples, 1.29%)</title><rect x="39.6646%" y="1061" width="1.2940%" height="15" fill="rgb(243,201,19)" fg:x="98526644" fg:w="3214165"/><text x="39.9146%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,214,165 samples, 1.29%)</title><rect x="39.6646%" y="1045" width="1.2940%" height="15" fill="rgb(236,59,4)" fg:x="98526644" fg:w="3214165"/><text x="39.9146%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,214,165 samples, 1.29%)</title><rect x="39.6646%" y="1029" width="1.2940%" height="15" fill="rgb(254,179,45)" fg:x="98526644" fg:w="3214165"/><text x="39.9146%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3,214,165 samples, 1.29%)</title><rect x="39.6646%" y="1013" width="1.2940%" height="15" fill="rgb(226,14,10)" fg:x="98526644" fg:w="3214165"/><text x="39.9146%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3,214,165 samples, 1.29%)</title><rect x="39.6646%" y="997" width="1.2940%" height="15" fill="rgb(244,27,41)" fg:x="98526644" fg:w="3214165"/><text x="39.9146%" y="1007.50"></text></g><g><title>core::ptr::write (3,214,165 samples, 1.29%)</title><rect x="39.6646%" y="981" width="1.2940%" height="15" fill="rgb(235,35,32)" fg:x="98526644" fg:w="3214165"/><text x="39.9146%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (55,667,066 samples, 22.41%)</title><rect x="19.8426%" y="1189" width="22.4103%" height="15" fill="rgb(218,68,31)" fg:x="49288952" fg:w="55667066"/><text x="20.0926%" y="1199.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clon..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (55,667,066 samples, 22.41%)</title><rect x="19.8426%" y="1173" width="22.4103%" height="15" fill="rgb(207,120,37)" fg:x="49288952" fg:w="55667066"/><text x="20.0926%" y="1183.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (55,667,066 samples, 22.41%)</title><rect x="19.8426%" y="1157" width="22.4103%" height="15" fill="rgb(227,98,0)" fg:x="49288952" fg:w="55667066"/><text x="20.0926%" y="1167.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (55,667,066 samples, 22.41%)</title><rect x="19.8426%" y="1141" width="22.4103%" height="15" fill="rgb(207,7,3)" fg:x="49288952" fg:w="55667066"/><text x="20.0926%" y="1151.50">&lt;T as alloc::slice::hack::ConvertVe..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (3,215,209 samples, 1.29%)</title><rect x="40.9586%" y="1125" width="1.2944%" height="15" fill="rgb(206,98,19)" fg:x="101740809" fg:w="3215209"/><text x="41.2086%" y="1135.50"></text></g><g><title>__rust_alloc (3,054,562 samples, 1.23%)</title><rect x="42.2530%" y="997" width="1.2297%" height="15" fill="rgb(217,5,26)" fg:x="104956018" fg:w="3054562"/><text x="42.5030%" y="1007.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (67,166,959 samples, 27.04%)</title><rect x="19.0277%" y="1205" width="27.0399%" height="15" fill="rgb(235,190,38)" fg:x="47264754" fg:w="67166959"/><text x="19.2777%" y="1215.50">&lt;css_bitvector_compiler::HtmlNode as core::..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (9,475,695 samples, 3.81%)</title><rect x="42.2530%" y="1189" width="3.8147%" height="15" fill="rgb(247,86,24)" fg:x="104956018" fg:w="9475695"/><text x="42.5030%" y="1199.50">&lt;css..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,475,695 samples, 3.81%)</title><rect x="42.2530%" y="1173" width="3.8147%" height="15" fill="rgb(205,101,16)" fg:x="104956018" fg:w="9475695"/><text x="42.5030%" y="1183.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,475,695 samples, 3.81%)</title><rect x="42.2530%" y="1157" width="3.8147%" height="15" fill="rgb(246,168,33)" fg:x="104956018" fg:w="9475695"/><text x="42.5030%" y="1167.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,475,695 samples, 3.81%)</title><rect x="42.2530%" y="1141" width="3.8147%" height="15" fill="rgb(231,114,1)" fg:x="104956018" fg:w="9475695"/><text x="42.5030%" y="1151.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,475,695 samples, 3.81%)</title><rect x="42.2530%" y="1125" width="3.8147%" height="15" fill="rgb(207,184,53)" fg:x="104956018" fg:w="9475695"/><text x="42.5030%" y="1135.50">&lt;T a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,475,695 samples, 3.81%)</title><rect x="42.2530%" y="1109" width="3.8147%" height="15" fill="rgb(224,95,51)" fg:x="104956018" fg:w="9475695"/><text x="42.5030%" y="1119.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,475,695 samples, 3.81%)</title><rect x="42.2530%" y="1093" width="3.8147%" height="15" fill="rgb(212,188,45)" fg:x="104956018" fg:w="9475695"/><text x="42.5030%" y="1103.50">allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,475,695 samples, 3.81%)</title><rect x="42.2530%" y="1077" width="3.8147%" height="15" fill="rgb(223,154,38)" fg:x="104956018" fg:w="9475695"/><text x="42.5030%" y="1087.50">allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,475,695 samples, 3.81%)</title><rect x="42.2530%" y="1061" width="3.8147%" height="15" fill="rgb(251,22,52)" fg:x="104956018" fg:w="9475695"/><text x="42.5030%" y="1071.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,475,695 samples, 3.81%)</title><rect x="42.2530%" y="1045" width="3.8147%" height="15" fill="rgb(229,209,22)" fg:x="104956018" fg:w="9475695"/><text x="42.5030%" y="1055.50">&lt;all..</text></g><g><title>alloc::alloc::Global::alloc_impl (9,475,695 samples, 3.81%)</title><rect x="42.2530%" y="1029" width="3.8147%" height="15" fill="rgb(234,138,34)" fg:x="104956018" fg:w="9475695"/><text x="42.5030%" y="1039.50">allo..</text></g><g><title>alloc::alloc::alloc (9,475,695 samples, 3.81%)</title><rect x="42.2530%" y="1013" width="3.8147%" height="15" fill="rgb(212,95,11)" fg:x="104956018" fg:w="9475695"/><text x="42.5030%" y="1023.50">allo..</text></g><g><title>malloc (6,421,133 samples, 2.59%)</title><rect x="43.4827%" y="997" width="2.5850%" height="15" fill="rgb(240,179,47)" fg:x="108010580" fg:w="6421133"/><text x="43.7327%" y="1007.50">ma..</text></g><g><title>[libc.so.6] (6,421,133 samples, 2.59%)</title><rect x="43.4827%" y="981" width="2.5850%" height="15" fill="rgb(240,163,11)" fg:x="108010580" fg:w="6421133"/><text x="43.7327%" y="991.50">[l..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (69,643,123 samples, 28.04%)</title><rect x="19.0277%" y="1429" width="28.0368%" height="15" fill="rgb(236,37,12)" fg:x="47264754" fg:w="69643123"/><text x="19.2777%" y="1439.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69,643,123 samples, 28.04%)</title><rect x="19.0277%" y="1413" width="28.0368%" height="15" fill="rgb(232,164,16)" fg:x="47264754" fg:w="69643123"/><text x="19.2777%" y="1423.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (69,643,123 samples, 28.04%)</title><rect x="19.0277%" y="1397" width="28.0368%" height="15" fill="rgb(244,205,15)" fg:x="47264754" fg:w="69643123"/><text x="19.2777%" y="1407.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (69,643,123 samples, 28.04%)</title><rect x="19.0277%" y="1381" width="28.0368%" height="15" fill="rgb(223,117,47)" fg:x="47264754" fg:w="69643123"/><text x="19.2777%" y="1391.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (69,643,123 samples, 28.04%)</title><rect x="19.0277%" y="1365" width="28.0368%" height="15" fill="rgb(244,107,35)" fg:x="47264754" fg:w="69643123"/><text x="19.2777%" y="1375.50">&lt;css_bitvector_compiler::HtmlNode as core::cl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (69,643,123 samples, 28.04%)</title><rect x="19.0277%" y="1349" width="28.0368%" height="15" fill="rgb(205,140,8)" fg:x="47264754" fg:w="69643123"/><text x="19.2777%" y="1359.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69,643,123 samples, 28.04%)</title><rect x="19.0277%" y="1333" width="28.0368%" height="15" fill="rgb(228,84,46)" fg:x="47264754" fg:w="69643123"/><text x="19.2777%" y="1343.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (69,643,123 samples, 28.04%)</title><rect x="19.0277%" y="1317" width="28.0368%" height="15" fill="rgb(254,188,9)" fg:x="47264754" fg:w="69643123"/><text x="19.2777%" y="1327.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (69,643,123 samples, 28.04%)</title><rect x="19.0277%" y="1301" width="28.0368%" height="15" fill="rgb(206,112,54)" fg:x="47264754" fg:w="69643123"/><text x="19.2777%" y="1311.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (69,643,123 samples, 28.04%)</title><rect x="19.0277%" y="1285" width="28.0368%" height="15" fill="rgb(216,84,49)" fg:x="47264754" fg:w="69643123"/><text x="19.2777%" y="1295.50">&lt;css_bitvector_compiler::HtmlNode as core::cl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (69,643,123 samples, 28.04%)</title><rect x="19.0277%" y="1269" width="28.0368%" height="15" fill="rgb(214,194,35)" fg:x="47264754" fg:w="69643123"/><text x="19.2777%" y="1279.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69,643,123 samples, 28.04%)</title><rect x="19.0277%" y="1253" width="28.0368%" height="15" fill="rgb(249,28,3)" fg:x="47264754" fg:w="69643123"/><text x="19.2777%" y="1263.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (69,643,123 samples, 28.04%)</title><rect x="19.0277%" y="1237" width="28.0368%" height="15" fill="rgb(222,56,52)" fg:x="47264754" fg:w="69643123"/><text x="19.2777%" y="1247.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (69,643,123 samples, 28.04%)</title><rect x="19.0277%" y="1221" width="28.0368%" height="15" fill="rgb(245,217,50)" fg:x="47264754" fg:w="69643123"/><text x="19.2777%" y="1231.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,476,164 samples, 1.00%)</title><rect x="46.0677%" y="1205" width="0.9968%" height="15" fill="rgb(213,201,24)" fg:x="114431713" fg:w="2476164"/><text x="46.3177%" y="1215.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,151,791 samples, 1.27%)</title><rect x="47.0645%" y="1429" width="1.2688%" height="15" fill="rgb(248,116,28)" fg:x="116907877" fg:w="3151791"/><text x="47.3145%" y="1439.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,151,791 samples, 1.27%)</title><rect x="47.0645%" y="1413" width="1.2688%" height="15" fill="rgb(219,72,43)" fg:x="116907877" fg:w="3151791"/><text x="47.3145%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,151,791 samples, 1.27%)</title><rect x="47.0645%" y="1397" width="1.2688%" height="15" fill="rgb(209,138,14)" fg:x="116907877" fg:w="3151791"/><text x="47.3145%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,151,791 samples, 1.27%)</title><rect x="47.0645%" y="1381" width="1.2688%" height="15" fill="rgb(222,18,33)" fg:x="116907877" fg:w="3151791"/><text x="47.3145%" y="1391.50"></text></g><g><title>alloc::slice::hack::to_vec (3,151,791 samples, 1.27%)</title><rect x="47.0645%" y="1365" width="1.2688%" height="15" fill="rgb(213,199,7)" fg:x="116907877" fg:w="3151791"/><text x="47.3145%" y="1375.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,151,791 samples, 1.27%)</title><rect x="47.0645%" y="1349" width="1.2688%" height="15" fill="rgb(250,110,10)" fg:x="116907877" fg:w="3151791"/><text x="47.3145%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,151,791 samples, 1.27%)</title><rect x="47.0645%" y="1333" width="1.2688%" height="15" fill="rgb(248,123,6)" fg:x="116907877" fg:w="3151791"/><text x="47.3145%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,151,791 samples, 1.27%)</title><rect x="47.0645%" y="1317" width="1.2688%" height="15" fill="rgb(206,91,31)" fg:x="116907877" fg:w="3151791"/><text x="47.3145%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,151,791 samples, 1.27%)</title><rect x="47.0645%" y="1301" width="1.2688%" height="15" fill="rgb(211,154,13)" fg:x="116907877" fg:w="3151791"/><text x="47.3145%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,151,791 samples, 1.27%)</title><rect x="47.0645%" y="1285" width="1.2688%" height="15" fill="rgb(225,148,7)" fg:x="116907877" fg:w="3151791"/><text x="47.3145%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,151,791 samples, 1.27%)</title><rect x="47.0645%" y="1269" width="1.2688%" height="15" fill="rgb(220,160,43)" fg:x="116907877" fg:w="3151791"/><text x="47.3145%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,151,791 samples, 1.27%)</title><rect x="47.0645%" y="1253" width="1.2688%" height="15" fill="rgb(213,52,39)" fg:x="116907877" fg:w="3151791"/><text x="47.3145%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (3,151,791 samples, 1.27%)</title><rect x="47.0645%" y="1237" width="1.2688%" height="15" fill="rgb(243,137,7)" fg:x="116907877" fg:w="3151791"/><text x="47.3145%" y="1247.50"></text></g><g><title>malloc (3,151,791 samples, 1.27%)</title><rect x="47.0645%" y="1221" width="1.2688%" height="15" fill="rgb(230,79,13)" fg:x="116907877" fg:w="3151791"/><text x="47.3145%" y="1231.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,606,471 samples, 1.05%)</title><rect x="48.3334%" y="1429" width="1.0493%" height="15" fill="rgb(247,105,23)" fg:x="120059668" fg:w="2606471"/><text x="48.5834%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,606,471 samples, 1.05%)</title><rect x="48.3334%" y="1413" width="1.0493%" height="15" fill="rgb(223,179,41)" fg:x="120059668" fg:w="2606471"/><text x="48.5834%" y="1423.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,606,471 samples, 1.05%)</title><rect x="48.3334%" y="1397" width="1.0493%" height="15" fill="rgb(218,9,34)" fg:x="120059668" fg:w="2606471"/><text x="48.5834%" y="1407.50"></text></g><g><title>alloc::slice::hack::to_vec (2,606,471 samples, 1.05%)</title><rect x="48.3334%" y="1381" width="1.0493%" height="15" fill="rgb(222,106,8)" fg:x="120059668" fg:w="2606471"/><text x="48.5834%" y="1391.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,606,471 samples, 1.05%)</title><rect x="48.3334%" y="1365" width="1.0493%" height="15" fill="rgb(211,220,0)" fg:x="120059668" fg:w="2606471"/><text x="48.5834%" y="1375.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,606,471 samples, 1.05%)</title><rect x="48.3334%" y="1349" width="1.0493%" height="15" fill="rgb(229,52,16)" fg:x="120059668" fg:w="2606471"/><text x="48.5834%" y="1359.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,606,471 samples, 1.05%)</title><rect x="48.3334%" y="1333" width="1.0493%" height="15" fill="rgb(212,155,18)" fg:x="120059668" fg:w="2606471"/><text x="48.5834%" y="1343.50"></text></g><g><title>[libc.so.6] (2,606,471 samples, 1.05%)</title><rect x="48.3334%" y="1317" width="1.0493%" height="15" fill="rgb(242,21,14)" fg:x="120059668" fg:w="2606471"/><text x="48.5834%" y="1327.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1685" width="32.6771%" height="15" fill="rgb(222,19,48)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1695.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1669" width="32.6771%" height="15" fill="rgb(232,45,27)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1679.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1653" width="32.6771%" height="15" fill="rgb(249,103,42)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1663.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1637" width="32.6771%" height="15" fill="rgb(246,81,33)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1647.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1621" width="32.6771%" height="15" fill="rgb(252,33,42)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1631.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1605" width="32.6771%" height="15" fill="rgb(209,212,41)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1615.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1589" width="32.6771%" height="15" fill="rgb(207,154,6)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1599.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1573" width="32.6771%" height="15" fill="rgb(223,64,47)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1583.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1557" width="32.6771%" height="15" fill="rgb(211,161,38)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1567.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1541" width="32.6771%" height="15" fill="rgb(219,138,40)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1551.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1525" width="32.6771%" height="15" fill="rgb(241,228,46)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1535.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1509" width="32.6771%" height="15" fill="rgb(223,209,38)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1519.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1493" width="32.6771%" height="15" fill="rgb(236,164,45)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1503.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1477" width="32.6771%" height="15" fill="rgb(231,15,5)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1487.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1461" width="32.6771%" height="15" fill="rgb(252,35,15)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1471.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (81,169,529 samples, 32.68%)</title><rect x="17.7425%" y="1445" width="32.6771%" height="15" fill="rgb(248,181,18)" fg:x="44072196" fg:w="81169529"/><text x="17.9925%" y="1455.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clo..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,575,586 samples, 1.04%)</title><rect x="49.3827%" y="1429" width="1.0369%" height="15" fill="rgb(233,39,42)" fg:x="122666139" fg:w="2575586"/><text x="49.6327%" y="1439.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,575,586 samples, 1.04%)</title><rect x="49.3827%" y="1413" width="1.0369%" height="15" fill="rgb(238,110,33)" fg:x="122666139" fg:w="2575586"/><text x="49.6327%" y="1423.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,575,586 samples, 1.04%)</title><rect x="49.3827%" y="1397" width="1.0369%" height="15" fill="rgb(233,195,10)" fg:x="122666139" fg:w="2575586"/><text x="49.6327%" y="1407.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,575,586 samples, 1.04%)</title><rect x="49.3827%" y="1381" width="1.0369%" height="15" fill="rgb(254,105,3)" fg:x="122666139" fg:w="2575586"/><text x="49.6327%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,575,586 samples, 1.04%)</title><rect x="49.3827%" y="1365" width="1.0369%" height="15" fill="rgb(221,225,9)" fg:x="122666139" fg:w="2575586"/><text x="49.6327%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,575,586 samples, 1.04%)</title><rect x="49.3827%" y="1349" width="1.0369%" height="15" fill="rgb(224,227,45)" fg:x="122666139" fg:w="2575586"/><text x="49.6327%" y="1359.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,575,586 samples, 1.04%)</title><rect x="49.3827%" y="1333" width="1.0369%" height="15" fill="rgb(229,198,43)" fg:x="122666139" fg:w="2575586"/><text x="49.6327%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,575,586 samples, 1.04%)</title><rect x="49.3827%" y="1317" width="1.0369%" height="15" fill="rgb(206,209,35)" fg:x="122666139" fg:w="2575586"/><text x="49.6327%" y="1327.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,575,586 samples, 1.04%)</title><rect x="49.3827%" y="1301" width="1.0369%" height="15" fill="rgb(245,195,53)" fg:x="122666139" fg:w="2575586"/><text x="49.6327%" y="1311.50"></text></g><g><title>alloc::alloc::alloc (2,575,586 samples, 1.04%)</title><rect x="49.3827%" y="1285" width="1.0369%" height="15" fill="rgb(240,92,26)" fg:x="122666139" fg:w="2575586"/><text x="49.6327%" y="1295.50"></text></g><g><title>malloc (2,575,586 samples, 1.04%)</title><rect x="49.3827%" y="1269" width="1.0369%" height="15" fill="rgb(207,40,23)" fg:x="122666139" fg:w="2575586"/><text x="49.6327%" y="1279.50"></text></g><g><title>[libc.so.6] (2,575,586 samples, 1.04%)</title><rect x="49.3827%" y="1253" width="1.0369%" height="15" fill="rgb(223,111,35)" fg:x="122666139" fg:w="2575586"/><text x="49.6327%" y="1263.50"></text></g><g><title>benchmark::extract_path_from_command (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1669" width="2.5723%" height="15" fill="rgb(229,147,28)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1679.50">be..</text></g><g><title>core::option::Option&lt;T&gt;::map (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1653" width="2.5723%" height="15" fill="rgb(211,29,28)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1663.50">co..</text></g><g><title>benchmark::extract_path_from_command::_{{closure}} (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1637" width="2.5723%" height="15" fill="rgb(228,72,33)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1647.50">be..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1621" width="2.5723%" height="15" fill="rgb(205,214,31)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1631.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1605" width="2.5723%" height="15" fill="rgb(224,111,15)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1615.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1589" width="2.5723%" height="15" fill="rgb(253,21,26)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1599.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1573" width="2.5723%" height="15" fill="rgb(245,139,43)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1583.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1557" width="2.5723%" height="15" fill="rgb(252,170,7)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1567.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1541" width="2.5723%" height="15" fill="rgb(231,118,14)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1551.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1525" width="2.5723%" height="15" fill="rgb(238,83,0)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1535.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1509" width="2.5723%" height="15" fill="rgb(221,39,39)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1519.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1493" width="2.5723%" height="15" fill="rgb(222,119,46)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1503.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1477" width="2.5723%" height="15" fill="rgb(222,165,49)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1487.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1461" width="2.5723%" height="15" fill="rgb(219,113,52)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1471.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1445" width="2.5723%" height="15" fill="rgb(214,7,15)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1455.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1429" width="2.5723%" height="15" fill="rgb(235,32,4)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1439.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1413" width="2.5723%" height="15" fill="rgb(238,90,54)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1423.50">al..</text></g><g><title>alloc::alloc::realloc (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1397" width="2.5723%" height="15" fill="rgb(213,208,19)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1407.50">al..</text></g><g><title>realloc (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1381" width="2.5723%" height="15" fill="rgb(233,156,4)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1391.50">re..</text></g><g><title>[libc.so.6] (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1365" width="2.5723%" height="15" fill="rgb(207,194,5)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1375.50">[l..</text></g><g><title>[libc.so.6] (6,389,546 samples, 2.57%)</title><rect x="50.4195%" y="1349" width="2.5723%" height="15" fill="rgb(206,111,30)" fg:x="125241725" fg:w="6389546"/><text x="50.6695%" y="1359.50">[l..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,160,527 samples, 0.47%)</title><rect x="52.9918%" y="1621" width="0.4672%" height="15" fill="rgb(243,70,54)" fg:x="131631271" fg:w="1160527"/><text x="53.2418%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,160,527 samples, 0.47%)</title><rect x="52.9918%" y="1605" width="0.4672%" height="15" fill="rgb(242,28,8)" fg:x="131631271" fg:w="1160527"/><text x="53.2418%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,160,527 samples, 0.47%)</title><rect x="52.9918%" y="1589" width="0.4672%" height="15" fill="rgb(219,106,18)" fg:x="131631271" fg:w="1160527"/><text x="53.2418%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,160,527 samples, 0.47%)</title><rect x="52.9918%" y="1573" width="0.4672%" height="15" fill="rgb(244,222,10)" fg:x="131631271" fg:w="1160527"/><text x="53.2418%" y="1583.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,160,527 samples, 0.47%)</title><rect x="52.9918%" y="1557" width="0.4672%" height="15" fill="rgb(236,179,52)" fg:x="131631271" fg:w="1160527"/><text x="53.2418%" y="1567.50"></text></g><g><title>malloc (1,160,527 samples, 0.47%)</title><rect x="52.9918%" y="1541" width="0.4672%" height="15" fill="rgb(213,23,39)" fg:x="131631271" fg:w="1160527"/><text x="53.2418%" y="1551.50"></text></g><g><title>[libc.so.6] (1,160,527 samples, 0.47%)</title><rect x="52.9918%" y="1525" width="0.4672%" height="15" fill="rgb(238,48,10)" fg:x="131631271" fg:w="1160527"/><text x="53.2418%" y="1535.50"></text></g><g><title>benchmark::json_to_html_node (2,840,379 samples, 1.14%)</title><rect x="53.4590%" y="1605" width="1.1435%" height="15" fill="rgb(251,196,23)" fg:x="132791798" fg:w="2840379"/><text x="53.7090%" y="1615.50"></text></g><g><title>benchmark::json_to_html_node (2,840,379 samples, 1.14%)</title><rect x="53.4590%" y="1589" width="1.1435%" height="15" fill="rgb(250,152,24)" fg:x="132791798" fg:w="2840379"/><text x="53.7090%" y="1599.50"></text></g><g><title>benchmark::json_to_html_node (2,840,379 samples, 1.14%)</title><rect x="53.4590%" y="1573" width="1.1435%" height="15" fill="rgb(209,150,17)" fg:x="132791798" fg:w="2840379"/><text x="53.7090%" y="1583.50"></text></g><g><title>benchmark::json_to_html_node (2,840,379 samples, 1.14%)</title><rect x="53.4590%" y="1557" width="1.1435%" height="15" fill="rgb(234,202,34)" fg:x="132791798" fg:w="2840379"/><text x="53.7090%" y="1567.50"></text></g><g><title>[libc.so.6] (2,840,379 samples, 1.14%)</title><rect x="53.4590%" y="1541" width="1.1435%" height="15" fill="rgb(253,148,53)" fg:x="132791798" fg:w="2840379"/><text x="53.7090%" y="1551.50"></text></g><g><title>benchmark::json_to_html_node (6,631,937 samples, 2.67%)</title><rect x="52.9918%" y="1637" width="2.6699%" height="15" fill="rgb(218,129,16)" fg:x="131631271" fg:w="6631937"/><text x="53.2418%" y="1647.50">be..</text></g><g><title>benchmark::json_to_html_node (5,471,410 samples, 2.20%)</title><rect x="53.4590%" y="1621" width="2.2027%" height="15" fill="rgb(216,85,19)" fg:x="132791798" fg:w="5471410"/><text x="53.7090%" y="1631.50">b..</text></g><g><title>serde_json::value::Value::get (2,631,031 samples, 1.06%)</title><rect x="54.6025%" y="1605" width="1.0592%" height="15" fill="rgb(235,228,7)" fg:x="135632177" fg:w="2631031"/><text x="54.8525%" y="1615.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (2,631,031 samples, 1.06%)</title><rect x="54.6025%" y="1589" width="1.0592%" height="15" fill="rgb(245,175,0)" fg:x="135632177" fg:w="2631031"/><text x="54.8525%" y="1599.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (2,631,031 samples, 1.06%)</title><rect x="54.6025%" y="1573" width="1.0592%" height="15" fill="rgb(208,168,36)" fg:x="135632177" fg:w="2631031"/><text x="54.8525%" y="1583.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (2,631,031 samples, 1.06%)</title><rect x="54.6025%" y="1557" width="1.0592%" height="15" fill="rgb(246,171,24)" fg:x="135632177" fg:w="2631031"/><text x="54.8525%" y="1567.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (2,631,031 samples, 1.06%)</title><rect x="54.6025%" y="1541" width="1.0592%" height="15" fill="rgb(215,142,24)" fg:x="135632177" fg:w="2631031"/><text x="54.8525%" y="1551.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2,631,031 samples, 1.06%)</title><rect x="54.6025%" y="1525" width="1.0592%" height="15" fill="rgb(250,187,7)" fg:x="135632177" fg:w="2631031"/><text x="54.8525%" y="1535.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2,631,031 samples, 1.06%)</title><rect x="54.6025%" y="1509" width="1.0592%" height="15" fill="rgb(228,66,33)" fg:x="135632177" fg:w="2631031"/><text x="54.8525%" y="1519.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2,631,031 samples, 1.06%)</title><rect x="54.6025%" y="1493" width="1.0592%" height="15" fill="rgb(234,215,21)" fg:x="135632177" fg:w="2631031"/><text x="54.8525%" y="1503.50"></text></g><g><title>benchmark::apply_frame_modifications (13,870,652 samples, 5.58%)</title><rect x="50.4195%" y="1685" width="5.5840%" height="15" fill="rgb(222,191,20)" fg:x="125241725" fg:w="13870652"/><text x="50.6695%" y="1695.50">benchma..</text></g><g><title>benchmark::json_to_html_node (7,481,106 samples, 3.01%)</title><rect x="52.9918%" y="1669" width="3.0117%" height="15" fill="rgb(245,79,54)" fg:x="131631271" fg:w="7481106"/><text x="53.2418%" y="1679.50">ben..</text></g><g><title>benchmark::json_to_html_node (7,481,106 samples, 3.01%)</title><rect x="52.9918%" y="1653" width="3.0117%" height="15" fill="rgb(240,10,37)" fg:x="131631271" fg:w="7481106"/><text x="53.2418%" y="1663.50">ben..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1637" width="0.3419%" height="15" fill="rgb(214,192,32)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1647.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1621" width="0.3419%" height="15" fill="rgb(209,36,54)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1605" width="0.3419%" height="15" fill="rgb(220,10,11)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1615.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1589" width="0.3419%" height="15" fill="rgb(221,106,17)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1599.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1573" width="0.3419%" height="15" fill="rgb(251,142,44)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1557" width="0.3419%" height="15" fill="rgb(238,13,15)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1567.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1541" width="0.3419%" height="15" fill="rgb(208,107,27)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1525" width="0.3419%" height="15" fill="rgb(205,136,37)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1509" width="0.3419%" height="15" fill="rgb(250,205,27)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1519.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1493" width="0.3419%" height="15" fill="rgb(210,80,43)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1477" width="0.3419%" height="15" fill="rgb(247,160,36)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1461" width="0.3419%" height="15" fill="rgb(234,13,49)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1445" width="0.3419%" height="15" fill="rgb(234,122,0)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1455.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1429" width="0.3419%" height="15" fill="rgb(207,146,38)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1439.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1413" width="0.3419%" height="15" fill="rgb(207,177,25)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1423.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1397" width="0.3419%" height="15" fill="rgb(211,178,42)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1407.50"></text></g><g><title>core::str::pattern::Searcher::next_match (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1381" width="0.3419%" height="15" fill="rgb(230,69,54)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1391.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1365" width="0.3419%" height="15" fill="rgb(214,135,41)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1375.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1349" width="0.3419%" height="15" fill="rgb(237,67,25)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1359.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1333" width="0.3419%" height="15" fill="rgb(222,189,50)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1343.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1317" width="0.3419%" height="15" fill="rgb(245,148,34)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1327.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (849,169 samples, 0.34%)</title><rect x="55.6617%" y="1301" width="0.3419%" height="15" fill="rgb(222,29,6)" fg:x="138263208" fg:w="849169"/><text x="55.9117%" y="1311.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3,174,308 samples, 1.28%)</title><rect x="56.0036%" y="1557" width="1.2779%" height="15" fill="rgb(221,189,43)" fg:x="139112377" fg:w="3174308"/><text x="56.2536%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,174,308 samples, 1.28%)</title><rect x="56.0036%" y="1541" width="1.2779%" height="15" fill="rgb(207,36,27)" fg:x="139112377" fg:w="3174308"/><text x="56.2536%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,174,308 samples, 1.28%)</title><rect x="56.0036%" y="1525" width="1.2779%" height="15" fill="rgb(217,90,24)" fg:x="139112377" fg:w="3174308"/><text x="56.2536%" y="1535.50"></text></g><g><title>benchmark::clear_dirty_flags (6,393,398 samples, 2.57%)</title><rect x="56.0036%" y="1685" width="2.5738%" height="15" fill="rgb(224,66,35)" fg:x="139112377" fg:w="6393398"/><text x="56.2536%" y="1695.50">be..</text></g><g><title>benchmark::clear_dirty_flags (6,393,398 samples, 2.57%)</title><rect x="56.0036%" y="1669" width="2.5738%" height="15" fill="rgb(221,13,50)" fg:x="139112377" fg:w="6393398"/><text x="56.2536%" y="1679.50">be..</text></g><g><title>benchmark::clear_dirty_flags (6,393,398 samples, 2.57%)</title><rect x="56.0036%" y="1653" width="2.5738%" height="15" fill="rgb(236,68,49)" fg:x="139112377" fg:w="6393398"/><text x="56.2536%" y="1663.50">be..</text></g><g><title>benchmark::clear_dirty_flags (6,393,398 samples, 2.57%)</title><rect x="56.0036%" y="1637" width="2.5738%" height="15" fill="rgb(229,146,28)" fg:x="139112377" fg:w="6393398"/><text x="56.2536%" y="1647.50">be..</text></g><g><title>benchmark::clear_dirty_flags (6,393,398 samples, 2.57%)</title><rect x="56.0036%" y="1621" width="2.5738%" height="15" fill="rgb(225,31,38)" fg:x="139112377" fg:w="6393398"/><text x="56.2536%" y="1631.50">be..</text></g><g><title>benchmark::clear_dirty_flags (6,393,398 samples, 2.57%)</title><rect x="56.0036%" y="1605" width="2.5738%" height="15" fill="rgb(250,208,3)" fg:x="139112377" fg:w="6393398"/><text x="56.2536%" y="1615.50">be..</text></g><g><title>benchmark::clear_dirty_flags (6,393,398 samples, 2.57%)</title><rect x="56.0036%" y="1589" width="2.5738%" height="15" fill="rgb(246,54,23)" fg:x="139112377" fg:w="6393398"/><text x="56.2536%" y="1599.50">be..</text></g><g><title>benchmark::clear_dirty_flags (6,393,398 samples, 2.57%)</title><rect x="56.0036%" y="1573" width="2.5738%" height="15" fill="rgb(243,76,11)" fg:x="139112377" fg:w="6393398"/><text x="56.2536%" y="1583.50">be..</text></g><g><title>benchmark::clear_dirty_flags (3,219,090 samples, 1.30%)</title><rect x="57.2815%" y="1557" width="1.2959%" height="15" fill="rgb(245,21,50)" fg:x="142286685" fg:w="3219090"/><text x="57.5315%" y="1567.50"></text></g><g><title>benchmark::clear_dirty_flags (3,219,090 samples, 1.30%)</title><rect x="57.2815%" y="1541" width="1.2959%" height="15" fill="rgb(228,9,43)" fg:x="142286685" fg:w="3219090"/><text x="57.5315%" y="1551.50"></text></g><g><title>benchmark::clear_dirty_flags (3,219,090 samples, 1.30%)</title><rect x="57.2815%" y="1525" width="1.2959%" height="15" fill="rgb(208,100,47)" fg:x="142286685" fg:w="3219090"/><text x="57.5315%" y="1535.50"></text></g><g><title>benchmark::clear_dirty_flags (3,219,090 samples, 1.30%)</title><rect x="57.2815%" y="1509" width="1.2959%" height="15" fill="rgb(232,26,8)" fg:x="142286685" fg:w="3219090"/><text x="57.5315%" y="1519.50"></text></g><g><title>benchmark::clear_dirty_flags (3,219,090 samples, 1.30%)</title><rect x="57.2815%" y="1493" width="1.2959%" height="15" fill="rgb(216,166,38)" fg:x="142286685" fg:w="3219090"/><text x="57.5315%" y="1503.50"></text></g><g><title>benchmark::clear_dirty_flags (3,219,090 samples, 1.30%)</title><rect x="57.2815%" y="1477" width="1.2959%" height="15" fill="rgb(251,202,51)" fg:x="142286685" fg:w="3219090"/><text x="57.5315%" y="1487.50"></text></g><g><title>benchmark::clear_dirty_flags (3,219,090 samples, 1.30%)</title><rect x="57.2815%" y="1461" width="1.2959%" height="15" fill="rgb(254,216,34)" fg:x="142286685" fg:w="3219090"/><text x="57.5315%" y="1471.50"></text></g><g><title>benchmark::clear_dirty_flags (3,219,090 samples, 1.30%)</title><rect x="57.2815%" y="1445" width="1.2959%" height="15" fill="rgb(251,32,27)" fg:x="142286685" fg:w="3219090"/><text x="57.5315%" y="1455.50"></text></g><g><title>benchmark::clear_dirty_flags (3,219,090 samples, 1.30%)</title><rect x="57.2815%" y="1429" width="1.2959%" height="15" fill="rgb(208,127,28)" fg:x="142286685" fg:w="3219090"/><text x="57.5315%" y="1439.50"></text></g><g><title>benchmark::clear_dirty_flags (3,219,090 samples, 1.30%)</title><rect x="57.2815%" y="1413" width="1.2959%" height="15" fill="rgb(224,137,22)" fg:x="142286685" fg:w="3219090"/><text x="57.5315%" y="1423.50"></text></g><g><title>benchmark::clear_dirty_flags (3,219,090 samples, 1.30%)</title><rect x="57.2815%" y="1397" width="1.2959%" height="15" fill="rgb(254,70,32)" fg:x="142286685" fg:w="3219090"/><text x="57.5315%" y="1407.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3,219,090 samples, 1.30%)</title><rect x="57.2815%" y="1381" width="1.2959%" height="15" fill="rgb(229,75,37)" fg:x="142286685" fg:w="3219090"/><text x="57.5315%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,219,090 samples, 1.30%)</title><rect x="57.2815%" y="1365" width="1.2959%" height="15" fill="rgb(252,64,23)" fg:x="142286685" fg:w="3219090"/><text x="57.5315%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,219,090 samples, 1.30%)</title><rect x="57.2815%" y="1349" width="1.2959%" height="15" fill="rgb(232,162,48)" fg:x="142286685" fg:w="3219090"/><text x="57.5315%" y="1359.50"></text></g><g><title>benchmark::count_nodes (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1685" width="1.2931%" height="15" fill="rgb(246,160,12)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1669" width="1.2931%" height="15" fill="rgb(247,166,0)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1679.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1653" width="1.2931%" height="15" fill="rgb(249,219,21)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1637" width="1.2931%" height="15" fill="rgb(205,209,3)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1647.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1621" width="1.2931%" height="15" fill="rgb(243,44,1)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1631.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1605" width="1.2931%" height="15" fill="rgb(206,159,16)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1615.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1589" width="1.2931%" height="15" fill="rgb(244,77,30)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1599.50"></text></g><g><title>benchmark::count_nodes (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1573" width="1.2931%" height="15" fill="rgb(218,69,12)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1557" width="1.2931%" height="15" fill="rgb(212,87,7)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1567.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1541" width="1.2931%" height="15" fill="rgb(245,114,25)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1525" width="1.2931%" height="15" fill="rgb(210,61,42)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1535.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1509" width="1.2931%" height="15" fill="rgb(211,52,33)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1519.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1493" width="1.2931%" height="15" fill="rgb(234,58,33)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1503.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1477" width="1.2931%" height="15" fill="rgb(220,115,36)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1487.50"></text></g><g><title>benchmark::count_nodes (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1461" width="1.2931%" height="15" fill="rgb(243,153,54)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1445" width="1.2931%" height="15" fill="rgb(251,47,18)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1455.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1429" width="1.2931%" height="15" fill="rgb(242,102,42)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1413" width="1.2931%" height="15" fill="rgb(234,31,38)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1423.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1397" width="1.2931%" height="15" fill="rgb(221,117,51)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1407.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1381" width="1.2931%" height="15" fill="rgb(212,20,18)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1391.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1365" width="1.2931%" height="15" fill="rgb(245,133,36)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1375.50"></text></g><g><title>benchmark::count_nodes (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1349" width="1.2931%" height="15" fill="rgb(212,6,19)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1333" width="1.2931%" height="15" fill="rgb(218,1,36)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1343.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1317" width="1.2931%" height="15" fill="rgb(246,84,54)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1301" width="1.2931%" height="15" fill="rgb(242,110,6)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1311.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1285" width="1.2931%" height="15" fill="rgb(214,47,5)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1295.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1269" width="1.2931%" height="15" fill="rgb(218,159,25)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1279.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1253" width="1.2931%" height="15" fill="rgb(215,211,28)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1263.50"></text></g><g><title>benchmark::count_nodes (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1237" width="1.2931%" height="15" fill="rgb(238,59,32)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1221" width="1.2931%" height="15" fill="rgb(226,82,3)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1231.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1205" width="1.2931%" height="15" fill="rgb(240,164,32)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1189" width="1.2931%" height="15" fill="rgb(232,46,7)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1199.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1173" width="1.2931%" height="15" fill="rgb(229,129,53)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1183.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1157" width="1.2931%" height="15" fill="rgb(234,188,29)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1167.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1141" width="1.2931%" height="15" fill="rgb(246,141,4)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1151.50"></text></g><g><title>benchmark::count_nodes (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1125" width="1.2931%" height="15" fill="rgb(229,23,39)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1109" width="1.2931%" height="15" fill="rgb(206,12,3)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1119.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1093" width="1.2931%" height="15" fill="rgb(252,226,20)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1077" width="1.2931%" height="15" fill="rgb(216,123,35)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1061" width="1.2931%" height="15" fill="rgb(212,68,40)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1071.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1045" width="1.2931%" height="15" fill="rgb(254,125,32)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1055.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1029" width="1.2931%" height="15" fill="rgb(253,97,22)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1039.50"></text></g><g><title>benchmark::count_nodes (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="1013" width="1.2931%" height="15" fill="rgb(241,101,14)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="997" width="1.2931%" height="15" fill="rgb(238,103,29)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="1007.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="981" width="1.2931%" height="15" fill="rgb(233,195,47)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="965" width="1.2931%" height="15" fill="rgb(246,218,30)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="949" width="1.2931%" height="15" fill="rgb(219,145,47)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="933" width="1.2931%" height="15" fill="rgb(243,12,26)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="943.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="917" width="1.2931%" height="15" fill="rgb(214,87,16)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="927.50"></text></g><g><title>benchmark::count_nodes (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="901" width="1.2931%" height="15" fill="rgb(208,99,42)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="885" width="1.2931%" height="15" fill="rgb(253,99,2)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (3,212,090 samples, 1.29%)</title><rect x="58.5774%" y="869" width="1.2931%" height="15" fill="rgb(220,168,23)" fg:x="145505775" fg:w="3212090"/><text x="58.8274%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,135,012 samples, 1.26%)</title><rect x="59.8705%" y="1221" width="1.2621%" height="15" fill="rgb(242,38,24)" fg:x="148717865" fg:w="3135012"/><text x="60.1205%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,135,012 samples, 1.26%)</title><rect x="59.8705%" y="1205" width="1.2621%" height="15" fill="rgb(225,182,9)" fg:x="148717865" fg:w="3135012"/><text x="60.1205%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,135,012 samples, 1.26%)</title><rect x="59.8705%" y="1189" width="1.2621%" height="15" fill="rgb(243,178,37)" fg:x="148717865" fg:w="3135012"/><text x="60.1205%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,135,012 samples, 1.26%)</title><rect x="59.8705%" y="1173" width="1.2621%" height="15" fill="rgb(232,139,19)" fg:x="148717865" fg:w="3135012"/><text x="60.1205%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,135,012 samples, 1.26%)</title><rect x="59.8705%" y="1157" width="1.2621%" height="15" fill="rgb(225,201,24)" fg:x="148717865" fg:w="3135012"/><text x="60.1205%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,135,012 samples, 1.26%)</title><rect x="59.8705%" y="1141" width="1.2621%" height="15" fill="rgb(221,47,46)" fg:x="148717865" fg:w="3135012"/><text x="60.1205%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (3,135,012 samples, 1.26%)</title><rect x="59.8705%" y="1125" width="1.2621%" height="15" fill="rgb(249,23,13)" fg:x="148717865" fg:w="3135012"/><text x="60.1205%" y="1135.50"></text></g><g><title>cfree (3,135,012 samples, 1.26%)</title><rect x="59.8705%" y="1109" width="1.2621%" height="15" fill="rgb(219,9,5)" fg:x="148717865" fg:w="3135012"/><text x="60.1205%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,698,168 samples, 1.09%)</title><rect x="61.1326%" y="1029" width="1.0862%" height="15" fill="rgb(254,171,16)" fg:x="151852877" fg:w="2698168"/><text x="61.3826%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,698,168 samples, 1.09%)</title><rect x="61.1326%" y="1013" width="1.0862%" height="15" fill="rgb(230,171,20)" fg:x="151852877" fg:w="2698168"/><text x="61.3826%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,698,168 samples, 1.09%)</title><rect x="61.1326%" y="997" width="1.0862%" height="15" fill="rgb(210,71,41)" fg:x="151852877" fg:w="2698168"/><text x="61.3826%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,168 samples, 1.09%)</title><rect x="61.1326%" y="981" width="1.0862%" height="15" fill="rgb(206,173,20)" fg:x="151852877" fg:w="2698168"/><text x="61.3826%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,698,168 samples, 1.09%)</title><rect x="61.1326%" y="965" width="1.0862%" height="15" fill="rgb(233,88,34)" fg:x="151852877" fg:w="2698168"/><text x="61.3826%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,698,168 samples, 1.09%)</title><rect x="61.1326%" y="949" width="1.0862%" height="15" fill="rgb(223,209,46)" fg:x="151852877" fg:w="2698168"/><text x="61.3826%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (2,698,168 samples, 1.09%)</title><rect x="61.1326%" y="933" width="1.0862%" height="15" fill="rgb(250,43,18)" fg:x="151852877" fg:w="2698168"/><text x="61.3826%" y="943.50"></text></g><g><title>cfree (2,698,168 samples, 1.09%)</title><rect x="61.1326%" y="917" width="1.0862%" height="15" fill="rgb(208,13,10)" fg:x="151852877" fg:w="2698168"/><text x="61.3826%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,228,093 samples, 1.30%)</title><rect x="62.2188%" y="517" width="1.2996%" height="15" fill="rgb(212,200,36)" fg:x="154551045" fg:w="3228093"/><text x="62.4688%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,228,093 samples, 1.30%)</title><rect x="62.2188%" y="501" width="1.2996%" height="15" fill="rgb(225,90,30)" fg:x="154551045" fg:w="3228093"/><text x="62.4688%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,228,093 samples, 1.30%)</title><rect x="62.2188%" y="485" width="1.2996%" height="15" fill="rgb(236,182,39)" fg:x="154551045" fg:w="3228093"/><text x="62.4688%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,228,093 samples, 1.30%)</title><rect x="62.2188%" y="469" width="1.2996%" height="15" fill="rgb(212,144,35)" fg:x="154551045" fg:w="3228093"/><text x="62.4688%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,228,093 samples, 1.30%)</title><rect x="62.2188%" y="453" width="1.2996%" height="15" fill="rgb(228,63,44)" fg:x="154551045" fg:w="3228093"/><text x="62.4688%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,228,093 samples, 1.30%)</title><rect x="62.2188%" y="437" width="1.2996%" height="15" fill="rgb(228,109,6)" fg:x="154551045" fg:w="3228093"/><text x="62.4688%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (3,228,093 samples, 1.30%)</title><rect x="62.2188%" y="421" width="1.2996%" height="15" fill="rgb(238,117,24)" fg:x="154551045" fg:w="3228093"/><text x="62.4688%" y="431.50"></text></g><g><title>cfree (3,228,093 samples, 1.30%)</title><rect x="62.2188%" y="405" width="1.2996%" height="15" fill="rgb(242,26,26)" fg:x="154551045" fg:w="3228093"/><text x="62.4688%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,323,520 samples, 2.55%)</title><rect x="62.2188%" y="565" width="2.5457%" height="15" fill="rgb(221,92,48)" fg:x="154551045" fg:w="6323520"/><text x="62.4688%" y="575.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,323,520 samples, 2.55%)</title><rect x="62.2188%" y="549" width="2.5457%" height="15" fill="rgb(209,209,32)" fg:x="154551045" fg:w="6323520"/><text x="62.4688%" y="559.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,323,520 samples, 2.55%)</title><rect x="62.2188%" y="533" width="2.5457%" height="15" fill="rgb(221,70,22)" fg:x="154551045" fg:w="6323520"/><text x="62.4688%" y="543.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="517" width="1.2462%" height="15" fill="rgb(248,145,5)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="501" width="1.2462%" height="15" fill="rgb(226,116,26)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="485" width="1.2462%" height="15" fill="rgb(244,5,17)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="469" width="1.2462%" height="15" fill="rgb(252,159,33)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="453" width="1.2462%" height="15" fill="rgb(206,71,0)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="437" width="1.2462%" height="15" fill="rgb(233,118,54)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="421" width="1.2462%" height="15" fill="rgb(234,83,48)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="405" width="1.2462%" height="15" fill="rgb(228,3,54)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="389" width="1.2462%" height="15" fill="rgb(226,155,13)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="373" width="1.2462%" height="15" fill="rgb(241,28,37)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="357" width="1.2462%" height="15" fill="rgb(233,93,10)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="341" width="1.2462%" height="15" fill="rgb(225,113,19)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="325" width="1.2462%" height="15" fill="rgb(241,2,18)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="309" width="1.2462%" height="15" fill="rgb(228,207,21)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="293" width="1.2462%" height="15" fill="rgb(213,211,35)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="277" width="1.2462%" height="15" fill="rgb(209,83,10)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="261" width="1.2462%" height="15" fill="rgb(209,164,1)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="245" width="1.2462%" height="15" fill="rgb(213,184,43)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="229" width="1.2462%" height="15" fill="rgb(231,61,34)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="213" width="1.2462%" height="15" fill="rgb(235,75,3)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="197" width="1.2462%" height="15" fill="rgb(220,106,47)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="181" width="1.2462%" height="15" fill="rgb(210,196,33)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="165" width="1.2462%" height="15" fill="rgb(229,154,42)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="149" width="1.2462%" height="15" fill="rgb(228,114,26)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="159.50"></text></g><g><title>alloc::alloc::dealloc (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="133" width="1.2462%" height="15" fill="rgb(208,144,1)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="143.50"></text></g><g><title>cfree (3,095,427 samples, 1.25%)</title><rect x="63.5184%" y="117" width="1.2462%" height="15" fill="rgb(239,112,37)" fg:x="157779138" fg:w="3095427"/><text x="63.7684%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,535,400 samples, 3.84%)</title><rect x="62.2188%" y="581" width="3.8387%" height="15" fill="rgb(210,96,50)" fg:x="154551045" fg:w="9535400"/><text x="62.4688%" y="591.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,211,880 samples, 1.29%)</title><rect x="64.7645%" y="565" width="1.2930%" height="15" fill="rgb(222,178,2)" fg:x="160874565" fg:w="3211880"/><text x="65.0145%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,211,880 samples, 1.29%)</title><rect x="64.7645%" y="549" width="1.2930%" height="15" fill="rgb(226,74,18)" fg:x="160874565" fg:w="3211880"/><text x="65.0145%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,211,880 samples, 1.29%)</title><rect x="64.7645%" y="533" width="1.2930%" height="15" fill="rgb(225,67,54)" fg:x="160874565" fg:w="3211880"/><text x="65.0145%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,211,880 samples, 1.29%)</title><rect x="64.7645%" y="517" width="1.2930%" height="15" fill="rgb(251,92,32)" fg:x="160874565" fg:w="3211880"/><text x="65.0145%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (3,211,880 samples, 1.29%)</title><rect x="64.7645%" y="501" width="1.2930%" height="15" fill="rgb(228,149,22)" fg:x="160874565" fg:w="3211880"/><text x="65.0145%" y="511.50"></text></g><g><title>cfree (3,211,880 samples, 1.29%)</title><rect x="64.7645%" y="485" width="1.2930%" height="15" fill="rgb(243,54,13)" fg:x="160874565" fg:w="3211880"/><text x="65.0145%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (12,751,324 samples, 5.13%)</title><rect x="62.2188%" y="773" width="5.1334%" height="15" fill="rgb(243,180,28)" fg:x="154551045" fg:w="12751324"/><text x="62.4688%" y="783.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,751,324 samples, 5.13%)</title><rect x="62.2188%" y="757" width="5.1334%" height="15" fill="rgb(208,167,24)" fg:x="154551045" fg:w="12751324"/><text x="62.4688%" y="767.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (12,751,324 samples, 5.13%)</title><rect x="62.2188%" y="741" width="5.1334%" height="15" fill="rgb(245,73,45)" fg:x="154551045" fg:w="12751324"/><text x="62.4688%" y="751.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (12,751,324 samples, 5.13%)</title><rect x="62.2188%" y="725" width="5.1334%" height="15" fill="rgb(237,203,48)" fg:x="154551045" fg:w="12751324"/><text x="62.4688%" y="735.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (12,751,324 samples, 5.13%)</title><rect x="62.2188%" y="709" width="5.1334%" height="15" fill="rgb(211,197,16)" fg:x="154551045" fg:w="12751324"/><text x="62.4688%" y="719.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,751,324 samples, 5.13%)</title><rect x="62.2188%" y="693" width="5.1334%" height="15" fill="rgb(243,99,51)" fg:x="154551045" fg:w="12751324"/><text x="62.4688%" y="703.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (12,751,324 samples, 5.13%)</title><rect x="62.2188%" y="677" width="5.1334%" height="15" fill="rgb(215,123,29)" fg:x="154551045" fg:w="12751324"/><text x="62.4688%" y="687.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (12,751,324 samples, 5.13%)</title><rect x="62.2188%" y="661" width="5.1334%" height="15" fill="rgb(239,186,37)" fg:x="154551045" fg:w="12751324"/><text x="62.4688%" y="671.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (12,751,324 samples, 5.13%)</title><rect x="62.2188%" y="645" width="5.1334%" height="15" fill="rgb(252,136,39)" fg:x="154551045" fg:w="12751324"/><text x="62.4688%" y="655.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,751,324 samples, 5.13%)</title><rect x="62.2188%" y="629" width="5.1334%" height="15" fill="rgb(223,213,32)" fg:x="154551045" fg:w="12751324"/><text x="62.4688%" y="639.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (12,751,324 samples, 5.13%)</title><rect x="62.2188%" y="613" width="5.1334%" height="15" fill="rgb(233,115,5)" fg:x="154551045" fg:w="12751324"/><text x="62.4688%" y="623.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (12,751,324 samples, 5.13%)</title><rect x="62.2188%" y="597" width="5.1334%" height="15" fill="rgb(207,226,44)" fg:x="154551045" fg:w="12751324"/><text x="62.4688%" y="607.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,215,924 samples, 1.29%)</title><rect x="66.0576%" y="581" width="1.2947%" height="15" fill="rgb(208,126,0)" fg:x="164086445" fg:w="3215924"/><text x="66.3076%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (3,215,924 samples, 1.29%)</title><rect x="66.0576%" y="565" width="1.2947%" height="15" fill="rgb(244,66,21)" fg:x="164086445" fg:w="3215924"/><text x="66.3076%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (3,215,924 samples, 1.29%)</title><rect x="66.0576%" y="549" width="1.2947%" height="15" fill="rgb(222,97,12)" fg:x="164086445" fg:w="3215924"/><text x="66.3076%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,215,924 samples, 1.29%)</title><rect x="66.0576%" y="533" width="1.2947%" height="15" fill="rgb(219,213,19)" fg:x="164086445" fg:w="3215924"/><text x="66.3076%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,215,924 samples, 1.29%)</title><rect x="66.0576%" y="517" width="1.2947%" height="15" fill="rgb(252,169,30)" fg:x="164086445" fg:w="3215924"/><text x="66.3076%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,215,924 samples, 1.29%)</title><rect x="66.0576%" y="501" width="1.2947%" height="15" fill="rgb(206,32,51)" fg:x="164086445" fg:w="3215924"/><text x="66.3076%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (3,215,924 samples, 1.29%)</title><rect x="66.0576%" y="485" width="1.2947%" height="15" fill="rgb(250,172,42)" fg:x="164086445" fg:w="3215924"/><text x="66.3076%" y="495.50"></text></g><g><title>cfree (3,215,924 samples, 1.29%)</title><rect x="66.0576%" y="469" width="1.2947%" height="15" fill="rgb(209,34,43)" fg:x="164086445" fg:w="3215924"/><text x="66.3076%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (15,941,003 samples, 6.42%)</title><rect x="62.2188%" y="837" width="6.4175%" height="15" fill="rgb(223,11,35)" fg:x="154551045" fg:w="15941003"/><text x="62.4688%" y="847.50">core::pt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15,941,003 samples, 6.42%)</title><rect x="62.2188%" y="821" width="6.4175%" height="15" fill="rgb(251,219,26)" fg:x="154551045" fg:w="15941003"/><text x="62.4688%" y="831.50">&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (15,941,003 samples, 6.42%)</title><rect x="62.2188%" y="805" width="6.4175%" height="15" fill="rgb(231,119,3)" fg:x="154551045" fg:w="15941003"/><text x="62.4688%" y="815.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (15,941,003 samples, 6.42%)</title><rect x="62.2188%" y="789" width="6.4175%" height="15" fill="rgb(216,97,11)" fg:x="154551045" fg:w="15941003"/><text x="62.4688%" y="799.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,189,679 samples, 1.28%)</title><rect x="67.3522%" y="773" width="1.2841%" height="15" fill="rgb(223,59,9)" fg:x="167302369" fg:w="3189679"/><text x="67.6022%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,189,679 samples, 1.28%)</title><rect x="67.3522%" y="757" width="1.2841%" height="15" fill="rgb(233,93,31)" fg:x="167302369" fg:w="3189679"/><text x="67.6022%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,189,679 samples, 1.28%)</title><rect x="67.3522%" y="741" width="1.2841%" height="15" fill="rgb(239,81,33)" fg:x="167302369" fg:w="3189679"/><text x="67.6022%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,189,679 samples, 1.28%)</title><rect x="67.3522%" y="725" width="1.2841%" height="15" fill="rgb(213,120,34)" fg:x="167302369" fg:w="3189679"/><text x="67.6022%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,189,679 samples, 1.28%)</title><rect x="67.3522%" y="709" width="1.2841%" height="15" fill="rgb(243,49,53)" fg:x="167302369" fg:w="3189679"/><text x="67.6022%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,189,679 samples, 1.28%)</title><rect x="67.3522%" y="693" width="1.2841%" height="15" fill="rgb(247,216,33)" fg:x="167302369" fg:w="3189679"/><text x="67.6022%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,189,679 samples, 1.28%)</title><rect x="67.3522%" y="677" width="1.2841%" height="15" fill="rgb(226,26,14)" fg:x="167302369" fg:w="3189679"/><text x="67.6022%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,189,679 samples, 1.28%)</title><rect x="67.3522%" y="661" width="1.2841%" height="15" fill="rgb(215,49,53)" fg:x="167302369" fg:w="3189679"/><text x="67.6022%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (3,189,679 samples, 1.28%)</title><rect x="67.3522%" y="645" width="1.2841%" height="15" fill="rgb(245,162,40)" fg:x="167302369" fg:w="3189679"/><text x="67.6022%" y="655.50"></text></g><g><title>cfree (3,189,679 samples, 1.28%)</title><rect x="67.3522%" y="629" width="1.2841%" height="15" fill="rgb(229,68,17)" fg:x="167302369" fg:w="3189679"/><text x="67.6022%" y="639.50"></text></g><g><title>[libc.so.6] (3,189,679 samples, 1.28%)</title><rect x="67.3522%" y="613" width="1.2841%" height="15" fill="rgb(213,182,10)" fg:x="167302369" fg:w="3189679"/><text x="67.6022%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (18,999,170 samples, 7.65%)</title><rect x="62.2188%" y="1029" width="7.6486%" height="15" fill="rgb(245,125,30)" fg:x="154551045" fg:w="18999170"/><text x="62.4688%" y="1039.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,999,170 samples, 7.65%)</title><rect x="62.2188%" y="1013" width="7.6486%" height="15" fill="rgb(232,202,2)" fg:x="154551045" fg:w="18999170"/><text x="62.4688%" y="1023.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (18,999,170 samples, 7.65%)</title><rect x="62.2188%" y="997" width="7.6486%" height="15" fill="rgb(237,140,51)" fg:x="154551045" fg:w="18999170"/><text x="62.4688%" y="1007.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (18,999,170 samples, 7.65%)</title><rect x="62.2188%" y="981" width="7.6486%" height="15" fill="rgb(236,157,25)" fg:x="154551045" fg:w="18999170"/><text x="62.4688%" y="991.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (18,999,170 samples, 7.65%)</title><rect x="62.2188%" y="965" width="7.6486%" height="15" fill="rgb(219,209,0)" fg:x="154551045" fg:w="18999170"/><text x="62.4688%" y="975.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,999,170 samples, 7.65%)</title><rect x="62.2188%" y="949" width="7.6486%" height="15" fill="rgb(240,116,54)" fg:x="154551045" fg:w="18999170"/><text x="62.4688%" y="959.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (18,999,170 samples, 7.65%)</title><rect x="62.2188%" y="933" width="7.6486%" height="15" fill="rgb(216,10,36)" fg:x="154551045" fg:w="18999170"/><text x="62.4688%" y="943.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (18,999,170 samples, 7.65%)</title><rect x="62.2188%" y="917" width="7.6486%" height="15" fill="rgb(222,72,44)" fg:x="154551045" fg:w="18999170"/><text x="62.4688%" y="927.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (18,999,170 samples, 7.65%)</title><rect x="62.2188%" y="901" width="7.6486%" height="15" fill="rgb(232,159,9)" fg:x="154551045" fg:w="18999170"/><text x="62.4688%" y="911.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,999,170 samples, 7.65%)</title><rect x="62.2188%" y="885" width="7.6486%" height="15" fill="rgb(210,39,32)" fg:x="154551045" fg:w="18999170"/><text x="62.4688%" y="895.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (18,999,170 samples, 7.65%)</title><rect x="62.2188%" y="869" width="7.6486%" height="15" fill="rgb(216,194,45)" fg:x="154551045" fg:w="18999170"/><text x="62.4688%" y="879.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (18,999,170 samples, 7.65%)</title><rect x="62.2188%" y="853" width="7.6486%" height="15" fill="rgb(218,18,35)" fg:x="154551045" fg:w="18999170"/><text x="62.4688%" y="863.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,058,167 samples, 1.23%)</title><rect x="68.6363%" y="837" width="1.2312%" height="15" fill="rgb(207,83,51)" fg:x="170492048" fg:w="3058167"/><text x="68.8863%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (3,058,167 samples, 1.23%)</title><rect x="68.6363%" y="821" width="1.2312%" height="15" fill="rgb(225,63,43)" fg:x="170492048" fg:w="3058167"/><text x="68.8863%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (3,058,167 samples, 1.23%)</title><rect x="68.6363%" y="805" width="1.2312%" height="15" fill="rgb(207,57,36)" fg:x="170492048" fg:w="3058167"/><text x="68.8863%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,058,167 samples, 1.23%)</title><rect x="68.6363%" y="789" width="1.2312%" height="15" fill="rgb(216,99,33)" fg:x="170492048" fg:w="3058167"/><text x="68.8863%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,058,167 samples, 1.23%)</title><rect x="68.6363%" y="773" width="1.2312%" height="15" fill="rgb(225,42,16)" fg:x="170492048" fg:w="3058167"/><text x="68.8863%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,058,167 samples, 1.23%)</title><rect x="68.6363%" y="757" width="1.2312%" height="15" fill="rgb(220,201,45)" fg:x="170492048" fg:w="3058167"/><text x="68.8863%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (3,058,167 samples, 1.23%)</title><rect x="68.6363%" y="741" width="1.2312%" height="15" fill="rgb(225,33,4)" fg:x="170492048" fg:w="3058167"/><text x="68.8863%" y="751.50"></text></g><g><title>cfree (3,058,167 samples, 1.23%)</title><rect x="68.6363%" y="725" width="1.2312%" height="15" fill="rgb(224,33,50)" fg:x="170492048" fg:w="3058167"/><text x="68.8863%" y="735.50"></text></g><g><title>[libc.so.6] (3,058,167 samples, 1.23%)</title><rect x="68.6363%" y="709" width="1.2312%" height="15" fill="rgb(246,198,51)" fg:x="170492048" fg:w="3058167"/><text x="68.8863%" y="719.50"></text></g><g><title>[libc.so.6] (3,058,167 samples, 1.23%)</title><rect x="68.6363%" y="693" width="1.2312%" height="15" fill="rgb(205,22,4)" fg:x="170492048" fg:w="3058167"/><text x="68.8863%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (24,899,767 samples, 10.02%)</title><rect x="61.1326%" y="1221" width="10.0241%" height="15" fill="rgb(206,3,8)" fg:x="151852877" fg:w="24899767"/><text x="61.3826%" y="1231.50">core::ptr::dro..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,899,767 samples, 10.02%)</title><rect x="61.1326%" y="1205" width="10.0241%" height="15" fill="rgb(251,23,15)" fg:x="151852877" fg:w="24899767"/><text x="61.3826%" y="1215.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (24,899,767 samples, 10.02%)</title><rect x="61.1326%" y="1189" width="10.0241%" height="15" fill="rgb(252,88,28)" fg:x="151852877" fg:w="24899767"/><text x="61.3826%" y="1199.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (24,899,767 samples, 10.02%)</title><rect x="61.1326%" y="1173" width="10.0241%" height="15" fill="rgb(212,127,14)" fg:x="151852877" fg:w="24899767"/><text x="61.3826%" y="1183.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (24,899,767 samples, 10.02%)</title><rect x="61.1326%" y="1157" width="10.0241%" height="15" fill="rgb(247,145,37)" fg:x="151852877" fg:w="24899767"/><text x="61.3826%" y="1167.50">core::ptr::dro..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,899,767 samples, 10.02%)</title><rect x="61.1326%" y="1141" width="10.0241%" height="15" fill="rgb(209,117,53)" fg:x="151852877" fg:w="24899767"/><text x="61.3826%" y="1151.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (24,899,767 samples, 10.02%)</title><rect x="61.1326%" y="1125" width="10.0241%" height="15" fill="rgb(212,90,42)" fg:x="151852877" fg:w="24899767"/><text x="61.3826%" y="1135.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (24,899,767 samples, 10.02%)</title><rect x="61.1326%" y="1109" width="10.0241%" height="15" fill="rgb(218,164,37)" fg:x="151852877" fg:w="24899767"/><text x="61.3826%" y="1119.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (24,899,767 samples, 10.02%)</title><rect x="61.1326%" y="1093" width="10.0241%" height="15" fill="rgb(246,65,34)" fg:x="151852877" fg:w="24899767"/><text x="61.3826%" y="1103.50">core::ptr::dro..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,899,767 samples, 10.02%)</title><rect x="61.1326%" y="1077" width="10.0241%" height="15" fill="rgb(231,100,33)" fg:x="151852877" fg:w="24899767"/><text x="61.3826%" y="1087.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (24,899,767 samples, 10.02%)</title><rect x="61.1326%" y="1061" width="10.0241%" height="15" fill="rgb(228,126,14)" fg:x="151852877" fg:w="24899767"/><text x="61.3826%" y="1071.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (24,899,767 samples, 10.02%)</title><rect x="61.1326%" y="1045" width="10.0241%" height="15" fill="rgb(215,173,21)" fg:x="151852877" fg:w="24899767"/><text x="61.3826%" y="1055.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,202,429 samples, 1.29%)</title><rect x="69.8675%" y="1029" width="1.2892%" height="15" fill="rgb(210,6,40)" fg:x="173550215" fg:w="3202429"/><text x="70.1175%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (3,202,429 samples, 1.29%)</title><rect x="69.8675%" y="1013" width="1.2892%" height="15" fill="rgb(212,48,18)" fg:x="173550215" fg:w="3202429"/><text x="70.1175%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (3,202,429 samples, 1.29%)</title><rect x="69.8675%" y="997" width="1.2892%" height="15" fill="rgb(230,214,11)" fg:x="173550215" fg:w="3202429"/><text x="70.1175%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,202,429 samples, 1.29%)</title><rect x="69.8675%" y="981" width="1.2892%" height="15" fill="rgb(254,105,39)" fg:x="173550215" fg:w="3202429"/><text x="70.1175%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,202,429 samples, 1.29%)</title><rect x="69.8675%" y="965" width="1.2892%" height="15" fill="rgb(245,158,5)" fg:x="173550215" fg:w="3202429"/><text x="70.1175%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,202,429 samples, 1.29%)</title><rect x="69.8675%" y="949" width="1.2892%" height="15" fill="rgb(249,208,11)" fg:x="173550215" fg:w="3202429"/><text x="70.1175%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (3,202,429 samples, 1.29%)</title><rect x="69.8675%" y="933" width="1.2892%" height="15" fill="rgb(210,39,28)" fg:x="173550215" fg:w="3202429"/><text x="70.1175%" y="943.50"></text></g><g><title>cfree (3,202,429 samples, 1.29%)</title><rect x="69.8675%" y="917" width="1.2892%" height="15" fill="rgb(211,56,53)" fg:x="173550215" fg:w="3202429"/><text x="70.1175%" y="927.50"></text></g><g><title>[libc.so.6] (3,202,429 samples, 1.29%)</title><rect x="69.8675%" y="901" width="1.2892%" height="15" fill="rgb(226,201,30)" fg:x="173550215" fg:w="3202429"/><text x="70.1175%" y="911.50"></text></g><g><title>[libc.so.6] (3,202,429 samples, 1.29%)</title><rect x="69.8675%" y="885" width="1.2892%" height="15" fill="rgb(239,101,34)" fg:x="173550215" fg:w="3202429"/><text x="70.1175%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34,373,767 samples, 13.84%)</title><rect x="59.8705%" y="1333" width="13.8381%" height="15" fill="rgb(226,209,5)" fg:x="148717865" fg:w="34373767"/><text x="60.1205%" y="1343.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (34,373,767 samples, 13.84%)</title><rect x="59.8705%" y="1317" width="13.8381%" height="15" fill="rgb(250,105,47)" fg:x="148717865" fg:w="34373767"/><text x="60.1205%" y="1327.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (34,373,767 samples, 13.84%)</title><rect x="59.8705%" y="1301" width="13.8381%" height="15" fill="rgb(230,72,3)" fg:x="148717865" fg:w="34373767"/><text x="60.1205%" y="1311.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (34,373,767 samples, 13.84%)</title><rect x="59.8705%" y="1285" width="13.8381%" height="15" fill="rgb(232,218,39)" fg:x="148717865" fg:w="34373767"/><text x="60.1205%" y="1295.50">core::ptr::drop_in_pl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34,373,767 samples, 13.84%)</title><rect x="59.8705%" y="1269" width="13.8381%" height="15" fill="rgb(248,166,6)" fg:x="148717865" fg:w="34373767"/><text x="60.1205%" y="1279.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (34,373,767 samples, 13.84%)</title><rect x="59.8705%" y="1253" width="13.8381%" height="15" fill="rgb(247,89,20)" fg:x="148717865" fg:w="34373767"/><text x="60.1205%" y="1263.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (34,373,767 samples, 13.84%)</title><rect x="59.8705%" y="1237" width="13.8381%" height="15" fill="rgb(248,130,54)" fg:x="148717865" fg:w="34373767"/><text x="60.1205%" y="1247.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (6,338,988 samples, 2.55%)</title><rect x="71.1567%" y="1221" width="2.5519%" height="15" fill="rgb(234,196,4)" fg:x="176752644" fg:w="6338988"/><text x="71.4067%" y="1231.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (6,338,988 samples, 2.55%)</title><rect x="71.1567%" y="1205" width="2.5519%" height="15" fill="rgb(250,143,31)" fg:x="176752644" fg:w="6338988"/><text x="71.4067%" y="1215.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (6,338,988 samples, 2.55%)</title><rect x="71.1567%" y="1189" width="2.5519%" height="15" fill="rgb(211,110,34)" fg:x="176752644" fg:w="6338988"/><text x="71.4067%" y="1199.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,338,988 samples, 2.55%)</title><rect x="71.1567%" y="1173" width="2.5519%" height="15" fill="rgb(215,124,48)" fg:x="176752644" fg:w="6338988"/><text x="71.4067%" y="1183.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,338,988 samples, 2.55%)</title><rect x="71.1567%" y="1157" width="2.5519%" height="15" fill="rgb(216,46,13)" fg:x="176752644" fg:w="6338988"/><text x="71.4067%" y="1167.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,338,988 samples, 2.55%)</title><rect x="71.1567%" y="1141" width="2.5519%" height="15" fill="rgb(205,184,25)" fg:x="176752644" fg:w="6338988"/><text x="71.4067%" y="1151.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (6,338,988 samples, 2.55%)</title><rect x="71.1567%" y="1125" width="2.5519%" height="15" fill="rgb(228,1,10)" fg:x="176752644" fg:w="6338988"/><text x="71.4067%" y="1135.50">al..</text></g><g><title>cfree (6,338,988 samples, 2.55%)</title><rect x="71.1567%" y="1109" width="2.5519%" height="15" fill="rgb(213,116,27)" fg:x="176752644" fg:w="6338988"/><text x="71.4067%" y="1119.50">cf..</text></g><g><title>[libc.so.6] (3,124,165 samples, 1.26%)</title><rect x="72.4509%" y="1093" width="1.2577%" height="15" fill="rgb(241,95,50)" fg:x="179967467" fg:w="3124165"/><text x="72.7009%" y="1103.50"></text></g><g><title>[libc.so.6] (3,124,165 samples, 1.26%)</title><rect x="72.4509%" y="1077" width="1.2577%" height="15" fill="rgb(238,48,32)" fg:x="179967467" fg:w="3124165"/><text x="72.7009%" y="1087.50"></text></g><g><title>[libc.so.6] (3,124,165 samples, 1.26%)</title><rect x="72.4509%" y="1061" width="1.2577%" height="15" fill="rgb(235,113,49)" fg:x="179967467" fg:w="3124165"/><text x="72.7009%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39,808,818 samples, 16.03%)</title><rect x="59.8705%" y="1397" width="16.0261%" height="15" fill="rgb(205,127,43)" fg:x="148717865" fg:w="39808818"/><text x="60.1205%" y="1407.50">&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (39,808,818 samples, 16.03%)</title><rect x="59.8705%" y="1381" width="16.0261%" height="15" fill="rgb(250,162,2)" fg:x="148717865" fg:w="39808818"/><text x="60.1205%" y="1391.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (39,808,818 samples, 16.03%)</title><rect x="59.8705%" y="1365" width="16.0261%" height="15" fill="rgb(220,13,41)" fg:x="148717865" fg:w="39808818"/><text x="60.1205%" y="1375.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (39,808,818 samples, 16.03%)</title><rect x="59.8705%" y="1349" width="16.0261%" height="15" fill="rgb(249,221,25)" fg:x="148717865" fg:w="39808818"/><text x="60.1205%" y="1359.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,435,051 samples, 2.19%)</title><rect x="73.7086%" y="1333" width="2.1880%" height="15" fill="rgb(215,208,19)" fg:x="183091632" fg:w="5435051"/><text x="73.9586%" y="1343.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,435,051 samples, 2.19%)</title><rect x="73.7086%" y="1317" width="2.1880%" height="15" fill="rgb(236,175,2)" fg:x="183091632" fg:w="5435051"/><text x="73.9586%" y="1327.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,435,051 samples, 2.19%)</title><rect x="73.7086%" y="1301" width="2.1880%" height="15" fill="rgb(241,52,2)" fg:x="183091632" fg:w="5435051"/><text x="73.9586%" y="1311.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,435,051 samples, 2.19%)</title><rect x="73.7086%" y="1285" width="2.1880%" height="15" fill="rgb(248,140,14)" fg:x="183091632" fg:w="5435051"/><text x="73.9586%" y="1295.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (5,435,051 samples, 2.19%)</title><rect x="73.7086%" y="1269" width="2.1880%" height="15" fill="rgb(253,22,42)" fg:x="183091632" fg:w="5435051"/><text x="73.9586%" y="1279.50">a..</text></g><g><title>cfree (5,435,051 samples, 2.19%)</title><rect x="73.7086%" y="1253" width="2.1880%" height="15" fill="rgb(234,61,47)" fg:x="183091632" fg:w="5435051"/><text x="73.9586%" y="1263.50">c..</text></g><g><title>[libc.so.6] (5,435,051 samples, 2.19%)</title><rect x="73.7086%" y="1237" width="2.1880%" height="15" fill="rgb(208,226,15)" fg:x="183091632" fg:w="5435051"/><text x="73.9586%" y="1247.50">[..</text></g><g><title>[libc.so.6] (5,435,051 samples, 2.19%)</title><rect x="73.7086%" y="1221" width="2.1880%" height="15" fill="rgb(217,221,4)" fg:x="183091632" fg:w="5435051"/><text x="73.9586%" y="1231.50">[..</text></g><g><title>[libc.so.6] (2,332,971 samples, 0.94%)</title><rect x="74.9575%" y="1205" width="0.9392%" height="15" fill="rgb(212,174,34)" fg:x="186193712" fg:w="2332971"/><text x="75.2075%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42,969,330 samples, 17.30%)</title><rect x="59.8705%" y="1461" width="17.2985%" height="15" fill="rgb(253,83,4)" fg:x="148717865" fg:w="42969330"/><text x="60.1205%" y="1471.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (42,969,330 samples, 17.30%)</title><rect x="59.8705%" y="1445" width="17.2985%" height="15" fill="rgb(250,195,49)" fg:x="148717865" fg:w="42969330"/><text x="60.1205%" y="1455.50">core::ptr::drop_in_place&lt;[c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (42,969,330 samples, 17.30%)</title><rect x="59.8705%" y="1429" width="17.2985%" height="15" fill="rgb(241,192,25)" fg:x="148717865" fg:w="42969330"/><text x="60.1205%" y="1439.50">core::ptr::drop_in_place&lt;cs..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (42,969,330 samples, 17.30%)</title><rect x="59.8705%" y="1413" width="17.2985%" height="15" fill="rgb(208,124,10)" fg:x="148717865" fg:w="42969330"/><text x="60.1205%" y="1423.50">core::ptr::drop_in_place&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,160,512 samples, 1.27%)</title><rect x="75.8967%" y="1397" width="1.2724%" height="15" fill="rgb(222,33,0)" fg:x="188526683" fg:w="3160512"/><text x="76.1467%" y="1407.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,160,512 samples, 1.27%)</title><rect x="75.8967%" y="1381" width="1.2724%" height="15" fill="rgb(234,209,28)" fg:x="188526683" fg:w="3160512"/><text x="76.1467%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,160,512 samples, 1.27%)</title><rect x="75.8967%" y="1365" width="1.2724%" height="15" fill="rgb(224,11,23)" fg:x="188526683" fg:w="3160512"/><text x="76.1467%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,160,512 samples, 1.27%)</title><rect x="75.8967%" y="1349" width="1.2724%" height="15" fill="rgb(232,99,1)" fg:x="188526683" fg:w="3160512"/><text x="76.1467%" y="1359.50"></text></g><g><title>alloc::alloc::dealloc (3,160,512 samples, 1.27%)</title><rect x="75.8967%" y="1333" width="1.2724%" height="15" fill="rgb(237,95,45)" fg:x="188526683" fg:w="3160512"/><text x="76.1467%" y="1343.50"></text></g><g><title>cfree (3,160,512 samples, 1.27%)</title><rect x="75.8967%" y="1317" width="1.2724%" height="15" fill="rgb(208,109,11)" fg:x="188526683" fg:w="3160512"/><text x="76.1467%" y="1327.50"></text></g><g><title>[libc.so.6] (3,160,512 samples, 1.27%)</title><rect x="75.8967%" y="1301" width="1.2724%" height="15" fill="rgb(216,190,48)" fg:x="188526683" fg:w="3160512"/><text x="76.1467%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (46,196,103 samples, 18.60%)</title><rect x="59.8705%" y="1685" width="18.5975%" height="15" fill="rgb(251,171,36)" fg:x="148717865" fg:w="46196103"/><text x="60.1205%" y="1695.50">core::ptr::drop_in_place&lt;css_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (46,196,103 samples, 18.60%)</title><rect x="59.8705%" y="1669" width="18.5975%" height="15" fill="rgb(230,62,22)" fg:x="148717865" fg:w="46196103"/><text x="60.1205%" y="1679.50">core::ptr::drop_in_place&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46,196,103 samples, 18.60%)</title><rect x="59.8705%" y="1653" width="18.5975%" height="15" fill="rgb(225,114,35)" fg:x="148717865" fg:w="46196103"/><text x="60.1205%" y="1663.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (46,196,103 samples, 18.60%)</title><rect x="59.8705%" y="1637" width="18.5975%" height="15" fill="rgb(215,118,42)" fg:x="148717865" fg:w="46196103"/><text x="60.1205%" y="1647.50">core::ptr::drop_in_place&lt;[css..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (46,196,103 samples, 18.60%)</title><rect x="59.8705%" y="1621" width="18.5975%" height="15" fill="rgb(243,119,21)" fg:x="148717865" fg:w="46196103"/><text x="60.1205%" y="1631.50">core::ptr::drop_in_place&lt;css_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (46,196,103 samples, 18.60%)</title><rect x="59.8705%" y="1605" width="18.5975%" height="15" fill="rgb(252,177,53)" fg:x="148717865" fg:w="46196103"/><text x="60.1205%" y="1615.50">core::ptr::drop_in_place&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46,196,103 samples, 18.60%)</title><rect x="59.8705%" y="1589" width="18.5975%" height="15" fill="rgb(237,209,29)" fg:x="148717865" fg:w="46196103"/><text x="60.1205%" y="1599.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (46,196,103 samples, 18.60%)</title><rect x="59.8705%" y="1573" width="18.5975%" height="15" fill="rgb(212,65,23)" fg:x="148717865" fg:w="46196103"/><text x="60.1205%" y="1583.50">core::ptr::drop_in_place&lt;[css..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (46,196,103 samples, 18.60%)</title><rect x="59.8705%" y="1557" width="18.5975%" height="15" fill="rgb(230,222,46)" fg:x="148717865" fg:w="46196103"/><text x="60.1205%" y="1567.50">core::ptr::drop_in_place&lt;css_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (46,196,103 samples, 18.60%)</title><rect x="59.8705%" y="1541" width="18.5975%" height="15" fill="rgb(215,135,32)" fg:x="148717865" fg:w="46196103"/><text x="60.1205%" y="1551.50">core::ptr::drop_in_place&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46,196,103 samples, 18.60%)</title><rect x="59.8705%" y="1525" width="18.5975%" height="15" fill="rgb(246,101,22)" fg:x="148717865" fg:w="46196103"/><text x="60.1205%" y="1535.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (46,196,103 samples, 18.60%)</title><rect x="59.8705%" y="1509" width="18.5975%" height="15" fill="rgb(206,107,13)" fg:x="148717865" fg:w="46196103"/><text x="60.1205%" y="1519.50">core::ptr::drop_in_place&lt;[css..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (46,196,103 samples, 18.60%)</title><rect x="59.8705%" y="1493" width="18.5975%" height="15" fill="rgb(250,100,44)" fg:x="148717865" fg:w="46196103"/><text x="60.1205%" y="1503.50">core::ptr::drop_in_place&lt;css_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (46,196,103 samples, 18.60%)</title><rect x="59.8705%" y="1477" width="18.5975%" height="15" fill="rgb(231,147,38)" fg:x="148717865" fg:w="46196103"/><text x="60.1205%" y="1487.50">core::ptr::drop_in_place&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,226,773 samples, 1.30%)</title><rect x="77.1690%" y="1461" width="1.2990%" height="15" fill="rgb(229,8,40)" fg:x="191687195" fg:w="3226773"/><text x="77.4190%" y="1471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,226,773 samples, 1.30%)</title><rect x="77.1690%" y="1445" width="1.2990%" height="15" fill="rgb(221,135,30)" fg:x="191687195" fg:w="3226773"/><text x="77.4190%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,226,773 samples, 1.30%)</title><rect x="77.1690%" y="1429" width="1.2990%" height="15" fill="rgb(249,193,18)" fg:x="191687195" fg:w="3226773"/><text x="77.4190%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,226,773 samples, 1.30%)</title><rect x="77.1690%" y="1413" width="1.2990%" height="15" fill="rgb(209,133,39)" fg:x="191687195" fg:w="3226773"/><text x="77.4190%" y="1423.50"></text></g><g><title>alloc::alloc::dealloc (3,226,773 samples, 1.30%)</title><rect x="77.1690%" y="1397" width="1.2990%" height="15" fill="rgb(232,100,14)" fg:x="191687195" fg:w="3226773"/><text x="77.4190%" y="1407.50"></text></g><g><title>cfree (3,226,773 samples, 1.30%)</title><rect x="77.1690%" y="1381" width="1.2990%" height="15" fill="rgb(224,185,1)" fg:x="191687195" fg:w="3226773"/><text x="77.4190%" y="1391.50"></text></g><g><title>[libc.so.6] (3,226,773 samples, 1.30%)</title><rect x="77.1690%" y="1365" width="1.2990%" height="15" fill="rgb(223,139,8)" fg:x="191687195" fg:w="3226773"/><text x="77.4190%" y="1375.50"></text></g><g><title>[libc.so.6] (3,226,773 samples, 1.30%)</title><rect x="77.1690%" y="1349" width="1.2990%" height="15" fill="rgb(232,213,38)" fg:x="191687195" fg:w="3226773"/><text x="77.4190%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,205,536 samples, 1.29%)</title><rect x="78.4680%" y="1557" width="1.2905%" height="15" fill="rgb(207,94,22)" fg:x="194913968" fg:w="3205536"/><text x="78.7180%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,205,536 samples, 1.29%)</title><rect x="78.4680%" y="1541" width="1.2905%" height="15" fill="rgb(219,183,54)" fg:x="194913968" fg:w="3205536"/><text x="78.7180%" y="1551.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (157,252,729 samples, 63.31%)</title><rect x="17.7425%" y="1701" width="63.3065%" height="15" fill="rgb(216,185,54)" fg:x="44072196" fg:w="157252729"/><text x="17.9925%" y="1711.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,410,957 samples, 2.58%)</title><rect x="78.4680%" y="1685" width="2.5809%" height="15" fill="rgb(254,217,39)" fg:x="194913968" fg:w="6410957"/><text x="78.7180%" y="1695.50">cs..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,410,957 samples, 2.58%)</title><rect x="78.4680%" y="1669" width="2.5809%" height="15" fill="rgb(240,178,23)" fg:x="194913968" fg:w="6410957"/><text x="78.7180%" y="1679.50">cs..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,410,957 samples, 2.58%)</title><rect x="78.4680%" y="1653" width="2.5809%" height="15" fill="rgb(218,11,47)" fg:x="194913968" fg:w="6410957"/><text x="78.7180%" y="1663.50">cs..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,410,957 samples, 2.58%)</title><rect x="78.4680%" y="1637" width="2.5809%" height="15" fill="rgb(218,51,51)" fg:x="194913968" fg:w="6410957"/><text x="78.7180%" y="1647.50">cs..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,410,957 samples, 2.58%)</title><rect x="78.4680%" y="1621" width="2.5809%" height="15" fill="rgb(238,126,27)" fg:x="194913968" fg:w="6410957"/><text x="78.7180%" y="1631.50">cs..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,410,957 samples, 2.58%)</title><rect x="78.4680%" y="1605" width="2.5809%" height="15" fill="rgb(249,202,22)" fg:x="194913968" fg:w="6410957"/><text x="78.7180%" y="1615.50">cs..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,410,957 samples, 2.58%)</title><rect x="78.4680%" y="1589" width="2.5809%" height="15" fill="rgb(254,195,49)" fg:x="194913968" fg:w="6410957"/><text x="78.7180%" y="1599.50">cs..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,410,957 samples, 2.58%)</title><rect x="78.4680%" y="1573" width="2.5809%" height="15" fill="rgb(208,123,14)" fg:x="194913968" fg:w="6410957"/><text x="78.7180%" y="1583.50">cs..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,205,421 samples, 1.29%)</title><rect x="79.7585%" y="1557" width="1.2904%" height="15" fill="rgb(224,200,8)" fg:x="198119504" fg:w="3205421"/><text x="80.0085%" y="1567.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,205,421 samples, 1.29%)</title><rect x="79.7585%" y="1541" width="1.2904%" height="15" fill="rgb(217,61,36)" fg:x="198119504" fg:w="3205421"/><text x="80.0085%" y="1551.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,205,421 samples, 1.29%)</title><rect x="79.7585%" y="1525" width="1.2904%" height="15" fill="rgb(206,35,45)" fg:x="198119504" fg:w="3205421"/><text x="80.0085%" y="1535.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,205,421 samples, 1.29%)</title><rect x="79.7585%" y="1509" width="1.2904%" height="15" fill="rgb(217,65,33)" fg:x="198119504" fg:w="3205421"/><text x="80.0085%" y="1519.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,205,421 samples, 1.29%)</title><rect x="79.7585%" y="1493" width="1.2904%" height="15" fill="rgb(222,158,48)" fg:x="198119504" fg:w="3205421"/><text x="80.0085%" y="1503.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,205,421 samples, 1.29%)</title><rect x="79.7585%" y="1477" width="1.2904%" height="15" fill="rgb(254,2,54)" fg:x="198119504" fg:w="3205421"/><text x="80.0085%" y="1487.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,205,421 samples, 1.29%)</title><rect x="79.7585%" y="1461" width="1.2904%" height="15" fill="rgb(250,143,38)" fg:x="198119504" fg:w="3205421"/><text x="80.0085%" y="1471.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,205,421 samples, 1.29%)</title><rect x="79.7585%" y="1445" width="1.2904%" height="15" fill="rgb(248,25,0)" fg:x="198119504" fg:w="3205421"/><text x="80.0085%" y="1455.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (2,711,530 samples, 1.09%)</title><rect x="81.2306%" y="1541" width="1.0916%" height="15" fill="rgb(206,152,27)" fg:x="201776269" fg:w="2711530"/><text x="81.4806%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,118,967 samples, 2.06%)</title><rect x="81.0489%" y="1685" width="2.0608%" height="15" fill="rgb(240,77,30)" fg:x="201324925" fg:w="5118967"/><text x="81.2989%" y="1695.50">&lt;..</text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (5,118,967 samples, 2.06%)</title><rect x="81.0489%" y="1669" width="2.0608%" height="15" fill="rgb(231,5,3)" fg:x="201324925" fg:w="5118967"/><text x="81.2989%" y="1679.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,118,967 samples, 2.06%)</title><rect x="81.0489%" y="1653" width="2.0608%" height="15" fill="rgb(207,226,32)" fg:x="201324925" fg:w="5118967"/><text x="81.2989%" y="1663.50">&lt;..</text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,118,967 samples, 2.06%)</title><rect x="81.0489%" y="1637" width="2.0608%" height="15" fill="rgb(222,207,47)" fg:x="201324925" fg:w="5118967"/><text x="81.2989%" y="1647.50">&lt;..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (5,118,967 samples, 2.06%)</title><rect x="81.0489%" y="1621" width="2.0608%" height="15" fill="rgb(229,115,45)" fg:x="201324925" fg:w="5118967"/><text x="81.2989%" y="1631.50">c..</text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (5,118,967 samples, 2.06%)</title><rect x="81.0489%" y="1605" width="2.0608%" height="15" fill="rgb(224,191,6)" fg:x="201324925" fg:w="5118967"/><text x="81.2989%" y="1615.50">&lt;..</text></g><g><title>core::slice::memchr::memchr (5,118,967 samples, 2.06%)</title><rect x="81.0489%" y="1589" width="2.0608%" height="15" fill="rgb(230,227,24)" fg:x="201324925" fg:w="5118967"/><text x="81.2989%" y="1599.50">c..</text></g><g><title>core::slice::memchr::memchr_aligned (5,118,967 samples, 2.06%)</title><rect x="81.0489%" y="1573" width="2.0608%" height="15" fill="rgb(228,80,19)" fg:x="201324925" fg:w="5118967"/><text x="81.2989%" y="1583.50">c..</text></g><g><title>core::slice::memchr::memchr_aligned::runtime (5,118,967 samples, 2.06%)</title><rect x="81.0489%" y="1557" width="2.0608%" height="15" fill="rgb(247,229,0)" fg:x="201324925" fg:w="5118967"/><text x="81.2989%" y="1567.50">c..</text></g><g><title>core::slice::memchr::memchr_naive (1,956,093 samples, 0.79%)</title><rect x="82.3223%" y="1541" width="0.7875%" height="15" fill="rgb(237,194,15)" fg:x="204487799" fg:w="1956093"/><text x="82.5723%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,419,118 samples, 1.78%)</title><rect x="83.1097%" y="1685" width="1.7790%" height="15" fill="rgb(219,203,20)" fg:x="206443892" fg:w="4419118"/><text x="83.3597%" y="1695.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,419,118 samples, 1.78%)</title><rect x="83.1097%" y="1669" width="1.7790%" height="15" fill="rgb(234,128,8)" fg:x="206443892" fg:w="4419118"/><text x="83.3597%" y="1679.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,419,118 samples, 1.78%)</title><rect x="83.1097%" y="1653" width="1.7790%" height="15" fill="rgb(248,202,8)" fg:x="206443892" fg:w="4419118"/><text x="83.3597%" y="1663.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,419,118 samples, 1.78%)</title><rect x="83.1097%" y="1637" width="1.7790%" height="15" fill="rgb(206,104,37)" fg:x="206443892" fg:w="4419118"/><text x="83.3597%" y="1647.50">&lt;..</text></g><g><title>core::mem::drop (4,419,118 samples, 1.78%)</title><rect x="83.1097%" y="1621" width="1.7790%" height="15" fill="rgb(223,8,27)" fg:x="206443892" fg:w="4419118"/><text x="83.3597%" y="1631.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,419,118 samples, 1.78%)</title><rect x="83.1097%" y="1605" width="1.7790%" height="15" fill="rgb(216,217,28)" fg:x="206443892" fg:w="4419118"/><text x="83.3597%" y="1615.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,419,118 samples, 1.78%)</title><rect x="83.1097%" y="1589" width="1.7790%" height="15" fill="rgb(249,199,1)" fg:x="206443892" fg:w="4419118"/><text x="83.3597%" y="1599.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1573" width="0.8620%" height="15" fill="rgb(240,85,17)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1557" width="0.8620%" height="15" fill="rgb(206,108,45)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1541" width="0.8620%" height="15" fill="rgb(245,210,41)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1551.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1525" width="0.8620%" height="15" fill="rgb(206,13,37)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1509" width="0.8620%" height="15" fill="rgb(250,61,18)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1493" width="0.8620%" height="15" fill="rgb(235,172,48)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1477" width="0.8620%" height="15" fill="rgb(249,201,17)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1461" width="0.8620%" height="15" fill="rgb(219,208,6)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1471.50"></text></g><g><title>core::mem::drop (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1445" width="0.8620%" height="15" fill="rgb(248,31,23)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1429" width="0.8620%" height="15" fill="rgb(245,15,42)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1439.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1413" width="0.8620%" height="15" fill="rgb(222,217,39)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1423.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1397" width="0.8620%" height="15" fill="rgb(210,219,27)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1407.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1381" width="0.8620%" height="15" fill="rgb(252,166,36)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1365" width="0.8620%" height="15" fill="rgb(245,132,34)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1349" width="0.8620%" height="15" fill="rgb(236,54,3)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1333" width="0.8620%" height="15" fill="rgb(241,173,43)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1317" width="0.8620%" height="15" fill="rgb(215,190,9)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1301" width="0.8620%" height="15" fill="rgb(242,101,16)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1285" width="0.8620%" height="15" fill="rgb(223,190,21)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1269" width="0.8620%" height="15" fill="rgb(215,228,25)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1279.50"></text></g><g><title>cfree (2,141,172 samples, 0.86%)</title><rect x="84.0268%" y="1253" width="0.8620%" height="15" fill="rgb(225,36,22)" fg:x="208721838" fg:w="2141172"/><text x="84.2768%" y="1263.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1573" width="0.7143%" height="15" fill="rgb(251,106,46)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1583.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1557" width="0.7143%" height="15" fill="rgb(208,90,1)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1567.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1541" width="0.7143%" height="15" fill="rgb(243,10,4)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1551.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1525" width="0.7143%" height="15" fill="rgb(212,137,27)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1535.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1509" width="0.7143%" height="15" fill="rgb(231,220,49)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1519.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1493" width="0.7143%" height="15" fill="rgb(237,96,20)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1503.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1477" width="0.7143%" height="15" fill="rgb(239,229,30)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1461" width="0.7143%" height="15" fill="rgb(219,65,33)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1445" width="0.7143%" height="15" fill="rgb(243,134,7)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1429" width="0.7143%" height="15" fill="rgb(216,177,54)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1439.50"></text></g><g><title>alloc::slice::hack::to_vec (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1413" width="0.7143%" height="15" fill="rgb(211,160,20)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1423.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1397" width="0.7143%" height="15" fill="rgb(239,85,39)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1381" width="0.7143%" height="15" fill="rgb(232,125,22)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1365" width="0.7143%" height="15" fill="rgb(244,57,34)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1349" width="0.7143%" height="15" fill="rgb(214,203,32)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1333" width="0.7143%" height="15" fill="rgb(207,58,43)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1317" width="0.7143%" height="15" fill="rgb(215,193,15)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1327.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1301" width="0.7143%" height="15" fill="rgb(232,15,44)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1311.50"></text></g><g><title>alloc::alloc::alloc (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1285" width="0.7143%" height="15" fill="rgb(212,3,48)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1295.50"></text></g><g><title>malloc (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1269" width="0.7143%" height="15" fill="rgb(218,128,7)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1279.50"></text></g><g><title>[libc.so.6] (1,774,370 samples, 0.71%)</title><rect x="84.8888%" y="1253" width="0.7143%" height="15" fill="rgb(226,216,39)" fg:x="210863010" fg:w="1774370"/><text x="85.1388%" y="1263.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,206,680 samples, 0.49%)</title><rect x="85.6031%" y="1189" width="0.4858%" height="15" fill="rgb(243,47,51)" fg:x="212637380" fg:w="1206680"/><text x="85.8531%" y="1199.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,206,680 samples, 0.49%)</title><rect x="85.6031%" y="1173" width="0.4858%" height="15" fill="rgb(241,183,40)" fg:x="212637380" fg:w="1206680"/><text x="85.8531%" y="1183.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,206,680 samples, 0.49%)</title><rect x="85.6031%" y="1157" width="0.4858%" height="15" fill="rgb(231,217,32)" fg:x="212637380" fg:w="1206680"/><text x="85.8531%" y="1167.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,367,140 samples, 0.95%)</title><rect x="86.0889%" y="1189" width="0.9530%" height="15" fill="rgb(229,61,38)" fg:x="213844060" fg:w="2367140"/><text x="86.3389%" y="1199.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,367,140 samples, 0.95%)</title><rect x="86.0889%" y="1173" width="0.9530%" height="15" fill="rgb(225,210,5)" fg:x="213844060" fg:w="2367140"/><text x="86.3389%" y="1183.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,367,140 samples, 0.95%)</title><rect x="86.0889%" y="1157" width="0.9530%" height="15" fill="rgb(231,79,45)" fg:x="213844060" fg:w="2367140"/><text x="86.3389%" y="1167.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,367,140 samples, 0.95%)</title><rect x="86.0889%" y="1141" width="0.9530%" height="15" fill="rgb(224,100,7)" fg:x="213844060" fg:w="2367140"/><text x="86.3389%" y="1151.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (2,367,140 samples, 0.95%)</title><rect x="86.0889%" y="1125" width="0.9530%" height="15" fill="rgb(241,198,18)" fg:x="213844060" fg:w="2367140"/><text x="86.3389%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,407,057 samples, 0.57%)</title><rect x="87.0418%" y="837" width="0.5664%" height="15" fill="rgb(252,97,53)" fg:x="216211200" fg:w="1407057"/><text x="87.2918%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,407,057 samples, 0.57%)</title><rect x="87.0418%" y="821" width="0.5664%" height="15" fill="rgb(220,88,7)" fg:x="216211200" fg:w="1407057"/><text x="87.2918%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,407,057 samples, 0.57%)</title><rect x="87.0418%" y="805" width="0.5664%" height="15" fill="rgb(213,176,14)" fg:x="216211200" fg:w="1407057"/><text x="87.2918%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,407,057 samples, 0.57%)</title><rect x="87.0418%" y="789" width="0.5664%" height="15" fill="rgb(246,73,7)" fg:x="216211200" fg:w="1407057"/><text x="87.2918%" y="799.50"></text></g><g><title>serde::de::MapAccess::next_entry (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1493" width="2.6853%" height="15" fill="rgb(245,64,36)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1503.50">se..</text></g><g><title>serde::de::MapAccess::next_entry_seed (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1477" width="2.6853%" height="15" fill="rgb(245,80,10)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1487.50">se..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1461" width="2.6853%" height="15" fill="rgb(232,107,50)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1471.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1445" width="2.6853%" height="15" fill="rgb(253,3,0)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1455.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1429" width="2.6853%" height="15" fill="rgb(212,99,53)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1439.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1413" width="2.6853%" height="15" fill="rgb(249,111,54)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1423.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1397" width="2.6853%" height="15" fill="rgb(249,55,30)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1407.50">&lt;s..</text></g><g><title>serde::de::SeqAccess::next_element (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1381" width="2.6853%" height="15" fill="rgb(237,47,42)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1391.50">se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1365" width="2.6853%" height="15" fill="rgb(211,20,18)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1375.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1349" width="2.6853%" height="15" fill="rgb(231,203,46)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1359.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1333" width="2.6853%" height="15" fill="rgb(237,142,3)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1343.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1317" width="2.6853%" height="15" fill="rgb(241,107,1)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1327.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1301" width="2.6853%" height="15" fill="rgb(229,83,13)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1311.50">&lt;s..</text></g><g><title>serde::de::MapAccess::next_entry (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1285" width="2.6853%" height="15" fill="rgb(241,91,40)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1295.50">se..</text></g><g><title>serde::de::MapAccess::next_entry_seed (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1269" width="2.6853%" height="15" fill="rgb(225,3,45)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1279.50">se..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1253" width="2.6853%" height="15" fill="rgb(244,223,14)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1263.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1237" width="2.6853%" height="15" fill="rgb(224,124,37)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1247.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1221" width="2.6853%" height="15" fill="rgb(251,171,30)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1231.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,670,346 samples, 2.69%)</title><rect x="85.6031%" y="1205" width="2.6853%" height="15" fill="rgb(236,46,54)" fg:x="212637380" fg:w="6670346"/><text x="85.8531%" y="1215.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="1189" width="1.2466%" height="15" fill="rgb(245,213,5)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="1199.50"></text></g><g><title>serde::de::SeqAccess::next_element (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="1173" width="1.2466%" height="15" fill="rgb(230,144,27)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="1183.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="1157" width="1.2466%" height="15" fill="rgb(220,86,6)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="1167.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="1141" width="1.2466%" height="15" fill="rgb(240,20,13)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="1151.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="1125" width="1.2466%" height="15" fill="rgb(217,89,34)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="1135.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="1109" width="1.2466%" height="15" fill="rgb(229,13,5)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="1119.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="1093" width="1.2466%" height="15" fill="rgb(244,67,35)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="1103.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="1077" width="1.2466%" height="15" fill="rgb(221,40,2)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="1087.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="1061" width="1.2466%" height="15" fill="rgb(237,157,21)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="1071.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="1045" width="1.2466%" height="15" fill="rgb(222,94,11)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="1055.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="1029" width="1.2466%" height="15" fill="rgb(249,113,6)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="1039.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="1013" width="1.2466%" height="15" fill="rgb(238,137,36)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="1023.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="997" width="1.2466%" height="15" fill="rgb(210,102,26)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="1007.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="981" width="1.2466%" height="15" fill="rgb(218,30,30)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="991.50"></text></g><g><title>serde::de::SeqAccess::next_element (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="965" width="1.2466%" height="15" fill="rgb(214,67,26)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="975.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="949" width="1.2466%" height="15" fill="rgb(251,9,53)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="933" width="1.2466%" height="15" fill="rgb(228,204,25)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="943.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="917" width="1.2466%" height="15" fill="rgb(207,153,8)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="901" width="1.2466%" height="15" fill="rgb(242,9,16)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="911.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="885" width="1.2466%" height="15" fill="rgb(217,211,10)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="895.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="869" width="1.2466%" height="15" fill="rgb(219,228,52)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3,096,526 samples, 1.25%)</title><rect x="87.0418%" y="853" width="1.2466%" height="15" fill="rgb(231,92,29)" fg:x="216211200" fg:w="3096526"/><text x="87.2918%" y="863.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,689,469 samples, 0.68%)</title><rect x="87.6083%" y="837" width="0.6801%" height="15" fill="rgb(232,8,23)" fg:x="217618257" fg:w="1689469"/><text x="87.8583%" y="847.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,689,469 samples, 0.68%)</title><rect x="87.6083%" y="821" width="0.6801%" height="15" fill="rgb(216,211,34)" fg:x="217618257" fg:w="1689469"/><text x="87.8583%" y="831.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,137,196 samples, 4.08%)</title><rect x="85.6031%" y="1509" width="4.0810%" height="15" fill="rgb(236,151,0)" fg:x="212637380" fg:w="10137196"/><text x="85.8531%" y="1519.50">&lt;ser..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (3,466,850 samples, 1.40%)</title><rect x="88.2884%" y="1493" width="1.3957%" height="15" fill="rgb(209,168,3)" fg:x="219307726" fg:w="3466850"/><text x="88.5384%" y="1503.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3,466,850 samples, 1.40%)</title><rect x="88.2884%" y="1477" width="1.3957%" height="15" fill="rgb(208,129,28)" fg:x="219307726" fg:w="3466850"/><text x="88.5384%" y="1487.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3,466,850 samples, 1.40%)</title><rect x="88.2884%" y="1461" width="1.3957%" height="15" fill="rgb(229,78,22)" fg:x="219307726" fg:w="3466850"/><text x="88.5384%" y="1471.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (3,466,850 samples, 1.40%)</title><rect x="88.2884%" y="1445" width="1.3957%" height="15" fill="rgb(228,187,13)" fg:x="219307726" fg:w="3466850"/><text x="88.5384%" y="1455.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (949,758 samples, 0.38%)</title><rect x="89.3018%" y="1429" width="0.3824%" height="15" fill="rgb(240,119,24)" fg:x="221824818" fg:w="949758"/><text x="89.5518%" y="1439.50"></text></g><g><title>benchmark::parse_web_layout_trace (24,133,473 samples, 9.72%)</title><rect x="81.0489%" y="1701" width="9.7156%" height="15" fill="rgb(209,194,42)" fg:x="201324925" fg:w="24133473"/><text x="81.2989%" y="1711.50">benchmark::par..</text></g><g><title>serde_json::de::from_str (14,595,388 samples, 5.88%)</title><rect x="84.8888%" y="1685" width="5.8758%" height="15" fill="rgb(247,200,46)" fg:x="210863010" fg:w="14595388"/><text x="85.1388%" y="1695.50">serde_j..</text></g><g><title>serde_json::de::from_trait (14,595,388 samples, 5.88%)</title><rect x="84.8888%" y="1669" width="5.8758%" height="15" fill="rgb(218,76,16)" fg:x="210863010" fg:w="14595388"/><text x="85.1388%" y="1679.50">serde_j..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,595,388 samples, 5.88%)</title><rect x="84.8888%" y="1653" width="5.8758%" height="15" fill="rgb(225,21,48)" fg:x="210863010" fg:w="14595388"/><text x="85.1388%" y="1663.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,595,388 samples, 5.88%)</title><rect x="84.8888%" y="1637" width="5.8758%" height="15" fill="rgb(239,223,50)" fg:x="210863010" fg:w="14595388"/><text x="85.1388%" y="1647.50">&lt;&amp;mut s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14,595,388 samples, 5.88%)</title><rect x="84.8888%" y="1621" width="5.8758%" height="15" fill="rgb(244,45,21)" fg:x="210863010" fg:w="14595388"/><text x="85.1388%" y="1631.50">&lt;serde_..</text></g><g><title>serde::de::MapAccess::next_entry (14,595,388 samples, 5.88%)</title><rect x="84.8888%" y="1605" width="5.8758%" height="15" fill="rgb(232,33,43)" fg:x="210863010" fg:w="14595388"/><text x="85.1388%" y="1615.50">serde::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (14,595,388 samples, 5.88%)</title><rect x="84.8888%" y="1589" width="5.8758%" height="15" fill="rgb(209,8,3)" fg:x="210863010" fg:w="14595388"/><text x="85.1388%" y="1599.50">serde::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,821,018 samples, 5.16%)</title><rect x="85.6031%" y="1573" width="5.1615%" height="15" fill="rgb(214,25,53)" fg:x="212637380" fg:w="12821018"/><text x="85.8531%" y="1583.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,821,018 samples, 5.16%)</title><rect x="85.6031%" y="1557" width="5.1615%" height="15" fill="rgb(254,186,54)" fg:x="212637380" fg:w="12821018"/><text x="85.8531%" y="1567.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,821,018 samples, 5.16%)</title><rect x="85.6031%" y="1541" width="5.1615%" height="15" fill="rgb(208,174,49)" fg:x="212637380" fg:w="12821018"/><text x="85.8531%" y="1551.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,821,018 samples, 5.16%)</title><rect x="85.6031%" y="1525" width="5.1615%" height="15" fill="rgb(233,191,51)" fg:x="212637380" fg:w="12821018"/><text x="85.8531%" y="1535.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,683,822 samples, 1.08%)</title><rect x="89.6841%" y="1509" width="1.0804%" height="15" fill="rgb(222,134,10)" fg:x="222774576" fg:w="2683822"/><text x="89.9341%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,683,822 samples, 1.08%)</title><rect x="89.6841%" y="1493" width="1.0804%" height="15" fill="rgb(230,226,20)" fg:x="222774576" fg:w="2683822"/><text x="89.9341%" y="1503.50"></text></g><g><title>core::ptr::write (2,683,822 samples, 1.08%)</title><rect x="89.6841%" y="1477" width="1.0804%" height="15" fill="rgb(251,111,25)" fg:x="222774576" fg:w="2683822"/><text x="89.9341%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1685" width="1.2280%" height="15" fill="rgb(224,40,46)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1669" width="1.2280%" height="15" fill="rgb(236,108,47)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1653" width="1.2280%" height="15" fill="rgb(234,93,0)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1637" width="1.2280%" height="15" fill="rgb(224,213,32)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1621" width="1.2280%" height="15" fill="rgb(251,11,48)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1605" width="1.2280%" height="15" fill="rgb(236,173,5)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1589" width="1.2280%" height="15" fill="rgb(230,95,12)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1599.50"></text></g><g><title>core::mem::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1573" width="1.2280%" height="15" fill="rgb(232,209,1)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1557" width="1.2280%" height="15" fill="rgb(232,6,1)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1541" width="1.2280%" height="15" fill="rgb(210,224,50)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1525" width="1.2280%" height="15" fill="rgb(228,127,35)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1509" width="1.2280%" height="15" fill="rgb(245,102,45)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1519.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1493" width="1.2280%" height="15" fill="rgb(214,1,49)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1503.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1477" width="1.2280%" height="15" fill="rgb(226,163,40)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1461" width="1.2280%" height="15" fill="rgb(239,212,28)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1445" width="1.2280%" height="15" fill="rgb(220,20,13)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1429" width="1.2280%" height="15" fill="rgb(210,164,35)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1439.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1413" width="1.2280%" height="15" fill="rgb(248,109,41)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1423.50"></text></g><g><title>core::mem::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1397" width="1.2280%" height="15" fill="rgb(238,23,50)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1381" width="1.2280%" height="15" fill="rgb(211,48,49)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1365" width="1.2280%" height="15" fill="rgb(223,36,21)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1375.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1349" width="1.2280%" height="15" fill="rgb(207,123,46)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1333" width="1.2280%" height="15" fill="rgb(240,218,32)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1317" width="1.2280%" height="15" fill="rgb(252,5,43)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1327.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1301" width="1.2280%" height="15" fill="rgb(252,84,19)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1285" width="1.2280%" height="15" fill="rgb(243,152,39)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1269" width="1.2280%" height="15" fill="rgb(234,160,15)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1253" width="1.2280%" height="15" fill="rgb(237,34,20)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1237" width="1.2280%" height="15" fill="rgb(229,97,13)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1221" width="1.2280%" height="15" fill="rgb(234,71,50)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1205" width="1.2280%" height="15" fill="rgb(253,155,4)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1189" width="1.2280%" height="15" fill="rgb(222,185,37)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1173" width="1.2280%" height="15" fill="rgb(251,177,13)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1183.50"></text></g><g><title>core::mem::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1157" width="1.2280%" height="15" fill="rgb(250,179,40)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1141" width="1.2280%" height="15" fill="rgb(242,44,2)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1125" width="1.2280%" height="15" fill="rgb(216,177,13)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1109" width="1.2280%" height="15" fill="rgb(216,106,43)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1093" width="1.2280%" height="15" fill="rgb(216,183,2)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1077" width="1.2280%" height="15" fill="rgb(249,75,3)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1087.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1061" width="1.2280%" height="15" fill="rgb(219,67,39)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1045" width="1.2280%" height="15" fill="rgb(253,228,2)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1029" width="1.2280%" height="15" fill="rgb(235,138,27)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="1013" width="1.2280%" height="15" fill="rgb(236,97,51)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="997" width="1.2280%" height="15" fill="rgb(240,80,30)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="981" width="1.2280%" height="15" fill="rgb(230,178,19)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="965" width="1.2280%" height="15" fill="rgb(210,190,27)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="949" width="1.2280%" height="15" fill="rgb(222,107,31)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="933" width="1.2280%" height="15" fill="rgb(216,127,34)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="943.50"></text></g><g><title>core::mem::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="917" width="1.2280%" height="15" fill="rgb(234,116,52)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="901" width="1.2280%" height="15" fill="rgb(222,124,15)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="885" width="1.2280%" height="15" fill="rgb(231,179,28)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="869" width="1.2280%" height="15" fill="rgb(226,93,45)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="853" width="1.2280%" height="15" fill="rgb(215,8,51)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="837" width="1.2280%" height="15" fill="rgb(223,106,5)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="847.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="821" width="1.2280%" height="15" fill="rgb(250,191,5)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="805" width="1.2280%" height="15" fill="rgb(242,132,44)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="789" width="1.2280%" height="15" fill="rgb(251,152,29)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="773" width="1.2280%" height="15" fill="rgb(218,179,5)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="757" width="1.2280%" height="15" fill="rgb(227,67,19)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="741" width="1.2280%" height="15" fill="rgb(233,119,31)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="725" width="1.2280%" height="15" fill="rgb(241,120,22)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="709" width="1.2280%" height="15" fill="rgb(224,102,30)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="693" width="1.2280%" height="15" fill="rgb(210,164,37)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="703.50"></text></g><g><title>core::mem::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="677" width="1.2280%" height="15" fill="rgb(226,191,16)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="661" width="1.2280%" height="15" fill="rgb(214,40,45)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="645" width="1.2280%" height="15" fill="rgb(244,29,26)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="629" width="1.2280%" height="15" fill="rgb(216,16,5)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="639.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="613" width="1.2280%" height="15" fill="rgb(249,76,35)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="597" width="1.2280%" height="15" fill="rgb(207,11,44)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="581" width="1.2280%" height="15" fill="rgb(228,190,49)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="565" width="1.2280%" height="15" fill="rgb(214,173,12)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="549" width="1.2280%" height="15" fill="rgb(218,26,35)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="533" width="1.2280%" height="15" fill="rgb(220,200,19)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="517" width="1.2280%" height="15" fill="rgb(239,95,49)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="501" width="1.2280%" height="15" fill="rgb(235,85,53)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="511.50"></text></g><g><title>cfree (3,050,272 samples, 1.23%)</title><rect x="90.7645%" y="485" width="1.2280%" height="15" fill="rgb(233,133,31)" fg:x="225458398" fg:w="3050272"/><text x="91.0145%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (6,129,799 samples, 2.47%)</title><rect x="90.7645%" y="1701" width="2.4677%" height="15" fill="rgb(218,25,20)" fg:x="225458398" fg:w="6129799"/><text x="91.0145%" y="1711.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (3,079,527 samples, 1.24%)</title><rect x="91.9925%" y="1685" width="1.2397%" height="15" fill="rgb(252,210,38)" fg:x="228508670" fg:w="3079527"/><text x="92.2425%" y="1695.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,079,527 samples, 1.24%)</title><rect x="91.9925%" y="1669" width="1.2397%" height="15" fill="rgb(242,134,21)" fg:x="228508670" fg:w="3079527"/><text x="92.2425%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,079,527 samples, 1.24%)</title><rect x="91.9925%" y="1653" width="1.2397%" height="15" fill="rgb(213,28,48)" fg:x="228508670" fg:w="3079527"/><text x="92.2425%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,079,527 samples, 1.24%)</title><rect x="91.9925%" y="1637" width="1.2397%" height="15" fill="rgb(250,196,2)" fg:x="228508670" fg:w="3079527"/><text x="92.2425%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (3,079,527 samples, 1.24%)</title><rect x="91.9925%" y="1621" width="1.2397%" height="15" fill="rgb(227,5,17)" fg:x="228508670" fg:w="3079527"/><text x="92.2425%" y="1631.50"></text></g><g><title>cfree (3,079,527 samples, 1.24%)</title><rect x="91.9925%" y="1605" width="1.2397%" height="15" fill="rgb(221,226,24)" fg:x="228508670" fg:w="3079527"/><text x="92.2425%" y="1615.50"></text></g><g><title>[libc.so.6] (3,079,527 samples, 1.24%)</title><rect x="91.9925%" y="1589" width="1.2397%" height="15" fill="rgb(211,5,48)" fg:x="228508670" fg:w="3079527"/><text x="92.2425%" y="1599.50"></text></g><g><title>[libc.so.6] (3,079,527 samples, 1.24%)</title><rect x="91.9925%" y="1573" width="1.2397%" height="15" fill="rgb(219,150,6)" fg:x="228508670" fg:w="3079527"/><text x="92.2425%" y="1583.50"></text></g><g><title>std::panic::catch_unwind (213,667,874 samples, 86.02%)</title><rect x="8.4606%" y="1845" width="86.0179%" height="15" fill="rgb(251,46,16)" fg:x="21015976" fg:w="213667874"/><text x="8.7106%" y="1855.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (213,667,874 samples, 86.02%)</title><rect x="8.4606%" y="1829" width="86.0179%" height="15" fill="rgb(220,204,40)" fg:x="21015976" fg:w="213667874"/><text x="8.7106%" y="1839.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (213,667,874 samples, 86.02%)</title><rect x="8.4606%" y="1813" width="86.0179%" height="15" fill="rgb(211,85,2)" fg:x="21015976" fg:w="213667874"/><text x="8.7106%" y="1823.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (213,667,874 samples, 86.02%)</title><rect x="8.4606%" y="1797" width="86.0179%" height="15" fill="rgb(229,17,7)" fg:x="21015976" fg:w="213667874"/><text x="8.7106%" y="1807.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (213,667,874 samples, 86.02%)</title><rect x="8.4606%" y="1781" width="86.0179%" height="15" fill="rgb(239,72,28)" fg:x="21015976" fg:w="213667874"/><text x="8.7106%" y="1791.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (213,667,874 samples, 86.02%)</title><rect x="8.4606%" y="1765" width="86.0179%" height="15" fill="rgb(230,47,54)" fg:x="21015976" fg:w="213667874"/><text x="8.7106%" y="1775.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (213,667,874 samples, 86.02%)</title><rect x="8.4606%" y="1749" width="86.0179%" height="15" fill="rgb(214,50,8)" fg:x="21015976" fg:w="213667874"/><text x="8.7106%" y="1759.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (213,667,874 samples, 86.02%)</title><rect x="8.4606%" y="1733" width="86.0179%" height="15" fill="rgb(216,198,43)" fg:x="21015976" fg:w="213667874"/><text x="8.7106%" y="1743.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (213,667,874 samples, 86.02%)</title><rect x="8.4606%" y="1717" width="86.0179%" height="15" fill="rgb(234,20,35)" fg:x="21015976" fg:w="213667874"/><text x="8.7106%" y="1727.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1701" width="1.2462%" height="15" fill="rgb(254,45,19)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1685" width="1.2462%" height="15" fill="rgb(219,14,44)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1669" width="1.2462%" height="15" fill="rgb(217,220,26)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1653" width="1.2462%" height="15" fill="rgb(213,158,28)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1637" width="1.2462%" height="15" fill="rgb(252,51,52)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1621" width="1.2462%" height="15" fill="rgb(246,89,16)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1605" width="1.2462%" height="15" fill="rgb(216,158,49)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1589" width="1.2462%" height="15" fill="rgb(236,107,19)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1573" width="1.2462%" height="15" fill="rgb(228,185,30)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1557" width="1.2462%" height="15" fill="rgb(246,134,8)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1541" width="1.2462%" height="15" fill="rgb(214,143,50)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1525" width="1.2462%" height="15" fill="rgb(228,75,8)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1509" width="1.2462%" height="15" fill="rgb(207,175,4)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1493" width="1.2462%" height="15" fill="rgb(205,108,24)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1477" width="1.2462%" height="15" fill="rgb(244,120,49)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1461" width="1.2462%" height="15" fill="rgb(223,47,38)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1445" width="1.2462%" height="15" fill="rgb(229,179,11)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1429" width="1.2462%" height="15" fill="rgb(231,122,1)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1413" width="1.2462%" height="15" fill="rgb(245,119,9)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1397" width="1.2462%" height="15" fill="rgb(241,163,25)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1381" width="1.2462%" height="15" fill="rgb(217,214,3)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1365" width="1.2462%" height="15" fill="rgb(240,86,28)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1349" width="1.2462%" height="15" fill="rgb(215,47,9)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1333" width="1.2462%" height="15" fill="rgb(252,25,45)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1317" width="1.2462%" height="15" fill="rgb(251,164,9)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1301" width="1.2462%" height="15" fill="rgb(233,194,0)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1285" width="1.2462%" height="15" fill="rgb(249,111,24)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1269" width="1.2462%" height="15" fill="rgb(250,223,3)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1253" width="1.2462%" height="15" fill="rgb(236,178,37)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1237" width="1.2462%" height="15" fill="rgb(241,158,50)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1221" width="1.2462%" height="15" fill="rgb(213,121,41)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1231.50"></text></g><g><title>cfree (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1205" width="1.2462%" height="15" fill="rgb(240,92,3)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1215.50"></text></g><g><title>[libc.so.6] (3,095,653 samples, 1.25%)</title><rect x="93.2323%" y="1189" width="1.2462%" height="15" fill="rgb(205,123,3)" fg:x="231588197" fg:w="3095653"/><text x="93.4823%" y="1199.50"></text></g><g><title>_start (214,169,378 samples, 86.22%)</title><rect x="8.4606%" y="1989" width="86.2198%" height="15" fill="rgb(205,97,47)" fg:x="21015976" fg:w="214169378"/><text x="8.7106%" y="1999.50">_start</text></g><g><title>__libc_start_main (214,169,378 samples, 86.22%)</title><rect x="8.4606%" y="1973" width="86.2198%" height="15" fill="rgb(247,152,14)" fg:x="21015976" fg:w="214169378"/><text x="8.7106%" y="1983.50">__libc_start_main</text></g><g><title>[libc.so.6] (214,169,378 samples, 86.22%)</title><rect x="8.4606%" y="1957" width="86.2198%" height="15" fill="rgb(248,195,53)" fg:x="21015976" fg:w="214169378"/><text x="8.7106%" y="1967.50">[libc.so.6]</text></g><g><title>main (214,169,378 samples, 86.22%)</title><rect x="8.4606%" y="1941" width="86.2198%" height="15" fill="rgb(226,201,16)" fg:x="21015976" fg:w="214169378"/><text x="8.7106%" y="1951.50">main</text></g><g><title>std::rt::lang_start_internal (214,169,378 samples, 86.22%)</title><rect x="8.4606%" y="1925" width="86.2198%" height="15" fill="rgb(205,98,0)" fg:x="21015976" fg:w="214169378"/><text x="8.7106%" y="1935.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (214,169,378 samples, 86.22%)</title><rect x="8.4606%" y="1909" width="86.2198%" height="15" fill="rgb(214,191,48)" fg:x="21015976" fg:w="214169378"/><text x="8.7106%" y="1919.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (214,169,378 samples, 86.22%)</title><rect x="8.4606%" y="1893" width="86.2198%" height="15" fill="rgb(237,112,39)" fg:x="21015976" fg:w="214169378"/><text x="8.7106%" y="1903.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (214,169,378 samples, 86.22%)</title><rect x="8.4606%" y="1877" width="86.2198%" height="15" fill="rgb(247,203,27)" fg:x="21015976" fg:w="214169378"/><text x="8.7106%" y="1887.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (214,169,378 samples, 86.22%)</title><rect x="8.4606%" y="1861" width="86.2198%" height="15" fill="rgb(235,124,28)" fg:x="21015976" fg:w="214169378"/><text x="8.7106%" y="1871.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::rt::init (501,504 samples, 0.20%)</title><rect x="94.4785%" y="1845" width="0.2019%" height="15" fill="rgb(208,207,46)" fg:x="234683850" fg:w="501504"/><text x="94.7285%" y="1855.50"></text></g><g><title>std::sys::pal::unix::init (501,504 samples, 0.20%)</title><rect x="94.4785%" y="1829" width="0.2019%" height="15" fill="rgb(234,176,4)" fg:x="234683850" fg:w="501504"/><text x="94.7285%" y="1839.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::init (501,504 samples, 0.20%)</title><rect x="94.4785%" y="1813" width="0.2019%" height="15" fill="rgb(230,133,28)" fg:x="234683850" fg:w="501504"/><text x="94.7285%" y="1823.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard (501,504 samples, 0.20%)</title><rect x="94.4785%" y="1797" width="0.2019%" height="15" fill="rgb(211,137,40)" fg:x="234683850" fg:w="501504"/><text x="94.7285%" y="1807.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard_linux (501,504 samples, 0.20%)</title><rect x="94.4785%" y="1781" width="0.2019%" height="15" fill="rgb(254,35,13)" fg:x="234683850" fg:w="501504"/><text x="94.7285%" y="1791.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::stack_start_aligned (501,504 samples, 0.20%)</title><rect x="94.4785%" y="1765" width="0.2019%" height="15" fill="rgb(225,49,51)" fg:x="234683850" fg:w="501504"/><text x="94.7285%" y="1775.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack_start (501,504 samples, 0.20%)</title><rect x="94.4785%" y="1749" width="0.2019%" height="15" fill="rgb(251,10,15)" fg:x="234683850" fg:w="501504"/><text x="94.7285%" y="1759.50"></text></g><g><title>pthread_getattr_np (501,504 samples, 0.20%)</title><rect x="94.4785%" y="1733" width="0.2019%" height="15" fill="rgb(228,207,15)" fg:x="234683850" fg:w="501504"/><text x="94.7285%" y="1743.50"></text></g><g><title>__isoc23_sscanf (501,504 samples, 0.20%)</title><rect x="94.4785%" y="1717" width="0.2019%" height="15" fill="rgb(241,99,19)" fg:x="234683850" fg:w="501504"/><text x="94.7285%" y="1727.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.20%)</title><rect x="94.4785%" y="1701" width="0.2019%" height="15" fill="rgb(207,104,49)" fg:x="234683850" fg:w="501504"/><text x="94.7285%" y="1711.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.20%)</title><rect x="94.4785%" y="1685" width="0.2019%" height="15" fill="rgb(234,99,18)" fg:x="234683850" fg:w="501504"/><text x="94.7285%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3,079,488 samples, 1.24%)</title><rect x="94.6804%" y="1989" width="1.2397%" height="15" fill="rgb(213,191,49)" fg:x="235185354" fg:w="3079488"/><text x="94.9304%" y="1999.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,225,751 samples, 0.49%)</title><rect x="95.9201%" y="1989" width="0.4935%" height="15" fill="rgb(210,226,19)" fg:x="238264842" fg:w="1225751"/><text x="96.1701%" y="1999.50"></text></g><g><title>benchmark::clear_dirty_flags (3,113,430 samples, 1.25%)</title><rect x="96.4136%" y="1989" width="1.2534%" height="15" fill="rgb(229,97,18)" fg:x="239490593" fg:w="3113430"/><text x="96.6636%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,223,103 samples, 1.30%)</title><rect x="97.6670%" y="1989" width="1.2975%" height="15" fill="rgb(211,167,15)" fg:x="242604023" fg:w="3223103"/><text x="97.9170%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,223,103 samples, 1.30%)</title><rect x="97.6670%" y="1973" width="1.2975%" height="15" fill="rgb(210,169,34)" fg:x="242604023" fg:w="3223103"/><text x="97.9170%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (3,223,103 samples, 1.30%)</title><rect x="97.6670%" y="1957" width="1.2975%" height="15" fill="rgb(241,121,31)" fg:x="242604023" fg:w="3223103"/><text x="97.9170%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (3,223,103 samples, 1.30%)</title><rect x="97.6670%" y="1941" width="1.2975%" height="15" fill="rgb(232,40,11)" fg:x="242604023" fg:w="3223103"/><text x="97.9170%" y="1951.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,223,103 samples, 1.30%)</title><rect x="97.6670%" y="1925" width="1.2975%" height="15" fill="rgb(205,86,26)" fg:x="242604023" fg:w="3223103"/><text x="97.9170%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,223,103 samples, 1.30%)</title><rect x="97.6670%" y="1909" width="1.2975%" height="15" fill="rgb(231,126,28)" fg:x="242604023" fg:w="3223103"/><text x="97.9170%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,223,103 samples, 1.30%)</title><rect x="97.6670%" y="1893" width="1.2975%" height="15" fill="rgb(219,221,18)" fg:x="242604023" fg:w="3223103"/><text x="97.9170%" y="1903.50"></text></g><g><title>alloc::alloc::dealloc (3,223,103 samples, 1.30%)</title><rect x="97.6670%" y="1877" width="1.2975%" height="15" fill="rgb(211,40,0)" fg:x="242604023" fg:w="3223103"/><text x="97.9170%" y="1887.50"></text></g><g><title>all (248,399,182 samples, 100%)</title><rect x="0.0000%" y="2021" width="100.0000%" height="15" fill="rgb(239,85,43)" fg:x="0" fg:w="248399182"/><text x="0.2500%" y="2031.50"></text></g><g><title>benchmark (248,399,182 samples, 100.00%)</title><rect x="0.0000%" y="2005" width="100.0000%" height="15" fill="rgb(231,55,21)" fg:x="0" fg:w="248399182"/><text x="0.2500%" y="2015.50">benchmark</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,572,056 samples, 1.04%)</title><rect x="98.9645%" y="1989" width="1.0355%" height="15" fill="rgb(225,184,43)" fg:x="245827126" fg:w="2572056"/><text x="99.2145%" y="1999.50"></text></g></svg></svg>