<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="3030" onload="init(evt)" viewBox="0 0 1200 3030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="3030" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="3013.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="3013.00"> </text><svg id="frames" x="10" width="1180" total_samples="254472613"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,329,204 samples, 0.52%)</title><rect x="0.0000%" y="2949" width="0.5223%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1329204"/><text x="0.2500%" y="2959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2949" width="0.5180%" height="15" fill="rgb(217,0,24)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2933" width="0.5180%" height="15" fill="rgb(221,193,54)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2943.50"></text></g><g><title>alloc::slice::hack::to_vec (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2917" width="0.5180%" height="15" fill="rgb(248,212,6)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2901" width="0.5180%" height="15" fill="rgb(208,68,35)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2911.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2885" width="0.5180%" height="15" fill="rgb(232,128,0)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2895.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2869" width="0.5180%" height="15" fill="rgb(207,160,47)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2853" width="0.5180%" height="15" fill="rgb(228,23,34)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2837" width="0.5180%" height="15" fill="rgb(218,30,26)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2847.50"></text></g><g><title>alloc::slice::hack::to_vec (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2821" width="0.5180%" height="15" fill="rgb(220,122,19)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2805" width="0.5180%" height="15" fill="rgb(250,228,42)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2789" width="0.5180%" height="15" fill="rgb(240,193,28)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2773" width="0.5180%" height="15" fill="rgb(216,20,37)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2757" width="0.5180%" height="15" fill="rgb(206,188,39)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2741" width="0.5180%" height="15" fill="rgb(217,207,13)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2725" width="0.5180%" height="15" fill="rgb(231,73,38)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2709" width="0.5180%" height="15" fill="rgb(225,20,46)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2719.50"></text></g><g><title>alloc::alloc::alloc (1,318,184 samples, 0.52%)</title><rect x="0.5223%" y="2693" width="0.5180%" height="15" fill="rgb(210,31,41)" fg:x="1329204" fg:w="1318184"/><text x="0.7723%" y="2703.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (998,248 samples, 0.39%)</title><rect x="1.0403%" y="2949" width="0.3923%" height="15" fill="rgb(221,200,47)" fg:x="2647388" fg:w="998248"/><text x="1.2903%" y="2959.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,076,373 samples, 0.42%)</title><rect x="1.4326%" y="2949" width="0.4230%" height="15" fill="rgb(226,26,5)" fg:x="3645636" fg:w="1076373"/><text x="1.6826%" y="2959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,076,373 samples, 0.42%)</title><rect x="1.4326%" y="2933" width="0.4230%" height="15" fill="rgb(249,33,26)" fg:x="3645636" fg:w="1076373"/><text x="1.6826%" y="2943.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,076,373 samples, 0.42%)</title><rect x="1.4326%" y="2917" width="0.4230%" height="15" fill="rgb(235,183,28)" fg:x="3645636" fg:w="1076373"/><text x="1.6826%" y="2927.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,076,373 samples, 0.42%)</title><rect x="1.4326%" y="2901" width="0.4230%" height="15" fill="rgb(221,5,38)" fg:x="3645636" fg:w="1076373"/><text x="1.6826%" y="2911.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,076,373 samples, 0.42%)</title><rect x="1.4326%" y="2885" width="0.4230%" height="15" fill="rgb(247,18,42)" fg:x="3645636" fg:w="1076373"/><text x="1.6826%" y="2895.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,076,373 samples, 0.42%)</title><rect x="1.4326%" y="2869" width="0.4230%" height="15" fill="rgb(241,131,45)" fg:x="3645636" fg:w="1076373"/><text x="1.6826%" y="2879.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,076,373 samples, 0.42%)</title><rect x="1.4326%" y="2853" width="0.4230%" height="15" fill="rgb(249,31,29)" fg:x="3645636" fg:w="1076373"/><text x="1.6826%" y="2863.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,076,373 samples, 0.42%)</title><rect x="1.4326%" y="2837" width="0.4230%" height="15" fill="rgb(225,111,53)" fg:x="3645636" fg:w="1076373"/><text x="1.6826%" y="2847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,076,373 samples, 0.42%)</title><rect x="1.4326%" y="2821" width="0.4230%" height="15" fill="rgb(238,160,17)" fg:x="3645636" fg:w="1076373"/><text x="1.6826%" y="2831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,076,373 samples, 0.42%)</title><rect x="1.4326%" y="2805" width="0.4230%" height="15" fill="rgb(214,148,48)" fg:x="3645636" fg:w="1076373"/><text x="1.6826%" y="2815.50"></text></g><g><title>alloc::slice::hack::to_vec (1,076,373 samples, 0.42%)</title><rect x="1.4326%" y="2789" width="0.4230%" height="15" fill="rgb(232,36,49)" fg:x="3645636" fg:w="1076373"/><text x="1.6826%" y="2799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,076,373 samples, 0.42%)</title><rect x="1.4326%" y="2773" width="0.4230%" height="15" fill="rgb(209,103,24)" fg:x="3645636" fg:w="1076373"/><text x="1.6826%" y="2783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,076,373 samples, 0.42%)</title><rect x="1.4326%" y="2757" width="0.4230%" height="15" fill="rgb(229,88,8)" fg:x="3645636" fg:w="1076373"/><text x="1.6826%" y="2767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,076,373 samples, 0.42%)</title><rect x="1.4326%" y="2741" width="0.4230%" height="15" fill="rgb(213,181,19)" fg:x="3645636" fg:w="1076373"/><text x="1.6826%" y="2751.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (915,751 samples, 0.36%)</title><rect x="1.8556%" y="2949" width="0.3599%" height="15" fill="rgb(254,191,54)" fg:x="4722009" fg:w="915751"/><text x="2.1056%" y="2959.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,065,432 samples, 0.42%)</title><rect x="2.2155%" y="2949" width="0.4187%" height="15" fill="rgb(241,83,37)" fg:x="5637760" fg:w="1065432"/><text x="2.4655%" y="2959.50"></text></g><g><title>[libc.so.6] (4,673,606 samples, 1.84%)</title><rect x="2.6342%" y="2949" width="1.8366%" height="15" fill="rgb(233,36,39)" fg:x="6703192" fg:w="4673606"/><text x="2.8842%" y="2959.50">[..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,437,966 samples, 0.57%)</title><rect x="5.6511%" y="2853" width="0.5651%" height="15" fill="rgb(226,3,54)" fg:x="14380522" fg:w="1437966"/><text x="5.9011%" y="2863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,437,966 samples, 0.57%)</title><rect x="5.6511%" y="2837" width="0.5651%" height="15" fill="rgb(245,192,40)" fg:x="14380522" fg:w="1437966"/><text x="5.9011%" y="2847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,437,966 samples, 0.57%)</title><rect x="5.6511%" y="2821" width="0.5651%" height="15" fill="rgb(238,167,29)" fg:x="14380522" fg:w="1437966"/><text x="5.9011%" y="2831.50"></text></g><g><title>alloc::slice::hack::to_vec (1,437,966 samples, 0.57%)</title><rect x="5.6511%" y="2805" width="0.5651%" height="15" fill="rgb(232,182,51)" fg:x="14380522" fg:w="1437966"/><text x="5.9011%" y="2815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,437,966 samples, 0.57%)</title><rect x="5.6511%" y="2789" width="0.5651%" height="15" fill="rgb(231,60,39)" fg:x="14380522" fg:w="1437966"/><text x="5.9011%" y="2799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,437,966 samples, 0.57%)</title><rect x="5.6511%" y="2773" width="0.5651%" height="15" fill="rgb(208,69,12)" fg:x="14380522" fg:w="1437966"/><text x="5.9011%" y="2783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,437,966 samples, 0.57%)</title><rect x="5.6511%" y="2757" width="0.5651%" height="15" fill="rgb(235,93,37)" fg:x="14380522" fg:w="1437966"/><text x="5.9011%" y="2767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,717,884 samples, 1.07%)</title><rect x="5.6511%" y="2933" width="1.0680%" height="15" fill="rgb(213,116,39)" fg:x="14380522" fg:w="2717884"/><text x="5.9011%" y="2943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,717,884 samples, 1.07%)</title><rect x="5.6511%" y="2917" width="1.0680%" height="15" fill="rgb(222,207,29)" fg:x="14380522" fg:w="2717884"/><text x="5.9011%" y="2927.50"></text></g><g><title>alloc::slice::hack::to_vec (2,717,884 samples, 1.07%)</title><rect x="5.6511%" y="2901" width="1.0680%" height="15" fill="rgb(206,96,30)" fg:x="14380522" fg:w="2717884"/><text x="5.9011%" y="2911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,717,884 samples, 1.07%)</title><rect x="5.6511%" y="2885" width="1.0680%" height="15" fill="rgb(218,138,4)" fg:x="14380522" fg:w="2717884"/><text x="5.9011%" y="2895.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,717,884 samples, 1.07%)</title><rect x="5.6511%" y="2869" width="1.0680%" height="15" fill="rgb(250,191,14)" fg:x="14380522" fg:w="2717884"/><text x="5.9011%" y="2879.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,279,918 samples, 0.50%)</title><rect x="6.2162%" y="2853" width="0.5030%" height="15" fill="rgb(239,60,40)" fg:x="15818488" fg:w="1279918"/><text x="6.4662%" y="2863.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,279,918 samples, 0.50%)</title><rect x="6.2162%" y="2837" width="0.5030%" height="15" fill="rgb(206,27,48)" fg:x="15818488" fg:w="1279918"/><text x="6.4662%" y="2847.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,279,918 samples, 0.50%)</title><rect x="6.2162%" y="2821" width="0.5030%" height="15" fill="rgb(225,35,8)" fg:x="15818488" fg:w="1279918"/><text x="6.4662%" y="2831.50"></text></g><g><title>[libc.so.6] (1,258,407 samples, 0.49%)</title><rect x="6.7192%" y="2933" width="0.4945%" height="15" fill="rgb(250,213,24)" fg:x="17098406" fg:w="1258407"/><text x="6.9692%" y="2943.50"></text></g><g><title>[unknown] (927,125 samples, 0.36%)</title><rect x="7.2137%" y="2933" width="0.3643%" height="15" fill="rgb(247,123,22)" fg:x="18356813" fg:w="927125"/><text x="7.4637%" y="2943.50"></text></g><g><title>[unknown] (927,125 samples, 0.36%)</title><rect x="7.2137%" y="2917" width="0.3643%" height="15" fill="rgb(231,138,38)" fg:x="18356813" fg:w="927125"/><text x="7.4637%" y="2927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (927,125 samples, 0.36%)</title><rect x="7.2137%" y="2901" width="0.3643%" height="15" fill="rgb(231,145,46)" fg:x="18356813" fg:w="927125"/><text x="7.4637%" y="2911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (927,125 samples, 0.36%)</title><rect x="7.2137%" y="2885" width="0.3643%" height="15" fill="rgb(251,118,11)" fg:x="18356813" fg:w="927125"/><text x="7.4637%" y="2895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (927,125 samples, 0.36%)</title><rect x="7.2137%" y="2869" width="0.3643%" height="15" fill="rgb(217,147,25)" fg:x="18356813" fg:w="927125"/><text x="7.4637%" y="2879.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (927,125 samples, 0.36%)</title><rect x="7.2137%" y="2853" width="0.3643%" height="15" fill="rgb(247,81,37)" fg:x="18356813" fg:w="927125"/><text x="7.4637%" y="2863.50"></text></g><g><title>core::intrinsics::copy (927,125 samples, 0.36%)</title><rect x="7.2137%" y="2837" width="0.3643%" height="15" fill="rgb(209,12,38)" fg:x="18356813" fg:w="927125"/><text x="7.4637%" y="2847.50"></text></g><g><title>__rdl_dealloc (1,352,787 samples, 0.53%)</title><rect x="7.5780%" y="2933" width="0.5316%" height="15" fill="rgb(227,1,9)" fg:x="19283938" fg:w="1352787"/><text x="7.8280%" y="2943.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,352,787 samples, 0.53%)</title><rect x="7.5780%" y="2917" width="0.5316%" height="15" fill="rgb(248,47,43)" fg:x="19283938" fg:w="1352787"/><text x="7.8280%" y="2927.50"></text></g><g><title>benchmark::clear_dirty_flags (1,245,627 samples, 0.49%)</title><rect x="8.1096%" y="2933" width="0.4895%" height="15" fill="rgb(221,10,30)" fg:x="20636725" fg:w="1245627"/><text x="8.3596%" y="2943.50"></text></g><g><title>[unknown] (11,835,922 samples, 4.65%)</title><rect x="4.4707%" y="2949" width="4.6512%" height="15" fill="rgb(210,229,1)" fg:x="11376798" fg:w="11835922"/><text x="4.7207%" y="2959.50">[unkn..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,330,368 samples, 0.52%)</title><rect x="8.5991%" y="2933" width="0.5228%" height="15" fill="rgb(222,148,37)" fg:x="21882352" fg:w="1330368"/><text x="8.8491%" y="2943.50"></text></g><g><title>__rdl_dealloc (1,320,649 samples, 0.52%)</title><rect x="9.1219%" y="2949" width="0.5190%" height="15" fill="rgb(234,67,33)" fg:x="23212720" fg:w="1320649"/><text x="9.3719%" y="2959.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,320,649 samples, 0.52%)</title><rect x="9.1219%" y="2933" width="0.5190%" height="15" fill="rgb(247,98,35)" fg:x="23212720" fg:w="1320649"/><text x="9.3719%" y="2943.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,004,395 samples, 0.39%)</title><rect x="9.6409%" y="2213" width="0.3947%" height="15" fill="rgb(247,138,52)" fg:x="24533369" fg:w="1004395"/><text x="9.8909%" y="2223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,004,395 samples, 0.39%)</title><rect x="9.6409%" y="2197" width="0.3947%" height="15" fill="rgb(213,79,30)" fg:x="24533369" fg:w="1004395"/><text x="9.8909%" y="2207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,004,395 samples, 0.39%)</title><rect x="9.6409%" y="2181" width="0.3947%" height="15" fill="rgb(246,177,23)" fg:x="24533369" fg:w="1004395"/><text x="9.8909%" y="2191.50"></text></g><g><title>alloc::slice::hack::to_vec (1,004,395 samples, 0.39%)</title><rect x="9.6409%" y="2165" width="0.3947%" height="15" fill="rgb(230,62,27)" fg:x="24533369" fg:w="1004395"/><text x="9.8909%" y="2175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,004,395 samples, 0.39%)</title><rect x="9.6409%" y="2149" width="0.3947%" height="15" fill="rgb(216,154,8)" fg:x="24533369" fg:w="1004395"/><text x="9.8909%" y="2159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,004,395 samples, 0.39%)</title><rect x="9.6409%" y="2133" width="0.3947%" height="15" fill="rgb(244,35,45)" fg:x="24533369" fg:w="1004395"/><text x="9.8909%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,004,395 samples, 0.39%)</title><rect x="9.6409%" y="2117" width="0.3947%" height="15" fill="rgb(251,115,12)" fg:x="24533369" fg:w="1004395"/><text x="9.8909%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,004,395 samples, 0.39%)</title><rect x="9.6409%" y="2101" width="0.3947%" height="15" fill="rgb(240,54,50)" fg:x="24533369" fg:w="1004395"/><text x="9.8909%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,004,395 samples, 0.39%)</title><rect x="9.6409%" y="2085" width="0.3947%" height="15" fill="rgb(233,84,52)" fg:x="24533369" fg:w="1004395"/><text x="9.8909%" y="2095.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,004,395 samples, 0.39%)</title><rect x="9.6409%" y="2069" width="0.3947%" height="15" fill="rgb(207,117,47)" fg:x="24533369" fg:w="1004395"/><text x="9.8909%" y="2079.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,004,395 samples, 0.39%)</title><rect x="9.6409%" y="2053" width="0.3947%" height="15" fill="rgb(249,43,39)" fg:x="24533369" fg:w="1004395"/><text x="9.8909%" y="2063.50"></text></g><g><title>alloc::alloc::alloc (1,004,395 samples, 0.39%)</title><rect x="9.6409%" y="2037" width="0.3947%" height="15" fill="rgb(209,38,44)" fg:x="24533369" fg:w="1004395"/><text x="9.8909%" y="2047.50"></text></g><g><title>malloc (1,004,395 samples, 0.39%)</title><rect x="9.6409%" y="2021" width="0.3947%" height="15" fill="rgb(236,212,23)" fg:x="24533369" fg:w="1004395"/><text x="9.8909%" y="2031.50"></text></g><g><title>[libc.so.6] (1,004,395 samples, 0.39%)</title><rect x="9.6409%" y="2005" width="0.3947%" height="15" fill="rgb(242,79,21)" fg:x="24533369" fg:w="1004395"/><text x="9.8909%" y="2015.50"></text></g><g><title>[libc.so.6] (1,004,395 samples, 0.39%)</title><rect x="9.6409%" y="1989" width="0.3947%" height="15" fill="rgb(211,96,35)" fg:x="24533369" fg:w="1004395"/><text x="9.8909%" y="1999.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,324,460 samples, 0.52%)</title><rect x="10.0356%" y="2085" width="0.5205%" height="15" fill="rgb(253,215,40)" fg:x="25537764" fg:w="1324460"/><text x="10.2856%" y="2095.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,324,460 samples, 0.52%)</title><rect x="10.0356%" y="2069" width="0.5205%" height="15" fill="rgb(211,81,21)" fg:x="25537764" fg:w="1324460"/><text x="10.2856%" y="2079.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,324,460 samples, 0.52%)</title><rect x="10.0356%" y="2053" width="0.5205%" height="15" fill="rgb(208,190,38)" fg:x="25537764" fg:w="1324460"/><text x="10.2856%" y="2063.50"></text></g><g><title>alloc::slice::hack::to_vec (1,324,460 samples, 0.52%)</title><rect x="10.0356%" y="2037" width="0.5205%" height="15" fill="rgb(235,213,38)" fg:x="25537764" fg:w="1324460"/><text x="10.2856%" y="2047.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,324,460 samples, 0.52%)</title><rect x="10.0356%" y="2021" width="0.5205%" height="15" fill="rgb(237,122,38)" fg:x="25537764" fg:w="1324460"/><text x="10.2856%" y="2031.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,324,460 samples, 0.52%)</title><rect x="10.0356%" y="2005" width="0.5205%" height="15" fill="rgb(244,218,35)" fg:x="25537764" fg:w="1324460"/><text x="10.2856%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,324,460 samples, 0.52%)</title><rect x="10.0356%" y="1989" width="0.5205%" height="15" fill="rgb(240,68,47)" fg:x="25537764" fg:w="1324460"/><text x="10.2856%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,324,460 samples, 0.52%)</title><rect x="10.0356%" y="1973" width="0.5205%" height="15" fill="rgb(210,16,53)" fg:x="25537764" fg:w="1324460"/><text x="10.2856%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,324,460 samples, 0.52%)</title><rect x="10.0356%" y="1957" width="0.5205%" height="15" fill="rgb(235,124,12)" fg:x="25537764" fg:w="1324460"/><text x="10.2856%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,324,460 samples, 0.52%)</title><rect x="10.0356%" y="1941" width="0.5205%" height="15" fill="rgb(224,169,11)" fg:x="25537764" fg:w="1324460"/><text x="10.2856%" y="1951.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,324,460 samples, 0.52%)</title><rect x="10.0356%" y="1925" width="0.5205%" height="15" fill="rgb(250,166,2)" fg:x="25537764" fg:w="1324460"/><text x="10.2856%" y="1935.50"></text></g><g><title>alloc::alloc::alloc (1,324,460 samples, 0.52%)</title><rect x="10.0356%" y="1909" width="0.5205%" height="15" fill="rgb(242,216,29)" fg:x="25537764" fg:w="1324460"/><text x="10.2856%" y="1919.50"></text></g><g><title>malloc (1,324,460 samples, 0.52%)</title><rect x="10.0356%" y="1893" width="0.5205%" height="15" fill="rgb(230,116,27)" fg:x="25537764" fg:w="1324460"/><text x="10.2856%" y="1903.50"></text></g><g><title>[libc.so.6] (1,324,460 samples, 0.52%)</title><rect x="10.0356%" y="1877" width="0.5205%" height="15" fill="rgb(228,99,48)" fg:x="25537764" fg:w="1324460"/><text x="10.2856%" y="1887.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,357,390 samples, 0.93%)</title><rect x="11.0619%" y="1941" width="0.9264%" height="15" fill="rgb(253,11,6)" fg:x="28149502" fg:w="2357390"/><text x="11.3119%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,320,797 samples, 0.52%)</title><rect x="11.4692%" y="1925" width="0.5190%" height="15" fill="rgb(247,143,39)" fg:x="29186095" fg:w="1320797"/><text x="11.7192%" y="1935.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,320,797 samples, 0.52%)</title><rect x="11.4692%" y="1909" width="0.5190%" height="15" fill="rgb(236,97,10)" fg:x="29186095" fg:w="1320797"/><text x="11.7192%" y="1919.50"></text></g><g><title>alloc::slice::hack::to_vec (1,320,797 samples, 0.52%)</title><rect x="11.4692%" y="1893" width="0.5190%" height="15" fill="rgb(233,208,19)" fg:x="29186095" fg:w="1320797"/><text x="11.7192%" y="1903.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,320,797 samples, 0.52%)</title><rect x="11.4692%" y="1877" width="0.5190%" height="15" fill="rgb(216,164,2)" fg:x="29186095" fg:w="1320797"/><text x="11.7192%" y="1887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,320,797 samples, 0.52%)</title><rect x="11.4692%" y="1861" width="0.5190%" height="15" fill="rgb(220,129,5)" fg:x="29186095" fg:w="1320797"/><text x="11.7192%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,320,797 samples, 0.52%)</title><rect x="11.4692%" y="1845" width="0.5190%" height="15" fill="rgb(242,17,10)" fg:x="29186095" fg:w="1320797"/><text x="11.7192%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,320,797 samples, 0.52%)</title><rect x="11.4692%" y="1829" width="0.5190%" height="15" fill="rgb(242,107,0)" fg:x="29186095" fg:w="1320797"/><text x="11.7192%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,320,797 samples, 0.52%)</title><rect x="11.4692%" y="1813" width="0.5190%" height="15" fill="rgb(251,28,31)" fg:x="29186095" fg:w="1320797"/><text x="11.7192%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,320,797 samples, 0.52%)</title><rect x="11.4692%" y="1797" width="0.5190%" height="15" fill="rgb(233,223,10)" fg:x="29186095" fg:w="1320797"/><text x="11.7192%" y="1807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,320,797 samples, 0.52%)</title><rect x="11.4692%" y="1781" width="0.5190%" height="15" fill="rgb(215,21,27)" fg:x="29186095" fg:w="1320797"/><text x="11.7192%" y="1791.50"></text></g><g><title>alloc::alloc::alloc (1,320,797 samples, 0.52%)</title><rect x="11.4692%" y="1765" width="0.5190%" height="15" fill="rgb(232,23,21)" fg:x="29186095" fg:w="1320797"/><text x="11.7192%" y="1775.50"></text></g><g><title>malloc (1,320,797 samples, 0.52%)</title><rect x="11.4692%" y="1749" width="0.5190%" height="15" fill="rgb(244,5,23)" fg:x="29186095" fg:w="1320797"/><text x="11.7192%" y="1759.50"></text></g><g><title>[libc.so.6] (1,320,797 samples, 0.52%)</title><rect x="11.4692%" y="1733" width="0.5190%" height="15" fill="rgb(226,81,46)" fg:x="29186095" fg:w="1320797"/><text x="11.7192%" y="1743.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1797" width="0.4717%" height="15" fill="rgb(247,70,30)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1781" width="0.4717%" height="15" fill="rgb(212,68,19)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1765" width="0.4717%" height="15" fill="rgb(240,187,13)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1775.50"></text></g><g><title>alloc::slice::hack::to_vec (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1749" width="0.4717%" height="15" fill="rgb(223,113,26)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1733" width="0.4717%" height="15" fill="rgb(206,192,2)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1743.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1717" width="0.4717%" height="15" fill="rgb(241,108,4)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1727.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1701" width="0.4717%" height="15" fill="rgb(247,173,49)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1685" width="0.4717%" height="15" fill="rgb(224,114,35)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1669" width="0.4717%" height="15" fill="rgb(245,159,27)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1679.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1653" width="0.4717%" height="15" fill="rgb(245,172,44)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1637" width="0.4717%" height="15" fill="rgb(236,23,11)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1621" width="0.4717%" height="15" fill="rgb(205,117,38)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1605" width="0.4717%" height="15" fill="rgb(237,72,25)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1589" width="0.4717%" height="15" fill="rgb(244,70,9)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1599.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1573" width="0.4717%" height="15" fill="rgb(217,125,39)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1583.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1557" width="0.4717%" height="15" fill="rgb(235,36,10)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1541" width="0.4717%" height="15" fill="rgb(251,123,47)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1551.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1525" width="0.4717%" height="15" fill="rgb(221,13,13)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1535.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1509" width="0.4717%" height="15" fill="rgb(238,131,9)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1493" width="0.4717%" height="15" fill="rgb(211,50,8)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1477" width="0.4717%" height="15" fill="rgb(245,182,24)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1487.50"></text></g><g><title>alloc::slice::hack::to_vec (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1461" width="0.4717%" height="15" fill="rgb(242,14,37)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1445" width="0.4717%" height="15" fill="rgb(246,228,12)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1455.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1429" width="0.4717%" height="15" fill="rgb(213,55,15)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1439.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1413" width="0.4717%" height="15" fill="rgb(209,9,3)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1423.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1397" width="0.4717%" height="15" fill="rgb(230,59,30)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1407.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1381" width="0.4717%" height="15" fill="rgb(209,121,21)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1391.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1365" width="0.4717%" height="15" fill="rgb(220,109,13)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1349" width="0.4717%" height="15" fill="rgb(232,18,1)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1333" width="0.4717%" height="15" fill="rgb(215,41,42)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1317" width="0.4717%" height="15" fill="rgb(224,123,36)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1301" width="0.4717%" height="15" fill="rgb(240,125,3)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1311.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1285" width="0.4717%" height="15" fill="rgb(205,98,50)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1295.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1269" width="0.4717%" height="15" fill="rgb(205,185,37)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1279.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1253" width="0.4717%" height="15" fill="rgb(238,207,15)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1237" width="0.4717%" height="15" fill="rgb(213,199,42)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1247.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1221" width="0.4717%" height="15" fill="rgb(235,201,11)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1205" width="0.4717%" height="15" fill="rgb(207,46,11)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1189" width="0.4717%" height="15" fill="rgb(241,35,35)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1173" width="0.4717%" height="15" fill="rgb(243,32,47)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1157" width="0.4717%" height="15" fill="rgb(247,202,23)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1167.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1141" width="0.4717%" height="15" fill="rgb(219,102,11)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1151.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1125" width="0.4717%" height="15" fill="rgb(243,110,44)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1109" width="0.4717%" height="15" fill="rgb(222,74,54)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1093" width="0.4717%" height="15" fill="rgb(216,99,12)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1103.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1077" width="0.4717%" height="15" fill="rgb(226,22,26)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1061" width="0.4717%" height="15" fill="rgb(217,163,10)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1045" width="0.4717%" height="15" fill="rgb(213,25,53)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1029" width="0.4717%" height="15" fill="rgb(252,105,26)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="1013" width="0.4717%" height="15" fill="rgb(220,39,43)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="997" width="0.4717%" height="15" fill="rgb(229,68,48)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="981" width="0.4717%" height="15" fill="rgb(252,8,32)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="991.50"></text></g><g><title>alloc::alloc::alloc (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="965" width="0.4717%" height="15" fill="rgb(223,20,43)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="975.50"></text></g><g><title>malloc (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="949" width="0.4717%" height="15" fill="rgb(229,81,49)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="959.50"></text></g><g><title>[libc.so.6] (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="933" width="0.4717%" height="15" fill="rgb(236,28,36)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="943.50"></text></g><g><title>[libc.so.6] (1,200,471 samples, 0.47%)</title><rect x="11.9883%" y="917" width="0.4717%" height="15" fill="rgb(249,185,26)" fg:x="30506892" fg:w="1200471"/><text x="12.2383%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,176,002 samples, 3.21%)</title><rect x="9.6409%" y="2357" width="3.2129%" height="15" fill="rgb(249,174,33)" fg:x="24533369" fg:w="8176002"/><text x="9.8909%" y="2367.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,176,002 samples, 3.21%)</title><rect x="9.6409%" y="2341" width="3.2129%" height="15" fill="rgb(233,201,37)" fg:x="24533369" fg:w="8176002"/><text x="9.8909%" y="2351.50">all..</text></g><g><title>alloc::slice::hack::to_vec (8,176,002 samples, 3.21%)</title><rect x="9.6409%" y="2325" width="3.2129%" height="15" fill="rgb(221,78,26)" fg:x="24533369" fg:w="8176002"/><text x="9.8909%" y="2335.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,176,002 samples, 3.21%)</title><rect x="9.6409%" y="2309" width="3.2129%" height="15" fill="rgb(250,127,30)" fg:x="24533369" fg:w="8176002"/><text x="9.8909%" y="2319.50">&lt;T ..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,176,002 samples, 3.21%)</title><rect x="9.6409%" y="2293" width="3.2129%" height="15" fill="rgb(230,49,44)" fg:x="24533369" fg:w="8176002"/><text x="9.8909%" y="2303.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,176,002 samples, 3.21%)</title><rect x="9.6409%" y="2277" width="3.2129%" height="15" fill="rgb(229,67,23)" fg:x="24533369" fg:w="8176002"/><text x="9.8909%" y="2287.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,176,002 samples, 3.21%)</title><rect x="9.6409%" y="2261" width="3.2129%" height="15" fill="rgb(249,83,47)" fg:x="24533369" fg:w="8176002"/><text x="9.8909%" y="2271.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,176,002 samples, 3.21%)</title><rect x="9.6409%" y="2245" width="3.2129%" height="15" fill="rgb(215,43,3)" fg:x="24533369" fg:w="8176002"/><text x="9.8909%" y="2255.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,176,002 samples, 3.21%)</title><rect x="9.6409%" y="2229" width="3.2129%" height="15" fill="rgb(238,154,13)" fg:x="24533369" fg:w="8176002"/><text x="9.8909%" y="2239.50">&lt;se..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,171,607 samples, 2.82%)</title><rect x="10.0356%" y="2213" width="2.8182%" height="15" fill="rgb(219,56,2)" fg:x="25537764" fg:w="7171607"/><text x="10.2856%" y="2223.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,171,607 samples, 2.82%)</title><rect x="10.0356%" y="2197" width="2.8182%" height="15" fill="rgb(233,0,4)" fg:x="25537764" fg:w="7171607"/><text x="10.2856%" y="2207.50">al..</text></g><g><title>alloc::slice::hack::to_vec (7,171,607 samples, 2.82%)</title><rect x="10.0356%" y="2181" width="2.8182%" height="15" fill="rgb(235,30,7)" fg:x="25537764" fg:w="7171607"/><text x="10.2856%" y="2191.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,171,607 samples, 2.82%)</title><rect x="10.0356%" y="2165" width="2.8182%" height="15" fill="rgb(250,79,13)" fg:x="25537764" fg:w="7171607"/><text x="10.2856%" y="2175.50">&lt;T..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,171,607 samples, 2.82%)</title><rect x="10.0356%" y="2149" width="2.8182%" height="15" fill="rgb(211,146,34)" fg:x="25537764" fg:w="7171607"/><text x="10.2856%" y="2159.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,171,607 samples, 2.82%)</title><rect x="10.0356%" y="2133" width="2.8182%" height="15" fill="rgb(228,22,38)" fg:x="25537764" fg:w="7171607"/><text x="10.2856%" y="2143.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,171,607 samples, 2.82%)</title><rect x="10.0356%" y="2117" width="2.8182%" height="15" fill="rgb(235,168,5)" fg:x="25537764" fg:w="7171607"/><text x="10.2856%" y="2127.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,171,607 samples, 2.82%)</title><rect x="10.0356%" y="2101" width="2.8182%" height="15" fill="rgb(221,155,16)" fg:x="25537764" fg:w="7171607"/><text x="10.2856%" y="2111.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,847,147 samples, 2.30%)</title><rect x="10.5560%" y="2085" width="2.2978%" height="15" fill="rgb(215,215,53)" fg:x="26862224" fg:w="5847147"/><text x="10.8060%" y="2095.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,559,869 samples, 1.79%)</title><rect x="11.0619%" y="2069" width="1.7919%" height="15" fill="rgb(223,4,10)" fg:x="28149502" fg:w="4559869"/><text x="11.3119%" y="2079.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,559,869 samples, 1.79%)</title><rect x="11.0619%" y="2053" width="1.7919%" height="15" fill="rgb(234,103,6)" fg:x="28149502" fg:w="4559869"/><text x="11.3119%" y="2063.50">a..</text></g><g><title>alloc::slice::hack::to_vec (4,559,869 samples, 1.79%)</title><rect x="11.0619%" y="2037" width="1.7919%" height="15" fill="rgb(227,97,0)" fg:x="28149502" fg:w="4559869"/><text x="11.3119%" y="2047.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,559,869 samples, 1.79%)</title><rect x="11.0619%" y="2021" width="1.7919%" height="15" fill="rgb(234,150,53)" fg:x="28149502" fg:w="4559869"/><text x="11.3119%" y="2031.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,559,869 samples, 1.79%)</title><rect x="11.0619%" y="2005" width="1.7919%" height="15" fill="rgb(228,201,54)" fg:x="28149502" fg:w="4559869"/><text x="11.3119%" y="2015.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,559,869 samples, 1.79%)</title><rect x="11.0619%" y="1989" width="1.7919%" height="15" fill="rgb(222,22,37)" fg:x="28149502" fg:w="4559869"/><text x="11.3119%" y="1999.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,559,869 samples, 1.79%)</title><rect x="11.0619%" y="1973" width="1.7919%" height="15" fill="rgb(237,53,32)" fg:x="28149502" fg:w="4559869"/><text x="11.3119%" y="1983.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,559,869 samples, 1.79%)</title><rect x="11.0619%" y="1957" width="1.7919%" height="15" fill="rgb(233,25,53)" fg:x="28149502" fg:w="4559869"/><text x="11.3119%" y="1967.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,202,479 samples, 0.87%)</title><rect x="11.9883%" y="1941" width="0.8655%" height="15" fill="rgb(210,40,34)" fg:x="30506892" fg:w="2202479"/><text x="12.2383%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,202,479 samples, 0.87%)</title><rect x="11.9883%" y="1925" width="0.8655%" height="15" fill="rgb(241,220,44)" fg:x="30506892" fg:w="2202479"/><text x="12.2383%" y="1935.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,202,479 samples, 0.87%)</title><rect x="11.9883%" y="1909" width="0.8655%" height="15" fill="rgb(235,28,35)" fg:x="30506892" fg:w="2202479"/><text x="12.2383%" y="1919.50"></text></g><g><title>alloc::slice::hack::to_vec (2,202,479 samples, 0.87%)</title><rect x="11.9883%" y="1893" width="0.8655%" height="15" fill="rgb(210,56,17)" fg:x="30506892" fg:w="2202479"/><text x="12.2383%" y="1903.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,202,479 samples, 0.87%)</title><rect x="11.9883%" y="1877" width="0.8655%" height="15" fill="rgb(224,130,29)" fg:x="30506892" fg:w="2202479"/><text x="12.2383%" y="1887.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,202,479 samples, 0.87%)</title><rect x="11.9883%" y="1861" width="0.8655%" height="15" fill="rgb(235,212,8)" fg:x="30506892" fg:w="2202479"/><text x="12.2383%" y="1871.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,202,479 samples, 0.87%)</title><rect x="11.9883%" y="1845" width="0.8655%" height="15" fill="rgb(223,33,50)" fg:x="30506892" fg:w="2202479"/><text x="12.2383%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,202,479 samples, 0.87%)</title><rect x="11.9883%" y="1829" width="0.8655%" height="15" fill="rgb(219,149,13)" fg:x="30506892" fg:w="2202479"/><text x="12.2383%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,202,479 samples, 0.87%)</title><rect x="11.9883%" y="1813" width="0.8655%" height="15" fill="rgb(250,156,29)" fg:x="30506892" fg:w="2202479"/><text x="12.2383%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,002,008 samples, 0.39%)</title><rect x="12.4600%" y="1797" width="0.3938%" height="15" fill="rgb(216,193,19)" fg:x="31707363" fg:w="1002008"/><text x="12.7100%" y="1807.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2661" width="3.6988%" height="15" fill="rgb(216,135,14)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2671.50">&lt;ben..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2645" width="3.6988%" height="15" fill="rgb(241,47,5)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2655.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2629" width="3.6988%" height="15" fill="rgb(233,42,35)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2639.50">&lt;ser..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2613" width="3.6988%" height="15" fill="rgb(231,13,6)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2623.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2597" width="3.6988%" height="15" fill="rgb(207,181,40)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2607.50">&lt;all..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2581" width="3.6988%" height="15" fill="rgb(254,173,49)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2591.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2565" width="3.6988%" height="15" fill="rgb(221,1,38)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2575.50">&lt;ser..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2549" width="3.6988%" height="15" fill="rgb(206,124,46)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2559.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2533" width="3.6988%" height="15" fill="rgb(249,21,11)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2543.50">&lt;all..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2517" width="3.6988%" height="15" fill="rgb(222,201,40)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2527.50">&lt;ser..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2501" width="3.6988%" height="15" fill="rgb(235,61,29)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2511.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2485" width="3.6988%" height="15" fill="rgb(219,207,3)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2495.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2469" width="3.6988%" height="15" fill="rgb(222,56,46)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2479.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2453" width="3.6988%" height="15" fill="rgb(239,76,54)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2463.50">&lt;T a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2437" width="3.6988%" height="15" fill="rgb(231,124,27)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2447.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2421" width="3.6988%" height="15" fill="rgb(249,195,6)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2431.50">&lt;ser..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2405" width="3.6988%" height="15" fill="rgb(237,174,47)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2415.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2389" width="3.6988%" height="15" fill="rgb(206,201,31)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2399.50">&lt;all..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,412,360 samples, 3.70%)</title><rect x="9.6409%" y="2373" width="3.6988%" height="15" fill="rgb(231,57,52)" fg:x="24533369" fg:w="9412360"/><text x="9.8909%" y="2383.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,236,358 samples, 0.49%)</title><rect x="12.8538%" y="2357" width="0.4859%" height="15" fill="rgb(248,177,22)" fg:x="32709371" fg:w="1236358"/><text x="13.1038%" y="2367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,236,358 samples, 0.49%)</title><rect x="12.8538%" y="2341" width="0.4859%" height="15" fill="rgb(215,211,37)" fg:x="32709371" fg:w="1236358"/><text x="13.1038%" y="2351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,236,358 samples, 0.49%)</title><rect x="12.8538%" y="2325" width="0.4859%" height="15" fill="rgb(241,128,51)" fg:x="32709371" fg:w="1236358"/><text x="13.1038%" y="2335.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,236,358 samples, 0.49%)</title><rect x="12.8538%" y="2309" width="0.4859%" height="15" fill="rgb(227,165,31)" fg:x="32709371" fg:w="1236358"/><text x="13.1038%" y="2319.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,191,341 samples, 0.47%)</title><rect x="13.3396%" y="2485" width="0.4682%" height="15" fill="rgb(228,167,24)" fg:x="33945729" fg:w="1191341"/><text x="13.5896%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,191,341 samples, 0.47%)</title><rect x="13.3396%" y="2469" width="0.4682%" height="15" fill="rgb(228,143,12)" fg:x="33945729" fg:w="1191341"/><text x="13.5896%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,191,341 samples, 0.47%)</title><rect x="13.3396%" y="2453" width="0.4682%" height="15" fill="rgb(249,149,8)" fg:x="33945729" fg:w="1191341"/><text x="13.5896%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,191,341 samples, 0.47%)</title><rect x="13.3396%" y="2437" width="0.4682%" height="15" fill="rgb(243,35,44)" fg:x="33945729" fg:w="1191341"/><text x="13.5896%" y="2447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,191,341 samples, 0.47%)</title><rect x="13.3396%" y="2421" width="0.4682%" height="15" fill="rgb(246,89,9)" fg:x="33945729" fg:w="1191341"/><text x="13.5896%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,191,341 samples, 0.47%)</title><rect x="13.3396%" y="2405" width="0.4682%" height="15" fill="rgb(233,213,13)" fg:x="33945729" fg:w="1191341"/><text x="13.5896%" y="2415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,191,341 samples, 0.47%)</title><rect x="13.3396%" y="2389" width="0.4682%" height="15" fill="rgb(233,141,41)" fg:x="33945729" fg:w="1191341"/><text x="13.5896%" y="2399.50"></text></g><g><title>alloc::alloc::dealloc (1,191,341 samples, 0.47%)</title><rect x="13.3396%" y="2373" width="0.4682%" height="15" fill="rgb(239,167,4)" fg:x="33945729" fg:w="1191341"/><text x="13.5896%" y="2383.50"></text></g><g><title>cfree (1,191,341 samples, 0.47%)</title><rect x="13.3396%" y="2357" width="0.4682%" height="15" fill="rgb(209,217,16)" fg:x="33945729" fg:w="1191341"/><text x="13.5896%" y="2367.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,193,223 samples, 0.47%)</title><rect x="13.8078%" y="2309" width="0.4689%" height="15" fill="rgb(219,88,35)" fg:x="35137070" fg:w="1193223"/><text x="14.0578%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,193,223 samples, 0.47%)</title><rect x="13.8078%" y="2293" width="0.4689%" height="15" fill="rgb(220,193,23)" fg:x="35137070" fg:w="1193223"/><text x="14.0578%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,193,223 samples, 0.47%)</title><rect x="13.8078%" y="2277" width="0.4689%" height="15" fill="rgb(230,90,52)" fg:x="35137070" fg:w="1193223"/><text x="14.0578%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,193,223 samples, 0.47%)</title><rect x="13.8078%" y="2261" width="0.4689%" height="15" fill="rgb(252,106,19)" fg:x="35137070" fg:w="1193223"/><text x="14.0578%" y="2271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,193,223 samples, 0.47%)</title><rect x="13.8078%" y="2245" width="0.4689%" height="15" fill="rgb(206,74,20)" fg:x="35137070" fg:w="1193223"/><text x="14.0578%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,193,223 samples, 0.47%)</title><rect x="13.8078%" y="2229" width="0.4689%" height="15" fill="rgb(230,138,44)" fg:x="35137070" fg:w="1193223"/><text x="14.0578%" y="2239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,193,223 samples, 0.47%)</title><rect x="13.8078%" y="2213" width="0.4689%" height="15" fill="rgb(235,182,43)" fg:x="35137070" fg:w="1193223"/><text x="14.0578%" y="2223.50"></text></g><g><title>alloc::alloc::dealloc (1,193,223 samples, 0.47%)</title><rect x="13.8078%" y="2197" width="0.4689%" height="15" fill="rgb(242,16,51)" fg:x="35137070" fg:w="1193223"/><text x="14.0578%" y="2207.50"></text></g><g><title>cfree (1,193,223 samples, 0.47%)</title><rect x="13.8078%" y="2181" width="0.4689%" height="15" fill="rgb(248,9,4)" fg:x="35137070" fg:w="1193223"/><text x="14.0578%" y="2191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (3,376,934 samples, 1.33%)</title><rect x="13.3396%" y="2661" width="1.3270%" height="15" fill="rgb(210,31,22)" fg:x="33945729" fg:w="3376934"/><text x="13.5896%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (3,376,934 samples, 1.33%)</title><rect x="13.3396%" y="2645" width="1.3270%" height="15" fill="rgb(239,54,39)" fg:x="33945729" fg:w="3376934"/><text x="13.5896%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (3,376,934 samples, 1.33%)</title><rect x="13.3396%" y="2629" width="1.3270%" height="15" fill="rgb(230,99,41)" fg:x="33945729" fg:w="3376934"/><text x="13.5896%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,376,934 samples, 1.33%)</title><rect x="13.3396%" y="2613" width="1.3270%" height="15" fill="rgb(253,106,12)" fg:x="33945729" fg:w="3376934"/><text x="13.5896%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,376,934 samples, 1.33%)</title><rect x="13.3396%" y="2597" width="1.3270%" height="15" fill="rgb(213,46,41)" fg:x="33945729" fg:w="3376934"/><text x="13.5896%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,376,934 samples, 1.33%)</title><rect x="13.3396%" y="2581" width="1.3270%" height="15" fill="rgb(215,133,35)" fg:x="33945729" fg:w="3376934"/><text x="13.5896%" y="2591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,376,934 samples, 1.33%)</title><rect x="13.3396%" y="2565" width="1.3270%" height="15" fill="rgb(213,28,5)" fg:x="33945729" fg:w="3376934"/><text x="13.5896%" y="2575.50"></text></g><g><title>core::mem::drop (3,376,934 samples, 1.33%)</title><rect x="13.3396%" y="2549" width="1.3270%" height="15" fill="rgb(215,77,49)" fg:x="33945729" fg:w="3376934"/><text x="13.5896%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,376,934 samples, 1.33%)</title><rect x="13.3396%" y="2533" width="1.3270%" height="15" fill="rgb(248,100,22)" fg:x="33945729" fg:w="3376934"/><text x="13.5896%" y="2543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,376,934 samples, 1.33%)</title><rect x="13.3396%" y="2517" width="1.3270%" height="15" fill="rgb(208,67,9)" fg:x="33945729" fg:w="3376934"/><text x="13.5896%" y="2527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,376,934 samples, 1.33%)</title><rect x="13.3396%" y="2501" width="1.3270%" height="15" fill="rgb(219,133,21)" fg:x="33945729" fg:w="3376934"/><text x="13.5896%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,185,593 samples, 0.86%)</title><rect x="13.8078%" y="2485" width="0.8589%" height="15" fill="rgb(246,46,29)" fg:x="35137070" fg:w="2185593"/><text x="14.0578%" y="2495.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,185,593 samples, 0.86%)</title><rect x="13.8078%" y="2469" width="0.8589%" height="15" fill="rgb(246,185,52)" fg:x="35137070" fg:w="2185593"/><text x="14.0578%" y="2479.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,185,593 samples, 0.86%)</title><rect x="13.8078%" y="2453" width="0.8589%" height="15" fill="rgb(252,136,11)" fg:x="35137070" fg:w="2185593"/><text x="14.0578%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,185,593 samples, 0.86%)</title><rect x="13.8078%" y="2437" width="0.8589%" height="15" fill="rgb(219,138,53)" fg:x="35137070" fg:w="2185593"/><text x="14.0578%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,185,593 samples, 0.86%)</title><rect x="13.8078%" y="2421" width="0.8589%" height="15" fill="rgb(211,51,23)" fg:x="35137070" fg:w="2185593"/><text x="14.0578%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,185,593 samples, 0.86%)</title><rect x="13.8078%" y="2405" width="0.8589%" height="15" fill="rgb(247,221,28)" fg:x="35137070" fg:w="2185593"/><text x="14.0578%" y="2415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,185,593 samples, 0.86%)</title><rect x="13.8078%" y="2389" width="0.8589%" height="15" fill="rgb(251,222,45)" fg:x="35137070" fg:w="2185593"/><text x="14.0578%" y="2399.50"></text></g><g><title>core::mem::drop (2,185,593 samples, 0.86%)</title><rect x="13.8078%" y="2373" width="0.8589%" height="15" fill="rgb(217,162,53)" fg:x="35137070" fg:w="2185593"/><text x="14.0578%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,185,593 samples, 0.86%)</title><rect x="13.8078%" y="2357" width="0.8589%" height="15" fill="rgb(229,93,14)" fg:x="35137070" fg:w="2185593"/><text x="14.0578%" y="2367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,185,593 samples, 0.86%)</title><rect x="13.8078%" y="2341" width="0.8589%" height="15" fill="rgb(209,67,49)" fg:x="35137070" fg:w="2185593"/><text x="14.0578%" y="2351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,185,593 samples, 0.86%)</title><rect x="13.8078%" y="2325" width="0.8589%" height="15" fill="rgb(213,87,29)" fg:x="35137070" fg:w="2185593"/><text x="14.0578%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2309" width="0.3900%" height="15" fill="rgb(205,151,52)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2319.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2293" width="0.3900%" height="15" fill="rgb(253,215,39)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2303.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2277" width="0.3900%" height="15" fill="rgb(221,220,41)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2261" width="0.3900%" height="15" fill="rgb(218,133,21)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2245" width="0.3900%" height="15" fill="rgb(221,193,43)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2229" width="0.3900%" height="15" fill="rgb(240,128,52)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2213" width="0.3900%" height="15" fill="rgb(253,114,12)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2197" width="0.3900%" height="15" fill="rgb(215,223,47)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2181" width="0.3900%" height="15" fill="rgb(248,225,23)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2165" width="0.3900%" height="15" fill="rgb(250,108,0)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2149" width="0.3900%" height="15" fill="rgb(228,208,7)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2159.50"></text></g><g><title>core::mem::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2133" width="0.3900%" height="15" fill="rgb(244,45,10)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2117" width="0.3900%" height="15" fill="rgb(207,125,25)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2127.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2101" width="0.3900%" height="15" fill="rgb(210,195,18)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2111.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2085" width="0.3900%" height="15" fill="rgb(249,80,12)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2069" width="0.3900%" height="15" fill="rgb(221,65,9)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2079.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2053" width="0.3900%" height="15" fill="rgb(235,49,36)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2063.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2037" width="0.3900%" height="15" fill="rgb(225,32,20)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2021" width="0.3900%" height="15" fill="rgb(215,141,46)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="2005" width="0.3900%" height="15" fill="rgb(250,160,47)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1989" width="0.3900%" height="15" fill="rgb(216,222,40)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1973" width="0.3900%" height="15" fill="rgb(234,217,39)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1957" width="0.3900%" height="15" fill="rgb(207,178,40)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1941" width="0.3900%" height="15" fill="rgb(221,136,13)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1925" width="0.3900%" height="15" fill="rgb(249,199,10)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1909" width="0.3900%" height="15" fill="rgb(249,222,13)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1919.50"></text></g><g><title>core::mem::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1893" width="0.3900%" height="15" fill="rgb(244,185,38)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1877" width="0.3900%" height="15" fill="rgb(236,202,9)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1861" width="0.3900%" height="15" fill="rgb(250,229,37)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1845" width="0.3900%" height="15" fill="rgb(206,174,23)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1829" width="0.3900%" height="15" fill="rgb(211,33,43)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1813" width="0.3900%" height="15" fill="rgb(245,58,50)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1823.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1797" width="0.3900%" height="15" fill="rgb(244,68,36)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1781" width="0.3900%" height="15" fill="rgb(232,229,15)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1765" width="0.3900%" height="15" fill="rgb(254,30,23)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1749" width="0.3900%" height="15" fill="rgb(235,160,14)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1733" width="0.3900%" height="15" fill="rgb(212,155,44)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1717" width="0.3900%" height="15" fill="rgb(226,2,50)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1701" width="0.3900%" height="15" fill="rgb(234,177,6)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1685" width="0.3900%" height="15" fill="rgb(217,24,9)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1669" width="0.3900%" height="15" fill="rgb(220,13,46)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1679.50"></text></g><g><title>core::mem::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1653" width="0.3900%" height="15" fill="rgb(239,221,27)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1637" width="0.3900%" height="15" fill="rgb(222,198,25)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1647.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1621" width="0.3900%" height="15" fill="rgb(211,99,13)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1605" width="0.3900%" height="15" fill="rgb(232,111,31)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1615.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1589" width="0.3900%" height="15" fill="rgb(245,82,37)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1573" width="0.3900%" height="15" fill="rgb(227,149,46)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1557" width="0.3900%" height="15" fill="rgb(218,36,50)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1541" width="0.3900%" height="15" fill="rgb(226,80,48)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1551.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1525" width="0.3900%" height="15" fill="rgb(238,224,15)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1509" width="0.3900%" height="15" fill="rgb(241,136,10)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1493" width="0.3900%" height="15" fill="rgb(208,32,45)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1503.50"></text></g><g><title>alloc::alloc::dealloc (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1477" width="0.3900%" height="15" fill="rgb(207,135,9)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1487.50"></text></g><g><title>cfree (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1461" width="0.3900%" height="15" fill="rgb(206,86,44)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1471.50"></text></g><g><title>[libc.so.6] (992,370 samples, 0.39%)</title><rect x="14.2767%" y="1445" width="0.3900%" height="15" fill="rgb(245,177,15)" fg:x="36330293" fg:w="992370"/><text x="14.5267%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,265,359 samples, 0.50%)</title><rect x="14.6667%" y="2661" width="0.4972%" height="15" fill="rgb(206,64,50)" fg:x="37322663" fg:w="1265359"/><text x="14.9167%" y="2671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,265,359 samples, 0.50%)</title><rect x="14.6667%" y="2645" width="0.4972%" height="15" fill="rgb(234,36,40)" fg:x="37322663" fg:w="1265359"/><text x="14.9167%" y="2655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,265,359 samples, 0.50%)</title><rect x="14.6667%" y="2629" width="0.4972%" height="15" fill="rgb(213,64,8)" fg:x="37322663" fg:w="1265359"/><text x="14.9167%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,265,359 samples, 0.50%)</title><rect x="14.6667%" y="2613" width="0.4972%" height="15" fill="rgb(210,75,36)" fg:x="37322663" fg:w="1265359"/><text x="14.9167%" y="2623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,265,359 samples, 0.50%)</title><rect x="14.6667%" y="2597" width="0.4972%" height="15" fill="rgb(229,88,21)" fg:x="37322663" fg:w="1265359"/><text x="14.9167%" y="2607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,265,359 samples, 0.50%)</title><rect x="14.6667%" y="2581" width="0.4972%" height="15" fill="rgb(252,204,47)" fg:x="37322663" fg:w="1265359"/><text x="14.9167%" y="2591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,265,359 samples, 0.50%)</title><rect x="14.6667%" y="2565" width="0.4972%" height="15" fill="rgb(208,77,27)" fg:x="37322663" fg:w="1265359"/><text x="14.9167%" y="2575.50"></text></g><g><title>alloc::alloc::realloc (1,265,359 samples, 0.50%)</title><rect x="14.6667%" y="2549" width="0.4972%" height="15" fill="rgb(221,76,26)" fg:x="37322663" fg:w="1265359"/><text x="14.9167%" y="2559.50"></text></g><g><title>realloc (1,265,359 samples, 0.50%)</title><rect x="14.6667%" y="2533" width="0.4972%" height="15" fill="rgb(225,139,18)" fg:x="37322663" fg:w="1265359"/><text x="14.9167%" y="2543.50"></text></g><g><title>[libc.so.6] (1,265,359 samples, 0.50%)</title><rect x="14.6667%" y="2517" width="0.4972%" height="15" fill="rgb(230,137,11)" fg:x="37322663" fg:w="1265359"/><text x="14.9167%" y="2527.50"></text></g><g><title>[libc.so.6] (1,265,359 samples, 0.50%)</title><rect x="14.6667%" y="2501" width="0.4972%" height="15" fill="rgb(212,28,1)" fg:x="37322663" fg:w="1265359"/><text x="14.9167%" y="2511.50"></text></g><g><title>[libc.so.6] (1,265,359 samples, 0.50%)</title><rect x="14.6667%" y="2485" width="0.4972%" height="15" fill="rgb(248,164,17)" fg:x="37322663" fg:w="1265359"/><text x="14.9167%" y="2495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1,281,258 samples, 0.50%)</title><rect x="15.1639%" y="2645" width="0.5035%" height="15" fill="rgb(222,171,42)" fg:x="38588022" fg:w="1281258"/><text x="15.4139%" y="2655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,281,258 samples, 0.50%)</title><rect x="15.1639%" y="2629" width="0.5035%" height="15" fill="rgb(243,84,45)" fg:x="38588022" fg:w="1281258"/><text x="15.4139%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,281,258 samples, 0.50%)</title><rect x="15.1639%" y="2613" width="0.5035%" height="15" fill="rgb(252,49,23)" fg:x="38588022" fg:w="1281258"/><text x="15.4139%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,281,258 samples, 0.50%)</title><rect x="15.1639%" y="2597" width="0.5035%" height="15" fill="rgb(215,19,7)" fg:x="38588022" fg:w="1281258"/><text x="15.4139%" y="2607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,281,258 samples, 0.50%)</title><rect x="15.1639%" y="2581" width="0.5035%" height="15" fill="rgb(238,81,41)" fg:x="38588022" fg:w="1281258"/><text x="15.4139%" y="2591.50"></text></g><g><title>malloc (1,281,258 samples, 0.50%)</title><rect x="15.1639%" y="2565" width="0.5035%" height="15" fill="rgb(210,199,37)" fg:x="38588022" fg:w="1281258"/><text x="15.4139%" y="2575.50"></text></g><g><title>[libc.so.6] (1,281,258 samples, 0.50%)</title><rect x="15.1639%" y="2549" width="0.5035%" height="15" fill="rgb(244,192,49)" fg:x="38588022" fg:w="1281258"/><text x="15.4139%" y="2559.50"></text></g><g><title>[libc.so.6] (1,281,258 samples, 0.50%)</title><rect x="15.1639%" y="2533" width="0.5035%" height="15" fill="rgb(226,211,11)" fg:x="38588022" fg:w="1281258"/><text x="15.4139%" y="2543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,318,170 samples, 0.52%)</title><rect x="15.6674%" y="2533" width="0.5180%" height="15" fill="rgb(236,162,54)" fg:x="39869280" fg:w="1318170"/><text x="15.9174%" y="2543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,318,170 samples, 0.52%)</title><rect x="15.6674%" y="2517" width="0.5180%" height="15" fill="rgb(220,229,9)" fg:x="39869280" fg:w="1318170"/><text x="15.9174%" y="2527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,318,170 samples, 0.52%)</title><rect x="15.6674%" y="2501" width="0.5180%" height="15" fill="rgb(250,87,22)" fg:x="39869280" fg:w="1318170"/><text x="15.9174%" y="2511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,318,170 samples, 0.52%)</title><rect x="15.6674%" y="2485" width="0.5180%" height="15" fill="rgb(239,43,17)" fg:x="39869280" fg:w="1318170"/><text x="15.9174%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,318,170 samples, 0.52%)</title><rect x="15.6674%" y="2469" width="0.5180%" height="15" fill="rgb(231,177,25)" fg:x="39869280" fg:w="1318170"/><text x="15.9174%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,318,170 samples, 0.52%)</title><rect x="15.6674%" y="2453" width="0.5180%" height="15" fill="rgb(219,179,1)" fg:x="39869280" fg:w="1318170"/><text x="15.9174%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,318,170 samples, 0.52%)</title><rect x="15.6674%" y="2437" width="0.5180%" height="15" fill="rgb(238,219,53)" fg:x="39869280" fg:w="1318170"/><text x="15.9174%" y="2447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,318,170 samples, 0.52%)</title><rect x="15.6674%" y="2421" width="0.5180%" height="15" fill="rgb(232,167,36)" fg:x="39869280" fg:w="1318170"/><text x="15.9174%" y="2431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,318,170 samples, 0.52%)</title><rect x="15.6674%" y="2405" width="0.5180%" height="15" fill="rgb(244,19,51)" fg:x="39869280" fg:w="1318170"/><text x="15.9174%" y="2415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,318,170 samples, 0.52%)</title><rect x="15.6674%" y="2389" width="0.5180%" height="15" fill="rgb(224,6,22)" fg:x="39869280" fg:w="1318170"/><text x="15.9174%" y="2399.50"></text></g><g><title>alloc::alloc::realloc (1,318,170 samples, 0.52%)</title><rect x="15.6674%" y="2373" width="0.5180%" height="15" fill="rgb(224,145,5)" fg:x="39869280" fg:w="1318170"/><text x="15.9174%" y="2383.50"></text></g><g><title>realloc (1,318,170 samples, 0.52%)</title><rect x="15.6674%" y="2357" width="0.5180%" height="15" fill="rgb(234,130,49)" fg:x="39869280" fg:w="1318170"/><text x="15.9174%" y="2367.50"></text></g><g><title>[libc.so.6] (1,318,170 samples, 0.52%)</title><rect x="15.6674%" y="2341" width="0.5180%" height="15" fill="rgb(254,6,2)" fg:x="39869280" fg:w="1318170"/><text x="15.9174%" y="2351.50"></text></g><g><title>[libc.so.6] (1,318,170 samples, 0.52%)</title><rect x="15.6674%" y="2325" width="0.5180%" height="15" fill="rgb(208,96,46)" fg:x="39869280" fg:w="1318170"/><text x="15.9174%" y="2335.50"></text></g><g><title>benchmark::extract_path_from_command (2,638,268 samples, 1.04%)</title><rect x="15.6674%" y="2645" width="1.0368%" height="15" fill="rgb(239,3,39)" fg:x="39869280" fg:w="2638268"/><text x="15.9174%" y="2655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,638,268 samples, 1.04%)</title><rect x="15.6674%" y="2629" width="1.0368%" height="15" fill="rgb(233,210,1)" fg:x="39869280" fg:w="2638268"/><text x="15.9174%" y="2639.50"></text></g><g><title>benchmark::extract_path_from_command::_{{closure}} (2,638,268 samples, 1.04%)</title><rect x="15.6674%" y="2613" width="1.0368%" height="15" fill="rgb(244,137,37)" fg:x="39869280" fg:w="2638268"/><text x="15.9174%" y="2623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,638,268 samples, 1.04%)</title><rect x="15.6674%" y="2597" width="1.0368%" height="15" fill="rgb(240,136,2)" fg:x="39869280" fg:w="2638268"/><text x="15.9174%" y="2607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,638,268 samples, 1.04%)</title><rect x="15.6674%" y="2581" width="1.0368%" height="15" fill="rgb(239,18,37)" fg:x="39869280" fg:w="2638268"/><text x="15.9174%" y="2591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,638,268 samples, 1.04%)</title><rect x="15.6674%" y="2565" width="1.0368%" height="15" fill="rgb(218,185,22)" fg:x="39869280" fg:w="2638268"/><text x="15.9174%" y="2575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,638,268 samples, 1.04%)</title><rect x="15.6674%" y="2549" width="1.0368%" height="15" fill="rgb(225,218,4)" fg:x="39869280" fg:w="2638268"/><text x="15.9174%" y="2559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,320,098 samples, 0.52%)</title><rect x="16.1854%" y="2533" width="0.5188%" height="15" fill="rgb(230,182,32)" fg:x="41187450" fg:w="1320098"/><text x="16.4354%" y="2543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,320,098 samples, 0.52%)</title><rect x="16.1854%" y="2517" width="0.5188%" height="15" fill="rgb(242,56,43)" fg:x="41187450" fg:w="1320098"/><text x="16.4354%" y="2527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,320,098 samples, 0.52%)</title><rect x="16.1854%" y="2501" width="0.5188%" height="15" fill="rgb(233,99,24)" fg:x="41187450" fg:w="1320098"/><text x="16.4354%" y="2511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,320,098 samples, 0.52%)</title><rect x="16.1854%" y="2485" width="0.5188%" height="15" fill="rgb(234,209,42)" fg:x="41187450" fg:w="1320098"/><text x="16.4354%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,320,098 samples, 0.52%)</title><rect x="16.1854%" y="2469" width="0.5188%" height="15" fill="rgb(227,7,12)" fg:x="41187450" fg:w="1320098"/><text x="16.4354%" y="2479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,320,098 samples, 0.52%)</title><rect x="16.1854%" y="2453" width="0.5188%" height="15" fill="rgb(245,203,43)" fg:x="41187450" fg:w="1320098"/><text x="16.4354%" y="2463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,320,098 samples, 0.52%)</title><rect x="16.1854%" y="2437" width="0.5188%" height="15" fill="rgb(238,205,33)" fg:x="41187450" fg:w="1320098"/><text x="16.4354%" y="2447.50"></text></g><g><title>alloc::alloc::alloc (1,320,098 samples, 0.52%)</title><rect x="16.1854%" y="2421" width="0.5188%" height="15" fill="rgb(231,56,7)" fg:x="41187450" fg:w="1320098"/><text x="16.4354%" y="2431.50"></text></g><g><title>malloc (1,320,098 samples, 0.52%)</title><rect x="16.1854%" y="2405" width="0.5188%" height="15" fill="rgb(244,186,29)" fg:x="41187450" fg:w="1320098"/><text x="16.4354%" y="2415.50"></text></g><g><title>[libc.so.6] (1,320,098 samples, 0.52%)</title><rect x="16.1854%" y="2389" width="0.5188%" height="15" fill="rgb(234,111,31)" fg:x="41187450" fg:w="1320098"/><text x="16.4354%" y="2399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,680,424 samples, 1.05%)</title><rect x="16.7042%" y="2629" width="1.0533%" height="15" fill="rgb(241,149,10)" fg:x="42507548" fg:w="2680424"/><text x="16.9542%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,680,424 samples, 1.05%)</title><rect x="16.7042%" y="2613" width="1.0533%" height="15" fill="rgb(249,206,44)" fg:x="42507548" fg:w="2680424"/><text x="16.9542%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,680,424 samples, 1.05%)</title><rect x="16.7042%" y="2597" width="1.0533%" height="15" fill="rgb(251,153,30)" fg:x="42507548" fg:w="2680424"/><text x="16.9542%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,680,424 samples, 1.05%)</title><rect x="16.7042%" y="2581" width="1.0533%" height="15" fill="rgb(239,152,38)" fg:x="42507548" fg:w="2680424"/><text x="16.9542%" y="2591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,680,424 samples, 1.05%)</title><rect x="16.7042%" y="2565" width="1.0533%" height="15" fill="rgb(249,139,47)" fg:x="42507548" fg:w="2680424"/><text x="16.9542%" y="2575.50"></text></g><g><title>malloc (2,680,424 samples, 1.05%)</title><rect x="16.7042%" y="2549" width="1.0533%" height="15" fill="rgb(244,64,35)" fg:x="42507548" fg:w="2680424"/><text x="16.9542%" y="2559.50"></text></g><g><title>[libc.so.6] (2,680,424 samples, 1.05%)</title><rect x="16.7042%" y="2533" width="1.0533%" height="15" fill="rgb(216,46,15)" fg:x="42507548" fg:w="2680424"/><text x="16.9542%" y="2543.50"></text></g><g><title>[libc.so.6] (2,680,424 samples, 1.05%)</title><rect x="16.7042%" y="2517" width="1.0533%" height="15" fill="rgb(250,74,19)" fg:x="42507548" fg:w="2680424"/><text x="16.9542%" y="2527.50"></text></g><g><title>[libc.so.6] (1,340,309 samples, 0.53%)</title><rect x="17.2308%" y="2501" width="0.5267%" height="15" fill="rgb(249,42,33)" fg:x="43847663" fg:w="1340309"/><text x="17.4808%" y="2511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,237,937 samples, 0.49%)</title><rect x="17.7575%" y="2613" width="0.4865%" height="15" fill="rgb(242,149,17)" fg:x="45187972" fg:w="1237937"/><text x="18.0075%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,237,937 samples, 0.49%)</title><rect x="17.7575%" y="2597" width="0.4865%" height="15" fill="rgb(244,29,21)" fg:x="45187972" fg:w="1237937"/><text x="18.0075%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,237,937 samples, 0.49%)</title><rect x="17.7575%" y="2581" width="0.4865%" height="15" fill="rgb(220,130,37)" fg:x="45187972" fg:w="1237937"/><text x="18.0075%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,237,937 samples, 0.49%)</title><rect x="17.7575%" y="2565" width="0.4865%" height="15" fill="rgb(211,67,2)" fg:x="45187972" fg:w="1237937"/><text x="18.0075%" y="2575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,237,937 samples, 0.49%)</title><rect x="17.7575%" y="2549" width="0.4865%" height="15" fill="rgb(235,68,52)" fg:x="45187972" fg:w="1237937"/><text x="18.0075%" y="2559.50"></text></g><g><title>malloc (1,237,937 samples, 0.49%)</title><rect x="17.7575%" y="2533" width="0.4865%" height="15" fill="rgb(246,142,3)" fg:x="45187972" fg:w="1237937"/><text x="18.0075%" y="2543.50"></text></g><g><title>[libc.so.6] (1,237,937 samples, 0.49%)</title><rect x="17.7575%" y="2517" width="0.4865%" height="15" fill="rgb(241,25,7)" fg:x="45187972" fg:w="1237937"/><text x="18.0075%" y="2527.50"></text></g><g><title>[libc.so.6] (1,237,937 samples, 0.49%)</title><rect x="17.7575%" y="2501" width="0.4865%" height="15" fill="rgb(242,119,39)" fg:x="45187972" fg:w="1237937"/><text x="18.0075%" y="2511.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2565" width="0.5007%" height="15" fill="rgb(241,98,45)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2575.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2549" width="0.5007%" height="15" fill="rgb(254,28,30)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2559.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2533" width="0.5007%" height="15" fill="rgb(241,142,54)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2543.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2517" width="0.5007%" height="15" fill="rgb(222,85,15)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2527.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2501" width="0.5007%" height="15" fill="rgb(210,85,47)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2485" width="0.5007%" height="15" fill="rgb(224,206,25)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2469" width="0.5007%" height="15" fill="rgb(243,201,19)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2479.50"></text></g><g><title>alloc::slice::hack::to_vec (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2453" width="0.5007%" height="15" fill="rgb(236,59,4)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2437" width="0.5007%" height="15" fill="rgb(254,179,45)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2421" width="0.5007%" height="15" fill="rgb(226,14,10)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2405" width="0.5007%" height="15" fill="rgb(244,27,41)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2389" width="0.5007%" height="15" fill="rgb(235,35,32)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2373" width="0.5007%" height="15" fill="rgb(218,68,31)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2357" width="0.5007%" height="15" fill="rgb(207,120,37)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2341" width="0.5007%" height="15" fill="rgb(227,98,0)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2351.50"></text></g><g><title>alloc::alloc::alloc (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2325" width="0.5007%" height="15" fill="rgb(207,7,3)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2335.50"></text></g><g><title>malloc (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2309" width="0.5007%" height="15" fill="rgb(206,98,19)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2319.50"></text></g><g><title>[libc.so.6] (1,274,060 samples, 0.50%)</title><rect x="18.2440%" y="2293" width="0.5007%" height="15" fill="rgb(217,5,26)" fg:x="46425909" fg:w="1274060"/><text x="18.4940%" y="2303.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2549" width="0.4472%" height="15" fill="rgb(235,190,38)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2559.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2533" width="0.4472%" height="15" fill="rgb(247,86,24)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2543.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2517" width="0.4472%" height="15" fill="rgb(205,101,16)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2527.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2501" width="0.4472%" height="15" fill="rgb(246,168,33)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2511.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2485" width="0.4472%" height="15" fill="rgb(231,114,1)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2469" width="0.4472%" height="15" fill="rgb(207,184,53)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2453" width="0.4472%" height="15" fill="rgb(224,95,51)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2463.50"></text></g><g><title>alloc::slice::hack::to_vec (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2437" width="0.4472%" height="15" fill="rgb(212,188,45)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2421" width="0.4472%" height="15" fill="rgb(223,154,38)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2405" width="0.4472%" height="15" fill="rgb(251,22,52)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2389" width="0.4472%" height="15" fill="rgb(229,209,22)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2373" width="0.4472%" height="15" fill="rgb(234,138,34)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2357" width="0.4472%" height="15" fill="rgb(212,95,11)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2341" width="0.4472%" height="15" fill="rgb(240,179,47)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2325" width="0.4472%" height="15" fill="rgb(240,163,11)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2335.50"></text></g><g><title>alloc::alloc::alloc (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2309" width="0.4472%" height="15" fill="rgb(236,37,12)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2319.50"></text></g><g><title>malloc (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2293" width="0.4472%" height="15" fill="rgb(232,164,16)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2303.50"></text></g><g><title>[libc.so.6] (1,138,036 samples, 0.45%)</title><rect x="18.7446%" y="2277" width="0.4472%" height="15" fill="rgb(244,205,15)" fg:x="47699969" fg:w="1138036"/><text x="18.9946%" y="2287.50"></text></g><g><title>benchmark::json_to_html_node (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2533" width="0.4767%" height="15" fill="rgb(223,117,47)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2543.50"></text></g><g><title>benchmark::json_to_html_node (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2517" width="0.4767%" height="15" fill="rgb(244,107,35)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2527.50"></text></g><g><title>benchmark::json_to_html_node (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2501" width="0.4767%" height="15" fill="rgb(205,140,8)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2511.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2485" width="0.4767%" height="15" fill="rgb(228,84,46)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2495.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2469" width="0.4767%" height="15" fill="rgb(254,188,9)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2453" width="0.4767%" height="15" fill="rgb(206,112,54)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2437" width="0.4767%" height="15" fill="rgb(216,84,49)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2447.50"></text></g><g><title>alloc::string::String::push_str (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2421" width="0.4767%" height="15" fill="rgb(214,194,35)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2405" width="0.4767%" height="15" fill="rgb(249,28,3)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2389" width="0.4767%" height="15" fill="rgb(222,56,52)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2373" width="0.4767%" height="15" fill="rgb(245,217,50)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2357" width="0.4767%" height="15" fill="rgb(213,201,24)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2341" width="0.4767%" height="15" fill="rgb(248,116,28)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2325" width="0.4767%" height="15" fill="rgb(219,72,43)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2309" width="0.4767%" height="15" fill="rgb(209,138,14)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2293" width="0.4767%" height="15" fill="rgb(222,18,33)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2277" width="0.4767%" height="15" fill="rgb(213,199,7)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2287.50"></text></g><g><title>malloc (1,213,009 samples, 0.48%)</title><rect x="19.1919%" y="2261" width="0.4767%" height="15" fill="rgb(250,110,10)" fg:x="48838005" fg:w="1213009"/><text x="19.4419%" y="2271.50"></text></g><g><title>benchmark::json_to_html_node (4,808,909 samples, 1.89%)</title><rect x="18.2440%" y="2581" width="1.8898%" height="15" fill="rgb(248,123,6)" fg:x="46425909" fg:w="4808909"/><text x="18.4940%" y="2591.50">b..</text></g><g><title>benchmark::json_to_html_node (3,534,849 samples, 1.39%)</title><rect x="18.7446%" y="2565" width="1.3891%" height="15" fill="rgb(206,91,31)" fg:x="47699969" fg:w="3534849"/><text x="18.9946%" y="2575.50"></text></g><g><title>benchmark::json_to_html_node (2,396,813 samples, 0.94%)</title><rect x="19.1919%" y="2549" width="0.9419%" height="15" fill="rgb(211,154,13)" fg:x="48838005" fg:w="2396813"/><text x="19.4419%" y="2559.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (1,183,804 samples, 0.47%)</title><rect x="19.6685%" y="2533" width="0.4652%" height="15" fill="rgb(225,148,7)" fg:x="50051014" fg:w="1183804"/><text x="19.9185%" y="2543.50"></text></g><g><title>benchmark::json_to_html_node (6,978,801 samples, 2.74%)</title><rect x="17.7575%" y="2629" width="2.7425%" height="15" fill="rgb(220,160,43)" fg:x="45187972" fg:w="6978801"/><text x="18.0075%" y="2639.50">be..</text></g><g><title>benchmark::json_to_html_node (5,740,864 samples, 2.26%)</title><rect x="18.2440%" y="2613" width="2.2560%" height="15" fill="rgb(213,52,39)" fg:x="46425909" fg:w="5740864"/><text x="18.4940%" y="2623.50">b..</text></g><g><title>benchmark::json_to_html_node (5,740,864 samples, 2.26%)</title><rect x="18.2440%" y="2597" width="2.2560%" height="15" fill="rgb(243,137,7)" fg:x="46425909" fg:w="5740864"/><text x="18.4940%" y="2607.50">b..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (931,955 samples, 0.37%)</title><rect x="20.1337%" y="2581" width="0.3662%" height="15" fill="rgb(230,79,13)" fg:x="51234818" fg:w="931955"/><text x="20.3837%" y="2591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (931,955 samples, 0.37%)</title><rect x="20.1337%" y="2565" width="0.3662%" height="15" fill="rgb(247,105,23)" fg:x="51234818" fg:w="931955"/><text x="20.3837%" y="2575.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (931,955 samples, 0.37%)</title><rect x="20.1337%" y="2549" width="0.3662%" height="15" fill="rgb(223,179,41)" fg:x="51234818" fg:w="931955"/><text x="20.3837%" y="2559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (931,955 samples, 0.37%)</title><rect x="20.1337%" y="2533" width="0.3662%" height="15" fill="rgb(218,9,34)" fg:x="51234818" fg:w="931955"/><text x="20.3837%" y="2543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (931,955 samples, 0.37%)</title><rect x="20.1337%" y="2517" width="0.3662%" height="15" fill="rgb(222,106,8)" fg:x="51234818" fg:w="931955"/><text x="20.3837%" y="2527.50"></text></g><g><title>benchmark::apply_frame_modifications (14,616,228 samples, 5.74%)</title><rect x="15.1639%" y="2661" width="5.7437%" height="15" fill="rgb(211,220,0)" fg:x="38588022" fg:w="14616228"/><text x="15.4139%" y="2671.50">benchma..</text></g><g><title>benchmark::json_to_html_node (10,696,702 samples, 4.20%)</title><rect x="16.7042%" y="2645" width="4.2035%" height="15" fill="rgb(229,52,16)" fg:x="42507548" fg:w="10696702"/><text x="16.9542%" y="2655.50">bench..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2629" width="0.4077%" height="15" fill="rgb(212,155,18)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2639.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2613" width="0.4077%" height="15" fill="rgb(242,21,14)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2623.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2597" width="0.4077%" height="15" fill="rgb(222,19,48)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2607.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2581" width="0.4077%" height="15" fill="rgb(232,45,27)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2565" width="0.4077%" height="15" fill="rgb(249,103,42)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2549" width="0.4077%" height="15" fill="rgb(246,81,33)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2533" width="0.4077%" height="15" fill="rgb(252,33,42)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2517" width="0.4077%" height="15" fill="rgb(209,212,41)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2501" width="0.4077%" height="15" fill="rgb(207,154,6)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2511.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2485" width="0.4077%" height="15" fill="rgb(223,64,47)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2495.50"></text></g><g><title>benchmark::json_to_html_node::_{{closure}} (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2469" width="0.4077%" height="15" fill="rgb(211,161,38)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2479.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2453" width="0.4077%" height="15" fill="rgb(219,138,40)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2463.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2437" width="0.4077%" height="15" fill="rgb(241,228,46)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2447.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2421" width="0.4077%" height="15" fill="rgb(223,209,38)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2431.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2405" width="0.4077%" height="15" fill="rgb(236,164,45)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2415.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2389" width="0.4077%" height="15" fill="rgb(231,15,5)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2373" width="0.4077%" height="15" fill="rgb(252,35,15)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2357" width="0.4077%" height="15" fill="rgb(248,181,18)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2367.50"></text></g><g><title>alloc::slice::hack::to_vec (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2341" width="0.4077%" height="15" fill="rgb(233,39,42)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2325" width="0.4077%" height="15" fill="rgb(238,110,33)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2309" width="0.4077%" height="15" fill="rgb(233,195,10)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2293" width="0.4077%" height="15" fill="rgb(254,105,3)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2277" width="0.4077%" height="15" fill="rgb(221,225,9)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2261" width="0.4077%" height="15" fill="rgb(224,227,45)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2245" width="0.4077%" height="15" fill="rgb(229,198,43)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2229" width="0.4077%" height="15" fill="rgb(206,209,35)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2239.50"></text></g><g><title>alloc::alloc::alloc (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2213" width="0.4077%" height="15" fill="rgb(245,195,53)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2223.50"></text></g><g><title>malloc (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2197" width="0.4077%" height="15" fill="rgb(240,92,26)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2207.50"></text></g><g><title>[libc.so.6] (1,037,477 samples, 0.41%)</title><rect x="20.5000%" y="2181" width="0.4077%" height="15" fill="rgb(207,40,23)" fg:x="52166773" fg:w="1037477"/><text x="20.7500%" y="2191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,258,143 samples, 0.49%)</title><rect x="20.9077%" y="2645" width="0.4944%" height="15" fill="rgb(223,111,35)" fg:x="53204250" fg:w="1258143"/><text x="21.1577%" y="2655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1,258,143 samples, 0.49%)</title><rect x="20.9077%" y="2629" width="0.4944%" height="15" fill="rgb(229,147,28)" fg:x="53204250" fg:w="1258143"/><text x="21.1577%" y="2639.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1,258,143 samples, 0.49%)</title><rect x="20.9077%" y="2613" width="0.4944%" height="15" fill="rgb(211,29,28)" fg:x="53204250" fg:w="1258143"/><text x="21.1577%" y="2623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1,258,143 samples, 0.49%)</title><rect x="20.9077%" y="2597" width="0.4944%" height="15" fill="rgb(228,72,33)" fg:x="53204250" fg:w="1258143"/><text x="21.1577%" y="2607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,447,027 samples, 0.57%)</title><rect x="21.4021%" y="2389" width="0.5686%" height="15" fill="rgb(205,214,31)" fg:x="54462393" fg:w="1447027"/><text x="21.6521%" y="2399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,447,027 samples, 0.57%)</title><rect x="21.4021%" y="2373" width="0.5686%" height="15" fill="rgb(224,111,15)" fg:x="54462393" fg:w="1447027"/><text x="21.6521%" y="2383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,447,027 samples, 0.57%)</title><rect x="21.4021%" y="2357" width="0.5686%" height="15" fill="rgb(253,21,26)" fg:x="54462393" fg:w="1447027"/><text x="21.6521%" y="2367.50"></text></g><g><title>alloc::slice::hack::to_vec (1,447,027 samples, 0.57%)</title><rect x="21.4021%" y="2341" width="0.5686%" height="15" fill="rgb(245,139,43)" fg:x="54462393" fg:w="1447027"/><text x="21.6521%" y="2351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,447,027 samples, 0.57%)</title><rect x="21.4021%" y="2325" width="0.5686%" height="15" fill="rgb(252,170,7)" fg:x="54462393" fg:w="1447027"/><text x="21.6521%" y="2335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,447,027 samples, 0.57%)</title><rect x="21.4021%" y="2309" width="0.5686%" height="15" fill="rgb(231,118,14)" fg:x="54462393" fg:w="1447027"/><text x="21.6521%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,447,027 samples, 0.57%)</title><rect x="21.4021%" y="2293" width="0.5686%" height="15" fill="rgb(238,83,0)" fg:x="54462393" fg:w="1447027"/><text x="21.6521%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,447,027 samples, 0.57%)</title><rect x="21.4021%" y="2277" width="0.5686%" height="15" fill="rgb(221,39,39)" fg:x="54462393" fg:w="1447027"/><text x="21.6521%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,447,027 samples, 0.57%)</title><rect x="21.4021%" y="2261" width="0.5686%" height="15" fill="rgb(222,119,46)" fg:x="54462393" fg:w="1447027"/><text x="21.6521%" y="2271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,447,027 samples, 0.57%)</title><rect x="21.4021%" y="2245" width="0.5686%" height="15" fill="rgb(222,165,49)" fg:x="54462393" fg:w="1447027"/><text x="21.6521%" y="2255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,447,027 samples, 0.57%)</title><rect x="21.4021%" y="2229" width="0.5686%" height="15" fill="rgb(219,113,52)" fg:x="54462393" fg:w="1447027"/><text x="21.6521%" y="2239.50"></text></g><g><title>alloc::alloc::alloc (1,447,027 samples, 0.57%)</title><rect x="21.4021%" y="2213" width="0.5686%" height="15" fill="rgb(214,7,15)" fg:x="54462393" fg:w="1447027"/><text x="21.6521%" y="2223.50"></text></g><g><title>malloc (1,447,027 samples, 0.57%)</title><rect x="21.4021%" y="2197" width="0.5686%" height="15" fill="rgb(235,32,4)" fg:x="54462393" fg:w="1447027"/><text x="21.6521%" y="2207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,307,297 samples, 0.51%)</title><rect x="21.9707%" y="2309" width="0.5137%" height="15" fill="rgb(238,90,54)" fg:x="55909420" fg:w="1307297"/><text x="22.2207%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,307,297 samples, 0.51%)</title><rect x="21.9707%" y="2293" width="0.5137%" height="15" fill="rgb(213,208,19)" fg:x="55909420" fg:w="1307297"/><text x="22.2207%" y="2303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,307,297 samples, 0.51%)</title><rect x="21.9707%" y="2277" width="0.5137%" height="15" fill="rgb(233,156,4)" fg:x="55909420" fg:w="1307297"/><text x="22.2207%" y="2287.50"></text></g><g><title>alloc::slice::hack::to_vec (1,307,297 samples, 0.51%)</title><rect x="21.9707%" y="2261" width="0.5137%" height="15" fill="rgb(207,194,5)" fg:x="55909420" fg:w="1307297"/><text x="22.2207%" y="2271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,307,297 samples, 0.51%)</title><rect x="21.9707%" y="2245" width="0.5137%" height="15" fill="rgb(206,111,30)" fg:x="55909420" fg:w="1307297"/><text x="22.2207%" y="2255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,307,297 samples, 0.51%)</title><rect x="21.9707%" y="2229" width="0.5137%" height="15" fill="rgb(243,70,54)" fg:x="55909420" fg:w="1307297"/><text x="22.2207%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,307,297 samples, 0.51%)</title><rect x="21.9707%" y="2213" width="0.5137%" height="15" fill="rgb(242,28,8)" fg:x="55909420" fg:w="1307297"/><text x="22.2207%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,307,297 samples, 0.51%)</title><rect x="21.9707%" y="2197" width="0.5137%" height="15" fill="rgb(219,106,18)" fg:x="55909420" fg:w="1307297"/><text x="22.2207%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,307,297 samples, 0.51%)</title><rect x="21.9707%" y="2181" width="0.5137%" height="15" fill="rgb(244,222,10)" fg:x="55909420" fg:w="1307297"/><text x="22.2207%" y="2191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,307,297 samples, 0.51%)</title><rect x="21.9707%" y="2165" width="0.5137%" height="15" fill="rgb(236,179,52)" fg:x="55909420" fg:w="1307297"/><text x="22.2207%" y="2175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,307,297 samples, 0.51%)</title><rect x="21.9707%" y="2149" width="0.5137%" height="15" fill="rgb(213,23,39)" fg:x="55909420" fg:w="1307297"/><text x="22.2207%" y="2159.50"></text></g><g><title>alloc::alloc::alloc (1,307,297 samples, 0.51%)</title><rect x="21.9707%" y="2133" width="0.5137%" height="15" fill="rgb(238,48,10)" fg:x="55909420" fg:w="1307297"/><text x="22.2207%" y="2143.50"></text></g><g><title>malloc (1,307,297 samples, 0.51%)</title><rect x="21.9707%" y="2117" width="0.5137%" height="15" fill="rgb(251,196,23)" fg:x="55909420" fg:w="1307297"/><text x="22.2207%" y="2127.50"></text></g><g><title>[libc.so.6] (1,307,297 samples, 0.51%)</title><rect x="21.9707%" y="2101" width="0.5137%" height="15" fill="rgb(250,152,24)" fg:x="55909420" fg:w="1307297"/><text x="22.2207%" y="2111.50"></text></g><g><title>__rdl_alloc (1,354,071 samples, 0.53%)</title><rect x="24.0993%" y="1957" width="0.5321%" height="15" fill="rgb(209,150,17)" fg:x="61326073" fg:w="1354071"/><text x="24.3493%" y="1967.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,354,071 samples, 0.53%)</title><rect x="24.0993%" y="1941" width="0.5321%" height="15" fill="rgb(234,202,34)" fg:x="61326073" fg:w="1354071"/><text x="24.3493%" y="1951.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,481,084 samples, 2.55%)</title><rect x="23.5305%" y="2149" width="2.5469%" height="15" fill="rgb(253,148,53)" fg:x="59878786" fg:w="6481084"/><text x="23.7805%" y="2159.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,033,797 samples, 1.98%)</title><rect x="24.0993%" y="2133" width="1.9781%" height="15" fill="rgb(218,129,16)" fg:x="61326073" fg:w="5033797"/><text x="24.3493%" y="2143.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,033,797 samples, 1.98%)</title><rect x="24.0993%" y="2117" width="1.9781%" height="15" fill="rgb(216,85,19)" fg:x="61326073" fg:w="5033797"/><text x="24.3493%" y="2127.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,033,797 samples, 1.98%)</title><rect x="24.0993%" y="2101" width="1.9781%" height="15" fill="rgb(235,228,7)" fg:x="61326073" fg:w="5033797"/><text x="24.3493%" y="2111.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,033,797 samples, 1.98%)</title><rect x="24.0993%" y="2085" width="1.9781%" height="15" fill="rgb(245,175,0)" fg:x="61326073" fg:w="5033797"/><text x="24.3493%" y="2095.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,033,797 samples, 1.98%)</title><rect x="24.0993%" y="2069" width="1.9781%" height="15" fill="rgb(208,168,36)" fg:x="61326073" fg:w="5033797"/><text x="24.3493%" y="2079.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,033,797 samples, 1.98%)</title><rect x="24.0993%" y="2053" width="1.9781%" height="15" fill="rgb(246,171,24)" fg:x="61326073" fg:w="5033797"/><text x="24.3493%" y="2063.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,033,797 samples, 1.98%)</title><rect x="24.0993%" y="2037" width="1.9781%" height="15" fill="rgb(215,142,24)" fg:x="61326073" fg:w="5033797"/><text x="24.3493%" y="2047.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,033,797 samples, 1.98%)</title><rect x="24.0993%" y="2021" width="1.9781%" height="15" fill="rgb(250,187,7)" fg:x="61326073" fg:w="5033797"/><text x="24.3493%" y="2031.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,033,797 samples, 1.98%)</title><rect x="24.0993%" y="2005" width="1.9781%" height="15" fill="rgb(228,66,33)" fg:x="61326073" fg:w="5033797"/><text x="24.3493%" y="2015.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,033,797 samples, 1.98%)</title><rect x="24.0993%" y="1989" width="1.9781%" height="15" fill="rgb(234,215,21)" fg:x="61326073" fg:w="5033797"/><text x="24.3493%" y="1999.50">a..</text></g><g><title>alloc::alloc::alloc (5,033,797 samples, 1.98%)</title><rect x="24.0993%" y="1973" width="1.9781%" height="15" fill="rgb(222,191,20)" fg:x="61326073" fg:w="5033797"/><text x="24.3493%" y="1983.50">a..</text></g><g><title>malloc (3,679,726 samples, 1.45%)</title><rect x="24.6314%" y="1957" width="1.4460%" height="15" fill="rgb(245,79,54)" fg:x="62680144" fg:w="3679726"/><text x="24.8814%" y="1967.50"></text></g><g><title>[libc.so.6] (2,475,304 samples, 0.97%)</title><rect x="25.1047%" y="1941" width="0.9727%" height="15" fill="rgb(240,10,37)" fg:x="63884566" fg:w="2475304"/><text x="25.3547%" y="1951.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,270,033 samples, 0.50%)</title><rect x="26.0774%" y="2069" width="0.4991%" height="15" fill="rgb(214,192,32)" fg:x="66359870" fg:w="1270033"/><text x="26.3274%" y="2079.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,270,033 samples, 0.50%)</title><rect x="26.0774%" y="2053" width="0.4991%" height="15" fill="rgb(209,36,54)" fg:x="66359870" fg:w="1270033"/><text x="26.3274%" y="2063.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,270,033 samples, 0.50%)</title><rect x="26.0774%" y="2037" width="0.4991%" height="15" fill="rgb(220,10,11)" fg:x="66359870" fg:w="1270033"/><text x="26.3274%" y="2047.50"></text></g><g><title>alloc::slice::hack::to_vec (1,270,033 samples, 0.50%)</title><rect x="26.0774%" y="2021" width="0.4991%" height="15" fill="rgb(221,106,17)" fg:x="66359870" fg:w="1270033"/><text x="26.3274%" y="2031.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,270,033 samples, 0.50%)</title><rect x="26.0774%" y="2005" width="0.4991%" height="15" fill="rgb(251,142,44)" fg:x="66359870" fg:w="1270033"/><text x="26.3274%" y="2015.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,270,033 samples, 0.50%)</title><rect x="26.0774%" y="1989" width="0.4991%" height="15" fill="rgb(238,13,15)" fg:x="66359870" fg:w="1270033"/><text x="26.3274%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,270,033 samples, 0.50%)</title><rect x="26.0774%" y="1973" width="0.4991%" height="15" fill="rgb(208,107,27)" fg:x="66359870" fg:w="1270033"/><text x="26.3274%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,270,033 samples, 0.50%)</title><rect x="26.0774%" y="1957" width="0.4991%" height="15" fill="rgb(205,136,37)" fg:x="66359870" fg:w="1270033"/><text x="26.3274%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,270,033 samples, 0.50%)</title><rect x="26.0774%" y="1941" width="0.4991%" height="15" fill="rgb(250,205,27)" fg:x="66359870" fg:w="1270033"/><text x="26.3274%" y="1951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,270,033 samples, 0.50%)</title><rect x="26.0774%" y="1925" width="0.4991%" height="15" fill="rgb(210,80,43)" fg:x="66359870" fg:w="1270033"/><text x="26.3274%" y="1935.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,270,033 samples, 0.50%)</title><rect x="26.0774%" y="1909" width="0.4991%" height="15" fill="rgb(247,160,36)" fg:x="66359870" fg:w="1270033"/><text x="26.3274%" y="1919.50"></text></g><g><title>alloc::alloc::alloc (1,270,033 samples, 0.50%)</title><rect x="26.0774%" y="1893" width="0.4991%" height="15" fill="rgb(234,13,49)" fg:x="66359870" fg:w="1270033"/><text x="26.3274%" y="1903.50"></text></g><g><title>malloc (1,270,033 samples, 0.50%)</title><rect x="26.0774%" y="1877" width="0.4991%" height="15" fill="rgb(234,122,0)" fg:x="66359870" fg:w="1270033"/><text x="26.3274%" y="1887.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,267,435 samples, 0.50%)</title><rect x="26.5765%" y="1989" width="0.4981%" height="15" fill="rgb(207,146,38)" fg:x="67629903" fg:w="1267435"/><text x="26.8265%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,267,435 samples, 0.50%)</title><rect x="26.5765%" y="1973" width="0.4981%" height="15" fill="rgb(207,177,25)" fg:x="67629903" fg:w="1267435"/><text x="26.8265%" y="1983.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,267,435 samples, 0.50%)</title><rect x="26.5765%" y="1957" width="0.4981%" height="15" fill="rgb(211,178,42)" fg:x="67629903" fg:w="1267435"/><text x="26.8265%" y="1967.50"></text></g><g><title>alloc::slice::hack::to_vec (1,267,435 samples, 0.50%)</title><rect x="26.5765%" y="1941" width="0.4981%" height="15" fill="rgb(230,69,54)" fg:x="67629903" fg:w="1267435"/><text x="26.8265%" y="1951.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,267,435 samples, 0.50%)</title><rect x="26.5765%" y="1925" width="0.4981%" height="15" fill="rgb(214,135,41)" fg:x="67629903" fg:w="1267435"/><text x="26.8265%" y="1935.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,267,435 samples, 0.50%)</title><rect x="26.5765%" y="1909" width="0.4981%" height="15" fill="rgb(237,67,25)" fg:x="67629903" fg:w="1267435"/><text x="26.8265%" y="1919.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,267,435 samples, 0.50%)</title><rect x="26.5765%" y="1893" width="0.4981%" height="15" fill="rgb(222,189,50)" fg:x="67629903" fg:w="1267435"/><text x="26.8265%" y="1903.50"></text></g><g><title>[libc.so.6] (1,267,435 samples, 0.50%)</title><rect x="26.5765%" y="1877" width="0.4981%" height="15" fill="rgb(245,148,34)" fg:x="67629903" fg:w="1267435"/><text x="26.8265%" y="1887.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,329,706 samples, 0.52%)</title><rect x="27.5586%" y="1589" width="0.5225%" height="15" fill="rgb(222,29,6)" fg:x="70129090" fg:w="1329706"/><text x="27.8086%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,329,706 samples, 0.52%)</title><rect x="27.5586%" y="1573" width="0.5225%" height="15" fill="rgb(221,189,43)" fg:x="70129090" fg:w="1329706"/><text x="27.8086%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,329,706 samples, 0.52%)</title><rect x="27.5586%" y="1557" width="0.5225%" height="15" fill="rgb(207,36,27)" fg:x="70129090" fg:w="1329706"/><text x="27.8086%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (1,329,706 samples, 0.52%)</title><rect x="27.5586%" y="1541" width="0.5225%" height="15" fill="rgb(217,90,24)" fg:x="70129090" fg:w="1329706"/><text x="27.8086%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,329,706 samples, 0.52%)</title><rect x="27.5586%" y="1525" width="0.5225%" height="15" fill="rgb(224,66,35)" fg:x="70129090" fg:w="1329706"/><text x="27.8086%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,329,706 samples, 0.52%)</title><rect x="27.5586%" y="1509" width="0.5225%" height="15" fill="rgb(221,13,50)" fg:x="70129090" fg:w="1329706"/><text x="27.8086%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,329,706 samples, 0.52%)</title><rect x="27.5586%" y="1493" width="0.5225%" height="15" fill="rgb(236,68,49)" fg:x="70129090" fg:w="1329706"/><text x="27.8086%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,329,706 samples, 0.52%)</title><rect x="27.5586%" y="1477" width="0.5225%" height="15" fill="rgb(229,146,28)" fg:x="70129090" fg:w="1329706"/><text x="27.8086%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,329,706 samples, 0.52%)</title><rect x="27.5586%" y="1461" width="0.5225%" height="15" fill="rgb(225,31,38)" fg:x="70129090" fg:w="1329706"/><text x="27.8086%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,329,706 samples, 0.52%)</title><rect x="27.5586%" y="1445" width="0.5225%" height="15" fill="rgb(250,208,3)" fg:x="70129090" fg:w="1329706"/><text x="27.8086%" y="1455.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,329,706 samples, 0.52%)</title><rect x="27.5586%" y="1429" width="0.5225%" height="15" fill="rgb(246,54,23)" fg:x="70129090" fg:w="1329706"/><text x="27.8086%" y="1439.50"></text></g><g><title>alloc::alloc::alloc (1,329,706 samples, 0.52%)</title><rect x="27.5586%" y="1413" width="0.5225%" height="15" fill="rgb(243,76,11)" fg:x="70129090" fg:w="1329706"/><text x="27.8086%" y="1423.50"></text></g><g><title>malloc (1,329,706 samples, 0.52%)</title><rect x="27.5586%" y="1397" width="0.5225%" height="15" fill="rgb(245,21,50)" fg:x="70129090" fg:w="1329706"/><text x="27.8086%" y="1407.50"></text></g><g><title>[libc.so.6] (1,329,706 samples, 0.52%)</title><rect x="27.5586%" y="1381" width="0.5225%" height="15" fill="rgb(228,9,43)" fg:x="70129090" fg:w="1329706"/><text x="27.8086%" y="1391.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,219,223 samples, 0.48%)</title><rect x="28.0811%" y="1349" width="0.4791%" height="15" fill="rgb(208,100,47)" fg:x="71458796" fg:w="1219223"/><text x="28.3311%" y="1359.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,348,831 samples, 0.53%)</title><rect x="28.5603%" y="1269" width="0.5300%" height="15" fill="rgb(232,26,8)" fg:x="72678019" fg:w="1348831"/><text x="28.8103%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,348,831 samples, 0.53%)</title><rect x="28.5603%" y="1253" width="0.5300%" height="15" fill="rgb(216,166,38)" fg:x="72678019" fg:w="1348831"/><text x="28.8103%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,348,831 samples, 0.53%)</title><rect x="28.5603%" y="1237" width="0.5300%" height="15" fill="rgb(251,202,51)" fg:x="72678019" fg:w="1348831"/><text x="28.8103%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (1,348,831 samples, 0.53%)</title><rect x="28.5603%" y="1221" width="0.5300%" height="15" fill="rgb(254,216,34)" fg:x="72678019" fg:w="1348831"/><text x="28.8103%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,348,831 samples, 0.53%)</title><rect x="28.5603%" y="1205" width="0.5300%" height="15" fill="rgb(251,32,27)" fg:x="72678019" fg:w="1348831"/><text x="28.8103%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,348,831 samples, 0.53%)</title><rect x="28.5603%" y="1189" width="0.5300%" height="15" fill="rgb(208,127,28)" fg:x="72678019" fg:w="1348831"/><text x="28.8103%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,348,831 samples, 0.53%)</title><rect x="28.5603%" y="1173" width="0.5300%" height="15" fill="rgb(224,137,22)" fg:x="72678019" fg:w="1348831"/><text x="28.8103%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,348,831 samples, 0.53%)</title><rect x="28.5603%" y="1157" width="0.5300%" height="15" fill="rgb(254,70,32)" fg:x="72678019" fg:w="1348831"/><text x="28.8103%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,348,831 samples, 0.53%)</title><rect x="28.5603%" y="1141" width="0.5300%" height="15" fill="rgb(229,75,37)" fg:x="72678019" fg:w="1348831"/><text x="28.8103%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,348,831 samples, 0.53%)</title><rect x="28.5603%" y="1125" width="0.5300%" height="15" fill="rgb(252,64,23)" fg:x="72678019" fg:w="1348831"/><text x="28.8103%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,348,831 samples, 0.53%)</title><rect x="28.5603%" y="1109" width="0.5300%" height="15" fill="rgb(232,162,48)" fg:x="72678019" fg:w="1348831"/><text x="28.8103%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (1,348,831 samples, 0.53%)</title><rect x="28.5603%" y="1093" width="0.5300%" height="15" fill="rgb(246,160,12)" fg:x="72678019" fg:w="1348831"/><text x="28.8103%" y="1103.50"></text></g><g><title>malloc (1,348,831 samples, 0.53%)</title><rect x="28.5603%" y="1077" width="0.5300%" height="15" fill="rgb(247,166,0)" fg:x="72678019" fg:w="1348831"/><text x="28.8103%" y="1087.50"></text></g><g><title>[libc.so.6] (1,348,831 samples, 0.53%)</title><rect x="28.5603%" y="1061" width="0.5300%" height="15" fill="rgb(249,219,21)" fg:x="72678019" fg:w="1348831"/><text x="28.8103%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,349,842 samples, 0.53%)</title><rect x="29.0903%" y="1205" width="0.5304%" height="15" fill="rgb(205,209,3)" fg:x="74026850" fg:w="1349842"/><text x="29.3403%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,349,842 samples, 0.53%)</title><rect x="29.0903%" y="1189" width="0.5304%" height="15" fill="rgb(243,44,1)" fg:x="74026850" fg:w="1349842"/><text x="29.3403%" y="1199.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,349,842 samples, 0.53%)</title><rect x="29.0903%" y="1173" width="0.5304%" height="15" fill="rgb(206,159,16)" fg:x="74026850" fg:w="1349842"/><text x="29.3403%" y="1183.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,349,842 samples, 0.53%)</title><rect x="29.0903%" y="1157" width="0.5304%" height="15" fill="rgb(244,77,30)" fg:x="74026850" fg:w="1349842"/><text x="29.3403%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,268,453 samples, 0.50%)</title><rect x="29.6207%" y="1189" width="0.4985%" height="15" fill="rgb(218,69,12)" fg:x="75376692" fg:w="1268453"/><text x="29.8707%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,268,453 samples, 0.50%)</title><rect x="29.6207%" y="1173" width="0.4985%" height="15" fill="rgb(212,87,7)" fg:x="75376692" fg:w="1268453"/><text x="29.8707%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (1,268,453 samples, 0.50%)</title><rect x="29.6207%" y="1157" width="0.4985%" height="15" fill="rgb(245,114,25)" fg:x="75376692" fg:w="1268453"/><text x="29.8707%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,268,453 samples, 0.50%)</title><rect x="29.6207%" y="1141" width="0.4985%" height="15" fill="rgb(210,61,42)" fg:x="75376692" fg:w="1268453"/><text x="29.8707%" y="1151.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,268,453 samples, 0.50%)</title><rect x="29.6207%" y="1125" width="0.4985%" height="15" fill="rgb(211,52,33)" fg:x="75376692" fg:w="1268453"/><text x="29.8707%" y="1135.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,268,453 samples, 0.50%)</title><rect x="29.6207%" y="1109" width="0.4985%" height="15" fill="rgb(234,58,33)" fg:x="75376692" fg:w="1268453"/><text x="29.8707%" y="1119.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,324,633 samples, 0.52%)</title><rect x="30.1192%" y="1189" width="0.5205%" height="15" fill="rgb(220,115,36)" fg:x="76645145" fg:w="1324633"/><text x="30.3692%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,324,633 samples, 0.52%)</title><rect x="30.1192%" y="1173" width="0.5205%" height="15" fill="rgb(243,153,54)" fg:x="76645145" fg:w="1324633"/><text x="30.3692%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,324,633 samples, 0.52%)</title><rect x="30.1192%" y="1157" width="0.5205%" height="15" fill="rgb(251,47,18)" fg:x="76645145" fg:w="1324633"/><text x="30.3692%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,324,633 samples, 0.52%)</title><rect x="30.1192%" y="1141" width="0.5205%" height="15" fill="rgb(242,102,42)" fg:x="76645145" fg:w="1324633"/><text x="30.3692%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (1,324,633 samples, 0.52%)</title><rect x="30.1192%" y="1125" width="0.5205%" height="15" fill="rgb(234,31,38)" fg:x="76645145" fg:w="1324633"/><text x="30.3692%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,324,633 samples, 0.52%)</title><rect x="30.1192%" y="1109" width="0.5205%" height="15" fill="rgb(221,117,51)" fg:x="76645145" fg:w="1324633"/><text x="30.3692%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,324,633 samples, 0.52%)</title><rect x="30.1192%" y="1093" width="0.5205%" height="15" fill="rgb(212,20,18)" fg:x="76645145" fg:w="1324633"/><text x="30.3692%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,324,633 samples, 0.52%)</title><rect x="30.1192%" y="1077" width="0.5205%" height="15" fill="rgb(245,133,36)" fg:x="76645145" fg:w="1324633"/><text x="30.3692%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,324,633 samples, 0.52%)</title><rect x="30.1192%" y="1061" width="0.5205%" height="15" fill="rgb(212,6,19)" fg:x="76645145" fg:w="1324633"/><text x="30.3692%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,324,633 samples, 0.52%)</title><rect x="30.1192%" y="1045" width="0.5205%" height="15" fill="rgb(218,1,36)" fg:x="76645145" fg:w="1324633"/><text x="30.3692%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,324,633 samples, 0.52%)</title><rect x="30.1192%" y="1029" width="0.5205%" height="15" fill="rgb(246,84,54)" fg:x="76645145" fg:w="1324633"/><text x="30.3692%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,324,633 samples, 0.52%)</title><rect x="30.1192%" y="1013" width="0.5205%" height="15" fill="rgb(242,110,6)" fg:x="76645145" fg:w="1324633"/><text x="30.3692%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (1,324,633 samples, 0.52%)</title><rect x="30.1192%" y="997" width="0.5205%" height="15" fill="rgb(214,47,5)" fg:x="76645145" fg:w="1324633"/><text x="30.3692%" y="1007.50"></text></g><g><title>malloc (1,324,633 samples, 0.52%)</title><rect x="30.1192%" y="981" width="0.5205%" height="15" fill="rgb(218,159,25)" fg:x="76645145" fg:w="1324633"/><text x="30.3692%" y="991.50"></text></g><g><title>[libc.so.6] (1,324,633 samples, 0.52%)</title><rect x="30.1192%" y="965" width="0.5205%" height="15" fill="rgb(215,211,28)" fg:x="76645145" fg:w="1324633"/><text x="30.3692%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,206,779 samples, 2.05%)</title><rect x="29.0903%" y="1269" width="2.0461%" height="15" fill="rgb(238,59,32)" fg:x="74026850" fg:w="5206779"/><text x="29.3403%" y="1279.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,206,779 samples, 2.05%)</title><rect x="29.0903%" y="1253" width="2.0461%" height="15" fill="rgb(226,82,3)" fg:x="74026850" fg:w="5206779"/><text x="29.3403%" y="1263.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,206,779 samples, 2.05%)</title><rect x="29.0903%" y="1237" width="2.0461%" height="15" fill="rgb(240,164,32)" fg:x="74026850" fg:w="5206779"/><text x="29.3403%" y="1247.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,206,779 samples, 2.05%)</title><rect x="29.0903%" y="1221" width="2.0461%" height="15" fill="rgb(232,46,7)" fg:x="74026850" fg:w="5206779"/><text x="29.3403%" y="1231.50">&lt;..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,856,937 samples, 1.52%)</title><rect x="29.6207%" y="1205" width="1.5157%" height="15" fill="rgb(229,129,53)" fg:x="75376692" fg:w="3856937"/><text x="29.8707%" y="1215.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,263,851 samples, 0.50%)</title><rect x="30.6398%" y="1189" width="0.4967%" height="15" fill="rgb(234,188,29)" fg:x="77969778" fg:w="1263851"/><text x="30.8898%" y="1199.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,263,851 samples, 0.50%)</title><rect x="30.6398%" y="1173" width="0.4967%" height="15" fill="rgb(246,141,4)" fg:x="77969778" fg:w="1263851"/><text x="30.8898%" y="1183.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,263,851 samples, 0.50%)</title><rect x="30.6398%" y="1157" width="0.4967%" height="15" fill="rgb(229,23,39)" fg:x="77969778" fg:w="1263851"/><text x="30.8898%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,263,851 samples, 0.50%)</title><rect x="30.6398%" y="1141" width="0.4967%" height="15" fill="rgb(206,12,3)" fg:x="77969778" fg:w="1263851"/><text x="30.8898%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,263,851 samples, 0.50%)</title><rect x="30.6398%" y="1125" width="0.4967%" height="15" fill="rgb(252,226,20)" fg:x="77969778" fg:w="1263851"/><text x="30.8898%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,263,851 samples, 0.50%)</title><rect x="30.6398%" y="1109" width="0.4967%" height="15" fill="rgb(216,123,35)" fg:x="77969778" fg:w="1263851"/><text x="30.8898%" y="1119.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,263,851 samples, 0.50%)</title><rect x="30.6398%" y="1093" width="0.4967%" height="15" fill="rgb(212,68,40)" fg:x="77969778" fg:w="1263851"/><text x="30.8898%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,263,851 samples, 0.50%)</title><rect x="30.6398%" y="1077" width="0.4967%" height="15" fill="rgb(254,125,32)" fg:x="77969778" fg:w="1263851"/><text x="30.8898%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,263,851 samples, 0.50%)</title><rect x="30.6398%" y="1061" width="0.4967%" height="15" fill="rgb(253,97,22)" fg:x="77969778" fg:w="1263851"/><text x="30.8898%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (1,263,851 samples, 0.50%)</title><rect x="30.6398%" y="1045" width="0.4967%" height="15" fill="rgb(241,101,14)" fg:x="77969778" fg:w="1263851"/><text x="30.8898%" y="1055.50"></text></g><g><title>malloc (1,263,851 samples, 0.50%)</title><rect x="30.6398%" y="1029" width="0.4967%" height="15" fill="rgb(238,103,29)" fg:x="77969778" fg:w="1263851"/><text x="30.8898%" y="1039.50"></text></g><g><title>[libc.so.6] (1,263,851 samples, 0.50%)</title><rect x="30.6398%" y="1013" width="0.4967%" height="15" fill="rgb(233,195,47)" fg:x="77969778" fg:w="1263851"/><text x="30.8898%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,800,686 samples, 3.07%)</title><rect x="28.5603%" y="1349" width="3.0654%" height="15" fill="rgb(246,218,30)" fg:x="72678019" fg:w="7800686"/><text x="28.8103%" y="1359.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,800,686 samples, 3.07%)</title><rect x="28.5603%" y="1333" width="3.0654%" height="15" fill="rgb(219,145,47)" fg:x="72678019" fg:w="7800686"/><text x="28.8103%" y="1343.50">all..</text></g><g><title>alloc::slice::hack::to_vec (7,800,686 samples, 3.07%)</title><rect x="28.5603%" y="1317" width="3.0654%" height="15" fill="rgb(243,12,26)" fg:x="72678019" fg:w="7800686"/><text x="28.8103%" y="1327.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,800,686 samples, 3.07%)</title><rect x="28.5603%" y="1301" width="3.0654%" height="15" fill="rgb(214,87,16)" fg:x="72678019" fg:w="7800686"/><text x="28.8103%" y="1311.50">&lt;T ..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (7,800,686 samples, 3.07%)</title><rect x="28.5603%" y="1285" width="3.0654%" height="15" fill="rgb(208,99,42)" fg:x="72678019" fg:w="7800686"/><text x="28.8103%" y="1295.50">&lt;cs..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,245,076 samples, 0.49%)</title><rect x="31.1364%" y="1269" width="0.4893%" height="15" fill="rgb(253,99,2)" fg:x="79233629" fg:w="1245076"/><text x="31.3864%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,245,076 samples, 0.49%)</title><rect x="31.1364%" y="1253" width="0.4893%" height="15" fill="rgb(220,168,23)" fg:x="79233629" fg:w="1245076"/><text x="31.3864%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,245,076 samples, 0.49%)</title><rect x="31.1364%" y="1237" width="0.4893%" height="15" fill="rgb(242,38,24)" fg:x="79233629" fg:w="1245076"/><text x="31.3864%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (1,245,076 samples, 0.49%)</title><rect x="31.1364%" y="1221" width="0.4893%" height="15" fill="rgb(225,182,9)" fg:x="79233629" fg:w="1245076"/><text x="31.3864%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,245,076 samples, 0.49%)</title><rect x="31.1364%" y="1205" width="0.4893%" height="15" fill="rgb(243,178,37)" fg:x="79233629" fg:w="1245076"/><text x="31.3864%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,245,076 samples, 0.49%)</title><rect x="31.1364%" y="1189" width="0.4893%" height="15" fill="rgb(232,139,19)" fg:x="79233629" fg:w="1245076"/><text x="31.3864%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,245,076 samples, 0.49%)</title><rect x="31.1364%" y="1173" width="0.4893%" height="15" fill="rgb(225,201,24)" fg:x="79233629" fg:w="1245076"/><text x="31.3864%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,245,076 samples, 0.49%)</title><rect x="31.1364%" y="1157" width="0.4893%" height="15" fill="rgb(221,47,46)" fg:x="79233629" fg:w="1245076"/><text x="31.3864%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,245,076 samples, 0.49%)</title><rect x="31.1364%" y="1141" width="0.4893%" height="15" fill="rgb(249,23,13)" fg:x="79233629" fg:w="1245076"/><text x="31.3864%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,245,076 samples, 0.49%)</title><rect x="31.1364%" y="1125" width="0.4893%" height="15" fill="rgb(219,9,5)" fg:x="79233629" fg:w="1245076"/><text x="31.3864%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,245,076 samples, 0.49%)</title><rect x="31.1364%" y="1109" width="0.4893%" height="15" fill="rgb(254,171,16)" fg:x="79233629" fg:w="1245076"/><text x="31.3864%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (1,245,076 samples, 0.49%)</title><rect x="31.1364%" y="1093" width="0.4893%" height="15" fill="rgb(230,171,20)" fg:x="79233629" fg:w="1245076"/><text x="31.3864%" y="1103.50"></text></g><g><title>malloc (1,245,076 samples, 0.49%)</title><rect x="31.1364%" y="1077" width="0.4893%" height="15" fill="rgb(210,71,41)" fg:x="79233629" fg:w="1245076"/><text x="31.3864%" y="1087.50"></text></g><g><title>[libc.so.6] (1,245,076 samples, 0.49%)</title><rect x="31.1364%" y="1061" width="0.4893%" height="15" fill="rgb(206,173,20)" fg:x="79233629" fg:w="1245076"/><text x="31.3864%" y="1071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,462,401 samples, 0.57%)</title><rect x="31.6257%" y="1349" width="0.5747%" height="15" fill="rgb(233,88,34)" fg:x="80478705" fg:w="1462401"/><text x="31.8757%" y="1359.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,462,401 samples, 0.57%)</title><rect x="31.6257%" y="1333" width="0.5747%" height="15" fill="rgb(223,209,46)" fg:x="80478705" fg:w="1462401"/><text x="31.8757%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,462,401 samples, 0.57%)</title><rect x="31.6257%" y="1317" width="0.5747%" height="15" fill="rgb(250,43,18)" fg:x="80478705" fg:w="1462401"/><text x="31.8757%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,462,401 samples, 0.57%)</title><rect x="31.6257%" y="1301" width="0.5747%" height="15" fill="rgb(208,13,10)" fg:x="80478705" fg:w="1462401"/><text x="31.8757%" y="1311.50"></text></g><g><title>alloc::slice::hack::to_vec (1,462,401 samples, 0.57%)</title><rect x="31.6257%" y="1285" width="0.5747%" height="15" fill="rgb(212,200,36)" fg:x="80478705" fg:w="1462401"/><text x="31.8757%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,462,401 samples, 0.57%)</title><rect x="31.6257%" y="1269" width="0.5747%" height="15" fill="rgb(225,90,30)" fg:x="80478705" fg:w="1462401"/><text x="31.8757%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,462,401 samples, 0.57%)</title><rect x="31.6257%" y="1253" width="0.5747%" height="15" fill="rgb(236,182,39)" fg:x="80478705" fg:w="1462401"/><text x="31.8757%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,462,401 samples, 0.57%)</title><rect x="31.6257%" y="1237" width="0.5747%" height="15" fill="rgb(212,144,35)" fg:x="80478705" fg:w="1462401"/><text x="31.8757%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,462,401 samples, 0.57%)</title><rect x="31.6257%" y="1221" width="0.5747%" height="15" fill="rgb(228,63,44)" fg:x="80478705" fg:w="1462401"/><text x="31.8757%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,462,401 samples, 0.57%)</title><rect x="31.6257%" y="1205" width="0.5747%" height="15" fill="rgb(228,109,6)" fg:x="80478705" fg:w="1462401"/><text x="31.8757%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,462,401 samples, 0.57%)</title><rect x="31.6257%" y="1189" width="0.5747%" height="15" fill="rgb(238,117,24)" fg:x="80478705" fg:w="1462401"/><text x="31.8757%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,462,401 samples, 0.57%)</title><rect x="31.6257%" y="1173" width="0.5747%" height="15" fill="rgb(242,26,26)" fg:x="80478705" fg:w="1462401"/><text x="31.8757%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (1,462,401 samples, 0.57%)</title><rect x="31.6257%" y="1157" width="0.5747%" height="15" fill="rgb(221,92,48)" fg:x="80478705" fg:w="1462401"/><text x="31.8757%" y="1167.50"></text></g><g><title>malloc (1,462,401 samples, 0.57%)</title><rect x="31.6257%" y="1141" width="0.5747%" height="15" fill="rgb(209,209,32)" fg:x="80478705" fg:w="1462401"/><text x="31.8757%" y="1151.50"></text></g><g><title>[libc.so.6] (1,462,401 samples, 0.57%)</title><rect x="31.6257%" y="1125" width="0.5747%" height="15" fill="rgb(221,70,22)" fg:x="80478705" fg:w="1462401"/><text x="31.8757%" y="1135.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (764,315 samples, 0.30%)</title><rect x="32.2004%" y="1349" width="0.3004%" height="15" fill="rgb(248,145,5)" fg:x="81941106" fg:w="764315"/><text x="32.4504%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (764,315 samples, 0.30%)</title><rect x="32.2004%" y="1333" width="0.3004%" height="15" fill="rgb(226,116,26)" fg:x="81941106" fg:w="764315"/><text x="32.4504%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (764,315 samples, 0.30%)</title><rect x="32.2004%" y="1317" width="0.3004%" height="15" fill="rgb(244,5,17)" fg:x="81941106" fg:w="764315"/><text x="32.4504%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (764,315 samples, 0.30%)</title><rect x="32.2004%" y="1301" width="0.3004%" height="15" fill="rgb(252,159,33)" fg:x="81941106" fg:w="764315"/><text x="32.4504%" y="1311.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (764,315 samples, 0.30%)</title><rect x="32.2004%" y="1285" width="0.3004%" height="15" fill="rgb(206,71,0)" fg:x="81941106" fg:w="764315"/><text x="32.4504%" y="1295.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,344,651 samples, 0.53%)</title><rect x="32.5007%" y="1285" width="0.5284%" height="15" fill="rgb(233,118,54)" fg:x="82705421" fg:w="1344651"/><text x="32.7507%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,344,651 samples, 0.53%)</title><rect x="32.5007%" y="1269" width="0.5284%" height="15" fill="rgb(234,83,48)" fg:x="82705421" fg:w="1344651"/><text x="32.7507%" y="1279.50"></text></g><g><title>core::clone::Clone::clone (1,344,651 samples, 0.53%)</title><rect x="32.5007%" y="1253" width="0.5284%" height="15" fill="rgb(228,3,54)" fg:x="82705421" fg:w="1344651"/><text x="32.7507%" y="1263.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,344,651 samples, 0.53%)</title><rect x="32.5007%" y="1237" width="0.5284%" height="15" fill="rgb(226,155,13)" fg:x="82705421" fg:w="1344651"/><text x="32.7507%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,344,651 samples, 0.53%)</title><rect x="32.5007%" y="1221" width="0.5284%" height="15" fill="rgb(241,28,37)" fg:x="82705421" fg:w="1344651"/><text x="32.7507%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,344,651 samples, 0.53%)</title><rect x="32.5007%" y="1205" width="0.5284%" height="15" fill="rgb(233,93,10)" fg:x="82705421" fg:w="1344651"/><text x="32.7507%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (1,344,651 samples, 0.53%)</title><rect x="32.5007%" y="1189" width="0.5284%" height="15" fill="rgb(225,113,19)" fg:x="82705421" fg:w="1344651"/><text x="32.7507%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,344,651 samples, 0.53%)</title><rect x="32.5007%" y="1173" width="0.5284%" height="15" fill="rgb(241,2,18)" fg:x="82705421" fg:w="1344651"/><text x="32.7507%" y="1183.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,344,651 samples, 0.53%)</title><rect x="32.5007%" y="1157" width="0.5284%" height="15" fill="rgb(228,207,21)" fg:x="82705421" fg:w="1344651"/><text x="32.7507%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,344,651 samples, 0.53%)</title><rect x="32.5007%" y="1141" width="0.5284%" height="15" fill="rgb(213,211,35)" fg:x="82705421" fg:w="1344651"/><text x="32.7507%" y="1151.50"></text></g><g><title>[libc.so.6] (1,344,651 samples, 0.53%)</title><rect x="32.5007%" y="1125" width="0.5284%" height="15" fill="rgb(209,83,10)" fg:x="82705421" fg:w="1344651"/><text x="32.7507%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,950,000 samples, 5.48%)</title><rect x="28.0811%" y="1509" width="5.4819%" height="15" fill="rgb(209,164,1)" fg:x="71458796" fg:w="13950000"/><text x="28.3311%" y="1519.50">&lt;alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,950,000 samples, 5.48%)</title><rect x="28.0811%" y="1493" width="5.4819%" height="15" fill="rgb(213,184,43)" fg:x="71458796" fg:w="13950000"/><text x="28.3311%" y="1503.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (13,950,000 samples, 5.48%)</title><rect x="28.0811%" y="1477" width="5.4819%" height="15" fill="rgb(231,61,34)" fg:x="71458796" fg:w="13950000"/><text x="28.3311%" y="1487.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,950,000 samples, 5.48%)</title><rect x="28.0811%" y="1461" width="5.4819%" height="15" fill="rgb(235,75,3)" fg:x="71458796" fg:w="13950000"/><text x="28.3311%" y="1471.50">&lt;T as a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (13,950,000 samples, 5.48%)</title><rect x="28.0811%" y="1445" width="5.4819%" height="15" fill="rgb(220,106,47)" fg:x="71458796" fg:w="13950000"/><text x="28.3311%" y="1455.50">&lt;css_bi..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,950,000 samples, 5.48%)</title><rect x="28.0811%" y="1429" width="5.4819%" height="15" fill="rgb(210,196,33)" fg:x="71458796" fg:w="13950000"/><text x="28.3311%" y="1439.50">&lt;alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,950,000 samples, 5.48%)</title><rect x="28.0811%" y="1413" width="5.4819%" height="15" fill="rgb(229,154,42)" fg:x="71458796" fg:w="13950000"/><text x="28.3311%" y="1423.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (13,950,000 samples, 5.48%)</title><rect x="28.0811%" y="1397" width="5.4819%" height="15" fill="rgb(228,114,26)" fg:x="71458796" fg:w="13950000"/><text x="28.3311%" y="1407.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,950,000 samples, 5.48%)</title><rect x="28.0811%" y="1381" width="5.4819%" height="15" fill="rgb(208,144,1)" fg:x="71458796" fg:w="13950000"/><text x="28.3311%" y="1391.50">&lt;T as a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (13,950,000 samples, 5.48%)</title><rect x="28.0811%" y="1365" width="5.4819%" height="15" fill="rgb(239,112,37)" fg:x="71458796" fg:w="13950000"/><text x="28.3311%" y="1375.50">&lt;css_bi..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,703,375 samples, 1.06%)</title><rect x="32.5007%" y="1349" width="1.0623%" height="15" fill="rgb(210,96,50)" fg:x="82705421" fg:w="2703375"/><text x="32.7507%" y="1359.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,703,375 samples, 1.06%)</title><rect x="32.5007%" y="1333" width="1.0623%" height="15" fill="rgb(222,178,2)" fg:x="82705421" fg:w="2703375"/><text x="32.7507%" y="1343.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,703,375 samples, 1.06%)</title><rect x="32.5007%" y="1317" width="1.0623%" height="15" fill="rgb(226,74,18)" fg:x="82705421" fg:w="2703375"/><text x="32.7507%" y="1327.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,703,375 samples, 1.06%)</title><rect x="32.5007%" y="1301" width="1.0623%" height="15" fill="rgb(225,67,54)" fg:x="82705421" fg:w="2703375"/><text x="32.7507%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,358,724 samples, 0.53%)</title><rect x="33.0291%" y="1285" width="0.5339%" height="15" fill="rgb(251,92,32)" fg:x="84050072" fg:w="1358724"/><text x="33.2791%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,358,724 samples, 0.53%)</title><rect x="33.0291%" y="1269" width="0.5339%" height="15" fill="rgb(228,149,22)" fg:x="84050072" fg:w="1358724"/><text x="33.2791%" y="1279.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,358,724 samples, 0.53%)</title><rect x="33.0291%" y="1253" width="0.5339%" height="15" fill="rgb(243,54,13)" fg:x="84050072" fg:w="1358724"/><text x="33.2791%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,358,724 samples, 0.53%)</title><rect x="33.0291%" y="1237" width="0.5339%" height="15" fill="rgb(243,180,28)" fg:x="84050072" fg:w="1358724"/><text x="33.2791%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,358,724 samples, 0.53%)</title><rect x="33.0291%" y="1221" width="0.5339%" height="15" fill="rgb(208,167,24)" fg:x="84050072" fg:w="1358724"/><text x="33.2791%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (1,358,724 samples, 0.53%)</title><rect x="33.0291%" y="1205" width="0.5339%" height="15" fill="rgb(245,73,45)" fg:x="84050072" fg:w="1358724"/><text x="33.2791%" y="1215.50"></text></g><g><title>malloc (1,358,724 samples, 0.53%)</title><rect x="33.0291%" y="1189" width="0.5339%" height="15" fill="rgb(237,203,48)" fg:x="84050072" fg:w="1358724"/><text x="33.2791%" y="1199.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,682,690 samples, 1.05%)</title><rect x="33.5631%" y="1509" width="1.0542%" height="15" fill="rgb(211,197,16)" fg:x="85408796" fg:w="2682690"/><text x="33.8131%" y="1519.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,426,922 samples, 0.56%)</title><rect x="34.0565%" y="1493" width="0.5607%" height="15" fill="rgb(243,99,51)" fg:x="86664564" fg:w="1426922"/><text x="34.3065%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,426,922 samples, 0.56%)</title><rect x="34.0565%" y="1477" width="0.5607%" height="15" fill="rgb(215,123,29)" fg:x="86664564" fg:w="1426922"/><text x="34.3065%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,426,922 samples, 0.56%)</title><rect x="34.0565%" y="1461" width="0.5607%" height="15" fill="rgb(239,186,37)" fg:x="86664564" fg:w="1426922"/><text x="34.3065%" y="1471.50"></text></g><g><title>alloc::slice::hack::to_vec (1,426,922 samples, 0.56%)</title><rect x="34.0565%" y="1445" width="0.5607%" height="15" fill="rgb(252,136,39)" fg:x="86664564" fg:w="1426922"/><text x="34.3065%" y="1455.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,426,922 samples, 0.56%)</title><rect x="34.0565%" y="1429" width="0.5607%" height="15" fill="rgb(223,213,32)" fg:x="86664564" fg:w="1426922"/><text x="34.3065%" y="1439.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,426,922 samples, 0.56%)</title><rect x="34.0565%" y="1413" width="0.5607%" height="15" fill="rgb(233,115,5)" fg:x="86664564" fg:w="1426922"/><text x="34.3065%" y="1423.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,426,922 samples, 0.56%)</title><rect x="34.0565%" y="1397" width="0.5607%" height="15" fill="rgb(207,226,44)" fg:x="86664564" fg:w="1426922"/><text x="34.3065%" y="1407.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,370,809 samples, 0.54%)</title><rect x="34.6173%" y="1445" width="0.5387%" height="15" fill="rgb(208,126,0)" fg:x="88091486" fg:w="1370809"/><text x="34.8673%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,370,809 samples, 0.54%)</title><rect x="34.6173%" y="1429" width="0.5387%" height="15" fill="rgb(244,66,21)" fg:x="88091486" fg:w="1370809"/><text x="34.8673%" y="1439.50"></text></g><g><title>core::clone::Clone::clone (1,370,809 samples, 0.54%)</title><rect x="34.6173%" y="1413" width="0.5387%" height="15" fill="rgb(222,97,12)" fg:x="88091486" fg:w="1370809"/><text x="34.8673%" y="1423.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,370,809 samples, 0.54%)</title><rect x="34.6173%" y="1397" width="0.5387%" height="15" fill="rgb(219,213,19)" fg:x="88091486" fg:w="1370809"/><text x="34.8673%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,370,809 samples, 0.54%)</title><rect x="34.6173%" y="1381" width="0.5387%" height="15" fill="rgb(252,169,30)" fg:x="88091486" fg:w="1370809"/><text x="34.8673%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,370,809 samples, 0.54%)</title><rect x="34.6173%" y="1365" width="0.5387%" height="15" fill="rgb(206,32,51)" fg:x="88091486" fg:w="1370809"/><text x="34.8673%" y="1375.50"></text></g><g><title>alloc::slice::hack::to_vec (1,370,809 samples, 0.54%)</title><rect x="34.6173%" y="1349" width="0.5387%" height="15" fill="rgb(250,172,42)" fg:x="88091486" fg:w="1370809"/><text x="34.8673%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,370,809 samples, 0.54%)</title><rect x="34.6173%" y="1333" width="0.5387%" height="15" fill="rgb(209,34,43)" fg:x="88091486" fg:w="1370809"/><text x="34.8673%" y="1343.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,370,809 samples, 0.54%)</title><rect x="34.6173%" y="1317" width="0.5387%" height="15" fill="rgb(223,11,35)" fg:x="88091486" fg:w="1370809"/><text x="34.8673%" y="1327.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,370,809 samples, 0.54%)</title><rect x="34.6173%" y="1301" width="0.5387%" height="15" fill="rgb(251,219,26)" fg:x="88091486" fg:w="1370809"/><text x="34.8673%" y="1311.50"></text></g><g><title>[libc.so.6] (1,370,809 samples, 0.54%)</title><rect x="34.6173%" y="1285" width="0.5387%" height="15" fill="rgb(231,119,3)" fg:x="88091486" fg:w="1370809"/><text x="34.8673%" y="1295.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,282,582 samples, 7.58%)</title><rect x="28.0811%" y="1525" width="7.5775%" height="15" fill="rgb(216,97,11)" fg:x="71458796" fg:w="19282582"/><text x="28.3311%" y="1535.50">&lt;css_bitve..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,649,892 samples, 1.04%)</title><rect x="34.6173%" y="1509" width="1.0413%" height="15" fill="rgb(223,59,9)" fg:x="88091486" fg:w="2649892"/><text x="34.8673%" y="1519.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,649,892 samples, 1.04%)</title><rect x="34.6173%" y="1493" width="1.0413%" height="15" fill="rgb(233,93,31)" fg:x="88091486" fg:w="2649892"/><text x="34.8673%" y="1503.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,649,892 samples, 1.04%)</title><rect x="34.6173%" y="1477" width="1.0413%" height="15" fill="rgb(239,81,33)" fg:x="88091486" fg:w="2649892"/><text x="34.8673%" y="1487.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,649,892 samples, 1.04%)</title><rect x="34.6173%" y="1461" width="1.0413%" height="15" fill="rgb(213,120,34)" fg:x="88091486" fg:w="2649892"/><text x="34.8673%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,279,083 samples, 0.50%)</title><rect x="35.1560%" y="1445" width="0.5026%" height="15" fill="rgb(243,49,53)" fg:x="89462295" fg:w="1279083"/><text x="35.4060%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,279,083 samples, 0.50%)</title><rect x="35.1560%" y="1429" width="0.5026%" height="15" fill="rgb(247,216,33)" fg:x="89462295" fg:w="1279083"/><text x="35.4060%" y="1439.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,279,083 samples, 0.50%)</title><rect x="35.1560%" y="1413" width="0.5026%" height="15" fill="rgb(226,26,14)" fg:x="89462295" fg:w="1279083"/><text x="35.4060%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,279,083 samples, 0.50%)</title><rect x="35.1560%" y="1397" width="0.5026%" height="15" fill="rgb(215,49,53)" fg:x="89462295" fg:w="1279083"/><text x="35.4060%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,279,083 samples, 0.50%)</title><rect x="35.1560%" y="1381" width="0.5026%" height="15" fill="rgb(245,162,40)" fg:x="89462295" fg:w="1279083"/><text x="35.4060%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (1,279,083 samples, 0.50%)</title><rect x="35.1560%" y="1365" width="0.5026%" height="15" fill="rgb(229,68,17)" fg:x="89462295" fg:w="1279083"/><text x="35.4060%" y="1375.50"></text></g><g><title>malloc (1,279,083 samples, 0.50%)</title><rect x="35.1560%" y="1349" width="0.5026%" height="15" fill="rgb(213,182,10)" fg:x="89462295" fg:w="1279083"/><text x="35.4060%" y="1359.50"></text></g><g><title>[libc.so.6] (1,279,083 samples, 0.50%)</title><rect x="35.1560%" y="1333" width="0.5026%" height="15" fill="rgb(245,125,30)" fg:x="89462295" fg:w="1279083"/><text x="35.4060%" y="1343.50"></text></g><g><title>[libc.so.6] (1,279,083 samples, 0.50%)</title><rect x="35.1560%" y="1317" width="0.5026%" height="15" fill="rgb(232,202,2)" fg:x="89462295" fg:w="1279083"/><text x="35.4060%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20,736,077 samples, 8.15%)</title><rect x="28.0811%" y="1589" width="8.1486%" height="15" fill="rgb(237,140,51)" fg:x="71458796" fg:w="20736077"/><text x="28.3311%" y="1599.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20,736,077 samples, 8.15%)</title><rect x="28.0811%" y="1573" width="8.1486%" height="15" fill="rgb(236,157,25)" fg:x="71458796" fg:w="20736077"/><text x="28.3311%" y="1583.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (20,736,077 samples, 8.15%)</title><rect x="28.0811%" y="1557" width="8.1486%" height="15" fill="rgb(219,209,0)" fg:x="71458796" fg:w="20736077"/><text x="28.3311%" y="1567.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20,736,077 samples, 8.15%)</title><rect x="28.0811%" y="1541" width="8.1486%" height="15" fill="rgb(240,116,54)" fg:x="71458796" fg:w="20736077"/><text x="28.3311%" y="1551.50">&lt;T as alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,453,495 samples, 0.57%)</title><rect x="35.6586%" y="1525" width="0.5712%" height="15" fill="rgb(216,10,36)" fg:x="90741378" fg:w="1453495"/><text x="35.9086%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,453,495 samples, 0.57%)</title><rect x="35.6586%" y="1509" width="0.5712%" height="15" fill="rgb(222,72,44)" fg:x="90741378" fg:w="1453495"/><text x="35.9086%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,453,495 samples, 0.57%)</title><rect x="35.6586%" y="1493" width="0.5712%" height="15" fill="rgb(232,159,9)" fg:x="90741378" fg:w="1453495"/><text x="35.9086%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,453,495 samples, 0.57%)</title><rect x="35.6586%" y="1477" width="0.5712%" height="15" fill="rgb(210,39,32)" fg:x="90741378" fg:w="1453495"/><text x="35.9086%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,453,495 samples, 0.57%)</title><rect x="35.6586%" y="1461" width="0.5712%" height="15" fill="rgb(216,194,45)" fg:x="90741378" fg:w="1453495"/><text x="35.9086%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,453,495 samples, 0.57%)</title><rect x="35.6586%" y="1445" width="0.5712%" height="15" fill="rgb(218,18,35)" fg:x="90741378" fg:w="1453495"/><text x="35.9086%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (1,453,495 samples, 0.57%)</title><rect x="35.6586%" y="1429" width="0.5712%" height="15" fill="rgb(207,83,51)" fg:x="90741378" fg:w="1453495"/><text x="35.9086%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24,557,782 samples, 9.65%)</title><rect x="27.0746%" y="1669" width="9.6505%" height="15" fill="rgb(225,63,43)" fg:x="68897338" fg:w="24557782"/><text x="27.3246%" y="1679.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24,557,782 samples, 9.65%)</title><rect x="27.0746%" y="1653" width="9.6505%" height="15" fill="rgb(207,57,36)" fg:x="68897338" fg:w="24557782"/><text x="27.3246%" y="1663.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (24,557,782 samples, 9.65%)</title><rect x="27.0746%" y="1637" width="9.6505%" height="15" fill="rgb(216,99,33)" fg:x="68897338" fg:w="24557782"/><text x="27.3246%" y="1647.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24,557,782 samples, 9.65%)</title><rect x="27.0746%" y="1621" width="9.6505%" height="15" fill="rgb(225,42,16)" fg:x="68897338" fg:w="24557782"/><text x="27.3246%" y="1631.50">&lt;T as alloc::s..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (24,557,782 samples, 9.65%)</title><rect x="27.0746%" y="1605" width="9.6505%" height="15" fill="rgb(220,201,45)" fg:x="68897338" fg:w="24557782"/><text x="27.3246%" y="1615.50">&lt;css_bitvector..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,260,247 samples, 0.50%)</title><rect x="36.2298%" y="1589" width="0.4952%" height="15" fill="rgb(225,33,4)" fg:x="92194873" fg:w="1260247"/><text x="36.4798%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25,903,017 samples, 10.18%)</title><rect x="27.0746%" y="1749" width="10.1791%" height="15" fill="rgb(224,33,50)" fg:x="68897338" fg:w="25903017"/><text x="27.3246%" y="1759.50">&lt;alloc::vec::Ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25,903,017 samples, 10.18%)</title><rect x="27.0746%" y="1733" width="10.1791%" height="15" fill="rgb(246,198,51)" fg:x="68897338" fg:w="25903017"/><text x="27.3246%" y="1743.50">alloc::slice::&lt;..</text></g><g><title>alloc::slice::hack::to_vec (25,903,017 samples, 10.18%)</title><rect x="27.0746%" y="1717" width="10.1791%" height="15" fill="rgb(205,22,4)" fg:x="68897338" fg:w="25903017"/><text x="27.3246%" y="1727.50">alloc::slice::h..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25,903,017 samples, 10.18%)</title><rect x="27.0746%" y="1701" width="10.1791%" height="15" fill="rgb(206,3,8)" fg:x="68897338" fg:w="25903017"/><text x="27.3246%" y="1711.50">&lt;T as alloc::sl..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (25,903,017 samples, 10.18%)</title><rect x="27.0746%" y="1685" width="10.1791%" height="15" fill="rgb(251,23,15)" fg:x="68897338" fg:w="25903017"/><text x="27.3246%" y="1695.50">&lt;css_bitvector_..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,345,235 samples, 0.53%)</title><rect x="36.7250%" y="1669" width="0.5286%" height="15" fill="rgb(252,88,28)" fg:x="93455120" fg:w="1345235"/><text x="36.9750%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,345,235 samples, 0.53%)</title><rect x="36.7250%" y="1653" width="0.5286%" height="15" fill="rgb(212,127,14)" fg:x="93455120" fg:w="1345235"/><text x="36.9750%" y="1663.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,345,235 samples, 0.53%)</title><rect x="36.7250%" y="1637" width="0.5286%" height="15" fill="rgb(247,145,37)" fg:x="93455120" fg:w="1345235"/><text x="36.9750%" y="1647.50"></text></g><g><title>alloc::slice::hack::to_vec (1,345,235 samples, 0.53%)</title><rect x="36.7250%" y="1621" width="0.5286%" height="15" fill="rgb(209,117,53)" fg:x="93455120" fg:w="1345235"/><text x="36.9750%" y="1631.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,345,235 samples, 0.53%)</title><rect x="36.7250%" y="1605" width="0.5286%" height="15" fill="rgb(212,90,42)" fg:x="93455120" fg:w="1345235"/><text x="36.9750%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,345,235 samples, 0.53%)</title><rect x="36.7250%" y="1589" width="0.5286%" height="15" fill="rgb(218,164,37)" fg:x="93455120" fg:w="1345235"/><text x="36.9750%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,345,235 samples, 0.53%)</title><rect x="36.7250%" y="1573" width="0.5286%" height="15" fill="rgb(246,65,34)" fg:x="93455120" fg:w="1345235"/><text x="36.9750%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,345,235 samples, 0.53%)</title><rect x="36.7250%" y="1557" width="0.5286%" height="15" fill="rgb(231,100,33)" fg:x="93455120" fg:w="1345235"/><text x="36.9750%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,345,235 samples, 0.53%)</title><rect x="36.7250%" y="1541" width="0.5286%" height="15" fill="rgb(228,126,14)" fg:x="93455120" fg:w="1345235"/><text x="36.9750%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,345,235 samples, 0.53%)</title><rect x="36.7250%" y="1525" width="0.5286%" height="15" fill="rgb(215,173,21)" fg:x="93455120" fg:w="1345235"/><text x="36.9750%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,345,235 samples, 0.53%)</title><rect x="36.7250%" y="1509" width="0.5286%" height="15" fill="rgb(210,6,40)" fg:x="93455120" fg:w="1345235"/><text x="36.9750%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (1,345,235 samples, 0.53%)</title><rect x="36.7250%" y="1493" width="0.5286%" height="15" fill="rgb(212,48,18)" fg:x="93455120" fg:w="1345235"/><text x="36.9750%" y="1503.50"></text></g><g><title>malloc (1,345,235 samples, 0.53%)</title><rect x="36.7250%" y="1477" width="0.5286%" height="15" fill="rgb(230,214,11)" fg:x="93455120" fg:w="1345235"/><text x="36.9750%" y="1487.50"></text></g><g><title>[libc.so.6] (1,345,235 samples, 0.53%)</title><rect x="36.7250%" y="1461" width="0.5286%" height="15" fill="rgb(254,105,39)" fg:x="93455120" fg:w="1345235"/><text x="36.9750%" y="1471.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,300,085 samples, 0.51%)</title><rect x="37.2537%" y="1685" width="0.5109%" height="15" fill="rgb(245,158,5)" fg:x="94800355" fg:w="1300085"/><text x="37.5037%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,300,085 samples, 0.51%)</title><rect x="37.2537%" y="1669" width="0.5109%" height="15" fill="rgb(249,208,11)" fg:x="94800355" fg:w="1300085"/><text x="37.5037%" y="1679.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1,300,085 samples, 0.51%)</title><rect x="37.2537%" y="1653" width="0.5109%" height="15" fill="rgb(210,39,28)" fg:x="94800355" fg:w="1300085"/><text x="37.5037%" y="1663.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,300,085 samples, 0.51%)</title><rect x="37.2537%" y="1637" width="0.5109%" height="15" fill="rgb(211,56,53)" fg:x="94800355" fg:w="1300085"/><text x="37.5037%" y="1647.50"></text></g><g><title>core::ptr::write (1,300,085 samples, 0.51%)</title><rect x="37.2537%" y="1621" width="0.5109%" height="15" fill="rgb(226,201,30)" fg:x="94800355" fg:w="1300085"/><text x="37.5037%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28,392,776 samples, 11.16%)</title><rect x="27.0746%" y="1829" width="11.1575%" height="15" fill="rgb(239,101,34)" fg:x="68897338" fg:w="28392776"/><text x="27.3246%" y="1839.50">&lt;alloc::vec::Vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28,392,776 samples, 11.16%)</title><rect x="27.0746%" y="1813" width="11.1575%" height="15" fill="rgb(226,209,5)" fg:x="68897338" fg:w="28392776"/><text x="27.3246%" y="1823.50">alloc::slice::&lt;i..</text></g><g><title>alloc::slice::hack::to_vec (28,392,776 samples, 11.16%)</title><rect x="27.0746%" y="1797" width="11.1575%" height="15" fill="rgb(250,105,47)" fg:x="68897338" fg:w="28392776"/><text x="27.3246%" y="1807.50">alloc::slice::ha..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28,392,776 samples, 11.16%)</title><rect x="27.0746%" y="1781" width="11.1575%" height="15" fill="rgb(230,72,3)" fg:x="68897338" fg:w="28392776"/><text x="27.3246%" y="1791.50">&lt;T as alloc::sli..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (28,392,776 samples, 11.16%)</title><rect x="27.0746%" y="1765" width="11.1575%" height="15" fill="rgb(232,218,39)" fg:x="68897338" fg:w="28392776"/><text x="27.3246%" y="1775.50">&lt;css_bitvector_c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,489,759 samples, 0.98%)</title><rect x="37.2537%" y="1749" width="0.9784%" height="15" fill="rgb(248,166,6)" fg:x="94800355" fg:w="2489759"/><text x="37.5037%" y="1759.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,489,759 samples, 0.98%)</title><rect x="37.2537%" y="1733" width="0.9784%" height="15" fill="rgb(247,89,20)" fg:x="94800355" fg:w="2489759"/><text x="37.5037%" y="1743.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,489,759 samples, 0.98%)</title><rect x="37.2537%" y="1717" width="0.9784%" height="15" fill="rgb(248,130,54)" fg:x="94800355" fg:w="2489759"/><text x="37.5037%" y="1727.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,489,759 samples, 0.98%)</title><rect x="37.2537%" y="1701" width="0.9784%" height="15" fill="rgb(234,196,4)" fg:x="94800355" fg:w="2489759"/><text x="37.5037%" y="1711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,189,674 samples, 0.47%)</title><rect x="37.7646%" y="1685" width="0.4675%" height="15" fill="rgb(250,143,31)" fg:x="96100440" fg:w="1189674"/><text x="38.0146%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,189,674 samples, 0.47%)</title><rect x="37.7646%" y="1669" width="0.4675%" height="15" fill="rgb(211,110,34)" fg:x="96100440" fg:w="1189674"/><text x="38.0146%" y="1679.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,189,674 samples, 0.47%)</title><rect x="37.7646%" y="1653" width="0.4675%" height="15" fill="rgb(215,124,48)" fg:x="96100440" fg:w="1189674"/><text x="38.0146%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,189,674 samples, 0.47%)</title><rect x="37.7646%" y="1637" width="0.4675%" height="15" fill="rgb(216,46,13)" fg:x="96100440" fg:w="1189674"/><text x="38.0146%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,189,674 samples, 0.47%)</title><rect x="37.7646%" y="1621" width="0.4675%" height="15" fill="rgb(205,184,25)" fg:x="96100440" fg:w="1189674"/><text x="38.0146%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (1,189,674 samples, 0.47%)</title><rect x="37.7646%" y="1605" width="0.4675%" height="15" fill="rgb(228,1,10)" fg:x="96100440" fg:w="1189674"/><text x="38.0146%" y="1615.50"></text></g><g><title>malloc (1,189,674 samples, 0.47%)</title><rect x="37.7646%" y="1589" width="0.4675%" height="15" fill="rgb(213,116,27)" fg:x="96100440" fg:w="1189674"/><text x="38.0146%" y="1599.50"></text></g><g><title>[libc.so.6] (1,189,674 samples, 0.47%)</title><rect x="37.7646%" y="1573" width="0.4675%" height="15" fill="rgb(241,95,50)" fg:x="96100440" fg:w="1189674"/><text x="38.0146%" y="1583.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1765" width="0.5476%" height="15" fill="rgb(238,48,32)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1749" width="0.5476%" height="15" fill="rgb(235,113,49)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1759.50"></text></g><g><title>core::clone::Clone::clone (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1733" width="0.5476%" height="15" fill="rgb(205,127,43)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1743.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1717" width="0.5476%" height="15" fill="rgb(250,162,2)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1701" width="0.5476%" height="15" fill="rgb(220,13,41)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1685" width="0.5476%" height="15" fill="rgb(249,221,25)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1669" width="0.5476%" height="15" fill="rgb(215,208,19)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1653" width="0.5476%" height="15" fill="rgb(236,175,2)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1637" width="0.5476%" height="15" fill="rgb(241,52,2)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1621" width="0.5476%" height="15" fill="rgb(248,140,14)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1605" width="0.5476%" height="15" fill="rgb(253,22,42)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1589" width="0.5476%" height="15" fill="rgb(234,61,47)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1573" width="0.5476%" height="15" fill="rgb(208,226,15)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1557" width="0.5476%" height="15" fill="rgb(217,221,4)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1541" width="0.5476%" height="15" fill="rgb(212,174,34)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1551.50"></text></g><g><title>malloc (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1525" width="0.5476%" height="15" fill="rgb(253,83,4)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1535.50"></text></g><g><title>[libc.so.6] (1,393,507 samples, 0.55%)</title><rect x="38.2321%" y="1509" width="0.5476%" height="15" fill="rgb(250,195,49)" fg:x="97290114" fg:w="1393507"/><text x="38.4821%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31,097,541 samples, 12.22%)</title><rect x="27.0746%" y="1909" width="12.2204%" height="15" fill="rgb(241,192,25)" fg:x="68897338" fg:w="31097541"/><text x="27.3246%" y="1919.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31,097,541 samples, 12.22%)</title><rect x="27.0746%" y="1893" width="12.2204%" height="15" fill="rgb(208,124,10)" fg:x="68897338" fg:w="31097541"/><text x="27.3246%" y="1903.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (31,097,541 samples, 12.22%)</title><rect x="27.0746%" y="1877" width="12.2204%" height="15" fill="rgb(222,33,0)" fg:x="68897338" fg:w="31097541"/><text x="27.3246%" y="1887.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31,097,541 samples, 12.22%)</title><rect x="27.0746%" y="1861" width="12.2204%" height="15" fill="rgb(234,209,28)" fg:x="68897338" fg:w="31097541"/><text x="27.3246%" y="1871.50">&lt;T as alloc::slice..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (31,097,541 samples, 12.22%)</title><rect x="27.0746%" y="1845" width="12.2204%" height="15" fill="rgb(224,11,23)" fg:x="68897338" fg:w="31097541"/><text x="27.3246%" y="1855.50">&lt;css_bitvector_com..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,704,765 samples, 1.06%)</title><rect x="38.2321%" y="1829" width="1.0629%" height="15" fill="rgb(232,99,1)" fg:x="97290114" fg:w="2704765"/><text x="38.4821%" y="1839.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,704,765 samples, 1.06%)</title><rect x="38.2321%" y="1813" width="1.0629%" height="15" fill="rgb(237,95,45)" fg:x="97290114" fg:w="2704765"/><text x="38.4821%" y="1823.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,704,765 samples, 1.06%)</title><rect x="38.2321%" y="1797" width="1.0629%" height="15" fill="rgb(208,109,11)" fg:x="97290114" fg:w="2704765"/><text x="38.4821%" y="1807.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,704,765 samples, 1.06%)</title><rect x="38.2321%" y="1781" width="1.0629%" height="15" fill="rgb(216,190,48)" fg:x="97290114" fg:w="2704765"/><text x="38.4821%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,311,258 samples, 0.52%)</title><rect x="38.7797%" y="1765" width="0.5153%" height="15" fill="rgb(251,171,36)" fg:x="98683621" fg:w="1311258"/><text x="39.0297%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,311,258 samples, 0.52%)</title><rect x="38.7797%" y="1749" width="0.5153%" height="15" fill="rgb(230,62,22)" fg:x="98683621" fg:w="1311258"/><text x="39.0297%" y="1759.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,311,258 samples, 0.52%)</title><rect x="38.7797%" y="1733" width="0.5153%" height="15" fill="rgb(225,114,35)" fg:x="98683621" fg:w="1311258"/><text x="39.0297%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,311,258 samples, 0.52%)</title><rect x="38.7797%" y="1717" width="0.5153%" height="15" fill="rgb(215,118,42)" fg:x="98683621" fg:w="1311258"/><text x="39.0297%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,311,258 samples, 0.52%)</title><rect x="38.7797%" y="1701" width="0.5153%" height="15" fill="rgb(243,119,21)" fg:x="98683621" fg:w="1311258"/><text x="39.0297%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (1,311,258 samples, 0.52%)</title><rect x="38.7797%" y="1685" width="0.5153%" height="15" fill="rgb(252,177,53)" fg:x="98683621" fg:w="1311258"/><text x="39.0297%" y="1695.50"></text></g><g><title>malloc (1,311,258 samples, 0.52%)</title><rect x="38.7797%" y="1669" width="0.5153%" height="15" fill="rgb(237,209,29)" fg:x="98683621" fg:w="1311258"/><text x="39.0297%" y="1679.50"></text></g><g><title>[libc.so.6] (1,311,258 samples, 0.52%)</title><rect x="38.7797%" y="1653" width="0.5153%" height="15" fill="rgb(212,65,23)" fg:x="98683621" fg:w="1311258"/><text x="39.0297%" y="1663.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,070,464 samples, 1.21%)</title><rect x="39.2949%" y="1909" width="1.2066%" height="15" fill="rgb(230,222,46)" fg:x="99994879" fg:w="3070464"/><text x="39.5449%" y="1919.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,330,861 samples, 0.52%)</title><rect x="39.9786%" y="1893" width="0.5230%" height="15" fill="rgb(215,135,32)" fg:x="101734482" fg:w="1330861"/><text x="40.2286%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,330,861 samples, 0.52%)</title><rect x="39.9786%" y="1877" width="0.5230%" height="15" fill="rgb(246,101,22)" fg:x="101734482" fg:w="1330861"/><text x="40.2286%" y="1887.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,330,861 samples, 0.52%)</title><rect x="39.9786%" y="1861" width="0.5230%" height="15" fill="rgb(206,107,13)" fg:x="101734482" fg:w="1330861"/><text x="40.2286%" y="1871.50"></text></g><g><title>alloc::slice::hack::to_vec (1,330,861 samples, 0.52%)</title><rect x="39.9786%" y="1845" width="0.5230%" height="15" fill="rgb(250,100,44)" fg:x="101734482" fg:w="1330861"/><text x="40.2286%" y="1855.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,330,861 samples, 0.52%)</title><rect x="39.9786%" y="1829" width="0.5230%" height="15" fill="rgb(231,147,38)" fg:x="101734482" fg:w="1330861"/><text x="40.2286%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,330,861 samples, 0.52%)</title><rect x="39.9786%" y="1813" width="0.5230%" height="15" fill="rgb(229,8,40)" fg:x="101734482" fg:w="1330861"/><text x="40.2286%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,330,861 samples, 0.52%)</title><rect x="39.9786%" y="1797" width="0.5230%" height="15" fill="rgb(221,135,30)" fg:x="101734482" fg:w="1330861"/><text x="40.2286%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,330,861 samples, 0.52%)</title><rect x="39.9786%" y="1781" width="0.5230%" height="15" fill="rgb(249,193,18)" fg:x="101734482" fg:w="1330861"/><text x="40.2286%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,330,861 samples, 0.52%)</title><rect x="39.9786%" y="1765" width="0.5230%" height="15" fill="rgb(209,133,39)" fg:x="101734482" fg:w="1330861"/><text x="40.2286%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,330,861 samples, 0.52%)</title><rect x="39.9786%" y="1749" width="0.5230%" height="15" fill="rgb(232,100,14)" fg:x="101734482" fg:w="1330861"/><text x="40.2286%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,330,861 samples, 0.52%)</title><rect x="39.9786%" y="1733" width="0.5230%" height="15" fill="rgb(224,185,1)" fg:x="101734482" fg:w="1330861"/><text x="40.2286%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (1,330,861 samples, 0.52%)</title><rect x="39.9786%" y="1717" width="0.5230%" height="15" fill="rgb(223,139,8)" fg:x="101734482" fg:w="1330861"/><text x="40.2286%" y="1727.50"></text></g><g><title>malloc (1,330,861 samples, 0.52%)</title><rect x="39.9786%" y="1701" width="0.5230%" height="15" fill="rgb(232,213,38)" fg:x="101734482" fg:w="1330861"/><text x="40.2286%" y="1711.50"></text></g><g><title>[libc.so.6] (1,330,861 samples, 0.52%)</title><rect x="39.9786%" y="1685" width="0.5230%" height="15" fill="rgb(207,94,22)" fg:x="101734482" fg:w="1330861"/><text x="40.2286%" y="1695.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,338,277 samples, 0.53%)</title><rect x="40.5015%" y="1909" width="0.5259%" height="15" fill="rgb(219,183,54)" fg:x="103065343" fg:w="1338277"/><text x="40.7515%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,338,277 samples, 0.53%)</title><rect x="40.5015%" y="1893" width="0.5259%" height="15" fill="rgb(216,185,54)" fg:x="103065343" fg:w="1338277"/><text x="40.7515%" y="1903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,338,277 samples, 0.53%)</title><rect x="40.5015%" y="1877" width="0.5259%" height="15" fill="rgb(254,217,39)" fg:x="103065343" fg:w="1338277"/><text x="40.7515%" y="1887.50"></text></g><g><title>alloc::slice::hack::to_vec (1,338,277 samples, 0.53%)</title><rect x="40.5015%" y="1861" width="0.5259%" height="15" fill="rgb(240,178,23)" fg:x="103065343" fg:w="1338277"/><text x="40.7515%" y="1871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,338,277 samples, 0.53%)</title><rect x="40.5015%" y="1845" width="0.5259%" height="15" fill="rgb(218,11,47)" fg:x="103065343" fg:w="1338277"/><text x="40.7515%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,338,277 samples, 0.53%)</title><rect x="40.5015%" y="1829" width="0.5259%" height="15" fill="rgb(218,51,51)" fg:x="103065343" fg:w="1338277"/><text x="40.7515%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,338,277 samples, 0.53%)</title><rect x="40.5015%" y="1813" width="0.5259%" height="15" fill="rgb(238,126,27)" fg:x="103065343" fg:w="1338277"/><text x="40.7515%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,338,277 samples, 0.53%)</title><rect x="40.5015%" y="1797" width="0.5259%" height="15" fill="rgb(249,202,22)" fg:x="103065343" fg:w="1338277"/><text x="40.7515%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,338,277 samples, 0.53%)</title><rect x="40.5015%" y="1781" width="0.5259%" height="15" fill="rgb(254,195,49)" fg:x="103065343" fg:w="1338277"/><text x="40.7515%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,338,277 samples, 0.53%)</title><rect x="40.5015%" y="1765" width="0.5259%" height="15" fill="rgb(208,123,14)" fg:x="103065343" fg:w="1338277"/><text x="40.7515%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,338,277 samples, 0.53%)</title><rect x="40.5015%" y="1749" width="0.5259%" height="15" fill="rgb(224,200,8)" fg:x="103065343" fg:w="1338277"/><text x="40.7515%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (1,338,277 samples, 0.53%)</title><rect x="40.5015%" y="1733" width="0.5259%" height="15" fill="rgb(217,61,36)" fg:x="103065343" fg:w="1338277"/><text x="40.7515%" y="1743.50"></text></g><g><title>__rdl_alloc (1,338,277 samples, 0.53%)</title><rect x="40.5015%" y="1717" width="0.5259%" height="15" fill="rgb(206,35,45)" fg:x="103065343" fg:w="1338277"/><text x="40.7515%" y="1727.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,338,277 samples, 0.53%)</title><rect x="40.5015%" y="1701" width="0.5259%" height="15" fill="rgb(217,65,33)" fg:x="103065343" fg:w="1338277"/><text x="40.7515%" y="1711.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,360,266 samples, 0.53%)</title><rect x="41.5407%" y="1813" width="0.5345%" height="15" fill="rgb(222,158,48)" fg:x="105709762" fg:w="1360266"/><text x="41.7907%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (39,519,272 samples, 15.53%)</title><rect x="27.0746%" y="1989" width="15.5299%" height="15" fill="rgb(254,2,54)" fg:x="68897338" fg:w="39519272"/><text x="27.3246%" y="1999.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (39,519,272 samples, 15.53%)</title><rect x="27.0746%" y="1973" width="15.5299%" height="15" fill="rgb(250,143,38)" fg:x="68897338" fg:w="39519272"/><text x="27.3246%" y="1983.50">alloc::slice::&lt;impl [T]&gt;..</text></g><g><title>alloc::slice::hack::to_vec (39,519,272 samples, 15.53%)</title><rect x="27.0746%" y="1957" width="15.5299%" height="15" fill="rgb(248,25,0)" fg:x="68897338" fg:w="39519272"/><text x="27.3246%" y="1967.50">alloc::slice::hack::to_v..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39,519,272 samples, 15.53%)</title><rect x="27.0746%" y="1941" width="15.5299%" height="15" fill="rgb(206,152,27)" fg:x="68897338" fg:w="39519272"/><text x="27.3246%" y="1951.50">&lt;T as alloc::slice::hack..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (39,519,272 samples, 15.53%)</title><rect x="27.0746%" y="1925" width="15.5299%" height="15" fill="rgb(240,77,30)" fg:x="68897338" fg:w="39519272"/><text x="27.3246%" y="1935.50">&lt;css_bitvector_compiler:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4,012,990 samples, 1.58%)</title><rect x="41.0274%" y="1909" width="1.5770%" height="15" fill="rgb(231,5,3)" fg:x="104403620" fg:w="4012990"/><text x="41.2774%" y="1919.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4,012,990 samples, 1.58%)</title><rect x="41.0274%" y="1893" width="1.5770%" height="15" fill="rgb(207,226,32)" fg:x="104403620" fg:w="4012990"/><text x="41.2774%" y="1903.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,706,848 samples, 1.06%)</title><rect x="41.5407%" y="1877" width="1.0637%" height="15" fill="rgb(222,207,47)" fg:x="105709762" fg:w="2706848"/><text x="41.7907%" y="1887.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,706,848 samples, 1.06%)</title><rect x="41.5407%" y="1861" width="1.0637%" height="15" fill="rgb(229,115,45)" fg:x="105709762" fg:w="2706848"/><text x="41.7907%" y="1871.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,706,848 samples, 1.06%)</title><rect x="41.5407%" y="1845" width="1.0637%" height="15" fill="rgb(224,191,6)" fg:x="105709762" fg:w="2706848"/><text x="41.7907%" y="1855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,706,848 samples, 1.06%)</title><rect x="41.5407%" y="1829" width="1.0637%" height="15" fill="rgb(230,227,24)" fg:x="105709762" fg:w="2706848"/><text x="41.7907%" y="1839.50"></text></g><g><title>core::clone::Clone::clone (1,346,582 samples, 0.53%)</title><rect x="42.0753%" y="1813" width="0.5292%" height="15" fill="rgb(228,80,19)" fg:x="107070028" fg:w="1346582"/><text x="42.3253%" y="1823.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,346,582 samples, 0.53%)</title><rect x="42.0753%" y="1797" width="0.5292%" height="15" fill="rgb(247,229,0)" fg:x="107070028" fg:w="1346582"/><text x="42.3253%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,346,582 samples, 0.53%)</title><rect x="42.0753%" y="1781" width="0.5292%" height="15" fill="rgb(237,194,15)" fg:x="107070028" fg:w="1346582"/><text x="42.3253%" y="1791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,346,582 samples, 0.53%)</title><rect x="42.0753%" y="1765" width="0.5292%" height="15" fill="rgb(219,203,20)" fg:x="107070028" fg:w="1346582"/><text x="42.3253%" y="1775.50"></text></g><g><title>alloc::slice::hack::to_vec (1,346,582 samples, 0.53%)</title><rect x="42.0753%" y="1749" width="0.5292%" height="15" fill="rgb(234,128,8)" fg:x="107070028" fg:w="1346582"/><text x="42.3253%" y="1759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,346,582 samples, 0.53%)</title><rect x="42.0753%" y="1733" width="0.5292%" height="15" fill="rgb(248,202,8)" fg:x="107070028" fg:w="1346582"/><text x="42.3253%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,346,582 samples, 0.53%)</title><rect x="42.0753%" y="1717" width="0.5292%" height="15" fill="rgb(206,104,37)" fg:x="107070028" fg:w="1346582"/><text x="42.3253%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,346,582 samples, 0.53%)</title><rect x="42.0753%" y="1701" width="0.5292%" height="15" fill="rgb(223,8,27)" fg:x="107070028" fg:w="1346582"/><text x="42.3253%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,346,582 samples, 0.53%)</title><rect x="42.0753%" y="1685" width="0.5292%" height="15" fill="rgb(216,217,28)" fg:x="107070028" fg:w="1346582"/><text x="42.3253%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,346,582 samples, 0.53%)</title><rect x="42.0753%" y="1669" width="0.5292%" height="15" fill="rgb(249,199,1)" fg:x="107070028" fg:w="1346582"/><text x="42.3253%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,346,582 samples, 0.53%)</title><rect x="42.0753%" y="1653" width="0.5292%" height="15" fill="rgb(240,85,17)" fg:x="107070028" fg:w="1346582"/><text x="42.3253%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,346,582 samples, 0.53%)</title><rect x="42.0753%" y="1637" width="0.5292%" height="15" fill="rgb(206,108,45)" fg:x="107070028" fg:w="1346582"/><text x="42.3253%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (1,346,582 samples, 0.53%)</title><rect x="42.0753%" y="1621" width="0.5292%" height="15" fill="rgb(245,210,41)" fg:x="107070028" fg:w="1346582"/><text x="42.3253%" y="1631.50"></text></g><g><title>malloc (1,346,582 samples, 0.53%)</title><rect x="42.0753%" y="1605" width="0.5292%" height="15" fill="rgb(206,13,37)" fg:x="107070028" fg:w="1346582"/><text x="42.3253%" y="1615.50"></text></g><g><title>[libc.so.6] (1,346,582 samples, 0.53%)</title><rect x="42.0753%" y="1589" width="0.5292%" height="15" fill="rgb(250,61,18)" fg:x="107070028" fg:w="1346582"/><text x="42.3253%" y="1599.50"></text></g><g><title>[libc.so.6] (1,382,137 samples, 0.54%)</title><rect x="42.6044%" y="1685" width="0.5431%" height="15" fill="rgb(235,172,48)" fg:x="108416610" fg:w="1382137"/><text x="42.8544%" y="1695.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (43,425,965 samples, 17.07%)</title><rect x="26.5765%" y="2005" width="17.0651%" height="15" fill="rgb(249,201,17)" fg:x="67629903" fg:w="43425965"/><text x="26.8265%" y="2015.50">&lt;css_bitvector_compiler::H..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1989" width="1.0371%" height="15" fill="rgb(219,208,6)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1999.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1973" width="1.0371%" height="15" fill="rgb(248,31,23)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1983.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1957" width="1.0371%" height="15" fill="rgb(245,15,42)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1967.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1941" width="1.0371%" height="15" fill="rgb(222,217,39)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1951.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1925" width="1.0371%" height="15" fill="rgb(210,219,27)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1935.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1909" width="1.0371%" height="15" fill="rgb(252,166,36)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1919.50"></text></g><g><title>core::clone::Clone::clone (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1893" width="1.0371%" height="15" fill="rgb(245,132,34)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1903.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1877" width="1.0371%" height="15" fill="rgb(236,54,3)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1861" width="1.0371%" height="15" fill="rgb(241,173,43)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1871.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1845" width="1.0371%" height="15" fill="rgb(215,190,9)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1855.50"></text></g><g><title>alloc::slice::hack::to_vec (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1829" width="1.0371%" height="15" fill="rgb(242,101,16)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1839.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1813" width="1.0371%" height="15" fill="rgb(223,190,21)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1797" width="1.0371%" height="15" fill="rgb(215,228,25)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1781" width="1.0371%" height="15" fill="rgb(225,36,22)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1765" width="1.0371%" height="15" fill="rgb(251,106,46)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1749" width="1.0371%" height="15" fill="rgb(208,90,1)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1733" width="1.0371%" height="15" fill="rgb(243,10,4)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1717" width="1.0371%" height="15" fill="rgb(212,137,27)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1727.50"></text></g><g><title>alloc::alloc::alloc (2,639,258 samples, 1.04%)</title><rect x="42.6044%" y="1701" width="1.0371%" height="15" fill="rgb(231,220,49)" fg:x="108416610" fg:w="2639258"/><text x="42.8544%" y="1711.50"></text></g><g><title>malloc (1,257,121 samples, 0.49%)</title><rect x="43.1476%" y="1685" width="0.4940%" height="15" fill="rgb(237,96,20)" fg:x="109798747" fg:w="1257121"/><text x="43.3976%" y="1695.50"></text></g><g><title>[libc.so.6] (1,257,121 samples, 0.49%)</title><rect x="43.1476%" y="1669" width="0.4940%" height="15" fill="rgb(239,229,30)" fg:x="109798747" fg:w="1257121"/><text x="43.3976%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (44,746,212 samples, 17.58%)</title><rect x="26.5765%" y="2069" width="17.5839%" height="15" fill="rgb(219,65,33)" fg:x="67629903" fg:w="44746212"/><text x="26.8265%" y="2079.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (44,746,212 samples, 17.58%)</title><rect x="26.5765%" y="2053" width="17.5839%" height="15" fill="rgb(243,134,7)" fg:x="67629903" fg:w="44746212"/><text x="26.8265%" y="2063.50">alloc::slice::&lt;impl [T]&gt;::t..</text></g><g><title>alloc::slice::hack::to_vec (44,746,212 samples, 17.58%)</title><rect x="26.5765%" y="2037" width="17.5839%" height="15" fill="rgb(216,177,54)" fg:x="67629903" fg:w="44746212"/><text x="26.8265%" y="2047.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (44,746,212 samples, 17.58%)</title><rect x="26.5765%" y="2021" width="17.5839%" height="15" fill="rgb(211,160,20)" fg:x="67629903" fg:w="44746212"/><text x="26.8265%" y="2031.50">&lt;T as alloc::slice::hack::C..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,320,247 samples, 0.52%)</title><rect x="43.6416%" y="2005" width="0.5188%" height="15" fill="rgb(239,85,39)" fg:x="111055868" fg:w="1320247"/><text x="43.8916%" y="2015.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5,220,569 samples, 2.05%)</title><rect x="44.1604%" y="2069" width="2.0515%" height="15" fill="rgb(232,125,22)" fg:x="112376115" fg:w="5220569"/><text x="44.4104%" y="2079.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,041,212 samples, 1.59%)</title><rect x="44.6238%" y="2053" width="1.5881%" height="15" fill="rgb(244,57,34)" fg:x="113555472" fg:w="4041212"/><text x="44.8738%" y="2063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,041,212 samples, 1.59%)</title><rect x="44.6238%" y="2037" width="1.5881%" height="15" fill="rgb(214,203,32)" fg:x="113555472" fg:w="4041212"/><text x="44.8738%" y="2047.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,041,212 samples, 1.59%)</title><rect x="44.6238%" y="2021" width="1.5881%" height="15" fill="rgb(207,58,43)" fg:x="113555472" fg:w="4041212"/><text x="44.8738%" y="2031.50"></text></g><g><title>alloc::slice::hack::to_vec (4,041,212 samples, 1.59%)</title><rect x="44.6238%" y="2005" width="1.5881%" height="15" fill="rgb(215,193,15)" fg:x="113555472" fg:w="4041212"/><text x="44.8738%" y="2015.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,041,212 samples, 1.59%)</title><rect x="44.6238%" y="1989" width="1.5881%" height="15" fill="rgb(232,15,44)" fg:x="113555472" fg:w="4041212"/><text x="44.8738%" y="1999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,041,212 samples, 1.59%)</title><rect x="44.6238%" y="1973" width="1.5881%" height="15" fill="rgb(212,3,48)" fg:x="113555472" fg:w="4041212"/><text x="44.8738%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,041,212 samples, 1.59%)</title><rect x="44.6238%" y="1957" width="1.5881%" height="15" fill="rgb(218,128,7)" fg:x="113555472" fg:w="4041212"/><text x="44.8738%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,041,212 samples, 1.59%)</title><rect x="44.6238%" y="1941" width="1.5881%" height="15" fill="rgb(226,216,39)" fg:x="113555472" fg:w="4041212"/><text x="44.8738%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,041,212 samples, 1.59%)</title><rect x="44.6238%" y="1925" width="1.5881%" height="15" fill="rgb(243,47,51)" fg:x="113555472" fg:w="4041212"/><text x="44.8738%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,041,212 samples, 1.59%)</title><rect x="44.6238%" y="1909" width="1.5881%" height="15" fill="rgb(241,183,40)" fg:x="113555472" fg:w="4041212"/><text x="44.8738%" y="1919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,041,212 samples, 1.59%)</title><rect x="44.6238%" y="1893" width="1.5881%" height="15" fill="rgb(231,217,32)" fg:x="113555472" fg:w="4041212"/><text x="44.8738%" y="1903.50"></text></g><g><title>alloc::alloc::alloc (4,041,212 samples, 1.59%)</title><rect x="44.6238%" y="1877" width="1.5881%" height="15" fill="rgb(229,61,38)" fg:x="113555472" fg:w="4041212"/><text x="44.8738%" y="1887.50"></text></g><g><title>malloc (4,041,212 samples, 1.59%)</title><rect x="44.6238%" y="1861" width="1.5881%" height="15" fill="rgb(225,210,5)" fg:x="113555472" fg:w="4041212"/><text x="44.8738%" y="1871.50"></text></g><g><title>[libc.so.6] (1,354,114 samples, 0.53%)</title><rect x="45.6798%" y="1845" width="0.5321%" height="15" fill="rgb(231,79,45)" fg:x="116242570" fg:w="1354114"/><text x="45.9298%" y="1855.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,563,729 samples, 1.01%)</title><rect x="46.2119%" y="2069" width="1.0075%" height="15" fill="rgb(224,100,7)" fg:x="117596684" fg:w="2563729"/><text x="46.4619%" y="2079.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,563,729 samples, 1.01%)</title><rect x="46.2119%" y="2053" width="1.0075%" height="15" fill="rgb(241,198,18)" fg:x="117596684" fg:w="2563729"/><text x="46.4619%" y="2063.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,563,729 samples, 1.01%)</title><rect x="46.2119%" y="2037" width="1.0075%" height="15" fill="rgb(252,97,53)" fg:x="117596684" fg:w="2563729"/><text x="46.4619%" y="2047.50"></text></g><g><title>alloc::slice::hack::to_vec (2,563,729 samples, 1.01%)</title><rect x="46.2119%" y="2021" width="1.0075%" height="15" fill="rgb(220,88,7)" fg:x="117596684" fg:w="2563729"/><text x="46.4619%" y="2031.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,563,729 samples, 1.01%)</title><rect x="46.2119%" y="2005" width="1.0075%" height="15" fill="rgb(213,176,14)" fg:x="117596684" fg:w="2563729"/><text x="46.4619%" y="2015.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,563,729 samples, 1.01%)</title><rect x="46.2119%" y="1989" width="1.0075%" height="15" fill="rgb(246,73,7)" fg:x="117596684" fg:w="2563729"/><text x="46.4619%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,563,729 samples, 1.01%)</title><rect x="46.2119%" y="1973" width="1.0075%" height="15" fill="rgb(245,64,36)" fg:x="117596684" fg:w="2563729"/><text x="46.4619%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,563,729 samples, 1.01%)</title><rect x="46.2119%" y="1957" width="1.0075%" height="15" fill="rgb(245,80,10)" fg:x="117596684" fg:w="2563729"/><text x="46.4619%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,563,729 samples, 1.01%)</title><rect x="46.2119%" y="1941" width="1.0075%" height="15" fill="rgb(232,107,50)" fg:x="117596684" fg:w="2563729"/><text x="46.4619%" y="1951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,563,729 samples, 1.01%)</title><rect x="46.2119%" y="1925" width="1.0075%" height="15" fill="rgb(253,3,0)" fg:x="117596684" fg:w="2563729"/><text x="46.4619%" y="1935.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,563,729 samples, 1.01%)</title><rect x="46.2119%" y="1909" width="1.0075%" height="15" fill="rgb(212,99,53)" fg:x="117596684" fg:w="2563729"/><text x="46.4619%" y="1919.50"></text></g><g><title>alloc::alloc::alloc (2,563,729 samples, 1.01%)</title><rect x="46.2119%" y="1893" width="1.0075%" height="15" fill="rgb(249,111,54)" fg:x="117596684" fg:w="2563729"/><text x="46.4619%" y="1903.50"></text></g><g><title>malloc (2,563,729 samples, 1.01%)</title><rect x="46.2119%" y="1877" width="1.0075%" height="15" fill="rgb(249,55,30)" fg:x="117596684" fg:w="2563729"/><text x="46.4619%" y="1887.50"></text></g><g><title>[libc.so.6] (2,563,729 samples, 1.01%)</title><rect x="46.2119%" y="1861" width="1.0075%" height="15" fill="rgb(237,47,42)" fg:x="117596684" fg:w="2563729"/><text x="46.4619%" y="1871.50"></text></g><g><title>core::clone::Clone::clone (2,704,229 samples, 1.06%)</title><rect x="47.2194%" y="1973" width="1.0627%" height="15" fill="rgb(211,20,18)" fg:x="120160413" fg:w="2704229"/><text x="47.4694%" y="1983.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,704,229 samples, 1.06%)</title><rect x="47.2194%" y="1957" width="1.0627%" height="15" fill="rgb(231,203,46)" fg:x="120160413" fg:w="2704229"/><text x="47.4694%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,704,229 samples, 1.06%)</title><rect x="47.2194%" y="1941" width="1.0627%" height="15" fill="rgb(237,142,3)" fg:x="120160413" fg:w="2704229"/><text x="47.4694%" y="1951.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,704,229 samples, 1.06%)</title><rect x="47.2194%" y="1925" width="1.0627%" height="15" fill="rgb(241,107,1)" fg:x="120160413" fg:w="2704229"/><text x="47.4694%" y="1935.50"></text></g><g><title>alloc::slice::hack::to_vec (2,704,229 samples, 1.06%)</title><rect x="47.2194%" y="1909" width="1.0627%" height="15" fill="rgb(229,83,13)" fg:x="120160413" fg:w="2704229"/><text x="47.4694%" y="1919.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,704,229 samples, 1.06%)</title><rect x="47.2194%" y="1893" width="1.0627%" height="15" fill="rgb(241,91,40)" fg:x="120160413" fg:w="2704229"/><text x="47.4694%" y="1903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,704,229 samples, 1.06%)</title><rect x="47.2194%" y="1877" width="1.0627%" height="15" fill="rgb(225,3,45)" fg:x="120160413" fg:w="2704229"/><text x="47.4694%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,704,229 samples, 1.06%)</title><rect x="47.2194%" y="1861" width="1.0627%" height="15" fill="rgb(244,223,14)" fg:x="120160413" fg:w="2704229"/><text x="47.4694%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,704,229 samples, 1.06%)</title><rect x="47.2194%" y="1845" width="1.0627%" height="15" fill="rgb(224,124,37)" fg:x="120160413" fg:w="2704229"/><text x="47.4694%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,704,229 samples, 1.06%)</title><rect x="47.2194%" y="1829" width="1.0627%" height="15" fill="rgb(251,171,30)" fg:x="120160413" fg:w="2704229"/><text x="47.4694%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,394,846 samples, 0.55%)</title><rect x="47.7339%" y="1813" width="0.5481%" height="15" fill="rgb(236,46,54)" fg:x="121469796" fg:w="1394846"/><text x="47.9839%" y="1823.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,394,846 samples, 0.55%)</title><rect x="47.7339%" y="1797" width="0.5481%" height="15" fill="rgb(245,213,5)" fg:x="121469796" fg:w="1394846"/><text x="47.9839%" y="1807.50"></text></g><g><title>alloc::alloc::alloc (1,394,846 samples, 0.55%)</title><rect x="47.7339%" y="1781" width="0.5481%" height="15" fill="rgb(230,144,27)" fg:x="121469796" fg:w="1394846"/><text x="47.9839%" y="1791.50"></text></g><g><title>malloc (1,394,846 samples, 0.55%)</title><rect x="47.7339%" y="1765" width="0.5481%" height="15" fill="rgb(220,86,6)" fg:x="121469796" fg:w="1394846"/><text x="47.9839%" y="1775.50"></text></g><g><title>[libc.so.6] (1,394,846 samples, 0.55%)</title><rect x="47.7339%" y="1749" width="0.5481%" height="15" fill="rgb(240,20,13)" fg:x="121469796" fg:w="1394846"/><text x="47.9839%" y="1759.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (57,842,500 samples, 22.73%)</title><rect x="26.0774%" y="2085" width="22.7303%" height="15" fill="rgb(217,89,34)" fg:x="66359870" fg:w="57842500"/><text x="26.3274%" y="2095.50">&lt;css_bitvector_compiler::HtmlNode as..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4,041,957 samples, 1.59%)</title><rect x="47.2194%" y="2069" width="1.5884%" height="15" fill="rgb(229,13,5)" fg:x="120160413" fg:w="4041957"/><text x="47.4694%" y="2079.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4,041,957 samples, 1.59%)</title><rect x="47.2194%" y="2053" width="1.5884%" height="15" fill="rgb(244,67,35)" fg:x="120160413" fg:w="4041957"/><text x="47.4694%" y="2063.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4,041,957 samples, 1.59%)</title><rect x="47.2194%" y="2037" width="1.5884%" height="15" fill="rgb(221,40,2)" fg:x="120160413" fg:w="4041957"/><text x="47.4694%" y="2047.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,041,957 samples, 1.59%)</title><rect x="47.2194%" y="2021" width="1.5884%" height="15" fill="rgb(237,157,21)" fg:x="120160413" fg:w="4041957"/><text x="47.4694%" y="2031.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (4,041,957 samples, 1.59%)</title><rect x="47.2194%" y="2005" width="1.5884%" height="15" fill="rgb(222,94,11)" fg:x="120160413" fg:w="4041957"/><text x="47.4694%" y="2015.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (4,041,957 samples, 1.59%)</title><rect x="47.2194%" y="1989" width="1.5884%" height="15" fill="rgb(249,113,6)" fg:x="120160413" fg:w="4041957"/><text x="47.4694%" y="1999.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1,337,728 samples, 0.53%)</title><rect x="48.2821%" y="1973" width="0.5257%" height="15" fill="rgb(238,137,36)" fg:x="122864642" fg:w="1337728"/><text x="48.5321%" y="1983.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,337,728 samples, 0.53%)</title><rect x="48.2821%" y="1957" width="0.5257%" height="15" fill="rgb(210,102,26)" fg:x="122864642" fg:w="1337728"/><text x="48.5321%" y="1967.50"></text></g><g><title>[libc.so.6] (1,337,728 samples, 0.53%)</title><rect x="48.2821%" y="1941" width="0.5257%" height="15" fill="rgb(218,30,30)" fg:x="122864642" fg:w="1337728"/><text x="48.5321%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (59,072,954 samples, 23.21%)</title><rect x="26.0774%" y="2149" width="23.2139%" height="15" fill="rgb(214,67,26)" fg:x="66359870" fg:w="59072954"/><text x="26.3274%" y="2159.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (59,072,954 samples, 23.21%)</title><rect x="26.0774%" y="2133" width="23.2139%" height="15" fill="rgb(251,9,53)" fg:x="66359870" fg:w="59072954"/><text x="26.3274%" y="2143.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (59,072,954 samples, 23.21%)</title><rect x="26.0774%" y="2117" width="23.2139%" height="15" fill="rgb(228,204,25)" fg:x="66359870" fg:w="59072954"/><text x="26.3274%" y="2127.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (59,072,954 samples, 23.21%)</title><rect x="26.0774%" y="2101" width="23.2139%" height="15" fill="rgb(207,153,8)" fg:x="66359870" fg:w="59072954"/><text x="26.3274%" y="2111.50">&lt;T as alloc::slice::hack::ConvertVec&gt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,230,454 samples, 0.48%)</title><rect x="48.8078%" y="2085" width="0.4835%" height="15" fill="rgb(242,9,16)" fg:x="124202370" fg:w="1230454"/><text x="49.0578%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,230,454 samples, 0.48%)</title><rect x="48.8078%" y="2069" width="0.4835%" height="15" fill="rgb(217,211,10)" fg:x="124202370" fg:w="1230454"/><text x="49.0578%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,230,454 samples, 0.48%)</title><rect x="48.8078%" y="2053" width="0.4835%" height="15" fill="rgb(219,228,52)" fg:x="124202370" fg:w="1230454"/><text x="49.0578%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,230,454 samples, 0.48%)</title><rect x="48.8078%" y="2037" width="0.4835%" height="15" fill="rgb(231,92,29)" fg:x="124202370" fg:w="1230454"/><text x="49.0578%" y="2047.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,230,454 samples, 0.48%)</title><rect x="48.8078%" y="2021" width="0.4835%" height="15" fill="rgb(232,8,23)" fg:x="124202370" fg:w="1230454"/><text x="49.0578%" y="2031.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,230,454 samples, 0.48%)</title><rect x="48.8078%" y="2005" width="0.4835%" height="15" fill="rgb(216,211,34)" fg:x="124202370" fg:w="1230454"/><text x="49.0578%" y="2015.50"></text></g><g><title>alloc::alloc::alloc (1,230,454 samples, 0.48%)</title><rect x="48.8078%" y="1989" width="0.4835%" height="15" fill="rgb(236,151,0)" fg:x="124202370" fg:w="1230454"/><text x="49.0578%" y="1999.50"></text></g><g><title>malloc (1,230,454 samples, 0.48%)</title><rect x="48.8078%" y="1973" width="0.4835%" height="15" fill="rgb(209,168,3)" fg:x="124202370" fg:w="1230454"/><text x="49.0578%" y="1983.50"></text></g><g><title>[libc.so.6] (1,230,454 samples, 0.48%)</title><rect x="48.8078%" y="1957" width="0.4835%" height="15" fill="rgb(208,129,28)" fg:x="124202370" fg:w="1230454"/><text x="49.0578%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,384,457 samples, 0.54%)</title><rect x="49.8202%" y="2053" width="0.5440%" height="15" fill="rgb(229,78,22)" fg:x="126778834" fg:w="1384457"/><text x="50.0702%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,384,457 samples, 0.54%)</title><rect x="49.8202%" y="2037" width="0.5440%" height="15" fill="rgb(228,187,13)" fg:x="126778834" fg:w="1384457"/><text x="50.0702%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,384,457 samples, 0.54%)</title><rect x="49.8202%" y="2021" width="0.5440%" height="15" fill="rgb(240,119,24)" fg:x="126778834" fg:w="1384457"/><text x="50.0702%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,384,457 samples, 0.54%)</title><rect x="49.8202%" y="2005" width="0.5440%" height="15" fill="rgb(209,194,42)" fg:x="126778834" fg:w="1384457"/><text x="50.0702%" y="2015.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,384,457 samples, 0.54%)</title><rect x="49.8202%" y="1989" width="0.5440%" height="15" fill="rgb(247,200,46)" fg:x="126778834" fg:w="1384457"/><text x="50.0702%" y="1999.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,384,457 samples, 0.54%)</title><rect x="49.8202%" y="1973" width="0.5440%" height="15" fill="rgb(218,76,16)" fg:x="126778834" fg:w="1384457"/><text x="50.0702%" y="1983.50"></text></g><g><title>alloc::alloc::alloc (1,384,457 samples, 0.54%)</title><rect x="49.8202%" y="1957" width="0.5440%" height="15" fill="rgb(225,21,48)" fg:x="126778834" fg:w="1384457"/><text x="50.0702%" y="1967.50"></text></g><g><title>malloc (1,384,457 samples, 0.54%)</title><rect x="49.8202%" y="1941" width="0.5440%" height="15" fill="rgb(239,223,50)" fg:x="126778834" fg:w="1384457"/><text x="50.0702%" y="1951.50"></text></g><g><title>[libc.so.6] (1,384,457 samples, 0.54%)</title><rect x="49.8202%" y="1925" width="0.5440%" height="15" fill="rgb(244,45,21)" fg:x="126778834" fg:w="1384457"/><text x="50.0702%" y="1935.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4,080,161 samples, 1.60%)</title><rect x="49.2913%" y="2149" width="1.6034%" height="15" fill="rgb(232,33,43)" fg:x="125432824" fg:w="4080161"/><text x="49.5413%" y="2159.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,080,161 samples, 1.60%)</title><rect x="49.2913%" y="2133" width="1.6034%" height="15" fill="rgb(209,8,3)" fg:x="125432824" fg:w="4080161"/><text x="49.5413%" y="2143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,734,151 samples, 1.07%)</title><rect x="49.8202%" y="2117" width="1.0744%" height="15" fill="rgb(214,25,53)" fg:x="126778834" fg:w="2734151"/><text x="50.0702%" y="2127.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,734,151 samples, 1.07%)</title><rect x="49.8202%" y="2101" width="1.0744%" height="15" fill="rgb(254,186,54)" fg:x="126778834" fg:w="2734151"/><text x="50.0702%" y="2111.50"></text></g><g><title>alloc::slice::hack::to_vec (2,734,151 samples, 1.07%)</title><rect x="49.8202%" y="2085" width="1.0744%" height="15" fill="rgb(208,174,49)" fg:x="126778834" fg:w="2734151"/><text x="50.0702%" y="2095.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,734,151 samples, 1.07%)</title><rect x="49.8202%" y="2069" width="1.0744%" height="15" fill="rgb(233,191,51)" fg:x="126778834" fg:w="2734151"/><text x="50.0702%" y="2079.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,349,694 samples, 0.53%)</title><rect x="50.3643%" y="2053" width="0.5304%" height="15" fill="rgb(222,134,10)" fg:x="128163291" fg:w="1349694"/><text x="50.6143%" y="2063.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,349,694 samples, 0.53%)</title><rect x="50.3643%" y="2037" width="0.5304%" height="15" fill="rgb(230,226,20)" fg:x="128163291" fg:w="1349694"/><text x="50.6143%" y="2047.50"></text></g><g><title>[libc.so.6] (1,349,694 samples, 0.53%)</title><rect x="50.3643%" y="2021" width="0.5304%" height="15" fill="rgb(251,111,25)" fg:x="128163291" fg:w="1349694"/><text x="50.6143%" y="2031.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,127,589 samples, 0.84%)</title><rect x="50.8947%" y="2069" width="0.8361%" height="15" fill="rgb(224,40,46)" fg:x="129512985" fg:w="2127589"/><text x="51.1447%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,127,589 samples, 0.84%)</title><rect x="50.8947%" y="2053" width="0.8361%" height="15" fill="rgb(236,108,47)" fg:x="129512985" fg:w="2127589"/><text x="51.1447%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,127,589 samples, 0.84%)</title><rect x="50.8947%" y="2037" width="0.8361%" height="15" fill="rgb(234,93,0)" fg:x="129512985" fg:w="2127589"/><text x="51.1447%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,127,589 samples, 0.84%)</title><rect x="50.8947%" y="2021" width="0.8361%" height="15" fill="rgb(224,213,32)" fg:x="129512985" fg:w="2127589"/><text x="51.1447%" y="2031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,127,589 samples, 0.84%)</title><rect x="50.8947%" y="2005" width="0.8361%" height="15" fill="rgb(251,11,48)" fg:x="129512985" fg:w="2127589"/><text x="51.1447%" y="2015.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,127,589 samples, 0.84%)</title><rect x="50.8947%" y="1989" width="0.8361%" height="15" fill="rgb(236,173,5)" fg:x="129512985" fg:w="2127589"/><text x="51.1447%" y="1999.50"></text></g><g><title>alloc::alloc::alloc (2,127,589 samples, 0.84%)</title><rect x="50.8947%" y="1973" width="0.8361%" height="15" fill="rgb(230,95,12)" fg:x="129512985" fg:w="2127589"/><text x="51.1447%" y="1983.50"></text></g><g><title>malloc (841,260 samples, 0.33%)</title><rect x="51.4002%" y="1957" width="0.3306%" height="15" fill="rgb(232,209,1)" fg:x="130799314" fg:w="841260"/><text x="51.6502%" y="1967.50"></text></g><g><title>[libc.so.6] (841,260 samples, 0.33%)</title><rect x="51.4002%" y="1941" width="0.3306%" height="15" fill="rgb(232,6,1)" fg:x="130799314" fg:w="841260"/><text x="51.6502%" y="1951.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (74,319,211 samples, 29.21%)</title><rect x="22.9996%" y="2165" width="29.2052%" height="15" fill="rgb(210,224,50)" fg:x="58527746" fg:w="74319211"/><text x="23.2496%" y="2175.50">&lt;css_bitvector_compiler::HtmlNode as core::clon..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,333,972 samples, 1.31%)</title><rect x="50.8947%" y="2149" width="1.3101%" height="15" fill="rgb(228,127,35)" fg:x="129512985" fg:w="3333972"/><text x="51.1447%" y="2159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,333,972 samples, 1.31%)</title><rect x="50.8947%" y="2133" width="1.3101%" height="15" fill="rgb(245,102,45)" fg:x="129512985" fg:w="3333972"/><text x="51.1447%" y="2143.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,333,972 samples, 1.31%)</title><rect x="50.8947%" y="2117" width="1.3101%" height="15" fill="rgb(214,1,49)" fg:x="129512985" fg:w="3333972"/><text x="51.1447%" y="2127.50"></text></g><g><title>alloc::slice::hack::to_vec (3,333,972 samples, 1.31%)</title><rect x="50.8947%" y="2101" width="1.3101%" height="15" fill="rgb(226,163,40)" fg:x="129512985" fg:w="3333972"/><text x="51.1447%" y="2111.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,333,972 samples, 1.31%)</title><rect x="50.8947%" y="2085" width="1.3101%" height="15" fill="rgb(239,212,28)" fg:x="129512985" fg:w="3333972"/><text x="51.1447%" y="2095.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,206,383 samples, 0.47%)</title><rect x="51.7307%" y="2069" width="0.4741%" height="15" fill="rgb(220,20,13)" fg:x="131640574" fg:w="1206383"/><text x="51.9807%" y="2079.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,206,383 samples, 0.47%)</title><rect x="51.7307%" y="2053" width="0.4741%" height="15" fill="rgb(210,164,35)" fg:x="131640574" fg:w="1206383"/><text x="51.9807%" y="2063.50"></text></g><g><title>[libc.so.6] (1,206,383 samples, 0.47%)</title><rect x="51.7307%" y="2037" width="0.4741%" height="15" fill="rgb(248,109,41)" fg:x="131640574" fg:w="1206383"/><text x="51.9807%" y="2047.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (75,661,951 samples, 29.73%)</title><rect x="22.9996%" y="2229" width="29.7328%" height="15" fill="rgb(238,23,50)" fg:x="58527746" fg:w="75661951"/><text x="23.2496%" y="2239.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (75,661,951 samples, 29.73%)</title><rect x="22.9996%" y="2213" width="29.7328%" height="15" fill="rgb(211,48,49)" fg:x="58527746" fg:w="75661951"/><text x="23.2496%" y="2223.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (75,661,951 samples, 29.73%)</title><rect x="22.9996%" y="2197" width="29.7328%" height="15" fill="rgb(223,36,21)" fg:x="58527746" fg:w="75661951"/><text x="23.2496%" y="2207.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (75,661,951 samples, 29.73%)</title><rect x="22.9996%" y="2181" width="29.7328%" height="15" fill="rgb(207,123,46)" fg:x="58527746" fg:w="75661951"/><text x="23.2496%" y="2191.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,342,740 samples, 0.53%)</title><rect x="52.2048%" y="2165" width="0.5277%" height="15" fill="rgb(240,218,32)" fg:x="132846957" fg:w="1342740"/><text x="52.4548%" y="2175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (78,285,507 samples, 30.76%)</title><rect x="22.4844%" y="2309" width="30.7638%" height="15" fill="rgb(252,5,43)" fg:x="57216717" fg:w="78285507"/><text x="22.7344%" y="2319.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (78,285,507 samples, 30.76%)</title><rect x="22.4844%" y="2293" width="30.7638%" height="15" fill="rgb(252,84,19)" fg:x="57216717" fg:w="78285507"/><text x="22.7344%" y="2303.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (78,285,507 samples, 30.76%)</title><rect x="22.4844%" y="2277" width="30.7638%" height="15" fill="rgb(243,152,39)" fg:x="57216717" fg:w="78285507"/><text x="22.7344%" y="2287.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (78,285,507 samples, 30.76%)</title><rect x="22.4844%" y="2261" width="30.7638%" height="15" fill="rgb(234,160,15)" fg:x="57216717" fg:w="78285507"/><text x="22.7344%" y="2271.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (78,285,507 samples, 30.76%)</title><rect x="22.4844%" y="2245" width="30.7638%" height="15" fill="rgb(237,34,20)" fg:x="57216717" fg:w="78285507"/><text x="22.7344%" y="2255.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,312,527 samples, 0.52%)</title><rect x="52.7325%" y="2229" width="0.5158%" height="15" fill="rgb(229,97,13)" fg:x="134189697" fg:w="1312527"/><text x="52.9825%" y="2239.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,614,218 samples, 1.03%)</title><rect x="53.2483%" y="2245" width="1.0273%" height="15" fill="rgb(234,71,50)" fg:x="135502224" fg:w="2614218"/><text x="53.4983%" y="2255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,614,218 samples, 1.03%)</title><rect x="53.2483%" y="2229" width="1.0273%" height="15" fill="rgb(253,155,4)" fg:x="135502224" fg:w="2614218"/><text x="53.4983%" y="2239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1,394,998 samples, 0.55%)</title><rect x="53.7274%" y="2213" width="0.5482%" height="15" fill="rgb(222,185,37)" fg:x="136721444" fg:w="1394998"/><text x="53.9774%" y="2223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,394,998 samples, 0.55%)</title><rect x="53.7274%" y="2197" width="0.5482%" height="15" fill="rgb(251,177,13)" fg:x="136721444" fg:w="1394998"/><text x="53.9774%" y="2207.50"></text></g><g><title>[libc.so.6] (1,394,998 samples, 0.55%)</title><rect x="53.7274%" y="2181" width="0.5482%" height="15" fill="rgb(250,179,40)" fg:x="136721444" fg:w="1394998"/><text x="53.9774%" y="2191.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (83,526,633 samples, 32.82%)</title><rect x="21.9707%" y="2325" width="32.8234%" height="15" fill="rgb(242,44,2)" fg:x="55909420" fg:w="83526633"/><text x="22.2207%" y="2335.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clo..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,933,829 samples, 1.55%)</title><rect x="53.2483%" y="2309" width="1.5459%" height="15" fill="rgb(216,177,13)" fg:x="135502224" fg:w="3933829"/><text x="53.4983%" y="2319.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,933,829 samples, 1.55%)</title><rect x="53.2483%" y="2293" width="1.5459%" height="15" fill="rgb(216,106,43)" fg:x="135502224" fg:w="3933829"/><text x="53.4983%" y="2303.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,933,829 samples, 1.55%)</title><rect x="53.2483%" y="2277" width="1.5459%" height="15" fill="rgb(216,183,2)" fg:x="135502224" fg:w="3933829"/><text x="53.4983%" y="2287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,933,829 samples, 1.55%)</title><rect x="53.2483%" y="2261" width="1.5459%" height="15" fill="rgb(249,75,3)" fg:x="135502224" fg:w="3933829"/><text x="53.4983%" y="2271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,319,611 samples, 0.52%)</title><rect x="54.2756%" y="2245" width="0.5186%" height="15" fill="rgb(219,67,39)" fg:x="138116442" fg:w="1319611"/><text x="54.5256%" y="2255.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,319,611 samples, 0.52%)</title><rect x="54.2756%" y="2229" width="0.5186%" height="15" fill="rgb(253,228,2)" fg:x="138116442" fg:w="1319611"/><text x="54.5256%" y="2239.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,319,611 samples, 0.52%)</title><rect x="54.2756%" y="2213" width="0.5186%" height="15" fill="rgb(235,138,27)" fg:x="138116442" fg:w="1319611"/><text x="54.5256%" y="2223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,319,611 samples, 0.52%)</title><rect x="54.2756%" y="2197" width="0.5186%" height="15" fill="rgb(236,97,51)" fg:x="138116442" fg:w="1319611"/><text x="54.5256%" y="2207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,319,611 samples, 0.52%)</title><rect x="54.2756%" y="2181" width="0.5186%" height="15" fill="rgb(240,80,30)" fg:x="138116442" fg:w="1319611"/><text x="54.5256%" y="2191.50"></text></g><g><title>alloc::alloc::alloc (1,319,611 samples, 0.52%)</title><rect x="54.2756%" y="2165" width="0.5186%" height="15" fill="rgb(230,178,19)" fg:x="138116442" fg:w="1319611"/><text x="54.5256%" y="2175.50"></text></g><g><title>malloc (1,319,611 samples, 0.52%)</title><rect x="54.2756%" y="2149" width="0.5186%" height="15" fill="rgb(210,190,27)" fg:x="138116442" fg:w="1319611"/><text x="54.5256%" y="2159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (84,788,563 samples, 33.32%)</title><rect x="21.9707%" y="2389" width="33.3193%" height="15" fill="rgb(222,107,31)" fg:x="55909420" fg:w="84788563"/><text x="22.2207%" y="2399.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (84,788,563 samples, 33.32%)</title><rect x="21.9707%" y="2373" width="33.3193%" height="15" fill="rgb(216,127,34)" fg:x="55909420" fg:w="84788563"/><text x="22.2207%" y="2383.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (84,788,563 samples, 33.32%)</title><rect x="21.9707%" y="2357" width="33.3193%" height="15" fill="rgb(234,116,52)" fg:x="55909420" fg:w="84788563"/><text x="22.2207%" y="2367.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (84,788,563 samples, 33.32%)</title><rect x="21.9707%" y="2341" width="33.3193%" height="15" fill="rgb(222,124,15)" fg:x="55909420" fg:w="84788563"/><text x="22.2207%" y="2351.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,261,930 samples, 0.50%)</title><rect x="54.7941%" y="2325" width="0.4959%" height="15" fill="rgb(231,179,28)" fg:x="139436053" fg:w="1261930"/><text x="55.0441%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,261,930 samples, 0.50%)</title><rect x="54.7941%" y="2309" width="0.4959%" height="15" fill="rgb(226,93,45)" fg:x="139436053" fg:w="1261930"/><text x="55.0441%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,261,930 samples, 0.50%)</title><rect x="54.7941%" y="2293" width="0.4959%" height="15" fill="rgb(215,8,51)" fg:x="139436053" fg:w="1261930"/><text x="55.0441%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,261,930 samples, 0.50%)</title><rect x="54.7941%" y="2277" width="0.4959%" height="15" fill="rgb(223,106,5)" fg:x="139436053" fg:w="1261930"/><text x="55.0441%" y="2287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,261,930 samples, 0.50%)</title><rect x="54.7941%" y="2261" width="0.4959%" height="15" fill="rgb(250,191,5)" fg:x="139436053" fg:w="1261930"/><text x="55.0441%" y="2271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,261,930 samples, 0.50%)</title><rect x="54.7941%" y="2245" width="0.4959%" height="15" fill="rgb(242,132,44)" fg:x="139436053" fg:w="1261930"/><text x="55.0441%" y="2255.50"></text></g><g><title>alloc::alloc::alloc (1,261,930 samples, 0.50%)</title><rect x="54.7941%" y="2229" width="0.4959%" height="15" fill="rgb(251,152,29)" fg:x="139436053" fg:w="1261930"/><text x="55.0441%" y="2239.50"></text></g><g><title>__rdl_alloc (1,261,930 samples, 0.50%)</title><rect x="54.7941%" y="2213" width="0.4959%" height="15" fill="rgb(218,179,5)" fg:x="139436053" fg:w="1261930"/><text x="55.0441%" y="2223.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,261,930 samples, 0.50%)</title><rect x="54.7941%" y="2197" width="0.4959%" height="15" fill="rgb(227,67,19)" fg:x="139436053" fg:w="1261930"/><text x="55.0441%" y="2207.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,336,073 samples, 0.53%)</title><rect x="55.2900%" y="2389" width="0.5250%" height="15" fill="rgb(233,119,31)" fg:x="140697983" fg:w="1336073"/><text x="55.5400%" y="2399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,336,073 samples, 0.53%)</title><rect x="55.2900%" y="2373" width="0.5250%" height="15" fill="rgb(241,120,22)" fg:x="140697983" fg:w="1336073"/><text x="55.5400%" y="2383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,336,073 samples, 0.53%)</title><rect x="55.2900%" y="2357" width="0.5250%" height="15" fill="rgb(224,102,30)" fg:x="140697983" fg:w="1336073"/><text x="55.5400%" y="2367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,336,073 samples, 0.53%)</title><rect x="55.2900%" y="2341" width="0.5250%" height="15" fill="rgb(210,164,37)" fg:x="140697983" fg:w="1336073"/><text x="55.5400%" y="2351.50"></text></g><g><title>alloc::slice::hack::to_vec (1,336,073 samples, 0.53%)</title><rect x="55.2900%" y="2325" width="0.5250%" height="15" fill="rgb(226,191,16)" fg:x="140697983" fg:w="1336073"/><text x="55.5400%" y="2335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,336,073 samples, 0.53%)</title><rect x="55.2900%" y="2309" width="0.5250%" height="15" fill="rgb(214,40,45)" fg:x="140697983" fg:w="1336073"/><text x="55.5400%" y="2319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,336,073 samples, 0.53%)</title><rect x="55.2900%" y="2293" width="0.5250%" height="15" fill="rgb(244,29,26)" fg:x="140697983" fg:w="1336073"/><text x="55.5400%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,336,073 samples, 0.53%)</title><rect x="55.2900%" y="2277" width="0.5250%" height="15" fill="rgb(216,16,5)" fg:x="140697983" fg:w="1336073"/><text x="55.5400%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,336,073 samples, 0.53%)</title><rect x="55.2900%" y="2261" width="0.5250%" height="15" fill="rgb(249,76,35)" fg:x="140697983" fg:w="1336073"/><text x="55.5400%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,336,073 samples, 0.53%)</title><rect x="55.2900%" y="2245" width="0.5250%" height="15" fill="rgb(207,11,44)" fg:x="140697983" fg:w="1336073"/><text x="55.5400%" y="2255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,336,073 samples, 0.53%)</title><rect x="55.2900%" y="2229" width="0.5250%" height="15" fill="rgb(228,190,49)" fg:x="140697983" fg:w="1336073"/><text x="55.5400%" y="2239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,336,073 samples, 0.53%)</title><rect x="55.2900%" y="2213" width="0.5250%" height="15" fill="rgb(214,173,12)" fg:x="140697983" fg:w="1336073"/><text x="55.5400%" y="2223.50"></text></g><g><title>alloc::alloc::alloc (1,336,073 samples, 0.53%)</title><rect x="55.2900%" y="2197" width="0.5250%" height="15" fill="rgb(218,26,35)" fg:x="140697983" fg:w="1336073"/><text x="55.5400%" y="2207.50"></text></g><g><title>malloc (1,336,073 samples, 0.53%)</title><rect x="55.2900%" y="2181" width="0.5250%" height="15" fill="rgb(220,200,19)" fg:x="140697983" fg:w="1336073"/><text x="55.5400%" y="2191.50"></text></g><g><title>[libc.so.6] (1,336,073 samples, 0.53%)</title><rect x="55.2900%" y="2165" width="0.5250%" height="15" fill="rgb(239,95,49)" fg:x="140697983" fg:w="1336073"/><text x="55.5400%" y="2175.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2645" width="34.9587%" height="15" fill="rgb(235,85,53)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2655.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2629" width="34.9587%" height="15" fill="rgb(233,133,31)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2639.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2613" width="34.9587%" height="15" fill="rgb(218,25,20)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2623.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2597" width="34.9587%" height="15" fill="rgb(252,210,38)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2607.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2581" width="34.9587%" height="15" fill="rgb(242,134,21)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2591.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2565" width="34.9587%" height="15" fill="rgb(213,28,48)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2575.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2549" width="34.9587%" height="15" fill="rgb(250,196,2)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2559.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2533" width="34.9587%" height="15" fill="rgb(227,5,17)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2543.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2517" width="34.9587%" height="15" fill="rgb(221,226,24)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2527.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2501" width="34.9587%" height="15" fill="rgb(211,5,48)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2511.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2485" width="34.9587%" height="15" fill="rgb(219,150,6)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2495.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2469" width="34.9587%" height="15" fill="rgb(251,46,16)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2479.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2453" width="34.9587%" height="15" fill="rgb(220,204,40)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2463.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2437" width="34.9587%" height="15" fill="rgb(211,85,2)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2447.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2421" width="34.9587%" height="15" fill="rgb(229,17,7)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2431.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (88,960,238 samples, 34.96%)</title><rect x="21.4021%" y="2405" width="34.9587%" height="15" fill="rgb(239,72,28)" fg:x="54462393" fg:w="88960238"/><text x="21.6521%" y="2415.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,388,575 samples, 0.55%)</title><rect x="55.8151%" y="2389" width="0.5457%" height="15" fill="rgb(230,47,54)" fg:x="142034056" fg:w="1388575"/><text x="56.0651%" y="2399.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,388,575 samples, 0.55%)</title><rect x="55.8151%" y="2373" width="0.5457%" height="15" fill="rgb(214,50,8)" fg:x="142034056" fg:w="1388575"/><text x="56.0651%" y="2383.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,388,575 samples, 0.55%)</title><rect x="55.8151%" y="2357" width="0.5457%" height="15" fill="rgb(216,198,43)" fg:x="142034056" fg:w="1388575"/><text x="56.0651%" y="2367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,388,575 samples, 0.55%)</title><rect x="55.8151%" y="2341" width="0.5457%" height="15" fill="rgb(234,20,35)" fg:x="142034056" fg:w="1388575"/><text x="56.0651%" y="2351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,388,575 samples, 0.55%)</title><rect x="55.8151%" y="2325" width="0.5457%" height="15" fill="rgb(254,45,19)" fg:x="142034056" fg:w="1388575"/><text x="56.0651%" y="2335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,388,575 samples, 0.55%)</title><rect x="55.8151%" y="2309" width="0.5457%" height="15" fill="rgb(219,14,44)" fg:x="142034056" fg:w="1388575"/><text x="56.0651%" y="2319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1,388,575 samples, 0.55%)</title><rect x="55.8151%" y="2293" width="0.5457%" height="15" fill="rgb(217,220,26)" fg:x="142034056" fg:w="1388575"/><text x="56.0651%" y="2303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,388,575 samples, 0.55%)</title><rect x="55.8151%" y="2277" width="0.5457%" height="15" fill="rgb(213,158,28)" fg:x="142034056" fg:w="1388575"/><text x="56.0651%" y="2287.50"></text></g><g><title>core::ptr::write (1,388,575 samples, 0.55%)</title><rect x="55.8151%" y="2261" width="0.5457%" height="15" fill="rgb(252,51,52)" fg:x="142034056" fg:w="1388575"/><text x="56.0651%" y="2271.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,044,667 samples, 0.41%)</title><rect x="56.3607%" y="2613" width="0.4105%" height="15" fill="rgb(246,89,16)" fg:x="143422631" fg:w="1044667"/><text x="56.6107%" y="2623.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (1,044,667 samples, 0.41%)</title><rect x="56.3607%" y="2597" width="0.4105%" height="15" fill="rgb(216,158,49)" fg:x="143422631" fg:w="1044667"/><text x="56.6107%" y="2607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (1,044,667 samples, 0.41%)</title><rect x="56.3607%" y="2581" width="0.4105%" height="15" fill="rgb(236,107,19)" fg:x="143422631" fg:w="1044667"/><text x="56.6107%" y="2591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2517" width="0.4502%" height="15" fill="rgb(228,185,30)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2527.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2501" width="0.4502%" height="15" fill="rgb(246,134,8)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2511.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2485" width="0.4502%" height="15" fill="rgb(214,143,50)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2495.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2469" width="0.4502%" height="15" fill="rgb(228,75,8)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2453" width="0.4502%" height="15" fill="rgb(207,175,4)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2437" width="0.4502%" height="15" fill="rgb(205,108,24)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2421" width="0.4502%" height="15" fill="rgb(244,120,49)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2405" width="0.4502%" height="15" fill="rgb(223,47,38)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2389" width="0.4502%" height="15" fill="rgb(229,179,11)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2399.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2373" width="0.4502%" height="15" fill="rgb(231,122,1)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2383.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2357" width="0.4502%" height="15" fill="rgb(245,119,9)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2341" width="0.4502%" height="15" fill="rgb(241,163,25)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2351.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2325" width="0.4502%" height="15" fill="rgb(217,214,3)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2309" width="0.4502%" height="15" fill="rgb(240,86,28)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2319.50"></text></g><g><title>hashbrown::map::make_hash (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2293" width="0.4502%" height="15" fill="rgb(215,47,9)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2277" width="0.4502%" height="15" fill="rgb(252,25,45)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2261" width="0.4502%" height="15" fill="rgb(251,164,9)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2271.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2245" width="0.4502%" height="15" fill="rgb(233,194,0)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2229" width="0.4502%" height="15" fill="rgb(249,111,24)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2239.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2213" width="0.4502%" height="15" fill="rgb(250,223,3)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2223.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2197" width="0.4502%" height="15" fill="rgb(236,178,37)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2181" width="0.4502%" height="15" fill="rgb(241,158,50)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2165" width="0.4502%" height="15" fill="rgb(213,121,41)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2175.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,145,692 samples, 0.45%)</title><rect x="56.7713%" y="2149" width="0.4502%" height="15" fill="rgb(240,92,3)" fg:x="144467298" fg:w="1145692"/><text x="57.0213%" y="2159.50"></text></g><g><title>benchmark::json_to_html_node (2,411,160 samples, 0.95%)</title><rect x="56.7713%" y="2549" width="0.9475%" height="15" fill="rgb(205,123,3)" fg:x="144467298" fg:w="2411160"/><text x="57.0213%" y="2559.50"></text></g><g><title>benchmark::json_to_html_node (2,411,160 samples, 0.95%)</title><rect x="56.7713%" y="2533" width="0.9475%" height="15" fill="rgb(205,97,47)" fg:x="144467298" fg:w="2411160"/><text x="57.0213%" y="2543.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,265,468 samples, 0.50%)</title><rect x="57.2215%" y="2517" width="0.4973%" height="15" fill="rgb(247,152,14)" fg:x="145612990" fg:w="1265468"/><text x="57.4715%" y="2527.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,265,468 samples, 0.50%)</title><rect x="57.2215%" y="2501" width="0.4973%" height="15" fill="rgb(248,195,53)" fg:x="145612990" fg:w="1265468"/><text x="57.4715%" y="2511.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,265,468 samples, 0.50%)</title><rect x="57.2215%" y="2485" width="0.4973%" height="15" fill="rgb(226,201,16)" fg:x="145612990" fg:w="1265468"/><text x="57.4715%" y="2495.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,265,468 samples, 0.50%)</title><rect x="57.2215%" y="2469" width="0.4973%" height="15" fill="rgb(205,98,0)" fg:x="145612990" fg:w="1265468"/><text x="57.4715%" y="2479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,265,468 samples, 0.50%)</title><rect x="57.2215%" y="2453" width="0.4973%" height="15" fill="rgb(214,191,48)" fg:x="145612990" fg:w="1265468"/><text x="57.4715%" y="2463.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,265,468 samples, 0.50%)</title><rect x="57.2215%" y="2437" width="0.4973%" height="15" fill="rgb(237,112,39)" fg:x="145612990" fg:w="1265468"/><text x="57.4715%" y="2447.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,265,468 samples, 0.50%)</title><rect x="57.2215%" y="2421" width="0.4973%" height="15" fill="rgb(247,203,27)" fg:x="145612990" fg:w="1265468"/><text x="57.4715%" y="2431.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,265,468 samples, 0.50%)</title><rect x="57.2215%" y="2405" width="0.4973%" height="15" fill="rgb(235,124,28)" fg:x="145612990" fg:w="1265468"/><text x="57.4715%" y="2415.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (1,265,468 samples, 0.50%)</title><rect x="57.2215%" y="2389" width="0.4973%" height="15" fill="rgb(208,207,46)" fg:x="145612990" fg:w="1265468"/><text x="57.4715%" y="2399.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1,117,843 samples, 0.44%)</title><rect x="57.7188%" y="2405" width="0.4393%" height="15" fill="rgb(234,176,4)" fg:x="146878458" fg:w="1117843"/><text x="57.9688%" y="2415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,117,843 samples, 0.44%)</title><rect x="57.7188%" y="2389" width="0.4393%" height="15" fill="rgb(230,133,28)" fg:x="146878458" fg:w="1117843"/><text x="57.9688%" y="2399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,117,843 samples, 0.44%)</title><rect x="57.7188%" y="2373" width="0.4393%" height="15" fill="rgb(211,137,40)" fg:x="146878458" fg:w="1117843"/><text x="57.9688%" y="2383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,117,843 samples, 0.44%)</title><rect x="57.7188%" y="2357" width="0.4393%" height="15" fill="rgb(254,35,13)" fg:x="146878458" fg:w="1117843"/><text x="57.9688%" y="2367.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,117,843 samples, 0.44%)</title><rect x="57.7188%" y="2341" width="0.4393%" height="15" fill="rgb(225,49,51)" fg:x="146878458" fg:w="1117843"/><text x="57.9688%" y="2351.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1,117,843 samples, 0.44%)</title><rect x="57.7188%" y="2325" width="0.4393%" height="15" fill="rgb(251,10,15)" fg:x="146878458" fg:w="1117843"/><text x="57.9688%" y="2335.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (1,117,843 samples, 0.44%)</title><rect x="57.7188%" y="2309" width="0.4393%" height="15" fill="rgb(228,207,15)" fg:x="146878458" fg:w="1117843"/><text x="57.9688%" y="2319.50"></text></g><g><title>core::str::pattern::Searcher::next_match (1,117,843 samples, 0.44%)</title><rect x="57.7188%" y="2293" width="0.4393%" height="15" fill="rgb(241,99,19)" fg:x="146878458" fg:w="1117843"/><text x="57.9688%" y="2303.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1,117,843 samples, 0.44%)</title><rect x="57.7188%" y="2277" width="0.4393%" height="15" fill="rgb(207,104,49)" fg:x="146878458" fg:w="1117843"/><text x="57.9688%" y="2287.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1,117,843 samples, 0.44%)</title><rect x="57.7188%" y="2261" width="0.4393%" height="15" fill="rgb(234,99,18)" fg:x="146878458" fg:w="1117843"/><text x="57.9688%" y="2271.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1,117,843 samples, 0.44%)</title><rect x="57.7188%" y="2245" width="0.4393%" height="15" fill="rgb(213,191,49)" fg:x="146878458" fg:w="1117843"/><text x="57.9688%" y="2255.50"></text></g><g><title>core::str::validations::next_code_point (1,117,843 samples, 0.44%)</title><rect x="57.7188%" y="2229" width="0.4393%" height="15" fill="rgb(210,226,19)" fg:x="146878458" fg:w="1117843"/><text x="57.9688%" y="2239.50"></text></g><g><title>benchmark::json_to_html_node (4,767,462 samples, 1.87%)</title><rect x="56.7713%" y="2565" width="1.8735%" height="15" fill="rgb(229,97,18)" fg:x="144467298" fg:w="4767462"/><text x="57.0213%" y="2575.50">b..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,356,302 samples, 0.93%)</title><rect x="57.7188%" y="2549" width="0.9260%" height="15" fill="rgb(211,167,15)" fg:x="146878458" fg:w="2356302"/><text x="57.9688%" y="2559.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,356,302 samples, 0.93%)</title><rect x="57.7188%" y="2533" width="0.9260%" height="15" fill="rgb(210,169,34)" fg:x="146878458" fg:w="2356302"/><text x="57.9688%" y="2543.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,356,302 samples, 0.93%)</title><rect x="57.7188%" y="2517" width="0.9260%" height="15" fill="rgb(241,121,31)" fg:x="146878458" fg:w="2356302"/><text x="57.9688%" y="2527.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,356,302 samples, 0.93%)</title><rect x="57.7188%" y="2501" width="0.9260%" height="15" fill="rgb(232,40,11)" fg:x="146878458" fg:w="2356302"/><text x="57.9688%" y="2511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2,356,302 samples, 0.93%)</title><rect x="57.7188%" y="2485" width="0.9260%" height="15" fill="rgb(205,86,26)" fg:x="146878458" fg:w="2356302"/><text x="57.9688%" y="2495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,356,302 samples, 0.93%)</title><rect x="57.7188%" y="2469" width="0.9260%" height="15" fill="rgb(231,126,28)" fg:x="146878458" fg:w="2356302"/><text x="57.9688%" y="2479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,356,302 samples, 0.93%)</title><rect x="57.7188%" y="2453" width="0.9260%" height="15" fill="rgb(219,221,18)" fg:x="146878458" fg:w="2356302"/><text x="57.9688%" y="2463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,356,302 samples, 0.93%)</title><rect x="57.7188%" y="2437" width="0.9260%" height="15" fill="rgb(211,40,0)" fg:x="146878458" fg:w="2356302"/><text x="57.9688%" y="2447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,356,302 samples, 0.93%)</title><rect x="57.7188%" y="2421" width="0.9260%" height="15" fill="rgb(239,85,43)" fg:x="146878458" fg:w="2356302"/><text x="57.9688%" y="2431.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,238,459 samples, 0.49%)</title><rect x="58.1580%" y="2405" width="0.4867%" height="15" fill="rgb(231,55,21)" fg:x="147996301" fg:w="1238459"/><text x="58.4080%" y="2415.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,238,459 samples, 0.49%)</title><rect x="58.1580%" y="2389" width="0.4867%" height="15" fill="rgb(225,184,43)" fg:x="147996301" fg:w="1238459"/><text x="58.4080%" y="2399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,238,459 samples, 0.49%)</title><rect x="58.1580%" y="2373" width="0.4867%" height="15" fill="rgb(251,158,41)" fg:x="147996301" fg:w="1238459"/><text x="58.4080%" y="2383.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1,238,459 samples, 0.49%)</title><rect x="58.1580%" y="2357" width="0.4867%" height="15" fill="rgb(234,159,37)" fg:x="147996301" fg:w="1238459"/><text x="58.4080%" y="2367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,238,459 samples, 0.49%)</title><rect x="58.1580%" y="2341" width="0.4867%" height="15" fill="rgb(216,204,22)" fg:x="147996301" fg:w="1238459"/><text x="58.4080%" y="2351.50"></text></g><g><title>hashbrown::map::make_hash (1,238,459 samples, 0.49%)</title><rect x="58.1580%" y="2325" width="0.4867%" height="15" fill="rgb(214,17,3)" fg:x="147996301" fg:w="1238459"/><text x="58.4080%" y="2335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,238,459 samples, 0.49%)</title><rect x="58.1580%" y="2309" width="0.4867%" height="15" fill="rgb(212,111,17)" fg:x="147996301" fg:w="1238459"/><text x="58.4080%" y="2319.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,238,459 samples, 0.49%)</title><rect x="58.1580%" y="2293" width="0.4867%" height="15" fill="rgb(221,157,24)" fg:x="147996301" fg:w="1238459"/><text x="58.4080%" y="2303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,238,459 samples, 0.49%)</title><rect x="58.1580%" y="2277" width="0.4867%" height="15" fill="rgb(252,16,13)" fg:x="147996301" fg:w="1238459"/><text x="58.4080%" y="2287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,238,459 samples, 0.49%)</title><rect x="58.1580%" y="2261" width="0.4867%" height="15" fill="rgb(221,62,2)" fg:x="147996301" fg:w="1238459"/><text x="58.4080%" y="2271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,238,459 samples, 0.49%)</title><rect x="58.1580%" y="2245" width="0.4867%" height="15" fill="rgb(247,87,22)" fg:x="147996301" fg:w="1238459"/><text x="58.4080%" y="2255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,238,459 samples, 0.49%)</title><rect x="58.1580%" y="2229" width="0.4867%" height="15" fill="rgb(215,73,9)" fg:x="147996301" fg:w="1238459"/><text x="58.4080%" y="2239.50"></text></g><g><title>benchmark::json_to_html_node (6,818,264 samples, 2.68%)</title><rect x="56.3607%" y="2629" width="2.6794%" height="15" fill="rgb(207,175,33)" fg:x="143422631" fg:w="6818264"/><text x="56.6107%" y="2639.50">be..</text></g><g><title>benchmark::json_to_html_node (5,773,597 samples, 2.27%)</title><rect x="56.7713%" y="2613" width="2.2688%" height="15" fill="rgb(243,129,54)" fg:x="144467298" fg:w="5773597"/><text x="57.0213%" y="2623.50">b..</text></g><g><title>benchmark::json_to_html_node (5,773,597 samples, 2.27%)</title><rect x="56.7713%" y="2597" width="2.2688%" height="15" fill="rgb(227,119,45)" fg:x="144467298" fg:w="5773597"/><text x="57.0213%" y="2607.50">b..</text></g><g><title>benchmark::json_to_html_node (5,773,597 samples, 2.27%)</title><rect x="56.7713%" y="2581" width="2.2688%" height="15" fill="rgb(205,109,36)" fg:x="144467298" fg:w="5773597"/><text x="57.0213%" y="2591.50">b..</text></g><g><title>serde_json::value::Value::as_object (1,006,135 samples, 0.40%)</title><rect x="58.6447%" y="2565" width="0.3954%" height="15" fill="rgb(205,6,39)" fg:x="149234760" fg:w="1006135"/><text x="58.8947%" y="2575.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,221,438 samples, 0.48%)</title><rect x="59.0401%" y="2629" width="0.4800%" height="15" fill="rgb(221,32,16)" fg:x="150240895" fg:w="1221438"/><text x="59.2901%" y="2639.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,221,438 samples, 0.48%)</title><rect x="59.0401%" y="2613" width="0.4800%" height="15" fill="rgb(228,144,50)" fg:x="150240895" fg:w="1221438"/><text x="59.2901%" y="2623.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,221,438 samples, 0.48%)</title><rect x="59.0401%" y="2597" width="0.4800%" height="15" fill="rgb(229,201,53)" fg:x="150240895" fg:w="1221438"/><text x="59.2901%" y="2607.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::remove_child (1,257,899 samples, 0.49%)</title><rect x="59.5201%" y="2629" width="0.4943%" height="15" fill="rgb(249,153,27)" fg:x="151462333" fg:w="1257899"/><text x="59.7701%" y="2639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (1,257,899 samples, 0.49%)</title><rect x="59.5201%" y="2613" width="0.4943%" height="15" fill="rgb(227,106,25)" fg:x="151462333" fg:w="1257899"/><text x="59.7701%" y="2623.50"></text></g><g><title>core::intrinsics::copy (1,257,899 samples, 0.49%)</title><rect x="59.5201%" y="2597" width="0.4943%" height="15" fill="rgb(230,65,29)" fg:x="151462333" fg:w="1257899"/><text x="59.7701%" y="2607.50"></text></g><g><title>[libc.so.6] (1,257,899 samples, 0.49%)</title><rect x="59.5201%" y="2581" width="0.4943%" height="15" fill="rgb(221,57,46)" fg:x="151462333" fg:w="1257899"/><text x="59.7701%" y="2591.50"></text></g><g><title>benchmark::apply_frame_modifications (10,519,428 samples, 4.13%)</title><rect x="56.3607%" y="2645" width="4.1338%" height="15" fill="rgb(229,161,17)" fg:x="143422631" fg:w="10519428"/><text x="56.6107%" y="2655.50">bench..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (1,221,827 samples, 0.48%)</title><rect x="60.0144%" y="2629" width="0.4801%" height="15" fill="rgb(222,213,11)" fg:x="152720232" fg:w="1221827"/><text x="60.2644%" y="2639.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (1,221,827 samples, 0.48%)</title><rect x="60.0144%" y="2613" width="0.4801%" height="15" fill="rgb(235,35,13)" fg:x="152720232" fg:w="1221827"/><text x="60.2644%" y="2623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1,221,827 samples, 0.48%)</title><rect x="60.0144%" y="2597" width="0.4801%" height="15" fill="rgb(233,158,34)" fg:x="152720232" fg:w="1221827"/><text x="60.2644%" y="2607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1,221,827 samples, 0.48%)</title><rect x="60.0144%" y="2581" width="0.4801%" height="15" fill="rgb(215,151,48)" fg:x="152720232" fg:w="1221827"/><text x="60.2644%" y="2591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (1,221,827 samples, 0.48%)</title><rect x="60.0144%" y="2565" width="0.4801%" height="15" fill="rgb(229,84,14)" fg:x="152720232" fg:w="1221827"/><text x="60.2644%" y="2575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::len (1,221,827 samples, 0.48%)</title><rect x="60.0144%" y="2549" width="0.4801%" height="15" fill="rgb(229,68,14)" fg:x="152720232" fg:w="1221827"/><text x="60.2644%" y="2559.50"></text></g><g><title>benchmark::count_nodes (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2645" width="0.4921%" height="15" fill="rgb(243,106,26)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2629" width="0.4921%" height="15" fill="rgb(206,45,38)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2639.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2613" width="0.4921%" height="15" fill="rgb(226,6,15)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2597" width="0.4921%" height="15" fill="rgb(232,22,54)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2581" width="0.4921%" height="15" fill="rgb(229,222,32)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2565" width="0.4921%" height="15" fill="rgb(228,62,29)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2575.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2549" width="0.4921%" height="15" fill="rgb(251,103,34)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2559.50"></text></g><g><title>benchmark::count_nodes (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2533" width="0.4921%" height="15" fill="rgb(233,12,30)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2517" width="0.4921%" height="15" fill="rgb(238,52,0)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2527.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2501" width="0.4921%" height="15" fill="rgb(223,98,5)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2485" width="0.4921%" height="15" fill="rgb(228,75,37)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2469" width="0.4921%" height="15" fill="rgb(205,115,49)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2479.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2453" width="0.4921%" height="15" fill="rgb(250,154,43)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2437" width="0.4921%" height="15" fill="rgb(226,43,29)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2447.50"></text></g><g><title>benchmark::count_nodes (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2421" width="0.4921%" height="15" fill="rgb(249,228,39)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2405" width="0.4921%" height="15" fill="rgb(216,79,43)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2415.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2389" width="0.4921%" height="15" fill="rgb(228,95,12)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2373" width="0.4921%" height="15" fill="rgb(249,221,15)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2357" width="0.4921%" height="15" fill="rgb(233,34,13)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2367.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2341" width="0.4921%" height="15" fill="rgb(214,103,39)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2351.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2325" width="0.4921%" height="15" fill="rgb(251,126,39)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2335.50"></text></g><g><title>benchmark::count_nodes (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2309" width="0.4921%" height="15" fill="rgb(214,216,36)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2293" width="0.4921%" height="15" fill="rgb(220,221,8)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2303.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2277" width="0.4921%" height="15" fill="rgb(240,216,3)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2261" width="0.4921%" height="15" fill="rgb(232,218,17)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2245" width="0.4921%" height="15" fill="rgb(229,163,45)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2255.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2229" width="0.4921%" height="15" fill="rgb(231,110,42)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2239.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2213" width="0.4921%" height="15" fill="rgb(208,170,48)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2223.50"></text></g><g><title>benchmark::count_nodes (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2197" width="0.4921%" height="15" fill="rgb(239,116,25)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2181" width="0.4921%" height="15" fill="rgb(219,200,50)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2191.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2165" width="0.4921%" height="15" fill="rgb(245,200,0)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2149" width="0.4921%" height="15" fill="rgb(245,119,33)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2159.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2133" width="0.4921%" height="15" fill="rgb(231,125,12)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2143.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2117" width="0.4921%" height="15" fill="rgb(216,96,41)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2127.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2101" width="0.4921%" height="15" fill="rgb(248,43,45)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2111.50"></text></g><g><title>benchmark::count_nodes (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2085" width="0.4921%" height="15" fill="rgb(217,222,7)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2095.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2069" width="0.4921%" height="15" fill="rgb(233,28,6)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2079.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2053" width="0.4921%" height="15" fill="rgb(231,218,15)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2063.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2037" width="0.4921%" height="15" fill="rgb(226,171,48)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2047.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2021" width="0.4921%" height="15" fill="rgb(235,201,9)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2031.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="2005" width="0.4921%" height="15" fill="rgb(217,80,15)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="2015.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1989" width="0.4921%" height="15" fill="rgb(219,152,8)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1999.50"></text></g><g><title>benchmark::count_nodes (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1973" width="0.4921%" height="15" fill="rgb(243,107,38)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1957" width="0.4921%" height="15" fill="rgb(231,17,5)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1967.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1941" width="0.4921%" height="15" fill="rgb(209,25,54)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1925" width="0.4921%" height="15" fill="rgb(219,0,2)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1935.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1909" width="0.4921%" height="15" fill="rgb(246,9,5)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1919.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1893" width="0.4921%" height="15" fill="rgb(226,159,4)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1903.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1877" width="0.4921%" height="15" fill="rgb(219,175,34)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1887.50"></text></g><g><title>benchmark::count_nodes (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1861" width="0.4921%" height="15" fill="rgb(236,10,46)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1845" width="0.4921%" height="15" fill="rgb(240,211,16)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1855.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1829" width="0.4921%" height="15" fill="rgb(205,3,43)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1813" width="0.4921%" height="15" fill="rgb(245,7,22)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1823.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1797" width="0.4921%" height="15" fill="rgb(239,132,32)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1807.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1781" width="0.4921%" height="15" fill="rgb(228,202,34)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1791.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1765" width="0.4921%" height="15" fill="rgb(254,200,22)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1775.50"></text></g><g><title>benchmark::count_nodes (1,252,314 samples, 0.49%)</title><rect x="60.4945%" y="1749" width="0.4921%" height="15" fill="rgb(219,10,39)" fg:x="153942059" fg:w="1252314"/><text x="60.7445%" y="1759.50"></text></g><g><title>__rdl_dealloc (1,274,161 samples, 0.50%)</title><rect x="60.9867%" y="2325" width="0.5007%" height="15" fill="rgb(226,210,39)" fg:x="155194373" fg:w="1274161"/><text x="61.2367%" y="2335.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,274,161 samples, 0.50%)</title><rect x="60.9867%" y="2309" width="0.5007%" height="15" fill="rgb(208,219,16)" fg:x="155194373" fg:w="1274161"/><text x="61.2367%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,639,992 samples, 1.43%)</title><rect x="60.9867%" y="2437" width="1.4304%" height="15" fill="rgb(216,158,51)" fg:x="155194373" fg:w="3639992"/><text x="61.2367%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,639,992 samples, 1.43%)</title><rect x="60.9867%" y="2421" width="1.4304%" height="15" fill="rgb(233,14,44)" fg:x="155194373" fg:w="3639992"/><text x="61.2367%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,639,992 samples, 1.43%)</title><rect x="60.9867%" y="2405" width="1.4304%" height="15" fill="rgb(237,97,39)" fg:x="155194373" fg:w="3639992"/><text x="61.2367%" y="2415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,639,992 samples, 1.43%)</title><rect x="60.9867%" y="2389" width="1.4304%" height="15" fill="rgb(218,198,43)" fg:x="155194373" fg:w="3639992"/><text x="61.2367%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,639,992 samples, 1.43%)</title><rect x="60.9867%" y="2373" width="1.4304%" height="15" fill="rgb(231,104,20)" fg:x="155194373" fg:w="3639992"/><text x="61.2367%" y="2383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,639,992 samples, 1.43%)</title><rect x="60.9867%" y="2357" width="1.4304%" height="15" fill="rgb(254,36,13)" fg:x="155194373" fg:w="3639992"/><text x="61.2367%" y="2367.50"></text></g><g><title>alloc::alloc::dealloc (3,639,992 samples, 1.43%)</title><rect x="60.9867%" y="2341" width="1.4304%" height="15" fill="rgb(248,14,50)" fg:x="155194373" fg:w="3639992"/><text x="61.2367%" y="2351.50"></text></g><g><title>cfree (2,365,831 samples, 0.93%)</title><rect x="61.4874%" y="2325" width="0.9297%" height="15" fill="rgb(217,107,29)" fg:x="156468534" fg:w="2365831"/><text x="61.7374%" y="2335.50"></text></g><g><title>[libc.so.6] (1,264,626 samples, 0.50%)</title><rect x="61.9201%" y="2309" width="0.4970%" height="15" fill="rgb(251,169,33)" fg:x="157569739" fg:w="1264626"/><text x="62.1701%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,180,025 samples, 0.46%)</title><rect x="62.4171%" y="1861" width="0.4637%" height="15" fill="rgb(217,108,32)" fg:x="158834365" fg:w="1180025"/><text x="62.6671%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,180,025 samples, 0.46%)</title><rect x="62.4171%" y="1845" width="0.4637%" height="15" fill="rgb(219,66,42)" fg:x="158834365" fg:w="1180025"/><text x="62.6671%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,180,025 samples, 0.46%)</title><rect x="62.4171%" y="1829" width="0.4637%" height="15" fill="rgb(206,180,7)" fg:x="158834365" fg:w="1180025"/><text x="62.6671%" y="1839.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,180,025 samples, 0.46%)</title><rect x="62.4171%" y="1813" width="0.4637%" height="15" fill="rgb(208,226,31)" fg:x="158834365" fg:w="1180025"/><text x="62.6671%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1541" width="0.4306%" height="15" fill="rgb(218,26,49)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1525" width="0.4306%" height="15" fill="rgb(233,197,48)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1509" width="0.4306%" height="15" fill="rgb(252,181,51)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1493" width="0.4306%" height="15" fill="rgb(253,90,19)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1477" width="0.4306%" height="15" fill="rgb(215,171,30)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1461" width="0.4306%" height="15" fill="rgb(214,222,9)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1445" width="0.4306%" height="15" fill="rgb(223,3,22)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1429" width="0.4306%" height="15" fill="rgb(225,196,46)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1413" width="0.4306%" height="15" fill="rgb(209,110,37)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1397" width="0.4306%" height="15" fill="rgb(249,89,12)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1407.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1381" width="0.4306%" height="15" fill="rgb(226,27,33)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1365" width="0.4306%" height="15" fill="rgb(213,82,22)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1349" width="0.4306%" height="15" fill="rgb(248,140,0)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1359.50"></text></g><g><title>alloc::alloc::dealloc (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1333" width="0.4306%" height="15" fill="rgb(228,106,3)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1343.50"></text></g><g><title>cfree (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1317" width="0.4306%" height="15" fill="rgb(209,23,37)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1327.50"></text></g><g><title>[libc.so.6] (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1301" width="0.4306%" height="15" fill="rgb(241,93,50)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1311.50"></text></g><g><title>[libc.so.6] (1,095,863 samples, 0.43%)</title><rect x="62.8808%" y="1285" width="0.4306%" height="15" fill="rgb(253,46,43)" fg:x="160014390" fg:w="1095863"/><text x="63.1308%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,273,135 samples, 0.89%)</title><rect x="62.8808%" y="1589" width="0.8933%" height="15" fill="rgb(226,206,43)" fg:x="160014390" fg:w="2273135"/><text x="63.1308%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,273,135 samples, 0.89%)</title><rect x="62.8808%" y="1573" width="0.8933%" height="15" fill="rgb(217,54,7)" fg:x="160014390" fg:w="2273135"/><text x="63.1308%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,273,135 samples, 0.89%)</title><rect x="62.8808%" y="1557" width="0.8933%" height="15" fill="rgb(223,5,52)" fg:x="160014390" fg:w="2273135"/><text x="63.1308%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,177,272 samples, 0.46%)</title><rect x="63.3114%" y="1541" width="0.4626%" height="15" fill="rgb(206,52,46)" fg:x="161110253" fg:w="1177272"/><text x="63.5614%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,177,272 samples, 0.46%)</title><rect x="63.3114%" y="1525" width="0.4626%" height="15" fill="rgb(253,136,11)" fg:x="161110253" fg:w="1177272"/><text x="63.5614%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,177,272 samples, 0.46%)</title><rect x="63.3114%" y="1509" width="0.4626%" height="15" fill="rgb(208,106,33)" fg:x="161110253" fg:w="1177272"/><text x="63.5614%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,177,272 samples, 0.46%)</title><rect x="63.3114%" y="1493" width="0.4626%" height="15" fill="rgb(206,54,4)" fg:x="161110253" fg:w="1177272"/><text x="63.5614%" y="1503.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,177,272 samples, 0.46%)</title><rect x="63.3114%" y="1477" width="0.4626%" height="15" fill="rgb(213,3,15)" fg:x="161110253" fg:w="1177272"/><text x="63.5614%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,177,272 samples, 0.46%)</title><rect x="63.3114%" y="1461" width="0.4626%" height="15" fill="rgb(252,211,39)" fg:x="161110253" fg:w="1177272"/><text x="63.5614%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,177,272 samples, 0.46%)</title><rect x="63.3114%" y="1445" width="0.4626%" height="15" fill="rgb(223,6,36)" fg:x="161110253" fg:w="1177272"/><text x="63.5614%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,177,272 samples, 0.46%)</title><rect x="63.3114%" y="1429" width="0.4626%" height="15" fill="rgb(252,169,45)" fg:x="161110253" fg:w="1177272"/><text x="63.5614%" y="1439.50"></text></g><g><title>alloc::alloc::dealloc (1,177,272 samples, 0.46%)</title><rect x="63.3114%" y="1413" width="0.4626%" height="15" fill="rgb(212,48,26)" fg:x="161110253" fg:w="1177272"/><text x="63.5614%" y="1423.50"></text></g><g><title>cfree (1,177,272 samples, 0.46%)</title><rect x="63.3114%" y="1397" width="0.4626%" height="15" fill="rgb(251,102,48)" fg:x="161110253" fg:w="1177272"/><text x="63.5614%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (4,979,563 samples, 1.96%)</title><rect x="62.8808%" y="1669" width="1.9568%" height="15" fill="rgb(243,208,16)" fg:x="160014390" fg:w="4979563"/><text x="63.1308%" y="1679.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,979,563 samples, 1.96%)</title><rect x="62.8808%" y="1653" width="1.9568%" height="15" fill="rgb(219,96,24)" fg:x="160014390" fg:w="4979563"/><text x="63.1308%" y="1663.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (4,979,563 samples, 1.96%)</title><rect x="62.8808%" y="1637" width="1.9568%" height="15" fill="rgb(219,33,29)" fg:x="160014390" fg:w="4979563"/><text x="63.1308%" y="1647.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (4,979,563 samples, 1.96%)</title><rect x="62.8808%" y="1621" width="1.9568%" height="15" fill="rgb(223,176,5)" fg:x="160014390" fg:w="4979563"/><text x="63.1308%" y="1631.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (4,979,563 samples, 1.96%)</title><rect x="62.8808%" y="1605" width="1.9568%" height="15" fill="rgb(228,140,14)" fg:x="160014390" fg:w="4979563"/><text x="63.1308%" y="1615.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,706,428 samples, 1.06%)</title><rect x="63.7741%" y="1589" width="1.0635%" height="15" fill="rgb(217,179,31)" fg:x="162287525" fg:w="2706428"/><text x="64.0241%" y="1599.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,706,428 samples, 1.06%)</title><rect x="63.7741%" y="1573" width="1.0635%" height="15" fill="rgb(230,9,30)" fg:x="162287525" fg:w="2706428"/><text x="64.0241%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,706,428 samples, 1.06%)</title><rect x="63.7741%" y="1557" width="1.0635%" height="15" fill="rgb(230,136,20)" fg:x="162287525" fg:w="2706428"/><text x="64.0241%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,706,428 samples, 1.06%)</title><rect x="63.7741%" y="1541" width="1.0635%" height="15" fill="rgb(215,210,22)" fg:x="162287525" fg:w="2706428"/><text x="64.0241%" y="1551.50"></text></g><g><title>alloc::alloc::dealloc (2,706,428 samples, 1.06%)</title><rect x="63.7741%" y="1525" width="1.0635%" height="15" fill="rgb(218,43,5)" fg:x="162287525" fg:w="2706428"/><text x="64.0241%" y="1535.50"></text></g><g><title>cfree (2,706,428 samples, 1.06%)</title><rect x="63.7741%" y="1509" width="1.0635%" height="15" fill="rgb(216,11,5)" fg:x="162287525" fg:w="2706428"/><text x="64.0241%" y="1519.50"></text></g><g><title>[libc.so.6] (2,706,428 samples, 1.06%)</title><rect x="63.7741%" y="1493" width="1.0635%" height="15" fill="rgb(209,82,29)" fg:x="162287525" fg:w="2706428"/><text x="64.0241%" y="1503.50"></text></g><g><title>[libc.so.6] (2,706,428 samples, 1.06%)</title><rect x="63.7741%" y="1477" width="1.0635%" height="15" fill="rgb(244,115,12)" fg:x="162287525" fg:w="2706428"/><text x="64.0241%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,176,378 samples, 2.43%)</title><rect x="62.8808%" y="1733" width="2.4271%" height="15" fill="rgb(222,82,18)" fg:x="160014390" fg:w="6176378"/><text x="63.1308%" y="1743.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,176,378 samples, 2.43%)</title><rect x="62.8808%" y="1717" width="2.4271%" height="15" fill="rgb(249,227,8)" fg:x="160014390" fg:w="6176378"/><text x="63.1308%" y="1727.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,176,378 samples, 2.43%)</title><rect x="62.8808%" y="1701" width="2.4271%" height="15" fill="rgb(253,141,45)" fg:x="160014390" fg:w="6176378"/><text x="63.1308%" y="1711.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,176,378 samples, 2.43%)</title><rect x="62.8808%" y="1685" width="2.4271%" height="15" fill="rgb(234,184,4)" fg:x="160014390" fg:w="6176378"/><text x="63.1308%" y="1695.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,196,815 samples, 0.47%)</title><rect x="64.8376%" y="1669" width="0.4703%" height="15" fill="rgb(218,194,23)" fg:x="164993953" fg:w="1196815"/><text x="65.0876%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,196,815 samples, 0.47%)</title><rect x="64.8376%" y="1653" width="0.4703%" height="15" fill="rgb(235,66,41)" fg:x="164993953" fg:w="1196815"/><text x="65.0876%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,196,815 samples, 0.47%)</title><rect x="64.8376%" y="1637" width="0.4703%" height="15" fill="rgb(245,217,1)" fg:x="164993953" fg:w="1196815"/><text x="65.0876%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,196,815 samples, 0.47%)</title><rect x="64.8376%" y="1621" width="0.4703%" height="15" fill="rgb(229,91,1)" fg:x="164993953" fg:w="1196815"/><text x="65.0876%" y="1631.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,196,815 samples, 0.47%)</title><rect x="64.8376%" y="1605" width="0.4703%" height="15" fill="rgb(207,101,30)" fg:x="164993953" fg:w="1196815"/><text x="65.0876%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,196,815 samples, 0.47%)</title><rect x="64.8376%" y="1589" width="0.4703%" height="15" fill="rgb(223,82,49)" fg:x="164993953" fg:w="1196815"/><text x="65.0876%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,196,815 samples, 0.47%)</title><rect x="64.8376%" y="1573" width="0.4703%" height="15" fill="rgb(218,167,17)" fg:x="164993953" fg:w="1196815"/><text x="65.0876%" y="1583.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,357,259 samples, 0.53%)</title><rect x="65.8400%" y="1621" width="0.5334%" height="15" fill="rgb(208,103,14)" fg:x="167544871" fg:w="1357259"/><text x="66.0900%" y="1631.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,357,259 samples, 0.53%)</title><rect x="65.8400%" y="1605" width="0.5334%" height="15" fill="rgb(238,20,8)" fg:x="167544871" fg:w="1357259"/><text x="66.0900%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,357,259 samples, 0.53%)</title><rect x="65.8400%" y="1589" width="0.5334%" height="15" fill="rgb(218,80,54)" fg:x="167544871" fg:w="1357259"/><text x="66.0900%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,357,259 samples, 0.53%)</title><rect x="65.8400%" y="1573" width="0.5334%" height="15" fill="rgb(240,144,17)" fg:x="167544871" fg:w="1357259"/><text x="66.0900%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,357,259 samples, 0.53%)</title><rect x="65.8400%" y="1557" width="0.5334%" height="15" fill="rgb(245,27,50)" fg:x="167544871" fg:w="1357259"/><text x="66.0900%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,357,259 samples, 0.53%)</title><rect x="65.8400%" y="1541" width="0.5334%" height="15" fill="rgb(251,51,7)" fg:x="167544871" fg:w="1357259"/><text x="66.0900%" y="1551.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,357,259 samples, 0.53%)</title><rect x="65.8400%" y="1525" width="0.5334%" height="15" fill="rgb(245,217,29)" fg:x="167544871" fg:w="1357259"/><text x="66.0900%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,234,908 samples, 4.02%)</title><rect x="62.8808%" y="1781" width="4.0220%" height="15" fill="rgb(221,176,29)" fg:x="160014390" fg:w="10234908"/><text x="63.1308%" y="1791.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (10,234,908 samples, 4.02%)</title><rect x="62.8808%" y="1765" width="4.0220%" height="15" fill="rgb(212,180,24)" fg:x="160014390" fg:w="10234908"/><text x="63.1308%" y="1775.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (10,234,908 samples, 4.02%)</title><rect x="62.8808%" y="1749" width="4.0220%" height="15" fill="rgb(254,24,2)" fg:x="160014390" fg:w="10234908"/><text x="63.1308%" y="1759.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (4,058,530 samples, 1.59%)</title><rect x="65.3079%" y="1733" width="1.5949%" height="15" fill="rgb(230,100,2)" fg:x="166190768" fg:w="4058530"/><text x="65.5579%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (4,058,530 samples, 1.59%)</title><rect x="65.3079%" y="1717" width="1.5949%" height="15" fill="rgb(219,142,25)" fg:x="166190768" fg:w="4058530"/><text x="65.5579%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (4,058,530 samples, 1.59%)</title><rect x="65.3079%" y="1701" width="1.5949%" height="15" fill="rgb(240,73,43)" fg:x="166190768" fg:w="4058530"/><text x="65.5579%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (4,058,530 samples, 1.59%)</title><rect x="65.3079%" y="1685" width="1.5949%" height="15" fill="rgb(214,114,15)" fg:x="166190768" fg:w="4058530"/><text x="65.5579%" y="1695.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,058,530 samples, 1.59%)</title><rect x="65.3079%" y="1669" width="1.5949%" height="15" fill="rgb(207,130,4)" fg:x="166190768" fg:w="4058530"/><text x="65.5579%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (4,058,530 samples, 1.59%)</title><rect x="65.3079%" y="1653" width="1.5949%" height="15" fill="rgb(221,25,40)" fg:x="166190768" fg:w="4058530"/><text x="65.5579%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (4,058,530 samples, 1.59%)</title><rect x="65.3079%" y="1637" width="1.5949%" height="15" fill="rgb(241,184,7)" fg:x="166190768" fg:w="4058530"/><text x="65.5579%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,347,168 samples, 0.53%)</title><rect x="66.3734%" y="1621" width="0.5294%" height="15" fill="rgb(235,159,4)" fg:x="168902130" fg:w="1347168"/><text x="66.6234%" y="1631.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,347,168 samples, 0.53%)</title><rect x="66.3734%" y="1605" width="0.5294%" height="15" fill="rgb(214,87,48)" fg:x="168902130" fg:w="1347168"/><text x="66.6234%" y="1615.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (1,347,168 samples, 0.53%)</title><rect x="66.3734%" y="1589" width="0.5294%" height="15" fill="rgb(246,198,24)" fg:x="168902130" fg:w="1347168"/><text x="66.6234%" y="1599.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1,347,168 samples, 0.53%)</title><rect x="66.3734%" y="1573" width="0.5294%" height="15" fill="rgb(209,66,40)" fg:x="168902130" fg:w="1347168"/><text x="66.6234%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,621,190 samples, 4.57%)</title><rect x="62.8808%" y="1845" width="4.5668%" height="15" fill="rgb(233,147,39)" fg:x="160014390" fg:w="11621190"/><text x="63.1308%" y="1855.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (11,621,190 samples, 4.57%)</title><rect x="62.8808%" y="1829" width="4.5668%" height="15" fill="rgb(231,145,52)" fg:x="160014390" fg:w="11621190"/><text x="63.1308%" y="1839.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (11,621,190 samples, 4.57%)</title><rect x="62.8808%" y="1813" width="4.5668%" height="15" fill="rgb(206,20,26)" fg:x="160014390" fg:w="11621190"/><text x="63.1308%" y="1823.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (11,621,190 samples, 4.57%)</title><rect x="62.8808%" y="1797" width="4.5668%" height="15" fill="rgb(238,220,4)" fg:x="160014390" fg:w="11621190"/><text x="63.1308%" y="1807.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,386,282 samples, 0.54%)</title><rect x="66.9028%" y="1781" width="0.5448%" height="15" fill="rgb(252,195,42)" fg:x="170249298" fg:w="1386282"/><text x="67.1528%" y="1791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,386,282 samples, 0.54%)</title><rect x="66.9028%" y="1765" width="0.5448%" height="15" fill="rgb(209,10,6)" fg:x="170249298" fg:w="1386282"/><text x="67.1528%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,386,282 samples, 0.54%)</title><rect x="66.9028%" y="1749" width="0.5448%" height="15" fill="rgb(229,3,52)" fg:x="170249298" fg:w="1386282"/><text x="67.1528%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,386,282 samples, 0.54%)</title><rect x="66.9028%" y="1733" width="0.5448%" height="15" fill="rgb(253,49,37)" fg:x="170249298" fg:w="1386282"/><text x="67.1528%" y="1743.50"></text></g><g><title>alloc::alloc::dealloc (1,386,282 samples, 0.54%)</title><rect x="66.9028%" y="1717" width="0.5448%" height="15" fill="rgb(240,103,49)" fg:x="170249298" fg:w="1386282"/><text x="67.1528%" y="1727.50"></text></g><g><title>cfree (1,386,282 samples, 0.54%)</title><rect x="66.9028%" y="1701" width="0.5448%" height="15" fill="rgb(250,182,30)" fg:x="170249298" fg:w="1386282"/><text x="67.1528%" y="1711.50"></text></g><g><title>[libc.so.6] (1,386,282 samples, 0.54%)</title><rect x="66.9028%" y="1685" width="0.5448%" height="15" fill="rgb(248,8,30)" fg:x="170249298" fg:w="1386282"/><text x="67.1528%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,033,149 samples, 5.12%)</title><rect x="62.8808%" y="1861" width="5.1216%" height="15" fill="rgb(237,120,30)" fg:x="160014390" fg:w="13033149"/><text x="63.1308%" y="1871.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,411,959 samples, 0.55%)</title><rect x="67.4476%" y="1845" width="0.5549%" height="15" fill="rgb(221,146,34)" fg:x="171635580" fg:w="1411959"/><text x="67.6976%" y="1855.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,411,959 samples, 0.55%)</title><rect x="67.4476%" y="1829" width="0.5549%" height="15" fill="rgb(242,55,13)" fg:x="171635580" fg:w="1411959"/><text x="67.6976%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,411,959 samples, 0.55%)</title><rect x="67.4476%" y="1813" width="0.5549%" height="15" fill="rgb(242,112,31)" fg:x="171635580" fg:w="1411959"/><text x="67.6976%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,411,959 samples, 0.55%)</title><rect x="67.4476%" y="1797" width="0.5549%" height="15" fill="rgb(249,192,27)" fg:x="171635580" fg:w="1411959"/><text x="67.6976%" y="1807.50"></text></g><g><title>alloc::alloc::dealloc (1,411,959 samples, 0.55%)</title><rect x="67.4476%" y="1781" width="0.5549%" height="15" fill="rgb(208,204,44)" fg:x="171635580" fg:w="1411959"/><text x="67.6976%" y="1791.50"></text></g><g><title>cfree (1,411,959 samples, 0.55%)</title><rect x="67.4476%" y="1765" width="0.5549%" height="15" fill="rgb(208,93,54)" fg:x="171635580" fg:w="1411959"/><text x="67.6976%" y="1775.50"></text></g><g><title>[libc.so.6] (1,411,959 samples, 0.55%)</title><rect x="67.4476%" y="1749" width="0.5549%" height="15" fill="rgb(242,1,31)" fg:x="171635580" fg:w="1411959"/><text x="67.6976%" y="1759.50"></text></g><g><title>[libc.so.6] (1,411,959 samples, 0.55%)</title><rect x="67.4476%" y="1733" width="0.5549%" height="15" fill="rgb(241,83,25)" fg:x="171635580" fg:w="1411959"/><text x="67.6976%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15,174,421 samples, 5.96%)</title><rect x="62.4171%" y="1909" width="5.9631%" height="15" fill="rgb(205,169,50)" fg:x="158834365" fg:w="15174421"/><text x="62.6671%" y="1919.50">&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (15,174,421 samples, 5.96%)</title><rect x="62.4171%" y="1893" width="5.9631%" height="15" fill="rgb(239,186,37)" fg:x="158834365" fg:w="15174421"/><text x="62.6671%" y="1903.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (15,174,421 samples, 5.96%)</title><rect x="62.4171%" y="1877" width="5.9631%" height="15" fill="rgb(205,221,10)" fg:x="158834365" fg:w="15174421"/><text x="62.6671%" y="1887.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (961,247 samples, 0.38%)</title><rect x="68.0024%" y="1861" width="0.3777%" height="15" fill="rgb(218,196,15)" fg:x="173047539" fg:w="961247"/><text x="68.2524%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (961,247 samples, 0.38%)</title><rect x="68.0024%" y="1845" width="0.3777%" height="15" fill="rgb(218,196,35)" fg:x="173047539" fg:w="961247"/><text x="68.2524%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (961,247 samples, 0.38%)</title><rect x="68.0024%" y="1829" width="0.3777%" height="15" fill="rgb(233,63,24)" fg:x="173047539" fg:w="961247"/><text x="68.2524%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (961,247 samples, 0.38%)</title><rect x="68.0024%" y="1813" width="0.3777%" height="15" fill="rgb(225,8,4)" fg:x="173047539" fg:w="961247"/><text x="68.2524%" y="1823.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (961,247 samples, 0.38%)</title><rect x="68.0024%" y="1797" width="0.3777%" height="15" fill="rgb(234,105,35)" fg:x="173047539" fg:w="961247"/><text x="68.2524%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (961,247 samples, 0.38%)</title><rect x="68.0024%" y="1781" width="0.3777%" height="15" fill="rgb(236,21,32)" fg:x="173047539" fg:w="961247"/><text x="68.2524%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (961,247 samples, 0.38%)</title><rect x="68.0024%" y="1765" width="0.3777%" height="15" fill="rgb(228,109,6)" fg:x="173047539" fg:w="961247"/><text x="68.2524%" y="1775.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (961,247 samples, 0.38%)</title><rect x="68.0024%" y="1749" width="0.3777%" height="15" fill="rgb(229,215,31)" fg:x="173047539" fg:w="961247"/><text x="68.2524%" y="1759.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (961,247 samples, 0.38%)</title><rect x="68.0024%" y="1733" width="0.3777%" height="15" fill="rgb(221,52,54)" fg:x="173047539" fg:w="961247"/><text x="68.2524%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (961,247 samples, 0.38%)</title><rect x="68.0024%" y="1717" width="0.3777%" height="15" fill="rgb(252,129,43)" fg:x="173047539" fg:w="961247"/><text x="68.2524%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (961,247 samples, 0.38%)</title><rect x="68.0024%" y="1701" width="0.3777%" height="15" fill="rgb(248,183,27)" fg:x="173047539" fg:w="961247"/><text x="68.2524%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (961,247 samples, 0.38%)</title><rect x="68.0024%" y="1685" width="0.3777%" height="15" fill="rgb(250,0,22)" fg:x="173047539" fg:w="961247"/><text x="68.2524%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (961,247 samples, 0.38%)</title><rect x="68.0024%" y="1669" width="0.3777%" height="15" fill="rgb(213,166,10)" fg:x="173047539" fg:w="961247"/><text x="68.2524%" y="1679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (961,247 samples, 0.38%)</title><rect x="68.0024%" y="1653" width="0.3777%" height="15" fill="rgb(207,163,36)" fg:x="173047539" fg:w="961247"/><text x="68.2524%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (16,489,891 samples, 6.48%)</title><rect x="62.4171%" y="1925" width="6.4800%" height="15" fill="rgb(208,122,22)" fg:x="158834365" fg:w="16489891"/><text x="62.6671%" y="1935.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,315,470 samples, 0.52%)</title><rect x="68.3802%" y="1909" width="0.5169%" height="15" fill="rgb(207,104,49)" fg:x="174008786" fg:w="1315470"/><text x="68.6302%" y="1919.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,315,470 samples, 0.52%)</title><rect x="68.3802%" y="1893" width="0.5169%" height="15" fill="rgb(248,211,50)" fg:x="174008786" fg:w="1315470"/><text x="68.6302%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (17,711,633 samples, 6.96%)</title><rect x="62.4171%" y="1989" width="6.9601%" height="15" fill="rgb(217,13,45)" fg:x="158834365" fg:w="17711633"/><text x="62.6671%" y="1999.50">core::ptr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,711,633 samples, 6.96%)</title><rect x="62.4171%" y="1973" width="6.9601%" height="15" fill="rgb(211,216,49)" fg:x="158834365" fg:w="17711633"/><text x="62.6671%" y="1983.50">&lt;alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (17,711,633 samples, 6.96%)</title><rect x="62.4171%" y="1957" width="6.9601%" height="15" fill="rgb(221,58,53)" fg:x="158834365" fg:w="17711633"/><text x="62.6671%" y="1967.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (17,711,633 samples, 6.96%)</title><rect x="62.4171%" y="1941" width="6.9601%" height="15" fill="rgb(220,112,41)" fg:x="158834365" fg:w="17711633"/><text x="62.6671%" y="1951.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,221,742 samples, 0.48%)</title><rect x="68.8971%" y="1925" width="0.4801%" height="15" fill="rgb(236,38,28)" fg:x="175324256" fg:w="1221742"/><text x="69.1471%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,221,742 samples, 0.48%)</title><rect x="68.8971%" y="1909" width="0.4801%" height="15" fill="rgb(227,195,22)" fg:x="175324256" fg:w="1221742"/><text x="69.1471%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,221,742 samples, 0.48%)</title><rect x="68.8971%" y="1893" width="0.4801%" height="15" fill="rgb(214,55,33)" fg:x="175324256" fg:w="1221742"/><text x="69.1471%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,221,742 samples, 0.48%)</title><rect x="68.8971%" y="1877" width="0.4801%" height="15" fill="rgb(248,80,13)" fg:x="175324256" fg:w="1221742"/><text x="69.1471%" y="1887.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,221,742 samples, 0.48%)</title><rect x="68.8971%" y="1861" width="0.4801%" height="15" fill="rgb(238,52,6)" fg:x="175324256" fg:w="1221742"/><text x="69.1471%" y="1871.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,221,742 samples, 0.48%)</title><rect x="68.8971%" y="1845" width="0.4801%" height="15" fill="rgb(224,198,47)" fg:x="175324256" fg:w="1221742"/><text x="69.1471%" y="1855.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,221,742 samples, 0.48%)</title><rect x="68.8971%" y="1829" width="0.4801%" height="15" fill="rgb(233,171,20)" fg:x="175324256" fg:w="1221742"/><text x="69.1471%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,221,742 samples, 0.48%)</title><rect x="68.8971%" y="1813" width="0.4801%" height="15" fill="rgb(241,30,25)" fg:x="175324256" fg:w="1221742"/><text x="69.1471%" y="1823.50"></text></g><g><title>alloc::alloc::dealloc (1,221,742 samples, 0.48%)</title><rect x="68.8971%" y="1797" width="0.4801%" height="15" fill="rgb(207,171,38)" fg:x="175324256" fg:w="1221742"/><text x="69.1471%" y="1807.50"></text></g><g><title>cfree (1,221,742 samples, 0.48%)</title><rect x="68.8971%" y="1781" width="0.4801%" height="15" fill="rgb(234,70,1)" fg:x="175324256" fg:w="1221742"/><text x="69.1471%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;css_bitvector_compiler::BitVector&gt;&gt; (1,351,116 samples, 0.53%)</title><rect x="69.3772%" y="1989" width="0.5309%" height="15" fill="rgb(232,178,18)" fg:x="176545998" fg:w="1351116"/><text x="69.6272%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (20,322,333 samples, 7.99%)</title><rect x="62.4171%" y="2053" width="7.9861%" height="15" fill="rgb(241,78,40)" fg:x="158834365" fg:w="20322333"/><text x="62.6671%" y="2063.50">core::ptr::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,322,333 samples, 7.99%)</title><rect x="62.4171%" y="2037" width="7.9861%" height="15" fill="rgb(222,35,25)" fg:x="158834365" fg:w="20322333"/><text x="62.6671%" y="2047.50">&lt;alloc::vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (20,322,333 samples, 7.99%)</title><rect x="62.4171%" y="2021" width="7.9861%" height="15" fill="rgb(207,92,16)" fg:x="158834365" fg:w="20322333"/><text x="62.6671%" y="2031.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (20,322,333 samples, 7.99%)</title><rect x="62.4171%" y="2005" width="7.9861%" height="15" fill="rgb(216,59,51)" fg:x="158834365" fg:w="20322333"/><text x="62.6671%" y="2015.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1989" width="0.4950%" height="15" fill="rgb(213,80,28)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1973" width="0.4950%" height="15" fill="rgb(220,93,7)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1957" width="0.4950%" height="15" fill="rgb(225,24,44)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1941" width="0.4950%" height="15" fill="rgb(243,74,40)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1951.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1925" width="0.4950%" height="15" fill="rgb(228,39,7)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1935.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1909" width="0.4950%" height="15" fill="rgb(227,79,8)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1919.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1893" width="0.4950%" height="15" fill="rgb(236,58,11)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1903.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1877" width="0.4950%" height="15" fill="rgb(249,63,35)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1887.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1861" width="0.4950%" height="15" fill="rgb(252,114,16)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1845" width="0.4950%" height="15" fill="rgb(254,151,24)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1829" width="0.4950%" height="15" fill="rgb(253,54,39)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1813" width="0.4950%" height="15" fill="rgb(243,25,45)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1797" width="0.4950%" height="15" fill="rgb(234,134,9)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1781" width="0.4950%" height="15" fill="rgb(227,166,31)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1765" width="0.4950%" height="15" fill="rgb(245,143,41)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1749" width="0.4950%" height="15" fill="rgb(238,181,32)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1759.50"></text></g><g><title>alloc::alloc::dealloc (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1733" width="0.4950%" height="15" fill="rgb(224,113,18)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1743.50"></text></g><g><title>cfree (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1717" width="0.4950%" height="15" fill="rgb(240,229,28)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1727.50"></text></g><g><title>[libc.so.6] (1,259,584 samples, 0.49%)</title><rect x="69.9082%" y="1701" width="0.4950%" height="15" fill="rgb(250,185,3)" fg:x="177897114" fg:w="1259584"/><text x="70.1582%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,214,102 samples, 0.48%)</title><rect x="70.4031%" y="2053" width="0.4771%" height="15" fill="rgb(212,59,25)" fg:x="179156698" fg:w="1214102"/><text x="70.6531%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,214,102 samples, 0.48%)</title><rect x="70.4031%" y="2037" width="0.4771%" height="15" fill="rgb(221,87,20)" fg:x="179156698" fg:w="1214102"/><text x="70.6531%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,214,102 samples, 0.48%)</title><rect x="70.4031%" y="2021" width="0.4771%" height="15" fill="rgb(213,74,28)" fg:x="179156698" fg:w="1214102"/><text x="70.6531%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,214,102 samples, 0.48%)</title><rect x="70.4031%" y="2005" width="0.4771%" height="15" fill="rgb(224,132,34)" fg:x="179156698" fg:w="1214102"/><text x="70.6531%" y="2015.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,214,102 samples, 0.48%)</title><rect x="70.4031%" y="1989" width="0.4771%" height="15" fill="rgb(222,101,24)" fg:x="179156698" fg:w="1214102"/><text x="70.6531%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,214,102 samples, 0.48%)</title><rect x="70.4031%" y="1973" width="0.4771%" height="15" fill="rgb(254,142,4)" fg:x="179156698" fg:w="1214102"/><text x="70.6531%" y="1983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,214,102 samples, 0.48%)</title><rect x="70.4031%" y="1957" width="0.4771%" height="15" fill="rgb(230,229,49)" fg:x="179156698" fg:w="1214102"/><text x="70.6531%" y="1967.50"></text></g><g><title>alloc::alloc::dealloc (1,214,102 samples, 0.48%)</title><rect x="70.4031%" y="1941" width="0.4771%" height="15" fill="rgb(238,70,47)" fg:x="179156698" fg:w="1214102"/><text x="70.6531%" y="1951.50"></text></g><g><title>cfree (1,214,102 samples, 0.48%)</title><rect x="70.4031%" y="1925" width="0.4771%" height="15" fill="rgb(231,160,17)" fg:x="179156698" fg:w="1214102"/><text x="70.6531%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (22,610,538 samples, 8.89%)</title><rect x="62.4171%" y="2117" width="8.8853%" height="15" fill="rgb(218,68,53)" fg:x="158834365" fg:w="22610538"/><text x="62.6671%" y="2127.50">core::ptr::dr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,610,538 samples, 8.89%)</title><rect x="62.4171%" y="2101" width="8.8853%" height="15" fill="rgb(236,111,10)" fg:x="158834365" fg:w="22610538"/><text x="62.6671%" y="2111.50">&lt;alloc::vec::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (22,610,538 samples, 8.89%)</title><rect x="62.4171%" y="2085" width="8.8853%" height="15" fill="rgb(224,34,41)" fg:x="158834365" fg:w="22610538"/><text x="62.6671%" y="2095.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (22,610,538 samples, 8.89%)</title><rect x="62.4171%" y="2069" width="8.8853%" height="15" fill="rgb(241,118,19)" fg:x="158834365" fg:w="22610538"/><text x="62.6671%" y="2079.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,074,103 samples, 0.42%)</title><rect x="70.8802%" y="2053" width="0.4221%" height="15" fill="rgb(238,129,25)" fg:x="180370800" fg:w="1074103"/><text x="71.1302%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,074,103 samples, 0.42%)</title><rect x="70.8802%" y="2037" width="0.4221%" height="15" fill="rgb(238,22,31)" fg:x="180370800" fg:w="1074103"/><text x="71.1302%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,074,103 samples, 0.42%)</title><rect x="70.8802%" y="2021" width="0.4221%" height="15" fill="rgb(222,174,48)" fg:x="180370800" fg:w="1074103"/><text x="71.1302%" y="2031.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,074,103 samples, 0.42%)</title><rect x="70.8802%" y="2005" width="0.4221%" height="15" fill="rgb(206,152,40)" fg:x="180370800" fg:w="1074103"/><text x="71.1302%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,074,103 samples, 0.42%)</title><rect x="70.8802%" y="1989" width="0.4221%" height="15" fill="rgb(218,99,54)" fg:x="180370800" fg:w="1074103"/><text x="71.1302%" y="1999.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,074,103 samples, 0.42%)</title><rect x="70.8802%" y="1973" width="0.4221%" height="15" fill="rgb(220,174,26)" fg:x="180370800" fg:w="1074103"/><text x="71.1302%" y="1983.50"></text></g><g><title>alloc::alloc::dealloc (1,074,103 samples, 0.42%)</title><rect x="70.8802%" y="1957" width="0.4221%" height="15" fill="rgb(245,116,9)" fg:x="180370800" fg:w="1074103"/><text x="71.1302%" y="1967.50"></text></g><g><title>cfree (1,074,103 samples, 0.42%)</title><rect x="70.8802%" y="1941" width="0.4221%" height="15" fill="rgb(209,72,35)" fg:x="180370800" fg:w="1074103"/><text x="71.1302%" y="1951.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,687,779 samples, 1.06%)</title><rect x="71.3023%" y="2021" width="1.0562%" height="15" fill="rgb(226,126,21)" fg:x="181444903" fg:w="2687779"/><text x="71.5523%" y="2031.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,687,779 samples, 1.06%)</title><rect x="71.3023%" y="2005" width="1.0562%" height="15" fill="rgb(227,192,1)" fg:x="181444903" fg:w="2687779"/><text x="71.5523%" y="2015.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,687,779 samples, 1.06%)</title><rect x="71.3023%" y="1989" width="1.0562%" height="15" fill="rgb(237,180,29)" fg:x="181444903" fg:w="2687779"/><text x="71.5523%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,687,779 samples, 1.06%)</title><rect x="71.3023%" y="1973" width="1.0562%" height="15" fill="rgb(230,197,35)" fg:x="181444903" fg:w="2687779"/><text x="71.5523%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,687,779 samples, 1.06%)</title><rect x="71.3023%" y="1957" width="1.0562%" height="15" fill="rgb(246,193,31)" fg:x="181444903" fg:w="2687779"/><text x="71.5523%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,687,779 samples, 1.06%)</title><rect x="71.3023%" y="1941" width="1.0562%" height="15" fill="rgb(241,36,4)" fg:x="181444903" fg:w="2687779"/><text x="71.5523%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,687,779 samples, 1.06%)</title><rect x="71.3023%" y="1925" width="1.0562%" height="15" fill="rgb(241,130,17)" fg:x="181444903" fg:w="2687779"/><text x="71.5523%" y="1935.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,687,779 samples, 1.06%)</title><rect x="71.3023%" y="1909" width="1.0562%" height="15" fill="rgb(206,137,32)" fg:x="181444903" fg:w="2687779"/><text x="71.5523%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,297,408 samples, 0.51%)</title><rect x="71.8487%" y="1893" width="0.5098%" height="15" fill="rgb(237,228,51)" fg:x="182835274" fg:w="1297408"/><text x="72.0987%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,297,408 samples, 0.51%)</title><rect x="71.8487%" y="1877" width="0.5098%" height="15" fill="rgb(243,6,42)" fg:x="182835274" fg:w="1297408"/><text x="72.0987%" y="1887.50"></text></g><g><title>alloc::alloc::dealloc (1,297,408 samples, 0.51%)</title><rect x="71.8487%" y="1861" width="0.5098%" height="15" fill="rgb(251,74,28)" fg:x="182835274" fg:w="1297408"/><text x="72.0987%" y="1871.50"></text></g><g><title>cfree (1,297,408 samples, 0.51%)</title><rect x="71.8487%" y="1845" width="0.5098%" height="15" fill="rgb(218,20,49)" fg:x="182835274" fg:w="1297408"/><text x="72.0987%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26,613,226 samples, 10.46%)</title><rect x="62.4171%" y="2165" width="10.4582%" height="15" fill="rgb(238,28,14)" fg:x="158834365" fg:w="26613226"/><text x="62.6671%" y="2175.50">&lt;alloc::vec::Ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (26,613,226 samples, 10.46%)</title><rect x="62.4171%" y="2149" width="10.4582%" height="15" fill="rgb(229,40,46)" fg:x="158834365" fg:w="26613226"/><text x="62.6671%" y="2159.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (26,613,226 samples, 10.46%)</title><rect x="62.4171%" y="2133" width="10.4582%" height="15" fill="rgb(244,195,20)" fg:x="158834365" fg:w="26613226"/><text x="62.6671%" y="2143.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (4,002,688 samples, 1.57%)</title><rect x="71.3023%" y="2117" width="1.5729%" height="15" fill="rgb(253,56,35)" fg:x="181444903" fg:w="4002688"/><text x="71.5523%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (4,002,688 samples, 1.57%)</title><rect x="71.3023%" y="2101" width="1.5729%" height="15" fill="rgb(210,149,44)" fg:x="181444903" fg:w="4002688"/><text x="71.5523%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (4,002,688 samples, 1.57%)</title><rect x="71.3023%" y="2085" width="1.5729%" height="15" fill="rgb(240,135,12)" fg:x="181444903" fg:w="4002688"/><text x="71.5523%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (4,002,688 samples, 1.57%)</title><rect x="71.3023%" y="2069" width="1.5729%" height="15" fill="rgb(251,24,50)" fg:x="181444903" fg:w="4002688"/><text x="71.5523%" y="2079.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,002,688 samples, 1.57%)</title><rect x="71.3023%" y="2053" width="1.5729%" height="15" fill="rgb(243,200,47)" fg:x="181444903" fg:w="4002688"/><text x="71.5523%" y="2063.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (4,002,688 samples, 1.57%)</title><rect x="71.3023%" y="2037" width="1.5729%" height="15" fill="rgb(224,166,26)" fg:x="181444903" fg:w="4002688"/><text x="71.5523%" y="2047.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,314,909 samples, 0.52%)</title><rect x="72.3585%" y="2021" width="0.5167%" height="15" fill="rgb(233,0,47)" fg:x="184132682" fg:w="1314909"/><text x="72.6085%" y="2031.50"></text></g><g><title>hashbrown::raw::RawTableInner::allocation_info (1,314,909 samples, 0.52%)</title><rect x="72.3585%" y="2005" width="0.5167%" height="15" fill="rgb(253,80,5)" fg:x="184132682" fg:w="1314909"/><text x="72.6085%" y="2015.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1,314,909 samples, 0.52%)</title><rect x="72.3585%" y="1989" width="0.5167%" height="15" fill="rgb(214,133,25)" fg:x="184132682" fg:w="1314909"/><text x="72.6085%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (28,000,109 samples, 11.00%)</title><rect x="62.4171%" y="2181" width="11.0032%" height="15" fill="rgb(209,27,14)" fg:x="158834365" fg:w="28000109"/><text x="62.6671%" y="2191.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,386,883 samples, 0.55%)</title><rect x="72.8753%" y="2165" width="0.5450%" height="15" fill="rgb(219,102,51)" fg:x="185447591" fg:w="1386883"/><text x="73.1253%" y="2175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,386,883 samples, 0.55%)</title><rect x="72.8753%" y="2149" width="0.5450%" height="15" fill="rgb(237,18,16)" fg:x="185447591" fg:w="1386883"/><text x="73.1253%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,386,883 samples, 0.55%)</title><rect x="72.8753%" y="2133" width="0.5450%" height="15" fill="rgb(241,85,17)" fg:x="185447591" fg:w="1386883"/><text x="73.1253%" y="2143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,386,883 samples, 0.55%)</title><rect x="72.8753%" y="2117" width="0.5450%" height="15" fill="rgb(236,90,42)" fg:x="185447591" fg:w="1386883"/><text x="73.1253%" y="2127.50"></text></g><g><title>alloc::alloc::dealloc (1,386,883 samples, 0.55%)</title><rect x="72.8753%" y="2101" width="0.5450%" height="15" fill="rgb(249,57,21)" fg:x="185447591" fg:w="1386883"/><text x="73.1253%" y="2111.50"></text></g><g><title>cfree (1,386,883 samples, 0.55%)</title><rect x="72.8753%" y="2085" width="0.5450%" height="15" fill="rgb(243,12,36)" fg:x="185447591" fg:w="1386883"/><text x="73.1253%" y="2095.50"></text></g><g><title>[libc.so.6] (1,386,883 samples, 0.55%)</title><rect x="72.8753%" y="2069" width="0.5450%" height="15" fill="rgb(253,128,47)" fg:x="185447591" fg:w="1386883"/><text x="73.1253%" y="2079.50"></text></g><g><title>[libc.so.6] (1,386,883 samples, 0.55%)</title><rect x="72.8753%" y="2053" width="0.5450%" height="15" fill="rgb(207,33,20)" fg:x="185447591" fg:w="1386883"/><text x="73.1253%" y="2063.50"></text></g><g><title>[libc.so.6] (1,386,883 samples, 0.55%)</title><rect x="72.8753%" y="2037" width="0.5450%" height="15" fill="rgb(233,215,35)" fg:x="185447591" fg:w="1386883"/><text x="73.1253%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (28,970,175 samples, 11.38%)</title><rect x="62.4171%" y="2245" width="11.3844%" height="15" fill="rgb(249,188,52)" fg:x="158834365" fg:w="28970175"/><text x="62.6671%" y="2255.50">core::ptr::drop_i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28,970,175 samples, 11.38%)</title><rect x="62.4171%" y="2229" width="11.3844%" height="15" fill="rgb(225,12,32)" fg:x="158834365" fg:w="28970175"/><text x="62.6671%" y="2239.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (28,970,175 samples, 11.38%)</title><rect x="62.4171%" y="2213" width="11.3844%" height="15" fill="rgb(247,98,14)" fg:x="158834365" fg:w="28970175"/><text x="62.6671%" y="2223.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (28,970,175 samples, 11.38%)</title><rect x="62.4171%" y="2197" width="11.3844%" height="15" fill="rgb(247,219,48)" fg:x="158834365" fg:w="28970175"/><text x="62.6671%" y="2207.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (970,066 samples, 0.38%)</title><rect x="73.4203%" y="2181" width="0.3812%" height="15" fill="rgb(253,60,48)" fg:x="186834474" fg:w="970066"/><text x="73.6703%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (970,066 samples, 0.38%)</title><rect x="73.4203%" y="2165" width="0.3812%" height="15" fill="rgb(245,15,52)" fg:x="186834474" fg:w="970066"/><text x="73.6703%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (970,066 samples, 0.38%)</title><rect x="73.4203%" y="2149" width="0.3812%" height="15" fill="rgb(220,133,28)" fg:x="186834474" fg:w="970066"/><text x="73.6703%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (970,066 samples, 0.38%)</title><rect x="73.4203%" y="2133" width="0.3812%" height="15" fill="rgb(217,180,4)" fg:x="186834474" fg:w="970066"/><text x="73.6703%" y="2143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (970,066 samples, 0.38%)</title><rect x="73.4203%" y="2117" width="0.3812%" height="15" fill="rgb(251,24,1)" fg:x="186834474" fg:w="970066"/><text x="73.6703%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (970,066 samples, 0.38%)</title><rect x="73.4203%" y="2101" width="0.3812%" height="15" fill="rgb(212,185,49)" fg:x="186834474" fg:w="970066"/><text x="73.6703%" y="2111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (970,066 samples, 0.38%)</title><rect x="73.4203%" y="2085" width="0.3812%" height="15" fill="rgb(215,175,22)" fg:x="186834474" fg:w="970066"/><text x="73.6703%" y="2095.50"></text></g><g><title>alloc::alloc::dealloc (970,066 samples, 0.38%)</title><rect x="73.4203%" y="2069" width="0.3812%" height="15" fill="rgb(250,205,14)" fg:x="186834474" fg:w="970066"/><text x="73.6703%" y="2079.50"></text></g><g><title>cfree (970,066 samples, 0.38%)</title><rect x="73.4203%" y="2053" width="0.3812%" height="15" fill="rgb(225,211,22)" fg:x="186834474" fg:w="970066"/><text x="73.6703%" y="2063.50"></text></g><g><title>[libc.so.6] (970,066 samples, 0.38%)</title><rect x="73.4203%" y="2037" width="0.3812%" height="15" fill="rgb(251,179,42)" fg:x="186834474" fg:w="970066"/><text x="73.6703%" y="2047.50"></text></g><g><title>__rust_dealloc (1,381,621 samples, 0.54%)</title><rect x="73.8015%" y="2117" width="0.5429%" height="15" fill="rgb(208,216,51)" fg:x="187804540" fg:w="1381621"/><text x="74.0515%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,985,689 samples, 1.57%)</title><rect x="73.8015%" y="2245" width="1.5663%" height="15" fill="rgb(235,36,11)" fg:x="187804540" fg:w="3985689"/><text x="74.0515%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,985,689 samples, 1.57%)</title><rect x="73.8015%" y="2229" width="1.5663%" height="15" fill="rgb(213,189,28)" fg:x="187804540" fg:w="3985689"/><text x="74.0515%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,985,689 samples, 1.57%)</title><rect x="73.8015%" y="2213" width="1.5663%" height="15" fill="rgb(227,203,42)" fg:x="187804540" fg:w="3985689"/><text x="74.0515%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,985,689 samples, 1.57%)</title><rect x="73.8015%" y="2197" width="1.5663%" height="15" fill="rgb(244,72,36)" fg:x="187804540" fg:w="3985689"/><text x="74.0515%" y="2207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,985,689 samples, 1.57%)</title><rect x="73.8015%" y="2181" width="1.5663%" height="15" fill="rgb(213,53,17)" fg:x="187804540" fg:w="3985689"/><text x="74.0515%" y="2191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,985,689 samples, 1.57%)</title><rect x="73.8015%" y="2165" width="1.5663%" height="15" fill="rgb(207,167,3)" fg:x="187804540" fg:w="3985689"/><text x="74.0515%" y="2175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,985,689 samples, 1.57%)</title><rect x="73.8015%" y="2149" width="1.5663%" height="15" fill="rgb(216,98,30)" fg:x="187804540" fg:w="3985689"/><text x="74.0515%" y="2159.50"></text></g><g><title>alloc::alloc::dealloc (3,985,689 samples, 1.57%)</title><rect x="73.8015%" y="2133" width="1.5663%" height="15" fill="rgb(236,123,15)" fg:x="187804540" fg:w="3985689"/><text x="74.0515%" y="2143.50"></text></g><g><title>cfree (2,604,068 samples, 1.02%)</title><rect x="74.3444%" y="2117" width="1.0233%" height="15" fill="rgb(248,81,50)" fg:x="189186161" fg:w="2604068"/><text x="74.5944%" y="2127.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,152,359 samples, 0.45%)</title><rect x="75.3677%" y="2149" width="0.4528%" height="15" fill="rgb(214,120,4)" fg:x="191790229" fg:w="1152359"/><text x="75.6177%" y="2159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,152,359 samples, 0.45%)</title><rect x="75.3677%" y="2133" width="0.4528%" height="15" fill="rgb(208,179,34)" fg:x="191790229" fg:w="1152359"/><text x="75.6177%" y="2143.50"></text></g><g><title>alloc::alloc::dealloc (1,152,359 samples, 0.45%)</title><rect x="75.3677%" y="2117" width="0.4528%" height="15" fill="rgb(227,140,7)" fg:x="191790229" fg:w="1152359"/><text x="75.6177%" y="2127.50"></text></g><g><title>__rdl_dealloc (1,152,359 samples, 0.45%)</title><rect x="75.3677%" y="2101" width="0.4528%" height="15" fill="rgb(214,22,6)" fg:x="191790229" fg:w="1152359"/><text x="75.6177%" y="2111.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,152,359 samples, 0.45%)</title><rect x="75.3677%" y="2085" width="0.4528%" height="15" fill="rgb(207,137,27)" fg:x="191790229" fg:w="1152359"/><text x="75.6177%" y="2095.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35,466,730 samples, 13.94%)</title><rect x="62.4171%" y="2293" width="13.9373%" height="15" fill="rgb(210,8,46)" fg:x="158834365" fg:w="35466730"/><text x="62.6671%" y="2303.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (35,466,730 samples, 13.94%)</title><rect x="62.4171%" y="2277" width="13.9373%" height="15" fill="rgb(240,16,54)" fg:x="158834365" fg:w="35466730"/><text x="62.6671%" y="2287.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (35,466,730 samples, 13.94%)</title><rect x="62.4171%" y="2261" width="13.9373%" height="15" fill="rgb(211,209,29)" fg:x="158834365" fg:w="35466730"/><text x="62.6671%" y="2271.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,510,866 samples, 0.99%)</title><rect x="75.3677%" y="2245" width="0.9867%" height="15" fill="rgb(226,228,24)" fg:x="191790229" fg:w="2510866"/><text x="75.6177%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,510,866 samples, 0.99%)</title><rect x="75.3677%" y="2229" width="0.9867%" height="15" fill="rgb(222,84,9)" fg:x="191790229" fg:w="2510866"/><text x="75.6177%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,510,866 samples, 0.99%)</title><rect x="75.3677%" y="2213" width="0.9867%" height="15" fill="rgb(234,203,30)" fg:x="191790229" fg:w="2510866"/><text x="75.6177%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,510,866 samples, 0.99%)</title><rect x="75.3677%" y="2197" width="0.9867%" height="15" fill="rgb(238,109,14)" fg:x="191790229" fg:w="2510866"/><text x="75.6177%" y="2207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,510,866 samples, 0.99%)</title><rect x="75.3677%" y="2181" width="0.9867%" height="15" fill="rgb(233,206,34)" fg:x="191790229" fg:w="2510866"/><text x="75.6177%" y="2191.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,510,866 samples, 0.99%)</title><rect x="75.3677%" y="2165" width="0.9867%" height="15" fill="rgb(220,167,47)" fg:x="191790229" fg:w="2510866"/><text x="75.6177%" y="2175.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,358,507 samples, 0.53%)</title><rect x="75.8206%" y="2149" width="0.5339%" height="15" fill="rgb(238,105,10)" fg:x="192942588" fg:w="1358507"/><text x="76.0706%" y="2159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45,859,135 samples, 18.02%)</title><rect x="62.4171%" y="2357" width="18.0212%" height="15" fill="rgb(213,227,17)" fg:x="158834365" fg:w="45859135"/><text x="62.6671%" y="2367.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (45,859,135 samples, 18.02%)</title><rect x="62.4171%" y="2341" width="18.0212%" height="15" fill="rgb(217,132,38)" fg:x="158834365" fg:w="45859135"/><text x="62.6671%" y="2351.50">core::ptr::drop_in_place&lt;[cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (45,859,135 samples, 18.02%)</title><rect x="62.4171%" y="2325" width="18.0212%" height="15" fill="rgb(242,146,4)" fg:x="158834365" fg:w="45859135"/><text x="62.6671%" y="2335.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (45,859,135 samples, 18.02%)</title><rect x="62.4171%" y="2309" width="18.0212%" height="15" fill="rgb(212,61,9)" fg:x="158834365" fg:w="45859135"/><text x="62.6671%" y="2319.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (10,392,405 samples, 4.08%)</title><rect x="76.3544%" y="2293" width="4.0839%" height="15" fill="rgb(247,126,22)" fg:x="194301095" fg:w="10392405"/><text x="76.6044%" y="2303.50">core..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,392,405 samples, 4.08%)</title><rect x="76.3544%" y="2277" width="4.0839%" height="15" fill="rgb(220,196,2)" fg:x="194301095" fg:w="10392405"/><text x="76.6044%" y="2287.50">&lt;all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10,392,405 samples, 4.08%)</title><rect x="76.3544%" y="2261" width="4.0839%" height="15" fill="rgb(208,46,4)" fg:x="194301095" fg:w="10392405"/><text x="76.6044%" y="2271.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,392,405 samples, 4.08%)</title><rect x="76.3544%" y="2245" width="4.0839%" height="15" fill="rgb(252,104,46)" fg:x="194301095" fg:w="10392405"/><text x="76.6044%" y="2255.50">&lt;all..</text></g><g><title>alloc::alloc::dealloc (10,392,405 samples, 4.08%)</title><rect x="76.3544%" y="2229" width="4.0839%" height="15" fill="rgb(237,152,48)" fg:x="194301095" fg:w="10392405"/><text x="76.6044%" y="2239.50">allo..</text></g><g><title>cfree (10,392,405 samples, 4.08%)</title><rect x="76.3544%" y="2213" width="4.0839%" height="15" fill="rgb(221,59,37)" fg:x="194301095" fg:w="10392405"/><text x="76.6044%" y="2223.50">cfree</text></g><g><title>[libc.so.6] (10,392,405 samples, 4.08%)</title><rect x="76.3544%" y="2197" width="4.0839%" height="15" fill="rgb(209,202,51)" fg:x="194301095" fg:w="10392405"/><text x="76.6044%" y="2207.50">[lib..</text></g><g><title>[libc.so.6] (7,755,668 samples, 3.05%)</title><rect x="77.3906%" y="2181" width="3.0477%" height="15" fill="rgb(228,81,30)" fg:x="196937832" fg:w="7755668"/><text x="77.6406%" y="2191.50">[li..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (46,461,565 samples, 18.26%)</title><rect x="62.4171%" y="2373" width="18.2580%" height="15" fill="rgb(227,42,39)" fg:x="158834365" fg:w="46461565"/><text x="62.6671%" y="2383.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (602,430 samples, 0.24%)</title><rect x="80.4383%" y="2357" width="0.2367%" height="15" fill="rgb(221,26,2)" fg:x="204693500" fg:w="602430"/><text x="80.6883%" y="2367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (602,430 samples, 0.24%)</title><rect x="80.4383%" y="2341" width="0.2367%" height="15" fill="rgb(254,61,31)" fg:x="204693500" fg:w="602430"/><text x="80.6883%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (602,430 samples, 0.24%)</title><rect x="80.4383%" y="2325" width="0.2367%" height="15" fill="rgb(222,173,38)" fg:x="204693500" fg:w="602430"/><text x="80.6883%" y="2335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (602,430 samples, 0.24%)</title><rect x="80.4383%" y="2309" width="0.2367%" height="15" fill="rgb(218,50,12)" fg:x="204693500" fg:w="602430"/><text x="80.6883%" y="2319.50"></text></g><g><title>alloc::alloc::dealloc (602,430 samples, 0.24%)</title><rect x="80.4383%" y="2293" width="0.2367%" height="15" fill="rgb(223,88,40)" fg:x="204693500" fg:w="602430"/><text x="80.6883%" y="2303.50"></text></g><g><title>cfree (602,430 samples, 0.24%)</title><rect x="80.4383%" y="2277" width="0.2367%" height="15" fill="rgb(237,54,19)" fg:x="204693500" fg:w="602430"/><text x="80.6883%" y="2287.50"></text></g><g><title>[libc.so.6] (602,430 samples, 0.24%)</title><rect x="80.4383%" y="2261" width="0.2367%" height="15" fill="rgb(251,129,25)" fg:x="204693500" fg:w="602430"/><text x="80.6883%" y="2271.50"></text></g><g><title>[libc.so.6] (602,430 samples, 0.24%)</title><rect x="80.4383%" y="2245" width="0.2367%" height="15" fill="rgb(238,97,19)" fg:x="204693500" fg:w="602430"/><text x="80.6883%" y="2255.50"></text></g><g><title>[libc.so.6] (602,430 samples, 0.24%)</title><rect x="80.4383%" y="2229" width="0.2367%" height="15" fill="rgb(240,169,18)" fg:x="204693500" fg:w="602430"/><text x="80.6883%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,355,878 samples, 0.53%)</title><rect x="80.6751%" y="2373" width="0.5328%" height="15" fill="rgb(230,187,49)" fg:x="205295930" fg:w="1355878"/><text x="80.9251%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,355,878 samples, 0.53%)</title><rect x="80.6751%" y="2357" width="0.5328%" height="15" fill="rgb(209,44,26)" fg:x="205295930" fg:w="1355878"/><text x="80.9251%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,355,878 samples, 0.53%)</title><rect x="80.6751%" y="2341" width="0.5328%" height="15" fill="rgb(244,0,6)" fg:x="205295930" fg:w="1355878"/><text x="80.9251%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,355,878 samples, 0.53%)</title><rect x="80.6751%" y="2325" width="0.5328%" height="15" fill="rgb(248,18,21)" fg:x="205295930" fg:w="1355878"/><text x="80.9251%" y="2335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,355,878 samples, 0.53%)</title><rect x="80.6751%" y="2309" width="0.5328%" height="15" fill="rgb(245,180,19)" fg:x="205295930" fg:w="1355878"/><text x="80.9251%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,355,878 samples, 0.53%)</title><rect x="80.6751%" y="2293" width="0.5328%" height="15" fill="rgb(252,118,36)" fg:x="205295930" fg:w="1355878"/><text x="80.9251%" y="2303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,355,878 samples, 0.53%)</title><rect x="80.6751%" y="2277" width="0.5328%" height="15" fill="rgb(210,224,19)" fg:x="205295930" fg:w="1355878"/><text x="80.9251%" y="2287.50"></text></g><g><title>alloc::alloc::dealloc (1,355,878 samples, 0.53%)</title><rect x="80.6751%" y="2261" width="0.5328%" height="15" fill="rgb(218,30,24)" fg:x="205295930" fg:w="1355878"/><text x="80.9251%" y="2271.50"></text></g><g><title>cfree (1,355,878 samples, 0.53%)</title><rect x="80.6751%" y="2245" width="0.5328%" height="15" fill="rgb(219,75,50)" fg:x="205295930" fg:w="1355878"/><text x="80.9251%" y="2255.50"></text></g><g><title>[libc.so.6] (1,355,878 samples, 0.53%)</title><rect x="80.6751%" y="2229" width="0.5328%" height="15" fill="rgb(234,72,50)" fg:x="205295930" fg:w="1355878"/><text x="80.9251%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (49,074,632 samples, 19.28%)</title><rect x="62.4171%" y="2437" width="19.2848%" height="15" fill="rgb(219,100,48)" fg:x="158834365" fg:w="49074632"/><text x="62.6671%" y="2447.50">core::ptr::drop_in_place&lt;alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49,074,632 samples, 19.28%)</title><rect x="62.4171%" y="2421" width="19.2848%" height="15" fill="rgb(253,5,41)" fg:x="158834365" fg:w="49074632"/><text x="62.6671%" y="2431.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (49,074,632 samples, 19.28%)</title><rect x="62.4171%" y="2405" width="19.2848%" height="15" fill="rgb(247,181,11)" fg:x="158834365" fg:w="49074632"/><text x="62.6671%" y="2415.50">core::ptr::drop_in_place&lt;[css_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (49,074,632 samples, 19.28%)</title><rect x="62.4171%" y="2389" width="19.2848%" height="15" fill="rgb(222,223,25)" fg:x="158834365" fg:w="49074632"/><text x="62.6671%" y="2399.50">core::ptr::drop_in_place&lt;css_b..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,257,189 samples, 0.49%)</title><rect x="81.2079%" y="2373" width="0.4940%" height="15" fill="rgb(214,198,28)" fg:x="206651808" fg:w="1257189"/><text x="81.4579%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,257,189 samples, 0.49%)</title><rect x="81.2079%" y="2357" width="0.4940%" height="15" fill="rgb(230,46,43)" fg:x="206651808" fg:w="1257189"/><text x="81.4579%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,257,189 samples, 0.49%)</title><rect x="81.2079%" y="2341" width="0.4940%" height="15" fill="rgb(233,65,53)" fg:x="206651808" fg:w="1257189"/><text x="81.4579%" y="2351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,189 samples, 0.49%)</title><rect x="81.2079%" y="2325" width="0.4940%" height="15" fill="rgb(221,121,27)" fg:x="206651808" fg:w="1257189"/><text x="81.4579%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,257,189 samples, 0.49%)</title><rect x="81.2079%" y="2309" width="0.4940%" height="15" fill="rgb(247,70,47)" fg:x="206651808" fg:w="1257189"/><text x="81.4579%" y="2319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,257,189 samples, 0.49%)</title><rect x="81.2079%" y="2293" width="0.4940%" height="15" fill="rgb(228,85,35)" fg:x="206651808" fg:w="1257189"/><text x="81.4579%" y="2303.50"></text></g><g><title>alloc::alloc::dealloc (1,257,189 samples, 0.49%)</title><rect x="81.2079%" y="2277" width="0.4940%" height="15" fill="rgb(209,50,18)" fg:x="206651808" fg:w="1257189"/><text x="81.4579%" y="2287.50"></text></g><g><title>cfree (1,257,189 samples, 0.49%)</title><rect x="81.2079%" y="2261" width="0.4940%" height="15" fill="rgb(250,19,35)" fg:x="206651808" fg:w="1257189"/><text x="81.4579%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (54,017,375 samples, 21.23%)</title><rect x="60.9867%" y="2645" width="21.2272%" height="15" fill="rgb(253,107,29)" fg:x="155194373" fg:w="54017375"/><text x="61.2367%" y="2655.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (54,017,375 samples, 21.23%)</title><rect x="60.9867%" y="2629" width="21.2272%" height="15" fill="rgb(252,179,29)" fg:x="155194373" fg:w="54017375"/><text x="61.2367%" y="2639.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54,017,375 samples, 21.23%)</title><rect x="60.9867%" y="2613" width="21.2272%" height="15" fill="rgb(238,194,6)" fg:x="155194373" fg:w="54017375"/><text x="61.2367%" y="2623.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (54,017,375 samples, 21.23%)</title><rect x="60.9867%" y="2597" width="21.2272%" height="15" fill="rgb(238,164,29)" fg:x="155194373" fg:w="54017375"/><text x="61.2367%" y="2607.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (54,017,375 samples, 21.23%)</title><rect x="60.9867%" y="2581" width="21.2272%" height="15" fill="rgb(224,25,9)" fg:x="155194373" fg:w="54017375"/><text x="61.2367%" y="2591.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (54,017,375 samples, 21.23%)</title><rect x="60.9867%" y="2565" width="21.2272%" height="15" fill="rgb(244,153,23)" fg:x="155194373" fg:w="54017375"/><text x="61.2367%" y="2575.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54,017,375 samples, 21.23%)</title><rect x="60.9867%" y="2549" width="21.2272%" height="15" fill="rgb(212,203,14)" fg:x="155194373" fg:w="54017375"/><text x="61.2367%" y="2559.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (54,017,375 samples, 21.23%)</title><rect x="60.9867%" y="2533" width="21.2272%" height="15" fill="rgb(220,164,20)" fg:x="155194373" fg:w="54017375"/><text x="61.2367%" y="2543.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (54,017,375 samples, 21.23%)</title><rect x="60.9867%" y="2517" width="21.2272%" height="15" fill="rgb(222,203,48)" fg:x="155194373" fg:w="54017375"/><text x="61.2367%" y="2527.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (54,017,375 samples, 21.23%)</title><rect x="60.9867%" y="2501" width="21.2272%" height="15" fill="rgb(215,159,22)" fg:x="155194373" fg:w="54017375"/><text x="61.2367%" y="2511.50">core::ptr::drop_in_place&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54,017,375 samples, 21.23%)</title><rect x="60.9867%" y="2485" width="21.2272%" height="15" fill="rgb(216,183,47)" fg:x="155194373" fg:w="54017375"/><text x="61.2367%" y="2495.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (54,017,375 samples, 21.23%)</title><rect x="60.9867%" y="2469" width="21.2272%" height="15" fill="rgb(229,195,25)" fg:x="155194373" fg:w="54017375"/><text x="61.2367%" y="2479.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (54,017,375 samples, 21.23%)</title><rect x="60.9867%" y="2453" width="21.2272%" height="15" fill="rgb(224,132,51)" fg:x="155194373" fg:w="54017375"/><text x="61.2367%" y="2463.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,302,751 samples, 0.51%)</title><rect x="81.7019%" y="2437" width="0.5119%" height="15" fill="rgb(240,63,7)" fg:x="207908997" fg:w="1302751"/><text x="81.9519%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,302,751 samples, 0.51%)</title><rect x="81.7019%" y="2421" width="0.5119%" height="15" fill="rgb(249,182,41)" fg:x="207908997" fg:w="1302751"/><text x="81.9519%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,302,751 samples, 0.51%)</title><rect x="81.7019%" y="2405" width="0.5119%" height="15" fill="rgb(243,47,26)" fg:x="207908997" fg:w="1302751"/><text x="81.9519%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,302,751 samples, 0.51%)</title><rect x="81.7019%" y="2389" width="0.5119%" height="15" fill="rgb(233,48,2)" fg:x="207908997" fg:w="1302751"/><text x="81.9519%" y="2399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,302,751 samples, 0.51%)</title><rect x="81.7019%" y="2373" width="0.5119%" height="15" fill="rgb(244,165,34)" fg:x="207908997" fg:w="1302751"/><text x="81.9519%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,302,751 samples, 0.51%)</title><rect x="81.7019%" y="2357" width="0.5119%" height="15" fill="rgb(207,89,7)" fg:x="207908997" fg:w="1302751"/><text x="81.9519%" y="2367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,302,751 samples, 0.51%)</title><rect x="81.7019%" y="2341" width="0.5119%" height="15" fill="rgb(244,117,36)" fg:x="207908997" fg:w="1302751"/><text x="81.9519%" y="2351.50"></text></g><g><title>alloc::alloc::dealloc (1,302,751 samples, 0.51%)</title><rect x="81.7019%" y="2325" width="0.5119%" height="15" fill="rgb(226,144,34)" fg:x="207908997" fg:w="1302751"/><text x="81.9519%" y="2335.50"></text></g><g><title>cfree (1,302,751 samples, 0.51%)</title><rect x="81.7019%" y="2309" width="0.5119%" height="15" fill="rgb(213,23,19)" fg:x="207908997" fg:w="1302751"/><text x="81.9519%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,340,007 samples, 0.53%)</title><rect x="82.2139%" y="2581" width="0.5266%" height="15" fill="rgb(217,75,12)" fg:x="209211748" fg:w="1340007"/><text x="82.4639%" y="2591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,340,007 samples, 0.53%)</title><rect x="82.2139%" y="2565" width="0.5266%" height="15" fill="rgb(224,159,17)" fg:x="209211748" fg:w="1340007"/><text x="82.4639%" y="2575.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (159,986,814 samples, 62.87%)</title><rect x="20.9077%" y="2661" width="62.8700%" height="15" fill="rgb(217,118,1)" fg:x="53204250" fg:w="159986814"/><text x="21.1577%" y="2671.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,979,316 samples, 1.56%)</title><rect x="82.2139%" y="2645" width="1.5638%" height="15" fill="rgb(232,180,48)" fg:x="209211748" fg:w="3979316"/><text x="82.4639%" y="2655.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,979,316 samples, 1.56%)</title><rect x="82.2139%" y="2629" width="1.5638%" height="15" fill="rgb(230,27,33)" fg:x="209211748" fg:w="3979316"/><text x="82.4639%" y="2639.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,979,316 samples, 1.56%)</title><rect x="82.2139%" y="2613" width="1.5638%" height="15" fill="rgb(205,31,21)" fg:x="209211748" fg:w="3979316"/><text x="82.4639%" y="2623.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,979,316 samples, 1.56%)</title><rect x="82.2139%" y="2597" width="1.5638%" height="15" fill="rgb(253,59,4)" fg:x="209211748" fg:w="3979316"/><text x="82.4639%" y="2607.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,639,309 samples, 1.04%)</title><rect x="82.7404%" y="2581" width="1.0372%" height="15" fill="rgb(224,201,9)" fg:x="210551755" fg:w="2639309"/><text x="82.9904%" y="2591.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,639,309 samples, 1.04%)</title><rect x="82.7404%" y="2565" width="1.0372%" height="15" fill="rgb(229,206,30)" fg:x="210551755" fg:w="2639309"/><text x="82.9904%" y="2575.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,639,309 samples, 1.04%)</title><rect x="82.7404%" y="2549" width="1.0372%" height="15" fill="rgb(212,67,47)" fg:x="210551755" fg:w="2639309"/><text x="82.9904%" y="2559.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,639,309 samples, 1.04%)</title><rect x="82.7404%" y="2533" width="1.0372%" height="15" fill="rgb(211,96,50)" fg:x="210551755" fg:w="2639309"/><text x="82.9904%" y="2543.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,639,309 samples, 1.04%)</title><rect x="82.7404%" y="2517" width="1.0372%" height="15" fill="rgb(252,114,18)" fg:x="210551755" fg:w="2639309"/><text x="82.9904%" y="2527.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,639,309 samples, 1.04%)</title><rect x="82.7404%" y="2501" width="1.0372%" height="15" fill="rgb(223,58,37)" fg:x="210551755" fg:w="2639309"/><text x="82.9904%" y="2511.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,639,309 samples, 1.04%)</title><rect x="82.7404%" y="2485" width="1.0372%" height="15" fill="rgb(237,70,4)" fg:x="210551755" fg:w="2639309"/><text x="82.9904%" y="2495.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,379,005 samples, 0.54%)</title><rect x="83.2357%" y="2469" width="0.5419%" height="15" fill="rgb(244,85,46)" fg:x="211812059" fg:w="1379005"/><text x="83.4857%" y="2479.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,379,005 samples, 0.54%)</title><rect x="83.2357%" y="2453" width="0.5419%" height="15" fill="rgb(223,39,52)" fg:x="211812059" fg:w="1379005"/><text x="83.4857%" y="2463.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,379,005 samples, 0.54%)</title><rect x="83.2357%" y="2437" width="0.5419%" height="15" fill="rgb(218,200,14)" fg:x="211812059" fg:w="1379005"/><text x="83.4857%" y="2447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,088,798 samples, 0.43%)</title><rect x="83.7776%" y="2645" width="0.4279%" height="15" fill="rgb(208,171,16)" fg:x="213191064" fg:w="1088798"/><text x="84.0276%" y="2655.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1,088,798 samples, 0.43%)</title><rect x="83.7776%" y="2629" width="0.4279%" height="15" fill="rgb(234,200,18)" fg:x="213191064" fg:w="1088798"/><text x="84.0276%" y="2639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,088,798 samples, 0.43%)</title><rect x="83.7776%" y="2613" width="0.4279%" height="15" fill="rgb(228,45,11)" fg:x="213191064" fg:w="1088798"/><text x="84.0276%" y="2623.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,088,798 samples, 0.43%)</title><rect x="83.7776%" y="2597" width="0.4279%" height="15" fill="rgb(237,182,11)" fg:x="213191064" fg:w="1088798"/><text x="84.0276%" y="2607.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1,088,798 samples, 0.43%)</title><rect x="83.7776%" y="2581" width="0.4279%" height="15" fill="rgb(241,175,49)" fg:x="213191064" fg:w="1088798"/><text x="84.0276%" y="2591.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1,088,798 samples, 0.43%)</title><rect x="83.7776%" y="2565" width="0.4279%" height="15" fill="rgb(247,38,35)" fg:x="213191064" fg:w="1088798"/><text x="84.0276%" y="2575.50"></text></g><g><title>core::slice::memchr::memchr (1,088,798 samples, 0.43%)</title><rect x="83.7776%" y="2549" width="0.4279%" height="15" fill="rgb(228,39,49)" fg:x="213191064" fg:w="1088798"/><text x="84.0276%" y="2559.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1,088,798 samples, 0.43%)</title><rect x="83.7776%" y="2533" width="0.4279%" height="15" fill="rgb(226,101,26)" fg:x="213191064" fg:w="1088798"/><text x="84.0276%" y="2543.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (1,088,798 samples, 0.43%)</title><rect x="83.7776%" y="2517" width="0.4279%" height="15" fill="rgb(206,141,19)" fg:x="213191064" fg:w="1088798"/><text x="84.0276%" y="2527.50"></text></g><g><title>cfree (757,026 samples, 0.30%)</title><rect x="84.2055%" y="1333" width="0.2975%" height="15" fill="rgb(211,200,13)" fg:x="214279862" fg:w="757026"/><text x="84.4555%" y="1343.50"></text></g><g><title>[libc.so.6] (757,026 samples, 0.30%)</title><rect x="84.2055%" y="1317" width="0.2975%" height="15" fill="rgb(241,121,6)" fg:x="214279862" fg:w="757026"/><text x="84.4555%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2645" width="0.7593%" height="15" fill="rgb(234,221,29)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2629" width="0.7593%" height="15" fill="rgb(229,136,5)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2613" width="0.7593%" height="15" fill="rgb(238,36,11)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2597" width="0.7593%" height="15" fill="rgb(251,55,41)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2607.50"></text></g><g><title>core::mem::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2581" width="0.7593%" height="15" fill="rgb(242,34,40)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2565" width="0.7593%" height="15" fill="rgb(215,42,17)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2549" width="0.7593%" height="15" fill="rgb(207,44,46)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2533" width="0.7593%" height="15" fill="rgb(211,206,28)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2517" width="0.7593%" height="15" fill="rgb(237,167,16)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2527.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2501" width="0.7593%" height="15" fill="rgb(233,66,6)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2485" width="0.7593%" height="15" fill="rgb(246,123,29)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2469" width="0.7593%" height="15" fill="rgb(209,62,40)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2453" width="0.7593%" height="15" fill="rgb(218,4,25)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2437" width="0.7593%" height="15" fill="rgb(253,91,49)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2421" width="0.7593%" height="15" fill="rgb(228,155,29)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2431.50"></text></g><g><title>core::mem::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2405" width="0.7593%" height="15" fill="rgb(243,57,37)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2389" width="0.7593%" height="15" fill="rgb(244,167,17)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2373" width="0.7593%" height="15" fill="rgb(207,181,38)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2357" width="0.7593%" height="15" fill="rgb(211,8,23)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2341" width="0.7593%" height="15" fill="rgb(235,11,44)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2351.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2325" width="0.7593%" height="15" fill="rgb(248,18,52)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2335.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2309" width="0.7593%" height="15" fill="rgb(208,4,7)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2293" width="0.7593%" height="15" fill="rgb(240,17,39)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2277" width="0.7593%" height="15" fill="rgb(207,170,3)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2261" width="0.7593%" height="15" fill="rgb(236,100,52)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2245" width="0.7593%" height="15" fill="rgb(246,78,51)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2229" width="0.7593%" height="15" fill="rgb(211,17,15)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2213" width="0.7593%" height="15" fill="rgb(209,59,46)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2197" width="0.7593%" height="15" fill="rgb(210,92,25)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2181" width="0.7593%" height="15" fill="rgb(238,174,52)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2191.50"></text></g><g><title>core::mem::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2165" width="0.7593%" height="15" fill="rgb(230,73,7)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2149" width="0.7593%" height="15" fill="rgb(243,124,40)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2133" width="0.7593%" height="15" fill="rgb(244,170,11)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2143.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2117" width="0.7593%" height="15" fill="rgb(207,114,54)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2101" width="0.7593%" height="15" fill="rgb(205,42,20)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2111.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2085" width="0.7593%" height="15" fill="rgb(230,30,28)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2095.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2069" width="0.7593%" height="15" fill="rgb(205,73,54)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2053" width="0.7593%" height="15" fill="rgb(254,227,23)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2037" width="0.7593%" height="15" fill="rgb(228,202,34)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2047.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2021" width="0.7593%" height="15" fill="rgb(222,225,37)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="2005" width="0.7593%" height="15" fill="rgb(221,14,54)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1989" width="0.7593%" height="15" fill="rgb(254,102,2)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1973" width="0.7593%" height="15" fill="rgb(232,104,17)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1957" width="0.7593%" height="15" fill="rgb(250,220,14)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1967.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1941" width="0.7593%" height="15" fill="rgb(241,158,9)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1951.50"></text></g><g><title>core::mem::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1925" width="0.7593%" height="15" fill="rgb(246,9,43)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1909" width="0.7593%" height="15" fill="rgb(206,73,33)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1893" width="0.7593%" height="15" fill="rgb(222,79,8)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1903.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1877" width="0.7593%" height="15" fill="rgb(234,8,54)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1861" width="0.7593%" height="15" fill="rgb(209,134,38)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1845" width="0.7593%" height="15" fill="rgb(230,127,29)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1855.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1829" width="0.7593%" height="15" fill="rgb(242,44,41)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1813" width="0.7593%" height="15" fill="rgb(222,56,43)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1797" width="0.7593%" height="15" fill="rgb(238,39,47)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1781" width="0.7593%" height="15" fill="rgb(226,79,43)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1765" width="0.7593%" height="15" fill="rgb(242,105,53)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1749" width="0.7593%" height="15" fill="rgb(251,132,46)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1733" width="0.7593%" height="15" fill="rgb(231,77,14)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1717" width="0.7593%" height="15" fill="rgb(240,135,9)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1727.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1701" width="0.7593%" height="15" fill="rgb(248,109,14)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1711.50"></text></g><g><title>core::mem::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1685" width="0.7593%" height="15" fill="rgb(227,146,52)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1669" width="0.7593%" height="15" fill="rgb(232,54,3)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1653" width="0.7593%" height="15" fill="rgb(229,201,43)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1663.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1637" width="0.7593%" height="15" fill="rgb(252,161,33)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1621" width="0.7593%" height="15" fill="rgb(226,146,40)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1605" width="0.7593%" height="15" fill="rgb(219,47,25)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1615.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1589" width="0.7593%" height="15" fill="rgb(250,135,13)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1573" width="0.7593%" height="15" fill="rgb(219,229,18)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1557" width="0.7593%" height="15" fill="rgb(217,152,27)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1541" width="0.7593%" height="15" fill="rgb(225,71,47)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1525" width="0.7593%" height="15" fill="rgb(220,139,14)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1509" width="0.7593%" height="15" fill="rgb(247,54,32)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1493" width="0.7593%" height="15" fill="rgb(252,131,39)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1477" width="0.7593%" height="15" fill="rgb(210,108,39)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1461" width="0.7593%" height="15" fill="rgb(205,23,29)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1471.50"></text></g><g><title>core::mem::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1445" width="0.7593%" height="15" fill="rgb(246,139,46)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1429" width="0.7593%" height="15" fill="rgb(250,81,26)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1439.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1413" width="0.7593%" height="15" fill="rgb(214,104,7)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1423.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1397" width="0.7593%" height="15" fill="rgb(233,189,8)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1381" width="0.7593%" height="15" fill="rgb(228,141,17)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1365" width="0.7593%" height="15" fill="rgb(247,157,1)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1375.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,932,219 samples, 0.76%)</title><rect x="84.2055%" y="1349" width="0.7593%" height="15" fill="rgb(249,225,5)" fg:x="214279862" fg:w="1932219"/><text x="84.4555%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1333" width="0.4618%" height="15" fill="rgb(242,55,13)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1317" width="0.4618%" height="15" fill="rgb(230,49,50)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1301" width="0.4618%" height="15" fill="rgb(241,111,38)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1285" width="0.4618%" height="15" fill="rgb(252,155,4)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1269" width="0.4618%" height="15" fill="rgb(212,69,32)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1253" width="0.4618%" height="15" fill="rgb(243,107,47)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1237" width="0.4618%" height="15" fill="rgb(247,130,12)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1221" width="0.4618%" height="15" fill="rgb(233,74,16)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1231.50"></text></g><g><title>core::mem::drop (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1205" width="0.4618%" height="15" fill="rgb(208,58,18)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1189" width="0.4618%" height="15" fill="rgb(242,225,1)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1173" width="0.4618%" height="15" fill="rgb(249,39,40)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1183.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1157" width="0.4618%" height="15" fill="rgb(207,72,44)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1167.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1141" width="0.4618%" height="15" fill="rgb(215,193,12)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1125" width="0.4618%" height="15" fill="rgb(248,41,39)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1109" width="0.4618%" height="15" fill="rgb(253,85,4)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1093" width="0.4618%" height="15" fill="rgb(243,70,31)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1077" width="0.4618%" height="15" fill="rgb(253,195,26)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1061" width="0.4618%" height="15" fill="rgb(243,42,11)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1045" width="0.4618%" height="15" fill="rgb(239,66,17)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1029" width="0.4618%" height="15" fill="rgb(217,132,21)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1039.50"></text></g><g><title>cfree (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="1013" width="0.4618%" height="15" fill="rgb(252,202,21)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1023.50"></text></g><g><title>[libc.so.6] (1,175,193 samples, 0.46%)</title><rect x="84.5030%" y="997" width="0.4618%" height="15" fill="rgb(233,98,36)" fg:x="215036888" fg:w="1175193"/><text x="84.7530%" y="1007.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2533" width="0.4525%" height="15" fill="rgb(216,153,54)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2543.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2517" width="0.4525%" height="15" fill="rgb(250,99,7)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2501" width="0.4525%" height="15" fill="rgb(207,56,50)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2511.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2485" width="0.4525%" height="15" fill="rgb(244,61,34)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2495.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2469" width="0.4525%" height="15" fill="rgb(241,50,38)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2479.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2453" width="0.4525%" height="15" fill="rgb(212,166,30)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2463.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2437" width="0.4525%" height="15" fill="rgb(249,127,32)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2447.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2421" width="0.4525%" height="15" fill="rgb(209,103,0)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2405" width="0.4525%" height="15" fill="rgb(238,209,51)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2389" width="0.4525%" height="15" fill="rgb(237,56,23)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2399.50"></text></g><g><title>alloc::slice::hack::to_vec (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2373" width="0.4525%" height="15" fill="rgb(215,153,46)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2357" width="0.4525%" height="15" fill="rgb(224,49,31)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2341" width="0.4525%" height="15" fill="rgb(250,18,42)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2325" width="0.4525%" height="15" fill="rgb(215,176,39)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2309" width="0.4525%" height="15" fill="rgb(223,77,29)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2293" width="0.4525%" height="15" fill="rgb(234,94,52)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2277" width="0.4525%" height="15" fill="rgb(220,154,50)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2261" width="0.4525%" height="15" fill="rgb(212,11,10)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2271.50"></text></g><g><title>alloc::alloc::alloc (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2245" width="0.4525%" height="15" fill="rgb(205,166,19)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2255.50"></text></g><g><title>malloc (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2229" width="0.4525%" height="15" fill="rgb(244,198,16)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2239.50"></text></g><g><title>[libc.so.6] (1,151,557 samples, 0.45%)</title><rect x="84.9648%" y="2213" width="0.4525%" height="15" fill="rgb(219,69,12)" fg:x="216212081" fg:w="1151557"/><text x="85.2148%" y="2223.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,167,279 samples, 0.46%)</title><rect x="85.4173%" y="2405" width="0.4587%" height="15" fill="rgb(245,30,7)" fg:x="217363638" fg:w="1167279"/><text x="85.6673%" y="2415.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,167,279 samples, 0.46%)</title><rect x="85.4173%" y="2389" width="0.4587%" height="15" fill="rgb(218,221,48)" fg:x="217363638" fg:w="1167279"/><text x="85.6673%" y="2399.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,167,279 samples, 0.46%)</title><rect x="85.4173%" y="2373" width="0.4587%" height="15" fill="rgb(216,66,15)" fg:x="217363638" fg:w="1167279"/><text x="85.6673%" y="2383.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,167,279 samples, 0.46%)</title><rect x="85.4173%" y="2357" width="0.4587%" height="15" fill="rgb(226,122,50)" fg:x="217363638" fg:w="1167279"/><text x="85.6673%" y="2367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,167,279 samples, 0.46%)</title><rect x="85.4173%" y="2341" width="0.4587%" height="15" fill="rgb(239,156,16)" fg:x="217363638" fg:w="1167279"/><text x="85.6673%" y="2351.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,167,279 samples, 0.46%)</title><rect x="85.4173%" y="2325" width="0.4587%" height="15" fill="rgb(224,27,38)" fg:x="217363638" fg:w="1167279"/><text x="85.6673%" y="2335.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,167,279 samples, 0.46%)</title><rect x="85.4173%" y="2309" width="0.4587%" height="15" fill="rgb(224,39,27)" fg:x="217363638" fg:w="1167279"/><text x="85.6673%" y="2319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,779,161 samples, 0.70%)</title><rect x="85.4173%" y="2421" width="0.6992%" height="15" fill="rgb(215,92,29)" fg:x="217363638" fg:w="1779161"/><text x="85.6673%" y="2431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (611,882 samples, 0.24%)</title><rect x="85.8760%" y="2405" width="0.2405%" height="15" fill="rgb(207,159,16)" fg:x="218530917" fg:w="611882"/><text x="86.1260%" y="2415.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (611,882 samples, 0.24%)</title><rect x="85.8760%" y="2389" width="0.2405%" height="15" fill="rgb(238,163,47)" fg:x="218530917" fg:w="611882"/><text x="86.1260%" y="2399.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (611,882 samples, 0.24%)</title><rect x="85.8760%" y="2373" width="0.2405%" height="15" fill="rgb(219,91,49)" fg:x="218530917" fg:w="611882"/><text x="86.1260%" y="2383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (611,882 samples, 0.24%)</title><rect x="85.8760%" y="2357" width="0.2405%" height="15" fill="rgb(227,167,31)" fg:x="218530917" fg:w="611882"/><text x="86.1260%" y="2367.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (611,882 samples, 0.24%)</title><rect x="85.8760%" y="2341" width="0.2405%" height="15" fill="rgb(234,80,54)" fg:x="218530917" fg:w="611882"/><text x="86.1260%" y="2351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,037,424 samples, 0.41%)</title><rect x="86.1165%" y="2357" width="0.4077%" height="15" fill="rgb(212,114,2)" fg:x="219142799" fg:w="1037424"/><text x="86.3665%" y="2367.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,037,424 samples, 0.41%)</title><rect x="86.1165%" y="2341" width="0.4077%" height="15" fill="rgb(234,50,24)" fg:x="219142799" fg:w="1037424"/><text x="86.3665%" y="2351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,037,424 samples, 0.41%)</title><rect x="86.1165%" y="2325" width="0.4077%" height="15" fill="rgb(221,68,8)" fg:x="219142799" fg:w="1037424"/><text x="86.3665%" y="2335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,037,424 samples, 0.41%)</title><rect x="86.1165%" y="2309" width="0.4077%" height="15" fill="rgb(254,180,31)" fg:x="219142799" fg:w="1037424"/><text x="86.3665%" y="2319.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,037,424 samples, 0.41%)</title><rect x="86.1165%" y="2293" width="0.4077%" height="15" fill="rgb(247,130,50)" fg:x="219142799" fg:w="1037424"/><text x="86.3665%" y="2303.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,037,424 samples, 0.41%)</title><rect x="86.1165%" y="2277" width="0.4077%" height="15" fill="rgb(211,109,4)" fg:x="219142799" fg:w="1037424"/><text x="86.3665%" y="2287.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,037,424 samples, 0.41%)</title><rect x="86.1165%" y="2261" width="0.4077%" height="15" fill="rgb(238,50,21)" fg:x="219142799" fg:w="1037424"/><text x="86.3665%" y="2271.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (1,037,424 samples, 0.41%)</title><rect x="86.1165%" y="2245" width="0.4077%" height="15" fill="rgb(225,57,45)" fg:x="219142799" fg:w="1037424"/><text x="86.3665%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (1,037,424 samples, 0.41%)</title><rect x="86.1165%" y="2229" width="0.4077%" height="15" fill="rgb(209,196,50)" fg:x="219142799" fg:w="1037424"/><text x="86.3665%" y="2239.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,037,424 samples, 0.41%)</title><rect x="86.1165%" y="2213" width="0.4077%" height="15" fill="rgb(242,140,13)" fg:x="219142799" fg:w="1037424"/><text x="86.3665%" y="2223.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,037,424 samples, 0.41%)</title><rect x="86.1165%" y="2197" width="0.4077%" height="15" fill="rgb(217,111,7)" fg:x="219142799" fg:w="1037424"/><text x="86.3665%" y="2207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (1,037,424 samples, 0.41%)</title><rect x="86.1165%" y="2181" width="0.4077%" height="15" fill="rgb(253,193,51)" fg:x="219142799" fg:w="1037424"/><text x="86.3665%" y="2191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (560,090 samples, 0.22%)</title><rect x="86.5241%" y="2117" width="0.2201%" height="15" fill="rgb(252,70,29)" fg:x="220180223" fg:w="560090"/><text x="86.7741%" y="2127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (560,090 samples, 0.22%)</title><rect x="86.5241%" y="2101" width="0.2201%" height="15" fill="rgb(232,127,12)" fg:x="220180223" fg:w="560090"/><text x="86.7741%" y="2111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (560,090 samples, 0.22%)</title><rect x="86.5241%" y="2085" width="0.2201%" height="15" fill="rgb(211,180,21)" fg:x="220180223" fg:w="560090"/><text x="86.7741%" y="2095.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (560,090 samples, 0.22%)</title><rect x="86.5241%" y="2069" width="0.2201%" height="15" fill="rgb(229,72,13)" fg:x="220180223" fg:w="560090"/><text x="86.7741%" y="2079.50"></text></g><g><title>[libc.so.6] (560,090 samples, 0.22%)</title><rect x="86.5241%" y="2053" width="0.2201%" height="15" fill="rgb(240,211,49)" fg:x="220180223" fg:w="560090"/><text x="86.7741%" y="2063.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (368,186 samples, 0.14%)</title><rect x="86.7442%" y="2117" width="0.1447%" height="15" fill="rgb(219,149,40)" fg:x="220740313" fg:w="368186"/><text x="86.9942%" y="2127.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (368,186 samples, 0.14%)</title><rect x="86.7442%" y="2101" width="0.1447%" height="15" fill="rgb(210,127,46)" fg:x="220740313" fg:w="368186"/><text x="86.9942%" y="2111.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (368,186 samples, 0.14%)</title><rect x="86.7442%" y="2085" width="0.1447%" height="15" fill="rgb(220,106,7)" fg:x="220740313" fg:w="368186"/><text x="86.9942%" y="2095.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,388,076 samples, 0.55%)</title><rect x="86.5241%" y="2149" width="0.5455%" height="15" fill="rgb(249,31,22)" fg:x="220180223" fg:w="1388076"/><text x="86.7741%" y="2159.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,388,076 samples, 0.55%)</title><rect x="86.5241%" y="2133" width="0.5455%" height="15" fill="rgb(253,1,49)" fg:x="220180223" fg:w="1388076"/><text x="86.7741%" y="2143.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (459,800 samples, 0.18%)</title><rect x="86.8889%" y="2117" width="0.1807%" height="15" fill="rgb(227,144,33)" fg:x="221108499" fg:w="459800"/><text x="87.1389%" y="2127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (659,282 samples, 0.26%)</title><rect x="87.0696%" y="1925" width="0.2591%" height="15" fill="rgb(249,163,44)" fg:x="221568299" fg:w="659282"/><text x="87.3196%" y="1935.50"></text></g><g><title>core::ptr::write (659,282 samples, 0.26%)</title><rect x="87.0696%" y="1909" width="0.2591%" height="15" fill="rgb(234,15,39)" fg:x="221568299" fg:w="659282"/><text x="87.3196%" y="1919.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (967,914 samples, 0.38%)</title><rect x="88.0087%" y="1173" width="0.3804%" height="15" fill="rgb(207,66,16)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="1183.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (967,914 samples, 0.38%)</title><rect x="88.0087%" y="1157" width="0.3804%" height="15" fill="rgb(233,112,24)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="1167.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (967,914 samples, 0.38%)</title><rect x="88.0087%" y="1141" width="0.3804%" height="15" fill="rgb(230,90,22)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="1151.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (967,914 samples, 0.38%)</title><rect x="88.0087%" y="1125" width="0.3804%" height="15" fill="rgb(229,61,13)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="1135.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (967,914 samples, 0.38%)</title><rect x="88.0087%" y="1109" width="0.3804%" height="15" fill="rgb(225,57,24)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="1119.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (967,914 samples, 0.38%)</title><rect x="88.0087%" y="1093" width="0.3804%" height="15" fill="rgb(208,169,48)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="1103.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (967,914 samples, 0.38%)</title><rect x="88.0087%" y="1077" width="0.3804%" height="15" fill="rgb(244,218,51)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (967,914 samples, 0.38%)</title><rect x="88.0087%" y="1061" width="0.3804%" height="15" fill="rgb(214,148,10)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (967,914 samples, 0.38%)</title><rect x="88.0087%" y="1045" width="0.3804%" height="15" fill="rgb(225,174,27)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (967,914 samples, 0.38%)</title><rect x="88.0087%" y="1029" width="0.3804%" height="15" fill="rgb(230,96,26)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (967,914 samples, 0.38%)</title><rect x="88.0087%" y="1013" width="0.3804%" height="15" fill="rgb(232,10,30)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (967,914 samples, 0.38%)</title><rect x="88.0087%" y="997" width="0.3804%" height="15" fill="rgb(222,8,50)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (967,914 samples, 0.38%)</title><rect x="88.0087%" y="981" width="0.3804%" height="15" fill="rgb(213,81,27)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (967,914 samples, 0.38%)</title><rect x="88.0087%" y="965" width="0.3804%" height="15" fill="rgb(245,50,10)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (967,914 samples, 0.38%)</title><rect x="88.0087%" y="949" width="0.3804%" height="15" fill="rgb(216,100,18)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (967,914 samples, 0.38%)</title><rect x="88.0087%" y="933" width="0.3804%" height="15" fill="rgb(236,147,54)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (967,914 samples, 0.38%)</title><rect x="88.0087%" y="917" width="0.3804%" height="15" fill="rgb(205,143,26)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (967,914 samples, 0.38%)</title><rect x="88.0087%" y="901" width="0.3804%" height="15" fill="rgb(236,26,9)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="911.50"></text></g><g><title>alloc::alloc::alloc (967,914 samples, 0.38%)</title><rect x="88.0087%" y="885" width="0.3804%" height="15" fill="rgb(221,165,53)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="895.50"></text></g><g><title>malloc (967,914 samples, 0.38%)</title><rect x="88.0087%" y="869" width="0.3804%" height="15" fill="rgb(214,110,17)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="879.50"></text></g><g><title>[libc.so.6] (967,914 samples, 0.38%)</title><rect x="88.0087%" y="853" width="0.3804%" height="15" fill="rgb(237,197,12)" fg:x="223957917" fg:w="967914"/><text x="88.2587%" y="863.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="965" width="0.4285%" height="15" fill="rgb(205,84,17)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="975.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="949" width="0.4285%" height="15" fill="rgb(237,18,45)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="959.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="933" width="0.4285%" height="15" fill="rgb(221,87,14)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="943.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="917" width="0.4285%" height="15" fill="rgb(238,186,15)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="927.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="901" width="0.4285%" height="15" fill="rgb(208,115,11)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="911.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="885" width="0.4285%" height="15" fill="rgb(254,175,0)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="869" width="0.4285%" height="15" fill="rgb(227,24,42)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="853" width="0.4285%" height="15" fill="rgb(223,211,37)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="837" width="0.4285%" height="15" fill="rgb(235,49,27)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="821" width="0.4285%" height="15" fill="rgb(254,97,51)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="805" width="0.4285%" height="15" fill="rgb(249,51,40)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="789" width="0.4285%" height="15" fill="rgb(210,128,45)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="773" width="0.4285%" height="15" fill="rgb(224,137,50)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="757" width="0.4285%" height="15" fill="rgb(242,15,9)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="741" width="0.4285%" height="15" fill="rgb(233,187,41)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="725" width="0.4285%" height="15" fill="rgb(227,2,29)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="709" width="0.4285%" height="15" fill="rgb(222,70,3)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="693" width="0.4285%" height="15" fill="rgb(213,11,42)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="703.50"></text></g><g><title>alloc::alloc::alloc (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="677" width="0.4285%" height="15" fill="rgb(225,150,9)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="687.50"></text></g><g><title>malloc (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="661" width="0.4285%" height="15" fill="rgb(230,162,45)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="671.50"></text></g><g><title>[libc.so.6] (1,090,371 samples, 0.43%)</title><rect x="88.7760%" y="645" width="0.4285%" height="15" fill="rgb(222,14,52)" fg:x="225910598" fg:w="1090371"/><text x="89.0260%" y="655.50"></text></g><g><title>serde::de::MapAccess::next_entry (4,001,605 samples, 1.57%)</title><rect x="88.0087%" y="1205" width="1.5725%" height="15" fill="rgb(254,198,14)" fg:x="223957917" fg:w="4001605"/><text x="88.2587%" y="1215.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (4,001,605 samples, 1.57%)</title><rect x="88.0087%" y="1189" width="1.5725%" height="15" fill="rgb(220,217,30)" fg:x="223957917" fg:w="4001605"/><text x="88.2587%" y="1199.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,033,691 samples, 1.19%)</title><rect x="88.3890%" y="1173" width="1.1921%" height="15" fill="rgb(215,146,41)" fg:x="224925831" fg:w="3033691"/><text x="88.6390%" y="1183.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,033,691 samples, 1.19%)</title><rect x="88.3890%" y="1157" width="1.1921%" height="15" fill="rgb(217,27,36)" fg:x="224925831" fg:w="3033691"/><text x="88.6390%" y="1167.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,033,691 samples, 1.19%)</title><rect x="88.3890%" y="1141" width="1.1921%" height="15" fill="rgb(219,218,39)" fg:x="224925831" fg:w="3033691"/><text x="88.6390%" y="1151.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,033,691 samples, 1.19%)</title><rect x="88.3890%" y="1125" width="1.1921%" height="15" fill="rgb(219,4,42)" fg:x="224925831" fg:w="3033691"/><text x="88.6390%" y="1135.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,048,924 samples, 0.81%)</title><rect x="88.7760%" y="1109" width="0.8052%" height="15" fill="rgb(249,119,36)" fg:x="225910598" fg:w="2048924"/><text x="89.0260%" y="1119.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,048,924 samples, 0.81%)</title><rect x="88.7760%" y="1093" width="0.8052%" height="15" fill="rgb(209,23,33)" fg:x="225910598" fg:w="2048924"/><text x="89.0260%" y="1103.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,048,924 samples, 0.81%)</title><rect x="88.7760%" y="1077" width="0.8052%" height="15" fill="rgb(211,10,0)" fg:x="225910598" fg:w="2048924"/><text x="89.0260%" y="1087.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,048,924 samples, 0.81%)</title><rect x="88.7760%" y="1061" width="0.8052%" height="15" fill="rgb(208,99,37)" fg:x="225910598" fg:w="2048924"/><text x="89.0260%" y="1071.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,048,924 samples, 0.81%)</title><rect x="88.7760%" y="1045" width="0.8052%" height="15" fill="rgb(213,132,31)" fg:x="225910598" fg:w="2048924"/><text x="89.0260%" y="1055.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,048,924 samples, 0.81%)</title><rect x="88.7760%" y="1029" width="0.8052%" height="15" fill="rgb(243,129,40)" fg:x="225910598" fg:w="2048924"/><text x="89.0260%" y="1039.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,048,924 samples, 0.81%)</title><rect x="88.7760%" y="1013" width="0.8052%" height="15" fill="rgb(210,66,33)" fg:x="225910598" fg:w="2048924"/><text x="89.0260%" y="1023.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,048,924 samples, 0.81%)</title><rect x="88.7760%" y="997" width="0.8052%" height="15" fill="rgb(209,189,4)" fg:x="225910598" fg:w="2048924"/><text x="89.0260%" y="1007.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,048,924 samples, 0.81%)</title><rect x="88.7760%" y="981" width="0.8052%" height="15" fill="rgb(214,107,37)" fg:x="225910598" fg:w="2048924"/><text x="89.0260%" y="991.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (958,553 samples, 0.38%)</title><rect x="89.2045%" y="965" width="0.3767%" height="15" fill="rgb(245,88,54)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="975.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (958,553 samples, 0.38%)</title><rect x="89.2045%" y="949" width="0.3767%" height="15" fill="rgb(205,146,20)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="959.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (958,553 samples, 0.38%)</title><rect x="89.2045%" y="933" width="0.3767%" height="15" fill="rgb(220,161,25)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="943.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (958,553 samples, 0.38%)</title><rect x="89.2045%" y="917" width="0.3767%" height="15" fill="rgb(215,152,15)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="927.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (958,553 samples, 0.38%)</title><rect x="89.2045%" y="901" width="0.3767%" height="15" fill="rgb(233,192,44)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="911.50"></text></g><g><title>serde::de::SeqAccess::next_element (958,553 samples, 0.38%)</title><rect x="89.2045%" y="885" width="0.3767%" height="15" fill="rgb(240,170,46)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="895.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (958,553 samples, 0.38%)</title><rect x="89.2045%" y="869" width="0.3767%" height="15" fill="rgb(207,104,33)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="879.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (958,553 samples, 0.38%)</title><rect x="89.2045%" y="853" width="0.3767%" height="15" fill="rgb(219,21,39)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="863.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (958,553 samples, 0.38%)</title><rect x="89.2045%" y="837" width="0.3767%" height="15" fill="rgb(214,133,29)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="847.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (958,553 samples, 0.38%)</title><rect x="89.2045%" y="821" width="0.3767%" height="15" fill="rgb(226,93,6)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="831.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (958,553 samples, 0.38%)</title><rect x="89.2045%" y="805" width="0.3767%" height="15" fill="rgb(252,222,34)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="815.50"></text></g><g><title>serde::de::MapAccess::next_entry (958,553 samples, 0.38%)</title><rect x="89.2045%" y="789" width="0.3767%" height="15" fill="rgb(252,92,48)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="799.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (958,553 samples, 0.38%)</title><rect x="89.2045%" y="773" width="0.3767%" height="15" fill="rgb(245,223,24)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="783.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (958,553 samples, 0.38%)</title><rect x="89.2045%" y="757" width="0.3767%" height="15" fill="rgb(205,176,3)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="767.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (958,553 samples, 0.38%)</title><rect x="89.2045%" y="741" width="0.3767%" height="15" fill="rgb(235,151,15)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (958,553 samples, 0.38%)</title><rect x="89.2045%" y="725" width="0.3767%" height="15" fill="rgb(237,209,11)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="735.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (958,553 samples, 0.38%)</title><rect x="89.2045%" y="709" width="0.3767%" height="15" fill="rgb(243,227,24)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (958,553 samples, 0.38%)</title><rect x="89.2045%" y="693" width="0.3767%" height="15" fill="rgb(239,193,16)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="703.50"></text></g><g><title>serde::de::SeqAccess::next_element (958,553 samples, 0.38%)</title><rect x="89.2045%" y="677" width="0.3767%" height="15" fill="rgb(231,27,9)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="687.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (958,553 samples, 0.38%)</title><rect x="89.2045%" y="661" width="0.3767%" height="15" fill="rgb(219,169,10)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (958,553 samples, 0.38%)</title><rect x="89.2045%" y="645" width="0.3767%" height="15" fill="rgb(244,229,43)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (958,553 samples, 0.38%)</title><rect x="89.2045%" y="629" width="0.3767%" height="15" fill="rgb(254,38,20)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (958,553 samples, 0.38%)</title><rect x="89.2045%" y="613" width="0.3767%" height="15" fill="rgb(250,47,30)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (958,553 samples, 0.38%)</title><rect x="89.2045%" y="597" width="0.3767%" height="15" fill="rgb(224,124,36)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="607.50"></text></g><g><title>serde::de::MapAccess::next_entry (958,553 samples, 0.38%)</title><rect x="89.2045%" y="581" width="0.3767%" height="15" fill="rgb(246,68,51)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="591.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (958,553 samples, 0.38%)</title><rect x="89.2045%" y="565" width="0.3767%" height="15" fill="rgb(253,43,49)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (958,553 samples, 0.38%)</title><rect x="89.2045%" y="549" width="0.3767%" height="15" fill="rgb(219,54,36)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (958,553 samples, 0.38%)</title><rect x="89.2045%" y="533" width="0.3767%" height="15" fill="rgb(227,133,34)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (958,553 samples, 0.38%)</title><rect x="89.2045%" y="517" width="0.3767%" height="15" fill="rgb(247,227,15)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (958,553 samples, 0.38%)</title><rect x="89.2045%" y="501" width="0.3767%" height="15" fill="rgb(229,96,14)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (958,553 samples, 0.38%)</title><rect x="89.2045%" y="485" width="0.3767%" height="15" fill="rgb(220,79,17)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="495.50"></text></g><g><title>serde::de::SeqAccess::next_element (958,553 samples, 0.38%)</title><rect x="89.2045%" y="469" width="0.3767%" height="15" fill="rgb(205,131,53)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="479.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (958,553 samples, 0.38%)</title><rect x="89.2045%" y="453" width="0.3767%" height="15" fill="rgb(209,50,29)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="463.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (958,553 samples, 0.38%)</title><rect x="89.2045%" y="437" width="0.3767%" height="15" fill="rgb(245,86,46)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (958,553 samples, 0.38%)</title><rect x="89.2045%" y="421" width="0.3767%" height="15" fill="rgb(235,66,46)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (958,553 samples, 0.38%)</title><rect x="89.2045%" y="405" width="0.3767%" height="15" fill="rgb(232,148,31)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (958,553 samples, 0.38%)</title><rect x="89.2045%" y="389" width="0.3767%" height="15" fill="rgb(217,149,8)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="399.50"></text></g><g><title>serde::de::MapAccess::next_entry (958,553 samples, 0.38%)</title><rect x="89.2045%" y="373" width="0.3767%" height="15" fill="rgb(209,183,11)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="383.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (958,553 samples, 0.38%)</title><rect x="89.2045%" y="357" width="0.3767%" height="15" fill="rgb(208,55,20)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (958,553 samples, 0.38%)</title><rect x="89.2045%" y="341" width="0.3767%" height="15" fill="rgb(218,39,14)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="351.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (958,553 samples, 0.38%)</title><rect x="89.2045%" y="325" width="0.3767%" height="15" fill="rgb(216,169,33)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="335.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (958,553 samples, 0.38%)</title><rect x="89.2045%" y="309" width="0.3767%" height="15" fill="rgb(233,80,24)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (958,553 samples, 0.38%)</title><rect x="89.2045%" y="293" width="0.3767%" height="15" fill="rgb(213,179,31)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (958,553 samples, 0.38%)</title><rect x="89.2045%" y="277" width="0.3767%" height="15" fill="rgb(209,19,5)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="287.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (958,553 samples, 0.38%)</title><rect x="89.2045%" y="261" width="0.3767%" height="15" fill="rgb(219,18,35)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="271.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (958,553 samples, 0.38%)</title><rect x="89.2045%" y="245" width="0.3767%" height="15" fill="rgb(209,169,16)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (958,553 samples, 0.38%)</title><rect x="89.2045%" y="229" width="0.3767%" height="15" fill="rgb(245,90,51)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (958,553 samples, 0.38%)</title><rect x="89.2045%" y="213" width="0.3767%" height="15" fill="rgb(220,99,45)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (958,553 samples, 0.38%)</title><rect x="89.2045%" y="197" width="0.3767%" height="15" fill="rgb(249,89,25)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (958,553 samples, 0.38%)</title><rect x="89.2045%" y="181" width="0.3767%" height="15" fill="rgb(239,193,0)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (958,553 samples, 0.38%)</title><rect x="89.2045%" y="165" width="0.3767%" height="15" fill="rgb(231,126,1)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (958,553 samples, 0.38%)</title><rect x="89.2045%" y="149" width="0.3767%" height="15" fill="rgb(243,166,3)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (958,553 samples, 0.38%)</title><rect x="89.2045%" y="133" width="0.3767%" height="15" fill="rgb(223,22,34)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (958,553 samples, 0.38%)</title><rect x="89.2045%" y="117" width="0.3767%" height="15" fill="rgb(251,52,51)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (958,553 samples, 0.38%)</title><rect x="89.2045%" y="101" width="0.3767%" height="15" fill="rgb(221,165,28)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (958,553 samples, 0.38%)</title><rect x="89.2045%" y="85" width="0.3767%" height="15" fill="rgb(218,121,47)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (958,553 samples, 0.38%)</title><rect x="89.2045%" y="69" width="0.3767%" height="15" fill="rgb(209,120,9)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="79.50"></text></g><g><title>alloc::alloc::alloc (958,553 samples, 0.38%)</title><rect x="89.2045%" y="53" width="0.3767%" height="15" fill="rgb(236,68,12)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="63.50"></text></g><g><title>malloc (958,553 samples, 0.38%)</title><rect x="89.2045%" y="37" width="0.3767%" height="15" fill="rgb(225,194,26)" fg:x="227000969" fg:w="958553"/><text x="89.4545%" y="47.50"></text></g><g><title>serde::de::MapAccess::next_entry (5,168,072 samples, 2.03%)</title><rect x="88.0087%" y="1413" width="2.0309%" height="15" fill="rgb(231,84,39)" fg:x="223957917" fg:w="5168072"/><text x="88.2587%" y="1423.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (5,168,072 samples, 2.03%)</title><rect x="88.0087%" y="1397" width="2.0309%" height="15" fill="rgb(210,11,45)" fg:x="223957917" fg:w="5168072"/><text x="88.2587%" y="1407.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,168,072 samples, 2.03%)</title><rect x="88.0087%" y="1381" width="2.0309%" height="15" fill="rgb(224,54,52)" fg:x="223957917" fg:w="5168072"/><text x="88.2587%" y="1391.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,168,072 samples, 2.03%)</title><rect x="88.0087%" y="1365" width="2.0309%" height="15" fill="rgb(238,102,14)" fg:x="223957917" fg:w="5168072"/><text x="88.2587%" y="1375.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,168,072 samples, 2.03%)</title><rect x="88.0087%" y="1349" width="2.0309%" height="15" fill="rgb(243,160,52)" fg:x="223957917" fg:w="5168072"/><text x="88.2587%" y="1359.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,168,072 samples, 2.03%)</title><rect x="88.0087%" y="1333" width="2.0309%" height="15" fill="rgb(216,114,19)" fg:x="223957917" fg:w="5168072"/><text x="88.2587%" y="1343.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,168,072 samples, 2.03%)</title><rect x="88.0087%" y="1317" width="2.0309%" height="15" fill="rgb(244,166,37)" fg:x="223957917" fg:w="5168072"/><text x="88.2587%" y="1327.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (5,168,072 samples, 2.03%)</title><rect x="88.0087%" y="1301" width="2.0309%" height="15" fill="rgb(246,29,44)" fg:x="223957917" fg:w="5168072"/><text x="88.2587%" y="1311.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,168,072 samples, 2.03%)</title><rect x="88.0087%" y="1285" width="2.0309%" height="15" fill="rgb(215,56,53)" fg:x="223957917" fg:w="5168072"/><text x="88.2587%" y="1295.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,168,072 samples, 2.03%)</title><rect x="88.0087%" y="1269" width="2.0309%" height="15" fill="rgb(217,60,2)" fg:x="223957917" fg:w="5168072"/><text x="88.2587%" y="1279.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,168,072 samples, 2.03%)</title><rect x="88.0087%" y="1253" width="2.0309%" height="15" fill="rgb(207,26,24)" fg:x="223957917" fg:w="5168072"/><text x="88.2587%" y="1263.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,168,072 samples, 2.03%)</title><rect x="88.0087%" y="1237" width="2.0309%" height="15" fill="rgb(252,210,15)" fg:x="223957917" fg:w="5168072"/><text x="88.2587%" y="1247.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,168,072 samples, 2.03%)</title><rect x="88.0087%" y="1221" width="2.0309%" height="15" fill="rgb(253,209,26)" fg:x="223957917" fg:w="5168072"/><text x="88.2587%" y="1231.50">&lt;..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,166,467 samples, 0.46%)</title><rect x="89.5812%" y="1205" width="0.4584%" height="15" fill="rgb(238,170,14)" fg:x="227959522" fg:w="1166467"/><text x="89.8312%" y="1215.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,166,467 samples, 0.46%)</title><rect x="89.5812%" y="1189" width="0.4584%" height="15" fill="rgb(216,178,15)" fg:x="227959522" fg:w="1166467"/><text x="89.8312%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,166,467 samples, 0.46%)</title><rect x="89.5812%" y="1173" width="0.4584%" height="15" fill="rgb(250,197,2)" fg:x="227959522" fg:w="1166467"/><text x="89.8312%" y="1183.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,166,467 samples, 0.46%)</title><rect x="89.5812%" y="1157" width="0.4584%" height="15" fill="rgb(212,70,42)" fg:x="227959522" fg:w="1166467"/><text x="89.8312%" y="1167.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,166,467 samples, 0.46%)</title><rect x="89.5812%" y="1141" width="0.4584%" height="15" fill="rgb(227,213,9)" fg:x="227959522" fg:w="1166467"/><text x="89.8312%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,166,467 samples, 0.46%)</title><rect x="89.5812%" y="1125" width="0.4584%" height="15" fill="rgb(245,99,25)" fg:x="227959522" fg:w="1166467"/><text x="89.8312%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (1,166,467 samples, 0.46%)</title><rect x="89.5812%" y="1109" width="0.4584%" height="15" fill="rgb(250,82,29)" fg:x="227959522" fg:w="1166467"/><text x="89.8312%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (1,166,467 samples, 0.46%)</title><rect x="89.5812%" y="1093" width="0.4584%" height="15" fill="rgb(241,226,54)" fg:x="227959522" fg:w="1166467"/><text x="89.8312%" y="1103.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,166,467 samples, 0.46%)</title><rect x="89.5812%" y="1077" width="0.4584%" height="15" fill="rgb(221,99,41)" fg:x="227959522" fg:w="1166467"/><text x="89.8312%" y="1087.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,166,467 samples, 0.46%)</title><rect x="89.5812%" y="1061" width="0.4584%" height="15" fill="rgb(213,90,21)" fg:x="227959522" fg:w="1166467"/><text x="89.8312%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (1,166,467 samples, 0.46%)</title><rect x="89.5812%" y="1045" width="0.4584%" height="15" fill="rgb(205,208,24)" fg:x="227959522" fg:w="1166467"/><text x="89.8312%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (724,971 samples, 0.28%)</title><rect x="90.0395%" y="1381" width="0.2849%" height="15" fill="rgb(246,31,12)" fg:x="229125989" fg:w="724971"/><text x="90.2895%" y="1391.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (724,971 samples, 0.28%)</title><rect x="90.0395%" y="1365" width="0.2849%" height="15" fill="rgb(213,154,6)" fg:x="229125989" fg:w="724971"/><text x="90.2895%" y="1375.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (724,971 samples, 0.28%)</title><rect x="90.0395%" y="1349" width="0.2849%" height="15" fill="rgb(222,163,29)" fg:x="229125989" fg:w="724971"/><text x="90.2895%" y="1359.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (724,971 samples, 0.28%)</title><rect x="90.0395%" y="1333" width="0.2849%" height="15" fill="rgb(227,201,8)" fg:x="229125989" fg:w="724971"/><text x="90.2895%" y="1343.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (724,971 samples, 0.28%)</title><rect x="90.0395%" y="1317" width="0.2849%" height="15" fill="rgb(233,9,32)" fg:x="229125989" fg:w="724971"/><text x="90.2895%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (724,971 samples, 0.28%)</title><rect x="90.0395%" y="1301" width="0.2849%" height="15" fill="rgb(217,54,24)" fg:x="229125989" fg:w="724971"/><text x="90.2895%" y="1311.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (724,971 samples, 0.28%)</title><rect x="90.0395%" y="1285" width="0.2849%" height="15" fill="rgb(235,192,0)" fg:x="229125989" fg:w="724971"/><text x="90.2895%" y="1295.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (724,971 samples, 0.28%)</title><rect x="90.0395%" y="1269" width="0.2849%" height="15" fill="rgb(235,45,9)" fg:x="229125989" fg:w="724971"/><text x="90.2895%" y="1279.50"></text></g><g><title>[libc.so.6] (724,971 samples, 0.28%)</title><rect x="90.0395%" y="1253" width="0.2849%" height="15" fill="rgb(246,42,40)" fg:x="229125989" fg:w="724971"/><text x="90.2895%" y="1263.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,953,977 samples, 3.13%)</title><rect x="87.6472%" y="1621" width="3.1257%" height="15" fill="rgb(248,111,24)" fg:x="223038219" fg:w="7953977"/><text x="87.8972%" y="1631.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (7,953,977 samples, 3.13%)</title><rect x="87.6472%" y="1605" width="3.1257%" height="15" fill="rgb(249,65,22)" fg:x="223038219" fg:w="7953977"/><text x="87.8972%" y="1615.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,034,279 samples, 2.76%)</title><rect x="88.0087%" y="1589" width="2.7643%" height="15" fill="rgb(238,111,51)" fg:x="223957917" fg:w="7034279"/><text x="88.2587%" y="1599.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,034,279 samples, 2.76%)</title><rect x="88.0087%" y="1573" width="2.7643%" height="15" fill="rgb(250,118,22)" fg:x="223957917" fg:w="7034279"/><text x="88.2587%" y="1583.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,034,279 samples, 2.76%)</title><rect x="88.0087%" y="1557" width="2.7643%" height="15" fill="rgb(234,84,26)" fg:x="223957917" fg:w="7034279"/><text x="88.2587%" y="1567.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,034,279 samples, 2.76%)</title><rect x="88.0087%" y="1541" width="2.7643%" height="15" fill="rgb(243,172,12)" fg:x="223957917" fg:w="7034279"/><text x="88.2587%" y="1551.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,034,279 samples, 2.76%)</title><rect x="88.0087%" y="1525" width="2.7643%" height="15" fill="rgb(236,150,49)" fg:x="223957917" fg:w="7034279"/><text x="88.2587%" y="1535.50">&lt;s..</text></g><g><title>serde::de::SeqAccess::next_element (7,034,279 samples, 2.76%)</title><rect x="88.0087%" y="1509" width="2.7643%" height="15" fill="rgb(225,197,26)" fg:x="223957917" fg:w="7034279"/><text x="88.2587%" y="1519.50">se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,034,279 samples, 2.76%)</title><rect x="88.0087%" y="1493" width="2.7643%" height="15" fill="rgb(214,17,42)" fg:x="223957917" fg:w="7034279"/><text x="88.2587%" y="1503.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,034,279 samples, 2.76%)</title><rect x="88.0087%" y="1477" width="2.7643%" height="15" fill="rgb(224,165,40)" fg:x="223957917" fg:w="7034279"/><text x="88.2587%" y="1487.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,034,279 samples, 2.76%)</title><rect x="88.0087%" y="1461" width="2.7643%" height="15" fill="rgb(246,100,4)" fg:x="223957917" fg:w="7034279"/><text x="88.2587%" y="1471.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,034,279 samples, 2.76%)</title><rect x="88.0087%" y="1445" width="2.7643%" height="15" fill="rgb(222,103,0)" fg:x="223957917" fg:w="7034279"/><text x="88.2587%" y="1455.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,034,279 samples, 2.76%)</title><rect x="88.0087%" y="1429" width="2.7643%" height="15" fill="rgb(227,189,26)" fg:x="223957917" fg:w="7034279"/><text x="88.2587%" y="1439.50">&lt;s..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,866,207 samples, 0.73%)</title><rect x="90.0395%" y="1413" width="0.7334%" height="15" fill="rgb(214,202,17)" fg:x="229125989" fg:w="1866207"/><text x="90.2895%" y="1423.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,866,207 samples, 0.73%)</title><rect x="90.0395%" y="1397" width="0.7334%" height="15" fill="rgb(229,111,3)" fg:x="229125989" fg:w="1866207"/><text x="90.2895%" y="1407.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,141,236 samples, 0.45%)</title><rect x="90.3244%" y="1381" width="0.4485%" height="15" fill="rgb(229,172,15)" fg:x="229850960" fg:w="1141236"/><text x="90.5744%" y="1391.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,141,236 samples, 0.45%)</title><rect x="90.3244%" y="1365" width="0.4485%" height="15" fill="rgb(230,224,35)" fg:x="229850960" fg:w="1141236"/><text x="90.5744%" y="1375.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1,141,236 samples, 0.45%)</title><rect x="90.3244%" y="1349" width="0.4485%" height="15" fill="rgb(251,141,6)" fg:x="229850960" fg:w="1141236"/><text x="90.5744%" y="1359.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1,141,236 samples, 0.45%)</title><rect x="90.3244%" y="1333" width="0.4485%" height="15" fill="rgb(225,208,6)" fg:x="229850960" fg:w="1141236"/><text x="90.5744%" y="1343.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,141,236 samples, 0.45%)</title><rect x="90.3244%" y="1317" width="0.4485%" height="15" fill="rgb(246,181,16)" fg:x="229850960" fg:w="1141236"/><text x="90.5744%" y="1327.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,141,236 samples, 0.45%)</title><rect x="90.3244%" y="1301" width="0.4485%" height="15" fill="rgb(227,129,36)" fg:x="229850960" fg:w="1141236"/><text x="90.5744%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,141,236 samples, 0.45%)</title><rect x="90.3244%" y="1285" width="0.4485%" height="15" fill="rgb(248,117,24)" fg:x="229850960" fg:w="1141236"/><text x="90.5744%" y="1295.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,141,236 samples, 0.45%)</title><rect x="90.3244%" y="1269" width="0.4485%" height="15" fill="rgb(214,185,35)" fg:x="229850960" fg:w="1141236"/><text x="90.5744%" y="1279.50"></text></g><g><title>alloc::alloc::alloc (1,141,236 samples, 0.45%)</title><rect x="90.3244%" y="1253" width="0.4485%" height="15" fill="rgb(236,150,34)" fg:x="229850960" fg:w="1141236"/><text x="90.5744%" y="1263.50"></text></g><g><title>malloc (1,141,236 samples, 0.45%)</title><rect x="90.3244%" y="1237" width="0.4485%" height="15" fill="rgb(243,228,27)" fg:x="229850960" fg:w="1141236"/><text x="90.5744%" y="1247.50"></text></g><g><title>[libc.so.6] (1,141,236 samples, 0.45%)</title><rect x="90.3244%" y="1221" width="0.4485%" height="15" fill="rgb(245,77,44)" fg:x="229850960" fg:w="1141236"/><text x="90.5744%" y="1231.50"></text></g><g><title>serde::de::MapAccess::next_entry (9,655,273 samples, 3.79%)</title><rect x="87.3287%" y="1829" width="3.7942%" height="15" fill="rgb(235,214,42)" fg:x="222227581" fg:w="9655273"/><text x="87.5787%" y="1839.50">serd..</text></g><g><title>serde::de::MapAccess::next_entry_seed (9,655,273 samples, 3.79%)</title><rect x="87.3287%" y="1813" width="3.7942%" height="15" fill="rgb(221,74,3)" fg:x="222227581" fg:w="9655273"/><text x="87.5787%" y="1823.50">serd..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (9,655,273 samples, 3.79%)</title><rect x="87.3287%" y="1797" width="3.7942%" height="15" fill="rgb(206,121,29)" fg:x="222227581" fg:w="9655273"/><text x="87.5787%" y="1807.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,655,273 samples, 3.79%)</title><rect x="87.3287%" y="1781" width="3.7942%" height="15" fill="rgb(249,131,53)" fg:x="222227581" fg:w="9655273"/><text x="87.5787%" y="1791.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,655,273 samples, 3.79%)</title><rect x="87.3287%" y="1765" width="3.7942%" height="15" fill="rgb(236,170,29)" fg:x="222227581" fg:w="9655273"/><text x="87.5787%" y="1775.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,655,273 samples, 3.79%)</title><rect x="87.3287%" y="1749" width="3.7942%" height="15" fill="rgb(247,96,15)" fg:x="222227581" fg:w="9655273"/><text x="87.5787%" y="1759.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (9,655,273 samples, 3.79%)</title><rect x="87.3287%" y="1733" width="3.7942%" height="15" fill="rgb(211,210,7)" fg:x="222227581" fg:w="9655273"/><text x="87.5787%" y="1743.50">&lt;ser..</text></g><g><title>serde::de::SeqAccess::next_element (8,844,635 samples, 3.48%)</title><rect x="87.6472%" y="1717" width="3.4757%" height="15" fill="rgb(240,88,50)" fg:x="223038219" fg:w="8844635"/><text x="87.8972%" y="1727.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (8,844,635 samples, 3.48%)</title><rect x="87.6472%" y="1701" width="3.4757%" height="15" fill="rgb(209,229,26)" fg:x="223038219" fg:w="8844635"/><text x="87.8972%" y="1711.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8,844,635 samples, 3.48%)</title><rect x="87.6472%" y="1685" width="3.4757%" height="15" fill="rgb(210,68,23)" fg:x="223038219" fg:w="8844635"/><text x="87.8972%" y="1695.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8,844,635 samples, 3.48%)</title><rect x="87.6472%" y="1669" width="3.4757%" height="15" fill="rgb(229,180,13)" fg:x="223038219" fg:w="8844635"/><text x="87.8972%" y="1679.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8,844,635 samples, 3.48%)</title><rect x="87.6472%" y="1653" width="3.4757%" height="15" fill="rgb(236,53,44)" fg:x="223038219" fg:w="8844635"/><text x="87.8972%" y="1663.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8,844,635 samples, 3.48%)</title><rect x="87.6472%" y="1637" width="3.4757%" height="15" fill="rgb(244,214,29)" fg:x="223038219" fg:w="8844635"/><text x="87.8972%" y="1647.50">&lt;se..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (890,658 samples, 0.35%)</title><rect x="90.7729%" y="1621" width="0.3500%" height="15" fill="rgb(220,75,29)" fg:x="230992196" fg:w="890658"/><text x="91.0229%" y="1631.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (890,658 samples, 0.35%)</title><rect x="90.7729%" y="1605" width="0.3500%" height="15" fill="rgb(214,183,37)" fg:x="230992196" fg:w="890658"/><text x="91.0229%" y="1615.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (890,658 samples, 0.35%)</title><rect x="90.7729%" y="1589" width="0.3500%" height="15" fill="rgb(239,117,29)" fg:x="230992196" fg:w="890658"/><text x="91.0229%" y="1599.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (890,658 samples, 0.35%)</title><rect x="90.7729%" y="1573" width="0.3500%" height="15" fill="rgb(237,171,35)" fg:x="230992196" fg:w="890658"/><text x="91.0229%" y="1583.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (890,658 samples, 0.35%)</title><rect x="90.7729%" y="1557" width="0.3500%" height="15" fill="rgb(229,178,53)" fg:x="230992196" fg:w="890658"/><text x="91.0229%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (890,658 samples, 0.35%)</title><rect x="90.7729%" y="1541" width="0.3500%" height="15" fill="rgb(210,102,19)" fg:x="230992196" fg:w="890658"/><text x="91.0229%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (890,658 samples, 0.35%)</title><rect x="90.7729%" y="1525" width="0.3500%" height="15" fill="rgb(235,127,22)" fg:x="230992196" fg:w="890658"/><text x="91.0229%" y="1535.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (890,658 samples, 0.35%)</title><rect x="90.7729%" y="1509" width="0.3500%" height="15" fill="rgb(244,31,31)" fg:x="230992196" fg:w="890658"/><text x="91.0229%" y="1519.50"></text></g><g><title>serde::de::MapAccess::next_entry (11,426,041 samples, 4.49%)</title><rect x="87.0696%" y="2037" width="4.4901%" height="15" fill="rgb(231,43,21)" fg:x="221568299" fg:w="11426041"/><text x="87.3196%" y="2047.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,426,041 samples, 4.49%)</title><rect x="87.0696%" y="2021" width="4.4901%" height="15" fill="rgb(217,131,35)" fg:x="221568299" fg:w="11426041"/><text x="87.3196%" y="2031.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,426,041 samples, 4.49%)</title><rect x="87.0696%" y="2005" width="4.4901%" height="15" fill="rgb(221,149,4)" fg:x="221568299" fg:w="11426041"/><text x="87.3196%" y="2015.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,426,041 samples, 4.49%)</title><rect x="87.0696%" y="1989" width="4.4901%" height="15" fill="rgb(232,170,28)" fg:x="221568299" fg:w="11426041"/><text x="87.3196%" y="1999.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,426,041 samples, 4.49%)</title><rect x="87.0696%" y="1973" width="4.4901%" height="15" fill="rgb(238,56,10)" fg:x="221568299" fg:w="11426041"/><text x="87.3196%" y="1983.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,426,041 samples, 4.49%)</title><rect x="87.0696%" y="1957" width="4.4901%" height="15" fill="rgb(235,196,14)" fg:x="221568299" fg:w="11426041"/><text x="87.3196%" y="1967.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,426,041 samples, 4.49%)</title><rect x="87.0696%" y="1941" width="4.4901%" height="15" fill="rgb(216,45,48)" fg:x="221568299" fg:w="11426041"/><text x="87.3196%" y="1951.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (10,766,759 samples, 4.23%)</title><rect x="87.3287%" y="1925" width="4.2310%" height="15" fill="rgb(238,213,17)" fg:x="222227581" fg:w="10766759"/><text x="87.5787%" y="1935.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (10,766,759 samples, 4.23%)</title><rect x="87.3287%" y="1909" width="4.2310%" height="15" fill="rgb(212,13,2)" fg:x="222227581" fg:w="10766759"/><text x="87.5787%" y="1919.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,766,759 samples, 4.23%)</title><rect x="87.3287%" y="1893" width="4.2310%" height="15" fill="rgb(240,114,20)" fg:x="222227581" fg:w="10766759"/><text x="87.5787%" y="1903.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,766,759 samples, 4.23%)</title><rect x="87.3287%" y="1877" width="4.2310%" height="15" fill="rgb(228,41,40)" fg:x="222227581" fg:w="10766759"/><text x="87.5787%" y="1887.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,766,759 samples, 4.23%)</title><rect x="87.3287%" y="1861" width="4.2310%" height="15" fill="rgb(244,132,35)" fg:x="222227581" fg:w="10766759"/><text x="87.5787%" y="1871.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,766,759 samples, 4.23%)</title><rect x="87.3287%" y="1845" width="4.2310%" height="15" fill="rgb(253,189,4)" fg:x="222227581" fg:w="10766759"/><text x="87.5787%" y="1855.50">&lt;serd..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,111,486 samples, 0.44%)</title><rect x="91.1229%" y="1829" width="0.4368%" height="15" fill="rgb(224,37,19)" fg:x="231882854" fg:w="1111486"/><text x="91.3729%" y="1839.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,111,486 samples, 0.44%)</title><rect x="91.1229%" y="1813" width="0.4368%" height="15" fill="rgb(235,223,18)" fg:x="231882854" fg:w="1111486"/><text x="91.3729%" y="1823.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,111,486 samples, 0.44%)</title><rect x="91.1229%" y="1797" width="0.4368%" height="15" fill="rgb(235,163,25)" fg:x="231882854" fg:w="1111486"/><text x="91.3729%" y="1807.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,111,486 samples, 0.44%)</title><rect x="91.1229%" y="1781" width="0.4368%" height="15" fill="rgb(217,145,28)" fg:x="231882854" fg:w="1111486"/><text x="91.3729%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,111,486 samples, 0.44%)</title><rect x="91.1229%" y="1765" width="0.4368%" height="15" fill="rgb(223,223,32)" fg:x="231882854" fg:w="1111486"/><text x="91.3729%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,111,486 samples, 0.44%)</title><rect x="91.1229%" y="1749" width="0.4368%" height="15" fill="rgb(227,189,39)" fg:x="231882854" fg:w="1111486"/><text x="91.3729%" y="1759.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (1,111,486 samples, 0.44%)</title><rect x="91.1229%" y="1733" width="0.4368%" height="15" fill="rgb(248,10,22)" fg:x="231882854" fg:w="1111486"/><text x="91.3729%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (1,111,486 samples, 0.44%)</title><rect x="91.1229%" y="1717" width="0.4368%" height="15" fill="rgb(248,46,39)" fg:x="231882854" fg:w="1111486"/><text x="91.3729%" y="1727.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,111,486 samples, 0.44%)</title><rect x="91.1229%" y="1701" width="0.4368%" height="15" fill="rgb(248,113,48)" fg:x="231882854" fg:w="1111486"/><text x="91.3729%" y="1711.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,111,486 samples, 0.44%)</title><rect x="91.1229%" y="1685" width="0.4368%" height="15" fill="rgb(245,16,25)" fg:x="231882854" fg:w="1111486"/><text x="91.3729%" y="1695.50"></text></g><g><title>serde::de::MapAccess::next_entry (16,593,256 samples, 6.52%)</title><rect x="85.4173%" y="2453" width="6.5206%" height="15" fill="rgb(249,152,16)" fg:x="217363638" fg:w="16593256"/><text x="85.6673%" y="2463.50">serde::de..</text></g><g><title>serde::de::MapAccess::next_entry_seed (16,593,256 samples, 6.52%)</title><rect x="85.4173%" y="2437" width="6.5206%" height="15" fill="rgb(250,16,1)" fg:x="217363638" fg:w="16593256"/><text x="85.6673%" y="2447.50">serde::de..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (14,814,095 samples, 5.82%)</title><rect x="86.1165%" y="2421" width="5.8215%" height="15" fill="rgb(249,138,3)" fg:x="219142799" fg:w="14814095"/><text x="86.3665%" y="2431.50">&lt;serde_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14,814,095 samples, 5.82%)</title><rect x="86.1165%" y="2405" width="5.8215%" height="15" fill="rgb(227,71,41)" fg:x="219142799" fg:w="14814095"/><text x="86.3665%" y="2415.50">&lt;core::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,814,095 samples, 5.82%)</title><rect x="86.1165%" y="2389" width="5.8215%" height="15" fill="rgb(209,184,23)" fg:x="219142799" fg:w="14814095"/><text x="86.3665%" y="2399.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,814,095 samples, 5.82%)</title><rect x="86.1165%" y="2373" width="5.8215%" height="15" fill="rgb(223,215,31)" fg:x="219142799" fg:w="14814095"/><text x="86.3665%" y="2383.50">&lt;&amp;mut s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (13,776,671 samples, 5.41%)</title><rect x="86.5241%" y="2357" width="5.4138%" height="15" fill="rgb(210,146,28)" fg:x="220180223" fg:w="13776671"/><text x="86.7741%" y="2367.50">&lt;serde_..</text></g><g><title>serde::de::SeqAccess::next_element (13,776,671 samples, 5.41%)</title><rect x="86.5241%" y="2341" width="5.4138%" height="15" fill="rgb(209,183,41)" fg:x="220180223" fg:w="13776671"/><text x="86.7741%" y="2351.50">serde::..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (13,776,671 samples, 5.41%)</title><rect x="86.5241%" y="2325" width="5.4138%" height="15" fill="rgb(209,224,45)" fg:x="220180223" fg:w="13776671"/><text x="86.7741%" y="2335.50">&lt;serde_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13,776,671 samples, 5.41%)</title><rect x="86.5241%" y="2309" width="5.4138%" height="15" fill="rgb(224,209,51)" fg:x="220180223" fg:w="13776671"/><text x="86.7741%" y="2319.50">&lt;core::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13,776,671 samples, 5.41%)</title><rect x="86.5241%" y="2293" width="5.4138%" height="15" fill="rgb(223,17,39)" fg:x="220180223" fg:w="13776671"/><text x="86.7741%" y="2303.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13,776,671 samples, 5.41%)</title><rect x="86.5241%" y="2277" width="5.4138%" height="15" fill="rgb(234,204,37)" fg:x="220180223" fg:w="13776671"/><text x="86.7741%" y="2287.50">&lt;&amp;mut s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13,776,671 samples, 5.41%)</title><rect x="86.5241%" y="2261" width="5.4138%" height="15" fill="rgb(236,120,5)" fg:x="220180223" fg:w="13776671"/><text x="86.7741%" y="2271.50">&lt;serde_..</text></g><g><title>serde::de::MapAccess::next_entry (13,776,671 samples, 5.41%)</title><rect x="86.5241%" y="2245" width="5.4138%" height="15" fill="rgb(248,97,27)" fg:x="220180223" fg:w="13776671"/><text x="86.7741%" y="2255.50">serde::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (13,776,671 samples, 5.41%)</title><rect x="86.5241%" y="2229" width="5.4138%" height="15" fill="rgb(240,66,17)" fg:x="220180223" fg:w="13776671"/><text x="86.7741%" y="2239.50">serde::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (13,776,671 samples, 5.41%)</title><rect x="86.5241%" y="2213" width="5.4138%" height="15" fill="rgb(210,79,3)" fg:x="220180223" fg:w="13776671"/><text x="86.7741%" y="2223.50">&lt;serde_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13,776,671 samples, 5.41%)</title><rect x="86.5241%" y="2197" width="5.4138%" height="15" fill="rgb(214,176,27)" fg:x="220180223" fg:w="13776671"/><text x="86.7741%" y="2207.50">&lt;core::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13,776,671 samples, 5.41%)</title><rect x="86.5241%" y="2181" width="5.4138%" height="15" fill="rgb(235,185,3)" fg:x="220180223" fg:w="13776671"/><text x="86.7741%" y="2191.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13,776,671 samples, 5.41%)</title><rect x="86.5241%" y="2165" width="5.4138%" height="15" fill="rgb(227,24,12)" fg:x="220180223" fg:w="13776671"/><text x="86.7741%" y="2175.50">&lt;&amp;mut s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12,388,595 samples, 4.87%)</title><rect x="87.0696%" y="2149" width="4.8683%" height="15" fill="rgb(252,169,48)" fg:x="221568299" fg:w="12388595"/><text x="87.3196%" y="2159.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (12,388,595 samples, 4.87%)</title><rect x="87.0696%" y="2133" width="4.8683%" height="15" fill="rgb(212,65,1)" fg:x="221568299" fg:w="12388595"/><text x="87.3196%" y="2143.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12,388,595 samples, 4.87%)</title><rect x="87.0696%" y="2117" width="4.8683%" height="15" fill="rgb(242,39,24)" fg:x="221568299" fg:w="12388595"/><text x="87.3196%" y="2127.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,388,595 samples, 4.87%)</title><rect x="87.0696%" y="2101" width="4.8683%" height="15" fill="rgb(249,32,23)" fg:x="221568299" fg:w="12388595"/><text x="87.3196%" y="2111.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,388,595 samples, 4.87%)</title><rect x="87.0696%" y="2085" width="4.8683%" height="15" fill="rgb(251,195,23)" fg:x="221568299" fg:w="12388595"/><text x="87.3196%" y="2095.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,388,595 samples, 4.87%)</title><rect x="87.0696%" y="2069" width="4.8683%" height="15" fill="rgb(236,174,8)" fg:x="221568299" fg:w="12388595"/><text x="87.3196%" y="2079.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,388,595 samples, 4.87%)</title><rect x="87.0696%" y="2053" width="4.8683%" height="15" fill="rgb(220,197,8)" fg:x="221568299" fg:w="12388595"/><text x="87.3196%" y="2063.50">&lt;serde..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (962,554 samples, 0.38%)</title><rect x="91.5597%" y="2037" width="0.3783%" height="15" fill="rgb(240,108,37)" fg:x="232994340" fg:w="962554"/><text x="91.8097%" y="2047.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (962,554 samples, 0.38%)</title><rect x="91.5597%" y="2021" width="0.3783%" height="15" fill="rgb(232,176,24)" fg:x="232994340" fg:w="962554"/><text x="91.8097%" y="2031.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (962,554 samples, 0.38%)</title><rect x="91.5597%" y="2005" width="0.3783%" height="15" fill="rgb(243,35,29)" fg:x="232994340" fg:w="962554"/><text x="91.8097%" y="2015.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (962,554 samples, 0.38%)</title><rect x="91.5597%" y="1989" width="0.3783%" height="15" fill="rgb(210,37,18)" fg:x="232994340" fg:w="962554"/><text x="91.8097%" y="1999.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (962,554 samples, 0.38%)</title><rect x="91.5597%" y="1973" width="0.3783%" height="15" fill="rgb(224,184,40)" fg:x="232994340" fg:w="962554"/><text x="91.8097%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (962,554 samples, 0.38%)</title><rect x="91.5597%" y="1957" width="0.3783%" height="15" fill="rgb(236,39,29)" fg:x="232994340" fg:w="962554"/><text x="91.8097%" y="1967.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (962,554 samples, 0.38%)</title><rect x="91.5597%" y="1941" width="0.3783%" height="15" fill="rgb(232,48,39)" fg:x="232994340" fg:w="962554"/><text x="91.8097%" y="1951.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (962,554 samples, 0.38%)</title><rect x="91.5597%" y="1925" width="0.3783%" height="15" fill="rgb(236,34,42)" fg:x="232994340" fg:w="962554"/><text x="91.8097%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (962,554 samples, 0.38%)</title><rect x="91.5597%" y="1909" width="0.3783%" height="15" fill="rgb(243,106,37)" fg:x="232994340" fg:w="962554"/><text x="91.8097%" y="1919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (962,554 samples, 0.38%)</title><rect x="91.5597%" y="1893" width="0.3783%" height="15" fill="rgb(218,96,6)" fg:x="232994340" fg:w="962554"/><text x="91.8097%" y="1903.50"></text></g><g><title>alloc::alloc::alloc (962,554 samples, 0.38%)</title><rect x="91.5597%" y="1877" width="0.3783%" height="15" fill="rgb(235,130,12)" fg:x="232994340" fg:w="962554"/><text x="91.8097%" y="1887.50"></text></g><g><title>malloc (962,554 samples, 0.38%)</title><rect x="91.5597%" y="1861" width="0.3783%" height="15" fill="rgb(231,95,0)" fg:x="232994340" fg:w="962554"/><text x="91.8097%" y="1871.50"></text></g><g><title>[libc.so.6] (962,554 samples, 0.38%)</title><rect x="91.5597%" y="1845" width="0.3783%" height="15" fill="rgb(228,12,23)" fg:x="232994340" fg:w="962554"/><text x="91.8097%" y="1855.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17,716,130 samples, 6.96%)</title><rect x="85.4173%" y="2469" width="6.9619%" height="15" fill="rgb(216,12,1)" fg:x="217363638" fg:w="17716130"/><text x="85.6673%" y="2479.50">&lt;serde_js..</text></g><g><title>serde::de::MapAccess::next_value (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2453" width="0.4413%" height="15" fill="rgb(219,59,3)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2437" width="0.4413%" height="15" fill="rgb(215,208,46)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2447.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2421" width="0.4413%" height="15" fill="rgb(254,224,29)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2405" width="0.4413%" height="15" fill="rgb(232,14,29)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2389" width="0.4413%" height="15" fill="rgb(208,45,52)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2399.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2373" width="0.4413%" height="15" fill="rgb(234,191,28)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2357" width="0.4413%" height="15" fill="rgb(244,67,43)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2367.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2341" width="0.4413%" height="15" fill="rgb(236,189,24)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2351.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2325" width="0.4413%" height="15" fill="rgb(239,214,33)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2335.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2309" width="0.4413%" height="15" fill="rgb(226,176,41)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2293" width="0.4413%" height="15" fill="rgb(248,47,8)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2277" width="0.4413%" height="15" fill="rgb(218,81,44)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2287.50"></text></g><g><title>alloc::slice::hack::to_vec (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2261" width="0.4413%" height="15" fill="rgb(213,98,6)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2245" width="0.4413%" height="15" fill="rgb(222,85,22)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2229" width="0.4413%" height="15" fill="rgb(239,46,39)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2213" width="0.4413%" height="15" fill="rgb(237,12,29)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2197" width="0.4413%" height="15" fill="rgb(214,77,8)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2181" width="0.4413%" height="15" fill="rgb(217,168,37)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2165" width="0.4413%" height="15" fill="rgb(221,217,23)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2149" width="0.4413%" height="15" fill="rgb(243,229,36)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2159.50"></text></g><g><title>alloc::alloc::alloc (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2133" width="0.4413%" height="15" fill="rgb(251,163,40)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2143.50"></text></g><g><title>malloc (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2117" width="0.4413%" height="15" fill="rgb(237,222,12)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2127.50"></text></g><g><title>[libc.so.6] (1,122,874 samples, 0.44%)</title><rect x="91.9379%" y="2101" width="0.4413%" height="15" fill="rgb(248,132,6)" fg:x="233956894" fg:w="1122874"/><text x="92.1879%" y="2111.50"></text></g><g><title>serde_json::de::from_str (19,965,258 samples, 7.85%)</title><rect x="84.9648%" y="2645" width="7.8457%" height="15" fill="rgb(227,167,50)" fg:x="216212081" fg:w="19965258"/><text x="85.2148%" y="2655.50">serde_json:..</text></g><g><title>serde_json::de::from_trait (19,965,258 samples, 7.85%)</title><rect x="84.9648%" y="2629" width="7.8457%" height="15" fill="rgb(242,84,37)" fg:x="216212081" fg:w="19965258"/><text x="85.2148%" y="2639.50">serde_json:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,965,258 samples, 7.85%)</title><rect x="84.9648%" y="2613" width="7.8457%" height="15" fill="rgb(212,4,50)" fg:x="216212081" fg:w="19965258"/><text x="85.2148%" y="2623.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,965,258 samples, 7.85%)</title><rect x="84.9648%" y="2597" width="7.8457%" height="15" fill="rgb(230,228,32)" fg:x="216212081" fg:w="19965258"/><text x="85.2148%" y="2607.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19,965,258 samples, 7.85%)</title><rect x="84.9648%" y="2581" width="7.8457%" height="15" fill="rgb(248,217,23)" fg:x="216212081" fg:w="19965258"/><text x="85.2148%" y="2591.50">&lt;serde_json..</text></g><g><title>serde::de::MapAccess::next_entry (19,965,258 samples, 7.85%)</title><rect x="84.9648%" y="2565" width="7.8457%" height="15" fill="rgb(238,197,32)" fg:x="216212081" fg:w="19965258"/><text x="85.2148%" y="2575.50">serde::de::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (19,965,258 samples, 7.85%)</title><rect x="84.9648%" y="2549" width="7.8457%" height="15" fill="rgb(236,106,1)" fg:x="216212081" fg:w="19965258"/><text x="85.2148%" y="2559.50">serde::de::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (18,813,701 samples, 7.39%)</title><rect x="85.4173%" y="2533" width="7.3932%" height="15" fill="rgb(219,228,13)" fg:x="217363638" fg:w="18813701"/><text x="85.6673%" y="2543.50">&lt;serde_jso..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18,813,701 samples, 7.39%)</title><rect x="85.4173%" y="2517" width="7.3932%" height="15" fill="rgb(238,30,35)" fg:x="217363638" fg:w="18813701"/><text x="85.6673%" y="2527.50">&lt;core::mar..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18,813,701 samples, 7.39%)</title><rect x="85.4173%" y="2501" width="7.3932%" height="15" fill="rgb(236,70,23)" fg:x="217363638" fg:w="18813701"/><text x="85.6673%" y="2511.50">serde_json..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18,813,701 samples, 7.39%)</title><rect x="85.4173%" y="2485" width="7.3932%" height="15" fill="rgb(249,104,48)" fg:x="217363638" fg:w="18813701"/><text x="85.6673%" y="2495.50">&lt;&amp;mut serd..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,097,571 samples, 0.43%)</title><rect x="92.3792%" y="2469" width="0.4313%" height="15" fill="rgb(254,117,50)" fg:x="235079768" fg:w="1097571"/><text x="92.6292%" y="2479.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,097,571 samples, 0.43%)</title><rect x="92.3792%" y="2453" width="0.4313%" height="15" fill="rgb(223,152,4)" fg:x="235079768" fg:w="1097571"/><text x="92.6292%" y="2463.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,097,571 samples, 0.43%)</title><rect x="92.3792%" y="2437" width="0.4313%" height="15" fill="rgb(245,6,2)" fg:x="235079768" fg:w="1097571"/><text x="92.6292%" y="2447.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed::has_next_element (1,097,571 samples, 0.43%)</title><rect x="92.3792%" y="2421" width="0.4313%" height="15" fill="rgb(249,150,24)" fg:x="235079768" fg:w="1097571"/><text x="92.6292%" y="2431.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1,097,571 samples, 0.43%)</title><rect x="92.3792%" y="2405" width="0.4313%" height="15" fill="rgb(228,185,42)" fg:x="235079768" fg:w="1097571"/><text x="92.6292%" y="2415.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (1,097,571 samples, 0.43%)</title><rect x="92.3792%" y="2389" width="0.4313%" height="15" fill="rgb(226,39,33)" fg:x="235079768" fg:w="1097571"/><text x="92.6292%" y="2399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1,097,571 samples, 0.43%)</title><rect x="92.3792%" y="2373" width="0.4313%" height="15" fill="rgb(221,166,19)" fg:x="235079768" fg:w="1097571"/><text x="92.6292%" y="2383.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1,097,571 samples, 0.43%)</title><rect x="92.3792%" y="2357" width="0.4313%" height="15" fill="rgb(209,109,2)" fg:x="235079768" fg:w="1097571"/><text x="92.6292%" y="2367.50"></text></g><g><title>benchmark::parse_web_layout_trace (23,487,779 samples, 9.23%)</title><rect x="83.7776%" y="2661" width="9.2300%" height="15" fill="rgb(252,216,26)" fg:x="213191064" fg:w="23487779"/><text x="84.0276%" y="2671.50">benchmark::pa..</text></g><g><title>std::fs::read_to_string (501,504 samples, 0.20%)</title><rect x="92.8105%" y="2645" width="0.1971%" height="15" fill="rgb(227,173,36)" fg:x="236177339" fg:w="501504"/><text x="93.0605%" y="2655.50"></text></g><g><title>std::fs::read_to_string::inner (501,504 samples, 0.20%)</title><rect x="92.8105%" y="2629" width="0.1971%" height="15" fill="rgb(209,90,7)" fg:x="236177339" fg:w="501504"/><text x="93.0605%" y="2639.50"></text></g><g><title>alloc::string::String::try_reserve_exact (501,504 samples, 0.20%)</title><rect x="92.8105%" y="2613" width="0.1971%" height="15" fill="rgb(250,194,11)" fg:x="236177339" fg:w="501504"/><text x="93.0605%" y="2623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::try_reserve_exact (501,504 samples, 0.20%)</title><rect x="92.8105%" y="2597" width="0.1971%" height="15" fill="rgb(220,72,50)" fg:x="236177339" fg:w="501504"/><text x="93.0605%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (501,504 samples, 0.20%)</title><rect x="92.8105%" y="2581" width="0.1971%" height="15" fill="rgb(222,106,48)" fg:x="236177339" fg:w="501504"/><text x="93.0605%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_reserve_exact (501,504 samples, 0.20%)</title><rect x="92.8105%" y="2565" width="0.1971%" height="15" fill="rgb(216,220,45)" fg:x="236177339" fg:w="501504"/><text x="93.0605%" y="2575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_exact (501,504 samples, 0.20%)</title><rect x="92.8105%" y="2549" width="0.1971%" height="15" fill="rgb(234,112,18)" fg:x="236177339" fg:w="501504"/><text x="93.0605%" y="2559.50"></text></g><g><title>alloc::raw_vec::finish_grow (501,504 samples, 0.20%)</title><rect x="92.8105%" y="2533" width="0.1971%" height="15" fill="rgb(206,179,9)" fg:x="236177339" fg:w="501504"/><text x="93.0605%" y="2543.50"></text></g><g><title>malloc (501,504 samples, 0.20%)</title><rect x="92.8105%" y="2517" width="0.1971%" height="15" fill="rgb(215,115,40)" fg:x="236177339" fg:w="501504"/><text x="93.0605%" y="2527.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.20%)</title><rect x="92.8105%" y="2501" width="0.1971%" height="15" fill="rgb(222,69,34)" fg:x="236177339" fg:w="501504"/><text x="93.0605%" y="2511.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.20%)</title><rect x="92.8105%" y="2485" width="0.1971%" height="15" fill="rgb(209,161,10)" fg:x="236177339" fg:w="501504"/><text x="93.0605%" y="2495.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.20%)</title><rect x="92.8105%" y="2469" width="0.1971%" height="15" fill="rgb(217,6,38)" fg:x="236177339" fg:w="501504"/><text x="93.0605%" y="2479.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.20%)</title><rect x="92.8105%" y="2453" width="0.1971%" height="15" fill="rgb(229,229,48)" fg:x="236177339" fg:w="501504"/><text x="93.0605%" y="2463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,188,970 samples, 0.47%)</title><rect x="93.0076%" y="1813" width="0.4672%" height="15" fill="rgb(225,21,28)" fg:x="236678843" fg:w="1188970"/><text x="93.2576%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,188,970 samples, 0.47%)</title><rect x="93.0076%" y="1797" width="0.4672%" height="15" fill="rgb(206,33,13)" fg:x="236678843" fg:w="1188970"/><text x="93.2576%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,188,970 samples, 0.47%)</title><rect x="93.0076%" y="1781" width="0.4672%" height="15" fill="rgb(242,178,17)" fg:x="236678843" fg:w="1188970"/><text x="93.2576%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,188,970 samples, 0.47%)</title><rect x="93.0076%" y="1765" width="0.4672%" height="15" fill="rgb(220,162,5)" fg:x="236678843" fg:w="1188970"/><text x="93.2576%" y="1775.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,188,970 samples, 0.47%)</title><rect x="93.0076%" y="1749" width="0.4672%" height="15" fill="rgb(210,33,43)" fg:x="236678843" fg:w="1188970"/><text x="93.2576%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,188,970 samples, 0.47%)</title><rect x="93.0076%" y="1733" width="0.4672%" height="15" fill="rgb(216,116,54)" fg:x="236678843" fg:w="1188970"/><text x="93.2576%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1,188,970 samples, 0.47%)</title><rect x="93.0076%" y="1717" width="0.4672%" height="15" fill="rgb(249,92,24)" fg:x="236678843" fg:w="1188970"/><text x="93.2576%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,384,534 samples, 0.94%)</title><rect x="93.0076%" y="1989" width="0.9370%" height="15" fill="rgb(231,189,14)" fg:x="236678843" fg:w="2384534"/><text x="93.2576%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,384,534 samples, 0.94%)</title><rect x="93.0076%" y="1973" width="0.9370%" height="15" fill="rgb(230,8,41)" fg:x="236678843" fg:w="2384534"/><text x="93.2576%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,384,534 samples, 0.94%)</title><rect x="93.0076%" y="1957" width="0.9370%" height="15" fill="rgb(249,7,27)" fg:x="236678843" fg:w="2384534"/><text x="93.2576%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,384,534 samples, 0.94%)</title><rect x="93.0076%" y="1941" width="0.9370%" height="15" fill="rgb(232,86,5)" fg:x="236678843" fg:w="2384534"/><text x="93.2576%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,384,534 samples, 0.94%)</title><rect x="93.0076%" y="1925" width="0.9370%" height="15" fill="rgb(224,175,18)" fg:x="236678843" fg:w="2384534"/><text x="93.2576%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,384,534 samples, 0.94%)</title><rect x="93.0076%" y="1909" width="0.9370%" height="15" fill="rgb(220,129,12)" fg:x="236678843" fg:w="2384534"/><text x="93.2576%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,384,534 samples, 0.94%)</title><rect x="93.0076%" y="1893" width="0.9370%" height="15" fill="rgb(210,19,36)" fg:x="236678843" fg:w="2384534"/><text x="93.2576%" y="1903.50"></text></g><g><title>core::mem::drop (2,384,534 samples, 0.94%)</title><rect x="93.0076%" y="1877" width="0.9370%" height="15" fill="rgb(219,96,14)" fg:x="236678843" fg:w="2384534"/><text x="93.2576%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,384,534 samples, 0.94%)</title><rect x="93.0076%" y="1861" width="0.9370%" height="15" fill="rgb(249,106,1)" fg:x="236678843" fg:w="2384534"/><text x="93.2576%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,384,534 samples, 0.94%)</title><rect x="93.0076%" y="1845" width="0.9370%" height="15" fill="rgb(249,155,20)" fg:x="236678843" fg:w="2384534"/><text x="93.2576%" y="1855.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,384,534 samples, 0.94%)</title><rect x="93.0076%" y="1829" width="0.9370%" height="15" fill="rgb(244,168,9)" fg:x="236678843" fg:w="2384534"/><text x="93.2576%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1813" width="0.4698%" height="15" fill="rgb(216,23,50)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1797" width="0.4698%" height="15" fill="rgb(224,219,20)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1807.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1781" width="0.4698%" height="15" fill="rgb(222,156,15)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1765" width="0.4698%" height="15" fill="rgb(231,97,17)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1749" width="0.4698%" height="15" fill="rgb(218,70,48)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1733" width="0.4698%" height="15" fill="rgb(212,196,52)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1717" width="0.4698%" height="15" fill="rgb(243,203,18)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1701" width="0.4698%" height="15" fill="rgb(252,125,41)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1685" width="0.4698%" height="15" fill="rgb(223,180,33)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1669" width="0.4698%" height="15" fill="rgb(254,159,46)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1653" width="0.4698%" height="15" fill="rgb(254,38,10)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1663.50"></text></g><g><title>core::mem::drop (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1637" width="0.4698%" height="15" fill="rgb(208,217,32)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1621" width="0.4698%" height="15" fill="rgb(221,120,13)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1605" width="0.4698%" height="15" fill="rgb(246,54,52)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1589" width="0.4698%" height="15" fill="rgb(242,34,25)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1573" width="0.4698%" height="15" fill="rgb(247,209,9)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1557" width="0.4698%" height="15" fill="rgb(228,71,26)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1567.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1541" width="0.4698%" height="15" fill="rgb(222,145,49)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1525" width="0.4698%" height="15" fill="rgb(218,121,17)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1509" width="0.4698%" height="15" fill="rgb(244,50,7)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1493" width="0.4698%" height="15" fill="rgb(246,229,37)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1477" width="0.4698%" height="15" fill="rgb(225,18,5)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1487.50"></text></g><g><title>core::mem::drop (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1461" width="0.4698%" height="15" fill="rgb(213,204,8)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1445" width="0.4698%" height="15" fill="rgb(238,103,6)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1429" width="0.4698%" height="15" fill="rgb(222,25,35)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1439.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1413" width="0.4698%" height="15" fill="rgb(213,203,35)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1423.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1397" width="0.4698%" height="15" fill="rgb(221,79,53)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1407.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1381" width="0.4698%" height="15" fill="rgb(243,200,35)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1391.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1365" width="0.4698%" height="15" fill="rgb(248,60,25)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1375.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1349" width="0.4698%" height="15" fill="rgb(227,53,46)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1359.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1333" width="0.4698%" height="15" fill="rgb(216,120,32)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1343.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1317" width="0.4698%" height="15" fill="rgb(220,134,1)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1327.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,195,564 samples, 0.47%)</title><rect x="93.4748%" y="1301" width="0.4698%" height="15" fill="rgb(237,168,5)" fg:x="237867813" fg:w="1195564"/><text x="93.7248%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2645" width="1.3994%" height="15" fill="rgb(231,100,33)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2629" width="1.3994%" height="15" fill="rgb(236,177,47)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2613" width="1.3994%" height="15" fill="rgb(235,7,49)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2597" width="1.3994%" height="15" fill="rgb(232,119,22)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2581" width="1.3994%" height="15" fill="rgb(254,73,53)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2565" width="1.3994%" height="15" fill="rgb(251,35,20)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2549" width="1.3994%" height="15" fill="rgb(241,119,20)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2559.50"></text></g><g><title>core::mem::drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2533" width="1.3994%" height="15" fill="rgb(207,102,14)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2517" width="1.3994%" height="15" fill="rgb(248,201,50)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2501" width="1.3994%" height="15" fill="rgb(222,185,44)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2485" width="1.3994%" height="15" fill="rgb(218,107,18)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2469" width="1.3994%" height="15" fill="rgb(237,177,39)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2479.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2453" width="1.3994%" height="15" fill="rgb(246,69,6)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2437" width="1.3994%" height="15" fill="rgb(234,208,37)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2421" width="1.3994%" height="15" fill="rgb(225,4,6)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2405" width="1.3994%" height="15" fill="rgb(233,45,0)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2389" width="1.3994%" height="15" fill="rgb(226,136,5)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2373" width="1.3994%" height="15" fill="rgb(211,91,47)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2383.50"></text></g><g><title>core::mem::drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2357" width="1.3994%" height="15" fill="rgb(242,88,51)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2341" width="1.3994%" height="15" fill="rgb(230,91,28)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2325" width="1.3994%" height="15" fill="rgb(254,186,29)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2309" width="1.3994%" height="15" fill="rgb(238,6,4)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2293" width="1.3994%" height="15" fill="rgb(221,151,16)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2303.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2277" width="1.3994%" height="15" fill="rgb(251,143,52)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2287.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2261" width="1.3994%" height="15" fill="rgb(206,90,15)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2245" width="1.3994%" height="15" fill="rgb(218,35,8)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2229" width="1.3994%" height="15" fill="rgb(239,215,6)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2213" width="1.3994%" height="15" fill="rgb(245,116,39)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2197" width="1.3994%" height="15" fill="rgb(242,65,28)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2181" width="1.3994%" height="15" fill="rgb(252,132,53)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2165" width="1.3994%" height="15" fill="rgb(224,159,50)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2149" width="1.3994%" height="15" fill="rgb(224,93,4)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2133" width="1.3994%" height="15" fill="rgb(208,81,34)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2143.50"></text></g><g><title>core::mem::drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2117" width="1.3994%" height="15" fill="rgb(233,92,54)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2101" width="1.3994%" height="15" fill="rgb(237,21,14)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2111.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2085" width="1.3994%" height="15" fill="rgb(249,128,51)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2095.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2069" width="1.3994%" height="15" fill="rgb(223,129,24)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2053" width="1.3994%" height="15" fill="rgb(231,168,25)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2063.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2037" width="1.3994%" height="15" fill="rgb(224,39,20)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2047.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2021" width="1.3994%" height="15" fill="rgb(225,152,53)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,561,036 samples, 1.40%)</title><rect x="93.0076%" y="2005" width="1.3994%" height="15" fill="rgb(252,17,24)" fg:x="236678843" fg:w="3561036"/><text x="93.2576%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1989" width="0.4623%" height="15" fill="rgb(250,114,30)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1973" width="0.4623%" height="15" fill="rgb(229,5,4)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1957" width="0.4623%" height="15" fill="rgb(225,176,49)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1967.50"></text></g><g><title>core::mem::drop (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1941" width="0.4623%" height="15" fill="rgb(224,221,49)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1925" width="0.4623%" height="15" fill="rgb(253,169,27)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1909" width="0.4623%" height="15" fill="rgb(211,206,16)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1919.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1893" width="0.4623%" height="15" fill="rgb(244,87,35)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1903.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1877" width="0.4623%" height="15" fill="rgb(246,28,10)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1861" width="0.4623%" height="15" fill="rgb(229,12,44)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1845" width="0.4623%" height="15" fill="rgb(210,145,37)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1829" width="0.4623%" height="15" fill="rgb(227,112,52)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1839.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1813" width="0.4623%" height="15" fill="rgb(238,155,34)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1797" width="0.4623%" height="15" fill="rgb(239,226,36)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1781" width="0.4623%" height="15" fill="rgb(230,16,23)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1765" width="0.4623%" height="15" fill="rgb(236,171,36)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1775.50"></text></g><g><title>cfree (1,176,502 samples, 0.46%)</title><rect x="93.9446%" y="1749" width="0.4623%" height="15" fill="rgb(221,22,14)" fg:x="239063377" fg:w="1176502"/><text x="94.1946%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (8,477,775 samples, 3.33%)</title><rect x="93.0076%" y="2661" width="3.3315%" height="15" fill="rgb(242,43,11)" fg:x="236678843" fg:w="8477775"/><text x="93.2576%" y="2671.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (4,916,739 samples, 1.93%)</title><rect x="94.4070%" y="2645" width="1.9321%" height="15" fill="rgb(232,69,23)" fg:x="240239879" fg:w="4916739"/><text x="94.6570%" y="2655.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,916,739 samples, 1.93%)</title><rect x="94.4070%" y="2629" width="1.9321%" height="15" fill="rgb(216,180,54)" fg:x="240239879" fg:w="4916739"/><text x="94.6570%" y="2639.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,916,739 samples, 1.93%)</title><rect x="94.4070%" y="2613" width="1.9321%" height="15" fill="rgb(216,5,24)" fg:x="240239879" fg:w="4916739"/><text x="94.6570%" y="2623.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,916,739 samples, 1.93%)</title><rect x="94.4070%" y="2597" width="1.9321%" height="15" fill="rgb(225,89,9)" fg:x="240239879" fg:w="4916739"/><text x="94.6570%" y="2607.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (4,916,739 samples, 1.93%)</title><rect x="94.4070%" y="2581" width="1.9321%" height="15" fill="rgb(243,75,33)" fg:x="240239879" fg:w="4916739"/><text x="94.6570%" y="2591.50">a..</text></g><g><title>cfree (4,916,739 samples, 1.93%)</title><rect x="94.4070%" y="2565" width="1.9321%" height="15" fill="rgb(247,141,45)" fg:x="240239879" fg:w="4916739"/><text x="94.6570%" y="2575.50">c..</text></g><g><title>[libc.so.6] (4,916,739 samples, 1.93%)</title><rect x="94.4070%" y="2549" width="1.9321%" height="15" fill="rgb(232,177,36)" fg:x="240239879" fg:w="4916739"/><text x="94.6570%" y="2559.50">[..</text></g><g><title>[libc.so.6] (4,916,739 samples, 1.93%)</title><rect x="94.4070%" y="2533" width="1.9321%" height="15" fill="rgb(219,125,36)" fg:x="240239879" fg:w="4916739"/><text x="94.6570%" y="2543.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2309" width="0.4891%" height="15" fill="rgb(227,94,9)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2293" width="0.4891%" height="15" fill="rgb(240,34,52)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2277" width="0.4891%" height="15" fill="rgb(216,45,12)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2261" width="0.4891%" height="15" fill="rgb(246,21,19)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2245" width="0.4891%" height="15" fill="rgb(213,98,42)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2229" width="0.4891%" height="15" fill="rgb(250,136,47)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2213" width="0.4891%" height="15" fill="rgb(251,124,27)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2197" width="0.4891%" height="15" fill="rgb(229,180,14)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2181" width="0.4891%" height="15" fill="rgb(245,216,25)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2165" width="0.4891%" height="15" fill="rgb(251,43,5)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2149" width="0.4891%" height="15" fill="rgb(250,128,24)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2133" width="0.4891%" height="15" fill="rgb(217,117,27)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2117" width="0.4891%" height="15" fill="rgb(245,147,4)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2101" width="0.4891%" height="15" fill="rgb(242,201,35)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2085" width="0.4891%" height="15" fill="rgb(218,181,1)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2069" width="0.4891%" height="15" fill="rgb(222,6,29)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2079.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2053" width="0.4891%" height="15" fill="rgb(208,186,3)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2037" width="0.4891%" height="15" fill="rgb(216,36,26)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2021" width="0.4891%" height="15" fill="rgb(248,201,23)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="2005" width="0.4891%" height="15" fill="rgb(251,170,31)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1989" width="0.4891%" height="15" fill="rgb(207,110,25)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1973" width="0.4891%" height="15" fill="rgb(250,54,15)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1957" width="0.4891%" height="15" fill="rgb(227,68,33)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1941" width="0.4891%" height="15" fill="rgb(238,34,41)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1925" width="0.4891%" height="15" fill="rgb(220,11,15)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1909" width="0.4891%" height="15" fill="rgb(246,111,35)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1893" width="0.4891%" height="15" fill="rgb(209,88,53)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1877" width="0.4891%" height="15" fill="rgb(231,185,47)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1861" width="0.4891%" height="15" fill="rgb(233,154,1)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1871.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1845" width="0.4891%" height="15" fill="rgb(225,15,46)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1829" width="0.4891%" height="15" fill="rgb(211,135,41)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1813" width="0.4891%" height="15" fill="rgb(208,54,0)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1823.50"></text></g><g><title>alloc::alloc::dealloc (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1797" width="0.4891%" height="15" fill="rgb(244,136,14)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1807.50"></text></g><g><title>cfree (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1781" width="0.4891%" height="15" fill="rgb(241,56,14)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1791.50"></text></g><g><title>[libc.so.6] (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1765" width="0.4891%" height="15" fill="rgb(205,80,24)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1775.50"></text></g><g><title>[libc.so.6] (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1749" width="0.4891%" height="15" fill="rgb(220,57,4)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1759.50"></text></g><g><title>[libc.so.6] (1,244,607 samples, 0.49%)</title><rect x="96.3391%" y="1733" width="0.4891%" height="15" fill="rgb(226,193,50)" fg:x="245156618" fg:w="1244607"/><text x="96.5891%" y="1743.50"></text></g><g><title>_start (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2949" width="87.6494%" height="15" fill="rgb(231,168,22)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2959.50">_start</text></g><g><title>__libc_start_main (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2933" width="87.6494%" height="15" fill="rgb(254,215,14)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2943.50">__libc_start_main</text></g><g><title>[libc.so.6] (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2917" width="87.6494%" height="15" fill="rgb(211,115,16)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2927.50">[libc.so.6]</text></g><g><title>main (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2901" width="87.6494%" height="15" fill="rgb(236,210,16)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2911.50">main</text></g><g><title>std::rt::lang_start_internal (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2885" width="87.6494%" height="15" fill="rgb(221,94,12)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2895.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2869" width="87.6494%" height="15" fill="rgb(235,218,49)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2853" width="87.6494%" height="15" fill="rgb(217,114,14)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2837" width="87.6494%" height="15" fill="rgb(216,145,22)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2847.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2821" width="87.6494%" height="15" fill="rgb(217,112,39)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2831.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2805" width="87.6494%" height="15" fill="rgb(225,85,32)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2789" width="87.6494%" height="15" fill="rgb(245,209,47)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2773" width="87.6494%" height="15" fill="rgb(218,220,15)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2757" width="87.6494%" height="15" fill="rgb(222,202,31)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2767.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2741" width="87.6494%" height="15" fill="rgb(243,203,4)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2751.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2725" width="87.6494%" height="15" fill="rgb(237,92,17)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2735.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2709" width="87.6494%" height="15" fill="rgb(231,119,7)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2719.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2693" width="87.6494%" height="15" fill="rgb(237,82,41)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2703.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (223,043,818 samples, 87.65%)</title><rect x="9.6409%" y="2677" width="87.6494%" height="15" fill="rgb(226,81,48)" fg:x="24533369" fg:w="223043818"/><text x="9.8909%" y="2687.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2661" width="0.9512%" height="15" fill="rgb(234,70,51)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2645" width="0.9512%" height="15" fill="rgb(251,86,4)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2629" width="0.9512%" height="15" fill="rgb(244,144,28)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2613" width="0.9512%" height="15" fill="rgb(232,161,39)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2597" width="0.9512%" height="15" fill="rgb(247,34,51)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2581" width="0.9512%" height="15" fill="rgb(225,132,2)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2565" width="0.9512%" height="15" fill="rgb(209,159,44)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2549" width="0.9512%" height="15" fill="rgb(251,214,1)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2533" width="0.9512%" height="15" fill="rgb(247,84,47)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2517" width="0.9512%" height="15" fill="rgb(240,111,43)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2501" width="0.9512%" height="15" fill="rgb(215,214,35)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2485" width="0.9512%" height="15" fill="rgb(248,207,23)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2469" width="0.9512%" height="15" fill="rgb(214,186,4)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2453" width="0.9512%" height="15" fill="rgb(220,133,22)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2437" width="0.9512%" height="15" fill="rgb(239,134,19)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2421" width="0.9512%" height="15" fill="rgb(250,140,9)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2405" width="0.9512%" height="15" fill="rgb(225,59,14)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2389" width="0.9512%" height="15" fill="rgb(214,152,51)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2373" width="0.9512%" height="15" fill="rgb(251,227,43)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2357" width="0.9512%" height="15" fill="rgb(241,96,17)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2341" width="0.9512%" height="15" fill="rgb(234,198,43)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,420,569 samples, 0.95%)</title><rect x="96.3391%" y="2325" width="0.9512%" height="15" fill="rgb(220,108,29)" fg:x="245156618" fg:w="2420569"/><text x="96.5891%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,175,962 samples, 0.46%)</title><rect x="96.8282%" y="2309" width="0.4621%" height="15" fill="rgb(226,163,33)" fg:x="246401225" fg:w="1175962"/><text x="97.0782%" y="2319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,175,962 samples, 0.46%)</title><rect x="96.8282%" y="2293" width="0.4621%" height="15" fill="rgb(205,194,45)" fg:x="246401225" fg:w="1175962"/><text x="97.0782%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,175,962 samples, 0.46%)</title><rect x="96.8282%" y="2277" width="0.4621%" height="15" fill="rgb(206,143,44)" fg:x="246401225" fg:w="1175962"/><text x="97.0782%" y="2287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,175,962 samples, 0.46%)</title><rect x="96.8282%" y="2261" width="0.4621%" height="15" fill="rgb(236,136,36)" fg:x="246401225" fg:w="1175962"/><text x="97.0782%" y="2271.50"></text></g><g><title>alloc::alloc::dealloc (1,175,962 samples, 0.46%)</title><rect x="96.8282%" y="2245" width="0.4621%" height="15" fill="rgb(249,172,42)" fg:x="246401225" fg:w="1175962"/><text x="97.0782%" y="2255.50"></text></g><g><title>cfree (1,175,962 samples, 0.46%)</title><rect x="96.8282%" y="2229" width="0.4621%" height="15" fill="rgb(216,139,23)" fg:x="246401225" fg:w="1175962"/><text x="97.0782%" y="2239.50"></text></g><g><title>[libc.so.6] (1,175,962 samples, 0.46%)</title><rect x="96.8282%" y="2213" width="0.4621%" height="15" fill="rgb(207,166,20)" fg:x="246401225" fg:w="1175962"/><text x="97.0782%" y="2223.50"></text></g><g><title>[libc.so.6] (1,175,962 samples, 0.46%)</title><rect x="96.8282%" y="2197" width="0.4621%" height="15" fill="rgb(210,209,22)" fg:x="246401225" fg:w="1175962"/><text x="97.0782%" y="2207.50"></text></g><g><title>[libc.so.6] (1,175,962 samples, 0.46%)</title><rect x="96.8282%" y="2181" width="0.4621%" height="15" fill="rgb(232,118,20)" fg:x="246401225" fg:w="1175962"/><text x="97.0782%" y="2191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,330,050 samples, 0.92%)</title><rect x="97.2903%" y="2949" width="0.9156%" height="15" fill="rgb(238,113,42)" fg:x="247577187" fg:w="2330050"/><text x="97.5403%" y="2959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,163,580 samples, 0.46%)</title><rect x="97.7487%" y="2933" width="0.4573%" height="15" fill="rgb(231,42,5)" fg:x="248743657" fg:w="1163580"/><text x="97.9987%" y="2943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,163,580 samples, 0.46%)</title><rect x="97.7487%" y="2917" width="0.4573%" height="15" fill="rgb(243,166,24)" fg:x="248743657" fg:w="1163580"/><text x="97.9987%" y="2927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,163,580 samples, 0.46%)</title><rect x="97.7487%" y="2901" width="0.4573%" height="15" fill="rgb(237,226,12)" fg:x="248743657" fg:w="1163580"/><text x="97.9987%" y="2911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,163,580 samples, 0.46%)</title><rect x="97.7487%" y="2885" width="0.4573%" height="15" fill="rgb(229,133,24)" fg:x="248743657" fg:w="1163580"/><text x="97.9987%" y="2895.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (1,163,580 samples, 0.46%)</title><rect x="97.7487%" y="2869" width="0.4573%" height="15" fill="rgb(238,33,43)" fg:x="248743657" fg:w="1163580"/><text x="97.9987%" y="2879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (1,163,580 samples, 0.46%)</title><rect x="97.7487%" y="2853" width="0.4573%" height="15" fill="rgb(227,59,38)" fg:x="248743657" fg:w="1163580"/><text x="97.9987%" y="2863.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,163,580 samples, 0.46%)</title><rect x="97.7487%" y="2837" width="0.4573%" height="15" fill="rgb(230,97,0)" fg:x="248743657" fg:w="1163580"/><text x="97.9987%" y="2847.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,163,580 samples, 0.46%)</title><rect x="97.7487%" y="2821" width="0.4573%" height="15" fill="rgb(250,173,50)" fg:x="248743657" fg:w="1163580"/><text x="97.9987%" y="2831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (975,201 samples, 0.38%)</title><rect x="98.2059%" y="2933" width="0.3832%" height="15" fill="rgb(240,15,50)" fg:x="249907237" fg:w="975201"/><text x="98.4559%" y="2943.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (975,201 samples, 0.38%)</title><rect x="98.2059%" y="2917" width="0.3832%" height="15" fill="rgb(221,93,22)" fg:x="249907237" fg:w="975201"/><text x="98.4559%" y="2927.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (975,201 samples, 0.38%)</title><rect x="98.2059%" y="2901" width="0.3832%" height="15" fill="rgb(245,180,53)" fg:x="249907237" fg:w="975201"/><text x="98.4559%" y="2911.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (975,201 samples, 0.38%)</title><rect x="98.2059%" y="2885" width="0.3832%" height="15" fill="rgb(231,88,51)" fg:x="249907237" fg:w="975201"/><text x="98.4559%" y="2895.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (975,201 samples, 0.38%)</title><rect x="98.2059%" y="2869" width="0.3832%" height="15" fill="rgb(240,58,21)" fg:x="249907237" fg:w="975201"/><text x="98.4559%" y="2879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (975,201 samples, 0.38%)</title><rect x="98.2059%" y="2853" width="0.3832%" height="15" fill="rgb(237,21,10)" fg:x="249907237" fg:w="975201"/><text x="98.4559%" y="2863.50"></text></g><g><title>benchmark::json_to_html_node (2,223,318 samples, 0.87%)</title><rect x="98.2059%" y="2949" width="0.8737%" height="15" fill="rgb(218,43,11)" fg:x="249907237" fg:w="2223318"/><text x="98.4559%" y="2959.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,248,117 samples, 0.49%)</title><rect x="98.5892%" y="2933" width="0.4905%" height="15" fill="rgb(218,221,29)" fg:x="250882438" fg:w="1248117"/><text x="98.8392%" y="2943.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,248,117 samples, 0.49%)</title><rect x="98.5892%" y="2917" width="0.4905%" height="15" fill="rgb(214,118,42)" fg:x="250882438" fg:w="1248117"/><text x="98.8392%" y="2927.50"></text></g><g><title>all (254,472,613 samples, 100%)</title><rect x="0.0000%" y="2981" width="100.0000%" height="15" fill="rgb(251,200,26)" fg:x="0" fg:w="254472613"/><text x="0.2500%" y="2991.50"></text></g><g><title>benchmark (254,472,613 samples, 100.00%)</title><rect x="0.0000%" y="2965" width="100.0000%" height="15" fill="rgb(237,101,39)" fg:x="0" fg:w="254472613"/><text x="0.2500%" y="2975.50">benchmark</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,342,058 samples, 0.92%)</title><rect x="99.0796%" y="2949" width="0.9204%" height="15" fill="rgb(251,117,11)" fg:x="252130555" fg:w="2342058"/><text x="99.3296%" y="2959.50"></text></g></svg></svg>