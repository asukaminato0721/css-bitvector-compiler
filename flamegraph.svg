<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="3462" onload="init(evt)" viewBox="0 0 1200 3462" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="3462" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="3445.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="3445.00"> </text><svg id="frames" x="10" width="1180" total_samples="234274197"><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (948,329 samples, 0.40%)</title><rect x="0.0000%" y="3381" width="0.4048%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="948329"/><text x="0.2500%" y="3391.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,033,581 samples, 0.44%)</title><rect x="0.4048%" y="3381" width="0.4412%" height="15" fill="rgb(217,0,24)" fg:x="948329" fg:w="1033581"/><text x="0.6548%" y="3391.50"></text></g><g><title>[libc.so.6] (7,688,980 samples, 3.28%)</title><rect x="0.8460%" y="3381" width="3.2820%" height="15" fill="rgb(221,193,54)" fg:x="1981910" fg:w="7688980"/><text x="1.0960%" y="3391.50">[li..</text></g><g><title>[libc.so.6] (1,381,731 samples, 0.59%)</title><rect x="3.5382%" y="3365" width="0.5898%" height="15" fill="rgb(248,212,6)" fg:x="8289159" fg:w="1381731"/><text x="3.7882%" y="3375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,254,061 samples, 0.54%)</title><rect x="4.1280%" y="3365" width="0.5353%" height="15" fill="rgb(208,68,35)" fg:x="9670890" fg:w="1254061"/><text x="4.3780%" y="3375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,254,061 samples, 0.54%)</title><rect x="4.1280%" y="3349" width="0.5353%" height="15" fill="rgb(232,128,0)" fg:x="9670890" fg:w="1254061"/><text x="4.3780%" y="3359.50"></text></g><g><title>alloc::slice::hack::to_vec (1,254,061 samples, 0.54%)</title><rect x="4.1280%" y="3333" width="0.5353%" height="15" fill="rgb(207,160,47)" fg:x="9670890" fg:w="1254061"/><text x="4.3780%" y="3343.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,254,061 samples, 0.54%)</title><rect x="4.1280%" y="3317" width="0.5353%" height="15" fill="rgb(228,23,34)" fg:x="9670890" fg:w="1254061"/><text x="4.3780%" y="3327.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,254,061 samples, 0.54%)</title><rect x="4.1280%" y="3301" width="0.5353%" height="15" fill="rgb(218,30,26)" fg:x="9670890" fg:w="1254061"/><text x="4.3780%" y="3311.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,254,061 samples, 0.54%)</title><rect x="4.1280%" y="3285" width="0.5353%" height="15" fill="rgb(220,122,19)" fg:x="9670890" fg:w="1254061"/><text x="4.3780%" y="3295.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,254,061 samples, 0.54%)</title><rect x="4.1280%" y="3269" width="0.5353%" height="15" fill="rgb(250,228,42)" fg:x="9670890" fg:w="1254061"/><text x="4.3780%" y="3279.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,254,061 samples, 0.54%)</title><rect x="4.1280%" y="3253" width="0.5353%" height="15" fill="rgb(240,193,28)" fg:x="9670890" fg:w="1254061"/><text x="4.3780%" y="3263.50"></text></g><g><title>[unknown] (2,512,377 samples, 1.07%)</title><rect x="4.1280%" y="3381" width="1.0724%" height="15" fill="rgb(216,20,37)" fg:x="9670890" fg:w="2512377"/><text x="4.3780%" y="3391.50"></text></g><g><title>benchmark::count_nodes (1,258,316 samples, 0.54%)</title><rect x="4.6633%" y="3365" width="0.5371%" height="15" fill="rgb(206,188,39)" fg:x="10924951" fg:w="1258316"/><text x="4.9133%" y="3375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,358,563 samples, 0.58%)</title><rect x="5.2004%" y="2997" width="0.5799%" height="15" fill="rgb(217,207,13)" fg:x="12183267" fg:w="1358563"/><text x="5.4504%" y="3007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,358,563 samples, 0.58%)</title><rect x="5.2004%" y="2981" width="0.5799%" height="15" fill="rgb(231,73,38)" fg:x="12183267" fg:w="1358563"/><text x="5.4504%" y="2991.50"></text></g><g><title>alloc::slice::hack::to_vec (1,358,563 samples, 0.58%)</title><rect x="5.2004%" y="2965" width="0.5799%" height="15" fill="rgb(225,20,46)" fg:x="12183267" fg:w="1358563"/><text x="5.4504%" y="2975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,358,563 samples, 0.58%)</title><rect x="5.2004%" y="2949" width="0.5799%" height="15" fill="rgb(210,31,41)" fg:x="12183267" fg:w="1358563"/><text x="5.4504%" y="2959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,358,563 samples, 0.58%)</title><rect x="5.2004%" y="2933" width="0.5799%" height="15" fill="rgb(221,200,47)" fg:x="12183267" fg:w="1358563"/><text x="5.4504%" y="2943.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (952,103 samples, 0.41%)</title><rect x="5.7803%" y="2949" width="0.4064%" height="15" fill="rgb(226,26,5)" fg:x="13541830" fg:w="952103"/><text x="6.0303%" y="2959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (952,103 samples, 0.41%)</title><rect x="5.7803%" y="2933" width="0.4064%" height="15" fill="rgb(249,33,26)" fg:x="13541830" fg:w="952103"/><text x="6.0303%" y="2943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (952,103 samples, 0.41%)</title><rect x="5.7803%" y="2917" width="0.4064%" height="15" fill="rgb(235,183,28)" fg:x="13541830" fg:w="952103"/><text x="6.0303%" y="2927.50"></text></g><g><title>alloc::slice::hack::to_vec (952,103 samples, 0.41%)</title><rect x="5.7803%" y="2901" width="0.4064%" height="15" fill="rgb(221,5,38)" fg:x="13541830" fg:w="952103"/><text x="6.0303%" y="2911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (952,103 samples, 0.41%)</title><rect x="5.7803%" y="2885" width="0.4064%" height="15" fill="rgb(247,18,42)" fg:x="13541830" fg:w="952103"/><text x="6.0303%" y="2895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (952,103 samples, 0.41%)</title><rect x="5.7803%" y="2869" width="0.4064%" height="15" fill="rgb(241,131,45)" fg:x="13541830" fg:w="952103"/><text x="6.0303%" y="2879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (952,103 samples, 0.41%)</title><rect x="5.7803%" y="2853" width="0.4064%" height="15" fill="rgb(249,31,29)" fg:x="13541830" fg:w="952103"/><text x="6.0303%" y="2863.50"></text></g><g><title>[libc.so.6] (952,103 samples, 0.41%)</title><rect x="5.7803%" y="2837" width="0.4064%" height="15" fill="rgb(225,111,53)" fg:x="13541830" fg:w="952103"/><text x="6.0303%" y="2847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (992,589 samples, 0.42%)</title><rect x="6.1867%" y="2805" width="0.4237%" height="15" fill="rgb(238,160,17)" fg:x="14493933" fg:w="992589"/><text x="6.4367%" y="2815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (992,589 samples, 0.42%)</title><rect x="6.1867%" y="2789" width="0.4237%" height="15" fill="rgb(214,148,48)" fg:x="14493933" fg:w="992589"/><text x="6.4367%" y="2799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (992,589 samples, 0.42%)</title><rect x="6.1867%" y="2773" width="0.4237%" height="15" fill="rgb(232,36,49)" fg:x="14493933" fg:w="992589"/><text x="6.4367%" y="2783.50"></text></g><g><title>alloc::slice::hack::to_vec (992,589 samples, 0.42%)</title><rect x="6.1867%" y="2757" width="0.4237%" height="15" fill="rgb(209,103,24)" fg:x="14493933" fg:w="992589"/><text x="6.4367%" y="2767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (992,589 samples, 0.42%)</title><rect x="6.1867%" y="2741" width="0.4237%" height="15" fill="rgb(229,88,8)" fg:x="14493933" fg:w="992589"/><text x="6.4367%" y="2751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (992,589 samples, 0.42%)</title><rect x="6.1867%" y="2725" width="0.4237%" height="15" fill="rgb(213,181,19)" fg:x="14493933" fg:w="992589"/><text x="6.4367%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (992,589 samples, 0.42%)</title><rect x="6.1867%" y="2709" width="0.4237%" height="15" fill="rgb(254,191,54)" fg:x="14493933" fg:w="992589"/><text x="6.4367%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (992,589 samples, 0.42%)</title><rect x="6.1867%" y="2693" width="0.4237%" height="15" fill="rgb(241,83,37)" fg:x="14493933" fg:w="992589"/><text x="6.4367%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (992,589 samples, 0.42%)</title><rect x="6.1867%" y="2677" width="0.4237%" height="15" fill="rgb(233,36,39)" fg:x="14493933" fg:w="992589"/><text x="6.4367%" y="2687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (992,589 samples, 0.42%)</title><rect x="6.1867%" y="2661" width="0.4237%" height="15" fill="rgb(226,3,54)" fg:x="14493933" fg:w="992589"/><text x="6.4367%" y="2671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (992,589 samples, 0.42%)</title><rect x="6.1867%" y="2645" width="0.4237%" height="15" fill="rgb(245,192,40)" fg:x="14493933" fg:w="992589"/><text x="6.4367%" y="2655.50"></text></g><g><title>alloc::alloc::alloc (992,589 samples, 0.42%)</title><rect x="6.1867%" y="2629" width="0.4237%" height="15" fill="rgb(238,167,29)" fg:x="14493933" fg:w="992589"/><text x="6.4367%" y="2639.50"></text></g><g><title>malloc (992,589 samples, 0.42%)</title><rect x="6.1867%" y="2613" width="0.4237%" height="15" fill="rgb(232,182,51)" fg:x="14493933" fg:w="992589"/><text x="6.4367%" y="2623.50"></text></g><g><title>[libc.so.6] (992,589 samples, 0.42%)</title><rect x="6.1867%" y="2597" width="0.4237%" height="15" fill="rgb(231,60,39)" fg:x="14493933" fg:w="992589"/><text x="6.4367%" y="2607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2789" width="0.5775%" height="15" fill="rgb(208,69,12)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2773" width="0.5775%" height="15" fill="rgb(235,93,37)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2783.50"></text></g><g><title>alloc::slice::hack::to_vec (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2757" width="0.5775%" height="15" fill="rgb(213,116,39)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2741" width="0.5775%" height="15" fill="rgb(222,207,29)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2751.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2725" width="0.5775%" height="15" fill="rgb(206,96,30)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2735.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2709" width="0.5775%" height="15" fill="rgb(218,138,4)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2693" width="0.5775%" height="15" fill="rgb(250,191,14)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2677" width="0.5775%" height="15" fill="rgb(239,60,40)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2687.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2661" width="0.5775%" height="15" fill="rgb(206,27,48)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2645" width="0.5775%" height="15" fill="rgb(225,35,8)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2629" width="0.5775%" height="15" fill="rgb(250,213,24)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2639.50"></text></g><g><title>alloc::slice::hack::to_vec (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2613" width="0.5775%" height="15" fill="rgb(247,123,22)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2597" width="0.5775%" height="15" fill="rgb(231,138,38)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2607.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2581" width="0.5775%" height="15" fill="rgb(231,145,46)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2591.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2565" width="0.5775%" height="15" fill="rgb(251,118,11)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2549" width="0.5775%" height="15" fill="rgb(217,147,25)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2533" width="0.5775%" height="15" fill="rgb(247,81,37)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2543.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2517" width="0.5775%" height="15" fill="rgb(209,12,38)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2501" width="0.5775%" height="15" fill="rgb(227,1,9)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2485" width="0.5775%" height="15" fill="rgb(248,47,43)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2495.50"></text></g><g><title>alloc::slice::hack::to_vec (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2469" width="0.5775%" height="15" fill="rgb(221,10,30)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2453" width="0.5775%" height="15" fill="rgb(210,229,1)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2463.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2437" width="0.5775%" height="15" fill="rgb(222,148,37)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2447.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2421" width="0.5775%" height="15" fill="rgb(234,67,33)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2405" width="0.5775%" height="15" fill="rgb(247,98,35)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2389" width="0.5775%" height="15" fill="rgb(247,138,52)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2399.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2373" width="0.5775%" height="15" fill="rgb(213,79,30)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2357" width="0.5775%" height="15" fill="rgb(246,177,23)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2341" width="0.5775%" height="15" fill="rgb(230,62,27)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2351.50"></text></g><g><title>alloc::slice::hack::to_vec (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2325" width="0.5775%" height="15" fill="rgb(216,154,8)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2309" width="0.5775%" height="15" fill="rgb(244,35,45)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2319.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2293" width="0.5775%" height="15" fill="rgb(251,115,12)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2303.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2277" width="0.5775%" height="15" fill="rgb(240,54,50)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2261" width="0.5775%" height="15" fill="rgb(233,84,52)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2245" width="0.5775%" height="15" fill="rgb(207,117,47)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2255.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2229" width="0.5775%" height="15" fill="rgb(249,43,39)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2213" width="0.5775%" height="15" fill="rgb(209,38,44)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2197" width="0.5775%" height="15" fill="rgb(236,212,23)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2207.50"></text></g><g><title>alloc::slice::hack::to_vec (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2181" width="0.5775%" height="15" fill="rgb(242,79,21)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2165" width="0.5775%" height="15" fill="rgb(211,96,35)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2175.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2149" width="0.5775%" height="15" fill="rgb(253,215,40)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2159.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2133" width="0.5775%" height="15" fill="rgb(211,81,21)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2117" width="0.5775%" height="15" fill="rgb(208,190,38)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2101" width="0.5775%" height="15" fill="rgb(235,213,38)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2111.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,352,828 samples, 0.58%)</title><rect x="6.6104%" y="2085" width="0.5775%" height="15" fill="rgb(237,122,38)" fg:x="15486522" fg:w="1352828"/><text x="6.8604%" y="2095.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,060,561 samples, 2.59%)</title><rect x="5.2004%" y="3013" width="2.5870%" height="15" fill="rgb(244,218,35)" fg:x="12183267" fg:w="6060561"/><text x="5.4504%" y="3023.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,701,998 samples, 2.01%)</title><rect x="5.7803%" y="2997" width="2.0070%" height="15" fill="rgb(240,68,47)" fg:x="13541830" fg:w="4701998"/><text x="6.0303%" y="3007.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,701,998 samples, 2.01%)</title><rect x="5.7803%" y="2981" width="2.0070%" height="15" fill="rgb(210,16,53)" fg:x="13541830" fg:w="4701998"/><text x="6.0303%" y="2991.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,701,998 samples, 2.01%)</title><rect x="5.7803%" y="2965" width="2.0070%" height="15" fill="rgb(235,124,12)" fg:x="13541830" fg:w="4701998"/><text x="6.0303%" y="2975.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,749,895 samples, 1.60%)</title><rect x="6.1867%" y="2949" width="1.6006%" height="15" fill="rgb(224,169,11)" fg:x="14493933" fg:w="3749895"/><text x="6.4367%" y="2959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,749,895 samples, 1.60%)</title><rect x="6.1867%" y="2933" width="1.6006%" height="15" fill="rgb(250,166,2)" fg:x="14493933" fg:w="3749895"/><text x="6.4367%" y="2943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,749,895 samples, 1.60%)</title><rect x="6.1867%" y="2917" width="1.6006%" height="15" fill="rgb(242,216,29)" fg:x="14493933" fg:w="3749895"/><text x="6.4367%" y="2927.50"></text></g><g><title>alloc::slice::hack::to_vec (3,749,895 samples, 1.60%)</title><rect x="6.1867%" y="2901" width="1.6006%" height="15" fill="rgb(230,116,27)" fg:x="14493933" fg:w="3749895"/><text x="6.4367%" y="2911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,749,895 samples, 1.60%)</title><rect x="6.1867%" y="2885" width="1.6006%" height="15" fill="rgb(228,99,48)" fg:x="14493933" fg:w="3749895"/><text x="6.4367%" y="2895.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,749,895 samples, 1.60%)</title><rect x="6.1867%" y="2869" width="1.6006%" height="15" fill="rgb(253,11,6)" fg:x="14493933" fg:w="3749895"/><text x="6.4367%" y="2879.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,749,895 samples, 1.60%)</title><rect x="6.1867%" y="2853" width="1.6006%" height="15" fill="rgb(247,143,39)" fg:x="14493933" fg:w="3749895"/><text x="6.4367%" y="2863.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,749,895 samples, 1.60%)</title><rect x="6.1867%" y="2837" width="1.6006%" height="15" fill="rgb(236,97,10)" fg:x="14493933" fg:w="3749895"/><text x="6.4367%" y="2847.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,749,895 samples, 1.60%)</title><rect x="6.1867%" y="2821" width="1.6006%" height="15" fill="rgb(233,208,19)" fg:x="14493933" fg:w="3749895"/><text x="6.4367%" y="2831.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,757,306 samples, 1.18%)</title><rect x="6.6104%" y="2805" width="1.1770%" height="15" fill="rgb(216,164,2)" fg:x="15486522" fg:w="2757306"/><text x="6.8604%" y="2815.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,404,478 samples, 0.60%)</title><rect x="7.1879%" y="2789" width="0.5995%" height="15" fill="rgb(220,129,5)" fg:x="16839350" fg:w="1404478"/><text x="7.4379%" y="2799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,404,478 samples, 0.60%)</title><rect x="7.1879%" y="2773" width="0.5995%" height="15" fill="rgb(242,17,10)" fg:x="16839350" fg:w="1404478"/><text x="7.4379%" y="2783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,404,478 samples, 0.60%)</title><rect x="7.1879%" y="2757" width="0.5995%" height="15" fill="rgb(242,107,0)" fg:x="16839350" fg:w="1404478"/><text x="7.4379%" y="2767.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (1,404,478 samples, 0.60%)</title><rect x="7.1879%" y="2741" width="0.5995%" height="15" fill="rgb(251,28,31)" fg:x="16839350" fg:w="1404478"/><text x="7.4379%" y="2751.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (1,404,478 samples, 0.60%)</title><rect x="7.1879%" y="2725" width="0.5995%" height="15" fill="rgb(233,223,10)" fg:x="16839350" fg:w="1404478"/><text x="7.4379%" y="2735.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,404,478 samples, 0.60%)</title><rect x="7.1879%" y="2709" width="0.5995%" height="15" fill="rgb(215,21,27)" fg:x="16839350" fg:w="1404478"/><text x="7.4379%" y="2719.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (7,378,722 samples, 3.15%)</title><rect x="5.2004%" y="3093" width="3.1496%" height="15" fill="rgb(232,23,21)" fg:x="12183267" fg:w="7378722"/><text x="5.4504%" y="3103.50">&lt;be..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,378,722 samples, 3.15%)</title><rect x="5.2004%" y="3077" width="3.1496%" height="15" fill="rgb(244,5,23)" fg:x="12183267" fg:w="7378722"/><text x="5.4504%" y="3087.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,378,722 samples, 3.15%)</title><rect x="5.2004%" y="3061" width="3.1496%" height="15" fill="rgb(226,81,46)" fg:x="12183267" fg:w="7378722"/><text x="5.4504%" y="3071.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,378,722 samples, 3.15%)</title><rect x="5.2004%" y="3045" width="3.1496%" height="15" fill="rgb(247,70,30)" fg:x="12183267" fg:w="7378722"/><text x="5.4504%" y="3055.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,378,722 samples, 3.15%)</title><rect x="5.2004%" y="3029" width="3.1496%" height="15" fill="rgb(212,68,19)" fg:x="12183267" fg:w="7378722"/><text x="5.4504%" y="3039.50">&lt;al..</text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (1,318,161 samples, 0.56%)</title><rect x="7.7874%" y="3013" width="0.5627%" height="15" fill="rgb(240,187,13)" fg:x="18243828" fg:w="1318161"/><text x="8.0374%" y="3023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1,318,161 samples, 0.56%)</title><rect x="7.7874%" y="2997" width="0.5627%" height="15" fill="rgb(223,113,26)" fg:x="18243828" fg:w="1318161"/><text x="8.0374%" y="3007.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1,318,161 samples, 0.56%)</title><rect x="7.7874%" y="2981" width="0.5627%" height="15" fill="rgb(206,192,2)" fg:x="18243828" fg:w="1318161"/><text x="8.0374%" y="2991.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::init (1,318,161 samples, 0.56%)</title><rect x="7.7874%" y="2965" width="0.5627%" height="15" fill="rgb(241,108,4)" fg:x="18243828" fg:w="1318161"/><text x="8.0374%" y="2975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,318,161 samples, 0.56%)</title><rect x="7.7874%" y="2949" width="0.5627%" height="15" fill="rgb(247,173,49)" fg:x="18243828" fg:w="1318161"/><text x="8.0374%" y="2959.50"></text></g><g><title>core::ptr::write (1,318,161 samples, 0.56%)</title><rect x="7.7874%" y="2933" width="0.5627%" height="15" fill="rgb(224,114,35)" fg:x="18243828" fg:w="1318161"/><text x="8.0374%" y="2943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (955,223 samples, 0.41%)</title><rect x="8.3500%" y="3093" width="0.4077%" height="15" fill="rgb(245,159,27)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="3103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="3077" width="0.4077%" height="15" fill="rgb(245,172,44)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="3061" width="0.4077%" height="15" fill="rgb(236,23,11)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="3045" width="0.4077%" height="15" fill="rgb(205,117,38)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="3055.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="3029" width="0.4077%" height="15" fill="rgb(237,72,25)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="3039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="3013" width="0.4077%" height="15" fill="rgb(244,70,9)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="3023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2997" width="0.4077%" height="15" fill="rgb(217,125,39)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="3007.50"></text></g><g><title>core::mem::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2981" width="0.4077%" height="15" fill="rgb(235,36,10)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2965" width="0.4077%" height="15" fill="rgb(251,123,47)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2975.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2949" width="0.4077%" height="15" fill="rgb(221,13,13)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2959.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2933" width="0.4077%" height="15" fill="rgb(238,131,9)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2917" width="0.4077%" height="15" fill="rgb(211,50,8)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2927.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2901" width="0.4077%" height="15" fill="rgb(245,182,24)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2911.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2885" width="0.4077%" height="15" fill="rgb(242,14,37)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2869" width="0.4077%" height="15" fill="rgb(246,228,12)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2853" width="0.4077%" height="15" fill="rgb(213,55,15)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2837" width="0.4077%" height="15" fill="rgb(209,9,3)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2847.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2821" width="0.4077%" height="15" fill="rgb(230,59,30)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2831.50"></text></g><g><title>core::mem::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2805" width="0.4077%" height="15" fill="rgb(209,121,21)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2789" width="0.4077%" height="15" fill="rgb(220,109,13)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2799.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2773" width="0.4077%" height="15" fill="rgb(232,18,1)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2783.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2757" width="0.4077%" height="15" fill="rgb(215,41,42)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2741" width="0.4077%" height="15" fill="rgb(224,123,36)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2751.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2725" width="0.4077%" height="15" fill="rgb(240,125,3)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2735.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2709" width="0.4077%" height="15" fill="rgb(205,98,50)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2693" width="0.4077%" height="15" fill="rgb(205,185,37)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2677" width="0.4077%" height="15" fill="rgb(238,207,15)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2661" width="0.4077%" height="15" fill="rgb(213,199,42)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2645" width="0.4077%" height="15" fill="rgb(235,201,11)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2629" width="0.4077%" height="15" fill="rgb(207,46,11)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2613" width="0.4077%" height="15" fill="rgb(241,35,35)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2597" width="0.4077%" height="15" fill="rgb(243,32,47)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2581" width="0.4077%" height="15" fill="rgb(247,202,23)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2591.50"></text></g><g><title>core::mem::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2565" width="0.4077%" height="15" fill="rgb(219,102,11)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2549" width="0.4077%" height="15" fill="rgb(243,110,44)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2533" width="0.4077%" height="15" fill="rgb(222,74,54)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2517" width="0.4077%" height="15" fill="rgb(216,99,12)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2501" width="0.4077%" height="15" fill="rgb(226,22,26)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2511.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2485" width="0.4077%" height="15" fill="rgb(217,163,10)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2469" width="0.4077%" height="15" fill="rgb(213,25,53)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2453" width="0.4077%" height="15" fill="rgb(252,105,26)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2437" width="0.4077%" height="15" fill="rgb(220,39,43)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2421" width="0.4077%" height="15" fill="rgb(229,68,48)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2405" width="0.4077%" height="15" fill="rgb(252,8,32)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2389" width="0.4077%" height="15" fill="rgb(223,20,43)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2373" width="0.4077%" height="15" fill="rgb(229,81,49)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2357" width="0.4077%" height="15" fill="rgb(236,28,36)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2341" width="0.4077%" height="15" fill="rgb(249,185,26)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2351.50"></text></g><g><title>core::mem::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2325" width="0.4077%" height="15" fill="rgb(249,174,33)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2309" width="0.4077%" height="15" fill="rgb(233,201,37)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2293" width="0.4077%" height="15" fill="rgb(221,78,26)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2277" width="0.4077%" height="15" fill="rgb(250,127,30)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2261" width="0.4077%" height="15" fill="rgb(230,49,44)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2271.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2245" width="0.4077%" height="15" fill="rgb(229,67,23)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2255.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2229" width="0.4077%" height="15" fill="rgb(249,83,47)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2213" width="0.4077%" height="15" fill="rgb(215,43,3)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2197" width="0.4077%" height="15" fill="rgb(238,154,13)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2181" width="0.4077%" height="15" fill="rgb(219,56,2)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2165" width="0.4077%" height="15" fill="rgb(233,0,4)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2149" width="0.4077%" height="15" fill="rgb(235,30,7)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2133" width="0.4077%" height="15" fill="rgb(250,79,13)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2117" width="0.4077%" height="15" fill="rgb(211,146,34)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2101" width="0.4077%" height="15" fill="rgb(228,22,38)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2111.50"></text></g><g><title>core::mem::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2085" width="0.4077%" height="15" fill="rgb(235,168,5)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2069" width="0.4077%" height="15" fill="rgb(221,155,16)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2079.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2053" width="0.4077%" height="15" fill="rgb(215,215,53)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2063.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2037" width="0.4077%" height="15" fill="rgb(223,4,10)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2021" width="0.4077%" height="15" fill="rgb(234,103,6)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2031.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="2005" width="0.4077%" height="15" fill="rgb(227,97,0)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="2015.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1989" width="0.4077%" height="15" fill="rgb(234,150,53)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1973" width="0.4077%" height="15" fill="rgb(228,201,54)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1957" width="0.4077%" height="15" fill="rgb(222,22,37)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1941" width="0.4077%" height="15" fill="rgb(237,53,32)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1925" width="0.4077%" height="15" fill="rgb(233,25,53)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1909" width="0.4077%" height="15" fill="rgb(210,40,34)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1893" width="0.4077%" height="15" fill="rgb(241,220,44)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1877" width="0.4077%" height="15" fill="rgb(235,28,35)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1861" width="0.4077%" height="15" fill="rgb(210,56,17)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1871.50"></text></g><g><title>core::mem::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1845" width="0.4077%" height="15" fill="rgb(224,130,29)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1829" width="0.4077%" height="15" fill="rgb(235,212,8)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1813" width="0.4077%" height="15" fill="rgb(223,33,50)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1797" width="0.4077%" height="15" fill="rgb(219,149,13)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1807.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1781" width="0.4077%" height="15" fill="rgb(250,156,29)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1765" width="0.4077%" height="15" fill="rgb(216,193,19)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1749" width="0.4077%" height="15" fill="rgb(216,135,14)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1733" width="0.4077%" height="15" fill="rgb(241,47,5)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1743.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1717" width="0.4077%" height="15" fill="rgb(233,42,35)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1701" width="0.4077%" height="15" fill="rgb(231,13,6)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1685" width="0.4077%" height="15" fill="rgb(207,181,40)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1695.50"></text></g><g><title>alloc::alloc::dealloc (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1669" width="0.4077%" height="15" fill="rgb(254,173,49)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1679.50"></text></g><g><title>cfree (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1653" width="0.4077%" height="15" fill="rgb(221,1,38)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1663.50"></text></g><g><title>[libc.so.6] (955,223 samples, 0.41%)</title><rect x="8.3500%" y="1637" width="0.4077%" height="15" fill="rgb(206,124,46)" fg:x="19561989" fg:w="955223"/><text x="8.6000%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,248,004 samples, 0.53%)</title><rect x="8.7578%" y="3093" width="0.5327%" height="15" fill="rgb(249,21,11)" fg:x="20517212" fg:w="1248004"/><text x="9.0078%" y="3103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,248,004 samples, 0.53%)</title><rect x="8.7578%" y="3077" width="0.5327%" height="15" fill="rgb(222,201,40)" fg:x="20517212" fg:w="1248004"/><text x="9.0078%" y="3087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,248,004 samples, 0.53%)</title><rect x="8.7578%" y="3061" width="0.5327%" height="15" fill="rgb(235,61,29)" fg:x="20517212" fg:w="1248004"/><text x="9.0078%" y="3071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,248,004 samples, 0.53%)</title><rect x="8.7578%" y="3045" width="0.5327%" height="15" fill="rgb(219,207,3)" fg:x="20517212" fg:w="1248004"/><text x="9.0078%" y="3055.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,248,004 samples, 0.53%)</title><rect x="8.7578%" y="3029" width="0.5327%" height="15" fill="rgb(222,56,46)" fg:x="20517212" fg:w="1248004"/><text x="9.0078%" y="3039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,248,004 samples, 0.53%)</title><rect x="8.7578%" y="3013" width="0.5327%" height="15" fill="rgb(239,76,54)" fg:x="20517212" fg:w="1248004"/><text x="9.0078%" y="3023.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,248,004 samples, 0.53%)</title><rect x="8.7578%" y="2997" width="0.5327%" height="15" fill="rgb(231,124,27)" fg:x="20517212" fg:w="1248004"/><text x="9.0078%" y="3007.50"></text></g><g><title>alloc::alloc::realloc (1,248,004 samples, 0.53%)</title><rect x="8.7578%" y="2981" width="0.5327%" height="15" fill="rgb(249,195,6)" fg:x="20517212" fg:w="1248004"/><text x="9.0078%" y="2991.50"></text></g><g><title>realloc (1,248,004 samples, 0.53%)</title><rect x="8.7578%" y="2965" width="0.5327%" height="15" fill="rgb(237,174,47)" fg:x="20517212" fg:w="1248004"/><text x="9.0078%" y="2975.50"></text></g><g><title>[libc.so.6] (1,248,004 samples, 0.53%)</title><rect x="8.7578%" y="2949" width="0.5327%" height="15" fill="rgb(206,201,31)" fg:x="20517212" fg:w="1248004"/><text x="9.0078%" y="2959.50"></text></g><g><title>[libc.so.6] (1,248,004 samples, 0.53%)</title><rect x="8.7578%" y="2933" width="0.5327%" height="15" fill="rgb(231,57,52)" fg:x="20517212" fg:w="1248004"/><text x="9.0078%" y="2943.50"></text></g><g><title>[libc.so.6] (1,248,004 samples, 0.53%)</title><rect x="8.7578%" y="2917" width="0.5327%" height="15" fill="rgb(248,177,22)" fg:x="20517212" fg:w="1248004"/><text x="9.0078%" y="2927.50"></text></g><g><title>[libc.so.6] (1,248,004 samples, 0.53%)</title><rect x="8.7578%" y="2901" width="0.5327%" height="15" fill="rgb(215,211,37)" fg:x="20517212" fg:w="1248004"/><text x="9.0078%" y="2911.50"></text></g><g><title>benchmark::extract_path_from_command (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="3077" width="0.4985%" height="15" fill="rgb(241,128,51)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="3087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="3061" width="0.4985%" height="15" fill="rgb(227,165,31)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="3071.50"></text></g><g><title>benchmark::extract_path_from_command::_{{closure}} (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="3045" width="0.4985%" height="15" fill="rgb(228,167,24)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="3055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="3029" width="0.4985%" height="15" fill="rgb(228,143,12)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="3039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="3013" width="0.4985%" height="15" fill="rgb(249,149,8)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="3023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2997" width="0.4985%" height="15" fill="rgb(243,35,44)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="3007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2981" width="0.4985%" height="15" fill="rgb(246,89,9)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="2991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2965" width="0.4985%" height="15" fill="rgb(233,213,13)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="2975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2949" width="0.4985%" height="15" fill="rgb(233,141,41)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="2959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2933" width="0.4985%" height="15" fill="rgb(239,167,4)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="2943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2917" width="0.4985%" height="15" fill="rgb(209,217,16)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="2927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2901" width="0.4985%" height="15" fill="rgb(219,88,35)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="2911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2885" width="0.4985%" height="15" fill="rgb(220,193,23)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="2895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2869" width="0.4985%" height="15" fill="rgb(230,90,52)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="2879.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2853" width="0.4985%" height="15" fill="rgb(252,106,19)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="2863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2837" width="0.4985%" height="15" fill="rgb(206,74,20)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="2847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2821" width="0.4985%" height="15" fill="rgb(230,138,44)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="2831.50"></text></g><g><title>alloc::alloc::realloc (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2805" width="0.4985%" height="15" fill="rgb(235,182,43)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="2815.50"></text></g><g><title>realloc (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2789" width="0.4985%" height="15" fill="rgb(242,16,51)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="2799.50"></text></g><g><title>[libc.so.6] (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2773" width="0.4985%" height="15" fill="rgb(248,9,4)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="2783.50"></text></g><g><title>[libc.so.6] (1,167,840 samples, 0.50%)</title><rect x="9.2905%" y="2757" width="0.4985%" height="15" fill="rgb(210,31,22)" fg:x="21765216" fg:w="1167840"/><text x="9.5405%" y="2767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,596,163 samples, 1.11%)</title><rect x="9.7890%" y="3061" width="1.1082%" height="15" fill="rgb(239,54,39)" fg:x="22933056" fg:w="2596163"/><text x="10.0390%" y="3071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,596,163 samples, 1.11%)</title><rect x="9.7890%" y="3045" width="1.1082%" height="15" fill="rgb(230,99,41)" fg:x="22933056" fg:w="2596163"/><text x="10.0390%" y="3055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,596,163 samples, 1.11%)</title><rect x="9.7890%" y="3029" width="1.1082%" height="15" fill="rgb(253,106,12)" fg:x="22933056" fg:w="2596163"/><text x="10.0390%" y="3039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,596,163 samples, 1.11%)</title><rect x="9.7890%" y="3013" width="1.1082%" height="15" fill="rgb(213,46,41)" fg:x="22933056" fg:w="2596163"/><text x="10.0390%" y="3023.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,596,163 samples, 1.11%)</title><rect x="9.7890%" y="2997" width="1.1082%" height="15" fill="rgb(215,133,35)" fg:x="22933056" fg:w="2596163"/><text x="10.0390%" y="3007.50"></text></g><g><title>malloc (2,596,163 samples, 1.11%)</title><rect x="9.7890%" y="2981" width="1.1082%" height="15" fill="rgb(213,28,5)" fg:x="22933056" fg:w="2596163"/><text x="10.0390%" y="2991.50"></text></g><g><title>[libc.so.6] (2,596,163 samples, 1.11%)</title><rect x="9.7890%" y="2965" width="1.1082%" height="15" fill="rgb(215,77,49)" fg:x="22933056" fg:w="2596163"/><text x="10.0390%" y="2975.50"></text></g><g><title>[libc.so.6] (1,264,206 samples, 0.54%)</title><rect x="10.3575%" y="2949" width="0.5396%" height="15" fill="rgb(248,100,22)" fg:x="24265013" fg:w="1264206"/><text x="10.6075%" y="2959.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="3029" width="0.5448%" height="15" fill="rgb(208,67,9)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="3039.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="3013" width="0.5448%" height="15" fill="rgb(219,133,21)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="3023.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="2997" width="0.5448%" height="15" fill="rgb(246,46,29)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="3007.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="2981" width="0.5448%" height="15" fill="rgb(246,185,52)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="2991.50"></text></g><g><title>alloc::string::String::push_str (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="2965" width="0.5448%" height="15" fill="rgb(252,136,11)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="2975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="2949" width="0.5448%" height="15" fill="rgb(219,138,53)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="2959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="2933" width="0.5448%" height="15" fill="rgb(211,51,23)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="2943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="2917" width="0.5448%" height="15" fill="rgb(247,221,28)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="2927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="2901" width="0.5448%" height="15" fill="rgb(251,222,45)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="2911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="2885" width="0.5448%" height="15" fill="rgb(217,162,53)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="2895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="2869" width="0.5448%" height="15" fill="rgb(229,93,14)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="2879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="2853" width="0.5448%" height="15" fill="rgb(209,67,49)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="2863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="2837" width="0.5448%" height="15" fill="rgb(213,87,29)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="2847.50"></text></g><g><title>alloc::raw_vec::layout_array (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="2821" width="0.5448%" height="15" fill="rgb(205,151,52)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="2831.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="2805" width="0.5448%" height="15" fill="rgb(253,215,39)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="2815.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="2789" width="0.5448%" height="15" fill="rgb(221,220,41)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="2799.50"></text></g><g><title>core::alloc::layout::Layout::size_rounded_up_to_custom_align (1,276,382 samples, 0.54%)</title><rect x="10.8972%" y="2773" width="0.5448%" height="15" fill="rgb(218,133,21)" fg:x="25529219" fg:w="1276382"/><text x="11.1472%" y="2783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,440,504 samples, 0.61%)</title><rect x="11.4420%" y="3029" width="0.6149%" height="15" fill="rgb(221,193,43)" fg:x="26805601" fg:w="1440504"/><text x="11.6920%" y="3039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,440,504 samples, 0.61%)</title><rect x="11.4420%" y="3013" width="0.6149%" height="15" fill="rgb(240,128,52)" fg:x="26805601" fg:w="1440504"/><text x="11.6920%" y="3023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,440,504 samples, 0.61%)</title><rect x="11.4420%" y="2997" width="0.6149%" height="15" fill="rgb(253,114,12)" fg:x="26805601" fg:w="1440504"/><text x="11.6920%" y="3007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,440,504 samples, 0.61%)</title><rect x="11.4420%" y="2981" width="0.6149%" height="15" fill="rgb(215,223,47)" fg:x="26805601" fg:w="1440504"/><text x="11.6920%" y="2991.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,440,504 samples, 0.61%)</title><rect x="11.4420%" y="2965" width="0.6149%" height="15" fill="rgb(248,225,23)" fg:x="26805601" fg:w="1440504"/><text x="11.6920%" y="2975.50"></text></g><g><title>malloc (1,440,504 samples, 0.61%)</title><rect x="11.4420%" y="2949" width="0.6149%" height="15" fill="rgb(250,108,0)" fg:x="26805601" fg:w="1440504"/><text x="11.6920%" y="2959.50"></text></g><g><title>[libc.so.6] (1,440,504 samples, 0.61%)</title><rect x="11.4420%" y="2933" width="0.6149%" height="15" fill="rgb(228,208,7)" fg:x="26805601" fg:w="1440504"/><text x="11.6920%" y="2943.50"></text></g><g><title>[libc.so.6] (1,440,504 samples, 0.61%)</title><rect x="11.4420%" y="2917" width="0.6149%" height="15" fill="rgb(244,45,10)" fg:x="26805601" fg:w="1440504"/><text x="11.6920%" y="2927.50"></text></g><g><title>[libc.so.6] (1,440,504 samples, 0.61%)</title><rect x="11.4420%" y="2901" width="0.6149%" height="15" fill="rgb(207,125,25)" fg:x="26805601" fg:w="1440504"/><text x="11.6920%" y="2911.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,262,548 samples, 0.54%)</title><rect x="12.0569%" y="3013" width="0.5389%" height="15" fill="rgb(210,195,18)" fg:x="28246105" fg:w="1262548"/><text x="12.3069%" y="3023.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (1,262,548 samples, 0.54%)</title><rect x="12.0569%" y="2997" width="0.5389%" height="15" fill="rgb(249,80,12)" fg:x="28246105" fg:w="1262548"/><text x="12.3069%" y="3007.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (1,262,548 samples, 0.54%)</title><rect x="12.0569%" y="2981" width="0.5389%" height="15" fill="rgb(221,65,9)" fg:x="28246105" fg:w="1262548"/><text x="12.3069%" y="2991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,323,677 samples, 0.57%)</title><rect x="12.5958%" y="3013" width="0.5650%" height="15" fill="rgb(235,49,36)" fg:x="29508653" fg:w="1323677"/><text x="12.8458%" y="3023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,323,677 samples, 0.57%)</title><rect x="12.5958%" y="2997" width="0.5650%" height="15" fill="rgb(225,32,20)" fg:x="29508653" fg:w="1323677"/><text x="12.8458%" y="3007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,323,677 samples, 0.57%)</title><rect x="12.5958%" y="2981" width="0.5650%" height="15" fill="rgb(215,141,46)" fg:x="29508653" fg:w="1323677"/><text x="12.8458%" y="2991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,323,677 samples, 0.57%)</title><rect x="12.5958%" y="2965" width="0.5650%" height="15" fill="rgb(250,160,47)" fg:x="29508653" fg:w="1323677"/><text x="12.8458%" y="2975.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,323,677 samples, 0.57%)</title><rect x="12.5958%" y="2949" width="0.5650%" height="15" fill="rgb(216,222,40)" fg:x="29508653" fg:w="1323677"/><text x="12.8458%" y="2959.50"></text></g><g><title>malloc (1,323,677 samples, 0.57%)</title><rect x="12.5958%" y="2933" width="0.5650%" height="15" fill="rgb(234,217,39)" fg:x="29508653" fg:w="1323677"/><text x="12.8458%" y="2943.50"></text></g><g><title>[libc.so.6] (1,323,677 samples, 0.57%)</title><rect x="12.5958%" y="2917" width="0.5650%" height="15" fill="rgb(207,178,40)" fg:x="29508653" fg:w="1323677"/><text x="12.8458%" y="2927.50"></text></g><g><title>[libc.so.6] (1,323,677 samples, 0.57%)</title><rect x="12.5958%" y="2901" width="0.5650%" height="15" fill="rgb(221,136,13)" fg:x="29508653" fg:w="1323677"/><text x="12.8458%" y="2911.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (890,946 samples, 0.38%)</title><rect x="13.1608%" y="2997" width="0.3803%" height="15" fill="rgb(249,199,10)" fg:x="30832330" fg:w="890946"/><text x="13.4108%" y="3007.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (890,946 samples, 0.38%)</title><rect x="13.1608%" y="2981" width="0.3803%" height="15" fill="rgb(249,222,13)" fg:x="30832330" fg:w="890946"/><text x="13.4108%" y="2991.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (890,946 samples, 0.38%)</title><rect x="13.1608%" y="2965" width="0.3803%" height="15" fill="rgb(244,185,38)" fg:x="30832330" fg:w="890946"/><text x="13.4108%" y="2975.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (890,946 samples, 0.38%)</title><rect x="13.1608%" y="2949" width="0.3803%" height="15" fill="rgb(236,202,9)" fg:x="30832330" fg:w="890946"/><text x="13.4108%" y="2959.50"></text></g><g><title>alloc::string::String::push_str (890,946 samples, 0.38%)</title><rect x="13.1608%" y="2933" width="0.3803%" height="15" fill="rgb(250,229,37)" fg:x="30832330" fg:w="890946"/><text x="13.4108%" y="2943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (890,946 samples, 0.38%)</title><rect x="13.1608%" y="2917" width="0.3803%" height="15" fill="rgb(206,174,23)" fg:x="30832330" fg:w="890946"/><text x="13.4108%" y="2927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (890,946 samples, 0.38%)</title><rect x="13.1608%" y="2901" width="0.3803%" height="15" fill="rgb(211,33,43)" fg:x="30832330" fg:w="890946"/><text x="13.4108%" y="2911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (890,946 samples, 0.38%)</title><rect x="13.1608%" y="2885" width="0.3803%" height="15" fill="rgb(245,58,50)" fg:x="30832330" fg:w="890946"/><text x="13.4108%" y="2895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (890,946 samples, 0.38%)</title><rect x="13.1608%" y="2869" width="0.3803%" height="15" fill="rgb(244,68,36)" fg:x="30832330" fg:w="890946"/><text x="13.4108%" y="2879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (890,946 samples, 0.38%)</title><rect x="13.1608%" y="2853" width="0.3803%" height="15" fill="rgb(232,229,15)" fg:x="30832330" fg:w="890946"/><text x="13.4108%" y="2863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (890,946 samples, 0.38%)</title><rect x="13.1608%" y="2837" width="0.3803%" height="15" fill="rgb(254,30,23)" fg:x="30832330" fg:w="890946"/><text x="13.4108%" y="2847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (890,946 samples, 0.38%)</title><rect x="13.1608%" y="2821" width="0.3803%" height="15" fill="rgb(235,160,14)" fg:x="30832330" fg:w="890946"/><text x="13.4108%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (890,946 samples, 0.38%)</title><rect x="13.1608%" y="2805" width="0.3803%" height="15" fill="rgb(212,155,44)" fg:x="30832330" fg:w="890946"/><text x="13.4108%" y="2815.50"></text></g><g><title>alloc::raw_vec::finish_grow (890,946 samples, 0.38%)</title><rect x="13.1608%" y="2789" width="0.3803%" height="15" fill="rgb(226,2,50)" fg:x="30832330" fg:w="890946"/><text x="13.4108%" y="2799.50"></text></g><g><title>malloc (890,946 samples, 0.38%)</title><rect x="13.1608%" y="2773" width="0.3803%" height="15" fill="rgb(234,177,6)" fg:x="30832330" fg:w="890946"/><text x="13.4108%" y="2783.50"></text></g><g><title>[libc.so.6] (975,040 samples, 0.42%)</title><rect x="13.5411%" y="2997" width="0.4162%" height="15" fill="rgb(217,24,9)" fg:x="31723276" fg:w="975040"/><text x="13.7911%" y="3007.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2981" width="0.4001%" height="15" fill="rgb(220,13,46)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2991.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2965" width="0.4001%" height="15" fill="rgb(239,221,27)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2975.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2949" width="0.4001%" height="15" fill="rgb(222,198,25)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2959.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2933" width="0.4001%" height="15" fill="rgb(211,99,13)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2943.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2917" width="0.4001%" height="15" fill="rgb(232,111,31)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2901" width="0.4001%" height="15" fill="rgb(245,82,37)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2885" width="0.4001%" height="15" fill="rgb(227,149,46)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2895.50"></text></g><g><title>alloc::slice::hack::to_vec (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2869" width="0.4001%" height="15" fill="rgb(218,36,50)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2853" width="0.4001%" height="15" fill="rgb(226,80,48)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2837" width="0.4001%" height="15" fill="rgb(238,224,15)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2821" width="0.4001%" height="15" fill="rgb(241,136,10)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2805" width="0.4001%" height="15" fill="rgb(208,32,45)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2789" width="0.4001%" height="15" fill="rgb(207,135,9)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2773" width="0.4001%" height="15" fill="rgb(206,86,44)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2757" width="0.4001%" height="15" fill="rgb(245,177,15)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2767.50"></text></g><g><title>alloc::alloc::alloc (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2741" width="0.4001%" height="15" fill="rgb(206,64,50)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2751.50"></text></g><g><title>malloc (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2725" width="0.4001%" height="15" fill="rgb(234,36,40)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2735.50"></text></g><g><title>[libc.so.6] (937,362 samples, 0.40%)</title><rect x="13.9573%" y="2709" width="0.4001%" height="15" fill="rgb(213,64,8)" fg:x="32698316" fg:w="937362"/><text x="14.2073%" y="2719.50"></text></g><g><title>benchmark::json_to_html_node (1,315,477 samples, 0.56%)</title><rect x="14.3574%" y="2981" width="0.5615%" height="15" fill="rgb(210,75,36)" fg:x="33635678" fg:w="1315477"/><text x="14.6074%" y="2991.50"></text></g><g><title>benchmark::json_to_html_node (1,315,477 samples, 0.56%)</title><rect x="14.3574%" y="2965" width="0.5615%" height="15" fill="rgb(229,88,21)" fg:x="33635678" fg:w="1315477"/><text x="14.6074%" y="2975.50"></text></g><g><title>benchmark::json_to_html_node (1,315,477 samples, 0.56%)</title><rect x="14.3574%" y="2949" width="0.5615%" height="15" fill="rgb(252,204,47)" fg:x="33635678" fg:w="1315477"/><text x="14.6074%" y="2959.50"></text></g><g><title>benchmark::json_to_html_node (1,315,477 samples, 0.56%)</title><rect x="14.3574%" y="2933" width="0.5615%" height="15" fill="rgb(208,77,27)" fg:x="33635678" fg:w="1315477"/><text x="14.6074%" y="2943.50"></text></g><g><title>benchmark::json_to_html_node (1,315,477 samples, 0.56%)</title><rect x="14.3574%" y="2917" width="0.5615%" height="15" fill="rgb(221,76,26)" fg:x="33635678" fg:w="1315477"/><text x="14.6074%" y="2927.50"></text></g><g><title>serde_json::value::Value::as_str (1,315,477 samples, 0.56%)</title><rect x="14.3574%" y="2901" width="0.5615%" height="15" fill="rgb(225,139,18)" fg:x="33635678" fg:w="1315477"/><text x="14.6074%" y="2911.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1,315,477 samples, 0.56%)</title><rect x="14.3574%" y="2885" width="0.5615%" height="15" fill="rgb(230,137,11)" fg:x="33635678" fg:w="1315477"/><text x="14.6074%" y="2895.50"></text></g><g><title>alloc::string::String::as_str (1,315,477 samples, 0.56%)</title><rect x="14.3574%" y="2869" width="0.5615%" height="15" fill="rgb(212,28,1)" fg:x="33635678" fg:w="1315477"/><text x="14.6074%" y="2879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,315,477 samples, 0.56%)</title><rect x="14.3574%" y="2853" width="0.5615%" height="15" fill="rgb(248,164,17)" fg:x="33635678" fg:w="1315477"/><text x="14.6074%" y="2863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1,315,477 samples, 0.56%)</title><rect x="14.3574%" y="2837" width="0.5615%" height="15" fill="rgb(222,171,42)" fg:x="33635678" fg:w="1315477"/><text x="14.6074%" y="2847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1,315,477 samples, 0.56%)</title><rect x="14.3574%" y="2821" width="0.5615%" height="15" fill="rgb(243,84,45)" fg:x="33635678" fg:w="1315477"/><text x="14.6074%" y="2831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (1,315,477 samples, 0.56%)</title><rect x="14.3574%" y="2805" width="0.5615%" height="15" fill="rgb(252,49,23)" fg:x="33635678" fg:w="1315477"/><text x="14.6074%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (1,315,477 samples, 0.56%)</title><rect x="14.3574%" y="2789" width="0.5615%" height="15" fill="rgb(215,19,7)" fg:x="33635678" fg:w="1315477"/><text x="14.6074%" y="2799.50"></text></g><g><title>benchmark::json_to_html_node (13,234,831 samples, 5.65%)</title><rect x="9.7890%" y="3077" width="5.6493%" height="15" fill="rgb(238,81,41)" fg:x="22933056" fg:w="13234831"/><text x="10.0390%" y="3087.50">benchma..</text></g><g><title>benchmark::json_to_html_node (10,638,668 samples, 4.54%)</title><rect x="10.8972%" y="3061" width="4.5411%" height="15" fill="rgb(210,199,37)" fg:x="25529219" fg:w="10638668"/><text x="11.1472%" y="3071.50">bench..</text></g><g><title>benchmark::json_to_html_node (10,638,668 samples, 4.54%)</title><rect x="10.8972%" y="3045" width="4.5411%" height="15" fill="rgb(244,192,49)" fg:x="25529219" fg:w="10638668"/><text x="11.1472%" y="3055.50">bench..</text></g><g><title>benchmark::json_to_html_node (7,921,782 samples, 3.38%)</title><rect x="12.0569%" y="3029" width="3.3814%" height="15" fill="rgb(226,211,11)" fg:x="28246105" fg:w="7921782"/><text x="12.3069%" y="3039.50">ben..</text></g><g><title>benchmark::json_to_html_node (5,335,557 samples, 2.28%)</title><rect x="13.1608%" y="3013" width="2.2775%" height="15" fill="rgb(236,162,54)" fg:x="30832330" fg:w="5335557"/><text x="13.4108%" y="3023.50">b..</text></g><g><title>benchmark::json_to_html_node (3,469,571 samples, 1.48%)</title><rect x="13.9573%" y="2997" width="1.4810%" height="15" fill="rgb(220,229,9)" fg:x="32698316" fg:w="3469571"/><text x="14.2073%" y="3007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,216,732 samples, 0.52%)</title><rect x="14.9189%" y="2981" width="0.5194%" height="15" fill="rgb(250,87,22)" fg:x="34951155" fg:w="1216732"/><text x="15.1689%" y="2991.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,216,732 samples, 0.52%)</title><rect x="14.9189%" y="2965" width="0.5194%" height="15" fill="rgb(239,43,17)" fg:x="34951155" fg:w="1216732"/><text x="15.1689%" y="2975.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,216,732 samples, 0.52%)</title><rect x="14.9189%" y="2949" width="0.5194%" height="15" fill="rgb(231,177,25)" fg:x="34951155" fg:w="1216732"/><text x="15.1689%" y="2959.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,216,732 samples, 0.52%)</title><rect x="14.9189%" y="2933" width="0.5194%" height="15" fill="rgb(219,179,1)" fg:x="34951155" fg:w="1216732"/><text x="15.1689%" y="2943.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,216,732 samples, 0.52%)</title><rect x="14.9189%" y="2917" width="0.5194%" height="15" fill="rgb(238,219,53)" fg:x="34951155" fg:w="1216732"/><text x="15.1689%" y="2927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,216,732 samples, 0.52%)</title><rect x="14.9189%" y="2901" width="0.5194%" height="15" fill="rgb(232,167,36)" fg:x="34951155" fg:w="1216732"/><text x="15.1689%" y="2911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,216,732 samples, 0.52%)</title><rect x="14.9189%" y="2885" width="0.5194%" height="15" fill="rgb(244,19,51)" fg:x="34951155" fg:w="1216732"/><text x="15.1689%" y="2895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,216,732 samples, 0.52%)</title><rect x="14.9189%" y="2869" width="0.5194%" height="15" fill="rgb(224,6,22)" fg:x="34951155" fg:w="1216732"/><text x="15.1689%" y="2879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,216,732 samples, 0.52%)</title><rect x="14.9189%" y="2853" width="0.5194%" height="15" fill="rgb(224,145,5)" fg:x="34951155" fg:w="1216732"/><text x="15.1689%" y="2863.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1,216,732 samples, 0.52%)</title><rect x="14.9189%" y="2837" width="0.5194%" height="15" fill="rgb(234,130,49)" fg:x="34951155" fg:w="1216732"/><text x="15.1689%" y="2847.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,216,732 samples, 0.52%)</title><rect x="14.9189%" y="2821" width="0.5194%" height="15" fill="rgb(254,6,2)" fg:x="34951155" fg:w="1216732"/><text x="15.1689%" y="2831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,216,732 samples, 0.52%)</title><rect x="14.9189%" y="2805" width="0.5194%" height="15" fill="rgb(208,96,46)" fg:x="34951155" fg:w="1216732"/><text x="15.1689%" y="2815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,216,732 samples, 0.52%)</title><rect x="14.9189%" y="2789" width="0.5194%" height="15" fill="rgb(239,3,39)" fg:x="34951155" fg:w="1216732"/><text x="15.1689%" y="2799.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,216,732 samples, 0.52%)</title><rect x="14.9189%" y="2773" width="0.5194%" height="15" fill="rgb(233,210,1)" fg:x="34951155" fg:w="1216732"/><text x="15.1689%" y="2783.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1,216,732 samples, 0.52%)</title><rect x="14.9189%" y="2757" width="0.5194%" height="15" fill="rgb(244,137,37)" fg:x="34951155" fg:w="1216732"/><text x="15.1689%" y="2767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,253,768 samples, 0.54%)</title><rect x="16.5463%" y="2933" width="0.5352%" height="15" fill="rgb(240,136,2)" fg:x="38763661" fg:w="1253768"/><text x="16.7963%" y="2943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,253,768 samples, 0.54%)</title><rect x="16.5463%" y="2917" width="0.5352%" height="15" fill="rgb(239,18,37)" fg:x="38763661" fg:w="1253768"/><text x="16.7963%" y="2927.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (5,201,744 samples, 2.22%)</title><rect x="15.4383%" y="3077" width="2.2204%" height="15" fill="rgb(218,185,22)" fg:x="36167887" fg:w="5201744"/><text x="15.6883%" y="3087.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,834,470 samples, 1.64%)</title><rect x="16.0219%" y="3061" width="1.6367%" height="15" fill="rgb(225,218,4)" fg:x="37535161" fg:w="3834470"/><text x="16.2719%" y="3071.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,605,970 samples, 1.11%)</title><rect x="16.5463%" y="3045" width="1.1124%" height="15" fill="rgb(230,182,32)" fg:x="38763661" fg:w="2605970"/><text x="16.7963%" y="3055.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,605,970 samples, 1.11%)</title><rect x="16.5463%" y="3029" width="1.1124%" height="15" fill="rgb(242,56,43)" fg:x="38763661" fg:w="2605970"/><text x="16.7963%" y="3039.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,605,970 samples, 1.11%)</title><rect x="16.5463%" y="3013" width="1.1124%" height="15" fill="rgb(233,99,24)" fg:x="38763661" fg:w="2605970"/><text x="16.7963%" y="3023.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,605,970 samples, 1.11%)</title><rect x="16.5463%" y="2997" width="1.1124%" height="15" fill="rgb(234,209,42)" fg:x="38763661" fg:w="2605970"/><text x="16.7963%" y="3007.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,605,970 samples, 1.11%)</title><rect x="16.5463%" y="2981" width="1.1124%" height="15" fill="rgb(227,7,12)" fg:x="38763661" fg:w="2605970"/><text x="16.7963%" y="2991.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,605,970 samples, 1.11%)</title><rect x="16.5463%" y="2965" width="1.1124%" height="15" fill="rgb(245,203,43)" fg:x="38763661" fg:w="2605970"/><text x="16.7963%" y="2975.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,605,970 samples, 1.11%)</title><rect x="16.5463%" y="2949" width="1.1124%" height="15" fill="rgb(238,205,33)" fg:x="38763661" fg:w="2605970"/><text x="16.7963%" y="2959.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,352,202 samples, 0.58%)</title><rect x="17.0814%" y="2933" width="0.5772%" height="15" fill="rgb(231,56,7)" fg:x="40017429" fg:w="1352202"/><text x="17.3314%" y="2943.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,352,202 samples, 0.58%)</title><rect x="17.0814%" y="2917" width="0.5772%" height="15" fill="rgb(244,186,29)" fg:x="40017429" fg:w="1352202"/><text x="17.3314%" y="2927.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,352,202 samples, 0.58%)</title><rect x="17.0814%" y="2901" width="0.5772%" height="15" fill="rgb(234,111,31)" fg:x="40017429" fg:w="1352202"/><text x="17.3314%" y="2911.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,352,202 samples, 0.58%)</title><rect x="17.0814%" y="2885" width="0.5772%" height="15" fill="rgb(241,149,10)" fg:x="40017429" fg:w="1352202"/><text x="17.3314%" y="2895.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,352,202 samples, 0.58%)</title><rect x="17.0814%" y="2869" width="0.5772%" height="15" fill="rgb(249,206,44)" fg:x="40017429" fg:w="1352202"/><text x="17.3314%" y="2879.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,352,202 samples, 0.58%)</title><rect x="17.0814%" y="2853" width="0.5772%" height="15" fill="rgb(251,153,30)" fg:x="40017429" fg:w="1352202"/><text x="17.3314%" y="2863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,352,202 samples, 0.58%)</title><rect x="17.0814%" y="2837" width="0.5772%" height="15" fill="rgb(239,152,38)" fg:x="40017429" fg:w="1352202"/><text x="17.3314%" y="2847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,352,202 samples, 0.58%)</title><rect x="17.0814%" y="2821" width="0.5772%" height="15" fill="rgb(249,139,47)" fg:x="40017429" fg:w="1352202"/><text x="17.3314%" y="2831.50"></text></g><g><title>benchmark::apply_frame_modifications (20,864,477 samples, 8.91%)</title><rect x="9.2905%" y="3093" width="8.9060%" height="15" fill="rgb(244,64,35)" fg:x="21765216" fg:w="20864477"/><text x="9.5405%" y="3103.50">benchmark::ap..</text></g><g><title>css_bitvector_compiler::HtmlNode::remove_child (1,260,062 samples, 0.54%)</title><rect x="17.6586%" y="3077" width="0.5379%" height="15" fill="rgb(216,46,15)" fg:x="41369631" fg:w="1260062"/><text x="17.9086%" y="3087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (1,260,062 samples, 0.54%)</title><rect x="17.6586%" y="3061" width="0.5379%" height="15" fill="rgb(250,74,19)" fg:x="41369631" fg:w="1260062"/><text x="17.9086%" y="3071.50"></text></g><g><title>core::ptr::read (1,260,062 samples, 0.54%)</title><rect x="17.6586%" y="3045" width="0.5379%" height="15" fill="rgb(249,42,33)" fg:x="41369631" fg:w="1260062"/><text x="17.9086%" y="3055.50"></text></g><g><title>[libc.so.6] (1,260,062 samples, 0.54%)</title><rect x="17.6586%" y="3029" width="0.5379%" height="15" fill="rgb(242,149,17)" fg:x="41369631" fg:w="1260062"/><text x="17.9086%" y="3039.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,257,113 samples, 0.54%)</title><rect x="18.1965%" y="2741" width="0.5366%" height="15" fill="rgb(244,29,21)" fg:x="42629693" fg:w="1257113"/><text x="18.4465%" y="2751.50"></text></g><g><title>__rust_alloc (1,265,547 samples, 0.54%)</title><rect x="18.7331%" y="2389" width="0.5402%" height="15" fill="rgb(220,130,37)" fg:x="43886806" fg:w="1265547"/><text x="18.9831%" y="2399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,635,970 samples, 1.13%)</title><rect x="18.7331%" y="2581" width="1.1252%" height="15" fill="rgb(211,67,2)" fg:x="43886806" fg:w="2635970"/><text x="18.9831%" y="2591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,635,970 samples, 1.13%)</title><rect x="18.7331%" y="2565" width="1.1252%" height="15" fill="rgb(235,68,52)" fg:x="43886806" fg:w="2635970"/><text x="18.9831%" y="2575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,635,970 samples, 1.13%)</title><rect x="18.7331%" y="2549" width="1.1252%" height="15" fill="rgb(246,142,3)" fg:x="43886806" fg:w="2635970"/><text x="18.9831%" y="2559.50"></text></g><g><title>alloc::slice::hack::to_vec (2,635,970 samples, 1.13%)</title><rect x="18.7331%" y="2533" width="1.1252%" height="15" fill="rgb(241,25,7)" fg:x="43886806" fg:w="2635970"/><text x="18.9831%" y="2543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,635,970 samples, 1.13%)</title><rect x="18.7331%" y="2517" width="1.1252%" height="15" fill="rgb(242,119,39)" fg:x="43886806" fg:w="2635970"/><text x="18.9831%" y="2527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,635,970 samples, 1.13%)</title><rect x="18.7331%" y="2501" width="1.1252%" height="15" fill="rgb(241,98,45)" fg:x="43886806" fg:w="2635970"/><text x="18.9831%" y="2511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,635,970 samples, 1.13%)</title><rect x="18.7331%" y="2485" width="1.1252%" height="15" fill="rgb(254,28,30)" fg:x="43886806" fg:w="2635970"/><text x="18.9831%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,635,970 samples, 1.13%)</title><rect x="18.7331%" y="2469" width="1.1252%" height="15" fill="rgb(241,142,54)" fg:x="43886806" fg:w="2635970"/><text x="18.9831%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,635,970 samples, 1.13%)</title><rect x="18.7331%" y="2453" width="1.1252%" height="15" fill="rgb(222,85,15)" fg:x="43886806" fg:w="2635970"/><text x="18.9831%" y="2463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,635,970 samples, 1.13%)</title><rect x="18.7331%" y="2437" width="1.1252%" height="15" fill="rgb(210,85,47)" fg:x="43886806" fg:w="2635970"/><text x="18.9831%" y="2447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,635,970 samples, 1.13%)</title><rect x="18.7331%" y="2421" width="1.1252%" height="15" fill="rgb(224,206,25)" fg:x="43886806" fg:w="2635970"/><text x="18.9831%" y="2431.50"></text></g><g><title>alloc::alloc::alloc (2,635,970 samples, 1.13%)</title><rect x="18.7331%" y="2405" width="1.1252%" height="15" fill="rgb(243,201,19)" fg:x="43886806" fg:w="2635970"/><text x="18.9831%" y="2415.50"></text></g><g><title>malloc (1,370,423 samples, 0.58%)</title><rect x="19.2733%" y="2389" width="0.5850%" height="15" fill="rgb(236,59,4)" fg:x="45152353" fg:w="1370423"/><text x="19.5233%" y="2399.50"></text></g><g><title>[libc.so.6] (1,370,423 samples, 0.58%)</title><rect x="19.2733%" y="2373" width="0.5850%" height="15" fill="rgb(254,179,45)" fg:x="45152353" fg:w="1370423"/><text x="19.5233%" y="2383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,627,489 samples, 1.12%)</title><rect x="20.3897%" y="2421" width="1.1215%" height="15" fill="rgb(226,14,10)" fg:x="47767783" fg:w="2627489"/><text x="20.6397%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,627,489 samples, 1.12%)</title><rect x="20.3897%" y="2405" width="1.1215%" height="15" fill="rgb(244,27,41)" fg:x="47767783" fg:w="2627489"/><text x="20.6397%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,627,489 samples, 1.12%)</title><rect x="20.3897%" y="2389" width="1.1215%" height="15" fill="rgb(235,35,32)" fg:x="47767783" fg:w="2627489"/><text x="20.6397%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,627,489 samples, 1.12%)</title><rect x="20.3897%" y="2373" width="1.1215%" height="15" fill="rgb(218,68,31)" fg:x="47767783" fg:w="2627489"/><text x="20.6397%" y="2383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,627,489 samples, 1.12%)</title><rect x="20.3897%" y="2357" width="1.1215%" height="15" fill="rgb(207,120,37)" fg:x="47767783" fg:w="2627489"/><text x="20.6397%" y="2367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,627,489 samples, 1.12%)</title><rect x="20.3897%" y="2341" width="1.1215%" height="15" fill="rgb(227,98,0)" fg:x="47767783" fg:w="2627489"/><text x="20.6397%" y="2351.50"></text></g><g><title>alloc::alloc::alloc (2,627,489 samples, 1.12%)</title><rect x="20.3897%" y="2325" width="1.1215%" height="15" fill="rgb(207,7,3)" fg:x="47767783" fg:w="2627489"/><text x="20.6397%" y="2335.50"></text></g><g><title>malloc (2,627,489 samples, 1.12%)</title><rect x="20.3897%" y="2309" width="1.1215%" height="15" fill="rgb(206,98,19)" fg:x="47767783" fg:w="2627489"/><text x="20.6397%" y="2319.50"></text></g><g><title>[libc.so.6] (1,214,594 samples, 0.52%)</title><rect x="20.9928%" y="2293" width="0.5184%" height="15" fill="rgb(217,5,26)" fg:x="49180678" fg:w="1214594"/><text x="21.2428%" y="2303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,244,090 samples, 2.24%)</title><rect x="19.8583%" y="2501" width="2.2384%" height="15" fill="rgb(235,190,38)" fg:x="46522776" fg:w="5244090"/><text x="20.1083%" y="2511.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,999,083 samples, 1.71%)</title><rect x="20.3897%" y="2485" width="1.7070%" height="15" fill="rgb(247,86,24)" fg:x="47767783" fg:w="3999083"/><text x="20.6397%" y="2495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,999,083 samples, 1.71%)</title><rect x="20.3897%" y="2469" width="1.7070%" height="15" fill="rgb(205,101,16)" fg:x="47767783" fg:w="3999083"/><text x="20.6397%" y="2479.50"></text></g><g><title>alloc::slice::hack::to_vec (3,999,083 samples, 1.71%)</title><rect x="20.3897%" y="2453" width="1.7070%" height="15" fill="rgb(246,168,33)" fg:x="47767783" fg:w="3999083"/><text x="20.6397%" y="2463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,999,083 samples, 1.71%)</title><rect x="20.3897%" y="2437" width="1.7070%" height="15" fill="rgb(231,114,1)" fg:x="47767783" fg:w="3999083"/><text x="20.6397%" y="2447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,371,594 samples, 0.59%)</title><rect x="21.5112%" y="2421" width="0.5855%" height="15" fill="rgb(207,184,53)" fg:x="50395272" fg:w="1371594"/><text x="21.7612%" y="2431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,371,594 samples, 0.59%)</title><rect x="21.5112%" y="2405" width="0.5855%" height="15" fill="rgb(224,95,51)" fg:x="50395272" fg:w="1371594"/><text x="21.7612%" y="2415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,261,267 samples, 0.54%)</title><rect x="22.0967%" y="2421" width="0.5384%" height="15" fill="rgb(212,188,45)" fg:x="51766866" fg:w="1261267"/><text x="22.3467%" y="2431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,261,267 samples, 0.54%)</title><rect x="22.0967%" y="2405" width="0.5384%" height="15" fill="rgb(223,154,38)" fg:x="51766866" fg:w="1261267"/><text x="22.3467%" y="2415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,261,267 samples, 0.54%)</title><rect x="22.0967%" y="2389" width="0.5384%" height="15" fill="rgb(251,22,52)" fg:x="51766866" fg:w="1261267"/><text x="22.3467%" y="2399.50"></text></g><g><title>alloc::slice::hack::to_vec (1,261,267 samples, 0.54%)</title><rect x="22.0967%" y="2373" width="0.5384%" height="15" fill="rgb(229,209,22)" fg:x="51766866" fg:w="1261267"/><text x="22.3467%" y="2383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,261,267 samples, 0.54%)</title><rect x="22.0967%" y="2357" width="0.5384%" height="15" fill="rgb(234,138,34)" fg:x="51766866" fg:w="1261267"/><text x="22.3467%" y="2367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,261,267 samples, 0.54%)</title><rect x="22.0967%" y="2341" width="0.5384%" height="15" fill="rgb(212,95,11)" fg:x="51766866" fg:w="1261267"/><text x="22.3467%" y="2351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,261,267 samples, 0.54%)</title><rect x="22.0967%" y="2325" width="0.5384%" height="15" fill="rgb(240,179,47)" fg:x="51766866" fg:w="1261267"/><text x="22.3467%" y="2335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,762,986 samples, 1.18%)</title><rect x="23.2179%" y="2021" width="1.1794%" height="15" fill="rgb(240,163,11)" fg:x="54393520" fg:w="2762986"/><text x="23.4679%" y="2031.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,376,523 samples, 0.59%)</title><rect x="23.8097%" y="2005" width="0.5876%" height="15" fill="rgb(236,37,12)" fg:x="55779983" fg:w="1376523"/><text x="24.0597%" y="2015.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,376,523 samples, 0.59%)</title><rect x="23.8097%" y="1989" width="0.5876%" height="15" fill="rgb(232,164,16)" fg:x="55779983" fg:w="1376523"/><text x="24.0597%" y="1999.50"></text></g><g><title>alloc::slice::hack::to_vec (1,376,523 samples, 0.59%)</title><rect x="23.8097%" y="1973" width="0.5876%" height="15" fill="rgb(244,205,15)" fg:x="55779983" fg:w="1376523"/><text x="24.0597%" y="1983.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,376,523 samples, 0.59%)</title><rect x="23.8097%" y="1957" width="0.5876%" height="15" fill="rgb(223,117,47)" fg:x="55779983" fg:w="1376523"/><text x="24.0597%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,376,523 samples, 0.59%)</title><rect x="23.8097%" y="1941" width="0.5876%" height="15" fill="rgb(244,107,35)" fg:x="55779983" fg:w="1376523"/><text x="24.0597%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,376,523 samples, 0.59%)</title><rect x="23.8097%" y="1925" width="0.5876%" height="15" fill="rgb(205,140,8)" fg:x="55779983" fg:w="1376523"/><text x="24.0597%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,376,523 samples, 0.59%)</title><rect x="23.8097%" y="1909" width="0.5876%" height="15" fill="rgb(228,84,46)" fg:x="55779983" fg:w="1376523"/><text x="24.0597%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,376,523 samples, 0.59%)</title><rect x="23.8097%" y="1893" width="0.5876%" height="15" fill="rgb(254,188,9)" fg:x="55779983" fg:w="1376523"/><text x="24.0597%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,376,523 samples, 0.59%)</title><rect x="23.8097%" y="1877" width="0.5876%" height="15" fill="rgb(206,112,54)" fg:x="55779983" fg:w="1376523"/><text x="24.0597%" y="1887.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,376,523 samples, 0.59%)</title><rect x="23.8097%" y="1861" width="0.5876%" height="15" fill="rgb(216,84,49)" fg:x="55779983" fg:w="1376523"/><text x="24.0597%" y="1871.50"></text></g><g><title>alloc::alloc::alloc (1,376,523 samples, 0.59%)</title><rect x="23.8097%" y="1845" width="0.5876%" height="15" fill="rgb(214,194,35)" fg:x="55779983" fg:w="1376523"/><text x="24.0597%" y="1855.50"></text></g><g><title>core::ptr::read_volatile (1,376,523 samples, 0.59%)</title><rect x="23.8097%" y="1829" width="0.5876%" height="15" fill="rgb(249,28,3)" fg:x="55779983" fg:w="1376523"/><text x="24.0597%" y="1839.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,377,053 samples, 0.59%)</title><rect x="24.9781%" y="1781" width="0.5878%" height="15" fill="rgb(222,56,52)" fg:x="58517339" fg:w="1377053"/><text x="25.2281%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,377,053 samples, 0.59%)</title><rect x="24.9781%" y="1765" width="0.5878%" height="15" fill="rgb(245,217,50)" fg:x="58517339" fg:w="1377053"/><text x="25.2281%" y="1775.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,377,053 samples, 0.59%)</title><rect x="24.9781%" y="1749" width="0.5878%" height="15" fill="rgb(213,201,24)" fg:x="58517339" fg:w="1377053"/><text x="25.2281%" y="1759.50"></text></g><g><title>alloc::slice::hack::to_vec (1,377,053 samples, 0.59%)</title><rect x="24.9781%" y="1733" width="0.5878%" height="15" fill="rgb(248,116,28)" fg:x="58517339" fg:w="1377053"/><text x="25.2281%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,377,053 samples, 0.59%)</title><rect x="24.9781%" y="1717" width="0.5878%" height="15" fill="rgb(219,72,43)" fg:x="58517339" fg:w="1377053"/><text x="25.2281%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,377,053 samples, 0.59%)</title><rect x="24.9781%" y="1701" width="0.5878%" height="15" fill="rgb(209,138,14)" fg:x="58517339" fg:w="1377053"/><text x="25.2281%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,377,053 samples, 0.59%)</title><rect x="24.9781%" y="1685" width="0.5878%" height="15" fill="rgb(222,18,33)" fg:x="58517339" fg:w="1377053"/><text x="25.2281%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,377,053 samples, 0.59%)</title><rect x="24.9781%" y="1669" width="0.5878%" height="15" fill="rgb(213,199,7)" fg:x="58517339" fg:w="1377053"/><text x="25.2281%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,377,053 samples, 0.59%)</title><rect x="24.9781%" y="1653" width="0.5878%" height="15" fill="rgb(250,110,10)" fg:x="58517339" fg:w="1377053"/><text x="25.2281%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,377,053 samples, 0.59%)</title><rect x="24.9781%" y="1637" width="0.5878%" height="15" fill="rgb(248,123,6)" fg:x="58517339" fg:w="1377053"/><text x="25.2281%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,377,053 samples, 0.59%)</title><rect x="24.9781%" y="1621" width="0.5878%" height="15" fill="rgb(206,91,31)" fg:x="58517339" fg:w="1377053"/><text x="25.2281%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (1,377,053 samples, 0.59%)</title><rect x="24.9781%" y="1605" width="0.5878%" height="15" fill="rgb(211,154,13)" fg:x="58517339" fg:w="1377053"/><text x="25.2281%" y="1615.50"></text></g><g><title>malloc (1,377,053 samples, 0.59%)</title><rect x="24.9781%" y="1589" width="0.5878%" height="15" fill="rgb(225,148,7)" fg:x="58517339" fg:w="1377053"/><text x="25.2281%" y="1599.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,362,737 samples, 0.58%)</title><rect x="25.5659%" y="1701" width="0.5817%" height="15" fill="rgb(220,160,43)" fg:x="59894392" fg:w="1362737"/><text x="25.8159%" y="1711.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,673,709 samples, 1.14%)</title><rect x="25.5659%" y="1717" width="1.1413%" height="15" fill="rgb(213,52,39)" fg:x="59894392" fg:w="2673709"/><text x="25.8159%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1701" width="0.5596%" height="15" fill="rgb(243,137,7)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1685" width="0.5596%" height="15" fill="rgb(230,79,13)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1669" width="0.5596%" height="15" fill="rgb(247,105,23)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1653" width="0.5596%" height="15" fill="rgb(223,179,41)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1663.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1637" width="0.5596%" height="15" fill="rgb(218,9,34)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1621" width="0.5596%" height="15" fill="rgb(222,106,8)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1605" width="0.5596%" height="15" fill="rgb(211,220,0)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1589" width="0.5596%" height="15" fill="rgb(229,52,16)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1573" width="0.5596%" height="15" fill="rgb(212,155,18)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1583.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1557" width="0.5596%" height="15" fill="rgb(242,21,14)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1541" width="0.5596%" height="15" fill="rgb(222,19,48)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1551.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1525" width="0.5596%" height="15" fill="rgb(232,45,27)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1535.50"></text></g><g><title>alloc::slice::hack::to_vec (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1509" width="0.5596%" height="15" fill="rgb(249,103,42)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1519.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1493" width="0.5596%" height="15" fill="rgb(246,81,33)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1503.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1477" width="0.5596%" height="15" fill="rgb(252,33,42)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1461" width="0.5596%" height="15" fill="rgb(209,212,41)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1445" width="0.5596%" height="15" fill="rgb(207,154,6)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1429" width="0.5596%" height="15" fill="rgb(223,64,47)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1413" width="0.5596%" height="15" fill="rgb(211,161,38)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1423.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1397" width="0.5596%" height="15" fill="rgb(219,138,40)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1407.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1381" width="0.5596%" height="15" fill="rgb(241,228,46)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1365" width="0.5596%" height="15" fill="rgb(223,209,38)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1349" width="0.5596%" height="15" fill="rgb(236,164,45)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1359.50"></text></g><g><title>alloc::slice::hack::to_vec (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1333" width="0.5596%" height="15" fill="rgb(231,15,5)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1343.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1317" width="0.5596%" height="15" fill="rgb(252,35,15)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1301" width="0.5596%" height="15" fill="rgb(248,181,18)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1285" width="0.5596%" height="15" fill="rgb(233,39,42)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1269" width="0.5596%" height="15" fill="rgb(238,110,33)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1253" width="0.5596%" height="15" fill="rgb(233,195,10)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1263.50"></text></g><g><title>alloc::raw_vec::layout_array (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1237" width="0.5596%" height="15" fill="rgb(254,105,3)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1247.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1221" width="0.5596%" height="15" fill="rgb(221,225,9)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1231.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1205" width="0.5596%" height="15" fill="rgb(224,227,45)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1215.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1189" width="0.5596%" height="15" fill="rgb(229,198,43)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1199.50"></text></g><g><title>core::intrinsics::unlikely (1,310,972 samples, 0.56%)</title><rect x="26.1476%" y="1173" width="0.5596%" height="15" fill="rgb(206,209,35)" fg:x="61257129" fg:w="1310972"/><text x="26.3976%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,084,166 samples, 1.74%)</title><rect x="25.5659%" y="1781" width="1.7433%" height="15" fill="rgb(245,195,53)" fg:x="59894392" fg:w="4084166"/><text x="25.8159%" y="1791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,084,166 samples, 1.74%)</title><rect x="25.5659%" y="1765" width="1.7433%" height="15" fill="rgb(240,92,26)" fg:x="59894392" fg:w="4084166"/><text x="25.8159%" y="1775.50"></text></g><g><title>alloc::slice::hack::to_vec (4,084,166 samples, 1.74%)</title><rect x="25.5659%" y="1749" width="1.7433%" height="15" fill="rgb(207,40,23)" fg:x="59894392" fg:w="4084166"/><text x="25.8159%" y="1759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,084,166 samples, 1.74%)</title><rect x="25.5659%" y="1733" width="1.7433%" height="15" fill="rgb(223,111,35)" fg:x="59894392" fg:w="4084166"/><text x="25.8159%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,410,457 samples, 0.60%)</title><rect x="26.7072%" y="1717" width="0.6021%" height="15" fill="rgb(229,147,28)" fg:x="62568101" fg:w="1410457"/><text x="26.9572%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,410,457 samples, 0.60%)</title><rect x="26.7072%" y="1701" width="0.6021%" height="15" fill="rgb(211,29,28)" fg:x="62568101" fg:w="1410457"/><text x="26.9572%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,410,457 samples, 0.60%)</title><rect x="26.7072%" y="1685" width="0.6021%" height="15" fill="rgb(228,72,33)" fg:x="62568101" fg:w="1410457"/><text x="26.9572%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,410,457 samples, 0.60%)</title><rect x="26.7072%" y="1669" width="0.6021%" height="15" fill="rgb(205,214,31)" fg:x="62568101" fg:w="1410457"/><text x="26.9572%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,410,457 samples, 0.60%)</title><rect x="26.7072%" y="1653" width="0.6021%" height="15" fill="rgb(224,111,15)" fg:x="62568101" fg:w="1410457"/><text x="26.9572%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,410,457 samples, 0.60%)</title><rect x="26.7072%" y="1637" width="0.6021%" height="15" fill="rgb(253,21,26)" fg:x="62568101" fg:w="1410457"/><text x="26.9572%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (1,410,457 samples, 0.60%)</title><rect x="26.7072%" y="1621" width="0.6021%" height="15" fill="rgb(245,139,43)" fg:x="62568101" fg:w="1410457"/><text x="26.9572%" y="1631.50"></text></g><g><title>malloc (1,410,457 samples, 0.60%)</title><rect x="26.7072%" y="1605" width="0.6021%" height="15" fill="rgb(252,170,7)" fg:x="62568101" fg:w="1410457"/><text x="26.9572%" y="1615.50"></text></g><g><title>[libc.so.6] (1,410,457 samples, 0.60%)</title><rect x="26.7072%" y="1589" width="0.6021%" height="15" fill="rgb(231,118,14)" fg:x="62568101" fg:w="1410457"/><text x="26.9572%" y="1599.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,391,694 samples, 0.59%)</title><rect x="27.3093%" y="1781" width="0.5940%" height="15" fill="rgb(238,83,0)" fg:x="63978558" fg:w="1391694"/><text x="27.5593%" y="1791.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,391,694 samples, 0.59%)</title><rect x="27.3093%" y="1765" width="0.5940%" height="15" fill="rgb(221,39,39)" fg:x="63978558" fg:w="1391694"/><text x="27.5593%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,391,694 samples, 0.59%)</title><rect x="27.3093%" y="1749" width="0.5940%" height="15" fill="rgb(222,119,46)" fg:x="63978558" fg:w="1391694"/><text x="27.5593%" y="1759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,391,694 samples, 0.59%)</title><rect x="27.3093%" y="1733" width="0.5940%" height="15" fill="rgb(222,165,49)" fg:x="63978558" fg:w="1391694"/><text x="27.5593%" y="1743.50"></text></g><g><title>alloc::slice::hack::to_vec (1,391,694 samples, 0.59%)</title><rect x="27.3093%" y="1717" width="0.5940%" height="15" fill="rgb(219,113,52)" fg:x="63978558" fg:w="1391694"/><text x="27.5593%" y="1727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,391,694 samples, 0.59%)</title><rect x="27.3093%" y="1701" width="0.5940%" height="15" fill="rgb(214,7,15)" fg:x="63978558" fg:w="1391694"/><text x="27.5593%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,391,694 samples, 0.59%)</title><rect x="27.3093%" y="1685" width="0.5940%" height="15" fill="rgb(235,32,4)" fg:x="63978558" fg:w="1391694"/><text x="27.5593%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,391,694 samples, 0.59%)</title><rect x="27.3093%" y="1669" width="0.5940%" height="15" fill="rgb(238,90,54)" fg:x="63978558" fg:w="1391694"/><text x="27.5593%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,391,694 samples, 0.59%)</title><rect x="27.3093%" y="1653" width="0.5940%" height="15" fill="rgb(213,208,19)" fg:x="63978558" fg:w="1391694"/><text x="27.5593%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,391,694 samples, 0.59%)</title><rect x="27.3093%" y="1637" width="0.5940%" height="15" fill="rgb(233,156,4)" fg:x="63978558" fg:w="1391694"/><text x="27.5593%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,391,694 samples, 0.59%)</title><rect x="27.3093%" y="1621" width="0.5940%" height="15" fill="rgb(207,194,5)" fg:x="63978558" fg:w="1391694"/><text x="27.5593%" y="1631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,391,694 samples, 0.59%)</title><rect x="27.3093%" y="1605" width="0.5940%" height="15" fill="rgb(206,111,30)" fg:x="63978558" fg:w="1391694"/><text x="27.5593%" y="1615.50"></text></g><g><title>alloc::alloc::alloc (1,391,694 samples, 0.59%)</title><rect x="27.3093%" y="1589" width="0.5940%" height="15" fill="rgb(243,70,54)" fg:x="63978558" fg:w="1391694"/><text x="27.5593%" y="1599.50"></text></g><g><title>malloc (1,391,694 samples, 0.59%)</title><rect x="27.3093%" y="1573" width="0.5940%" height="15" fill="rgb(242,28,8)" fg:x="63978558" fg:w="1391694"/><text x="27.5593%" y="1583.50"></text></g><g><title>[libc.so.6] (1,391,694 samples, 0.59%)</title><rect x="27.3093%" y="1557" width="0.5940%" height="15" fill="rgb(219,106,18)" fg:x="63978558" fg:w="1391694"/><text x="27.5593%" y="1567.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1717" width="0.5673%" height="15" fill="rgb(244,222,10)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1701" width="0.5673%" height="15" fill="rgb(236,179,52)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1711.50"></text></g><g><title>core::clone::Clone::clone (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1685" width="0.5673%" height="15" fill="rgb(213,23,39)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1695.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1669" width="0.5673%" height="15" fill="rgb(238,48,10)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1653" width="0.5673%" height="15" fill="rgb(251,196,23)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1663.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1637" width="0.5673%" height="15" fill="rgb(250,152,24)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1647.50"></text></g><g><title>alloc::slice::hack::to_vec (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1621" width="0.5673%" height="15" fill="rgb(209,150,17)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1631.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1605" width="0.5673%" height="15" fill="rgb(234,202,34)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1589" width="0.5673%" height="15" fill="rgb(253,148,53)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1573" width="0.5673%" height="15" fill="rgb(218,129,16)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1557" width="0.5673%" height="15" fill="rgb(216,85,19)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1541" width="0.5673%" height="15" fill="rgb(235,228,7)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1525" width="0.5673%" height="15" fill="rgb(245,175,0)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1509" width="0.5673%" height="15" fill="rgb(208,168,36)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1493" width="0.5673%" height="15" fill="rgb(246,171,24)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1503.50"></text></g><g><title>__rdl_alloc (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1477" width="0.5673%" height="15" fill="rgb(215,142,24)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1487.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,329,027 samples, 0.57%)</title><rect x="27.9033%" y="1461" width="0.5673%" height="15" fill="rgb(250,187,7)" fg:x="65370252" fg:w="1329027"/><text x="28.1533%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,631,480 samples, 4.11%)</title><rect x="24.9781%" y="1861" width="4.1112%" height="15" fill="rgb(228,66,33)" fg:x="58517339" fg:w="9631480"/><text x="25.2281%" y="1871.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,631,480 samples, 4.11%)</title><rect x="24.9781%" y="1845" width="4.1112%" height="15" fill="rgb(234,215,21)" fg:x="58517339" fg:w="9631480"/><text x="25.2281%" y="1855.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,631,480 samples, 4.11%)</title><rect x="24.9781%" y="1829" width="4.1112%" height="15" fill="rgb(222,191,20)" fg:x="58517339" fg:w="9631480"/><text x="25.2281%" y="1839.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,631,480 samples, 4.11%)</title><rect x="24.9781%" y="1813" width="4.1112%" height="15" fill="rgb(245,79,54)" fg:x="58517339" fg:w="9631480"/><text x="25.2281%" y="1823.50">&lt;T a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (9,631,480 samples, 4.11%)</title><rect x="24.9781%" y="1797" width="4.1112%" height="15" fill="rgb(240,10,37)" fg:x="58517339" fg:w="9631480"/><text x="25.2281%" y="1807.50">&lt;css..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,778,567 samples, 1.19%)</title><rect x="27.9033%" y="1781" width="1.1860%" height="15" fill="rgb(214,192,32)" fg:x="65370252" fg:w="2778567"/><text x="28.1533%" y="1791.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,778,567 samples, 1.19%)</title><rect x="27.9033%" y="1765" width="1.1860%" height="15" fill="rgb(209,36,54)" fg:x="65370252" fg:w="2778567"/><text x="28.1533%" y="1775.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,778,567 samples, 1.19%)</title><rect x="27.9033%" y="1749" width="1.1860%" height="15" fill="rgb(220,10,11)" fg:x="65370252" fg:w="2778567"/><text x="28.1533%" y="1759.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,778,567 samples, 1.19%)</title><rect x="27.9033%" y="1733" width="1.1860%" height="15" fill="rgb(221,106,17)" fg:x="65370252" fg:w="2778567"/><text x="28.1533%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,449,540 samples, 0.62%)</title><rect x="28.4706%" y="1717" width="0.6187%" height="15" fill="rgb(251,142,44)" fg:x="66699279" fg:w="1449540"/><text x="28.7206%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,449,540 samples, 0.62%)</title><rect x="28.4706%" y="1701" width="0.6187%" height="15" fill="rgb(238,13,15)" fg:x="66699279" fg:w="1449540"/><text x="28.7206%" y="1711.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1,449,540 samples, 0.62%)</title><rect x="28.4706%" y="1685" width="0.6187%" height="15" fill="rgb(208,107,27)" fg:x="66699279" fg:w="1449540"/><text x="28.7206%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,337,431 samples, 5.27%)</title><rect x="24.3973%" y="1941" width="5.2662%" height="15" fill="rgb(205,136,37)" fg:x="57156506" fg:w="12337431"/><text x="24.6473%" y="1951.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12,337,431 samples, 5.27%)</title><rect x="24.3973%" y="1925" width="5.2662%" height="15" fill="rgb(250,205,27)" fg:x="57156506" fg:w="12337431"/><text x="24.6473%" y="1935.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (12,337,431 samples, 5.27%)</title><rect x="24.3973%" y="1909" width="5.2662%" height="15" fill="rgb(210,80,43)" fg:x="57156506" fg:w="12337431"/><text x="24.6473%" y="1919.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12,337,431 samples, 5.27%)</title><rect x="24.3973%" y="1893" width="5.2662%" height="15" fill="rgb(247,160,36)" fg:x="57156506" fg:w="12337431"/><text x="24.6473%" y="1903.50">&lt;T as ..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (12,337,431 samples, 5.27%)</title><rect x="24.3973%" y="1877" width="5.2662%" height="15" fill="rgb(234,13,49)" fg:x="57156506" fg:w="12337431"/><text x="24.6473%" y="1887.50">&lt;css_b..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,345,118 samples, 0.57%)</title><rect x="29.0893%" y="1861" width="0.5742%" height="15" fill="rgb(234,122,0)" fg:x="68148819" fg:w="1345118"/><text x="29.3393%" y="1871.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,345,118 samples, 0.57%)</title><rect x="29.0893%" y="1845" width="0.5742%" height="15" fill="rgb(207,146,38)" fg:x="68148819" fg:w="1345118"/><text x="29.3393%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,345,118 samples, 0.57%)</title><rect x="29.0893%" y="1829" width="0.5742%" height="15" fill="rgb(207,177,25)" fg:x="68148819" fg:w="1345118"/><text x="29.3393%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,345,118 samples, 0.57%)</title><rect x="29.0893%" y="1813" width="0.5742%" height="15" fill="rgb(211,178,42)" fg:x="68148819" fg:w="1345118"/><text x="29.3393%" y="1823.50"></text></g><g><title>alloc::slice::hack::to_vec (1,345,118 samples, 0.57%)</title><rect x="29.0893%" y="1797" width="0.5742%" height="15" fill="rgb(230,69,54)" fg:x="68148819" fg:w="1345118"/><text x="29.3393%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,345,118 samples, 0.57%)</title><rect x="29.0893%" y="1781" width="0.5742%" height="15" fill="rgb(214,135,41)" fg:x="68148819" fg:w="1345118"/><text x="29.3393%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,345,118 samples, 0.57%)</title><rect x="29.0893%" y="1765" width="0.5742%" height="15" fill="rgb(237,67,25)" fg:x="68148819" fg:w="1345118"/><text x="29.3393%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,345,118 samples, 0.57%)</title><rect x="29.0893%" y="1749" width="0.5742%" height="15" fill="rgb(222,189,50)" fg:x="68148819" fg:w="1345118"/><text x="29.3393%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,345,118 samples, 0.57%)</title><rect x="29.0893%" y="1733" width="0.5742%" height="15" fill="rgb(245,148,34)" fg:x="68148819" fg:w="1345118"/><text x="29.3393%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,345,118 samples, 0.57%)</title><rect x="29.0893%" y="1717" width="0.5742%" height="15" fill="rgb(222,29,6)" fg:x="68148819" fg:w="1345118"/><text x="29.3393%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,345,118 samples, 0.57%)</title><rect x="29.0893%" y="1701" width="0.5742%" height="15" fill="rgb(221,189,43)" fg:x="68148819" fg:w="1345118"/><text x="29.3393%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,345,118 samples, 0.57%)</title><rect x="29.0893%" y="1685" width="0.5742%" height="15" fill="rgb(207,36,27)" fg:x="68148819" fg:w="1345118"/><text x="29.3393%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (1,345,118 samples, 0.57%)</title><rect x="29.0893%" y="1669" width="0.5742%" height="15" fill="rgb(217,90,24)" fg:x="68148819" fg:w="1345118"/><text x="29.3393%" y="1679.50"></text></g><g><title>malloc (1,345,118 samples, 0.57%)</title><rect x="29.0893%" y="1653" width="0.5742%" height="15" fill="rgb(224,66,35)" fg:x="68148819" fg:w="1345118"/><text x="29.3393%" y="1663.50"></text></g><g><title>[libc.so.6] (1,345,118 samples, 0.57%)</title><rect x="29.0893%" y="1637" width="0.5742%" height="15" fill="rgb(221,13,50)" fg:x="68148819" fg:w="1345118"/><text x="29.3393%" y="1647.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,377,605 samples, 0.59%)</title><rect x="29.6635%" y="1941" width="0.5880%" height="15" fill="rgb(236,68,49)" fg:x="69493937" fg:w="1377605"/><text x="29.9135%" y="1951.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,377,605 samples, 0.59%)</title><rect x="29.6635%" y="1925" width="0.5880%" height="15" fill="rgb(229,146,28)" fg:x="69493937" fg:w="1377605"/><text x="29.9135%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,707,001 samples, 1.16%)</title><rect x="30.2515%" y="1749" width="1.1555%" height="15" fill="rgb(225,31,38)" fg:x="70871542" fg:w="2707001"/><text x="30.5015%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,707,001 samples, 1.16%)</title><rect x="30.2515%" y="1733" width="1.1555%" height="15" fill="rgb(250,208,3)" fg:x="70871542" fg:w="2707001"/><text x="30.5015%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,707,001 samples, 1.16%)</title><rect x="30.2515%" y="1717" width="1.1555%" height="15" fill="rgb(246,54,23)" fg:x="70871542" fg:w="2707001"/><text x="30.5015%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,707,001 samples, 1.16%)</title><rect x="30.2515%" y="1701" width="1.1555%" height="15" fill="rgb(243,76,11)" fg:x="70871542" fg:w="2707001"/><text x="30.5015%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,707,001 samples, 1.16%)</title><rect x="30.2515%" y="1685" width="1.1555%" height="15" fill="rgb(245,21,50)" fg:x="70871542" fg:w="2707001"/><text x="30.5015%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,707,001 samples, 1.16%)</title><rect x="30.2515%" y="1669" width="1.1555%" height="15" fill="rgb(228,9,43)" fg:x="70871542" fg:w="2707001"/><text x="30.5015%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (2,707,001 samples, 1.16%)</title><rect x="30.2515%" y="1653" width="1.1555%" height="15" fill="rgb(208,100,47)" fg:x="70871542" fg:w="2707001"/><text x="30.5015%" y="1663.50"></text></g><g><title>malloc (2,707,001 samples, 1.16%)</title><rect x="30.2515%" y="1637" width="1.1555%" height="15" fill="rgb(232,26,8)" fg:x="70871542" fg:w="2707001"/><text x="30.5015%" y="1647.50"></text></g><g><title>[libc.so.6] (1,345,597 samples, 0.57%)</title><rect x="30.8327%" y="1621" width="0.5744%" height="15" fill="rgb(216,166,38)" fg:x="72232946" fg:w="1345597"/><text x="31.0827%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,056,102 samples, 8.13%)</title><rect x="24.3973%" y="2021" width="8.1341%" height="15" fill="rgb(251,202,51)" fg:x="57156506" fg:w="19056102"/><text x="24.6473%" y="2031.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,056,102 samples, 8.13%)</title><rect x="24.3973%" y="2005" width="8.1341%" height="15" fill="rgb(254,216,34)" fg:x="57156506" fg:w="19056102"/><text x="24.6473%" y="2015.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (19,056,102 samples, 8.13%)</title><rect x="24.3973%" y="1989" width="8.1341%" height="15" fill="rgb(251,32,27)" fg:x="57156506" fg:w="19056102"/><text x="24.6473%" y="1999.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,056,102 samples, 8.13%)</title><rect x="24.3973%" y="1973" width="8.1341%" height="15" fill="rgb(208,127,28)" fg:x="57156506" fg:w="19056102"/><text x="24.6473%" y="1983.50">&lt;T as alloc..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,056,102 samples, 8.13%)</title><rect x="24.3973%" y="1957" width="8.1341%" height="15" fill="rgb(224,137,22)" fg:x="57156506" fg:w="19056102"/><text x="24.6473%" y="1967.50">&lt;css_bitvec..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5,341,066 samples, 2.28%)</title><rect x="30.2515%" y="1941" width="2.2798%" height="15" fill="rgb(254,70,32)" fg:x="70871542" fg:w="5341066"/><text x="30.5015%" y="1951.50">&lt;..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5,341,066 samples, 2.28%)</title><rect x="30.2515%" y="1925" width="2.2798%" height="15" fill="rgb(229,75,37)" fg:x="70871542" fg:w="5341066"/><text x="30.5015%" y="1935.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5,341,066 samples, 2.28%)</title><rect x="30.2515%" y="1909" width="2.2798%" height="15" fill="rgb(252,64,23)" fg:x="70871542" fg:w="5341066"/><text x="30.5015%" y="1919.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,341,066 samples, 2.28%)</title><rect x="30.2515%" y="1893" width="2.2798%" height="15" fill="rgb(232,162,48)" fg:x="70871542" fg:w="5341066"/><text x="30.5015%" y="1903.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (5,341,066 samples, 2.28%)</title><rect x="30.2515%" y="1877" width="2.2798%" height="15" fill="rgb(246,160,12)" fg:x="70871542" fg:w="5341066"/><text x="30.5015%" y="1887.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (5,341,066 samples, 2.28%)</title><rect x="30.2515%" y="1861" width="2.2798%" height="15" fill="rgb(247,166,0)" fg:x="70871542" fg:w="5341066"/><text x="30.5015%" y="1871.50">h..</text></g><g><title>core::clone::Clone::clone (5,341,066 samples, 2.28%)</title><rect x="30.2515%" y="1845" width="2.2798%" height="15" fill="rgb(249,219,21)" fg:x="70871542" fg:w="5341066"/><text x="30.5015%" y="1855.50">c..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,341,066 samples, 2.28%)</title><rect x="30.2515%" y="1829" width="2.2798%" height="15" fill="rgb(205,209,3)" fg:x="70871542" fg:w="5341066"/><text x="30.5015%" y="1839.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,341,066 samples, 2.28%)</title><rect x="30.2515%" y="1813" width="2.2798%" height="15" fill="rgb(243,44,1)" fg:x="70871542" fg:w="5341066"/><text x="30.5015%" y="1823.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,341,066 samples, 2.28%)</title><rect x="30.2515%" y="1797" width="2.2798%" height="15" fill="rgb(206,159,16)" fg:x="70871542" fg:w="5341066"/><text x="30.5015%" y="1807.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,341,066 samples, 2.28%)</title><rect x="30.2515%" y="1781" width="2.2798%" height="15" fill="rgb(244,77,30)" fg:x="70871542" fg:w="5341066"/><text x="30.5015%" y="1791.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,341,066 samples, 2.28%)</title><rect x="30.2515%" y="1765" width="2.2798%" height="15" fill="rgb(218,69,12)" fg:x="70871542" fg:w="5341066"/><text x="30.5015%" y="1775.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,634,065 samples, 1.12%)</title><rect x="31.4070%" y="1749" width="1.1244%" height="15" fill="rgb(212,87,7)" fg:x="73578543" fg:w="2634065"/><text x="31.6570%" y="1759.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,634,065 samples, 1.12%)</title><rect x="31.4070%" y="1733" width="1.1244%" height="15" fill="rgb(245,114,25)" fg:x="73578543" fg:w="2634065"/><text x="31.6570%" y="1743.50"></text></g><g><title>[libc.so.6] (2,634,065 samples, 1.12%)</title><rect x="31.4070%" y="1717" width="1.1244%" height="15" fill="rgb(210,61,42)" fg:x="73578543" fg:w="2634065"/><text x="31.6570%" y="1727.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (23,070,291 samples, 9.85%)</title><rect x="23.2179%" y="2037" width="9.8476%" height="15" fill="rgb(211,52,33)" fg:x="54393520" fg:w="23070291"/><text x="23.4679%" y="2047.50">&lt;css_bitvector..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="2021" width="0.5341%" height="15" fill="rgb(234,58,33)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="2031.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="2005" width="0.5341%" height="15" fill="rgb(220,115,36)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="2015.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1989" width="0.5341%" height="15" fill="rgb(243,153,54)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1999.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1973" width="0.5341%" height="15" fill="rgb(251,47,18)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1983.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1957" width="0.5341%" height="15" fill="rgb(242,102,42)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1967.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1941" width="0.5341%" height="15" fill="rgb(234,31,38)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1951.50"></text></g><g><title>core::clone::Clone::clone (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1925" width="0.5341%" height="15" fill="rgb(221,117,51)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1935.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1909" width="0.5341%" height="15" fill="rgb(212,20,18)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1893" width="0.5341%" height="15" fill="rgb(245,133,36)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1877" width="0.5341%" height="15" fill="rgb(212,6,19)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1887.50"></text></g><g><title>alloc::slice::hack::to_vec (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1861" width="0.5341%" height="15" fill="rgb(218,1,36)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1845" width="0.5341%" height="15" fill="rgb(246,84,54)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1829" width="0.5341%" height="15" fill="rgb(242,110,6)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1813" width="0.5341%" height="15" fill="rgb(214,47,5)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1797" width="0.5341%" height="15" fill="rgb(218,159,25)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1781" width="0.5341%" height="15" fill="rgb(215,211,28)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1765" width="0.5341%" height="15" fill="rgb(238,59,32)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1749" width="0.5341%" height="15" fill="rgb(226,82,3)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1733" width="0.5341%" height="15" fill="rgb(240,164,32)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1743.50"></text></g><g><title>malloc (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1717" width="0.5341%" height="15" fill="rgb(232,46,7)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1727.50"></text></g><g><title>[libc.so.6] (1,251,203 samples, 0.53%)</title><rect x="32.5314%" y="1701" width="0.5341%" height="15" fill="rgb(229,129,53)" fg:x="76212608" fg:w="1251203"/><text x="32.7814%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24,506,449 samples, 10.46%)</title><rect x="23.2179%" y="2101" width="10.4606%" height="15" fill="rgb(234,188,29)" fg:x="54393520" fg:w="24506449"/><text x="23.4679%" y="2111.50">&lt;alloc::vec::Ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24,506,449 samples, 10.46%)</title><rect x="23.2179%" y="2085" width="10.4606%" height="15" fill="rgb(246,141,4)" fg:x="54393520" fg:w="24506449"/><text x="23.4679%" y="2095.50">alloc::slice::&lt;..</text></g><g><title>alloc::slice::hack::to_vec (24,506,449 samples, 10.46%)</title><rect x="23.2179%" y="2069" width="10.4606%" height="15" fill="rgb(229,23,39)" fg:x="54393520" fg:w="24506449"/><text x="23.4679%" y="2079.50">alloc::slice::h..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24,506,449 samples, 10.46%)</title><rect x="23.2179%" y="2053" width="10.4606%" height="15" fill="rgb(206,12,3)" fg:x="54393520" fg:w="24506449"/><text x="23.4679%" y="2063.50">&lt;T as alloc::sl..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,436,158 samples, 0.61%)</title><rect x="33.0654%" y="2037" width="0.6130%" height="15" fill="rgb(252,226,20)" fg:x="77463811" fg:w="1436158"/><text x="33.3154%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,436,158 samples, 0.61%)</title><rect x="33.0654%" y="2021" width="0.6130%" height="15" fill="rgb(216,123,35)" fg:x="77463811" fg:w="1436158"/><text x="33.3154%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,436,158 samples, 0.61%)</title><rect x="33.0654%" y="2005" width="0.6130%" height="15" fill="rgb(212,68,40)" fg:x="77463811" fg:w="1436158"/><text x="33.3154%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,436,158 samples, 0.61%)</title><rect x="33.0654%" y="1989" width="0.6130%" height="15" fill="rgb(254,125,32)" fg:x="77463811" fg:w="1436158"/><text x="33.3154%" y="1999.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,436,158 samples, 0.61%)</title><rect x="33.0654%" y="1973" width="0.6130%" height="15" fill="rgb(253,97,22)" fg:x="77463811" fg:w="1436158"/><text x="33.3154%" y="1983.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,436,158 samples, 0.61%)</title><rect x="33.0654%" y="1957" width="0.6130%" height="15" fill="rgb(241,101,14)" fg:x="77463811" fg:w="1436158"/><text x="33.3154%" y="1967.50"></text></g><g><title>alloc::alloc::alloc (1,436,158 samples, 0.61%)</title><rect x="33.0654%" y="1941" width="0.6130%" height="15" fill="rgb(238,103,29)" fg:x="77463811" fg:w="1436158"/><text x="33.3154%" y="1951.50"></text></g><g><title>malloc (1,436,158 samples, 0.61%)</title><rect x="33.0654%" y="1925" width="0.6130%" height="15" fill="rgb(233,195,47)" fg:x="77463811" fg:w="1436158"/><text x="33.3154%" y="1935.50"></text></g><g><title>[libc.so.6] (1,436,158 samples, 0.61%)</title><rect x="33.0654%" y="1909" width="0.6130%" height="15" fill="rgb(246,218,30)" fg:x="77463811" fg:w="1436158"/><text x="33.3154%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27,232,903 samples, 11.62%)</title><rect x="22.6351%" y="2181" width="11.6244%" height="15" fill="rgb(219,145,47)" fg:x="53028133" fg:w="27232903"/><text x="22.8851%" y="2191.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27,232,903 samples, 11.62%)</title><rect x="22.6351%" y="2165" width="11.6244%" height="15" fill="rgb(243,12,26)" fg:x="53028133" fg:w="27232903"/><text x="22.8851%" y="2175.50">alloc::slice::&lt;im..</text></g><g><title>alloc::slice::hack::to_vec (27,232,903 samples, 11.62%)</title><rect x="22.6351%" y="2149" width="11.6244%" height="15" fill="rgb(214,87,16)" fg:x="53028133" fg:w="27232903"/><text x="22.8851%" y="2159.50">alloc::slice::hac..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27,232,903 samples, 11.62%)</title><rect x="22.6351%" y="2133" width="11.6244%" height="15" fill="rgb(208,99,42)" fg:x="53028133" fg:w="27232903"/><text x="22.8851%" y="2143.50">&lt;T as alloc::slic..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (27,232,903 samples, 11.62%)</title><rect x="22.6351%" y="2117" width="11.6244%" height="15" fill="rgb(253,99,2)" fg:x="53028133" fg:w="27232903"/><text x="22.8851%" y="2127.50">&lt;css_bitvector_co..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,361,067 samples, 0.58%)</title><rect x="33.6785%" y="2101" width="0.5810%" height="15" fill="rgb(220,168,23)" fg:x="78899969" fg:w="1361067"/><text x="33.9285%" y="2111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,361,067 samples, 0.58%)</title><rect x="33.6785%" y="2085" width="0.5810%" height="15" fill="rgb(242,38,24)" fg:x="78899969" fg:w="1361067"/><text x="33.9285%" y="2095.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,361,067 samples, 0.58%)</title><rect x="33.6785%" y="2069" width="0.5810%" height="15" fill="rgb(225,182,9)" fg:x="78899969" fg:w="1361067"/><text x="33.9285%" y="2079.50"></text></g><g><title>alloc::slice::hack::to_vec (1,361,067 samples, 0.58%)</title><rect x="33.6785%" y="2053" width="0.5810%" height="15" fill="rgb(243,178,37)" fg:x="78899969" fg:w="1361067"/><text x="33.9285%" y="2063.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,361,067 samples, 0.58%)</title><rect x="33.6785%" y="2037" width="0.5810%" height="15" fill="rgb(232,139,19)" fg:x="78899969" fg:w="1361067"/><text x="33.9285%" y="2047.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,361,067 samples, 0.58%)</title><rect x="33.6785%" y="2021" width="0.5810%" height="15" fill="rgb(225,201,24)" fg:x="78899969" fg:w="1361067"/><text x="33.9285%" y="2031.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,361,067 samples, 0.58%)</title><rect x="33.6785%" y="2005" width="0.5810%" height="15" fill="rgb(221,47,46)" fg:x="78899969" fg:w="1361067"/><text x="33.9285%" y="2015.50"></text></g><g><title>[libc.so.6] (1,361,067 samples, 0.58%)</title><rect x="33.6785%" y="1989" width="0.5810%" height="15" fill="rgb(249,23,13)" fg:x="78899969" fg:w="1361067"/><text x="33.9285%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28,413,127 samples, 12.13%)</title><rect x="22.6351%" y="2261" width="12.1282%" height="15" fill="rgb(219,9,5)" fg:x="53028133" fg:w="28413127"/><text x="22.8851%" y="2271.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28,413,127 samples, 12.13%)</title><rect x="22.6351%" y="2245" width="12.1282%" height="15" fill="rgb(254,171,16)" fg:x="53028133" fg:w="28413127"/><text x="22.8851%" y="2255.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (28,413,127 samples, 12.13%)</title><rect x="22.6351%" y="2229" width="12.1282%" height="15" fill="rgb(230,171,20)" fg:x="53028133" fg:w="28413127"/><text x="22.8851%" y="2239.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28,413,127 samples, 12.13%)</title><rect x="22.6351%" y="2213" width="12.1282%" height="15" fill="rgb(210,71,41)" fg:x="53028133" fg:w="28413127"/><text x="22.8851%" y="2223.50">&lt;T as alloc::slice..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (28,413,127 samples, 12.13%)</title><rect x="22.6351%" y="2197" width="12.1282%" height="15" fill="rgb(206,173,20)" fg:x="53028133" fg:w="28413127"/><text x="22.8851%" y="2207.50">&lt;css_bitvector_com..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,180,224 samples, 0.50%)</title><rect x="34.2594%" y="2181" width="0.5038%" height="15" fill="rgb(233,88,34)" fg:x="80261036" fg:w="1180224"/><text x="34.5094%" y="2191.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,180,224 samples, 0.50%)</title><rect x="34.2594%" y="2165" width="0.5038%" height="15" fill="rgb(223,209,46)" fg:x="80261036" fg:w="1180224"/><text x="34.5094%" y="2175.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,180,224 samples, 0.50%)</title><rect x="34.2594%" y="2149" width="0.5038%" height="15" fill="rgb(250,43,18)" fg:x="80261036" fg:w="1180224"/><text x="34.5094%" y="2159.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,180,224 samples, 0.50%)</title><rect x="34.2594%" y="2133" width="0.5038%" height="15" fill="rgb(208,13,10)" fg:x="80261036" fg:w="1180224"/><text x="34.5094%" y="2143.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,180,224 samples, 0.50%)</title><rect x="34.2594%" y="2117" width="0.5038%" height="15" fill="rgb(212,200,36)" fg:x="80261036" fg:w="1180224"/><text x="34.5094%" y="2127.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,180,224 samples, 0.50%)</title><rect x="34.2594%" y="2101" width="0.5038%" height="15" fill="rgb(225,90,30)" fg:x="80261036" fg:w="1180224"/><text x="34.5094%" y="2111.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,180,224 samples, 0.50%)</title><rect x="34.2594%" y="2085" width="0.5038%" height="15" fill="rgb(236,182,39)" fg:x="80261036" fg:w="1180224"/><text x="34.5094%" y="2095.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,180,224 samples, 0.50%)</title><rect x="34.2594%" y="2069" width="0.5038%" height="15" fill="rgb(212,144,35)" fg:x="80261036" fg:w="1180224"/><text x="34.5094%" y="2079.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,180,224 samples, 0.50%)</title><rect x="34.2594%" y="2053" width="0.5038%" height="15" fill="rgb(228,63,44)" fg:x="80261036" fg:w="1180224"/><text x="34.5094%" y="2063.50"></text></g><g><title>alloc::alloc::alloc (1,180,224 samples, 0.50%)</title><rect x="34.2594%" y="2037" width="0.5038%" height="15" fill="rgb(228,109,6)" fg:x="80261036" fg:w="1180224"/><text x="34.5094%" y="2047.50"></text></g><g><title>[libc.so.6] (1,180,224 samples, 0.50%)</title><rect x="34.2594%" y="2021" width="0.5038%" height="15" fill="rgb(238,117,24)" fg:x="80261036" fg:w="1180224"/><text x="34.5094%" y="2031.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,256,182 samples, 0.54%)</title><rect x="34.7632%" y="2245" width="0.5362%" height="15" fill="rgb(242,26,26)" fg:x="81441260" fg:w="1256182"/><text x="35.0132%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,256,182 samples, 0.54%)</title><rect x="34.7632%" y="2229" width="0.5362%" height="15" fill="rgb(221,92,48)" fg:x="81441260" fg:w="1256182"/><text x="35.0132%" y="2239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,256,182 samples, 0.54%)</title><rect x="34.7632%" y="2213" width="0.5362%" height="15" fill="rgb(209,209,32)" fg:x="81441260" fg:w="1256182"/><text x="35.0132%" y="2223.50"></text></g><g><title>alloc::slice::hack::to_vec (1,256,182 samples, 0.54%)</title><rect x="34.7632%" y="2197" width="0.5362%" height="15" fill="rgb(221,70,22)" fg:x="81441260" fg:w="1256182"/><text x="35.0132%" y="2207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,256,182 samples, 0.54%)</title><rect x="34.7632%" y="2181" width="0.5362%" height="15" fill="rgb(248,145,5)" fg:x="81441260" fg:w="1256182"/><text x="35.0132%" y="2191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,256,182 samples, 0.54%)</title><rect x="34.7632%" y="2165" width="0.5362%" height="15" fill="rgb(226,116,26)" fg:x="81441260" fg:w="1256182"/><text x="35.0132%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,256,182 samples, 0.54%)</title><rect x="34.7632%" y="2149" width="0.5362%" height="15" fill="rgb(244,5,17)" fg:x="81441260" fg:w="1256182"/><text x="35.0132%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,256,182 samples, 0.54%)</title><rect x="34.7632%" y="2133" width="0.5362%" height="15" fill="rgb(252,159,33)" fg:x="81441260" fg:w="1256182"/><text x="35.0132%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,256,182 samples, 0.54%)</title><rect x="34.7632%" y="2117" width="0.5362%" height="15" fill="rgb(206,71,0)" fg:x="81441260" fg:w="1256182"/><text x="35.0132%" y="2127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,256,182 samples, 0.54%)</title><rect x="34.7632%" y="2101" width="0.5362%" height="15" fill="rgb(233,118,54)" fg:x="81441260" fg:w="1256182"/><text x="35.0132%" y="2111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,256,182 samples, 0.54%)</title><rect x="34.7632%" y="2085" width="0.5362%" height="15" fill="rgb(234,83,48)" fg:x="81441260" fg:w="1256182"/><text x="35.0132%" y="2095.50"></text></g><g><title>alloc::alloc::alloc (1,256,182 samples, 0.54%)</title><rect x="34.7632%" y="2069" width="0.5362%" height="15" fill="rgb(228,3,54)" fg:x="81441260" fg:w="1256182"/><text x="35.0132%" y="2079.50"></text></g><g><title>malloc (1,256,182 samples, 0.54%)</title><rect x="34.7632%" y="2053" width="0.5362%" height="15" fill="rgb(226,155,13)" fg:x="81441260" fg:w="1256182"/><text x="35.0132%" y="2063.50"></text></g><g><title>[libc.so.6] (1,256,182 samples, 0.54%)</title><rect x="34.7632%" y="2037" width="0.5362%" height="15" fill="rgb(241,28,37)" fg:x="81441260" fg:w="1256182"/><text x="35.0132%" y="2047.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,587,424 samples, 1.10%)</title><rect x="34.7632%" y="2261" width="1.1044%" height="15" fill="rgb(233,93,10)" fg:x="81441260" fg:w="2587424"/><text x="35.0132%" y="2271.50"></text></g><g><title>[unknown] (1,331,242 samples, 0.57%)</title><rect x="35.2994%" y="2245" width="0.5682%" height="15" fill="rgb(225,113,19)" fg:x="82697442" fg:w="1331242"/><text x="35.5494%" y="2255.50"></text></g><g><title>[libc.so.6] (1,331,242 samples, 0.57%)</title><rect x="35.2994%" y="2229" width="0.5682%" height="15" fill="rgb(241,2,18)" fg:x="82697442" fg:w="1331242"/><text x="35.5494%" y="2239.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (32,259,842 samples, 13.77%)</title><rect x="22.6351%" y="2277" width="13.7701%" height="15" fill="rgb(228,207,21)" fg:x="53028133" fg:w="32259842"/><text x="22.8851%" y="2287.50">&lt;css_bitvector_compil..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2261" width="0.5375%" height="15" fill="rgb(213,211,35)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2271.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2245" width="0.5375%" height="15" fill="rgb(209,83,10)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2255.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2229" width="0.5375%" height="15" fill="rgb(209,164,1)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2239.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2213" width="0.5375%" height="15" fill="rgb(213,184,43)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2197" width="0.5375%" height="15" fill="rgb(231,61,34)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2181" width="0.5375%" height="15" fill="rgb(235,75,3)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2191.50"></text></g><g><title>core::clone::Clone::clone (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2165" width="0.5375%" height="15" fill="rgb(220,106,47)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2175.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2149" width="0.5375%" height="15" fill="rgb(210,196,33)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2133" width="0.5375%" height="15" fill="rgb(229,154,42)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2143.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2117" width="0.5375%" height="15" fill="rgb(228,114,26)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2127.50"></text></g><g><title>alloc::slice::hack::to_vec (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2101" width="0.5375%" height="15" fill="rgb(208,144,1)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2111.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2085" width="0.5375%" height="15" fill="rgb(239,112,37)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2095.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2069" width="0.5375%" height="15" fill="rgb(210,96,50)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2053" width="0.5375%" height="15" fill="rgb(222,178,2)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2037" width="0.5375%" height="15" fill="rgb(226,74,18)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2021" width="0.5375%" height="15" fill="rgb(225,67,54)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="2005" width="0.5375%" height="15" fill="rgb(251,92,32)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="2015.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="1989" width="0.5375%" height="15" fill="rgb(228,149,22)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="1999.50"></text></g><g><title>alloc::alloc::alloc (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="1973" width="0.5375%" height="15" fill="rgb(243,54,13)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="1983.50"></text></g><g><title>malloc (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="1957" width="0.5375%" height="15" fill="rgb(243,180,28)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="1967.50"></text></g><g><title>[libc.so.6] (1,259,291 samples, 0.54%)</title><rect x="35.8677%" y="1941" width="0.5375%" height="15" fill="rgb(208,167,24)" fg:x="84028684" fg:w="1259291"/><text x="36.1177%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (33,591,634 samples, 14.34%)</title><rect x="22.6351%" y="2341" width="14.3386%" height="15" fill="rgb(245,73,45)" fg:x="53028133" fg:w="33591634"/><text x="22.8851%" y="2351.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (33,591,634 samples, 14.34%)</title><rect x="22.6351%" y="2325" width="14.3386%" height="15" fill="rgb(237,203,48)" fg:x="53028133" fg:w="33591634"/><text x="22.8851%" y="2335.50">alloc::slice::&lt;impl [T..</text></g><g><title>alloc::slice::hack::to_vec (33,591,634 samples, 14.34%)</title><rect x="22.6351%" y="2309" width="14.3386%" height="15" fill="rgb(211,197,16)" fg:x="53028133" fg:w="33591634"/><text x="22.8851%" y="2319.50">alloc::slice::hack::to..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33,591,634 samples, 14.34%)</title><rect x="22.6351%" y="2293" width="14.3386%" height="15" fill="rgb(243,99,51)" fg:x="53028133" fg:w="33591634"/><text x="22.8851%" y="2303.50">&lt;T as alloc::slice::ha..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,331,792 samples, 0.57%)</title><rect x="36.4052%" y="2277" width="0.5685%" height="15" fill="rgb(215,123,29)" fg:x="85287975" fg:w="1331792"/><text x="36.6552%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,331,792 samples, 0.57%)</title><rect x="36.4052%" y="2261" width="0.5685%" height="15" fill="rgb(239,186,37)" fg:x="85287975" fg:w="1331792"/><text x="36.6552%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,331,792 samples, 0.57%)</title><rect x="36.4052%" y="2245" width="0.5685%" height="15" fill="rgb(252,136,39)" fg:x="85287975" fg:w="1331792"/><text x="36.6552%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,331,792 samples, 0.57%)</title><rect x="36.4052%" y="2229" width="0.5685%" height="15" fill="rgb(223,213,32)" fg:x="85287975" fg:w="1331792"/><text x="36.6552%" y="2239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,331,792 samples, 0.57%)</title><rect x="36.4052%" y="2213" width="0.5685%" height="15" fill="rgb(233,115,5)" fg:x="85287975" fg:w="1331792"/><text x="36.6552%" y="2223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,331,792 samples, 0.57%)</title><rect x="36.4052%" y="2197" width="0.5685%" height="15" fill="rgb(207,226,44)" fg:x="85287975" fg:w="1331792"/><text x="36.6552%" y="2207.50"></text></g><g><title>alloc::alloc::alloc (1,331,792 samples, 0.57%)</title><rect x="36.4052%" y="2181" width="0.5685%" height="15" fill="rgb(208,126,0)" fg:x="85287975" fg:w="1331792"/><text x="36.6552%" y="2191.50"></text></g><g><title>malloc (1,331,792 samples, 0.57%)</title><rect x="36.4052%" y="2165" width="0.5685%" height="15" fill="rgb(244,66,21)" fg:x="85287975" fg:w="1331792"/><text x="36.6552%" y="2175.50"></text></g><g><title>[libc.so.6] (1,331,792 samples, 0.57%)</title><rect x="36.4052%" y="2149" width="0.5685%" height="15" fill="rgb(222,97,12)" fg:x="85287975" fg:w="1331792"/><text x="36.6552%" y="2159.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,665,871 samples, 1.14%)</title><rect x="36.9737%" y="2341" width="1.1379%" height="15" fill="rgb(219,213,19)" fg:x="86619767" fg:w="2665871"/><text x="37.2237%" y="2351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,419,177 samples, 0.61%)</title><rect x="37.5058%" y="2325" width="0.6058%" height="15" fill="rgb(252,169,30)" fg:x="87866461" fg:w="1419177"/><text x="37.7558%" y="2335.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,296,504 samples, 0.55%)</title><rect x="38.1116%" y="2341" width="0.5534%" height="15" fill="rgb(206,32,51)" fg:x="89285638" fg:w="1296504"/><text x="38.3616%" y="2351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,296,504 samples, 0.55%)</title><rect x="38.1116%" y="2325" width="0.5534%" height="15" fill="rgb(250,172,42)" fg:x="89285638" fg:w="1296504"/><text x="38.3616%" y="2335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,296,504 samples, 0.55%)</title><rect x="38.1116%" y="2309" width="0.5534%" height="15" fill="rgb(209,34,43)" fg:x="89285638" fg:w="1296504"/><text x="38.3616%" y="2319.50"></text></g><g><title>alloc::slice::hack::to_vec (1,296,504 samples, 0.55%)</title><rect x="38.1116%" y="2293" width="0.5534%" height="15" fill="rgb(223,11,35)" fg:x="89285638" fg:w="1296504"/><text x="38.3616%" y="2303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,296,504 samples, 0.55%)</title><rect x="38.1116%" y="2277" width="0.5534%" height="15" fill="rgb(251,219,26)" fg:x="89285638" fg:w="1296504"/><text x="38.3616%" y="2287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,296,504 samples, 0.55%)</title><rect x="38.1116%" y="2261" width="0.5534%" height="15" fill="rgb(231,119,3)" fg:x="89285638" fg:w="1296504"/><text x="38.3616%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,296,504 samples, 0.55%)</title><rect x="38.1116%" y="2245" width="0.5534%" height="15" fill="rgb(216,97,11)" fg:x="89285638" fg:w="1296504"/><text x="38.3616%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,296,504 samples, 0.55%)</title><rect x="38.1116%" y="2229" width="0.5534%" height="15" fill="rgb(223,59,9)" fg:x="89285638" fg:w="1296504"/><text x="38.3616%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,296,504 samples, 0.55%)</title><rect x="38.1116%" y="2213" width="0.5534%" height="15" fill="rgb(233,93,31)" fg:x="89285638" fg:w="1296504"/><text x="38.3616%" y="2223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,296,504 samples, 0.55%)</title><rect x="38.1116%" y="2197" width="0.5534%" height="15" fill="rgb(239,81,33)" fg:x="89285638" fg:w="1296504"/><text x="38.3616%" y="2207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,296,504 samples, 0.55%)</title><rect x="38.1116%" y="2181" width="0.5534%" height="15" fill="rgb(213,120,34)" fg:x="89285638" fg:w="1296504"/><text x="38.3616%" y="2191.50"></text></g><g><title>alloc::alloc::alloc (1,296,504 samples, 0.55%)</title><rect x="38.1116%" y="2165" width="0.5534%" height="15" fill="rgb(243,49,53)" fg:x="89285638" fg:w="1296504"/><text x="38.3616%" y="2175.50"></text></g><g><title>malloc (1,296,504 samples, 0.55%)</title><rect x="38.1116%" y="2149" width="0.5534%" height="15" fill="rgb(247,216,33)" fg:x="89285638" fg:w="1296504"/><text x="38.3616%" y="2159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (43,215,765 samples, 18.45%)</title><rect x="22.6351%" y="2421" width="18.4467%" height="15" fill="rgb(226,26,14)" fg:x="53028133" fg:w="43215765"/><text x="22.8851%" y="2431.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (43,215,765 samples, 18.45%)</title><rect x="22.6351%" y="2405" width="18.4467%" height="15" fill="rgb(215,49,53)" fg:x="53028133" fg:w="43215765"/><text x="22.8851%" y="2415.50">alloc::slice::&lt;impl [T]&gt;::to_..</text></g><g><title>alloc::slice::hack::to_vec (43,215,765 samples, 18.45%)</title><rect x="22.6351%" y="2389" width="18.4467%" height="15" fill="rgb(245,162,40)" fg:x="53028133" fg:w="43215765"/><text x="22.8851%" y="2399.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (43,215,765 samples, 18.45%)</title><rect x="22.6351%" y="2373" width="18.4467%" height="15" fill="rgb(229,68,17)" fg:x="53028133" fg:w="43215765"/><text x="22.8851%" y="2383.50">&lt;T as alloc::slice::hack::Con..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (43,215,765 samples, 18.45%)</title><rect x="22.6351%" y="2357" width="18.4467%" height="15" fill="rgb(213,182,10)" fg:x="53028133" fg:w="43215765"/><text x="22.8851%" y="2367.50">&lt;css_bitvector_compiler::Html..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5,661,756 samples, 2.42%)</title><rect x="38.6650%" y="2341" width="2.4167%" height="15" fill="rgb(245,125,30)" fg:x="90582142" fg:w="5661756"/><text x="38.9150%" y="2351.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5,661,756 samples, 2.42%)</title><rect x="38.6650%" y="2325" width="2.4167%" height="15" fill="rgb(232,202,2)" fg:x="90582142" fg:w="5661756"/><text x="38.9150%" y="2335.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5,661,756 samples, 2.42%)</title><rect x="38.6650%" y="2309" width="2.4167%" height="15" fill="rgb(237,140,51)" fg:x="90582142" fg:w="5661756"/><text x="38.9150%" y="2319.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,661,756 samples, 2.42%)</title><rect x="38.6650%" y="2293" width="2.4167%" height="15" fill="rgb(236,157,25)" fg:x="90582142" fg:w="5661756"/><text x="38.9150%" y="2303.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (5,661,756 samples, 2.42%)</title><rect x="38.6650%" y="2277" width="2.4167%" height="15" fill="rgb(219,209,0)" fg:x="90582142" fg:w="5661756"/><text x="38.9150%" y="2287.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (5,661,756 samples, 2.42%)</title><rect x="38.6650%" y="2261" width="2.4167%" height="15" fill="rgb(240,116,54)" fg:x="90582142" fg:w="5661756"/><text x="38.9150%" y="2271.50">ha..</text></g><g><title>core::clone::Clone::clone (5,661,756 samples, 2.42%)</title><rect x="38.6650%" y="2245" width="2.4167%" height="15" fill="rgb(216,10,36)" fg:x="90582142" fg:w="5661756"/><text x="38.9150%" y="2255.50">co..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,661,756 samples, 2.42%)</title><rect x="38.6650%" y="2229" width="2.4167%" height="15" fill="rgb(222,72,44)" fg:x="90582142" fg:w="5661756"/><text x="38.9150%" y="2239.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,208,600 samples, 1.80%)</title><rect x="39.2853%" y="2213" width="1.7964%" height="15" fill="rgb(232,159,9)" fg:x="92035298" fg:w="4208600"/><text x="39.5353%" y="2223.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,208,600 samples, 1.80%)</title><rect x="39.2853%" y="2197" width="1.7964%" height="15" fill="rgb(210,39,32)" fg:x="92035298" fg:w="4208600"/><text x="39.5353%" y="2207.50">a..</text></g><g><title>alloc::slice::hack::to_vec (4,208,600 samples, 1.80%)</title><rect x="39.2853%" y="2181" width="1.7964%" height="15" fill="rgb(216,194,45)" fg:x="92035298" fg:w="4208600"/><text x="39.5353%" y="2191.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,208,600 samples, 1.80%)</title><rect x="39.2853%" y="2165" width="1.7964%" height="15" fill="rgb(218,18,35)" fg:x="92035298" fg:w="4208600"/><text x="39.5353%" y="2175.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,208,600 samples, 1.80%)</title><rect x="39.2853%" y="2149" width="1.7964%" height="15" fill="rgb(207,83,51)" fg:x="92035298" fg:w="4208600"/><text x="39.5353%" y="2159.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,208,600 samples, 1.80%)</title><rect x="39.2853%" y="2133" width="1.7964%" height="15" fill="rgb(225,63,43)" fg:x="92035298" fg:w="4208600"/><text x="39.5353%" y="2143.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,208,600 samples, 1.80%)</title><rect x="39.2853%" y="2117" width="1.7964%" height="15" fill="rgb(207,57,36)" fg:x="92035298" fg:w="4208600"/><text x="39.5353%" y="2127.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,208,600 samples, 1.80%)</title><rect x="39.2853%" y="2101" width="1.7964%" height="15" fill="rgb(216,99,33)" fg:x="92035298" fg:w="4208600"/><text x="39.5353%" y="2111.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,208,600 samples, 1.80%)</title><rect x="39.2853%" y="2085" width="1.7964%" height="15" fill="rgb(225,42,16)" fg:x="92035298" fg:w="4208600"/><text x="39.5353%" y="2095.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (4,208,600 samples, 1.80%)</title><rect x="39.2853%" y="2069" width="1.7964%" height="15" fill="rgb(220,201,45)" fg:x="92035298" fg:w="4208600"/><text x="39.5353%" y="2079.50">a..</text></g><g><title>alloc::alloc::alloc (4,208,600 samples, 1.80%)</title><rect x="39.2853%" y="2053" width="1.7964%" height="15" fill="rgb(225,33,4)" fg:x="92035298" fg:w="4208600"/><text x="39.5353%" y="2063.50">a..</text></g><g><title>malloc (4,208,600 samples, 1.80%)</title><rect x="39.2853%" y="2037" width="1.7964%" height="15" fill="rgb(224,33,50)" fg:x="92035298" fg:w="4208600"/><text x="39.5353%" y="2047.50">m..</text></g><g><title>[libc.so.6] (4,208,600 samples, 1.80%)</title><rect x="39.2853%" y="2021" width="1.7964%" height="15" fill="rgb(246,198,51)" fg:x="92035298" fg:w="4208600"/><text x="39.5353%" y="2031.50">[..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,369,367 samples, 0.58%)</title><rect x="41.0817%" y="2421" width="0.5845%" height="15" fill="rgb(205,22,4)" fg:x="96243898" fg:w="1369367"/><text x="41.3317%" y="2431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (47,277,103 samples, 20.18%)</title><rect x="22.0967%" y="2501" width="20.1802%" height="15" fill="rgb(206,3,8)" fg:x="51766866" fg:w="47277103"/><text x="22.3467%" y="2511.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::c..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (47,277,103 samples, 20.18%)</title><rect x="22.0967%" y="2485" width="20.1802%" height="15" fill="rgb(251,23,15)" fg:x="51766866" fg:w="47277103"/><text x="22.3467%" y="2495.50">alloc::slice::&lt;impl [T]&gt;::to_vec..</text></g><g><title>alloc::slice::hack::to_vec (47,277,103 samples, 20.18%)</title><rect x="22.0967%" y="2469" width="20.1802%" height="15" fill="rgb(252,88,28)" fg:x="51766866" fg:w="47277103"/><text x="22.3467%" y="2479.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (47,277,103 samples, 20.18%)</title><rect x="22.0967%" y="2453" width="20.1802%" height="15" fill="rgb(212,127,14)" fg:x="51766866" fg:w="47277103"/><text x="22.3467%" y="2463.50">&lt;T as alloc::slice::hack::Conver..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (47,277,103 samples, 20.18%)</title><rect x="22.0967%" y="2437" width="20.1802%" height="15" fill="rgb(247,145,37)" fg:x="51766866" fg:w="47277103"/><text x="22.3467%" y="2447.50">&lt;css_bitvector_compiler::HtmlNod..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2421" width="0.6107%" height="15" fill="rgb(209,117,53)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2431.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2405" width="0.6107%" height="15" fill="rgb(212,90,42)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2415.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2389" width="0.6107%" height="15" fill="rgb(218,164,37)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2373" width="0.6107%" height="15" fill="rgb(246,65,34)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2357" width="0.6107%" height="15" fill="rgb(231,100,33)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2341" width="0.6107%" height="15" fill="rgb(228,126,14)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2351.50"></text></g><g><title>core::clone::Clone::clone (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2325" width="0.6107%" height="15" fill="rgb(215,173,21)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2309" width="0.6107%" height="15" fill="rgb(210,6,40)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2293" width="0.6107%" height="15" fill="rgb(212,48,18)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2277" width="0.6107%" height="15" fill="rgb(230,214,11)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2287.50"></text></g><g><title>alloc::slice::hack::to_vec (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2261" width="0.6107%" height="15" fill="rgb(254,105,39)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2245" width="0.6107%" height="15" fill="rgb(245,158,5)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2229" width="0.6107%" height="15" fill="rgb(249,208,11)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2213" width="0.6107%" height="15" fill="rgb(210,39,28)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2197" width="0.6107%" height="15" fill="rgb(211,56,53)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2181" width="0.6107%" height="15" fill="rgb(226,201,30)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2165" width="0.6107%" height="15" fill="rgb(239,101,34)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2149" width="0.6107%" height="15" fill="rgb(226,209,5)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2159.50"></text></g><g><title>alloc::alloc::alloc (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2133" width="0.6107%" height="15" fill="rgb(250,105,47)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2143.50"></text></g><g><title>malloc (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2117" width="0.6107%" height="15" fill="rgb(230,72,3)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2127.50"></text></g><g><title>[libc.so.6] (1,430,704 samples, 0.61%)</title><rect x="41.6662%" y="2101" width="0.6107%" height="15" fill="rgb(232,218,39)" fg:x="97613265" fg:w="1430704"/><text x="41.9162%" y="2111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,661,335 samples, 1.14%)</title><rect x="42.2769%" y="2405" width="1.1360%" height="15" fill="rgb(248,166,6)" fg:x="99043969" fg:w="2661335"/><text x="42.5269%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,661,335 samples, 1.14%)</title><rect x="42.2769%" y="2389" width="1.1360%" height="15" fill="rgb(247,89,20)" fg:x="99043969" fg:w="2661335"/><text x="42.5269%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,661,335 samples, 1.14%)</title><rect x="42.2769%" y="2373" width="1.1360%" height="15" fill="rgb(248,130,54)" fg:x="99043969" fg:w="2661335"/><text x="42.5269%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,661,335 samples, 1.14%)</title><rect x="42.2769%" y="2357" width="1.1360%" height="15" fill="rgb(234,196,4)" fg:x="99043969" fg:w="2661335"/><text x="42.5269%" y="2367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,661,335 samples, 1.14%)</title><rect x="42.2769%" y="2341" width="1.1360%" height="15" fill="rgb(250,143,31)" fg:x="99043969" fg:w="2661335"/><text x="42.5269%" y="2351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,661,335 samples, 1.14%)</title><rect x="42.2769%" y="2325" width="1.1360%" height="15" fill="rgb(211,110,34)" fg:x="99043969" fg:w="2661335"/><text x="42.5269%" y="2335.50"></text></g><g><title>alloc::alloc::alloc (2,661,335 samples, 1.14%)</title><rect x="42.2769%" y="2309" width="1.1360%" height="15" fill="rgb(215,124,48)" fg:x="99043969" fg:w="2661335"/><text x="42.5269%" y="2319.50"></text></g><g><title>malloc (1,360,355 samples, 0.58%)</title><rect x="42.8323%" y="2293" width="0.5807%" height="15" fill="rgb(216,46,13)" fg:x="100344949" fg:w="1360355"/><text x="43.0823%" y="2303.50"></text></g><g><title>[libc.so.6] (1,360,355 samples, 0.58%)</title><rect x="42.8323%" y="2277" width="0.5807%" height="15" fill="rgb(205,184,25)" fg:x="100344949" fg:w="1360355"/><text x="43.0823%" y="2287.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,961,229 samples, 1.69%)</title><rect x="42.2769%" y="2501" width="1.6909%" height="15" fill="rgb(228,1,10)" fg:x="99043969" fg:w="3961229"/><text x="42.5269%" y="2511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,961,229 samples, 1.69%)</title><rect x="42.2769%" y="2485" width="1.6909%" height="15" fill="rgb(213,116,27)" fg:x="99043969" fg:w="3961229"/><text x="42.5269%" y="2495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,961,229 samples, 1.69%)</title><rect x="42.2769%" y="2469" width="1.6909%" height="15" fill="rgb(241,95,50)" fg:x="99043969" fg:w="3961229"/><text x="42.5269%" y="2479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,961,229 samples, 1.69%)</title><rect x="42.2769%" y="2453" width="1.6909%" height="15" fill="rgb(238,48,32)" fg:x="99043969" fg:w="3961229"/><text x="42.5269%" y="2463.50"></text></g><g><title>alloc::slice::hack::to_vec (3,961,229 samples, 1.69%)</title><rect x="42.2769%" y="2437" width="1.6909%" height="15" fill="rgb(235,113,49)" fg:x="99043969" fg:w="3961229"/><text x="42.5269%" y="2447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,961,229 samples, 1.69%)</title><rect x="42.2769%" y="2421" width="1.6909%" height="15" fill="rgb(205,127,43)" fg:x="99043969" fg:w="3961229"/><text x="42.5269%" y="2431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,299,894 samples, 0.55%)</title><rect x="43.4129%" y="2405" width="0.5549%" height="15" fill="rgb(250,162,2)" fg:x="101705304" fg:w="1299894"/><text x="43.6629%" y="2415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,299,894 samples, 0.55%)</title><rect x="43.4129%" y="2389" width="0.5549%" height="15" fill="rgb(220,13,41)" fg:x="101705304" fg:w="1299894"/><text x="43.6629%" y="2399.50"></text></g><g><title>[libc.so.6] (1,299,894 samples, 0.55%)</title><rect x="43.4129%" y="2373" width="0.5549%" height="15" fill="rgb(249,221,25)" fg:x="101705304" fg:w="1299894"/><text x="43.6629%" y="2383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,358,082 samples, 0.58%)</title><rect x="43.9678%" y="2421" width="0.5797%" height="15" fill="rgb(215,208,19)" fg:x="103005198" fg:w="1358082"/><text x="44.2178%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,358,082 samples, 0.58%)</title><rect x="43.9678%" y="2405" width="0.5797%" height="15" fill="rgb(236,175,2)" fg:x="103005198" fg:w="1358082"/><text x="44.2178%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,358,082 samples, 0.58%)</title><rect x="43.9678%" y="2389" width="0.5797%" height="15" fill="rgb(241,52,2)" fg:x="103005198" fg:w="1358082"/><text x="44.2178%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,358,082 samples, 0.58%)</title><rect x="43.9678%" y="2373" width="0.5797%" height="15" fill="rgb(248,140,14)" fg:x="103005198" fg:w="1358082"/><text x="44.2178%" y="2383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,358,082 samples, 0.58%)</title><rect x="43.9678%" y="2357" width="0.5797%" height="15" fill="rgb(253,22,42)" fg:x="103005198" fg:w="1358082"/><text x="44.2178%" y="2367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,358,082 samples, 0.58%)</title><rect x="43.9678%" y="2341" width="0.5797%" height="15" fill="rgb(234,61,47)" fg:x="103005198" fg:w="1358082"/><text x="44.2178%" y="2351.50"></text></g><g><title>alloc::alloc::alloc (1,358,082 samples, 0.58%)</title><rect x="43.9678%" y="2325" width="0.5797%" height="15" fill="rgb(208,226,15)" fg:x="103005198" fg:w="1358082"/><text x="44.2178%" y="2335.50"></text></g><g><title>malloc (1,358,082 samples, 0.58%)</title><rect x="43.9678%" y="2309" width="0.5797%" height="15" fill="rgb(217,221,4)" fg:x="103005198" fg:w="1358082"/><text x="44.2178%" y="2319.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (59,180,085 samples, 25.26%)</title><rect x="19.8583%" y="2517" width="25.2610%" height="15" fill="rgb(212,174,34)" fg:x="46522776" fg:w="59180085"/><text x="20.1083%" y="2527.50">&lt;css_bitvector_compiler::HtmlNode as cor..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,697,663 samples, 1.15%)</title><rect x="43.9678%" y="2501" width="1.1515%" height="15" fill="rgb(253,83,4)" fg:x="103005198" fg:w="2697663"/><text x="44.2178%" y="2511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,697,663 samples, 1.15%)</title><rect x="43.9678%" y="2485" width="1.1515%" height="15" fill="rgb(250,195,49)" fg:x="103005198" fg:w="2697663"/><text x="44.2178%" y="2495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,697,663 samples, 1.15%)</title><rect x="43.9678%" y="2469" width="1.1515%" height="15" fill="rgb(241,192,25)" fg:x="103005198" fg:w="2697663"/><text x="44.2178%" y="2479.50"></text></g><g><title>alloc::slice::hack::to_vec (2,697,663 samples, 1.15%)</title><rect x="43.9678%" y="2453" width="1.1515%" height="15" fill="rgb(208,124,10)" fg:x="103005198" fg:w="2697663"/><text x="44.2178%" y="2463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,697,663 samples, 1.15%)</title><rect x="43.9678%" y="2437" width="1.1515%" height="15" fill="rgb(222,33,0)" fg:x="103005198" fg:w="2697663"/><text x="44.2178%" y="2447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,339,581 samples, 0.57%)</title><rect x="44.5475%" y="2421" width="0.5718%" height="15" fill="rgb(234,209,28)" fg:x="104363280" fg:w="1339581"/><text x="44.7975%" y="2431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,339,581 samples, 0.57%)</title><rect x="44.5475%" y="2405" width="0.5718%" height="15" fill="rgb(224,11,23)" fg:x="104363280" fg:w="1339581"/><text x="44.7975%" y="2415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,363,860 samples, 3.14%)</title><rect x="45.1193%" y="2517" width="3.1433%" height="15" fill="rgb(232,99,1)" fg:x="105702861" fg:w="7363860"/><text x="45.3693%" y="2527.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7,363,860 samples, 3.14%)</title><rect x="45.1193%" y="2501" width="3.1433%" height="15" fill="rgb(237,95,45)" fg:x="105702861" fg:w="7363860"/><text x="45.3693%" y="2511.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7,363,860 samples, 3.14%)</title><rect x="45.1193%" y="2485" width="3.1433%" height="15" fill="rgb(208,109,11)" fg:x="105702861" fg:w="7363860"/><text x="45.3693%" y="2495.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7,363,860 samples, 3.14%)</title><rect x="45.1193%" y="2469" width="3.1433%" height="15" fill="rgb(216,190,48)" fg:x="105702861" fg:w="7363860"/><text x="45.3693%" y="2479.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,363,860 samples, 3.14%)</title><rect x="45.1193%" y="2453" width="3.1433%" height="15" fill="rgb(251,171,36)" fg:x="105702861" fg:w="7363860"/><text x="45.3693%" y="2463.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (7,363,860 samples, 3.14%)</title><rect x="45.1193%" y="2437" width="3.1433%" height="15" fill="rgb(230,62,22)" fg:x="105702861" fg:w="7363860"/><text x="45.3693%" y="2447.50">all..</text></g><g><title>alloc::alloc::alloc (7,363,860 samples, 3.14%)</title><rect x="45.1193%" y="2421" width="3.1433%" height="15" fill="rgb(225,114,35)" fg:x="105702861" fg:w="7363860"/><text x="45.3693%" y="2431.50">all..</text></g><g><title>malloc (7,363,860 samples, 3.14%)</title><rect x="45.1193%" y="2405" width="3.1433%" height="15" fill="rgb(215,118,42)" fg:x="105702861" fg:w="7363860"/><text x="45.3693%" y="2415.50">mal..</text></g><g><title>[libc.so.6] (7,363,860 samples, 3.14%)</title><rect x="45.1193%" y="2389" width="3.1433%" height="15" fill="rgb(243,119,21)" fg:x="105702861" fg:w="7363860"/><text x="45.3693%" y="2399.50">[li..</text></g><g><title>[libc.so.6] (1,362,741 samples, 0.58%)</title><rect x="47.6809%" y="2373" width="0.5817%" height="15" fill="rgb(252,177,53)" fg:x="111703980" fg:w="1362741"/><text x="47.9309%" y="2383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (67,901,692 samples, 28.98%)</title><rect x="19.8583%" y="2581" width="28.9839%" height="15" fill="rgb(237,209,29)" fg:x="46522776" fg:w="67901692"/><text x="20.1083%" y="2591.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::c..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (67,901,692 samples, 28.98%)</title><rect x="19.8583%" y="2565" width="28.9839%" height="15" fill="rgb(212,65,23)" fg:x="46522776" fg:w="67901692"/><text x="20.1083%" y="2575.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (67,901,692 samples, 28.98%)</title><rect x="19.8583%" y="2549" width="28.9839%" height="15" fill="rgb(230,222,46)" fg:x="46522776" fg:w="67901692"/><text x="20.1083%" y="2559.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (67,901,692 samples, 28.98%)</title><rect x="19.8583%" y="2533" width="28.9839%" height="15" fill="rgb(215,135,32)" fg:x="46522776" fg:w="67901692"/><text x="20.1083%" y="2543.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,357,747 samples, 0.58%)</title><rect x="48.2626%" y="2517" width="0.5796%" height="15" fill="rgb(246,101,22)" fg:x="113066721" fg:w="1357747"/><text x="48.5126%" y="2527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,738,028 samples, 1.17%)</title><rect x="48.8421%" y="2501" width="1.1687%" height="15" fill="rgb(206,107,13)" fg:x="114424468" fg:w="2738028"/><text x="49.0921%" y="2511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,738,028 samples, 1.17%)</title><rect x="48.8421%" y="2485" width="1.1687%" height="15" fill="rgb(250,100,44)" fg:x="114424468" fg:w="2738028"/><text x="49.0921%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,738,028 samples, 1.17%)</title><rect x="48.8421%" y="2469" width="1.1687%" height="15" fill="rgb(231,147,38)" fg:x="114424468" fg:w="2738028"/><text x="49.0921%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,738,028 samples, 1.17%)</title><rect x="48.8421%" y="2453" width="1.1687%" height="15" fill="rgb(229,8,40)" fg:x="114424468" fg:w="2738028"/><text x="49.0921%" y="2463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,738,028 samples, 1.17%)</title><rect x="48.8421%" y="2437" width="1.1687%" height="15" fill="rgb(221,135,30)" fg:x="114424468" fg:w="2738028"/><text x="49.0921%" y="2447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,738,028 samples, 1.17%)</title><rect x="48.8421%" y="2421" width="1.1687%" height="15" fill="rgb(249,193,18)" fg:x="114424468" fg:w="2738028"/><text x="49.0921%" y="2431.50"></text></g><g><title>alloc::alloc::alloc (2,738,028 samples, 1.17%)</title><rect x="48.8421%" y="2405" width="1.1687%" height="15" fill="rgb(209,133,39)" fg:x="114424468" fg:w="2738028"/><text x="49.0921%" y="2415.50"></text></g><g><title>malloc (2,738,028 samples, 1.17%)</title><rect x="48.8421%" y="2389" width="1.1687%" height="15" fill="rgb(232,100,14)" fg:x="114424468" fg:w="2738028"/><text x="49.0921%" y="2399.50"></text></g><g><title>[libc.so.6] (2,738,028 samples, 1.17%)</title><rect x="48.8421%" y="2373" width="1.1687%" height="15" fill="rgb(224,185,1)" fg:x="114424468" fg:w="2738028"/><text x="49.0921%" y="2383.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,996,992 samples, 1.71%)</title><rect x="48.8421%" y="2581" width="1.7061%" height="15" fill="rgb(223,139,8)" fg:x="114424468" fg:w="3996992"/><text x="49.0921%" y="2591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,996,992 samples, 1.71%)</title><rect x="48.8421%" y="2565" width="1.7061%" height="15" fill="rgb(232,213,38)" fg:x="114424468" fg:w="3996992"/><text x="49.0921%" y="2575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,996,992 samples, 1.71%)</title><rect x="48.8421%" y="2549" width="1.7061%" height="15" fill="rgb(207,94,22)" fg:x="114424468" fg:w="3996992"/><text x="49.0921%" y="2559.50"></text></g><g><title>alloc::slice::hack::to_vec (3,996,992 samples, 1.71%)</title><rect x="48.8421%" y="2533" width="1.7061%" height="15" fill="rgb(219,183,54)" fg:x="114424468" fg:w="3996992"/><text x="49.0921%" y="2543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,996,992 samples, 1.71%)</title><rect x="48.8421%" y="2517" width="1.7061%" height="15" fill="rgb(216,185,54)" fg:x="114424468" fg:w="3996992"/><text x="49.0921%" y="2527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,258,964 samples, 0.54%)</title><rect x="50.0108%" y="2501" width="0.5374%" height="15" fill="rgb(254,217,39)" fg:x="117162496" fg:w="1258964"/><text x="50.2608%" y="2511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,258,964 samples, 0.54%)</title><rect x="50.0108%" y="2485" width="0.5374%" height="15" fill="rgb(240,178,23)" fg:x="117162496" fg:w="1258964"/><text x="50.2608%" y="2495.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,234,689 samples, 0.53%)</title><rect x="50.5482%" y="2485" width="0.5270%" height="15" fill="rgb(218,11,47)" fg:x="118421460" fg:w="1234689"/><text x="50.7982%" y="2495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (77,190,269 samples, 32.95%)</title><rect x="18.7331%" y="2661" width="32.9487%" height="15" fill="rgb(218,51,51)" fg:x="43886806" fg:w="77190269"/><text x="18.9831%" y="2671.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (77,190,269 samples, 32.95%)</title><rect x="18.7331%" y="2645" width="32.9487%" height="15" fill="rgb(238,126,27)" fg:x="43886806" fg:w="77190269"/><text x="18.9831%" y="2655.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (77,190,269 samples, 32.95%)</title><rect x="18.7331%" y="2629" width="32.9487%" height="15" fill="rgb(249,202,22)" fg:x="43886806" fg:w="77190269"/><text x="18.9831%" y="2639.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (77,190,269 samples, 32.95%)</title><rect x="18.7331%" y="2613" width="32.9487%" height="15" fill="rgb(254,195,49)" fg:x="43886806" fg:w="77190269"/><text x="18.9831%" y="2623.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (77,190,269 samples, 32.95%)</title><rect x="18.7331%" y="2597" width="32.9487%" height="15" fill="rgb(208,123,14)" fg:x="43886806" fg:w="77190269"/><text x="18.9831%" y="2607.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clo..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,655,615 samples, 1.13%)</title><rect x="50.5482%" y="2581" width="1.1335%" height="15" fill="rgb(224,200,8)" fg:x="118421460" fg:w="2655615"/><text x="50.7982%" y="2591.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,655,615 samples, 1.13%)</title><rect x="50.5482%" y="2565" width="1.1335%" height="15" fill="rgb(217,61,36)" fg:x="118421460" fg:w="2655615"/><text x="50.7982%" y="2575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,655,615 samples, 1.13%)</title><rect x="50.5482%" y="2549" width="1.1335%" height="15" fill="rgb(206,35,45)" fg:x="118421460" fg:w="2655615"/><text x="50.7982%" y="2559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,655,615 samples, 1.13%)</title><rect x="50.5482%" y="2533" width="1.1335%" height="15" fill="rgb(217,65,33)" fg:x="118421460" fg:w="2655615"/><text x="50.7982%" y="2543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,655,615 samples, 1.13%)</title><rect x="50.5482%" y="2517" width="1.1335%" height="15" fill="rgb(222,158,48)" fg:x="118421460" fg:w="2655615"/><text x="50.7982%" y="2527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,655,615 samples, 1.13%)</title><rect x="50.5482%" y="2501" width="1.1335%" height="15" fill="rgb(254,2,54)" fg:x="118421460" fg:w="2655615"/><text x="50.7982%" y="2511.50"></text></g><g><title>core::clone::Clone::clone (1,420,926 samples, 0.61%)</title><rect x="51.0753%" y="2485" width="0.6065%" height="15" fill="rgb(250,143,38)" fg:x="119656149" fg:w="1420926"/><text x="51.3253%" y="2495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,420,926 samples, 0.61%)</title><rect x="51.0753%" y="2469" width="0.6065%" height="15" fill="rgb(248,25,0)" fg:x="119656149" fg:w="1420926"/><text x="51.3253%" y="2479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,373,224 samples, 0.59%)</title><rect x="51.6818%" y="2661" width="0.5862%" height="15" fill="rgb(206,152,27)" fg:x="121077075" fg:w="1373224"/><text x="51.9318%" y="2671.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (79,842,722 samples, 34.08%)</title><rect x="18.7331%" y="2677" width="34.0809%" height="15" fill="rgb(240,77,30)" fg:x="43886806" fg:w="79842722"/><text x="18.9831%" y="2687.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,279,229 samples, 0.55%)</title><rect x="52.2679%" y="2661" width="0.5460%" height="15" fill="rgb(231,5,3)" fg:x="122450299" fg:w="1279229"/><text x="52.5179%" y="2671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,279,229 samples, 0.55%)</title><rect x="52.2679%" y="2645" width="0.5460%" height="15" fill="rgb(207,226,32)" fg:x="122450299" fg:w="1279229"/><text x="52.5179%" y="2655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,279,229 samples, 0.55%)</title><rect x="52.2679%" y="2629" width="0.5460%" height="15" fill="rgb(222,207,47)" fg:x="122450299" fg:w="1279229"/><text x="52.5179%" y="2639.50"></text></g><g><title>alloc::slice::hack::to_vec (1,279,229 samples, 0.55%)</title><rect x="52.2679%" y="2613" width="0.5460%" height="15" fill="rgb(229,115,45)" fg:x="122450299" fg:w="1279229"/><text x="52.5179%" y="2623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,279,229 samples, 0.55%)</title><rect x="52.2679%" y="2597" width="0.5460%" height="15" fill="rgb(224,191,6)" fg:x="122450299" fg:w="1279229"/><text x="52.5179%" y="2607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,279,229 samples, 0.55%)</title><rect x="52.2679%" y="2581" width="0.5460%" height="15" fill="rgb(230,227,24)" fg:x="122450299" fg:w="1279229"/><text x="52.5179%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,279,229 samples, 0.55%)</title><rect x="52.2679%" y="2565" width="0.5460%" height="15" fill="rgb(228,80,19)" fg:x="122450299" fg:w="1279229"/><text x="52.5179%" y="2575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,279,229 samples, 0.55%)</title><rect x="52.2679%" y="2549" width="0.5460%" height="15" fill="rgb(247,229,0)" fg:x="122450299" fg:w="1279229"/><text x="52.5179%" y="2559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,279,229 samples, 0.55%)</title><rect x="52.2679%" y="2533" width="0.5460%" height="15" fill="rgb(237,194,15)" fg:x="122450299" fg:w="1279229"/><text x="52.5179%" y="2543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,279,229 samples, 0.55%)</title><rect x="52.2679%" y="2517" width="0.5460%" height="15" fill="rgb(219,203,20)" fg:x="122450299" fg:w="1279229"/><text x="52.5179%" y="2527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,279,229 samples, 0.55%)</title><rect x="52.2679%" y="2501" width="0.5460%" height="15" fill="rgb(234,128,8)" fg:x="122450299" fg:w="1279229"/><text x="52.5179%" y="2511.50"></text></g><g><title>alloc::alloc::alloc (1,279,229 samples, 0.55%)</title><rect x="52.2679%" y="2485" width="0.5460%" height="15" fill="rgb(248,202,8)" fg:x="122450299" fg:w="1279229"/><text x="52.5179%" y="2495.50"></text></g><g><title>malloc (1,279,229 samples, 0.55%)</title><rect x="52.2679%" y="2469" width="0.5460%" height="15" fill="rgb(206,104,37)" fg:x="122450299" fg:w="1279229"/><text x="52.5179%" y="2479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (81,099,904 samples, 34.62%)</title><rect x="18.7331%" y="2741" width="34.6175%" height="15" fill="rgb(223,8,27)" fg:x="43886806" fg:w="81099904"/><text x="18.9831%" y="2751.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (81,099,904 samples, 34.62%)</title><rect x="18.7331%" y="2725" width="34.6175%" height="15" fill="rgb(216,217,28)" fg:x="43886806" fg:w="81099904"/><text x="18.9831%" y="2735.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (81,099,904 samples, 34.62%)</title><rect x="18.7331%" y="2709" width="34.6175%" height="15" fill="rgb(249,199,1)" fg:x="43886806" fg:w="81099904"/><text x="18.9831%" y="2719.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (81,099,904 samples, 34.62%)</title><rect x="18.7331%" y="2693" width="34.6175%" height="15" fill="rgb(240,85,17)" fg:x="43886806" fg:w="81099904"/><text x="18.9831%" y="2703.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,257,182 samples, 0.54%)</title><rect x="52.8140%" y="2677" width="0.5366%" height="15" fill="rgb(206,108,45)" fg:x="123729528" fg:w="1257182"/><text x="53.0640%" y="2687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (83,705,752 samples, 35.73%)</title><rect x="18.1965%" y="2821" width="35.7298%" height="15" fill="rgb(245,210,41)" fg:x="42629693" fg:w="83705752"/><text x="18.4465%" y="2831.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (83,705,752 samples, 35.73%)</title><rect x="18.1965%" y="2805" width="35.7298%" height="15" fill="rgb(206,13,37)" fg:x="42629693" fg:w="83705752"/><text x="18.4465%" y="2815.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (83,705,752 samples, 35.73%)</title><rect x="18.1965%" y="2789" width="35.7298%" height="15" fill="rgb(250,61,18)" fg:x="42629693" fg:w="83705752"/><text x="18.4465%" y="2799.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (83,705,752 samples, 35.73%)</title><rect x="18.1965%" y="2773" width="35.7298%" height="15" fill="rgb(235,172,48)" fg:x="42629693" fg:w="83705752"/><text x="18.4465%" y="2783.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (83,705,752 samples, 35.73%)</title><rect x="18.1965%" y="2757" width="35.7298%" height="15" fill="rgb(249,201,17)" fg:x="42629693" fg:w="83705752"/><text x="18.4465%" y="2767.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,348,735 samples, 0.58%)</title><rect x="53.3506%" y="2741" width="0.5757%" height="15" fill="rgb(219,208,6)" fg:x="124986710" fg:w="1348735"/><text x="53.6006%" y="2751.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,348,735 samples, 0.58%)</title><rect x="53.3506%" y="2725" width="0.5757%" height="15" fill="rgb(248,31,23)" fg:x="124986710" fg:w="1348735"/><text x="53.6006%" y="2735.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,348,735 samples, 0.58%)</title><rect x="53.3506%" y="2709" width="0.5757%" height="15" fill="rgb(245,15,42)" fg:x="124986710" fg:w="1348735"/><text x="53.6006%" y="2719.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="3077" width="36.8167%" height="15" fill="rgb(222,217,39)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="3087.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::cl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="3061" width="36.8167%" height="15" fill="rgb(210,219,27)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="3071.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="3045" width="36.8167%" height="15" fill="rgb(252,166,36)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="3055.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="3029" width="36.8167%" height="15" fill="rgb(245,132,34)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="3039.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="3013" width="36.8167%" height="15" fill="rgb(236,54,3)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="3023.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="2997" width="36.8167%" height="15" fill="rgb(241,173,43)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="3007.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::cl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="2981" width="36.8167%" height="15" fill="rgb(215,190,9)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="2991.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="2965" width="36.8167%" height="15" fill="rgb(242,101,16)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="2975.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="2949" width="36.8167%" height="15" fill="rgb(223,190,21)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="2959.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="2933" width="36.8167%" height="15" fill="rgb(215,228,25)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="2943.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="2917" width="36.8167%" height="15" fill="rgb(225,36,22)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="2927.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::cl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="2901" width="36.8167%" height="15" fill="rgb(251,106,46)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="2911.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="2885" width="36.8167%" height="15" fill="rgb(208,90,1)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="2895.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="2869" width="36.8167%" height="15" fill="rgb(243,10,4)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="2879.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="2853" width="36.8167%" height="15" fill="rgb(212,137,27)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="2863.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (86,252,090 samples, 36.82%)</title><rect x="18.1965%" y="2837" width="36.8167%" height="15" fill="rgb(231,220,49)" fg:x="42629693" fg:w="86252090"/><text x="18.4465%" y="2847.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::cl..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,546,338 samples, 1.09%)</title><rect x="53.9263%" y="2821" width="1.0869%" height="15" fill="rgb(237,96,20)" fg:x="126335445" fg:w="2546338"/><text x="54.1763%" y="2831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,546,338 samples, 1.09%)</title><rect x="53.9263%" y="2805" width="1.0869%" height="15" fill="rgb(239,229,30)" fg:x="126335445" fg:w="2546338"/><text x="54.1763%" y="2815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,546,338 samples, 1.09%)</title><rect x="53.9263%" y="2789" width="1.0869%" height="15" fill="rgb(219,65,33)" fg:x="126335445" fg:w="2546338"/><text x="54.1763%" y="2799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,546,338 samples, 1.09%)</title><rect x="53.9263%" y="2773" width="1.0869%" height="15" fill="rgb(243,134,7)" fg:x="126335445" fg:w="2546338"/><text x="54.1763%" y="2783.50"></text></g><g><title>alloc::slice::hack::to_vec (2,546,338 samples, 1.09%)</title><rect x="53.9263%" y="2757" width="1.0869%" height="15" fill="rgb(216,177,54)" fg:x="126335445" fg:w="2546338"/><text x="54.1763%" y="2767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,546,338 samples, 1.09%)</title><rect x="53.9263%" y="2741" width="1.0869%" height="15" fill="rgb(211,160,20)" fg:x="126335445" fg:w="2546338"/><text x="54.1763%" y="2751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,546,338 samples, 1.09%)</title><rect x="53.9263%" y="2725" width="1.0869%" height="15" fill="rgb(239,85,39)" fg:x="126335445" fg:w="2546338"/><text x="54.1763%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,546,338 samples, 1.09%)</title><rect x="53.9263%" y="2709" width="1.0869%" height="15" fill="rgb(232,125,22)" fg:x="126335445" fg:w="2546338"/><text x="54.1763%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,546,338 samples, 1.09%)</title><rect x="53.9263%" y="2693" width="1.0869%" height="15" fill="rgb(244,57,34)" fg:x="126335445" fg:w="2546338"/><text x="54.1763%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,546,338 samples, 1.09%)</title><rect x="53.9263%" y="2677" width="1.0869%" height="15" fill="rgb(214,203,32)" fg:x="126335445" fg:w="2546338"/><text x="54.1763%" y="2687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,546,338 samples, 1.09%)</title><rect x="53.9263%" y="2661" width="1.0869%" height="15" fill="rgb(207,58,43)" fg:x="126335445" fg:w="2546338"/><text x="54.1763%" y="2671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,546,338 samples, 1.09%)</title><rect x="53.9263%" y="2645" width="1.0869%" height="15" fill="rgb(215,193,15)" fg:x="126335445" fg:w="2546338"/><text x="54.1763%" y="2655.50"></text></g><g><title>alloc::alloc::alloc (2,546,338 samples, 1.09%)</title><rect x="53.9263%" y="2629" width="1.0869%" height="15" fill="rgb(232,15,44)" fg:x="126335445" fg:w="2546338"/><text x="54.1763%" y="2639.50"></text></g><g><title>malloc (2,546,338 samples, 1.09%)</title><rect x="53.9263%" y="2613" width="1.0869%" height="15" fill="rgb(212,3,48)" fg:x="126335445" fg:w="2546338"/><text x="54.1763%" y="2623.50"></text></g><g><title>[libc.so.6] (2,546,338 samples, 1.09%)</title><rect x="53.9263%" y="2597" width="1.0869%" height="15" fill="rgb(218,128,7)" fg:x="126335445" fg:w="2546338"/><text x="54.1763%" y="2607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (873,917 samples, 0.37%)</title><rect x="55.0132%" y="3045" width="0.3730%" height="15" fill="rgb(226,216,39)" fg:x="128881783" fg:w="873917"/><text x="55.2632%" y="3055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (873,917 samples, 0.37%)</title><rect x="55.0132%" y="3029" width="0.3730%" height="15" fill="rgb(243,47,51)" fg:x="128881783" fg:w="873917"/><text x="55.2632%" y="3039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (873,917 samples, 0.37%)</title><rect x="55.0132%" y="3013" width="0.3730%" height="15" fill="rgb(241,183,40)" fg:x="128881783" fg:w="873917"/><text x="55.2632%" y="3023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (873,917 samples, 0.37%)</title><rect x="55.0132%" y="2997" width="0.3730%" height="15" fill="rgb(231,217,32)" fg:x="128881783" fg:w="873917"/><text x="55.2632%" y="3007.50"></text></g><g><title>alloc::raw_vec::finish_grow (873,917 samples, 0.37%)</title><rect x="55.0132%" y="2981" width="0.3730%" height="15" fill="rgb(229,61,38)" fg:x="128881783" fg:w="873917"/><text x="55.2632%" y="2991.50"></text></g><g><title>malloc (873,917 samples, 0.37%)</title><rect x="55.0132%" y="2965" width="0.3730%" height="15" fill="rgb(225,210,5)" fg:x="128881783" fg:w="873917"/><text x="55.2632%" y="2975.50"></text></g><g><title>[libc.so.6] (1,266,223 samples, 0.54%)</title><rect x="55.3863%" y="3029" width="0.5405%" height="15" fill="rgb(231,79,45)" fg:x="129755700" fg:w="1266223"/><text x="55.6363%" y="3039.50"></text></g><g><title>benchmark::json_to_html_node (1,312,071 samples, 0.56%)</title><rect x="55.9267%" y="2997" width="0.5601%" height="15" fill="rgb(224,100,7)" fg:x="131021923" fg:w="1312071"/><text x="56.1767%" y="3007.50"></text></g><g><title>benchmark::json_to_html_node (1,312,071 samples, 0.56%)</title><rect x="55.9267%" y="2981" width="0.5601%" height="15" fill="rgb(241,198,18)" fg:x="131021923" fg:w="1312071"/><text x="56.1767%" y="2991.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,312,071 samples, 0.56%)</title><rect x="55.9267%" y="2965" width="0.5601%" height="15" fill="rgb(252,97,53)" fg:x="131021923" fg:w="1312071"/><text x="56.1767%" y="2975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,312,071 samples, 0.56%)</title><rect x="55.9267%" y="2949" width="0.5601%" height="15" fill="rgb(220,88,7)" fg:x="131021923" fg:w="1312071"/><text x="56.1767%" y="2959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,312,071 samples, 0.56%)</title><rect x="55.9267%" y="2933" width="0.5601%" height="15" fill="rgb(213,176,14)" fg:x="131021923" fg:w="1312071"/><text x="56.1767%" y="2943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,312,071 samples, 0.56%)</title><rect x="55.9267%" y="2917" width="0.5601%" height="15" fill="rgb(246,73,7)" fg:x="131021923" fg:w="1312071"/><text x="56.1767%" y="2927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,312,071 samples, 0.56%)</title><rect x="55.9267%" y="2901" width="0.5601%" height="15" fill="rgb(245,64,36)" fg:x="131021923" fg:w="1312071"/><text x="56.1767%" y="2911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2997" width="0.5790%" height="15" fill="rgb(245,80,10)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="3007.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2981" width="0.5790%" height="15" fill="rgb(232,107,50)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2991.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2965" width="0.5790%" height="15" fill="rgb(253,3,0)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2975.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2949" width="0.5790%" height="15" fill="rgb(212,99,53)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2959.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2933" width="0.5790%" height="15" fill="rgb(249,111,54)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2917" width="0.5790%" height="15" fill="rgb(249,55,30)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2901" width="0.5790%" height="15" fill="rgb(237,47,42)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2885" width="0.5790%" height="15" fill="rgb(211,20,18)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2869" width="0.5790%" height="15" fill="rgb(231,203,46)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2879.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2853" width="0.5790%" height="15" fill="rgb(237,142,3)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2863.50"></text></g><g><title>benchmark::json_to_html_node::_{{closure}} (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2837" width="0.5790%" height="15" fill="rgb(241,107,1)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2847.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2821" width="0.5790%" height="15" fill="rgb(229,83,13)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2831.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2805" width="0.5790%" height="15" fill="rgb(241,91,40)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2789" width="0.5790%" height="15" fill="rgb(225,3,45)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2773" width="0.5790%" height="15" fill="rgb(244,223,14)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2783.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2757" width="0.5790%" height="15" fill="rgb(224,124,37)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2741" width="0.5790%" height="15" fill="rgb(251,171,30)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2725" width="0.5790%" height="15" fill="rgb(236,46,54)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2735.50"></text></g><g><title>alloc::slice::hack::to_vec (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2709" width="0.5790%" height="15" fill="rgb(245,213,5)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2693" width="0.5790%" height="15" fill="rgb(230,144,27)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2677" width="0.5790%" height="15" fill="rgb(220,86,6)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2661" width="0.5790%" height="15" fill="rgb(240,20,13)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2645" width="0.5790%" height="15" fill="rgb(217,89,34)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2629" width="0.5790%" height="15" fill="rgb(229,13,5)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2613" width="0.5790%" height="15" fill="rgb(244,67,35)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2597" width="0.5790%" height="15" fill="rgb(221,40,2)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2607.50"></text></g><g><title>alloc::alloc::alloc (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2581" width="0.5790%" height="15" fill="rgb(237,157,21)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2591.50"></text></g><g><title>malloc (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2565" width="0.5790%" height="15" fill="rgb(222,94,11)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2575.50"></text></g><g><title>[libc.so.6] (1,356,518 samples, 0.58%)</title><rect x="56.4868%" y="2549" width="0.5790%" height="15" fill="rgb(249,113,6)" fg:x="132333994" fg:w="1356518"/><text x="56.7368%" y="2559.50"></text></g><g><title>benchmark::json_to_html_node (3,678,778 samples, 1.57%)</title><rect x="55.9267%" y="3013" width="1.5703%" height="15" fill="rgb(238,137,36)" fg:x="131021923" fg:w="3678778"/><text x="56.1767%" y="3023.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,010,189 samples, 0.43%)</title><rect x="57.0658%" y="2997" width="0.4312%" height="15" fill="rgb(210,102,26)" fg:x="133690512" fg:w="1010189"/><text x="57.3158%" y="3007.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,010,189 samples, 0.43%)</title><rect x="57.0658%" y="2981" width="0.4312%" height="15" fill="rgb(218,30,30)" fg:x="133690512" fg:w="1010189"/><text x="57.3158%" y="2991.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,010,189 samples, 0.43%)</title><rect x="57.0658%" y="2965" width="0.4312%" height="15" fill="rgb(214,67,26)" fg:x="133690512" fg:w="1010189"/><text x="57.3158%" y="2975.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,010,189 samples, 0.43%)</title><rect x="57.0658%" y="2949" width="0.4312%" height="15" fill="rgb(251,9,53)" fg:x="133690512" fg:w="1010189"/><text x="57.3158%" y="2959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,010,189 samples, 0.43%)</title><rect x="57.0658%" y="2933" width="0.4312%" height="15" fill="rgb(228,204,25)" fg:x="133690512" fg:w="1010189"/><text x="57.3158%" y="2943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,010,189 samples, 0.43%)</title><rect x="57.0658%" y="2917" width="0.4312%" height="15" fill="rgb(207,153,8)" fg:x="133690512" fg:w="1010189"/><text x="57.3158%" y="2927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,010,189 samples, 0.43%)</title><rect x="57.0658%" y="2901" width="0.4312%" height="15" fill="rgb(242,9,16)" fg:x="133690512" fg:w="1010189"/><text x="57.3158%" y="2911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,010,189 samples, 0.43%)</title><rect x="57.0658%" y="2885" width="0.4312%" height="15" fill="rgb(217,211,10)" fg:x="133690512" fg:w="1010189"/><text x="57.3158%" y="2895.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,010,189 samples, 0.43%)</title><rect x="57.0658%" y="2869" width="0.4312%" height="15" fill="rgb(219,228,52)" fg:x="133690512" fg:w="1010189"/><text x="57.3158%" y="2879.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,010,189 samples, 0.43%)</title><rect x="57.0658%" y="2853" width="0.4312%" height="15" fill="rgb(231,92,29)" fg:x="133690512" fg:w="1010189"/><text x="57.3158%" y="2863.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,010,189 samples, 0.43%)</title><rect x="57.0658%" y="2837" width="0.4312%" height="15" fill="rgb(232,8,23)" fg:x="133690512" fg:w="1010189"/><text x="57.3158%" y="2847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (1,010,189 samples, 0.43%)</title><rect x="57.0658%" y="2821" width="0.4312%" height="15" fill="rgb(216,211,34)" fg:x="133690512" fg:w="1010189"/><text x="57.3158%" y="2831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="3013" width="0.5418%" height="15" fill="rgb(236,151,0)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="3023.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2997" width="0.5418%" height="15" fill="rgb(209,168,3)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="3007.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2981" width="0.5418%" height="15" fill="rgb(208,129,28)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2991.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2965" width="0.5418%" height="15" fill="rgb(229,78,22)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2975.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2949" width="0.5418%" height="15" fill="rgb(228,187,13)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2933" width="0.5418%" height="15" fill="rgb(240,119,24)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2917" width="0.5418%" height="15" fill="rgb(209,194,42)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2901" width="0.5418%" height="15" fill="rgb(247,200,46)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2885" width="0.5418%" height="15" fill="rgb(218,76,16)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2895.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2869" width="0.5418%" height="15" fill="rgb(225,21,48)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2879.50"></text></g><g><title>benchmark::json_to_html_node::_{{closure}} (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2853" width="0.5418%" height="15" fill="rgb(239,223,50)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2863.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2837" width="0.5418%" height="15" fill="rgb(244,45,21)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2847.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2821" width="0.5418%" height="15" fill="rgb(232,33,43)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2831.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2805" width="0.5418%" height="15" fill="rgb(209,8,3)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2815.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2789" width="0.5418%" height="15" fill="rgb(214,25,53)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2799.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2773" width="0.5418%" height="15" fill="rgb(254,186,54)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2757" width="0.5418%" height="15" fill="rgb(208,174,49)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2741" width="0.5418%" height="15" fill="rgb(233,191,51)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2751.50"></text></g><g><title>alloc::slice::hack::to_vec (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2725" width="0.5418%" height="15" fill="rgb(222,134,10)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2709" width="0.5418%" height="15" fill="rgb(230,226,20)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2693" width="0.5418%" height="15" fill="rgb(251,111,25)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2677" width="0.5418%" height="15" fill="rgb(224,40,46)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2661" width="0.5418%" height="15" fill="rgb(236,108,47)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2645" width="0.5418%" height="15" fill="rgb(234,93,0)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2629" width="0.5418%" height="15" fill="rgb(224,213,32)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2613" width="0.5418%" height="15" fill="rgb(251,11,48)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2623.50"></text></g><g><title>alloc::alloc::alloc (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2597" width="0.5418%" height="15" fill="rgb(236,173,5)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2607.50"></text></g><g><title>malloc (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2581" width="0.5418%" height="15" fill="rgb(230,95,12)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2591.50"></text></g><g><title>[libc.so.6] (1,269,281 samples, 0.54%)</title><rect x="57.4970%" y="2565" width="0.5418%" height="15" fill="rgb(232,209,1)" fg:x="134700701" fg:w="1269281"/><text x="57.7470%" y="2575.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (924,149 samples, 0.39%)</title><rect x="58.0388%" y="3013" width="0.3945%" height="15" fill="rgb(232,6,1)" fg:x="135969982" fg:w="924149"/><text x="58.2888%" y="3023.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (924,149 samples, 0.39%)</title><rect x="58.0388%" y="2997" width="0.3945%" height="15" fill="rgb(210,224,50)" fg:x="135969982" fg:w="924149"/><text x="58.2888%" y="3007.50"></text></g><g><title>benchmark::json_to_html_node (7,194,872 samples, 3.07%)</title><rect x="55.9267%" y="3029" width="3.0711%" height="15" fill="rgb(228,127,35)" fg:x="131021923" fg:w="7194872"/><text x="56.1767%" y="3039.50">ben..</text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,322,664 samples, 0.56%)</title><rect x="58.4333%" y="3013" width="0.5646%" height="15" fill="rgb(245,102,45)" fg:x="136894131" fg:w="1322664"/><text x="58.6833%" y="3023.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,322,664 samples, 0.56%)</title><rect x="58.4333%" y="2997" width="0.5646%" height="15" fill="rgb(214,1,49)" fg:x="136894131" fg:w="1322664"/><text x="58.6833%" y="3007.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,322,664 samples, 0.56%)</title><rect x="58.4333%" y="2981" width="0.5646%" height="15" fill="rgb(226,163,40)" fg:x="136894131" fg:w="1322664"/><text x="58.6833%" y="2991.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,322,664 samples, 0.56%)</title><rect x="58.4333%" y="2965" width="0.5646%" height="15" fill="rgb(239,212,28)" fg:x="136894131" fg:w="1322664"/><text x="58.6833%" y="2975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,322,664 samples, 0.56%)</title><rect x="58.4333%" y="2949" width="0.5646%" height="15" fill="rgb(220,20,13)" fg:x="136894131" fg:w="1322664"/><text x="58.6833%" y="2959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,322,664 samples, 0.56%)</title><rect x="58.4333%" y="2933" width="0.5646%" height="15" fill="rgb(210,164,35)" fg:x="136894131" fg:w="1322664"/><text x="58.6833%" y="2943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,322,664 samples, 0.56%)</title><rect x="58.4333%" y="2917" width="0.5646%" height="15" fill="rgb(248,109,41)" fg:x="136894131" fg:w="1322664"/><text x="58.6833%" y="2927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,322,664 samples, 0.56%)</title><rect x="58.4333%" y="2901" width="0.5646%" height="15" fill="rgb(238,23,50)" fg:x="136894131" fg:w="1322664"/><text x="58.6833%" y="2911.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,322,664 samples, 0.56%)</title><rect x="58.4333%" y="2885" width="0.5646%" height="15" fill="rgb(211,48,49)" fg:x="136894131" fg:w="1322664"/><text x="58.6833%" y="2895.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,322,664 samples, 0.56%)</title><rect x="58.4333%" y="2869" width="0.5646%" height="15" fill="rgb(223,36,21)" fg:x="136894131" fg:w="1322664"/><text x="58.6833%" y="2879.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,322,664 samples, 0.56%)</title><rect x="58.4333%" y="2853" width="0.5646%" height="15" fill="rgb(207,123,46)" fg:x="136894131" fg:w="1322664"/><text x="58.6833%" y="2863.50"></text></g><g><title>[libc.so.6] (1,322,664 samples, 0.56%)</title><rect x="58.4333%" y="2837" width="0.5646%" height="15" fill="rgb(240,218,32)" fg:x="136894131" fg:w="1322664"/><text x="58.6833%" y="2847.50"></text></g><g><title>benchmark::json_to_html_node (10,706,155 samples, 4.57%)</title><rect x="55.0132%" y="3061" width="4.5699%" height="15" fill="rgb(252,5,43)" fg:x="128881783" fg:w="10706155"/><text x="55.2632%" y="3071.50">bench..</text></g><g><title>benchmark::json_to_html_node (9,832,238 samples, 4.20%)</title><rect x="55.3863%" y="3045" width="4.1969%" height="15" fill="rgb(252,84,19)" fg:x="129755700" fg:w="9832238"/><text x="55.6363%" y="3055.50">bench..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="3029" width="0.5853%" height="15" fill="rgb(243,152,39)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="3039.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="3013" width="0.5853%" height="15" fill="rgb(234,160,15)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="3023.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2997" width="0.5853%" height="15" fill="rgb(237,34,20)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="3007.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2981" width="0.5853%" height="15" fill="rgb(229,97,13)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2991.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2965" width="0.5853%" height="15" fill="rgb(234,71,50)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2949" width="0.5853%" height="15" fill="rgb(253,155,4)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2933" width="0.5853%" height="15" fill="rgb(222,185,37)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2917" width="0.5853%" height="15" fill="rgb(251,177,13)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2901" width="0.5853%" height="15" fill="rgb(250,179,40)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2911.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2885" width="0.5853%" height="15" fill="rgb(242,44,2)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2895.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2869" width="0.5853%" height="15" fill="rgb(216,177,13)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2853" width="0.5853%" height="15" fill="rgb(216,106,43)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2863.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2837" width="0.5853%" height="15" fill="rgb(216,183,2)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2821" width="0.5853%" height="15" fill="rgb(249,75,3)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2831.50"></text></g><g><title>hashbrown::map::make_hash (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2805" width="0.5853%" height="15" fill="rgb(219,67,39)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2789" width="0.5853%" height="15" fill="rgb(253,228,2)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2773" width="0.5853%" height="15" fill="rgb(235,138,27)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2783.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2757" width="0.5853%" height="15" fill="rgb(236,97,51)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2741" width="0.5853%" height="15" fill="rgb(240,80,30)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2751.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2725" width="0.5853%" height="15" fill="rgb(230,178,19)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2709" width="0.5853%" height="15" fill="rgb(210,190,27)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2693" width="0.5853%" height="15" fill="rgb(222,107,31)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2677" width="0.5853%" height="15" fill="rgb(216,127,34)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,371,143 samples, 0.59%)</title><rect x="58.9979%" y="2661" width="0.5853%" height="15" fill="rgb(234,116,52)" fg:x="138216795" fg:w="1371143"/><text x="59.2479%" y="2671.50"></text></g><g><title>benchmark::apply_frame_modifications (12,066,864 samples, 5.15%)</title><rect x="55.0132%" y="3077" width="5.1507%" height="15" fill="rgb(222,124,15)" fg:x="128881783" fg:w="12066864"/><text x="55.2632%" y="3087.50">benchm..</text></g><g><title>serde_json::value::Value::get (1,360,709 samples, 0.58%)</title><rect x="59.5831%" y="3061" width="0.5808%" height="15" fill="rgb(231,179,28)" fg:x="139587938" fg:w="1360709"/><text x="59.8331%" y="3071.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,360,709 samples, 0.58%)</title><rect x="59.5831%" y="3045" width="0.5808%" height="15" fill="rgb(226,93,45)" fg:x="139587938" fg:w="1360709"/><text x="59.8331%" y="3055.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,360,709 samples, 0.58%)</title><rect x="59.5831%" y="3029" width="0.5808%" height="15" fill="rgb(215,8,51)" fg:x="139587938" fg:w="1360709"/><text x="59.8331%" y="3039.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,360,709 samples, 0.58%)</title><rect x="59.5831%" y="3013" width="0.5808%" height="15" fill="rgb(223,106,5)" fg:x="139587938" fg:w="1360709"/><text x="59.8331%" y="3023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,360,709 samples, 0.58%)</title><rect x="59.5831%" y="2997" width="0.5808%" height="15" fill="rgb(250,191,5)" fg:x="139587938" fg:w="1360709"/><text x="59.8331%" y="3007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,360,709 samples, 0.58%)</title><rect x="59.5831%" y="2981" width="0.5808%" height="15" fill="rgb(242,132,44)" fg:x="139587938" fg:w="1360709"/><text x="59.8331%" y="2991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,360,709 samples, 0.58%)</title><rect x="59.5831%" y="2965" width="0.5808%" height="15" fill="rgb(251,152,29)" fg:x="139587938" fg:w="1360709"/><text x="59.8331%" y="2975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,360,709 samples, 0.58%)</title><rect x="59.5831%" y="2949" width="0.5808%" height="15" fill="rgb(218,179,5)" fg:x="139587938" fg:w="1360709"/><text x="59.8331%" y="2959.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,272,338 samples, 0.54%)</title><rect x="60.1640%" y="2965" width="0.5431%" height="15" fill="rgb(227,67,19)" fg:x="140948647" fg:w="1272338"/><text x="60.4140%" y="2975.50"></text></g><g><title>benchmark::clear_dirty_flags (2,584,837 samples, 1.10%)</title><rect x="60.1640%" y="3077" width="1.1033%" height="15" fill="rgb(233,119,31)" fg:x="140948647" fg:w="2584837"/><text x="60.4140%" y="3087.50"></text></g><g><title>benchmark::clear_dirty_flags (2,584,837 samples, 1.10%)</title><rect x="60.1640%" y="3061" width="1.1033%" height="15" fill="rgb(241,120,22)" fg:x="140948647" fg:w="2584837"/><text x="60.4140%" y="3071.50"></text></g><g><title>benchmark::clear_dirty_flags (2,584,837 samples, 1.10%)</title><rect x="60.1640%" y="3045" width="1.1033%" height="15" fill="rgb(224,102,30)" fg:x="140948647" fg:w="2584837"/><text x="60.4140%" y="3055.50"></text></g><g><title>benchmark::clear_dirty_flags (2,584,837 samples, 1.10%)</title><rect x="60.1640%" y="3029" width="1.1033%" height="15" fill="rgb(210,164,37)" fg:x="140948647" fg:w="2584837"/><text x="60.4140%" y="3039.50"></text></g><g><title>benchmark::clear_dirty_flags (2,584,837 samples, 1.10%)</title><rect x="60.1640%" y="3013" width="1.1033%" height="15" fill="rgb(226,191,16)" fg:x="140948647" fg:w="2584837"/><text x="60.4140%" y="3023.50"></text></g><g><title>benchmark::clear_dirty_flags (2,584,837 samples, 1.10%)</title><rect x="60.1640%" y="2997" width="1.1033%" height="15" fill="rgb(214,40,45)" fg:x="140948647" fg:w="2584837"/><text x="60.4140%" y="3007.50"></text></g><g><title>benchmark::clear_dirty_flags (2,584,837 samples, 1.10%)</title><rect x="60.1640%" y="2981" width="1.1033%" height="15" fill="rgb(244,29,26)" fg:x="140948647" fg:w="2584837"/><text x="60.4140%" y="2991.50"></text></g><g><title>benchmark::clear_dirty_flags (1,312,499 samples, 0.56%)</title><rect x="60.7071%" y="2965" width="0.5602%" height="15" fill="rgb(216,16,5)" fg:x="142220985" fg:w="1312499"/><text x="60.9571%" y="2975.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,312,499 samples, 0.56%)</title><rect x="60.7071%" y="2949" width="0.5602%" height="15" fill="rgb(249,76,35)" fg:x="142220985" fg:w="1312499"/><text x="60.9571%" y="2959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,312,499 samples, 0.56%)</title><rect x="60.7071%" y="2933" width="0.5602%" height="15" fill="rgb(207,11,44)" fg:x="142220985" fg:w="1312499"/><text x="60.9571%" y="2943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,312,499 samples, 0.56%)</title><rect x="60.7071%" y="2917" width="0.5602%" height="15" fill="rgb(228,190,49)" fg:x="142220985" fg:w="1312499"/><text x="60.9571%" y="2927.50"></text></g><g><title>benchmark::count_nodes (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="3077" width="0.5469%" height="15" fill="rgb(214,173,12)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="3087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="3061" width="0.5469%" height="15" fill="rgb(218,26,35)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="3071.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="3045" width="0.5469%" height="15" fill="rgb(220,200,19)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="3055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="3029" width="0.5469%" height="15" fill="rgb(239,95,49)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="3039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="3013" width="0.5469%" height="15" fill="rgb(235,85,53)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="3023.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2997" width="0.5469%" height="15" fill="rgb(233,133,31)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="3007.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2981" width="0.5469%" height="15" fill="rgb(218,25,20)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2991.50"></text></g><g><title>benchmark::count_nodes (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2965" width="0.5469%" height="15" fill="rgb(252,210,38)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2949" width="0.5469%" height="15" fill="rgb(242,134,21)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2959.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2933" width="0.5469%" height="15" fill="rgb(213,28,48)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2917" width="0.5469%" height="15" fill="rgb(250,196,2)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2901" width="0.5469%" height="15" fill="rgb(227,5,17)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2911.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2885" width="0.5469%" height="15" fill="rgb(221,226,24)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2895.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2869" width="0.5469%" height="15" fill="rgb(211,5,48)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2879.50"></text></g><g><title>benchmark::count_nodes (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2853" width="0.5469%" height="15" fill="rgb(219,150,6)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2837" width="0.5469%" height="15" fill="rgb(251,46,16)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2847.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2821" width="0.5469%" height="15" fill="rgb(220,204,40)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2805" width="0.5469%" height="15" fill="rgb(211,85,2)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2789" width="0.5469%" height="15" fill="rgb(229,17,7)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2799.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2773" width="0.5469%" height="15" fill="rgb(239,72,28)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2783.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2757" width="0.5469%" height="15" fill="rgb(230,47,54)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2767.50"></text></g><g><title>benchmark::count_nodes (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2741" width="0.5469%" height="15" fill="rgb(214,50,8)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2725" width="0.5469%" height="15" fill="rgb(216,198,43)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2735.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2709" width="0.5469%" height="15" fill="rgb(234,20,35)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2693" width="0.5469%" height="15" fill="rgb(254,45,19)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2677" width="0.5469%" height="15" fill="rgb(219,14,44)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2687.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2661" width="0.5469%" height="15" fill="rgb(217,220,26)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2671.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2645" width="0.5469%" height="15" fill="rgb(213,158,28)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2655.50"></text></g><g><title>benchmark::count_nodes (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2629" width="0.5469%" height="15" fill="rgb(252,51,52)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2613" width="0.5469%" height="15" fill="rgb(246,89,16)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2623.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2597" width="0.5469%" height="15" fill="rgb(216,158,49)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2581" width="0.5469%" height="15" fill="rgb(236,107,19)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2565" width="0.5469%" height="15" fill="rgb(228,185,30)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2575.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2549" width="0.5469%" height="15" fill="rgb(246,134,8)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2559.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2533" width="0.5469%" height="15" fill="rgb(214,143,50)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2543.50"></text></g><g><title>benchmark::count_nodes (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2517" width="0.5469%" height="15" fill="rgb(228,75,8)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2501" width="0.5469%" height="15" fill="rgb(207,175,4)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,281,348 samples, 0.55%)</title><rect x="61.2673%" y="2485" width="0.5469%" height="15" fill="rgb(205,108,24)" fg:x="143533484" fg:w="1281348"/><text x="61.5173%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,062,352 samples, 0.45%)</title><rect x="62.3826%" y="2869" width="0.4535%" height="15" fill="rgb(244,120,49)" fg:x="146146435" fg:w="1062352"/><text x="62.6326%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,062,352 samples, 0.45%)</title><rect x="62.3826%" y="2853" width="0.4535%" height="15" fill="rgb(223,47,38)" fg:x="146146435" fg:w="1062352"/><text x="62.6326%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,062,352 samples, 0.45%)</title><rect x="62.3826%" y="2837" width="0.4535%" height="15" fill="rgb(229,179,11)" fg:x="146146435" fg:w="1062352"/><text x="62.6326%" y="2847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,062,352 samples, 0.45%)</title><rect x="62.3826%" y="2821" width="0.4535%" height="15" fill="rgb(231,122,1)" fg:x="146146435" fg:w="1062352"/><text x="62.6326%" y="2831.50"></text></g><g><title>__rdl_dealloc (1,201,593 samples, 0.51%)</title><rect x="62.8361%" y="2565" width="0.5129%" height="15" fill="rgb(245,119,9)" fg:x="147208787" fg:w="1201593"/><text x="63.0861%" y="2575.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,201,593 samples, 0.51%)</title><rect x="62.8361%" y="2549" width="0.5129%" height="15" fill="rgb(241,163,25)" fg:x="147208787" fg:w="1201593"/><text x="63.0861%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,899,379 samples, 1.66%)</title><rect x="62.8361%" y="2677" width="1.6645%" height="15" fill="rgb(217,214,3)" fg:x="147208787" fg:w="3899379"/><text x="63.0861%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,899,379 samples, 1.66%)</title><rect x="62.8361%" y="2661" width="1.6645%" height="15" fill="rgb(240,86,28)" fg:x="147208787" fg:w="3899379"/><text x="63.0861%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,899,379 samples, 1.66%)</title><rect x="62.8361%" y="2645" width="1.6645%" height="15" fill="rgb(215,47,9)" fg:x="147208787" fg:w="3899379"/><text x="63.0861%" y="2655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,899,379 samples, 1.66%)</title><rect x="62.8361%" y="2629" width="1.6645%" height="15" fill="rgb(252,25,45)" fg:x="147208787" fg:w="3899379"/><text x="63.0861%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,899,379 samples, 1.66%)</title><rect x="62.8361%" y="2613" width="1.6645%" height="15" fill="rgb(251,164,9)" fg:x="147208787" fg:w="3899379"/><text x="63.0861%" y="2623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,899,379 samples, 1.66%)</title><rect x="62.8361%" y="2597" width="1.6645%" height="15" fill="rgb(233,194,0)" fg:x="147208787" fg:w="3899379"/><text x="63.0861%" y="2607.50"></text></g><g><title>alloc::alloc::dealloc (3,899,379 samples, 1.66%)</title><rect x="62.8361%" y="2581" width="1.6645%" height="15" fill="rgb(249,111,24)" fg:x="147208787" fg:w="3899379"/><text x="63.0861%" y="2591.50"></text></g><g><title>cfree (2,697,786 samples, 1.15%)</title><rect x="63.3490%" y="2565" width="1.1516%" height="15" fill="rgb(250,223,3)" fg:x="148410380" fg:w="2697786"/><text x="63.5990%" y="2575.50"></text></g><g><title>[libc.so.6] (1,290,156 samples, 0.55%)</title><rect x="63.9499%" y="2549" width="0.5507%" height="15" fill="rgb(236,178,37)" fg:x="149818010" fg:w="1290156"/><text x="64.1999%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,357,187 samples, 0.58%)</title><rect x="64.5006%" y="2357" width="0.5793%" height="15" fill="rgb(241,158,50)" fg:x="151108166" fg:w="1357187"/><text x="64.7506%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,357,187 samples, 0.58%)</title><rect x="64.5006%" y="2341" width="0.5793%" height="15" fill="rgb(213,121,41)" fg:x="151108166" fg:w="1357187"/><text x="64.7506%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,357,187 samples, 0.58%)</title><rect x="64.5006%" y="2325" width="0.5793%" height="15" fill="rgb(240,92,3)" fg:x="151108166" fg:w="1357187"/><text x="64.7506%" y="2335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,357,187 samples, 0.58%)</title><rect x="64.5006%" y="2309" width="0.5793%" height="15" fill="rgb(205,123,3)" fg:x="151108166" fg:w="1357187"/><text x="64.7506%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,357,187 samples, 0.58%)</title><rect x="64.5006%" y="2293" width="0.5793%" height="15" fill="rgb(205,97,47)" fg:x="151108166" fg:w="1357187"/><text x="64.7506%" y="2303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,357,187 samples, 0.58%)</title><rect x="64.5006%" y="2277" width="0.5793%" height="15" fill="rgb(247,152,14)" fg:x="151108166" fg:w="1357187"/><text x="64.7506%" y="2287.50"></text></g><g><title>alloc::alloc::dealloc (1,357,187 samples, 0.58%)</title><rect x="64.5006%" y="2261" width="0.5793%" height="15" fill="rgb(248,195,53)" fg:x="151108166" fg:w="1357187"/><text x="64.7506%" y="2271.50"></text></g><g><title>cfree (1,357,187 samples, 0.58%)</title><rect x="64.5006%" y="2245" width="0.5793%" height="15" fill="rgb(226,201,16)" fg:x="151108166" fg:w="1357187"/><text x="64.7506%" y="2255.50"></text></g><g><title>[libc.so.6] (1,357,187 samples, 0.58%)</title><rect x="64.5006%" y="2229" width="0.5793%" height="15" fill="rgb(205,98,0)" fg:x="151108166" fg:w="1357187"/><text x="64.7506%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="2037" width="0.5170%" height="15" fill="rgb(214,191,48)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="2047.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="2021" width="0.5170%" height="15" fill="rgb(237,112,39)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="2005" width="0.5170%" height="15" fill="rgb(247,203,27)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1989" width="0.5170%" height="15" fill="rgb(235,124,28)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1973" width="0.5170%" height="15" fill="rgb(208,207,46)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1957" width="0.5170%" height="15" fill="rgb(234,176,4)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1941" width="0.5170%" height="15" fill="rgb(230,133,28)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1925" width="0.5170%" height="15" fill="rgb(211,137,40)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1909" width="0.5170%" height="15" fill="rgb(254,35,13)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1893" width="0.5170%" height="15" fill="rgb(225,49,51)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1877" width="0.5170%" height="15" fill="rgb(251,10,15)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1861" width="0.5170%" height="15" fill="rgb(228,207,15)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1845" width="0.5170%" height="15" fill="rgb(241,99,19)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1829" width="0.5170%" height="15" fill="rgb(207,104,49)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1839.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1813" width="0.5170%" height="15" fill="rgb(234,99,18)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1797" width="0.5170%" height="15" fill="rgb(213,191,49)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1781" width="0.5170%" height="15" fill="rgb(210,226,19)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1765" width="0.5170%" height="15" fill="rgb(229,97,18)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1775.50"></text></g><g><title>cfree (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1749" width="0.5170%" height="15" fill="rgb(211,167,15)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1759.50"></text></g><g><title>[libc.so.6] (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1733" width="0.5170%" height="15" fill="rgb(210,169,34)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1743.50"></text></g><g><title>[libc.so.6] (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1717" width="0.5170%" height="15" fill="rgb(241,121,31)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1727.50"></text></g><g><title>[libc.so.6] (1,211,203 samples, 0.52%)</title><rect x="65.0799%" y="1701" width="0.5170%" height="15" fill="rgb(232,40,11)" fg:x="152465353" fg:w="1211203"/><text x="65.3299%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,603,683 samples, 1.11%)</title><rect x="65.0799%" y="2085" width="1.1114%" height="15" fill="rgb(205,86,26)" fg:x="152465353" fg:w="2603683"/><text x="65.3299%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,603,683 samples, 1.11%)</title><rect x="65.0799%" y="2069" width="1.1114%" height="15" fill="rgb(231,126,28)" fg:x="152465353" fg:w="2603683"/><text x="65.3299%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,603,683 samples, 1.11%)</title><rect x="65.0799%" y="2053" width="1.1114%" height="15" fill="rgb(219,221,18)" fg:x="152465353" fg:w="2603683"/><text x="65.3299%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="2037" width="0.5944%" height="15" fill="rgb(211,40,0)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="2021" width="0.5944%" height="15" fill="rgb(239,85,43)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="2005" width="0.5944%" height="15" fill="rgb(231,55,21)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1989" width="0.5944%" height="15" fill="rgb(225,184,43)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1999.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1973" width="0.5944%" height="15" fill="rgb(251,158,41)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1983.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1957" width="0.5944%" height="15" fill="rgb(234,159,37)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1967.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1941" width="0.5944%" height="15" fill="rgb(216,204,22)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1951.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1925" width="0.5944%" height="15" fill="rgb(214,17,3)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1935.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1909" width="0.5944%" height="15" fill="rgb(212,111,17)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1893" width="0.5944%" height="15" fill="rgb(221,157,24)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1877" width="0.5944%" height="15" fill="rgb(252,16,13)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1861" width="0.5944%" height="15" fill="rgb(221,62,2)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1845" width="0.5944%" height="15" fill="rgb(247,87,22)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1855.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1829" width="0.5944%" height="15" fill="rgb(215,73,9)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1813" width="0.5944%" height="15" fill="rgb(207,175,33)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1797" width="0.5944%" height="15" fill="rgb(243,129,54)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1807.50"></text></g><g><title>alloc::alloc::dealloc (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1781" width="0.5944%" height="15" fill="rgb(227,119,45)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1791.50"></text></g><g><title>cfree (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1765" width="0.5944%" height="15" fill="rgb(205,109,36)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1775.50"></text></g><g><title>[libc.so.6] (1,392,480 samples, 0.59%)</title><rect x="65.5969%" y="1749" width="0.5944%" height="15" fill="rgb(205,6,39)" fg:x="153676556" fg:w="1392480"/><text x="65.8469%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,341,912 samples, 2.28%)</title><rect x="64.5006%" y="2421" width="2.2802%" height="15" fill="rgb(221,32,16)" fg:x="151108166" fg:w="5341912"/><text x="64.7506%" y="2431.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,341,912 samples, 2.28%)</title><rect x="64.5006%" y="2405" width="2.2802%" height="15" fill="rgb(228,144,50)" fg:x="151108166" fg:w="5341912"/><text x="64.7506%" y="2415.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,341,912 samples, 2.28%)</title><rect x="64.5006%" y="2389" width="2.2802%" height="15" fill="rgb(229,201,53)" fg:x="151108166" fg:w="5341912"/><text x="64.7506%" y="2399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,341,912 samples, 2.28%)</title><rect x="64.5006%" y="2373" width="2.2802%" height="15" fill="rgb(249,153,27)" fg:x="151108166" fg:w="5341912"/><text x="64.7506%" y="2383.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2357" width="1.7009%" height="15" fill="rgb(227,106,25)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2341" width="1.7009%" height="15" fill="rgb(230,65,29)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2325" width="1.7009%" height="15" fill="rgb(221,57,46)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2309" width="1.7009%" height="15" fill="rgb(229,161,17)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2293" width="1.7009%" height="15" fill="rgb(222,213,11)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2277" width="1.7009%" height="15" fill="rgb(235,35,13)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2261" width="1.7009%" height="15" fill="rgb(233,158,34)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2245" width="1.7009%" height="15" fill="rgb(215,151,48)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2229" width="1.7009%" height="15" fill="rgb(229,84,14)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2213" width="1.7009%" height="15" fill="rgb(229,68,14)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2197" width="1.7009%" height="15" fill="rgb(243,106,26)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2181" width="1.7009%" height="15" fill="rgb(206,45,38)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2165" width="1.7009%" height="15" fill="rgb(226,6,15)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2149" width="1.7009%" height="15" fill="rgb(232,22,54)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2133" width="1.7009%" height="15" fill="rgb(229,222,32)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2117" width="1.7009%" height="15" fill="rgb(228,62,29)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,984,725 samples, 1.70%)</title><rect x="65.0799%" y="2101" width="1.7009%" height="15" fill="rgb(251,103,34)" fg:x="152465353" fg:w="3984725"/><text x="65.3299%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,381,042 samples, 0.59%)</title><rect x="66.1913%" y="2085" width="0.5895%" height="15" fill="rgb(233,12,30)" fg:x="155069036" fg:w="1381042"/><text x="66.4413%" y="2095.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,381,042 samples, 0.59%)</title><rect x="66.1913%" y="2069" width="0.5895%" height="15" fill="rgb(238,52,0)" fg:x="155069036" fg:w="1381042"/><text x="66.4413%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,381,042 samples, 0.59%)</title><rect x="66.1913%" y="2053" width="0.5895%" height="15" fill="rgb(223,98,5)" fg:x="155069036" fg:w="1381042"/><text x="66.4413%" y="2063.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,381,042 samples, 0.59%)</title><rect x="66.1913%" y="2037" width="0.5895%" height="15" fill="rgb(228,75,37)" fg:x="155069036" fg:w="1381042"/><text x="66.4413%" y="2047.50"></text></g><g><title>alloc::alloc::dealloc (1,381,042 samples, 0.59%)</title><rect x="66.1913%" y="2021" width="0.5895%" height="15" fill="rgb(205,115,49)" fg:x="155069036" fg:w="1381042"/><text x="66.4413%" y="2031.50"></text></g><g><title>cfree (1,381,042 samples, 0.59%)</title><rect x="66.1913%" y="2005" width="0.5895%" height="15" fill="rgb(250,154,43)" fg:x="155069036" fg:w="1381042"/><text x="66.4413%" y="2015.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,377,646 samples, 0.59%)</title><rect x="66.7808%" y="2309" width="0.5880%" height="15" fill="rgb(226,43,29)" fg:x="156450078" fg:w="1377646"/><text x="67.0308%" y="2319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,377,646 samples, 0.59%)</title><rect x="66.7808%" y="2293" width="0.5880%" height="15" fill="rgb(249,228,39)" fg:x="156450078" fg:w="1377646"/><text x="67.0308%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,377,646 samples, 0.59%)</title><rect x="66.7808%" y="2277" width="0.5880%" height="15" fill="rgb(216,79,43)" fg:x="156450078" fg:w="1377646"/><text x="67.0308%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,377,646 samples, 0.59%)</title><rect x="66.7808%" y="2261" width="0.5880%" height="15" fill="rgb(228,95,12)" fg:x="156450078" fg:w="1377646"/><text x="67.0308%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,377,646 samples, 0.59%)</title><rect x="66.7808%" y="2245" width="0.5880%" height="15" fill="rgb(249,221,15)" fg:x="156450078" fg:w="1377646"/><text x="67.0308%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,377,646 samples, 0.59%)</title><rect x="66.7808%" y="2229" width="0.5880%" height="15" fill="rgb(233,34,13)" fg:x="156450078" fg:w="1377646"/><text x="67.0308%" y="2239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,377,646 samples, 0.59%)</title><rect x="66.7808%" y="2213" width="0.5880%" height="15" fill="rgb(214,103,39)" fg:x="156450078" fg:w="1377646"/><text x="67.0308%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,979,056 samples, 3.41%)</title><rect x="64.5006%" y="2485" width="3.4059%" height="15" fill="rgb(251,126,39)" fg:x="151108166" fg:w="7979056"/><text x="64.7506%" y="2495.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,979,056 samples, 3.41%)</title><rect x="64.5006%" y="2469" width="3.4059%" height="15" fill="rgb(214,216,36)" fg:x="151108166" fg:w="7979056"/><text x="64.7506%" y="2479.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,979,056 samples, 3.41%)</title><rect x="64.5006%" y="2453" width="3.4059%" height="15" fill="rgb(220,221,8)" fg:x="151108166" fg:w="7979056"/><text x="64.7506%" y="2463.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,979,056 samples, 3.41%)</title><rect x="64.5006%" y="2437" width="3.4059%" height="15" fill="rgb(240,216,3)" fg:x="151108166" fg:w="7979056"/><text x="64.7506%" y="2447.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,637,144 samples, 1.13%)</title><rect x="66.7808%" y="2421" width="1.1257%" height="15" fill="rgb(232,218,17)" fg:x="156450078" fg:w="2637144"/><text x="67.0308%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,637,144 samples, 1.13%)</title><rect x="66.7808%" y="2405" width="1.1257%" height="15" fill="rgb(229,163,45)" fg:x="156450078" fg:w="2637144"/><text x="67.0308%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,637,144 samples, 1.13%)</title><rect x="66.7808%" y="2389" width="1.1257%" height="15" fill="rgb(231,110,42)" fg:x="156450078" fg:w="2637144"/><text x="67.0308%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,637,144 samples, 1.13%)</title><rect x="66.7808%" y="2373" width="1.1257%" height="15" fill="rgb(208,170,48)" fg:x="156450078" fg:w="2637144"/><text x="67.0308%" y="2383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,637,144 samples, 1.13%)</title><rect x="66.7808%" y="2357" width="1.1257%" height="15" fill="rgb(239,116,25)" fg:x="156450078" fg:w="2637144"/><text x="67.0308%" y="2367.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,637,144 samples, 1.13%)</title><rect x="66.7808%" y="2341" width="1.1257%" height="15" fill="rgb(219,200,50)" fg:x="156450078" fg:w="2637144"/><text x="67.0308%" y="2351.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,637,144 samples, 1.13%)</title><rect x="66.7808%" y="2325" width="1.1257%" height="15" fill="rgb(245,200,0)" fg:x="156450078" fg:w="2637144"/><text x="67.0308%" y="2335.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,259,498 samples, 0.54%)</title><rect x="67.3688%" y="2309" width="0.5376%" height="15" fill="rgb(245,119,33)" fg:x="157827724" fg:w="1259498"/><text x="67.6188%" y="2319.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,259,498 samples, 0.54%)</title><rect x="67.3688%" y="2293" width="0.5376%" height="15" fill="rgb(231,125,12)" fg:x="157827724" fg:w="1259498"/><text x="67.6188%" y="2303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1,259,498 samples, 0.54%)</title><rect x="67.3688%" y="2277" width="0.5376%" height="15" fill="rgb(216,96,41)" fg:x="157827724" fg:w="1259498"/><text x="67.6188%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,252,116 samples, 0.53%)</title><rect x="67.9064%" y="2485" width="0.5345%" height="15" fill="rgb(248,43,45)" fg:x="159087222" fg:w="1252116"/><text x="68.1564%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,252,116 samples, 0.53%)</title><rect x="67.9064%" y="2469" width="0.5345%" height="15" fill="rgb(217,222,7)" fg:x="159087222" fg:w="1252116"/><text x="68.1564%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,252,116 samples, 0.53%)</title><rect x="67.9064%" y="2453" width="0.5345%" height="15" fill="rgb(233,28,6)" fg:x="159087222" fg:w="1252116"/><text x="68.1564%" y="2463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,252,116 samples, 0.53%)</title><rect x="67.9064%" y="2437" width="0.5345%" height="15" fill="rgb(231,218,15)" fg:x="159087222" fg:w="1252116"/><text x="68.1564%" y="2447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,252,116 samples, 0.53%)</title><rect x="67.9064%" y="2421" width="0.5345%" height="15" fill="rgb(226,171,48)" fg:x="159087222" fg:w="1252116"/><text x="68.1564%" y="2431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,252,116 samples, 0.53%)</title><rect x="67.9064%" y="2405" width="0.5345%" height="15" fill="rgb(235,201,9)" fg:x="159087222" fg:w="1252116"/><text x="68.1564%" y="2415.50"></text></g><g><title>alloc::alloc::dealloc (1,252,116 samples, 0.53%)</title><rect x="67.9064%" y="2389" width="0.5345%" height="15" fill="rgb(217,80,15)" fg:x="159087222" fg:w="1252116"/><text x="68.1564%" y="2399.50"></text></g><g><title>cfree (1,252,116 samples, 0.53%)</title><rect x="67.9064%" y="2373" width="0.5345%" height="15" fill="rgb(219,152,8)" fg:x="159087222" fg:w="1252116"/><text x="68.1564%" y="2383.50"></text></g><g><title>[libc.so.6] (1,252,116 samples, 0.53%)</title><rect x="67.9064%" y="2357" width="0.5345%" height="15" fill="rgb(243,107,38)" fg:x="159087222" fg:w="1252116"/><text x="68.1564%" y="2367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,373,906 samples, 0.59%)</title><rect x="68.4409%" y="2373" width="0.5865%" height="15" fill="rgb(231,17,5)" fg:x="160339338" fg:w="1373906"/><text x="68.6909%" y="2383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,373,906 samples, 0.59%)</title><rect x="68.4409%" y="2357" width="0.5865%" height="15" fill="rgb(209,25,54)" fg:x="160339338" fg:w="1373906"/><text x="68.6909%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,373,906 samples, 0.59%)</title><rect x="68.4409%" y="2341" width="0.5865%" height="15" fill="rgb(219,0,2)" fg:x="160339338" fg:w="1373906"/><text x="68.6909%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,373,906 samples, 0.59%)</title><rect x="68.4409%" y="2325" width="0.5865%" height="15" fill="rgb(246,9,5)" fg:x="160339338" fg:w="1373906"/><text x="68.6909%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,373,906 samples, 0.59%)</title><rect x="68.4409%" y="2309" width="0.5865%" height="15" fill="rgb(226,159,4)" fg:x="160339338" fg:w="1373906"/><text x="68.6909%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,373,906 samples, 0.59%)</title><rect x="68.4409%" y="2293" width="0.5865%" height="15" fill="rgb(219,175,34)" fg:x="160339338" fg:w="1373906"/><text x="68.6909%" y="2303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,373,906 samples, 0.59%)</title><rect x="68.4409%" y="2277" width="0.5865%" height="15" fill="rgb(236,10,46)" fg:x="160339338" fg:w="1373906"/><text x="68.6909%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,373,906 samples, 0.59%)</title><rect x="68.4409%" y="2261" width="0.5865%" height="15" fill="rgb(240,211,16)" fg:x="160339338" fg:w="1373906"/><text x="68.6909%" y="2271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,373,906 samples, 0.59%)</title><rect x="68.4409%" y="2245" width="0.5865%" height="15" fill="rgb(205,3,43)" fg:x="160339338" fg:w="1373906"/><text x="68.6909%" y="2255.50"></text></g><g><title>alloc::alloc::dealloc (1,373,906 samples, 0.59%)</title><rect x="68.4409%" y="2229" width="0.5865%" height="15" fill="rgb(245,7,22)" fg:x="160339338" fg:w="1373906"/><text x="68.6909%" y="2239.50"></text></g><g><title>cfree (1,373,906 samples, 0.59%)</title><rect x="68.4409%" y="2213" width="0.5865%" height="15" fill="rgb(239,132,32)" fg:x="160339338" fg:w="1373906"/><text x="68.6909%" y="2223.50"></text></g><g><title>[libc.so.6] (1,373,906 samples, 0.59%)</title><rect x="68.4409%" y="2197" width="0.5865%" height="15" fill="rgb(228,202,34)" fg:x="160339338" fg:w="1373906"/><text x="68.6909%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (11,829,069 samples, 5.05%)</title><rect x="64.5006%" y="2549" width="5.0492%" height="15" fill="rgb(254,200,22)" fg:x="151108166" fg:w="11829069"/><text x="64.7506%" y="2559.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,829,069 samples, 5.05%)</title><rect x="64.5006%" y="2533" width="5.0492%" height="15" fill="rgb(219,10,39)" fg:x="151108166" fg:w="11829069"/><text x="64.7506%" y="2543.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (11,829,069 samples, 5.05%)</title><rect x="64.5006%" y="2517" width="5.0492%" height="15" fill="rgb(226,210,39)" fg:x="151108166" fg:w="11829069"/><text x="64.7506%" y="2527.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (11,829,069 samples, 5.05%)</title><rect x="64.5006%" y="2501" width="5.0492%" height="15" fill="rgb(208,219,16)" fg:x="151108166" fg:w="11829069"/><text x="64.7506%" y="2511.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,597,897 samples, 1.11%)</title><rect x="68.4409%" y="2485" width="1.1089%" height="15" fill="rgb(216,158,51)" fg:x="160339338" fg:w="2597897"/><text x="68.6909%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,597,897 samples, 1.11%)</title><rect x="68.4409%" y="2469" width="1.1089%" height="15" fill="rgb(233,14,44)" fg:x="160339338" fg:w="2597897"/><text x="68.6909%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,597,897 samples, 1.11%)</title><rect x="68.4409%" y="2453" width="1.1089%" height="15" fill="rgb(237,97,39)" fg:x="160339338" fg:w="2597897"/><text x="68.6909%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,597,897 samples, 1.11%)</title><rect x="68.4409%" y="2437" width="1.1089%" height="15" fill="rgb(218,198,43)" fg:x="160339338" fg:w="2597897"/><text x="68.6909%" y="2447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,597,897 samples, 1.11%)</title><rect x="68.4409%" y="2421" width="1.1089%" height="15" fill="rgb(231,104,20)" fg:x="160339338" fg:w="2597897"/><text x="68.6909%" y="2431.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,597,897 samples, 1.11%)</title><rect x="68.4409%" y="2405" width="1.1089%" height="15" fill="rgb(254,36,13)" fg:x="160339338" fg:w="2597897"/><text x="68.6909%" y="2415.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,597,897 samples, 1.11%)</title><rect x="68.4409%" y="2389" width="1.1089%" height="15" fill="rgb(248,14,50)" fg:x="160339338" fg:w="2597897"/><text x="68.6909%" y="2399.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,223,991 samples, 0.52%)</title><rect x="69.0273%" y="2373" width="0.5225%" height="15" fill="rgb(217,107,29)" fg:x="161713244" fg:w="1223991"/><text x="69.2773%" y="2383.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,223,991 samples, 0.52%)</title><rect x="69.0273%" y="2357" width="0.5225%" height="15" fill="rgb(251,169,33)" fg:x="161713244" fg:w="1223991"/><text x="69.2773%" y="2367.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (1,223,991 samples, 0.52%)</title><rect x="69.0273%" y="2341" width="0.5225%" height="15" fill="rgb(217,108,32)" fg:x="161713244" fg:w="1223991"/><text x="69.2773%" y="2351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1,223,991 samples, 0.52%)</title><rect x="69.0273%" y="2325" width="0.5225%" height="15" fill="rgb(219,66,42)" fg:x="161713244" fg:w="1223991"/><text x="69.2773%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,363,131 samples, 0.58%)</title><rect x="69.5498%" y="2549" width="0.5819%" height="15" fill="rgb(206,180,7)" fg:x="162937235" fg:w="1363131"/><text x="69.7998%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,363,131 samples, 0.58%)</title><rect x="69.5498%" y="2533" width="0.5819%" height="15" fill="rgb(208,226,31)" fg:x="162937235" fg:w="1363131"/><text x="69.7998%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,363,131 samples, 0.58%)</title><rect x="69.5498%" y="2517" width="0.5819%" height="15" fill="rgb(218,26,49)" fg:x="162937235" fg:w="1363131"/><text x="69.7998%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,363,131 samples, 0.58%)</title><rect x="69.5498%" y="2501" width="0.5819%" height="15" fill="rgb(233,197,48)" fg:x="162937235" fg:w="1363131"/><text x="69.7998%" y="2511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,363,131 samples, 0.58%)</title><rect x="69.5498%" y="2485" width="0.5819%" height="15" fill="rgb(252,181,51)" fg:x="162937235" fg:w="1363131"/><text x="69.7998%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,363,131 samples, 0.58%)</title><rect x="69.5498%" y="2469" width="0.5819%" height="15" fill="rgb(253,90,19)" fg:x="162937235" fg:w="1363131"/><text x="69.7998%" y="2479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,363,131 samples, 0.58%)</title><rect x="69.5498%" y="2453" width="0.5819%" height="15" fill="rgb(215,171,30)" fg:x="162937235" fg:w="1363131"/><text x="69.7998%" y="2463.50"></text></g><g><title>alloc::alloc::dealloc (1,363,131 samples, 0.58%)</title><rect x="69.5498%" y="2437" width="0.5819%" height="15" fill="rgb(214,222,9)" fg:x="162937235" fg:w="1363131"/><text x="69.7998%" y="2447.50"></text></g><g><title>cfree (1,363,131 samples, 0.58%)</title><rect x="69.5498%" y="2421" width="0.5819%" height="15" fill="rgb(223,3,22)" fg:x="162937235" fg:w="1363131"/><text x="69.7998%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (14,617,010 samples, 6.24%)</title><rect x="64.5006%" y="2613" width="6.2393%" height="15" fill="rgb(225,196,46)" fg:x="151108166" fg:w="14617010"/><text x="64.7506%" y="2623.50">core::pt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,617,010 samples, 6.24%)</title><rect x="64.5006%" y="2597" width="6.2393%" height="15" fill="rgb(209,110,37)" fg:x="151108166" fg:w="14617010"/><text x="64.7506%" y="2607.50">&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (14,617,010 samples, 6.24%)</title><rect x="64.5006%" y="2581" width="6.2393%" height="15" fill="rgb(249,89,12)" fg:x="151108166" fg:w="14617010"/><text x="64.7506%" y="2591.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (14,617,010 samples, 6.24%)</title><rect x="64.5006%" y="2565" width="6.2393%" height="15" fill="rgb(226,27,33)" fg:x="151108166" fg:w="14617010"/><text x="64.7506%" y="2575.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,424,810 samples, 0.61%)</title><rect x="70.1317%" y="2549" width="0.6082%" height="15" fill="rgb(213,82,22)" fg:x="164300366" fg:w="1424810"/><text x="70.3817%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,424,810 samples, 0.61%)</title><rect x="70.1317%" y="2533" width="0.6082%" height="15" fill="rgb(248,140,0)" fg:x="164300366" fg:w="1424810"/><text x="70.3817%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,424,810 samples, 0.61%)</title><rect x="70.1317%" y="2517" width="0.6082%" height="15" fill="rgb(228,106,3)" fg:x="164300366" fg:w="1424810"/><text x="70.3817%" y="2527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,424,810 samples, 0.61%)</title><rect x="70.1317%" y="2501" width="0.6082%" height="15" fill="rgb(209,23,37)" fg:x="164300366" fg:w="1424810"/><text x="70.3817%" y="2511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,424,810 samples, 0.61%)</title><rect x="70.1317%" y="2485" width="0.6082%" height="15" fill="rgb(241,93,50)" fg:x="164300366" fg:w="1424810"/><text x="70.3817%" y="2495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,424,810 samples, 0.61%)</title><rect x="70.1317%" y="2469" width="0.6082%" height="15" fill="rgb(253,46,43)" fg:x="164300366" fg:w="1424810"/><text x="70.3817%" y="2479.50"></text></g><g><title>alloc::alloc::dealloc (1,424,810 samples, 0.61%)</title><rect x="70.1317%" y="2453" width="0.6082%" height="15" fill="rgb(226,206,43)" fg:x="164300366" fg:w="1424810"/><text x="70.3817%" y="2463.50"></text></g><g><title>cfree (1,424,810 samples, 0.61%)</title><rect x="70.1317%" y="2437" width="0.6082%" height="15" fill="rgb(217,54,7)" fg:x="164300366" fg:w="1424810"/><text x="70.3817%" y="2447.50"></text></g><g><title>[libc.so.6] (1,424,810 samples, 0.61%)</title><rect x="70.1317%" y="2421" width="0.6082%" height="15" fill="rgb(223,5,52)" fg:x="164300366" fg:w="1424810"/><text x="70.3817%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;css_bitvector_compiler::BitVector&gt;&gt; (1,240,791 samples, 0.53%)</title><rect x="70.7398%" y="2613" width="0.5296%" height="15" fill="rgb(206,52,46)" fg:x="165725176" fg:w="1240791"/><text x="70.9898%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (17,261,293 samples, 7.37%)</title><rect x="64.5006%" y="2677" width="7.3680%" height="15" fill="rgb(253,136,11)" fg:x="151108166" fg:w="17261293"/><text x="64.7506%" y="2687.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,261,293 samples, 7.37%)</title><rect x="64.5006%" y="2661" width="7.3680%" height="15" fill="rgb(208,106,33)" fg:x="151108166" fg:w="17261293"/><text x="64.7506%" y="2671.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (17,261,293 samples, 7.37%)</title><rect x="64.5006%" y="2645" width="7.3680%" height="15" fill="rgb(206,54,4)" fg:x="151108166" fg:w="17261293"/><text x="64.7506%" y="2655.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (17,261,293 samples, 7.37%)</title><rect x="64.5006%" y="2629" width="7.3680%" height="15" fill="rgb(213,3,15)" fg:x="151108166" fg:w="17261293"/><text x="64.7506%" y="2639.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,403,492 samples, 0.60%)</title><rect x="71.2695%" y="2613" width="0.5991%" height="15" fill="rgb(252,211,39)" fg:x="166965967" fg:w="1403492"/><text x="71.5195%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,403,492 samples, 0.60%)</title><rect x="71.2695%" y="2597" width="0.5991%" height="15" fill="rgb(223,6,36)" fg:x="166965967" fg:w="1403492"/><text x="71.5195%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,403,492 samples, 0.60%)</title><rect x="71.2695%" y="2581" width="0.5991%" height="15" fill="rgb(252,169,45)" fg:x="166965967" fg:w="1403492"/><text x="71.5195%" y="2591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,403,492 samples, 0.60%)</title><rect x="71.2695%" y="2565" width="0.5991%" height="15" fill="rgb(212,48,26)" fg:x="166965967" fg:w="1403492"/><text x="71.5195%" y="2575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,403,492 samples, 0.60%)</title><rect x="71.2695%" y="2549" width="0.5991%" height="15" fill="rgb(251,102,48)" fg:x="166965967" fg:w="1403492"/><text x="71.5195%" y="2559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,403,492 samples, 0.60%)</title><rect x="71.2695%" y="2533" width="0.5991%" height="15" fill="rgb(243,208,16)" fg:x="166965967" fg:w="1403492"/><text x="71.5195%" y="2543.50"></text></g><g><title>alloc::alloc::dealloc (1,403,492 samples, 0.60%)</title><rect x="71.2695%" y="2517" width="0.5991%" height="15" fill="rgb(219,96,24)" fg:x="166965967" fg:w="1403492"/><text x="71.5195%" y="2527.50"></text></g><g><title>cfree (1,403,492 samples, 0.60%)</title><rect x="71.2695%" y="2501" width="0.5991%" height="15" fill="rgb(219,33,29)" fg:x="166965967" fg:w="1403492"/><text x="71.5195%" y="2511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,312,653 samples, 9.52%)</title><rect x="62.8361%" y="2725" width="9.5242%" height="15" fill="rgb(223,176,5)" fg:x="147208787" fg:w="22312653"/><text x="63.0861%" y="2735.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (22,312,653 samples, 9.52%)</title><rect x="62.8361%" y="2709" width="9.5242%" height="15" fill="rgb(228,140,14)" fg:x="147208787" fg:w="22312653"/><text x="63.0861%" y="2719.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (22,312,653 samples, 9.52%)</title><rect x="62.8361%" y="2693" width="9.5242%" height="15" fill="rgb(217,179,31)" fg:x="147208787" fg:w="22312653"/><text x="63.0861%" y="2703.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,151,981 samples, 0.49%)</title><rect x="71.8685%" y="2677" width="0.4917%" height="15" fill="rgb(230,9,30)" fg:x="168369459" fg:w="1151981"/><text x="72.1185%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,151,981 samples, 0.49%)</title><rect x="71.8685%" y="2661" width="0.4917%" height="15" fill="rgb(230,136,20)" fg:x="168369459" fg:w="1151981"/><text x="72.1185%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,151,981 samples, 0.49%)</title><rect x="71.8685%" y="2645" width="0.4917%" height="15" fill="rgb(215,210,22)" fg:x="168369459" fg:w="1151981"/><text x="72.1185%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,151,981 samples, 0.49%)</title><rect x="71.8685%" y="2629" width="0.4917%" height="15" fill="rgb(218,43,5)" fg:x="168369459" fg:w="1151981"/><text x="72.1185%" y="2639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,151,981 samples, 0.49%)</title><rect x="71.8685%" y="2613" width="0.4917%" height="15" fill="rgb(216,11,5)" fg:x="168369459" fg:w="1151981"/><text x="72.1185%" y="2623.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,151,981 samples, 0.49%)</title><rect x="71.8685%" y="2597" width="0.4917%" height="15" fill="rgb(209,82,29)" fg:x="168369459" fg:w="1151981"/><text x="72.1185%" y="2607.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,151,981 samples, 0.49%)</title><rect x="71.8685%" y="2581" width="0.4917%" height="15" fill="rgb(244,115,12)" fg:x="168369459" fg:w="1151981"/><text x="72.1185%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (38,665,094 samples, 16.50%)</title><rect x="62.8361%" y="2741" width="16.5042%" height="15" fill="rgb(222,82,18)" fg:x="147208787" fg:w="38665094"/><text x="63.0861%" y="2751.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (16,352,441 samples, 6.98%)</title><rect x="72.3603%" y="2725" width="6.9800%" height="15" fill="rgb(249,227,8)" fg:x="169521440" fg:w="16352441"/><text x="72.6103%" y="2735.50">core::ptr..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,352,441 samples, 6.98%)</title><rect x="72.3603%" y="2709" width="6.9800%" height="15" fill="rgb(253,141,45)" fg:x="169521440" fg:w="16352441"/><text x="72.6103%" y="2719.50">&lt;alloc::r..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (16,352,441 samples, 6.98%)</title><rect x="72.3603%" y="2693" width="6.9800%" height="15" fill="rgb(234,184,4)" fg:x="169521440" fg:w="16352441"/><text x="72.6103%" y="2703.50">alloc::ra..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16,352,441 samples, 6.98%)</title><rect x="72.3603%" y="2677" width="6.9800%" height="15" fill="rgb(218,194,23)" fg:x="169521440" fg:w="16352441"/><text x="72.6103%" y="2687.50">&lt;alloc::a..</text></g><g><title>alloc::alloc::dealloc (16,352,441 samples, 6.98%)</title><rect x="72.3603%" y="2661" width="6.9800%" height="15" fill="rgb(235,66,41)" fg:x="169521440" fg:w="16352441"/><text x="72.6103%" y="2671.50">alloc::al..</text></g><g><title>cfree (16,352,441 samples, 6.98%)</title><rect x="72.3603%" y="2645" width="6.9800%" height="15" fill="rgb(245,217,1)" fg:x="169521440" fg:w="16352441"/><text x="72.6103%" y="2655.50">cfree</text></g><g><title>[libc.so.6] (16,352,441 samples, 6.98%)</title><rect x="72.3603%" y="2629" width="6.9800%" height="15" fill="rgb(229,91,1)" fg:x="169521440" fg:w="16352441"/><text x="72.6103%" y="2639.50">[libc.so...</text></g><g><title>[libc.so.6] (16,352,441 samples, 6.98%)</title><rect x="72.3603%" y="2613" width="6.9800%" height="15" fill="rgb(207,101,30)" fg:x="169521440" fg:w="16352441"/><text x="72.6103%" y="2623.50">[libc.so...</text></g><g><title>[libc.so.6] (4,047,338 samples, 1.73%)</title><rect x="77.6127%" y="2597" width="1.7276%" height="15" fill="rgb(223,82,49)" fg:x="181826543" fg:w="4047338"/><text x="77.8627%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (42,422,071 samples, 18.11%)</title><rect x="61.8142%" y="3077" width="18.1079%" height="15" fill="rgb(218,167,17)" fg:x="144814832" fg:w="42422071"/><text x="62.0642%" y="3087.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (42,422,071 samples, 18.11%)</title><rect x="61.8142%" y="3061" width="18.1079%" height="15" fill="rgb(208,103,14)" fg:x="144814832" fg:w="42422071"/><text x="62.0642%" y="3071.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42,422,071 samples, 18.11%)</title><rect x="61.8142%" y="3045" width="18.1079%" height="15" fill="rgb(238,20,8)" fg:x="144814832" fg:w="42422071"/><text x="62.0642%" y="3055.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (42,422,071 samples, 18.11%)</title><rect x="61.8142%" y="3029" width="18.1079%" height="15" fill="rgb(218,80,54)" fg:x="144814832" fg:w="42422071"/><text x="62.0642%" y="3039.50">core::ptr::drop_in_place&lt;[cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (42,422,071 samples, 18.11%)</title><rect x="61.8142%" y="3013" width="18.1079%" height="15" fill="rgb(240,144,17)" fg:x="144814832" fg:w="42422071"/><text x="62.0642%" y="3023.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (42,422,071 samples, 18.11%)</title><rect x="61.8142%" y="2997" width="18.1079%" height="15" fill="rgb(245,27,50)" fg:x="144814832" fg:w="42422071"/><text x="62.0642%" y="3007.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42,422,071 samples, 18.11%)</title><rect x="61.8142%" y="2981" width="18.1079%" height="15" fill="rgb(251,51,7)" fg:x="144814832" fg:w="42422071"/><text x="62.0642%" y="2991.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (42,422,071 samples, 18.11%)</title><rect x="61.8142%" y="2965" width="18.1079%" height="15" fill="rgb(245,217,29)" fg:x="144814832" fg:w="42422071"/><text x="62.0642%" y="2975.50">core::ptr::drop_in_place&lt;[cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (42,422,071 samples, 18.11%)</title><rect x="61.8142%" y="2949" width="18.1079%" height="15" fill="rgb(221,176,29)" fg:x="144814832" fg:w="42422071"/><text x="62.0642%" y="2959.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (42,422,071 samples, 18.11%)</title><rect x="61.8142%" y="2933" width="18.1079%" height="15" fill="rgb(212,180,24)" fg:x="144814832" fg:w="42422071"/><text x="62.0642%" y="2943.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42,422,071 samples, 18.11%)</title><rect x="61.8142%" y="2917" width="18.1079%" height="15" fill="rgb(254,24,2)" fg:x="144814832" fg:w="42422071"/><text x="62.0642%" y="2927.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (42,422,071 samples, 18.11%)</title><rect x="61.8142%" y="2901" width="18.1079%" height="15" fill="rgb(230,100,2)" fg:x="144814832" fg:w="42422071"/><text x="62.0642%" y="2911.50">core::ptr::drop_in_place&lt;[cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (41,090,468 samples, 17.54%)</title><rect x="62.3826%" y="2885" width="17.5395%" height="15" fill="rgb(219,142,25)" fg:x="146146435" fg:w="41090468"/><text x="62.6326%" y="2895.50">core::ptr::drop_in_place&lt;cs..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (40,028,116 samples, 17.09%)</title><rect x="62.8361%" y="2869" width="17.0860%" height="15" fill="rgb(240,73,43)" fg:x="147208787" fg:w="40028116"/><text x="63.0861%" y="2879.50">core::ptr::drop_in_place&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40,028,116 samples, 17.09%)</title><rect x="62.8361%" y="2853" width="17.0860%" height="15" fill="rgb(214,114,15)" fg:x="147208787" fg:w="40028116"/><text x="63.0861%" y="2863.50">&lt;alloc::vec::Vec&lt;T,A&gt; as c..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (40,028,116 samples, 17.09%)</title><rect x="62.8361%" y="2837" width="17.0860%" height="15" fill="rgb(207,130,4)" fg:x="147208787" fg:w="40028116"/><text x="63.0861%" y="2847.50">core::ptr::drop_in_place&lt;[..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (40,028,116 samples, 17.09%)</title><rect x="62.8361%" y="2821" width="17.0860%" height="15" fill="rgb(221,25,40)" fg:x="147208787" fg:w="40028116"/><text x="63.0861%" y="2831.50">core::ptr::drop_in_place&lt;c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (40,028,116 samples, 17.09%)</title><rect x="62.8361%" y="2805" width="17.0860%" height="15" fill="rgb(241,184,7)" fg:x="147208787" fg:w="40028116"/><text x="63.0861%" y="2815.50">core::ptr::drop_in_place&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40,028,116 samples, 17.09%)</title><rect x="62.8361%" y="2789" width="17.0860%" height="15" fill="rgb(235,159,4)" fg:x="147208787" fg:w="40028116"/><text x="63.0861%" y="2799.50">&lt;alloc::vec::Vec&lt;T,A&gt; as c..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (40,028,116 samples, 17.09%)</title><rect x="62.8361%" y="2773" width="17.0860%" height="15" fill="rgb(214,87,48)" fg:x="147208787" fg:w="40028116"/><text x="63.0861%" y="2783.50">core::ptr::drop_in_place&lt;[..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (40,028,116 samples, 17.09%)</title><rect x="62.8361%" y="2757" width="17.0860%" height="15" fill="rgb(246,198,24)" fg:x="147208787" fg:w="40028116"/><text x="63.0861%" y="2767.50">core::ptr::drop_in_place&lt;c..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2741" width="0.5818%" height="15" fill="rgb(209,66,40)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2725" width="0.5818%" height="15" fill="rgb(233,147,39)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2709" width="0.5818%" height="15" fill="rgb(231,145,52)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2693" width="0.5818%" height="15" fill="rgb(206,20,26)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2677" width="0.5818%" height="15" fill="rgb(238,220,4)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2687.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2661" width="0.5818%" height="15" fill="rgb(252,195,42)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2671.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2645" width="0.5818%" height="15" fill="rgb(209,10,6)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2629" width="0.5818%" height="15" fill="rgb(229,3,52)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2613" width="0.5818%" height="15" fill="rgb(253,49,37)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2597" width="0.5818%" height="15" fill="rgb(240,103,49)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2581" width="0.5818%" height="15" fill="rgb(250,182,30)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2565" width="0.5818%" height="15" fill="rgb(248,8,30)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2549" width="0.5818%" height="15" fill="rgb(237,120,30)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2533" width="0.5818%" height="15" fill="rgb(221,146,34)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2517" width="0.5818%" height="15" fill="rgb(242,55,13)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2501" width="0.5818%" height="15" fill="rgb(242,112,31)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2511.50"></text></g><g><title>alloc::alloc::dealloc (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2485" width="0.5818%" height="15" fill="rgb(249,192,27)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2495.50"></text></g><g><title>__rust_dealloc (1,363,022 samples, 0.58%)</title><rect x="79.3403%" y="2469" width="0.5818%" height="15" fill="rgb(208,204,44)" fg:x="185873881" fg:w="1363022"/><text x="79.5903%" y="2479.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (147,113,273 samples, 62.80%)</title><rect x="18.1965%" y="3093" width="62.7953%" height="15" fill="rgb(208,93,54)" fg:x="42629693" fg:w="147113273"/><text x="18.4465%" y="3103.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,506,063 samples, 1.07%)</title><rect x="79.9221%" y="3077" width="1.0697%" height="15" fill="rgb(242,1,31)" fg:x="187236903" fg:w="2506063"/><text x="80.1721%" y="3087.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,506,063 samples, 1.07%)</title><rect x="79.9221%" y="3061" width="1.0697%" height="15" fill="rgb(241,83,25)" fg:x="187236903" fg:w="2506063"/><text x="80.1721%" y="3071.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,506,063 samples, 1.07%)</title><rect x="79.9221%" y="3045" width="1.0697%" height="15" fill="rgb(205,169,50)" fg:x="187236903" fg:w="2506063"/><text x="80.1721%" y="3055.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,506,063 samples, 1.07%)</title><rect x="79.9221%" y="3029" width="1.0697%" height="15" fill="rgb(239,186,37)" fg:x="187236903" fg:w="2506063"/><text x="80.1721%" y="3039.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,506,063 samples, 1.07%)</title><rect x="79.9221%" y="3013" width="1.0697%" height="15" fill="rgb(205,221,10)" fg:x="187236903" fg:w="2506063"/><text x="80.1721%" y="3023.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,506,063 samples, 1.07%)</title><rect x="79.9221%" y="2997" width="1.0697%" height="15" fill="rgb(218,196,15)" fg:x="187236903" fg:w="2506063"/><text x="80.1721%" y="3007.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,506,063 samples, 1.07%)</title><rect x="79.9221%" y="2981" width="1.0697%" height="15" fill="rgb(218,196,35)" fg:x="187236903" fg:w="2506063"/><text x="80.1721%" y="2991.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,249,045 samples, 0.53%)</title><rect x="80.4587%" y="2965" width="0.5332%" height="15" fill="rgb(233,63,24)" fg:x="188493921" fg:w="1249045"/><text x="80.7087%" y="2975.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,249,045 samples, 0.53%)</title><rect x="80.4587%" y="2949" width="0.5332%" height="15" fill="rgb(225,8,4)" fg:x="188493921" fg:w="1249045"/><text x="80.7087%" y="2959.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,249,045 samples, 0.53%)</title><rect x="80.4587%" y="2933" width="0.5332%" height="15" fill="rgb(234,105,35)" fg:x="188493921" fg:w="1249045"/><text x="80.7087%" y="2943.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,249,045 samples, 0.53%)</title><rect x="80.4587%" y="2917" width="0.5332%" height="15" fill="rgb(236,21,32)" fg:x="188493921" fg:w="1249045"/><text x="80.7087%" y="2927.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,249,045 samples, 0.53%)</title><rect x="80.4587%" y="2901" width="0.5332%" height="15" fill="rgb(228,109,6)" fg:x="188493921" fg:w="1249045"/><text x="80.7087%" y="2911.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,249,045 samples, 0.53%)</title><rect x="80.4587%" y="2885" width="0.5332%" height="15" fill="rgb(229,215,31)" fg:x="188493921" fg:w="1249045"/><text x="80.7087%" y="2895.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,249,045 samples, 0.53%)</title><rect x="80.4587%" y="2869" width="0.5332%" height="15" fill="rgb(221,52,54)" fg:x="188493921" fg:w="1249045"/><text x="80.7087%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="3077" width="0.4561%" height="15" fill="rgb(252,129,43)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="3061" width="0.4561%" height="15" fill="rgb(248,183,27)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="3045" width="0.4561%" height="15" fill="rgb(250,0,22)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="3055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="3029" width="0.4561%" height="15" fill="rgb(213,166,10)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="3039.50"></text></g><g><title>core::mem::drop (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="3013" width="0.4561%" height="15" fill="rgb(207,163,36)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="3023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2997" width="0.4561%" height="15" fill="rgb(208,122,22)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="3007.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2981" width="0.4561%" height="15" fill="rgb(207,104,49)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2965" width="0.4561%" height="15" fill="rgb(248,211,50)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2949" width="0.4561%" height="15" fill="rgb(217,13,45)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2959.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2933" width="0.4561%" height="15" fill="rgb(211,216,49)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2943.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2917" width="0.4561%" height="15" fill="rgb(221,58,53)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2901" width="0.4561%" height="15" fill="rgb(220,112,41)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2885" width="0.4561%" height="15" fill="rgb(236,38,28)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2869" width="0.4561%" height="15" fill="rgb(227,195,22)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2879.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2853" width="0.4561%" height="15" fill="rgb(214,55,33)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2863.50"></text></g><g><title>core::mem::drop (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2837" width="0.4561%" height="15" fill="rgb(248,80,13)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2821" width="0.4561%" height="15" fill="rgb(238,52,6)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2831.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2805" width="0.4561%" height="15" fill="rgb(224,198,47)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2815.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2789" width="0.4561%" height="15" fill="rgb(233,171,20)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2799.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2773" width="0.4561%" height="15" fill="rgb(241,30,25)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2783.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2757" width="0.4561%" height="15" fill="rgb(207,171,38)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2767.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2741" width="0.4561%" height="15" fill="rgb(234,70,1)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2751.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2725" width="0.4561%" height="15" fill="rgb(232,178,18)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2735.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,068,602 samples, 0.46%)</title><rect x="80.9918%" y="2709" width="0.4561%" height="15" fill="rgb(241,78,40)" fg:x="189742966" fg:w="1068602"/><text x="81.2418%" y="2719.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim (1,090,041 samples, 0.47%)</title><rect x="81.4480%" y="3077" width="0.4653%" height="15" fill="rgb(222,35,25)" fg:x="190811568" fg:w="1090041"/><text x="81.6980%" y="3087.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (1,090,041 samples, 0.47%)</title><rect x="81.4480%" y="3061" width="0.4653%" height="15" fill="rgb(207,92,16)" fg:x="190811568" fg:w="1090041"/><text x="81.6980%" y="3071.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::ReverseSearcher&gt;::next_reject_back (1,090,041 samples, 0.47%)</title><rect x="81.4480%" y="3045" width="0.4653%" height="15" fill="rgb(216,59,51)" fg:x="190811568" fg:w="1090041"/><text x="81.6980%" y="3055.50"></text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (1,090,041 samples, 0.47%)</title><rect x="81.4480%" y="3029" width="0.4653%" height="15" fill="rgb(213,80,28)" fg:x="190811568" fg:w="1090041"/><text x="81.6980%" y="3039.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::ReverseSearcher&gt;::next_back (1,090,041 samples, 0.47%)</title><rect x="81.4480%" y="3013" width="0.4653%" height="15" fill="rgb(220,93,7)" fg:x="190811568" fg:w="1090041"/><text x="81.6980%" y="3023.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (1,090,041 samples, 0.47%)</title><rect x="81.4480%" y="2997" width="0.4653%" height="15" fill="rgb(225,24,44)" fg:x="190811568" fg:w="1090041"/><text x="81.6980%" y="3007.50"></text></g><g><title>core::str::_&lt;impl str&gt;::trim::_{{closure}} (1,090,041 samples, 0.47%)</title><rect x="81.4480%" y="2981" width="0.4653%" height="15" fill="rgb(243,74,40)" fg:x="190811568" fg:w="1090041"/><text x="81.6980%" y="2991.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (1,090,041 samples, 0.47%)</title><rect x="81.4480%" y="2965" width="0.4653%" height="15" fill="rgb(228,39,7)" fg:x="190811568" fg:w="1090041"/><text x="81.6980%" y="2975.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2773" width="0.4160%" height="15" fill="rgb(227,79,8)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2783.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2757" width="0.4160%" height="15" fill="rgb(236,58,11)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2767.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2741" width="0.4160%" height="15" fill="rgb(249,63,35)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2725" width="0.4160%" height="15" fill="rgb(252,114,16)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2709" width="0.4160%" height="15" fill="rgb(254,151,24)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2719.50"></text></g><g><title>alloc::slice::hack::to_vec (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2693" width="0.4160%" height="15" fill="rgb(253,54,39)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2677" width="0.4160%" height="15" fill="rgb(243,25,45)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2661" width="0.4160%" height="15" fill="rgb(234,134,9)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2645" width="0.4160%" height="15" fill="rgb(227,166,31)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2629" width="0.4160%" height="15" fill="rgb(245,143,41)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2613" width="0.4160%" height="15" fill="rgb(238,181,32)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2597" width="0.4160%" height="15" fill="rgb(224,113,18)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2581" width="0.4160%" height="15" fill="rgb(240,229,28)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2591.50"></text></g><g><title>alloc::alloc::alloc (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2565" width="0.4160%" height="15" fill="rgb(250,185,3)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2575.50"></text></g><g><title>malloc (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2549" width="0.4160%" height="15" fill="rgb(212,59,25)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2559.50"></text></g><g><title>[libc.so.6] (974,543 samples, 0.42%)</title><rect x="81.9133%" y="2533" width="0.4160%" height="15" fill="rgb(221,87,20)" fg:x="191901609" fg:w="974543"/><text x="82.1633%" y="2543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,079,130 samples, 0.89%)</title><rect x="81.9133%" y="2853" width="0.8875%" height="15" fill="rgb(213,74,28)" fg:x="191901609" fg:w="2079130"/><text x="82.1633%" y="2863.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,079,130 samples, 0.89%)</title><rect x="81.9133%" y="2837" width="0.8875%" height="15" fill="rgb(224,132,34)" fg:x="191901609" fg:w="2079130"/><text x="82.1633%" y="2847.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2,079,130 samples, 0.89%)</title><rect x="81.9133%" y="2821" width="0.8875%" height="15" fill="rgb(222,101,24)" fg:x="191901609" fg:w="2079130"/><text x="82.1633%" y="2831.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,079,130 samples, 0.89%)</title><rect x="81.9133%" y="2805" width="0.8875%" height="15" fill="rgb(254,142,4)" fg:x="191901609" fg:w="2079130"/><text x="82.1633%" y="2815.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,079,130 samples, 0.89%)</title><rect x="81.9133%" y="2789" width="0.8875%" height="15" fill="rgb(230,229,49)" fg:x="191901609" fg:w="2079130"/><text x="82.1633%" y="2799.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,104,587 samples, 0.47%)</title><rect x="82.3292%" y="2773" width="0.4715%" height="15" fill="rgb(238,70,47)" fg:x="192876152" fg:w="1104587"/><text x="82.5792%" y="2783.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,104,587 samples, 0.47%)</title><rect x="82.3292%" y="2757" width="0.4715%" height="15" fill="rgb(231,160,17)" fg:x="192876152" fg:w="1104587"/><text x="82.5792%" y="2767.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (606,347 samples, 0.26%)</title><rect x="82.8007%" y="2549" width="0.2588%" height="15" fill="rgb(218,68,53)" fg:x="193980739" fg:w="606347"/><text x="83.0507%" y="2559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (606,347 samples, 0.26%)</title><rect x="82.8007%" y="2533" width="0.2588%" height="15" fill="rgb(236,111,10)" fg:x="193980739" fg:w="606347"/><text x="83.0507%" y="2543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (606,347 samples, 0.26%)</title><rect x="82.8007%" y="2517" width="0.2588%" height="15" fill="rgb(224,34,41)" fg:x="193980739" fg:w="606347"/><text x="83.0507%" y="2527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,137,589 samples, 0.49%)</title><rect x="82.8007%" y="2581" width="0.4856%" height="15" fill="rgb(241,118,19)" fg:x="193980739" fg:w="1137589"/><text x="83.0507%" y="2591.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,137,589 samples, 0.49%)</title><rect x="82.8007%" y="2565" width="0.4856%" height="15" fill="rgb(238,129,25)" fg:x="193980739" fg:w="1137589"/><text x="83.0507%" y="2575.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (531,242 samples, 0.23%)</title><rect x="83.0595%" y="2549" width="0.2268%" height="15" fill="rgb(238,22,31)" fg:x="194587086" fg:w="531242"/><text x="83.3095%" y="2559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (976,318 samples, 0.42%)</title><rect x="83.7322%" y="2261" width="0.4167%" height="15" fill="rgb(222,174,48)" fg:x="196162838" fg:w="976318"/><text x="83.9822%" y="2271.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (976,318 samples, 0.42%)</title><rect x="83.7322%" y="2245" width="0.4167%" height="15" fill="rgb(206,152,40)" fg:x="196162838" fg:w="976318"/><text x="83.9822%" y="2255.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (976,318 samples, 0.42%)</title><rect x="83.7322%" y="2229" width="0.4167%" height="15" fill="rgb(218,99,54)" fg:x="196162838" fg:w="976318"/><text x="83.9822%" y="2239.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (976,318 samples, 0.42%)</title><rect x="83.7322%" y="2213" width="0.4167%" height="15" fill="rgb(220,174,26)" fg:x="196162838" fg:w="976318"/><text x="83.9822%" y="2223.50"></text></g><g><title>malloc (976,318 samples, 0.42%)</title><rect x="83.7322%" y="2197" width="0.4167%" height="15" fill="rgb(245,116,9)" fg:x="196162838" fg:w="976318"/><text x="83.9822%" y="2207.50"></text></g><g><title>[libc.so.6] (976,318 samples, 0.42%)</title><rect x="83.7322%" y="2181" width="0.4167%" height="15" fill="rgb(209,72,35)" fg:x="196162838" fg:w="976318"/><text x="83.9822%" y="2191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (792,064 samples, 0.34%)</title><rect x="84.1489%" y="2229" width="0.3381%" height="15" fill="rgb(226,126,21)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="2239.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (792,064 samples, 0.34%)</title><rect x="84.1489%" y="2213" width="0.3381%" height="15" fill="rgb(227,192,1)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="2223.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (792,064 samples, 0.34%)</title><rect x="84.1489%" y="2197" width="0.3381%" height="15" fill="rgb(237,180,29)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="2207.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (792,064 samples, 0.34%)</title><rect x="84.1489%" y="2181" width="0.3381%" height="15" fill="rgb(230,197,35)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="2191.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (792,064 samples, 0.34%)</title><rect x="84.1489%" y="2165" width="0.3381%" height="15" fill="rgb(246,193,31)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="2175.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (792,064 samples, 0.34%)</title><rect x="84.1489%" y="2149" width="0.3381%" height="15" fill="rgb(241,36,4)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="2159.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (792,064 samples, 0.34%)</title><rect x="84.1489%" y="2133" width="0.3381%" height="15" fill="rgb(241,130,17)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="2143.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (792,064 samples, 0.34%)</title><rect x="84.1489%" y="2117" width="0.3381%" height="15" fill="rgb(206,137,32)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="2127.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (792,064 samples, 0.34%)</title><rect x="84.1489%" y="2101" width="0.3381%" height="15" fill="rgb(237,228,51)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="2111.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (792,064 samples, 0.34%)</title><rect x="84.1489%" y="2085" width="0.3381%" height="15" fill="rgb(243,6,42)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="2095.50"></text></g><g><title>alloc::slice::hack::to_vec (792,064 samples, 0.34%)</title><rect x="84.1489%" y="2069" width="0.3381%" height="15" fill="rgb(251,74,28)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="2079.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (792,064 samples, 0.34%)</title><rect x="84.1489%" y="2053" width="0.3381%" height="15" fill="rgb(218,20,49)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="2063.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (792,064 samples, 0.34%)</title><rect x="84.1489%" y="2037" width="0.3381%" height="15" fill="rgb(238,28,14)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (792,064 samples, 0.34%)</title><rect x="84.1489%" y="2021" width="0.3381%" height="15" fill="rgb(229,40,46)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (792,064 samples, 0.34%)</title><rect x="84.1489%" y="2005" width="0.3381%" height="15" fill="rgb(244,195,20)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (792,064 samples, 0.34%)</title><rect x="84.1489%" y="1989" width="0.3381%" height="15" fill="rgb(253,56,35)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="1999.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (792,064 samples, 0.34%)</title><rect x="84.1489%" y="1973" width="0.3381%" height="15" fill="rgb(210,149,44)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="1983.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (792,064 samples, 0.34%)</title><rect x="84.1489%" y="1957" width="0.3381%" height="15" fill="rgb(240,135,12)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="1967.50"></text></g><g><title>alloc::alloc::alloc (792,064 samples, 0.34%)</title><rect x="84.1489%" y="1941" width="0.3381%" height="15" fill="rgb(251,24,50)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="1951.50"></text></g><g><title>malloc (792,064 samples, 0.34%)</title><rect x="84.1489%" y="1925" width="0.3381%" height="15" fill="rgb(243,200,47)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="1935.50"></text></g><g><title>[libc.so.6] (792,064 samples, 0.34%)</title><rect x="84.1489%" y="1909" width="0.3381%" height="15" fill="rgb(224,166,26)" fg:x="197139156" fg:w="792064"/><text x="84.3989%" y="1919.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (442,946 samples, 0.19%)</title><rect x="84.8440%" y="2021" width="0.1891%" height="15" fill="rgb(233,0,47)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="2031.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (442,946 samples, 0.19%)</title><rect x="84.8440%" y="2005" width="0.1891%" height="15" fill="rgb(253,80,5)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="2015.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1989" width="0.1891%" height="15" fill="rgb(214,133,25)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1999.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1973" width="0.1891%" height="15" fill="rgb(209,27,14)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1983.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1957" width="0.1891%" height="15" fill="rgb(219,102,51)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1967.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1941" width="0.1891%" height="15" fill="rgb(237,18,16)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1951.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1925" width="0.1891%" height="15" fill="rgb(241,85,17)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1935.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1909" width="0.1891%" height="15" fill="rgb(236,90,42)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1919.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1893" width="0.1891%" height="15" fill="rgb(249,57,21)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1877" width="0.1891%" height="15" fill="rgb(243,12,36)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1887.50"></text></g><g><title>alloc::slice::hack::to_vec (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1861" width="0.1891%" height="15" fill="rgb(253,128,47)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1845" width="0.1891%" height="15" fill="rgb(207,33,20)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1829" width="0.1891%" height="15" fill="rgb(233,215,35)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1813" width="0.1891%" height="15" fill="rgb(249,188,52)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1797" width="0.1891%" height="15" fill="rgb(225,12,32)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1781" width="0.1891%" height="15" fill="rgb(247,98,14)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1765" width="0.1891%" height="15" fill="rgb(247,219,48)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1749" width="0.1891%" height="15" fill="rgb(253,60,48)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1733" width="0.1891%" height="15" fill="rgb(245,15,52)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1743.50"></text></g><g><title>malloc (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1717" width="0.1891%" height="15" fill="rgb(220,133,28)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1727.50"></text></g><g><title>[libc.so.6] (442,946 samples, 0.19%)</title><rect x="84.8440%" y="1701" width="0.1891%" height="15" fill="rgb(217,180,4)" fg:x="198767635" fg:w="442946"/><text x="85.0940%" y="1711.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (878,144 samples, 0.37%)</title><rect x="85.0331%" y="1957" width="0.3748%" height="15" fill="rgb(251,24,1)" fg:x="199210581" fg:w="878144"/><text x="85.2831%" y="1967.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (878,144 samples, 0.37%)</title><rect x="85.0331%" y="1941" width="0.3748%" height="15" fill="rgb(212,185,49)" fg:x="199210581" fg:w="878144"/><text x="85.2831%" y="1951.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (878,144 samples, 0.37%)</title><rect x="85.0331%" y="1925" width="0.3748%" height="15" fill="rgb(215,175,22)" fg:x="199210581" fg:w="878144"/><text x="85.2831%" y="1935.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (998,915 samples, 0.43%)</title><rect x="85.4079%" y="1813" width="0.4264%" height="15" fill="rgb(250,205,14)" fg:x="200088725" fg:w="998915"/><text x="85.6579%" y="1823.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (998,915 samples, 0.43%)</title><rect x="85.4079%" y="1797" width="0.4264%" height="15" fill="rgb(225,211,22)" fg:x="200088725" fg:w="998915"/><text x="85.6579%" y="1807.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (699,915 samples, 0.30%)</title><rect x="85.8343%" y="1605" width="0.2988%" height="15" fill="rgb(251,179,42)" fg:x="201087640" fg:w="699915"/><text x="86.0843%" y="1615.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (699,915 samples, 0.30%)</title><rect x="85.8343%" y="1589" width="0.2988%" height="15" fill="rgb(208,216,51)" fg:x="201087640" fg:w="699915"/><text x="86.0843%" y="1599.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (699,915 samples, 0.30%)</title><rect x="85.8343%" y="1573" width="0.2988%" height="15" fill="rgb(235,36,11)" fg:x="201087640" fg:w="699915"/><text x="86.0843%" y="1583.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (699,915 samples, 0.30%)</title><rect x="85.8343%" y="1557" width="0.2988%" height="15" fill="rgb(213,189,28)" fg:x="201087640" fg:w="699915"/><text x="86.0843%" y="1567.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (699,915 samples, 0.30%)</title><rect x="85.8343%" y="1541" width="0.2988%" height="15" fill="rgb(227,203,42)" fg:x="201087640" fg:w="699915"/><text x="86.0843%" y="1551.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (699,915 samples, 0.30%)</title><rect x="85.8343%" y="1525" width="0.2988%" height="15" fill="rgb(244,72,36)" fg:x="201087640" fg:w="699915"/><text x="86.0843%" y="1535.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (699,915 samples, 0.30%)</title><rect x="85.8343%" y="1509" width="0.2988%" height="15" fill="rgb(213,53,17)" fg:x="201087640" fg:w="699915"/><text x="86.0843%" y="1519.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (699,915 samples, 0.30%)</title><rect x="85.8343%" y="1493" width="0.2988%" height="15" fill="rgb(207,167,3)" fg:x="201087640" fg:w="699915"/><text x="86.0843%" y="1503.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (911,209 samples, 0.39%)</title><rect x="86.6030%" y="709" width="0.3889%" height="15" fill="rgb(216,98,30)" fg:x="202888545" fg:w="911209"/><text x="86.8530%" y="719.50"></text></g><g><title>serde::de::MapAccess::next_entry (911,209 samples, 0.39%)</title><rect x="86.6030%" y="693" width="0.3889%" height="15" fill="rgb(236,123,15)" fg:x="202888545" fg:w="911209"/><text x="86.8530%" y="703.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (911,209 samples, 0.39%)</title><rect x="86.6030%" y="677" width="0.3889%" height="15" fill="rgb(248,81,50)" fg:x="202888545" fg:w="911209"/><text x="86.8530%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (911,209 samples, 0.39%)</title><rect x="86.6030%" y="661" width="0.3889%" height="15" fill="rgb(214,120,4)" fg:x="202888545" fg:w="911209"/><text x="86.8530%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (911,209 samples, 0.39%)</title><rect x="86.6030%" y="645" width="0.3889%" height="15" fill="rgb(208,179,34)" fg:x="202888545" fg:w="911209"/><text x="86.8530%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (911,209 samples, 0.39%)</title><rect x="86.6030%" y="629" width="0.3889%" height="15" fill="rgb(227,140,7)" fg:x="202888545" fg:w="911209"/><text x="86.8530%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (911,209 samples, 0.39%)</title><rect x="86.6030%" y="613" width="0.3889%" height="15" fill="rgb(214,22,6)" fg:x="202888545" fg:w="911209"/><text x="86.8530%" y="623.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (911,209 samples, 0.39%)</title><rect x="86.6030%" y="597" width="0.3889%" height="15" fill="rgb(207,137,27)" fg:x="202888545" fg:w="911209"/><text x="86.8530%" y="607.50"></text></g><g><title>serde::de::MapAccess::next_entry (4,824,431 samples, 2.06%)</title><rect x="85.4079%" y="1845" width="2.0593%" height="15" fill="rgb(210,8,46)" fg:x="200088725" fg:w="4824431"/><text x="85.6579%" y="1855.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (4,824,431 samples, 2.06%)</title><rect x="85.4079%" y="1829" width="2.0593%" height="15" fill="rgb(240,16,54)" fg:x="200088725" fg:w="4824431"/><text x="85.6579%" y="1839.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,825,516 samples, 1.63%)</title><rect x="85.8343%" y="1813" width="1.6329%" height="15" fill="rgb(211,209,29)" fg:x="201087640" fg:w="3825516"/><text x="86.0843%" y="1823.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,825,516 samples, 1.63%)</title><rect x="85.8343%" y="1797" width="1.6329%" height="15" fill="rgb(226,228,24)" fg:x="201087640" fg:w="3825516"/><text x="86.0843%" y="1807.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,825,516 samples, 1.63%)</title><rect x="85.8343%" y="1781" width="1.6329%" height="15" fill="rgb(222,84,9)" fg:x="201087640" fg:w="3825516"/><text x="86.0843%" y="1791.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,825,516 samples, 1.63%)</title><rect x="85.8343%" y="1765" width="1.6329%" height="15" fill="rgb(234,203,30)" fg:x="201087640" fg:w="3825516"/><text x="86.0843%" y="1775.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,825,516 samples, 1.63%)</title><rect x="85.8343%" y="1749" width="1.6329%" height="15" fill="rgb(238,109,14)" fg:x="201087640" fg:w="3825516"/><text x="86.0843%" y="1759.50"></text></g><g><title>serde::de::SeqAccess::next_element (3,825,516 samples, 1.63%)</title><rect x="85.8343%" y="1733" width="1.6329%" height="15" fill="rgb(233,206,34)" fg:x="201087640" fg:w="3825516"/><text x="86.0843%" y="1743.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3,825,516 samples, 1.63%)</title><rect x="85.8343%" y="1717" width="1.6329%" height="15" fill="rgb(220,167,47)" fg:x="201087640" fg:w="3825516"/><text x="86.0843%" y="1727.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,825,516 samples, 1.63%)</title><rect x="85.8343%" y="1701" width="1.6329%" height="15" fill="rgb(238,105,10)" fg:x="201087640" fg:w="3825516"/><text x="86.0843%" y="1711.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,825,516 samples, 1.63%)</title><rect x="85.8343%" y="1685" width="1.6329%" height="15" fill="rgb(213,227,17)" fg:x="201087640" fg:w="3825516"/><text x="86.0843%" y="1695.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,825,516 samples, 1.63%)</title><rect x="85.8343%" y="1669" width="1.6329%" height="15" fill="rgb(217,132,38)" fg:x="201087640" fg:w="3825516"/><text x="86.0843%" y="1679.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,825,516 samples, 1.63%)</title><rect x="85.8343%" y="1653" width="1.6329%" height="15" fill="rgb(242,146,4)" fg:x="201087640" fg:w="3825516"/><text x="86.0843%" y="1663.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,825,516 samples, 1.63%)</title><rect x="85.8343%" y="1637" width="1.6329%" height="15" fill="rgb(212,61,9)" fg:x="201087640" fg:w="3825516"/><text x="86.0843%" y="1647.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,825,516 samples, 1.63%)</title><rect x="85.8343%" y="1621" width="1.6329%" height="15" fill="rgb(247,126,22)" fg:x="201087640" fg:w="3825516"/><text x="86.0843%" y="1631.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1605" width="1.3342%" height="15" fill="rgb(220,196,2)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1615.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1589" width="1.3342%" height="15" fill="rgb(208,46,4)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1599.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1573" width="1.3342%" height="15" fill="rgb(252,104,46)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1583.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1557" width="1.3342%" height="15" fill="rgb(237,152,48)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1567.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1541" width="1.3342%" height="15" fill="rgb(221,59,37)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1551.50"></text></g><g><title>serde::de::SeqAccess::next_element (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1525" width="1.3342%" height="15" fill="rgb(209,202,51)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1535.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1509" width="1.3342%" height="15" fill="rgb(228,81,30)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1519.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1493" width="1.3342%" height="15" fill="rgb(227,42,39)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1503.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1477" width="1.3342%" height="15" fill="rgb(221,26,2)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1487.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1461" width="1.3342%" height="15" fill="rgb(254,61,31)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1471.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1445" width="1.3342%" height="15" fill="rgb(222,173,38)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1455.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1429" width="1.3342%" height="15" fill="rgb(218,50,12)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1439.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1413" width="1.3342%" height="15" fill="rgb(223,88,40)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1423.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1397" width="1.3342%" height="15" fill="rgb(237,54,19)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1407.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1381" width="1.3342%" height="15" fill="rgb(251,129,25)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1391.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1365" width="1.3342%" height="15" fill="rgb(238,97,19)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1375.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1349" width="1.3342%" height="15" fill="rgb(240,169,18)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1359.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1333" width="1.3342%" height="15" fill="rgb(230,187,49)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1343.50"></text></g><g><title>serde::de::SeqAccess::next_element (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1317" width="1.3342%" height="15" fill="rgb(209,44,26)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1327.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1301" width="1.3342%" height="15" fill="rgb(244,0,6)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1311.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1285" width="1.3342%" height="15" fill="rgb(248,18,21)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1295.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1269" width="1.3342%" height="15" fill="rgb(245,180,19)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1279.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1253" width="1.3342%" height="15" fill="rgb(252,118,36)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1263.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,125,601 samples, 1.33%)</title><rect x="86.1331%" y="1237" width="1.3342%" height="15" fill="rgb(210,224,19)" fg:x="201787555" fg:w="3125601"/><text x="86.3831%" y="1247.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="1221" width="0.8642%" height="15" fill="rgb(218,30,24)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="1231.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="1205" width="0.8642%" height="15" fill="rgb(219,75,50)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="1215.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="1189" width="0.8642%" height="15" fill="rgb(234,72,50)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="1199.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="1173" width="0.8642%" height="15" fill="rgb(219,100,48)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="1183.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="1157" width="0.8642%" height="15" fill="rgb(253,5,41)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="1167.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="1141" width="0.8642%" height="15" fill="rgb(247,181,11)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="1151.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="1125" width="0.8642%" height="15" fill="rgb(222,223,25)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="1135.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="1109" width="0.8642%" height="15" fill="rgb(214,198,28)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="1119.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="1093" width="0.8642%" height="15" fill="rgb(230,46,43)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="1103.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="1077" width="0.8642%" height="15" fill="rgb(233,65,53)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="1087.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="1061" width="0.8642%" height="15" fill="rgb(221,121,27)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="1071.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="1045" width="0.8642%" height="15" fill="rgb(247,70,47)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="1055.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="1029" width="0.8642%" height="15" fill="rgb(228,85,35)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="1039.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="1013" width="0.8642%" height="15" fill="rgb(209,50,18)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="1023.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="997" width="0.8642%" height="15" fill="rgb(250,19,35)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="1007.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="981" width="0.8642%" height="15" fill="rgb(253,107,29)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="991.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="965" width="0.8642%" height="15" fill="rgb(252,179,29)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="975.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="949" width="0.8642%" height="15" fill="rgb(238,194,6)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="959.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="933" width="0.8642%" height="15" fill="rgb(238,164,29)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="943.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="917" width="0.8642%" height="15" fill="rgb(224,25,9)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="927.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="901" width="0.8642%" height="15" fill="rgb(244,153,23)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="911.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="885" width="0.8642%" height="15" fill="rgb(212,203,14)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="895.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="869" width="0.8642%" height="15" fill="rgb(220,164,20)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="879.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="853" width="0.8642%" height="15" fill="rgb(222,203,48)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="863.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="837" width="0.8642%" height="15" fill="rgb(215,159,22)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="847.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="821" width="0.8642%" height="15" fill="rgb(216,183,47)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="831.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="805" width="0.8642%" height="15" fill="rgb(229,195,25)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="815.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="789" width="0.8642%" height="15" fill="rgb(224,132,51)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="799.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="773" width="0.8642%" height="15" fill="rgb(240,63,7)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="783.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="757" width="0.8642%" height="15" fill="rgb(249,182,41)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="741" width="0.8642%" height="15" fill="rgb(243,47,26)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="751.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,024,611 samples, 0.86%)</title><rect x="86.6030%" y="725" width="0.8642%" height="15" fill="rgb(233,48,2)" fg:x="202888545" fg:w="2024611"/><text x="86.8530%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="709" width="0.4753%" height="15" fill="rgb(244,165,34)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="719.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="693" width="0.4753%" height="15" fill="rgb(207,89,7)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="703.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="677" width="0.4753%" height="15" fill="rgb(244,117,36)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="661" width="0.4753%" height="15" fill="rgb(226,144,34)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="645" width="0.4753%" height="15" fill="rgb(213,23,19)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="629" width="0.4753%" height="15" fill="rgb(217,75,12)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="613" width="0.4753%" height="15" fill="rgb(224,159,17)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="623.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="597" width="0.4753%" height="15" fill="rgb(217,118,1)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="607.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="581" width="0.4753%" height="15" fill="rgb(232,180,48)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="565" width="0.4753%" height="15" fill="rgb(230,27,33)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="549" width="0.4753%" height="15" fill="rgb(205,31,21)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="533" width="0.4753%" height="15" fill="rgb(253,59,4)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="517" width="0.4753%" height="15" fill="rgb(224,201,9)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="501" width="0.4753%" height="15" fill="rgb(229,206,30)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="511.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="485" width="0.4753%" height="15" fill="rgb(212,67,47)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="495.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="469" width="0.4753%" height="15" fill="rgb(211,96,50)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="479.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="453" width="0.4753%" height="15" fill="rgb(252,114,18)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="437" width="0.4753%" height="15" fill="rgb(223,58,37)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="421" width="0.4753%" height="15" fill="rgb(237,70,4)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="405" width="0.4753%" height="15" fill="rgb(244,85,46)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="415.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="389" width="0.4753%" height="15" fill="rgb(223,39,52)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="399.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="373" width="0.4753%" height="15" fill="rgb(218,200,14)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="357" width="0.4753%" height="15" fill="rgb(208,171,16)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="367.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="341" width="0.4753%" height="15" fill="rgb(234,200,18)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="351.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="325" width="0.4753%" height="15" fill="rgb(228,45,11)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="309" width="0.4753%" height="15" fill="rgb(237,182,11)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="293" width="0.4753%" height="15" fill="rgb(241,175,49)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="303.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="277" width="0.4753%" height="15" fill="rgb(247,38,35)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="287.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="261" width="0.4753%" height="15" fill="rgb(228,39,49)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="245" width="0.4753%" height="15" fill="rgb(226,101,26)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="229" width="0.4753%" height="15" fill="rgb(206,141,19)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="213" width="0.4753%" height="15" fill="rgb(211,200,13)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="197" width="0.4753%" height="15" fill="rgb(241,121,6)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="181" width="0.4753%" height="15" fill="rgb(234,221,29)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="165" width="0.4753%" height="15" fill="rgb(229,136,5)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="149" width="0.4753%" height="15" fill="rgb(238,36,11)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="133" width="0.4753%" height="15" fill="rgb(251,55,41)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="117" width="0.4753%" height="15" fill="rgb(242,34,40)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="101" width="0.4753%" height="15" fill="rgb(215,42,17)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="85" width="0.4753%" height="15" fill="rgb(207,44,46)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="69" width="0.4753%" height="15" fill="rgb(211,206,28)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="79.50"></text></g><g><title>malloc (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="53" width="0.4753%" height="15" fill="rgb(237,167,16)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="63.50"></text></g><g><title>[libc.so.6] (1,113,402 samples, 0.48%)</title><rect x="86.9920%" y="37" width="0.4753%" height="15" fill="rgb(233,66,6)" fg:x="203799754" fg:w="1113402"/><text x="87.2420%" y="47.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,147,035 samples, 3.05%)</title><rect x="84.8440%" y="2053" width="3.0507%" height="15" fill="rgb(246,123,29)" fg:x="198767635" fg:w="7147035"/><text x="85.0940%" y="2063.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (7,147,035 samples, 3.05%)</title><rect x="84.8440%" y="2037" width="3.0507%" height="15" fill="rgb(209,62,40)" fg:x="198767635" fg:w="7147035"/><text x="85.0940%" y="2047.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,704,089 samples, 2.86%)</title><rect x="85.0331%" y="2021" width="2.8616%" height="15" fill="rgb(218,4,25)" fg:x="199210581" fg:w="6704089"/><text x="85.2831%" y="2031.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,704,089 samples, 2.86%)</title><rect x="85.0331%" y="2005" width="2.8616%" height="15" fill="rgb(253,91,49)" fg:x="199210581" fg:w="6704089"/><text x="85.2831%" y="2015.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,704,089 samples, 2.86%)</title><rect x="85.0331%" y="1989" width="2.8616%" height="15" fill="rgb(228,155,29)" fg:x="199210581" fg:w="6704089"/><text x="85.2831%" y="1999.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,704,089 samples, 2.86%)</title><rect x="85.0331%" y="1973" width="2.8616%" height="15" fill="rgb(243,57,37)" fg:x="199210581" fg:w="6704089"/><text x="85.2831%" y="1983.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,825,945 samples, 2.49%)</title><rect x="85.4079%" y="1957" width="2.4868%" height="15" fill="rgb(244,167,17)" fg:x="200088725" fg:w="5825945"/><text x="85.6579%" y="1967.50">&lt;s..</text></g><g><title>serde::de::SeqAccess::next_element (5,825,945 samples, 2.49%)</title><rect x="85.4079%" y="1941" width="2.4868%" height="15" fill="rgb(207,181,38)" fg:x="200088725" fg:w="5825945"/><text x="85.6579%" y="1951.50">se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,825,945 samples, 2.49%)</title><rect x="85.4079%" y="1925" width="2.4868%" height="15" fill="rgb(211,8,23)" fg:x="200088725" fg:w="5825945"/><text x="85.6579%" y="1935.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,825,945 samples, 2.49%)</title><rect x="85.4079%" y="1909" width="2.4868%" height="15" fill="rgb(235,11,44)" fg:x="200088725" fg:w="5825945"/><text x="85.6579%" y="1919.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,825,945 samples, 2.49%)</title><rect x="85.4079%" y="1893" width="2.4868%" height="15" fill="rgb(248,18,52)" fg:x="200088725" fg:w="5825945"/><text x="85.6579%" y="1903.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,825,945 samples, 2.49%)</title><rect x="85.4079%" y="1877" width="2.4868%" height="15" fill="rgb(208,4,7)" fg:x="200088725" fg:w="5825945"/><text x="85.6579%" y="1887.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,825,945 samples, 2.49%)</title><rect x="85.4079%" y="1861" width="2.4868%" height="15" fill="rgb(240,17,39)" fg:x="200088725" fg:w="5825945"/><text x="85.6579%" y="1871.50">&lt;s..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,001,514 samples, 0.43%)</title><rect x="87.4672%" y="1845" width="0.4275%" height="15" fill="rgb(207,170,3)" fg:x="204913156" fg:w="1001514"/><text x="87.7172%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,001,514 samples, 0.43%)</title><rect x="87.4672%" y="1829" width="0.4275%" height="15" fill="rgb(236,100,52)" fg:x="204913156" fg:w="1001514"/><text x="87.7172%" y="1839.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,001,514 samples, 0.43%)</title><rect x="87.4672%" y="1813" width="0.4275%" height="15" fill="rgb(246,78,51)" fg:x="204913156" fg:w="1001514"/><text x="87.7172%" y="1823.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,001,514 samples, 0.43%)</title><rect x="87.4672%" y="1797" width="0.4275%" height="15" fill="rgb(211,17,15)" fg:x="204913156" fg:w="1001514"/><text x="87.7172%" y="1807.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1,001,514 samples, 0.43%)</title><rect x="87.4672%" y="1781" width="0.4275%" height="15" fill="rgb(209,59,46)" fg:x="204913156" fg:w="1001514"/><text x="87.7172%" y="1791.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::DormantMut,K,V,NodeType&gt;,HandleType&gt;::awaken (1,001,514 samples, 0.43%)</title><rect x="87.4672%" y="1765" width="0.4275%" height="15" fill="rgb(210,92,25)" fg:x="204913156" fg:w="1001514"/><text x="87.7172%" y="1775.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,883,140 samples, 3.36%)</title><rect x="84.8440%" y="2165" width="3.3649%" height="15" fill="rgb(238,174,52)" fg:x="198767635" fg:w="7883140"/><text x="85.0940%" y="2175.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (7,883,140 samples, 3.36%)</title><rect x="84.8440%" y="2149" width="3.3649%" height="15" fill="rgb(230,73,7)" fg:x="198767635" fg:w="7883140"/><text x="85.0940%" y="2159.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,883,140 samples, 3.36%)</title><rect x="84.8440%" y="2133" width="3.3649%" height="15" fill="rgb(243,124,40)" fg:x="198767635" fg:w="7883140"/><text x="85.0940%" y="2143.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,883,140 samples, 3.36%)</title><rect x="84.8440%" y="2117" width="3.3649%" height="15" fill="rgb(244,170,11)" fg:x="198767635" fg:w="7883140"/><text x="85.0940%" y="2127.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,883,140 samples, 3.36%)</title><rect x="84.8440%" y="2101" width="3.3649%" height="15" fill="rgb(207,114,54)" fg:x="198767635" fg:w="7883140"/><text x="85.0940%" y="2111.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,883,140 samples, 3.36%)</title><rect x="84.8440%" y="2085" width="3.3649%" height="15" fill="rgb(205,42,20)" fg:x="198767635" fg:w="7883140"/><text x="85.0940%" y="2095.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,883,140 samples, 3.36%)</title><rect x="84.8440%" y="2069" width="3.3649%" height="15" fill="rgb(230,30,28)" fg:x="198767635" fg:w="7883140"/><text x="85.0940%" y="2079.50">&lt;se..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (736,105 samples, 0.31%)</title><rect x="87.8947%" y="2053" width="0.3142%" height="15" fill="rgb(205,73,54)" fg:x="205914670" fg:w="736105"/><text x="88.1447%" y="2063.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (736,105 samples, 0.31%)</title><rect x="87.8947%" y="2037" width="0.3142%" height="15" fill="rgb(254,227,23)" fg:x="205914670" fg:w="736105"/><text x="88.1447%" y="2047.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (736,105 samples, 0.31%)</title><rect x="87.8947%" y="2021" width="0.3142%" height="15" fill="rgb(228,202,34)" fg:x="205914670" fg:w="736105"/><text x="88.1447%" y="2031.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (736,105 samples, 0.31%)</title><rect x="87.8947%" y="2005" width="0.3142%" height="15" fill="rgb(222,225,37)" fg:x="205914670" fg:w="736105"/><text x="88.1447%" y="2015.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (736,105 samples, 0.31%)</title><rect x="87.8947%" y="1989" width="0.3142%" height="15" fill="rgb(221,14,54)" fg:x="205914670" fg:w="736105"/><text x="88.1447%" y="1999.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (736,105 samples, 0.31%)</title><rect x="87.8947%" y="1973" width="0.3142%" height="15" fill="rgb(254,102,2)" fg:x="205914670" fg:w="736105"/><text x="88.1447%" y="1983.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (736,105 samples, 0.31%)</title><rect x="87.8947%" y="1957" width="0.3142%" height="15" fill="rgb(232,104,17)" fg:x="205914670" fg:w="736105"/><text x="88.1447%" y="1967.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (736,105 samples, 0.31%)</title><rect x="87.8947%" y="1941" width="0.3142%" height="15" fill="rgb(250,220,14)" fg:x="205914670" fg:w="736105"/><text x="88.1447%" y="1951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (736,105 samples, 0.31%)</title><rect x="87.8947%" y="1925" width="0.3142%" height="15" fill="rgb(241,158,9)" fg:x="205914670" fg:w="736105"/><text x="88.1447%" y="1935.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (736,105 samples, 0.31%)</title><rect x="87.8947%" y="1909" width="0.3142%" height="15" fill="rgb(246,9,43)" fg:x="205914670" fg:w="736105"/><text x="88.1447%" y="1919.50"></text></g><g><title>alloc::alloc::alloc (736,105 samples, 0.31%)</title><rect x="87.8947%" y="1893" width="0.3142%" height="15" fill="rgb(206,73,33)" fg:x="205914670" fg:w="736105"/><text x="88.1447%" y="1903.50"></text></g><g><title>malloc (736,105 samples, 0.31%)</title><rect x="87.8947%" y="1877" width="0.3142%" height="15" fill="rgb(222,79,8)" fg:x="205914670" fg:w="736105"/><text x="88.1447%" y="1887.50"></text></g><g><title>[libc.so.6] (736,105 samples, 0.31%)</title><rect x="87.8947%" y="1861" width="0.3142%" height="15" fill="rgb(234,8,54)" fg:x="205914670" fg:w="736105"/><text x="88.1447%" y="1871.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,784,877 samples, 4.18%)</title><rect x="84.4870%" y="2213" width="4.1767%" height="15" fill="rgb(209,134,38)" fg:x="197931220" fg:w="9784877"/><text x="84.7370%" y="2223.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,784,877 samples, 4.18%)</title><rect x="84.4870%" y="2197" width="4.1767%" height="15" fill="rgb(230,127,29)" fg:x="197931220" fg:w="9784877"/><text x="84.7370%" y="2207.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,784,877 samples, 4.18%)</title><rect x="84.4870%" y="2181" width="4.1767%" height="15" fill="rgb(242,44,41)" fg:x="197931220" fg:w="9784877"/><text x="84.7370%" y="2191.50">&lt;&amp;mut..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="2165" width="0.4547%" height="15" fill="rgb(222,56,43)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="2175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="2149" width="0.4547%" height="15" fill="rgb(238,39,47)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="2159.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="2133" width="0.4547%" height="15" fill="rgb(226,79,43)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="2143.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="2117" width="0.4547%" height="15" fill="rgb(242,105,53)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="2127.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="2101" width="0.4547%" height="15" fill="rgb(251,132,46)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="2111.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="2085" width="0.4547%" height="15" fill="rgb(231,77,14)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="2095.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="2069" width="0.4547%" height="15" fill="rgb(240,135,9)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="2079.50"></text></g><g><title>alloc::slice::hack::to_vec (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="2053" width="0.4547%" height="15" fill="rgb(248,109,14)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="2063.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="2037" width="0.4547%" height="15" fill="rgb(227,146,52)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="2047.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="2021" width="0.4547%" height="15" fill="rgb(232,54,3)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="2005" width="0.4547%" height="15" fill="rgb(229,201,43)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="1989" width="0.4547%" height="15" fill="rgb(252,161,33)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="1973" width="0.4547%" height="15" fill="rgb(226,146,40)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="1983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="1957" width="0.4547%" height="15" fill="rgb(219,47,25)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="1967.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="1941" width="0.4547%" height="15" fill="rgb(250,135,13)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="1951.50"></text></g><g><title>alloc::alloc::alloc (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="1925" width="0.4547%" height="15" fill="rgb(219,229,18)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="1935.50"></text></g><g><title>__rdl_alloc (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="1909" width="0.4547%" height="15" fill="rgb(217,152,27)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="1919.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,065,322 samples, 0.45%)</title><rect x="88.2089%" y="1893" width="0.4547%" height="15" fill="rgb(225,71,47)" fg:x="206650775" fg:w="1065322"/><text x="88.4589%" y="1903.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,639,354 samples, 5.40%)</title><rect x="83.7322%" y="2277" width="5.3951%" height="15" fill="rgb(220,139,14)" fg:x="196162838" fg:w="12639354"/><text x="83.9822%" y="2287.50">&lt;serde_..</text></g><g><title>serde::de::MapAccess::next_entry (11,663,036 samples, 4.98%)</title><rect x="84.1489%" y="2261" width="4.9784%" height="15" fill="rgb(247,54,32)" fg:x="197139156" fg:w="11663036"/><text x="84.3989%" y="2271.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,663,036 samples, 4.98%)</title><rect x="84.1489%" y="2245" width="4.9784%" height="15" fill="rgb(252,131,39)" fg:x="197139156" fg:w="11663036"/><text x="84.3989%" y="2255.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10,870,972 samples, 4.64%)</title><rect x="84.4870%" y="2229" width="4.6403%" height="15" fill="rgb(210,108,39)" fg:x="197931220" fg:w="10870972"/><text x="84.7370%" y="2239.50">&lt;serd..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (1,086,095 samples, 0.46%)</title><rect x="88.6637%" y="2213" width="0.4636%" height="15" fill="rgb(205,23,29)" fg:x="207716097" fg:w="1086095"/><text x="88.9137%" y="2223.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1,086,095 samples, 0.46%)</title><rect x="88.6637%" y="2197" width="0.4636%" height="15" fill="rgb(246,139,46)" fg:x="207716097" fg:w="1086095"/><text x="88.9137%" y="2207.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (1,086,095 samples, 0.46%)</title><rect x="88.6637%" y="2181" width="0.4636%" height="15" fill="rgb(250,81,26)" fg:x="207716097" fg:w="1086095"/><text x="88.9137%" y="2191.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1,086,095 samples, 0.46%)</title><rect x="88.6637%" y="2165" width="0.4636%" height="15" fill="rgb(214,104,7)" fg:x="207716097" fg:w="1086095"/><text x="88.9137%" y="2175.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1,086,095 samples, 0.46%)</title><rect x="88.6637%" y="2149" width="0.4636%" height="15" fill="rgb(233,189,8)" fg:x="207716097" fg:w="1086095"/><text x="88.9137%" y="2159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (14,620,977 samples, 6.24%)</title><rect x="83.2863%" y="2581" width="6.2410%" height="15" fill="rgb(228,141,17)" fg:x="195118328" fg:w="14620977"/><text x="83.5363%" y="2591.50">&lt;serde_j..</text></g><g><title>serde::de::SeqAccess::next_element (14,620,977 samples, 6.24%)</title><rect x="83.2863%" y="2565" width="6.2410%" height="15" fill="rgb(247,157,1)" fg:x="195118328" fg:w="14620977"/><text x="83.5363%" y="2575.50">serde::d..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (14,620,977 samples, 6.24%)</title><rect x="83.2863%" y="2549" width="6.2410%" height="15" fill="rgb(249,225,5)" fg:x="195118328" fg:w="14620977"/><text x="83.5363%" y="2559.50">&lt;serde_j..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14,620,977 samples, 6.24%)</title><rect x="83.2863%" y="2533" width="6.2410%" height="15" fill="rgb(242,55,13)" fg:x="195118328" fg:w="14620977"/><text x="83.5363%" y="2543.50">&lt;core::m..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,620,977 samples, 6.24%)</title><rect x="83.2863%" y="2517" width="6.2410%" height="15" fill="rgb(230,49,50)" fg:x="195118328" fg:w="14620977"/><text x="83.5363%" y="2527.50">serde_js..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,620,977 samples, 6.24%)</title><rect x="83.2863%" y="2501" width="6.2410%" height="15" fill="rgb(241,111,38)" fg:x="195118328" fg:w="14620977"/><text x="83.5363%" y="2511.50">&lt;&amp;mut se..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13,576,467 samples, 5.80%)</title><rect x="83.7322%" y="2485" width="5.7951%" height="15" fill="rgb(252,155,4)" fg:x="196162838" fg:w="13576467"/><text x="83.9822%" y="2495.50">&lt;serde_..</text></g><g><title>serde::de::MapAccess::next_entry (13,576,467 samples, 5.80%)</title><rect x="83.7322%" y="2469" width="5.7951%" height="15" fill="rgb(212,69,32)" fg:x="196162838" fg:w="13576467"/><text x="83.9822%" y="2479.50">serde::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (13,576,467 samples, 5.80%)</title><rect x="83.7322%" y="2453" width="5.7951%" height="15" fill="rgb(243,107,47)" fg:x="196162838" fg:w="13576467"/><text x="83.9822%" y="2463.50">serde::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (13,576,467 samples, 5.80%)</title><rect x="83.7322%" y="2437" width="5.7951%" height="15" fill="rgb(247,130,12)" fg:x="196162838" fg:w="13576467"/><text x="83.9822%" y="2447.50">&lt;serde_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13,576,467 samples, 5.80%)</title><rect x="83.7322%" y="2421" width="5.7951%" height="15" fill="rgb(233,74,16)" fg:x="196162838" fg:w="13576467"/><text x="83.9822%" y="2431.50">&lt;core::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13,576,467 samples, 5.80%)</title><rect x="83.7322%" y="2405" width="5.7951%" height="15" fill="rgb(208,58,18)" fg:x="196162838" fg:w="13576467"/><text x="83.9822%" y="2415.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13,576,467 samples, 5.80%)</title><rect x="83.7322%" y="2389" width="5.7951%" height="15" fill="rgb(242,225,1)" fg:x="196162838" fg:w="13576467"/><text x="83.9822%" y="2399.50">&lt;&amp;mut s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (13,576,467 samples, 5.80%)</title><rect x="83.7322%" y="2373" width="5.7951%" height="15" fill="rgb(249,39,40)" fg:x="196162838" fg:w="13576467"/><text x="83.9822%" y="2383.50">&lt;serde_..</text></g><g><title>serde::de::SeqAccess::next_element (13,576,467 samples, 5.80%)</title><rect x="83.7322%" y="2357" width="5.7951%" height="15" fill="rgb(207,72,44)" fg:x="196162838" fg:w="13576467"/><text x="83.9822%" y="2367.50">serde::..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (13,576,467 samples, 5.80%)</title><rect x="83.7322%" y="2341" width="5.7951%" height="15" fill="rgb(215,193,12)" fg:x="196162838" fg:w="13576467"/><text x="83.9822%" y="2351.50">&lt;serde_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13,576,467 samples, 5.80%)</title><rect x="83.7322%" y="2325" width="5.7951%" height="15" fill="rgb(248,41,39)" fg:x="196162838" fg:w="13576467"/><text x="83.9822%" y="2335.50">&lt;core::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13,576,467 samples, 5.80%)</title><rect x="83.7322%" y="2309" width="5.7951%" height="15" fill="rgb(253,85,4)" fg:x="196162838" fg:w="13576467"/><text x="83.9822%" y="2319.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13,576,467 samples, 5.80%)</title><rect x="83.7322%" y="2293" width="5.7951%" height="15" fill="rgb(243,70,31)" fg:x="196162838" fg:w="13576467"/><text x="83.9822%" y="2303.50">&lt;&amp;mut s..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::end_map (937,113 samples, 0.40%)</title><rect x="89.1273%" y="2277" width="0.4000%" height="15" fill="rgb(253,195,26)" fg:x="208802192" fg:w="937113"/><text x="89.3773%" y="2287.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (937,113 samples, 0.40%)</title><rect x="89.1273%" y="2261" width="0.4000%" height="15" fill="rgb(243,42,11)" fg:x="208802192" fg:w="937113"/><text x="89.3773%" y="2271.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (937,113 samples, 0.40%)</title><rect x="89.1273%" y="2245" width="0.4000%" height="15" fill="rgb(239,66,17)" fg:x="208802192" fg:w="937113"/><text x="89.3773%" y="2255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (937,113 samples, 0.40%)</title><rect x="89.1273%" y="2229" width="0.4000%" height="15" fill="rgb(217,132,21)" fg:x="208802192" fg:w="937113"/><text x="89.3773%" y="2239.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (937,113 samples, 0.40%)</title><rect x="89.1273%" y="2213" width="0.4000%" height="15" fill="rgb(252,202,21)" fg:x="208802192" fg:w="937113"/><text x="89.3773%" y="2223.50"></text></g><g><title>serde::de::MapAccess::next_entry (16,442,104 samples, 7.02%)</title><rect x="82.8007%" y="2677" width="7.0183%" height="15" fill="rgb(233,98,36)" fg:x="193980739" fg:w="16442104"/><text x="83.0507%" y="2687.50">serde::de..</text></g><g><title>serde::de::MapAccess::next_entry_seed (16,442,104 samples, 7.02%)</title><rect x="82.8007%" y="2661" width="7.0183%" height="15" fill="rgb(216,153,54)" fg:x="193980739" fg:w="16442104"/><text x="83.0507%" y="2671.50">serde::de..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (16,442,104 samples, 7.02%)</title><rect x="82.8007%" y="2645" width="7.0183%" height="15" fill="rgb(250,99,7)" fg:x="193980739" fg:w="16442104"/><text x="83.0507%" y="2655.50">&lt;serde_js..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (16,442,104 samples, 7.02%)</title><rect x="82.8007%" y="2629" width="7.0183%" height="15" fill="rgb(207,56,50)" fg:x="193980739" fg:w="16442104"/><text x="83.0507%" y="2639.50">&lt;core::ma..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (16,442,104 samples, 7.02%)</title><rect x="82.8007%" y="2613" width="7.0183%" height="15" fill="rgb(244,61,34)" fg:x="193980739" fg:w="16442104"/><text x="83.0507%" y="2623.50">serde_jso..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16,442,104 samples, 7.02%)</title><rect x="82.8007%" y="2597" width="7.0183%" height="15" fill="rgb(241,50,38)" fg:x="193980739" fg:w="16442104"/><text x="83.0507%" y="2607.50">&lt;&amp;mut ser..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (683,538 samples, 0.29%)</title><rect x="89.5273%" y="2581" width="0.2918%" height="15" fill="rgb(212,166,30)" fg:x="209739305" fg:w="683538"/><text x="89.7773%" y="2591.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (683,538 samples, 0.29%)</title><rect x="89.5273%" y="2565" width="0.2918%" height="15" fill="rgb(249,127,32)" fg:x="209739305" fg:w="683538"/><text x="89.7773%" y="2575.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (683,538 samples, 0.29%)</title><rect x="89.5273%" y="2549" width="0.2918%" height="15" fill="rgb(209,103,0)" fg:x="209739305" fg:w="683538"/><text x="89.7773%" y="2559.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (683,538 samples, 0.29%)</title><rect x="89.5273%" y="2533" width="0.2918%" height="15" fill="rgb(238,209,51)" fg:x="209739305" fg:w="683538"/><text x="89.7773%" y="2543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (683,538 samples, 0.29%)</title><rect x="89.5273%" y="2517" width="0.2918%" height="15" fill="rgb(237,56,23)" fg:x="209739305" fg:w="683538"/><text x="89.7773%" y="2527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (683,538 samples, 0.29%)</title><rect x="89.5273%" y="2501" width="0.2918%" height="15" fill="rgb(215,153,46)" fg:x="209739305" fg:w="683538"/><text x="89.7773%" y="2511.50"></text></g><g><title>alloc::slice::hack::to_vec (683,538 samples, 0.29%)</title><rect x="89.5273%" y="2485" width="0.2918%" height="15" fill="rgb(224,49,31)" fg:x="209739305" fg:w="683538"/><text x="89.7773%" y="2495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (683,538 samples, 0.29%)</title><rect x="89.5273%" y="2469" width="0.2918%" height="15" fill="rgb(250,18,42)" fg:x="209739305" fg:w="683538"/><text x="89.7773%" y="2479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (683,538 samples, 0.29%)</title><rect x="89.5273%" y="2453" width="0.2918%" height="15" fill="rgb(215,176,39)" fg:x="209739305" fg:w="683538"/><text x="89.7773%" y="2463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (683,538 samples, 0.29%)</title><rect x="89.5273%" y="2437" width="0.2918%" height="15" fill="rgb(223,77,29)" fg:x="209739305" fg:w="683538"/><text x="89.7773%" y="2447.50"></text></g><g><title>[libc.so.6] (683,538 samples, 0.29%)</title><rect x="89.5273%" y="2421" width="0.2918%" height="15" fill="rgb(234,94,52)" fg:x="209739305" fg:w="683538"/><text x="89.7773%" y="2431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19,421,280 samples, 8.29%)</title><rect x="81.9133%" y="2901" width="8.2900%" height="15" fill="rgb(220,154,50)" fg:x="191901609" fg:w="19421280"/><text x="82.1633%" y="2911.50">&lt;serde_json:..</text></g><g><title>serde::de::MapAccess::next_entry (19,421,280 samples, 8.29%)</title><rect x="81.9133%" y="2885" width="8.2900%" height="15" fill="rgb(212,11,10)" fg:x="191901609" fg:w="19421280"/><text x="82.1633%" y="2895.50">serde::de::M..</text></g><g><title>serde::de::MapAccess::next_entry_seed (19,421,280 samples, 8.29%)</title><rect x="81.9133%" y="2869" width="8.2900%" height="15" fill="rgb(205,166,19)" fg:x="191901609" fg:w="19421280"/><text x="82.1633%" y="2879.50">serde::de::M..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (17,342,150 samples, 7.40%)</title><rect x="82.8007%" y="2853" width="7.4025%" height="15" fill="rgb(244,198,16)" fg:x="193980739" fg:w="17342150"/><text x="83.0507%" y="2863.50">&lt;serde_jso..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17,342,150 samples, 7.40%)</title><rect x="82.8007%" y="2837" width="7.4025%" height="15" fill="rgb(219,69,12)" fg:x="193980739" fg:w="17342150"/><text x="83.0507%" y="2847.50">&lt;core::mar..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,342,150 samples, 7.40%)</title><rect x="82.8007%" y="2821" width="7.4025%" height="15" fill="rgb(245,30,7)" fg:x="193980739" fg:w="17342150"/><text x="83.0507%" y="2831.50">serde_json..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,342,150 samples, 7.40%)</title><rect x="82.8007%" y="2805" width="7.4025%" height="15" fill="rgb(218,221,48)" fg:x="193980739" fg:w="17342150"/><text x="83.0507%" y="2815.50">&lt;&amp;mut serd..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (17,342,150 samples, 7.40%)</title><rect x="82.8007%" y="2789" width="7.4025%" height="15" fill="rgb(216,66,15)" fg:x="193980739" fg:w="17342150"/><text x="83.0507%" y="2799.50">&lt;serde_jso..</text></g><g><title>serde::de::SeqAccess::next_element (17,342,150 samples, 7.40%)</title><rect x="82.8007%" y="2773" width="7.4025%" height="15" fill="rgb(226,122,50)" fg:x="193980739" fg:w="17342150"/><text x="83.0507%" y="2783.50">serde::de:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (17,342,150 samples, 7.40%)</title><rect x="82.8007%" y="2757" width="7.4025%" height="15" fill="rgb(239,156,16)" fg:x="193980739" fg:w="17342150"/><text x="83.0507%" y="2767.50">&lt;serde_jso..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17,342,150 samples, 7.40%)</title><rect x="82.8007%" y="2741" width="7.4025%" height="15" fill="rgb(224,27,38)" fg:x="193980739" fg:w="17342150"/><text x="83.0507%" y="2751.50">&lt;core::mar..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,342,150 samples, 7.40%)</title><rect x="82.8007%" y="2725" width="7.4025%" height="15" fill="rgb(224,39,27)" fg:x="193980739" fg:w="17342150"/><text x="83.0507%" y="2735.50">serde_json..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,342,150 samples, 7.40%)</title><rect x="82.8007%" y="2709" width="7.4025%" height="15" fill="rgb(215,92,29)" fg:x="193980739" fg:w="17342150"/><text x="83.0507%" y="2719.50">&lt;&amp;mut serd..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17,342,150 samples, 7.40%)</title><rect x="82.8007%" y="2693" width="7.4025%" height="15" fill="rgb(207,159,16)" fg:x="193980739" fg:w="17342150"/><text x="83.0507%" y="2703.50">&lt;serde_jso..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (900,046 samples, 0.38%)</title><rect x="89.8190%" y="2677" width="0.3842%" height="15" fill="rgb(238,163,47)" fg:x="210422843" fg:w="900046"/><text x="90.0690%" y="2687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (900,046 samples, 0.38%)</title><rect x="89.8190%" y="2661" width="0.3842%" height="15" fill="rgb(219,91,49)" fg:x="210422843" fg:w="900046"/><text x="90.0690%" y="2671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (900,046 samples, 0.38%)</title><rect x="89.8190%" y="2645" width="0.3842%" height="15" fill="rgb(227,167,31)" fg:x="210422843" fg:w="900046"/><text x="90.0690%" y="2655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (900,046 samples, 0.38%)</title><rect x="89.8190%" y="2629" width="0.3842%" height="15" fill="rgb(234,80,54)" fg:x="210422843" fg:w="900046"/><text x="90.0690%" y="2639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,099,565 samples, 0.47%)</title><rect x="90.2032%" y="2885" width="0.4693%" height="15" fill="rgb(212,114,2)" fg:x="211322889" fg:w="1099565"/><text x="90.4532%" y="2895.50"></text></g><g><title>core::ptr::write (1,099,565 samples, 0.47%)</title><rect x="90.2032%" y="2869" width="0.4693%" height="15" fill="rgb(234,50,24)" fg:x="211322889" fg:w="1099565"/><text x="90.4532%" y="2879.50"></text></g><g><title>serde_json::de::from_str (22,645,027 samples, 9.67%)</title><rect x="81.9133%" y="3077" width="9.6660%" height="15" fill="rgb(221,68,8)" fg:x="191901609" fg:w="22645027"/><text x="82.1633%" y="3087.50">serde_json::de..</text></g><g><title>serde_json::de::from_trait (22,645,027 samples, 9.67%)</title><rect x="81.9133%" y="3061" width="9.6660%" height="15" fill="rgb(254,180,31)" fg:x="191901609" fg:w="22645027"/><text x="82.1633%" y="3071.50">serde_json::de..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (22,645,027 samples, 9.67%)</title><rect x="81.9133%" y="3045" width="9.6660%" height="15" fill="rgb(247,130,50)" fg:x="191901609" fg:w="22645027"/><text x="82.1633%" y="3055.50">serde_json::va..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22,645,027 samples, 9.67%)</title><rect x="81.9133%" y="3029" width="9.6660%" height="15" fill="rgb(211,109,4)" fg:x="191901609" fg:w="22645027"/><text x="82.1633%" y="3039.50">&lt;&amp;mut serde_js..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22,645,027 samples, 9.67%)</title><rect x="81.9133%" y="3013" width="9.6660%" height="15" fill="rgb(238,50,21)" fg:x="191901609" fg:w="22645027"/><text x="82.1633%" y="3023.50">&lt;serde_json::v..</text></g><g><title>serde::de::MapAccess::next_entry (22,645,027 samples, 9.67%)</title><rect x="81.9133%" y="2997" width="9.6660%" height="15" fill="rgb(225,57,45)" fg:x="191901609" fg:w="22645027"/><text x="82.1633%" y="3007.50">serde::de::Map..</text></g><g><title>serde::de::MapAccess::next_entry_seed (22,645,027 samples, 9.67%)</title><rect x="81.9133%" y="2981" width="9.6660%" height="15" fill="rgb(209,196,50)" fg:x="191901609" fg:w="22645027"/><text x="82.1633%" y="2991.50">serde::de::Map..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (22,645,027 samples, 9.67%)</title><rect x="81.9133%" y="2965" width="9.6660%" height="15" fill="rgb(242,140,13)" fg:x="191901609" fg:w="22645027"/><text x="82.1633%" y="2975.50">&lt;serde_json::d..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (22,645,027 samples, 9.67%)</title><rect x="81.9133%" y="2949" width="9.6660%" height="15" fill="rgb(217,111,7)" fg:x="191901609" fg:w="22645027"/><text x="82.1633%" y="2959.50">&lt;core::marker:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (22,645,027 samples, 9.67%)</title><rect x="81.9133%" y="2933" width="9.6660%" height="15" fill="rgb(253,193,51)" fg:x="191901609" fg:w="22645027"/><text x="82.1633%" y="2943.50">serde_json::va..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22,645,027 samples, 9.67%)</title><rect x="81.9133%" y="2917" width="9.6660%" height="15" fill="rgb(252,70,29)" fg:x="191901609" fg:w="22645027"/><text x="82.1633%" y="2927.50">&lt;&amp;mut serde_js..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,223,747 samples, 1.38%)</title><rect x="90.2032%" y="2901" width="1.3761%" height="15" fill="rgb(232,127,12)" fg:x="211322889" fg:w="3223747"/><text x="90.4532%" y="2911.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,124,182 samples, 0.91%)</title><rect x="90.6726%" y="2885" width="0.9067%" height="15" fill="rgb(211,180,21)" fg:x="212422454" fg:w="2124182"/><text x="90.9226%" y="2895.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,124,182 samples, 0.91%)</title><rect x="90.6726%" y="2869" width="0.9067%" height="15" fill="rgb(229,72,13)" fg:x="212422454" fg:w="2124182"/><text x="90.9226%" y="2879.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,079,892 samples, 0.46%)</title><rect x="91.1183%" y="2853" width="0.4610%" height="15" fill="rgb(240,211,49)" fg:x="213466744" fg:w="1079892"/><text x="91.3683%" y="2863.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,079,892 samples, 0.46%)</title><rect x="91.1183%" y="2837" width="0.4610%" height="15" fill="rgb(219,149,40)" fg:x="213466744" fg:w="1079892"/><text x="91.3683%" y="2847.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,079,892 samples, 0.46%)</title><rect x="91.1183%" y="2821" width="0.4610%" height="15" fill="rgb(210,127,46)" fg:x="213466744" fg:w="1079892"/><text x="91.3683%" y="2831.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1,079,892 samples, 0.46%)</title><rect x="91.1183%" y="2805" width="0.4610%" height="15" fill="rgb(220,106,7)" fg:x="213466744" fg:w="1079892"/><text x="91.3683%" y="2815.50"></text></g><g><title>benchmark::parse_web_layout_trace (25,305,174 samples, 10.80%)</title><rect x="80.9918%" y="3093" width="10.8015%" height="15" fill="rgb(249,31,22)" fg:x="189742966" fg:w="25305174"/><text x="81.2418%" y="3103.50">benchmark::parse..</text></g><g><title>std::fs::read_to_string (501,504 samples, 0.21%)</title><rect x="91.5793%" y="3077" width="0.2141%" height="15" fill="rgb(253,1,49)" fg:x="214546636" fg:w="501504"/><text x="91.8293%" y="3087.50"></text></g><g><title>std::fs::read_to_string::inner (501,504 samples, 0.21%)</title><rect x="91.5793%" y="3061" width="0.2141%" height="15" fill="rgb(227,144,33)" fg:x="214546636" fg:w="501504"/><text x="91.8293%" y="3071.50"></text></g><g><title>std::io::default_read_to_string (501,504 samples, 0.21%)</title><rect x="91.5793%" y="3045" width="0.2141%" height="15" fill="rgb(249,163,44)" fg:x="214546636" fg:w="501504"/><text x="91.8293%" y="3055.50"></text></g><g><title>std::io::append_to_string (501,504 samples, 0.21%)</title><rect x="91.5793%" y="3029" width="0.2141%" height="15" fill="rgb(234,15,39)" fg:x="214546636" fg:w="501504"/><text x="91.8293%" y="3039.50"></text></g><g><title>std::io::default_read_to_string::_{{closure}} (501,504 samples, 0.21%)</title><rect x="91.5793%" y="3013" width="0.2141%" height="15" fill="rgb(207,66,16)" fg:x="214546636" fg:w="501504"/><text x="91.8293%" y="3023.50"></text></g><g><title>std::io::default_read_to_end (501,504 samples, 0.21%)</title><rect x="91.5793%" y="2997" width="0.2141%" height="15" fill="rgb(233,112,24)" fg:x="214546636" fg:w="501504"/><text x="91.8293%" y="3007.50"></text></g><g><title>std::io::default_read_to_end::small_probe_read (501,504 samples, 0.21%)</title><rect x="91.5793%" y="2981" width="0.2141%" height="15" fill="rgb(230,90,22)" fg:x="214546636" fg:w="501504"/><text x="91.8293%" y="2991.50"></text></g><g><title>core::mem::drop (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="2069" width="0.5349%" height="15" fill="rgb(229,61,13)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="2053" width="0.5349%" height="15" fill="rgb(225,57,24)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="2063.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="2037" width="0.5349%" height="15" fill="rgb(208,169,48)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="2047.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="2021" width="0.5349%" height="15" fill="rgb(244,218,51)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="2005" width="0.5349%" height="15" fill="rgb(214,148,10)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="2015.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1989" width="0.5349%" height="15" fill="rgb(225,174,27)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1999.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1973" width="0.5349%" height="15" fill="rgb(230,96,26)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1957" width="0.5349%" height="15" fill="rgb(232,10,30)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1941" width="0.5349%" height="15" fill="rgb(222,8,50)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1925" width="0.5349%" height="15" fill="rgb(213,81,27)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1909" width="0.5349%" height="15" fill="rgb(245,50,10)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1893" width="0.5349%" height="15" fill="rgb(216,100,18)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1877" width="0.5349%" height="15" fill="rgb(236,147,54)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1861" width="0.5349%" height="15" fill="rgb(205,143,26)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1845" width="0.5349%" height="15" fill="rgb(236,26,9)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1855.50"></text></g><g><title>core::mem::drop (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1829" width="0.5349%" height="15" fill="rgb(221,165,53)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1813" width="0.5349%" height="15" fill="rgb(214,110,17)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1797" width="0.5349%" height="15" fill="rgb(237,197,12)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1807.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1781" width="0.5349%" height="15" fill="rgb(205,84,17)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1765" width="0.5349%" height="15" fill="rgb(237,18,45)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1775.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1749" width="0.5349%" height="15" fill="rgb(221,87,14)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1759.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1733" width="0.5349%" height="15" fill="rgb(238,186,15)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1717" width="0.5349%" height="15" fill="rgb(208,115,11)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1701" width="0.5349%" height="15" fill="rgb(254,175,0)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1685" width="0.5349%" height="15" fill="rgb(227,24,42)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1669" width="0.5349%" height="15" fill="rgb(223,211,37)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1679.50"></text></g><g><title>core::mem::drop (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1653" width="0.5349%" height="15" fill="rgb(235,49,27)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1637" width="0.5349%" height="15" fill="rgb(254,97,51)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1647.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1621" width="0.5349%" height="15" fill="rgb(249,51,40)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1631.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1605" width="0.5349%" height="15" fill="rgb(210,128,45)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1615.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1589" width="0.5349%" height="15" fill="rgb(224,137,50)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1599.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1573" width="0.5349%" height="15" fill="rgb(242,15,9)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1583.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1557" width="0.5349%" height="15" fill="rgb(233,187,41)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1541" width="0.5349%" height="15" fill="rgb(227,2,29)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1551.50"></text></g><g><title>alloc::alloc::dealloc (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1525" width="0.5349%" height="15" fill="rgb(222,70,3)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1535.50"></text></g><g><title>cfree (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1509" width="0.5349%" height="15" fill="rgb(213,11,42)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1519.50"></text></g><g><title>[libc.so.6] (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1493" width="0.5349%" height="15" fill="rgb(225,150,9)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1503.50"></text></g><g><title>[libc.so.6] (1,253,168 samples, 0.53%)</title><rect x="91.7934%" y="1477" width="0.5349%" height="15" fill="rgb(230,162,45)" fg:x="215048140" fg:w="1253168"/><text x="92.0434%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,515,390 samples, 1.07%)</title><rect x="91.7934%" y="2181" width="1.0737%" height="15" fill="rgb(222,14,52)" fg:x="215048140" fg:w="2515390"/><text x="92.0434%" y="2191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,515,390 samples, 1.07%)</title><rect x="91.7934%" y="2165" width="1.0737%" height="15" fill="rgb(254,198,14)" fg:x="215048140" fg:w="2515390"/><text x="92.0434%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,515,390 samples, 1.07%)</title><rect x="91.7934%" y="2149" width="1.0737%" height="15" fill="rgb(220,217,30)" fg:x="215048140" fg:w="2515390"/><text x="92.0434%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,515,390 samples, 1.07%)</title><rect x="91.7934%" y="2133" width="1.0737%" height="15" fill="rgb(215,146,41)" fg:x="215048140" fg:w="2515390"/><text x="92.0434%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,515,390 samples, 1.07%)</title><rect x="91.7934%" y="2117" width="1.0737%" height="15" fill="rgb(217,27,36)" fg:x="215048140" fg:w="2515390"/><text x="92.0434%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,515,390 samples, 1.07%)</title><rect x="91.7934%" y="2101" width="1.0737%" height="15" fill="rgb(219,218,39)" fg:x="215048140" fg:w="2515390"/><text x="92.0434%" y="2111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,515,390 samples, 1.07%)</title><rect x="91.7934%" y="2085" width="1.0737%" height="15" fill="rgb(219,4,42)" fg:x="215048140" fg:w="2515390"/><text x="92.0434%" y="2095.50"></text></g><g><title>core::ptr::read (1,262,222 samples, 0.54%)</title><rect x="92.3283%" y="2069" width="0.5388%" height="15" fill="rgb(249,119,36)" fg:x="216301308" fg:w="1262222"/><text x="92.5783%" y="2079.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="3077" width="1.5995%" height="15" fill="rgb(209,23,33)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="3061" width="1.5995%" height="15" fill="rgb(211,10,0)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="3045" width="1.5995%" height="15" fill="rgb(208,99,37)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="3055.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="3029" width="1.5995%" height="15" fill="rgb(213,132,31)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="3039.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="3013" width="1.5995%" height="15" fill="rgb(243,129,40)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="3023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2997" width="1.5995%" height="15" fill="rgb(210,66,33)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="3007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2981" width="1.5995%" height="15" fill="rgb(209,189,4)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2991.50"></text></g><g><title>core::mem::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2965" width="1.5995%" height="15" fill="rgb(214,107,37)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2949" width="1.5995%" height="15" fill="rgb(245,88,54)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2959.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2933" width="1.5995%" height="15" fill="rgb(205,146,20)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2943.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2917" width="1.5995%" height="15" fill="rgb(220,161,25)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2901" width="1.5995%" height="15" fill="rgb(215,152,15)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2911.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2885" width="1.5995%" height="15" fill="rgb(233,192,44)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2869" width="1.5995%" height="15" fill="rgb(240,170,46)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2853" width="1.5995%" height="15" fill="rgb(207,104,33)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2837" width="1.5995%" height="15" fill="rgb(219,21,39)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2821" width="1.5995%" height="15" fill="rgb(214,133,29)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2831.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2805" width="1.5995%" height="15" fill="rgb(226,93,6)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2815.50"></text></g><g><title>core::mem::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2789" width="1.5995%" height="15" fill="rgb(252,222,34)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2773" width="1.5995%" height="15" fill="rgb(252,92,48)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2783.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2757" width="1.5995%" height="15" fill="rgb(245,223,24)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2767.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2741" width="1.5995%" height="15" fill="rgb(205,176,3)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2725" width="1.5995%" height="15" fill="rgb(235,151,15)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2735.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2709" width="1.5995%" height="15" fill="rgb(237,209,11)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2719.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2693" width="1.5995%" height="15" fill="rgb(243,227,24)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2677" width="1.5995%" height="15" fill="rgb(239,193,16)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2661" width="1.5995%" height="15" fill="rgb(231,27,9)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2645" width="1.5995%" height="15" fill="rgb(219,169,10)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2629" width="1.5995%" height="15" fill="rgb(244,229,43)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2613" width="1.5995%" height="15" fill="rgb(254,38,20)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2597" width="1.5995%" height="15" fill="rgb(250,47,30)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2581" width="1.5995%" height="15" fill="rgb(224,124,36)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2565" width="1.5995%" height="15" fill="rgb(246,68,51)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2575.50"></text></g><g><title>core::mem::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2549" width="1.5995%" height="15" fill="rgb(253,43,49)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2533" width="1.5995%" height="15" fill="rgb(219,54,36)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2517" width="1.5995%" height="15" fill="rgb(227,133,34)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2501" width="1.5995%" height="15" fill="rgb(247,227,15)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2485" width="1.5995%" height="15" fill="rgb(229,96,14)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2495.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2469" width="1.5995%" height="15" fill="rgb(220,79,17)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2479.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2453" width="1.5995%" height="15" fill="rgb(205,131,53)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2437" width="1.5995%" height="15" fill="rgb(209,50,29)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2421" width="1.5995%" height="15" fill="rgb(245,86,46)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2405" width="1.5995%" height="15" fill="rgb(235,66,46)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2389" width="1.5995%" height="15" fill="rgb(232,148,31)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2373" width="1.5995%" height="15" fill="rgb(217,149,8)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2357" width="1.5995%" height="15" fill="rgb(209,183,11)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2341" width="1.5995%" height="15" fill="rgb(208,55,20)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2325" width="1.5995%" height="15" fill="rgb(218,39,14)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2335.50"></text></g><g><title>core::mem::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2309" width="1.5995%" height="15" fill="rgb(216,169,33)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2293" width="1.5995%" height="15" fill="rgb(233,80,24)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2277" width="1.5995%" height="15" fill="rgb(213,179,31)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2261" width="1.5995%" height="15" fill="rgb(209,19,5)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2245" width="1.5995%" height="15" fill="rgb(219,18,35)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2255.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2229" width="1.5995%" height="15" fill="rgb(209,169,16)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2239.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2213" width="1.5995%" height="15" fill="rgb(245,90,51)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,747,161 samples, 1.60%)</title><rect x="91.7934%" y="2197" width="1.5995%" height="15" fill="rgb(220,99,45)" fg:x="215048140" fg:w="3747161"/><text x="92.0434%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,231,771 samples, 0.53%)</title><rect x="92.8670%" y="2181" width="0.5258%" height="15" fill="rgb(249,89,25)" fg:x="217563530" fg:w="1231771"/><text x="93.1170%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,231,771 samples, 0.53%)</title><rect x="92.8670%" y="2165" width="0.5258%" height="15" fill="rgb(239,193,0)" fg:x="217563530" fg:w="1231771"/><text x="93.1170%" y="2175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,231,771 samples, 0.53%)</title><rect x="92.8670%" y="2149" width="0.5258%" height="15" fill="rgb(231,126,1)" fg:x="217563530" fg:w="1231771"/><text x="93.1170%" y="2159.50"></text></g><g><title>core::mem::drop (1,231,771 samples, 0.53%)</title><rect x="92.8670%" y="2133" width="0.5258%" height="15" fill="rgb(243,166,3)" fg:x="217563530" fg:w="1231771"/><text x="93.1170%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,231,771 samples, 0.53%)</title><rect x="92.8670%" y="2117" width="0.5258%" height="15" fill="rgb(223,22,34)" fg:x="217563530" fg:w="1231771"/><text x="93.1170%" y="2127.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,231,771 samples, 0.53%)</title><rect x="92.8670%" y="2101" width="0.5258%" height="15" fill="rgb(251,52,51)" fg:x="217563530" fg:w="1231771"/><text x="93.1170%" y="2111.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,231,771 samples, 0.53%)</title><rect x="92.8670%" y="2085" width="0.5258%" height="15" fill="rgb(221,165,28)" fg:x="217563530" fg:w="1231771"/><text x="93.1170%" y="2095.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,231,771 samples, 0.53%)</title><rect x="92.8670%" y="2069" width="0.5258%" height="15" fill="rgb(218,121,47)" fg:x="217563530" fg:w="1231771"/><text x="93.1170%" y="2079.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,231,771 samples, 0.53%)</title><rect x="92.8670%" y="2053" width="0.5258%" height="15" fill="rgb(209,120,9)" fg:x="217563530" fg:w="1231771"/><text x="93.1170%" y="2063.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,231,771 samples, 0.53%)</title><rect x="92.8670%" y="2037" width="0.5258%" height="15" fill="rgb(236,68,12)" fg:x="217563530" fg:w="1231771"/><text x="93.1170%" y="2047.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,231,771 samples, 0.53%)</title><rect x="92.8670%" y="2021" width="0.5258%" height="15" fill="rgb(225,194,26)" fg:x="217563530" fg:w="1231771"/><text x="93.1170%" y="2031.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,231,771 samples, 0.53%)</title><rect x="92.8670%" y="2005" width="0.5258%" height="15" fill="rgb(231,84,39)" fg:x="217563530" fg:w="1231771"/><text x="93.1170%" y="2015.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,231,771 samples, 0.53%)</title><rect x="92.8670%" y="1989" width="0.5258%" height="15" fill="rgb(210,11,45)" fg:x="217563530" fg:w="1231771"/><text x="93.1170%" y="1999.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,231,771 samples, 0.53%)</title><rect x="92.8670%" y="1973" width="0.5258%" height="15" fill="rgb(224,54,52)" fg:x="217563530" fg:w="1231771"/><text x="93.1170%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (10,118,983 samples, 4.32%)</title><rect x="91.7934%" y="3093" width="4.3193%" height="15" fill="rgb(238,102,14)" fg:x="215048140" fg:w="10118983"/><text x="92.0434%" y="3103.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (6,371,822 samples, 2.72%)</title><rect x="93.3928%" y="3077" width="2.7198%" height="15" fill="rgb(243,160,52)" fg:x="218795301" fg:w="6371822"/><text x="93.6428%" y="3087.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,371,822 samples, 2.72%)</title><rect x="93.3928%" y="3061" width="2.7198%" height="15" fill="rgb(216,114,19)" fg:x="218795301" fg:w="6371822"/><text x="93.6428%" y="3071.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,371,822 samples, 2.72%)</title><rect x="93.3928%" y="3045" width="2.7198%" height="15" fill="rgb(244,166,37)" fg:x="218795301" fg:w="6371822"/><text x="93.6428%" y="3055.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,371,822 samples, 2.72%)</title><rect x="93.3928%" y="3029" width="2.7198%" height="15" fill="rgb(246,29,44)" fg:x="218795301" fg:w="6371822"/><text x="93.6428%" y="3039.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (6,371,822 samples, 2.72%)</title><rect x="93.3928%" y="3013" width="2.7198%" height="15" fill="rgb(215,56,53)" fg:x="218795301" fg:w="6371822"/><text x="93.6428%" y="3023.50">al..</text></g><g><title>cfree (6,371,822 samples, 2.72%)</title><rect x="93.3928%" y="2997" width="2.7198%" height="15" fill="rgb(217,60,2)" fg:x="218795301" fg:w="6371822"/><text x="93.6428%" y="3007.50">cf..</text></g><g><title>[libc.so.6] (6,371,822 samples, 2.72%)</title><rect x="93.3928%" y="2981" width="2.7198%" height="15" fill="rgb(207,26,24)" fg:x="218795301" fg:w="6371822"/><text x="93.6428%" y="2991.50">[l..</text></g><g><title>[libc.so.6] (6,371,822 samples, 2.72%)</title><rect x="93.3928%" y="2965" width="2.7198%" height="15" fill="rgb(252,210,15)" fg:x="218795301" fg:w="6371822"/><text x="93.6428%" y="2975.50">[l..</text></g><g><title>[libc.so.6] (1,269,326 samples, 0.54%)</title><rect x="95.5708%" y="2949" width="0.5418%" height="15" fill="rgb(253,209,26)" fg:x="223897797" fg:w="1269326"/><text x="95.8208%" y="2959.50"></text></g><g><title>_start (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3381" width="91.4844%" height="15" fill="rgb(238,170,14)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3391.50">_start</text></g><g><title>__libc_start_main (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3365" width="91.4844%" height="15" fill="rgb(216,178,15)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3375.50">__libc_start_main</text></g><g><title>[libc.so.6] (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3349" width="91.4844%" height="15" fill="rgb(250,197,2)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3359.50">[libc.so.6]</text></g><g><title>main (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3333" width="91.4844%" height="15" fill="rgb(212,70,42)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3343.50">main</text></g><g><title>std::rt::lang_start_internal (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3317" width="91.4844%" height="15" fill="rgb(227,213,9)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3327.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3301" width="91.4844%" height="15" fill="rgb(245,99,25)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3311.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3285" width="91.4844%" height="15" fill="rgb(250,82,29)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3295.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3269" width="91.4844%" height="15" fill="rgb(241,226,54)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3279.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3253" width="91.4844%" height="15" fill="rgb(221,99,41)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3263.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3237" width="91.4844%" height="15" fill="rgb(213,90,21)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3247.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3221" width="91.4844%" height="15" fill="rgb(205,208,24)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3231.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3205" width="91.4844%" height="15" fill="rgb(246,31,12)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3215.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3189" width="91.4844%" height="15" fill="rgb(213,154,6)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3199.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3173" width="91.4844%" height="15" fill="rgb(222,163,29)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3183.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3157" width="91.4844%" height="15" fill="rgb(227,201,8)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3167.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3141" width="91.4844%" height="15" fill="rgb(233,9,32)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3151.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3125" width="91.4844%" height="15" fill="rgb(217,54,24)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3135.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (214,324,420 samples, 91.48%)</title><rect x="5.2004%" y="3109" width="91.4844%" height="15" fill="rgb(235,192,0)" fg:x="12183267" fg:w="214324420"/><text x="5.4504%" y="3119.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="3093" width="0.5722%" height="15" fill="rgb(235,45,9)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="3103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="3077" width="0.5722%" height="15" fill="rgb(246,42,40)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="3087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="3061" width="0.5722%" height="15" fill="rgb(248,111,24)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="3045" width="0.5722%" height="15" fill="rgb(249,65,22)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="3055.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="3029" width="0.5722%" height="15" fill="rgb(238,111,51)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="3039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="3013" width="0.5722%" height="15" fill="rgb(250,118,22)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="3023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2997" width="0.5722%" height="15" fill="rgb(234,84,26)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="3007.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2981" width="0.5722%" height="15" fill="rgb(243,172,12)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2965" width="0.5722%" height="15" fill="rgb(236,150,49)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2949" width="0.5722%" height="15" fill="rgb(225,197,26)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2933" width="0.5722%" height="15" fill="rgb(214,17,42)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2917" width="0.5722%" height="15" fill="rgb(224,165,40)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2901" width="0.5722%" height="15" fill="rgb(246,100,4)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2885" width="0.5722%" height="15" fill="rgb(222,103,0)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2869" width="0.5722%" height="15" fill="rgb(227,189,26)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2853" width="0.5722%" height="15" fill="rgb(214,202,17)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2837" width="0.5722%" height="15" fill="rgb(229,111,3)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2821" width="0.5722%" height="15" fill="rgb(229,172,15)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2805" width="0.5722%" height="15" fill="rgb(230,224,35)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2789" width="0.5722%" height="15" fill="rgb(251,141,6)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2773" width="0.5722%" height="15" fill="rgb(225,208,6)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2757" width="0.5722%" height="15" fill="rgb(246,181,16)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2741" width="0.5722%" height="15" fill="rgb(227,129,36)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2725" width="0.5722%" height="15" fill="rgb(248,117,24)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2709" width="0.5722%" height="15" fill="rgb(214,185,35)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2693" width="0.5722%" height="15" fill="rgb(236,150,34)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2677" width="0.5722%" height="15" fill="rgb(243,228,27)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2661" width="0.5722%" height="15" fill="rgb(245,77,44)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2645" width="0.5722%" height="15" fill="rgb(235,214,42)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2629" width="0.5722%" height="15" fill="rgb(221,74,3)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2613" width="0.5722%" height="15" fill="rgb(206,121,29)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2597" width="0.5722%" height="15" fill="rgb(249,131,53)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2581" width="0.5722%" height="15" fill="rgb(236,170,29)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2565" width="0.5722%" height="15" fill="rgb(247,96,15)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2549" width="0.5722%" height="15" fill="rgb(211,210,7)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2533" width="0.5722%" height="15" fill="rgb(240,88,50)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2517" width="0.5722%" height="15" fill="rgb(209,229,26)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2501" width="0.5722%" height="15" fill="rgb(210,68,23)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2485" width="0.5722%" height="15" fill="rgb(229,180,13)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2469" width="0.5722%" height="15" fill="rgb(236,53,44)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2453" width="0.5722%" height="15" fill="rgb(244,214,29)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2437" width="0.5722%" height="15" fill="rgb(220,75,29)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2421" width="0.5722%" height="15" fill="rgb(214,183,37)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2405" width="0.5722%" height="15" fill="rgb(239,117,29)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2389" width="0.5722%" height="15" fill="rgb(237,171,35)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2373" width="0.5722%" height="15" fill="rgb(229,178,53)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2357" width="0.5722%" height="15" fill="rgb(210,102,19)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2341" width="0.5722%" height="15" fill="rgb(235,127,22)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2325" width="0.5722%" height="15" fill="rgb(244,31,31)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2309" width="0.5722%" height="15" fill="rgb(231,43,21)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2293" width="0.5722%" height="15" fill="rgb(217,131,35)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2277" width="0.5722%" height="15" fill="rgb(221,149,4)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2261" width="0.5722%" height="15" fill="rgb(232,170,28)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2245" width="0.5722%" height="15" fill="rgb(238,56,10)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2229" width="0.5722%" height="15" fill="rgb(235,196,14)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2213" width="0.5722%" height="15" fill="rgb(216,45,48)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2197" width="0.5722%" height="15" fill="rgb(238,213,17)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2181" width="0.5722%" height="15" fill="rgb(212,13,2)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2165" width="0.5722%" height="15" fill="rgb(240,114,20)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2149" width="0.5722%" height="15" fill="rgb(228,41,40)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2133" width="0.5722%" height="15" fill="rgb(244,132,35)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2117" width="0.5722%" height="15" fill="rgb(253,189,4)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2101" width="0.5722%" height="15" fill="rgb(224,37,19)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2085" width="0.5722%" height="15" fill="rgb(235,223,18)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2069" width="0.5722%" height="15" fill="rgb(235,163,25)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2079.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2053" width="0.5722%" height="15" fill="rgb(217,145,28)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2063.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2037" width="0.5722%" height="15" fill="rgb(223,223,32)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2047.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2021" width="0.5722%" height="15" fill="rgb(227,189,39)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2031.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="2005" width="0.5722%" height="15" fill="rgb(248,10,22)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="2015.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="1989" width="0.5722%" height="15" fill="rgb(248,46,39)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="1999.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="1973" width="0.5722%" height="15" fill="rgb(248,113,48)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="1983.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1,340,564 samples, 0.57%)</title><rect x="96.1126%" y="1957" width="0.5722%" height="15" fill="rgb(245,16,25)" fg:x="225167123" fg:w="1340564"/><text x="96.3626%" y="1967.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (900,341 samples, 0.38%)</title><rect x="96.6849%" y="3381" width="0.3843%" height="15" fill="rgb(249,152,16)" fg:x="226507687" fg:w="900341"/><text x="96.9349%" y="3391.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (900,341 samples, 0.38%)</title><rect x="96.6849%" y="3365" width="0.3843%" height="15" fill="rgb(250,16,1)" fg:x="226507687" fg:w="900341"/><text x="96.9349%" y="3375.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (900,341 samples, 0.38%)</title><rect x="96.6849%" y="3349" width="0.3843%" height="15" fill="rgb(249,138,3)" fg:x="226507687" fg:w="900341"/><text x="96.9349%" y="3359.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (900,341 samples, 0.38%)</title><rect x="96.6849%" y="3333" width="0.3843%" height="15" fill="rgb(227,71,41)" fg:x="226507687" fg:w="900341"/><text x="96.9349%" y="3343.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (900,341 samples, 0.38%)</title><rect x="96.6849%" y="3317" width="0.3843%" height="15" fill="rgb(209,184,23)" fg:x="226507687" fg:w="900341"/><text x="96.9349%" y="3327.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (900,341 samples, 0.38%)</title><rect x="96.6849%" y="3301" width="0.3843%" height="15" fill="rgb(223,215,31)" fg:x="226507687" fg:w="900341"/><text x="96.9349%" y="3311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (900,341 samples, 0.38%)</title><rect x="96.6849%" y="3285" width="0.3843%" height="15" fill="rgb(210,146,28)" fg:x="226507687" fg:w="900341"/><text x="96.9349%" y="3295.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (900,341 samples, 0.38%)</title><rect x="96.6849%" y="3269" width="0.3843%" height="15" fill="rgb(209,183,41)" fg:x="226507687" fg:w="900341"/><text x="96.9349%" y="3279.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (900,341 samples, 0.38%)</title><rect x="96.6849%" y="3253" width="0.3843%" height="15" fill="rgb(209,224,45)" fg:x="226507687" fg:w="900341"/><text x="96.9349%" y="3263.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,228,263 samples, 0.52%)</title><rect x="97.0692%" y="3381" width="0.5243%" height="15" fill="rgb(224,209,51)" fg:x="227408028" fg:w="1228263"/><text x="97.3192%" y="3391.50"></text></g><g><title>benchmark::clear_dirty_flags (945,316 samples, 0.40%)</title><rect x="97.5935%" y="3381" width="0.4035%" height="15" fill="rgb(223,17,39)" fg:x="228636291" fg:w="945316"/><text x="97.8435%" y="3391.50"></text></g><g><title>cfree (2,715,989 samples, 1.16%)</title><rect x="97.9970%" y="3381" width="1.1593%" height="15" fill="rgb(234,204,37)" fg:x="229581607" fg:w="2715989"/><text x="98.2470%" y="3391.50"></text></g><g><title>all (234,274,197 samples, 100%)</title><rect x="0.0000%" y="3413" width="100.0000%" height="15" fill="rgb(236,120,5)" fg:x="0" fg:w="234274197"/><text x="0.2500%" y="3423.50"></text></g><g><title>benchmark (234,274,197 samples, 100.00%)</title><rect x="0.0000%" y="3397" width="100.0000%" height="15" fill="rgb(248,97,27)" fg:x="0" fg:w="234274197"/><text x="0.2500%" y="3407.50">benchmark</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,976,601 samples, 0.84%)</title><rect x="99.1563%" y="3381" width="0.8437%" height="15" fill="rgb(240,66,17)" fg:x="232297596" fg:w="1976601"/><text x="99.4063%" y="3391.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,976,601 samples, 0.84%)</title><rect x="99.1563%" y="3365" width="0.8437%" height="15" fill="rgb(210,79,3)" fg:x="232297596" fg:w="1976601"/><text x="99.4063%" y="3375.50"></text></g></svg></svg>