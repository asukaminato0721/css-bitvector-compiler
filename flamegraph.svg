<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2214" onload="init(evt)" viewBox="0 0 1200 2214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2214" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2197.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2197.00"> </text><svg id="frames" x="10" width="1180" total_samples="296444877"><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="2133" width="1.2587%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="2143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="2117" width="1.2587%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="2127.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="2101" width="1.2587%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="2111.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="2085" width="1.2587%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="2095.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="2069" width="1.2587%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="2079.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="2053" width="1.2587%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="2063.50"></text></g><g><title>main::benchmark::json_to_html_node::_{{closure}} (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="2037" width="1.2587%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="2047.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="2021" width="1.2587%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="2031.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="2005" width="1.2587%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="2015.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="1989" width="1.2587%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="1999.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="1973" width="1.2587%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="1983.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="1957" width="1.2587%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="1967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="1941" width="1.2587%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="1951.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="1925" width="1.2587%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="1935.50"></text></g><g><title>alloc::slice::hack::to_vec (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="1909" width="1.2587%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="1919.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="1893" width="1.2587%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="1903.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="1877" width="1.2587%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="1887.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,731,413 samples, 1.26%)</title><rect x="0.0000%" y="1861" width="1.2587%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="3731413"/><text x="0.2500%" y="1871.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (4,845,339 samples, 1.63%)</title><rect x="1.2587%" y="2133" width="1.6345%" height="15" fill="rgb(221,200,47)" fg:x="3731413" fg:w="4845339"/><text x="1.5087%" y="2143.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.17%)</title><rect x="2.8932%" y="2133" width="0.1692%" height="15" fill="rgb(226,26,5)" fg:x="8576752" fg:w="501504"/><text x="3.1432%" y="2143.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.17%)</title><rect x="2.8932%" y="2117" width="0.1692%" height="15" fill="rgb(249,33,26)" fg:x="8576752" fg:w="501504"/><text x="3.1432%" y="2127.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.17%)</title><rect x="2.8932%" y="2101" width="0.1692%" height="15" fill="rgb(235,183,28)" fg:x="8576752" fg:w="501504"/><text x="3.1432%" y="2111.50"></text></g><g><title>__cpu_indicator_init (501,504 samples, 0.17%)</title><rect x="2.8932%" y="2085" width="0.1692%" height="15" fill="rgb(221,5,38)" fg:x="8576752" fg:w="501504"/><text x="3.1432%" y="2095.50"></text></g><g><title>cpu_indicator_init (501,504 samples, 0.17%)</title><rect x="2.8932%" y="2069" width="0.1692%" height="15" fill="rgb(247,18,42)" fg:x="8576752" fg:w="501504"/><text x="3.1432%" y="2079.50"></text></g><g><title>get_available_features (501,504 samples, 0.17%)</title><rect x="2.8932%" y="2053" width="0.1692%" height="15" fill="rgb(241,131,45)" fg:x="8576752" fg:w="501504"/><text x="3.1432%" y="2063.50"></text></g><g><title>set_cpu_feature (501,504 samples, 0.17%)</title><rect x="2.8932%" y="2037" width="0.1692%" height="15" fill="rgb(249,31,29)" fg:x="8576752" fg:w="501504"/><text x="3.1432%" y="2047.50"></text></g><g><title>set_cpu_feature (501,504 samples, 0.17%)</title><rect x="2.8932%" y="2021" width="0.1692%" height="15" fill="rgb(225,111,53)" fg:x="8576752" fg:w="501504"/><text x="3.1432%" y="2031.50"></text></g><g><title>[libc.so.6] (9,144,818 samples, 3.08%)</title><rect x="3.0624%" y="2133" width="3.0848%" height="15" fill="rgb(238,160,17)" fg:x="9078256" fg:w="9144818"/><text x="3.3124%" y="2143.50">[li..</text></g><g><title>[main] (3,023,703 samples, 1.02%)</title><rect x="6.1472%" y="2133" width="1.0200%" height="15" fill="rgb(214,148,48)" fg:x="18223074" fg:w="3023703"/><text x="6.3972%" y="2143.50"></text></g><g><title>[libc.so.6] (3,023,703 samples, 1.02%)</title><rect x="6.1472%" y="2117" width="1.0200%" height="15" fill="rgb(232,36,49)" fg:x="18223074" fg:w="3023703"/><text x="6.3972%" y="2127.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,563,530 samples, 1.20%)</title><rect x="8.0095%" y="2117" width="1.2021%" height="15" fill="rgb(209,103,24)" fg:x="23743627" fg:w="3563530"/><text x="8.2595%" y="2127.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,563,530 samples, 1.20%)</title><rect x="8.0095%" y="2101" width="1.2021%" height="15" fill="rgb(229,88,8)" fg:x="23743627" fg:w="3563530"/><text x="8.2595%" y="2111.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,563,530 samples, 1.20%)</title><rect x="8.0095%" y="2085" width="1.2021%" height="15" fill="rgb(213,181,19)" fg:x="23743627" fg:w="3563530"/><text x="8.2595%" y="2095.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,563,530 samples, 1.20%)</title><rect x="8.0095%" y="2069" width="1.2021%" height="15" fill="rgb(254,191,54)" fg:x="23743627" fg:w="3563530"/><text x="8.2595%" y="2079.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,563,530 samples, 1.20%)</title><rect x="8.0095%" y="2053" width="1.2021%" height="15" fill="rgb(241,83,37)" fg:x="23743627" fg:w="3563530"/><text x="8.2595%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,563,530 samples, 1.20%)</title><rect x="8.0095%" y="2037" width="1.2021%" height="15" fill="rgb(233,36,39)" fg:x="23743627" fg:w="3563530"/><text x="8.2595%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,563,530 samples, 1.20%)</title><rect x="8.0095%" y="2021" width="1.2021%" height="15" fill="rgb(226,3,54)" fg:x="23743627" fg:w="3563530"/><text x="8.2595%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,563,530 samples, 1.20%)</title><rect x="8.0095%" y="2005" width="1.2021%" height="15" fill="rgb(245,192,40)" fg:x="23743627" fg:w="3563530"/><text x="8.2595%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,563,530 samples, 1.20%)</title><rect x="8.0095%" y="1989" width="1.2021%" height="15" fill="rgb(238,167,29)" fg:x="23743627" fg:w="3563530"/><text x="8.2595%" y="1999.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,563,530 samples, 1.20%)</title><rect x="8.0095%" y="1973" width="1.2021%" height="15" fill="rgb(232,182,51)" fg:x="23743627" fg:w="3563530"/><text x="8.2595%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,563,530 samples, 1.20%)</title><rect x="8.0095%" y="1957" width="1.2021%" height="15" fill="rgb(231,60,39)" fg:x="23743627" fg:w="3563530"/><text x="8.2595%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,563,530 samples, 1.20%)</title><rect x="8.0095%" y="1941" width="1.2021%" height="15" fill="rgb(208,69,12)" fg:x="23743627" fg:w="3563530"/><text x="8.2595%" y="1951.50"></text></g><g><title>alloc::alloc::dealloc (3,563,530 samples, 1.20%)</title><rect x="8.0095%" y="1925" width="1.2021%" height="15" fill="rgb(235,93,37)" fg:x="23743627" fg:w="3563530"/><text x="8.2595%" y="1935.50"></text></g><g><title>main::benchmark::count_nodes (18,855,121 samples, 6.36%)</title><rect x="9.2115%" y="2101" width="6.3604%" height="15" fill="rgb(213,116,39)" fg:x="27307157" fg:w="18855121"/><text x="9.4615%" y="2111.50">main::be..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,023,103 samples, 1.02%)</title><rect x="14.5522%" y="2085" width="1.0198%" height="15" fill="rgb(222,207,29)" fg:x="43139175" fg:w="3023103"/><text x="14.8022%" y="2095.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,023,103 samples, 1.02%)</title><rect x="14.5522%" y="2069" width="1.0198%" height="15" fill="rgb(206,96,30)" fg:x="43139175" fg:w="3023103"/><text x="14.8022%" y="2079.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,023,103 samples, 1.02%)</title><rect x="14.5522%" y="2053" width="1.0198%" height="15" fill="rgb(218,138,4)" fg:x="43139175" fg:w="3023103"/><text x="14.8022%" y="2063.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,023,103 samples, 1.02%)</title><rect x="14.5522%" y="2037" width="1.0198%" height="15" fill="rgb(250,191,14)" fg:x="43139175" fg:w="3023103"/><text x="14.8022%" y="2047.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,023,103 samples, 1.02%)</title><rect x="14.5522%" y="2021" width="1.0198%" height="15" fill="rgb(239,60,40)" fg:x="43139175" fg:w="3023103"/><text x="14.8022%" y="2031.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,023,103 samples, 1.02%)</title><rect x="14.5522%" y="2005" width="1.0198%" height="15" fill="rgb(206,27,48)" fg:x="43139175" fg:w="3023103"/><text x="14.8022%" y="2015.50"></text></g><g><title>[unknown] (20,748,102 samples, 7.00%)</title><rect x="9.2115%" y="2117" width="6.9990%" height="15" fill="rgb(225,35,8)" fg:x="27307157" fg:w="20748102"/><text x="9.4615%" y="2127.50">[unknown]</text></g><g><title>serde::de::Visitor::visit_borrowed_str (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="2101" width="0.6386%" height="15" fill="rgb(250,213,24)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="2111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="2085" width="0.6386%" height="15" fill="rgb(247,123,22)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="2095.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="2069" width="0.6386%" height="15" fill="rgb(231,138,38)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="2079.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="2053" width="0.6386%" height="15" fill="rgb(231,145,46)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="2063.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="2037" width="0.6386%" height="15" fill="rgb(251,118,11)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="2047.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="2021" width="0.6386%" height="15" fill="rgb(217,147,25)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="2031.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="2005" width="0.6386%" height="15" fill="rgb(247,81,37)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="2015.50"></text></g><g><title>alloc::slice::hack::to_vec (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="1989" width="0.6386%" height="15" fill="rgb(209,12,38)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="1999.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="1973" width="0.6386%" height="15" fill="rgb(227,1,9)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="1957" width="0.6386%" height="15" fill="rgb(248,47,43)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="1941" width="0.6386%" height="15" fill="rgb(221,10,30)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="1925" width="0.6386%" height="15" fill="rgb(210,229,1)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="1909" width="0.6386%" height="15" fill="rgb(222,148,37)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="1893" width="0.6386%" height="15" fill="rgb(234,67,33)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="1903.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="1877" width="0.6386%" height="15" fill="rgb(247,98,35)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="1887.50"></text></g><g><title>alloc::alloc::alloc (1,892,981 samples, 0.64%)</title><rect x="15.5720%" y="1861" width="0.6386%" height="15" fill="rgb(247,138,52)" fg:x="46162278" fg:w="1892981"/><text x="15.8220%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,189,349 samples, 1.08%)</title><rect x="16.2105%" y="2101" width="1.0759%" height="15" fill="rgb(213,79,30)" fg:x="48055259" fg:w="3189349"/><text x="16.4605%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,189,349 samples, 1.08%)</title><rect x="16.2105%" y="2085" width="1.0759%" height="15" fill="rgb(246,177,23)" fg:x="48055259" fg:w="3189349"/><text x="16.4605%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,189,349 samples, 1.08%)</title><rect x="16.2105%" y="2069" width="1.0759%" height="15" fill="rgb(230,62,27)" fg:x="48055259" fg:w="3189349"/><text x="16.4605%" y="2079.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,189,349 samples, 1.08%)</title><rect x="16.2105%" y="2053" width="1.0759%" height="15" fill="rgb(216,154,8)" fg:x="48055259" fg:w="3189349"/><text x="16.4605%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,189,349 samples, 1.08%)</title><rect x="16.2105%" y="2037" width="1.0759%" height="15" fill="rgb(244,35,45)" fg:x="48055259" fg:w="3189349"/><text x="16.4605%" y="2047.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,189,349 samples, 1.08%)</title><rect x="16.2105%" y="2021" width="1.0759%" height="15" fill="rgb(251,115,12)" fg:x="48055259" fg:w="3189349"/><text x="16.4605%" y="2031.50"></text></g><g><title>alloc::alloc::dealloc (3,189,349 samples, 1.08%)</title><rect x="16.2105%" y="2005" width="1.0759%" height="15" fill="rgb(240,54,50)" fg:x="48055259" fg:w="3189349"/><text x="16.4605%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,184,934 samples, 2.09%)</title><rect x="16.2105%" y="2117" width="2.0864%" height="15" fill="rgb(233,84,52)" fg:x="48055259" fg:w="6184934"/><text x="16.4605%" y="2127.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,995,585 samples, 1.01%)</title><rect x="17.2864%" y="2101" width="1.0105%" height="15" fill="rgb(207,117,47)" fg:x="51244608" fg:w="2995585"/><text x="17.5364%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,995,585 samples, 1.01%)</title><rect x="17.2864%" y="2085" width="1.0105%" height="15" fill="rgb(249,43,39)" fg:x="51244608" fg:w="2995585"/><text x="17.5364%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,995,585 samples, 1.01%)</title><rect x="17.2864%" y="2069" width="1.0105%" height="15" fill="rgb(209,38,44)" fg:x="51244608" fg:w="2995585"/><text x="17.5364%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,995,585 samples, 1.01%)</title><rect x="17.2864%" y="2053" width="1.0105%" height="15" fill="rgb(236,212,23)" fg:x="51244608" fg:w="2995585"/><text x="17.5364%" y="2063.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,995,585 samples, 1.01%)</title><rect x="17.2864%" y="2037" width="1.0105%" height="15" fill="rgb(242,79,21)" fg:x="51244608" fg:w="2995585"/><text x="17.5364%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,995,585 samples, 1.01%)</title><rect x="17.2864%" y="2021" width="1.0105%" height="15" fill="rgb(211,96,35)" fg:x="51244608" fg:w="2995585"/><text x="17.5364%" y="2031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,995,585 samples, 1.01%)</title><rect x="17.2864%" y="2005" width="1.0105%" height="15" fill="rgb(253,215,40)" fg:x="51244608" fg:w="2995585"/><text x="17.5364%" y="2015.50"></text></g><g><title>alloc::alloc::dealloc (2,995,585 samples, 1.01%)</title><rect x="17.2864%" y="1989" width="1.0105%" height="15" fill="rgb(211,81,21)" fg:x="51244608" fg:w="2995585"/><text x="17.5364%" y="1999.50"></text></g><g><title>[unknown] (45,432,859 samples, 15.33%)</title><rect x="7.1672%" y="2133" width="15.3259%" height="15" fill="rgb(208,190,38)" fg:x="21246777" fg:w="45432859"/><text x="7.4172%" y="2143.50">[unknown]</text></g><g><title>main::benchmark::count_nodes (12,439,443 samples, 4.20%)</title><rect x="18.2969%" y="2117" width="4.1962%" height="15" fill="rgb(235,213,38)" fg:x="54240193" fg:w="12439443"/><text x="18.5469%" y="2127.50">main:..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,038,782 samples, 1.03%)</title><rect x="21.4680%" y="2101" width="1.0251%" height="15" fill="rgb(237,122,38)" fg:x="63640854" fg:w="3038782"/><text x="21.7180%" y="2111.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,038,782 samples, 1.03%)</title><rect x="21.4680%" y="2085" width="1.0251%" height="15" fill="rgb(244,218,35)" fg:x="63640854" fg:w="3038782"/><text x="21.7180%" y="2095.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,038,782 samples, 1.03%)</title><rect x="21.4680%" y="2069" width="1.0251%" height="15" fill="rgb(240,68,47)" fg:x="63640854" fg:w="3038782"/><text x="21.7180%" y="2079.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,038,782 samples, 1.03%)</title><rect x="21.4680%" y="2053" width="1.0251%" height="15" fill="rgb(210,16,53)" fg:x="63640854" fg:w="3038782"/><text x="21.7180%" y="2063.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,038,782 samples, 1.03%)</title><rect x="21.4680%" y="2037" width="1.0251%" height="15" fill="rgb(235,124,12)" fg:x="63640854" fg:w="3038782"/><text x="21.7180%" y="2047.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,038,782 samples, 1.03%)</title><rect x="21.4680%" y="2021" width="1.0251%" height="15" fill="rgb(224,169,11)" fg:x="63640854" fg:w="3038782"/><text x="21.7180%" y="2031.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,997,904 samples, 1.01%)</title><rect x="22.4931%" y="1829" width="1.0113%" height="15" fill="rgb(250,166,2)" fg:x="66679636" fg:w="2997904"/><text x="22.7431%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,997,904 samples, 1.01%)</title><rect x="22.4931%" y="1813" width="1.0113%" height="15" fill="rgb(242,216,29)" fg:x="66679636" fg:w="2997904"/><text x="22.7431%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,997,904 samples, 1.01%)</title><rect x="22.4931%" y="1797" width="1.0113%" height="15" fill="rgb(230,116,27)" fg:x="66679636" fg:w="2997904"/><text x="22.7431%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (2,997,904 samples, 1.01%)</title><rect x="22.4931%" y="1781" width="1.0113%" height="15" fill="rgb(228,99,48)" fg:x="66679636" fg:w="2997904"/><text x="22.7431%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,997,904 samples, 1.01%)</title><rect x="22.4931%" y="1765" width="1.0113%" height="15" fill="rgb(253,11,6)" fg:x="66679636" fg:w="2997904"/><text x="22.7431%" y="1775.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,997,904 samples, 1.01%)</title><rect x="22.4931%" y="1749" width="1.0113%" height="15" fill="rgb(247,143,39)" fg:x="66679636" fg:w="2997904"/><text x="22.7431%" y="1759.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,997,904 samples, 1.01%)</title><rect x="22.4931%" y="1733" width="1.0113%" height="15" fill="rgb(236,97,10)" fg:x="66679636" fg:w="2997904"/><text x="22.7431%" y="1743.50"></text></g><g><title>[libc.so.6] (2,997,904 samples, 1.01%)</title><rect x="22.4931%" y="1717" width="1.0113%" height="15" fill="rgb(233,208,19)" fg:x="66679636" fg:w="2997904"/><text x="22.7431%" y="1727.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,752,391 samples, 0.93%)</title><rect x="23.5044%" y="1749" width="0.9285%" height="15" fill="rgb(216,164,2)" fg:x="69677540" fg:w="2752391"/><text x="23.7544%" y="1759.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,246,865 samples, 1.10%)</title><rect x="24.4328%" y="1701" width="1.0953%" height="15" fill="rgb(220,129,5)" fg:x="72429931" fg:w="3246865"/><text x="24.6828%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,246,865 samples, 1.10%)</title><rect x="24.4328%" y="1685" width="1.0953%" height="15" fill="rgb(242,17,10)" fg:x="72429931" fg:w="3246865"/><text x="24.6828%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,246,865 samples, 1.10%)</title><rect x="24.4328%" y="1669" width="1.0953%" height="15" fill="rgb(242,107,0)" fg:x="72429931" fg:w="3246865"/><text x="24.6828%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (3,246,865 samples, 1.10%)</title><rect x="24.4328%" y="1653" width="1.0953%" height="15" fill="rgb(251,28,31)" fg:x="72429931" fg:w="3246865"/><text x="24.6828%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,246,865 samples, 1.10%)</title><rect x="24.4328%" y="1637" width="1.0953%" height="15" fill="rgb(233,223,10)" fg:x="72429931" fg:w="3246865"/><text x="24.6828%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,246,865 samples, 1.10%)</title><rect x="24.4328%" y="1621" width="1.0953%" height="15" fill="rgb(215,21,27)" fg:x="72429931" fg:w="3246865"/><text x="24.6828%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,246,865 samples, 1.10%)</title><rect x="24.4328%" y="1605" width="1.0953%" height="15" fill="rgb(232,23,21)" fg:x="72429931" fg:w="3246865"/><text x="24.6828%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,246,865 samples, 1.10%)</title><rect x="24.4328%" y="1589" width="1.0953%" height="15" fill="rgb(244,5,23)" fg:x="72429931" fg:w="3246865"/><text x="24.6828%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,246,865 samples, 1.10%)</title><rect x="24.4328%" y="1573" width="1.0953%" height="15" fill="rgb(226,81,46)" fg:x="72429931" fg:w="3246865"/><text x="24.6828%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,246,865 samples, 1.10%)</title><rect x="24.4328%" y="1557" width="1.0953%" height="15" fill="rgb(247,70,30)" fg:x="72429931" fg:w="3246865"/><text x="24.6828%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,246,865 samples, 1.10%)</title><rect x="24.4328%" y="1541" width="1.0953%" height="15" fill="rgb(212,68,19)" fg:x="72429931" fg:w="3246865"/><text x="24.6828%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (3,246,865 samples, 1.10%)</title><rect x="24.4328%" y="1525" width="1.0953%" height="15" fill="rgb(240,187,13)" fg:x="72429931" fg:w="3246865"/><text x="24.6828%" y="1535.50"></text></g><g><title>malloc (3,246,865 samples, 1.10%)</title><rect x="24.4328%" y="1509" width="1.0953%" height="15" fill="rgb(223,113,26)" fg:x="72429931" fg:w="3246865"/><text x="24.6828%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,929,222 samples, 2.00%)</title><rect x="25.5281%" y="1685" width="2.0001%" height="15" fill="rgb(206,192,2)" fg:x="75676796" fg:w="5929222"/><text x="25.7781%" y="1695.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,929,222 samples, 2.00%)</title><rect x="25.5281%" y="1669" width="2.0001%" height="15" fill="rgb(241,108,4)" fg:x="75676796" fg:w="5929222"/><text x="25.7781%" y="1679.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,929,222 samples, 2.00%)</title><rect x="25.5281%" y="1653" width="2.0001%" height="15" fill="rgb(247,173,49)" fg:x="75676796" fg:w="5929222"/><text x="25.7781%" y="1663.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,929,222 samples, 2.00%)</title><rect x="25.5281%" y="1637" width="2.0001%" height="15" fill="rgb(224,114,35)" fg:x="75676796" fg:w="5929222"/><text x="25.7781%" y="1647.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,929,222 samples, 2.00%)</title><rect x="25.5281%" y="1621" width="2.0001%" height="15" fill="rgb(245,159,27)" fg:x="75676796" fg:w="5929222"/><text x="25.7781%" y="1631.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,929,222 samples, 2.00%)</title><rect x="25.5281%" y="1605" width="2.0001%" height="15" fill="rgb(245,172,44)" fg:x="75676796" fg:w="5929222"/><text x="25.7781%" y="1615.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,929,222 samples, 2.00%)</title><rect x="25.5281%" y="1589" width="2.0001%" height="15" fill="rgb(236,23,11)" fg:x="75676796" fg:w="5929222"/><text x="25.7781%" y="1599.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,929,222 samples, 2.00%)</title><rect x="25.5281%" y="1573" width="2.0001%" height="15" fill="rgb(205,117,38)" fg:x="75676796" fg:w="5929222"/><text x="25.7781%" y="1583.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,929,222 samples, 2.00%)</title><rect x="25.5281%" y="1557" width="2.0001%" height="15" fill="rgb(237,72,25)" fg:x="75676796" fg:w="5929222"/><text x="25.7781%" y="1567.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,929,222 samples, 2.00%)</title><rect x="25.5281%" y="1541" width="2.0001%" height="15" fill="rgb(244,70,9)" fg:x="75676796" fg:w="5929222"/><text x="25.7781%" y="1551.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,929,222 samples, 2.00%)</title><rect x="25.5281%" y="1525" width="2.0001%" height="15" fill="rgb(217,125,39)" fg:x="75676796" fg:w="5929222"/><text x="25.7781%" y="1535.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,929,222 samples, 2.00%)</title><rect x="25.5281%" y="1509" width="2.0001%" height="15" fill="rgb(235,36,10)" fg:x="75676796" fg:w="5929222"/><text x="25.7781%" y="1519.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,929,222 samples, 2.00%)</title><rect x="25.5281%" y="1493" width="2.0001%" height="15" fill="rgb(251,123,47)" fg:x="75676796" fg:w="5929222"/><text x="25.7781%" y="1503.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,929,222 samples, 2.00%)</title><rect x="25.5281%" y="1477" width="2.0001%" height="15" fill="rgb(221,13,13)" fg:x="75676796" fg:w="5929222"/><text x="25.7781%" y="1487.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1461" width="0.9974%" height="15" fill="rgb(238,131,9)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1471.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1445" width="0.9974%" height="15" fill="rgb(211,50,8)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1429" width="0.9974%" height="15" fill="rgb(245,182,24)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1439.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1413" width="0.9974%" height="15" fill="rgb(242,14,37)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1397" width="0.9974%" height="15" fill="rgb(246,228,12)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1381" width="0.9974%" height="15" fill="rgb(213,55,15)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1391.50"></text></g><g><title>alloc::slice::hack::to_vec (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1365" width="0.9974%" height="15" fill="rgb(209,9,3)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1375.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1349" width="0.9974%" height="15" fill="rgb(230,59,30)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1359.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1333" width="0.9974%" height="15" fill="rgb(209,121,21)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1343.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1317" width="0.9974%" height="15" fill="rgb(220,109,13)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1327.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1301" width="0.9974%" height="15" fill="rgb(232,18,1)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1311.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1285" width="0.9974%" height="15" fill="rgb(215,41,42)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1295.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1269" width="0.9974%" height="15" fill="rgb(224,123,36)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1253" width="0.9974%" height="15" fill="rgb(240,125,3)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1237" width="0.9974%" height="15" fill="rgb(205,98,50)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1221" width="0.9974%" height="15" fill="rgb(205,185,37)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1205" width="0.9974%" height="15" fill="rgb(238,207,15)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1215.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1189" width="0.9974%" height="15" fill="rgb(213,199,42)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1199.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1173" width="0.9974%" height="15" fill="rgb(235,201,11)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1157" width="0.9974%" height="15" fill="rgb(207,46,11)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1141" width="0.9974%" height="15" fill="rgb(241,35,35)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1151.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1125" width="0.9974%" height="15" fill="rgb(243,32,47)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1135.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1109" width="0.9974%" height="15" fill="rgb(247,202,23)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1093" width="0.9974%" height="15" fill="rgb(219,102,11)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1077" width="0.9974%" height="15" fill="rgb(243,110,44)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (2,956,658 samples, 1.00%)</title><rect x="26.5309%" y="1061" width="0.9974%" height="15" fill="rgb(222,74,54)" fg:x="78649360" fg:w="2956658"/><text x="26.7809%" y="1071.50"></text></g><g><title>&lt;main::benchmark::LayoutFrame as core::clone::Clone&gt;::clone (18,213,980 samples, 6.14%)</title><rect x="22.4931%" y="1845" width="6.1441%" height="15" fill="rgb(216,99,12)" fg:x="66679636" fg:w="18213980"/><text x="22.7431%" y="1855.50">&lt;main::b..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (15,216,076 samples, 5.13%)</title><rect x="23.5044%" y="1829" width="5.1329%" height="15" fill="rgb(226,22,26)" fg:x="69677540" fg:w="15216076"/><text x="23.7544%" y="1839.50">&lt;serde..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (15,216,076 samples, 5.13%)</title><rect x="23.5044%" y="1813" width="5.1329%" height="15" fill="rgb(217,163,10)" fg:x="69677540" fg:w="15216076"/><text x="23.7544%" y="1823.50">&lt;serde..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (15,216,076 samples, 5.13%)</title><rect x="23.5044%" y="1797" width="5.1329%" height="15" fill="rgb(213,25,53)" fg:x="69677540" fg:w="15216076"/><text x="23.7544%" y="1807.50">&lt;alloc..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (15,216,076 samples, 5.13%)</title><rect x="23.5044%" y="1781" width="5.1329%" height="15" fill="rgb(252,105,26)" fg:x="69677540" fg:w="15216076"/><text x="23.7544%" y="1791.50">&lt;alloc..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (15,216,076 samples, 5.13%)</title><rect x="23.5044%" y="1765" width="5.1329%" height="15" fill="rgb(220,39,43)" fg:x="69677540" fg:w="15216076"/><text x="23.7544%" y="1775.50">&lt;serde..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (12,463,685 samples, 4.20%)</title><rect x="24.4328%" y="1749" width="4.2044%" height="15" fill="rgb(229,68,48)" fg:x="72429931" fg:w="12463685"/><text x="24.6828%" y="1759.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (12,463,685 samples, 4.20%)</title><rect x="24.4328%" y="1733" width="4.2044%" height="15" fill="rgb(252,8,32)" fg:x="72429931" fg:w="12463685"/><text x="24.6828%" y="1743.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (12,463,685 samples, 4.20%)</title><rect x="24.4328%" y="1717" width="4.2044%" height="15" fill="rgb(223,20,43)" fg:x="72429931" fg:w="12463685"/><text x="24.6828%" y="1727.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,216,820 samples, 3.11%)</title><rect x="25.5281%" y="1701" width="3.1091%" height="15" fill="rgb(229,81,49)" fg:x="75676796" fg:w="9216820"/><text x="25.7781%" y="1711.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,287,598 samples, 1.11%)</title><rect x="27.5282%" y="1685" width="1.1090%" height="15" fill="rgb(236,28,36)" fg:x="81606018" fg:w="3287598"/><text x="27.7782%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,287,598 samples, 1.11%)</title><rect x="27.5282%" y="1669" width="1.1090%" height="15" fill="rgb(249,185,26)" fg:x="81606018" fg:w="3287598"/><text x="27.7782%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,287,598 samples, 1.11%)</title><rect x="27.5282%" y="1653" width="1.1090%" height="15" fill="rgb(249,174,33)" fg:x="81606018" fg:w="3287598"/><text x="27.7782%" y="1663.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,287,598 samples, 1.11%)</title><rect x="27.5282%" y="1637" width="1.1090%" height="15" fill="rgb(233,201,37)" fg:x="81606018" fg:w="3287598"/><text x="27.7782%" y="1647.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,287,598 samples, 1.11%)</title><rect x="27.5282%" y="1621" width="1.1090%" height="15" fill="rgb(221,78,26)" fg:x="81606018" fg:w="3287598"/><text x="27.7782%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,287,598 samples, 1.11%)</title><rect x="27.5282%" y="1605" width="1.1090%" height="15" fill="rgb(250,127,30)" fg:x="81606018" fg:w="3287598"/><text x="27.7782%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,287,598 samples, 1.11%)</title><rect x="27.5282%" y="1589" width="1.1090%" height="15" fill="rgb(230,49,44)" fg:x="81606018" fg:w="3287598"/><text x="27.7782%" y="1599.50"></text></g><g><title>alloc::slice::hack::to_vec (3,287,598 samples, 1.11%)</title><rect x="27.5282%" y="1573" width="1.1090%" height="15" fill="rgb(229,67,23)" fg:x="81606018" fg:w="3287598"/><text x="27.7782%" y="1583.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,287,598 samples, 1.11%)</title><rect x="27.5282%" y="1557" width="1.1090%" height="15" fill="rgb(249,83,47)" fg:x="81606018" fg:w="3287598"/><text x="27.7782%" y="1567.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,287,598 samples, 1.11%)</title><rect x="27.5282%" y="1541" width="1.1090%" height="15" fill="rgb(215,43,3)" fg:x="81606018" fg:w="3287598"/><text x="27.7782%" y="1551.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,287,598 samples, 1.11%)</title><rect x="27.5282%" y="1525" width="1.1090%" height="15" fill="rgb(238,154,13)" fg:x="81606018" fg:w="3287598"/><text x="27.7782%" y="1535.50"></text></g><g><title>[libc.so.6] (3,287,598 samples, 1.11%)</title><rect x="27.5282%" y="1509" width="1.1090%" height="15" fill="rgb(219,56,2)" fg:x="81606018" fg:w="3287598"/><text x="27.7782%" y="1519.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3,407,579 samples, 1.15%)</title><rect x="29.8721%" y="1685" width="1.1495%" height="15" fill="rgb(233,0,4)" fg:x="88554355" fg:w="3407579"/><text x="30.1221%" y="1695.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (3,407,579 samples, 1.15%)</title><rect x="29.8721%" y="1669" width="1.1495%" height="15" fill="rgb(235,30,7)" fg:x="88554355" fg:w="3407579"/><text x="30.1221%" y="1679.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (3,407,579 samples, 1.15%)</title><rect x="29.8721%" y="1653" width="1.1495%" height="15" fill="rgb(250,79,13)" fg:x="88554355" fg:w="3407579"/><text x="30.1221%" y="1663.50"></text></g><g><title>alloc::collections::btree::mem::replace (3,407,579 samples, 1.15%)</title><rect x="29.8721%" y="1637" width="1.1495%" height="15" fill="rgb(211,146,34)" fg:x="88554355" fg:w="3407579"/><text x="30.1221%" y="1647.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (3,407,579 samples, 1.15%)</title><rect x="29.8721%" y="1621" width="1.1495%" height="15" fill="rgb(228,22,38)" fg:x="88554355" fg:w="3407579"/><text x="30.1221%" y="1631.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (3,407,579 samples, 1.15%)</title><rect x="29.8721%" y="1605" width="1.1495%" height="15" fill="rgb(235,168,5)" fg:x="88554355" fg:w="3407579"/><text x="30.1221%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (3,407,579 samples, 1.15%)</title><rect x="29.8721%" y="1589" width="1.1495%" height="15" fill="rgb(221,155,16)" fg:x="88554355" fg:w="3407579"/><text x="30.1221%" y="1599.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (3,407,579 samples, 1.15%)</title><rect x="29.8721%" y="1573" width="1.1495%" height="15" fill="rgb(215,215,53)" fg:x="88554355" fg:w="3407579"/><text x="30.1221%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (9,935,567 samples, 3.35%)</title><rect x="28.6372%" y="1845" width="3.3516%" height="15" fill="rgb(223,4,10)" fg:x="84893616" fg:w="9935567"/><text x="28.8872%" y="1855.50">all..</text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::LayoutFrame]&gt; (9,935,567 samples, 3.35%)</title><rect x="28.6372%" y="1829" width="3.3516%" height="15" fill="rgb(234,103,6)" fg:x="84893616" fg:w="9935567"/><text x="28.8872%" y="1839.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::LayoutFrame&gt; (9,935,567 samples, 3.35%)</title><rect x="28.6372%" y="1813" width="3.3516%" height="15" fill="rgb(227,97,0)" fg:x="84893616" fg:w="9935567"/><text x="28.8872%" y="1823.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9,935,567 samples, 3.35%)</title><rect x="28.6372%" y="1797" width="3.3516%" height="15" fill="rgb(234,150,53)" fg:x="84893616" fg:w="9935567"/><text x="28.8872%" y="1807.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,935,567 samples, 3.35%)</title><rect x="28.6372%" y="1781" width="3.3516%" height="15" fill="rgb(228,201,54)" fg:x="84893616" fg:w="9935567"/><text x="28.8872%" y="1791.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,935,567 samples, 3.35%)</title><rect x="28.6372%" y="1765" width="3.3516%" height="15" fill="rgb(222,22,37)" fg:x="84893616" fg:w="9935567"/><text x="28.8872%" y="1775.50">cor..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9,935,567 samples, 3.35%)</title><rect x="28.6372%" y="1749" width="3.3516%" height="15" fill="rgb(237,53,32)" fg:x="84893616" fg:w="9935567"/><text x="28.8872%" y="1759.50">&lt;al..</text></g><g><title>core::mem::drop (9,935,567 samples, 3.35%)</title><rect x="28.6372%" y="1733" width="3.3516%" height="15" fill="rgb(233,25,53)" fg:x="84893616" fg:w="9935567"/><text x="28.8872%" y="1743.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,274,828 samples, 2.12%)</title><rect x="29.8721%" y="1717" width="2.1167%" height="15" fill="rgb(210,40,34)" fg:x="88554355" fg:w="6274828"/><text x="30.1221%" y="1727.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,274,828 samples, 2.12%)</title><rect x="29.8721%" y="1701" width="2.1167%" height="15" fill="rgb(241,220,44)" fg:x="88554355" fg:w="6274828"/><text x="30.1221%" y="1711.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1685" width="0.9672%" height="15" fill="rgb(235,28,35)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1669" width="0.9672%" height="15" fill="rgb(210,56,17)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1653" width="0.9672%" height="15" fill="rgb(224,130,29)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1663.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1637" width="0.9672%" height="15" fill="rgb(235,212,8)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1621" width="0.9672%" height="15" fill="rgb(223,33,50)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1605" width="0.9672%" height="15" fill="rgb(219,149,13)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1589" width="0.9672%" height="15" fill="rgb(250,156,29)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1599.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1573" width="0.9672%" height="15" fill="rgb(216,193,19)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1583.50"></text></g><g><title>core::mem::drop (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1557" width="0.9672%" height="15" fill="rgb(216,135,14)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1541" width="0.9672%" height="15" fill="rgb(241,47,5)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1551.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1525" width="0.9672%" height="15" fill="rgb(233,42,35)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1535.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1509" width="0.9672%" height="15" fill="rgb(231,13,6)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1519.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1493" width="0.9672%" height="15" fill="rgb(207,181,40)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1477" width="0.9672%" height="15" fill="rgb(254,173,49)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1461" width="0.9672%" height="15" fill="rgb(221,1,38)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1445" width="0.9672%" height="15" fill="rgb(206,124,46)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1455.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1429" width="0.9672%" height="15" fill="rgb(249,21,11)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1413" width="0.9672%" height="15" fill="rgb(222,201,40)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1397" width="0.9672%" height="15" fill="rgb(235,61,29)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1381" width="0.9672%" height="15" fill="rgb(219,207,3)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1391.50"></text></g><g><title>cfree (2,867,249 samples, 0.97%)</title><rect x="31.0216%" y="1365" width="0.9672%" height="15" fill="rgb(222,56,46)" fg:x="91961934" fg:w="2867249"/><text x="31.2716%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,462,579 samples, 1.17%)</title><rect x="31.9888%" y="1845" width="1.1680%" height="15" fill="rgb(239,76,54)" fg:x="94829183" fg:w="3462579"/><text x="32.2388%" y="1855.50"></text></g><g><title>core::ptr::write (3,462,579 samples, 1.17%)</title><rect x="31.9888%" y="1829" width="1.1680%" height="15" fill="rgb(231,124,27)" fg:x="94829183" fg:w="3462579"/><text x="32.2388%" y="1839.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,951,705 samples, 1.00%)</title><rect x="33.1568%" y="1477" width="0.9957%" height="15" fill="rgb(249,195,6)" fg:x="98291762" fg:w="2951705"/><text x="33.4068%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,951,705 samples, 1.00%)</title><rect x="33.1568%" y="1461" width="0.9957%" height="15" fill="rgb(237,174,47)" fg:x="98291762" fg:w="2951705"/><text x="33.4068%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,951,705 samples, 1.00%)</title><rect x="33.1568%" y="1445" width="0.9957%" height="15" fill="rgb(206,201,31)" fg:x="98291762" fg:w="2951705"/><text x="33.4068%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,951,705 samples, 1.00%)</title><rect x="33.1568%" y="1429" width="0.9957%" height="15" fill="rgb(231,57,52)" fg:x="98291762" fg:w="2951705"/><text x="33.4068%" y="1439.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,951,705 samples, 1.00%)</title><rect x="33.1568%" y="1413" width="0.9957%" height="15" fill="rgb(248,177,22)" fg:x="98291762" fg:w="2951705"/><text x="33.4068%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,951,705 samples, 1.00%)</title><rect x="33.1568%" y="1397" width="0.9957%" height="15" fill="rgb(215,211,37)" fg:x="98291762" fg:w="2951705"/><text x="33.4068%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,951,705 samples, 1.00%)</title><rect x="33.1568%" y="1381" width="0.9957%" height="15" fill="rgb(241,128,51)" fg:x="98291762" fg:w="2951705"/><text x="33.4068%" y="1391.50"></text></g><g><title>alloc::alloc::dealloc (2,951,705 samples, 1.00%)</title><rect x="33.1568%" y="1365" width="0.9957%" height="15" fill="rgb(227,165,31)" fg:x="98291762" fg:w="2951705"/><text x="33.4068%" y="1375.50"></text></g><g><title>cfree (2,951,705 samples, 1.00%)</title><rect x="33.1568%" y="1349" width="0.9957%" height="15" fill="rgb(228,167,24)" fg:x="98291762" fg:w="2951705"/><text x="33.4068%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1829" width="1.9674%" height="15" fill="rgb(228,143,12)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1839.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::LayoutFrame]&gt; (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1813" width="1.9674%" height="15" fill="rgb(249,149,8)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1823.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::LayoutFrame&gt; (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1797" width="1.9674%" height="15" fill="rgb(243,35,44)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1807.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1781" width="1.9674%" height="15" fill="rgb(246,89,9)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1791.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1765" width="1.9674%" height="15" fill="rgb(233,213,13)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1775.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1749" width="1.9674%" height="15" fill="rgb(233,141,41)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1759.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1733" width="1.9674%" height="15" fill="rgb(239,167,4)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1743.50">&lt;..</text></g><g><title>core::mem::drop (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1717" width="1.9674%" height="15" fill="rgb(209,217,16)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1727.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1701" width="1.9674%" height="15" fill="rgb(219,88,35)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1711.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1685" width="1.9674%" height="15" fill="rgb(220,193,23)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1695.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1669" width="1.9674%" height="15" fill="rgb(230,90,52)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1679.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1653" width="1.9674%" height="15" fill="rgb(252,106,19)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1663.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1637" width="1.9674%" height="15" fill="rgb(206,74,20)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1647.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1621" width="1.9674%" height="15" fill="rgb(230,138,44)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1631.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1605" width="1.9674%" height="15" fill="rgb(235,182,43)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1615.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1589" width="1.9674%" height="15" fill="rgb(242,16,51)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1599.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1573" width="1.9674%" height="15" fill="rgb(248,9,4)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1583.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1557" width="1.9674%" height="15" fill="rgb(210,31,22)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1567.50">&lt;..</text></g><g><title>core::mem::drop (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1541" width="1.9674%" height="15" fill="rgb(239,54,39)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1551.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1525" width="1.9674%" height="15" fill="rgb(230,99,41)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1535.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1509" width="1.9674%" height="15" fill="rgb(253,106,12)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1519.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,832,262 samples, 1.97%)</title><rect x="33.1568%" y="1493" width="1.9674%" height="15" fill="rgb(213,46,41)" fg:x="98291762" fg:w="5832262"/><text x="33.4068%" y="1503.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1477" width="0.9717%" height="15" fill="rgb(215,133,35)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1461" width="0.9717%" height="15" fill="rgb(213,28,5)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1471.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1445" width="0.9717%" height="15" fill="rgb(215,77,49)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1429" width="0.9717%" height="15" fill="rgb(248,100,22)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1413" width="0.9717%" height="15" fill="rgb(208,67,9)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1397" width="0.9717%" height="15" fill="rgb(219,133,21)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1381" width="0.9717%" height="15" fill="rgb(246,46,29)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1365" width="0.9717%" height="15" fill="rgb(246,185,52)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1349" width="0.9717%" height="15" fill="rgb(252,136,11)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1333" width="0.9717%" height="15" fill="rgb(219,138,53)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1317" width="0.9717%" height="15" fill="rgb(211,51,23)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1327.50"></text></g><g><title>core::mem::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1301" width="0.9717%" height="15" fill="rgb(247,221,28)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1285" width="0.9717%" height="15" fill="rgb(251,222,45)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1295.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1269" width="0.9717%" height="15" fill="rgb(217,162,53)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1279.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1253" width="0.9717%" height="15" fill="rgb(229,93,14)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1237" width="0.9717%" height="15" fill="rgb(209,67,49)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1221" width="0.9717%" height="15" fill="rgb(213,87,29)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1231.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1205" width="0.9717%" height="15" fill="rgb(205,151,52)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1189" width="0.9717%" height="15" fill="rgb(253,215,39)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1173" width="0.9717%" height="15" fill="rgb(221,220,41)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1157" width="0.9717%" height="15" fill="rgb(218,133,21)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1141" width="0.9717%" height="15" fill="rgb(221,193,43)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1125" width="0.9717%" height="15" fill="rgb(240,128,52)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1109" width="0.9717%" height="15" fill="rgb(253,114,12)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1093" width="0.9717%" height="15" fill="rgb(215,223,47)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1077" width="0.9717%" height="15" fill="rgb(248,225,23)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1087.50"></text></g><g><title>core::mem::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1061" width="0.9717%" height="15" fill="rgb(250,108,0)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1045" width="0.9717%" height="15" fill="rgb(228,208,7)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1029" width="0.9717%" height="15" fill="rgb(244,45,10)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="1013" width="0.9717%" height="15" fill="rgb(207,125,25)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="997" width="0.9717%" height="15" fill="rgb(210,195,18)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="981" width="0.9717%" height="15" fill="rgb(249,80,12)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="991.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="965" width="0.9717%" height="15" fill="rgb(221,65,9)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="949" width="0.9717%" height="15" fill="rgb(235,49,36)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="933" width="0.9717%" height="15" fill="rgb(225,32,20)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="917" width="0.9717%" height="15" fill="rgb(215,141,46)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="901" width="0.9717%" height="15" fill="rgb(250,160,47)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="885" width="0.9717%" height="15" fill="rgb(216,222,40)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="869" width="0.9717%" height="15" fill="rgb(234,217,39)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="853" width="0.9717%" height="15" fill="rgb(207,178,40)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="837" width="0.9717%" height="15" fill="rgb(221,136,13)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="847.50"></text></g><g><title>core::mem::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="821" width="0.9717%" height="15" fill="rgb(249,199,10)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="805" width="0.9717%" height="15" fill="rgb(249,222,13)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="789" width="0.9717%" height="15" fill="rgb(244,185,38)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="773" width="0.9717%" height="15" fill="rgb(236,202,9)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="757" width="0.9717%" height="15" fill="rgb(250,229,37)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="741" width="0.9717%" height="15" fill="rgb(206,174,23)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="751.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="725" width="0.9717%" height="15" fill="rgb(211,33,43)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="709" width="0.9717%" height="15" fill="rgb(245,58,50)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="693" width="0.9717%" height="15" fill="rgb(244,68,36)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;serde_json::value::Value&gt;&gt; (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="677" width="0.9717%" height="15" fill="rgb(232,229,15)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="661" width="0.9717%" height="15" fill="rgb(254,30,23)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="645" width="0.9717%" height="15" fill="rgb(235,160,14)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="629" width="0.9717%" height="15" fill="rgb(212,155,44)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (2,880,557 samples, 0.97%)</title><rect x="34.1525%" y="613" width="0.9717%" height="15" fill="rgb(226,2,50)" fg:x="101243467" fg:w="2880557"/><text x="34.4025%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;main::benchmark::LayoutFrame&gt;&gt; (12,389,654 samples, 4.18%)</title><rect x="33.1568%" y="1845" width="4.1794%" height="15" fill="rgb(234,177,6)" fg:x="98291762" fg:w="12389654"/><text x="33.4068%" y="1855.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;main::benchmark::LayoutFrame&gt;&gt; (6,557,392 samples, 2.21%)</title><rect x="35.1242%" y="1829" width="2.2120%" height="15" fill="rgb(217,24,9)" fg:x="104124024" fg:w="6557392"/><text x="35.3742%" y="1839.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,557,392 samples, 2.21%)</title><rect x="35.1242%" y="1813" width="2.2120%" height="15" fill="rgb(220,13,46)" fg:x="104124024" fg:w="6557392"/><text x="35.3742%" y="1823.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,557,392 samples, 2.21%)</title><rect x="35.1242%" y="1797" width="2.2120%" height="15" fill="rgb(239,221,27)" fg:x="104124024" fg:w="6557392"/><text x="35.3742%" y="1807.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,557,392 samples, 2.21%)</title><rect x="35.1242%" y="1781" width="2.2120%" height="15" fill="rgb(222,198,25)" fg:x="104124024" fg:w="6557392"/><text x="35.3742%" y="1791.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (6,557,392 samples, 2.21%)</title><rect x="35.1242%" y="1765" width="2.2120%" height="15" fill="rgb(211,99,13)" fg:x="104124024" fg:w="6557392"/><text x="35.3742%" y="1775.50">a..</text></g><g><title>cfree (6,557,392 samples, 2.21%)</title><rect x="35.1242%" y="1749" width="2.2120%" height="15" fill="rgb(232,111,31)" fg:x="104124024" fg:w="6557392"/><text x="35.3742%" y="1759.50">c..</text></g><g><title>[libc.so.6] (6,557,392 samples, 2.21%)</title><rect x="35.1242%" y="1733" width="2.2120%" height="15" fill="rgb(245,82,37)" fg:x="104124024" fg:w="6557392"/><text x="35.3742%" y="1743.50">[..</text></g><g><title>[libc.so.6] (6,557,392 samples, 2.21%)</title><rect x="35.1242%" y="1717" width="2.2120%" height="15" fill="rgb(227,149,46)" fg:x="104124024" fg:w="6557392"/><text x="35.3742%" y="1727.50">[..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1845" width="1.0378%" height="15" fill="rgb(218,36,50)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1829" width="1.0378%" height="15" fill="rgb(226,80,48)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1813" width="1.0378%" height="15" fill="rgb(238,224,15)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1797" width="1.0378%" height="15" fill="rgb(241,136,10)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1781" width="1.0378%" height="15" fill="rgb(208,32,45)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1765" width="1.0378%" height="15" fill="rgb(207,135,9)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1749" width="1.0378%" height="15" fill="rgb(206,86,44)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1733" width="1.0378%" height="15" fill="rgb(245,177,15)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1717" width="1.0378%" height="15" fill="rgb(206,64,50)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1701" width="1.0378%" height="15" fill="rgb(234,36,40)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1685" width="1.0378%" height="15" fill="rgb(213,64,8)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1669" width="1.0378%" height="15" fill="rgb(210,75,36)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1653" width="1.0378%" height="15" fill="rgb(229,88,21)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1637" width="1.0378%" height="15" fill="rgb(252,204,47)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1621" width="1.0378%" height="15" fill="rgb(208,77,27)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1605" width="1.0378%" height="15" fill="rgb(221,76,26)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1589" width="1.0378%" height="15" fill="rgb(225,139,18)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1573" width="1.0378%" height="15" fill="rgb(230,137,11)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1557" width="1.0378%" height="15" fill="rgb(212,28,1)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1541" width="1.0378%" height="15" fill="rgb(248,164,17)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1525" width="1.0378%" height="15" fill="rgb(222,171,42)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1509" width="1.0378%" height="15" fill="rgb(243,84,45)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1493" width="1.0378%" height="15" fill="rgb(252,49,23)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1477" width="1.0378%" height="15" fill="rgb(215,19,7)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1461" width="1.0378%" height="15" fill="rgb(238,81,41)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1445" width="1.0378%" height="15" fill="rgb(210,199,37)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1429" width="1.0378%" height="15" fill="rgb(244,192,49)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1413" width="1.0378%" height="15" fill="rgb(226,211,11)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1397" width="1.0378%" height="15" fill="rgb(236,162,54)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1381" width="1.0378%" height="15" fill="rgb(220,229,9)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1365" width="1.0378%" height="15" fill="rgb(250,87,22)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1349" width="1.0378%" height="15" fill="rgb(239,43,17)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1333" width="1.0378%" height="15" fill="rgb(231,177,25)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1317" width="1.0378%" height="15" fill="rgb(219,179,1)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1301" width="1.0378%" height="15" fill="rgb(238,219,53)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1285" width="1.0378%" height="15" fill="rgb(232,167,36)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1269" width="1.0378%" height="15" fill="rgb(244,19,51)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1253" width="1.0378%" height="15" fill="rgb(224,6,22)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1237" width="1.0378%" height="15" fill="rgb(224,145,5)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1221" width="1.0378%" height="15" fill="rgb(234,130,49)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1205" width="1.0378%" height="15" fill="rgb(254,6,2)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1189" width="1.0378%" height="15" fill="rgb(208,96,46)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1173" width="1.0378%" height="15" fill="rgb(239,3,39)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1157" width="1.0378%" height="15" fill="rgb(233,210,1)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1141" width="1.0378%" height="15" fill="rgb(244,137,37)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1125" width="1.0378%" height="15" fill="rgb(240,136,2)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1109" width="1.0378%" height="15" fill="rgb(239,18,37)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1093" width="1.0378%" height="15" fill="rgb(218,185,22)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1077" width="1.0378%" height="15" fill="rgb(225,218,4)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1061" width="1.0378%" height="15" fill="rgb(230,182,32)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1045" width="1.0378%" height="15" fill="rgb(242,56,43)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1029" width="1.0378%" height="15" fill="rgb(233,99,24)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="1013" width="1.0378%" height="15" fill="rgb(234,209,42)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="997" width="1.0378%" height="15" fill="rgb(227,7,12)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="981" width="1.0378%" height="15" fill="rgb(245,203,43)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="965" width="1.0378%" height="15" fill="rgb(238,205,33)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="949" width="1.0378%" height="15" fill="rgb(231,56,7)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;css_bitvector_compiler::BitVector&gt;&gt; (3,076,423 samples, 1.04%)</title><rect x="37.3363%" y="933" width="1.0378%" height="15" fill="rgb(244,186,29)" fg:x="110681416" fg:w="3076423"/><text x="37.5863%" y="943.50"></text></g><g><title>main::benchmark::find_node_by_path_mut (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1829" width="1.0185%" height="15" fill="rgb(234,111,31)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1839.50"></text></g><g><title>main::benchmark::find_node_by_path_mut (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1813" width="1.0185%" height="15" fill="rgb(241,149,10)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1823.50"></text></g><g><title>main::benchmark::find_node_by_path_mut (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1797" width="1.0185%" height="15" fill="rgb(249,206,44)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1807.50"></text></g><g><title>main::benchmark::find_node_by_path_mut (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1781" width="1.0185%" height="15" fill="rgb(251,153,30)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1791.50"></text></g><g><title>main::benchmark::find_node_by_path_mut (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1765" width="1.0185%" height="15" fill="rgb(239,152,38)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1775.50"></text></g><g><title>main::benchmark::find_node_by_path_mut (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1749" width="1.0185%" height="15" fill="rgb(249,139,47)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1759.50"></text></g><g><title>std::io::stdio::_print (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1733" width="1.0185%" height="15" fill="rgb(244,64,35)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1743.50"></text></g><g><title>std::io::stdio::print_to (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1717" width="1.0185%" height="15" fill="rgb(216,46,15)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1727.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1701" width="1.0185%" height="15" fill="rgb(250,74,19)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1711.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1685" width="1.0185%" height="15" fill="rgb(249,42,33)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1695.50"></text></g><g><title>std::io::Write::write_fmt (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1669" width="1.0185%" height="15" fill="rgb(242,149,17)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1679.50"></text></g><g><title>core::fmt::write (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1653" width="1.0185%" height="15" fill="rgb(244,29,21)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1663.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1637" width="1.0185%" height="15" fill="rgb(220,130,37)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1647.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1621" width="1.0185%" height="15" fill="rgb(211,67,2)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1631.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1605" width="1.0185%" height="15" fill="rgb(235,68,52)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1615.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1589" width="1.0185%" height="15" fill="rgb(246,142,3)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1599.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1573" width="1.0185%" height="15" fill="rgb(241,25,7)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1583.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1557" width="1.0185%" height="15" fill="rgb(242,119,39)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1567.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1541" width="1.0185%" height="15" fill="rgb(241,98,45)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1551.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1525" width="1.0185%" height="15" fill="rgb(254,28,30)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1535.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1509" width="1.0185%" height="15" fill="rgb(241,142,54)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1519.50"></text></g><g><title>[libc.so.6] (3,019,262 samples, 1.02%)</title><rect x="38.3740%" y="1493" width="1.0185%" height="15" fill="rgb(222,85,15)" fg:x="113757839" fg:w="3019262"/><text x="38.6240%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,812,916 samples, 0.95%)</title><rect x="39.3925%" y="1797" width="0.9489%" height="15" fill="rgb(210,85,47)" fg:x="116777101" fg:w="2812916"/><text x="39.6425%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,812,916 samples, 0.95%)</title><rect x="39.3925%" y="1781" width="0.9489%" height="15" fill="rgb(224,206,25)" fg:x="116777101" fg:w="2812916"/><text x="39.6425%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,812,916 samples, 0.95%)</title><rect x="39.3925%" y="1765" width="0.9489%" height="15" fill="rgb(243,201,19)" fg:x="116777101" fg:w="2812916"/><text x="39.6425%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,812,916 samples, 0.95%)</title><rect x="39.3925%" y="1749" width="0.9489%" height="15" fill="rgb(236,59,4)" fg:x="116777101" fg:w="2812916"/><text x="39.6425%" y="1759.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,812,916 samples, 0.95%)</title><rect x="39.3925%" y="1733" width="0.9489%" height="15" fill="rgb(254,179,45)" fg:x="116777101" fg:w="2812916"/><text x="39.6425%" y="1743.50"></text></g><g><title>malloc (2,812,916 samples, 0.95%)</title><rect x="39.3925%" y="1717" width="0.9489%" height="15" fill="rgb(226,14,10)" fg:x="116777101" fg:w="2812916"/><text x="39.6425%" y="1727.50"></text></g><g><title>[libc.so.6] (2,812,916 samples, 0.95%)</title><rect x="39.3925%" y="1701" width="0.9489%" height="15" fill="rgb(244,27,41)" fg:x="116777101" fg:w="2812916"/><text x="39.6425%" y="1711.50"></text></g><g><title>[libc.so.6] (2,812,916 samples, 0.95%)</title><rect x="39.3925%" y="1685" width="0.9489%" height="15" fill="rgb(235,35,32)" fg:x="116777101" fg:w="2812916"/><text x="39.6425%" y="1695.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (3,676,291 samples, 1.24%)</title><rect x="40.3414%" y="1797" width="1.2401%" height="15" fill="rgb(218,68,31)" fg:x="119590017" fg:w="3676291"/><text x="40.5914%" y="1807.50"></text></g><g><title>main::benchmark::json_to_html_node (9,767,744 samples, 3.29%)</title><rect x="39.3925%" y="1829" width="3.2950%" height="15" fill="rgb(207,120,37)" fg:x="116777101" fg:w="9767744"/><text x="39.6425%" y="1839.50">mai..</text></g><g><title>main::benchmark::json_to_html_node (9,767,744 samples, 3.29%)</title><rect x="39.3925%" y="1813" width="3.2950%" height="15" fill="rgb(227,98,0)" fg:x="116777101" fg:w="9767744"/><text x="39.6425%" y="1823.50">mai..</text></g><g><title>main::benchmark::json_to_html_node (3,278,537 samples, 1.11%)</title><rect x="41.5815%" y="1797" width="1.1060%" height="15" fill="rgb(207,7,3)" fg:x="123266308" fg:w="3278537"/><text x="41.8315%" y="1807.50"></text></g><g><title>main::benchmark::json_to_html_node (3,278,537 samples, 1.11%)</title><rect x="41.5815%" y="1781" width="1.1060%" height="15" fill="rgb(206,98,19)" fg:x="123266308" fg:w="3278537"/><text x="41.8315%" y="1791.50"></text></g><g><title>main::benchmark::json_to_html_node (3,278,537 samples, 1.11%)</title><rect x="41.5815%" y="1765" width="1.1060%" height="15" fill="rgb(217,5,26)" fg:x="123266308" fg:w="3278537"/><text x="41.8315%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,278,537 samples, 1.11%)</title><rect x="41.5815%" y="1749" width="1.1060%" height="15" fill="rgb(235,190,38)" fg:x="123266308" fg:w="3278537"/><text x="41.8315%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,278,537 samples, 1.11%)</title><rect x="41.5815%" y="1733" width="1.1060%" height="15" fill="rgb(247,86,24)" fg:x="123266308" fg:w="3278537"/><text x="41.8315%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,278,537 samples, 1.11%)</title><rect x="41.5815%" y="1717" width="1.1060%" height="15" fill="rgb(205,101,16)" fg:x="123266308" fg:w="3278537"/><text x="41.8315%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,278,537 samples, 1.11%)</title><rect x="41.5815%" y="1701" width="1.1060%" height="15" fill="rgb(246,168,33)" fg:x="123266308" fg:w="3278537"/><text x="41.8315%" y="1711.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,278,537 samples, 1.11%)</title><rect x="41.5815%" y="1685" width="1.1060%" height="15" fill="rgb(231,114,1)" fg:x="123266308" fg:w="3278537"/><text x="41.8315%" y="1695.50"></text></g><g><title>malloc (3,278,537 samples, 1.11%)</title><rect x="41.5815%" y="1669" width="1.1060%" height="15" fill="rgb(207,184,53)" fg:x="123266308" fg:w="3278537"/><text x="41.8315%" y="1679.50"></text></g><g><title>[libc.so.6] (3,278,537 samples, 1.11%)</title><rect x="41.5815%" y="1653" width="1.1060%" height="15" fill="rgb(224,95,51)" fg:x="123266308" fg:w="3278537"/><text x="41.8315%" y="1663.50"></text></g><g><title>[libc.so.6] (3,278,537 samples, 1.11%)</title><rect x="41.5815%" y="1637" width="1.1060%" height="15" fill="rgb(212,188,45)" fg:x="123266308" fg:w="3278537"/><text x="41.8315%" y="1647.50"></text></g><g><title>main::benchmark::apply_frame_modifications (19,121,504 samples, 6.45%)</title><rect x="38.3740%" y="1845" width="6.4503%" height="15" fill="rgb(223,154,38)" fg:x="113757839" fg:w="19121504"/><text x="38.6240%" y="1855.50">main::be..</text></g><g><title>std::io::stdio::_print (6,334,498 samples, 2.14%)</title><rect x="42.6875%" y="1829" width="2.1368%" height="15" fill="rgb(251,22,52)" fg:x="126544845" fg:w="6334498"/><text x="42.9375%" y="1839.50">s..</text></g><g><title>std::io::stdio::print_to (6,334,498 samples, 2.14%)</title><rect x="42.6875%" y="1813" width="2.1368%" height="15" fill="rgb(229,209,22)" fg:x="126544845" fg:w="6334498"/><text x="42.9375%" y="1823.50">s..</text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (6,334,498 samples, 2.14%)</title><rect x="42.6875%" y="1797" width="2.1368%" height="15" fill="rgb(234,138,34)" fg:x="126544845" fg:w="6334498"/><text x="42.9375%" y="1807.50">&lt;..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (6,334,498 samples, 2.14%)</title><rect x="42.6875%" y="1781" width="2.1368%" height="15" fill="rgb(212,95,11)" fg:x="126544845" fg:w="6334498"/><text x="42.9375%" y="1791.50">&lt;..</text></g><g><title>std::io::Write::write_fmt (3,294,395 samples, 1.11%)</title><rect x="43.7130%" y="1765" width="1.1113%" height="15" fill="rgb(240,179,47)" fg:x="129584948" fg:w="3294395"/><text x="43.9630%" y="1775.50"></text></g><g><title>core::fmt::write (3,294,395 samples, 1.11%)</title><rect x="43.7130%" y="1749" width="1.1113%" height="15" fill="rgb(240,163,11)" fg:x="129584948" fg:w="3294395"/><text x="43.9630%" y="1759.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3,294,395 samples, 1.11%)</title><rect x="43.7130%" y="1733" width="1.1113%" height="15" fill="rgb(236,37,12)" fg:x="129584948" fg:w="3294395"/><text x="43.9630%" y="1743.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,631,298 samples, 1.22%)</title><rect x="44.8243%" y="1333" width="1.2249%" height="15" fill="rgb(232,164,16)" fg:x="132879343" fg:w="3631298"/><text x="45.0743%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,631,298 samples, 1.22%)</title><rect x="44.8243%" y="1317" width="1.2249%" height="15" fill="rgb(244,205,15)" fg:x="132879343" fg:w="3631298"/><text x="45.0743%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,631,298 samples, 1.22%)</title><rect x="44.8243%" y="1301" width="1.2249%" height="15" fill="rgb(223,117,47)" fg:x="132879343" fg:w="3631298"/><text x="45.0743%" y="1311.50"></text></g><g><title>alloc::slice::hack::to_vec (3,631,298 samples, 1.22%)</title><rect x="44.8243%" y="1285" width="1.2249%" height="15" fill="rgb(244,107,35)" fg:x="132879343" fg:w="3631298"/><text x="45.0743%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,631,298 samples, 1.22%)</title><rect x="44.8243%" y="1269" width="1.2249%" height="15" fill="rgb(205,140,8)" fg:x="132879343" fg:w="3631298"/><text x="45.0743%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,631,298 samples, 1.22%)</title><rect x="44.8243%" y="1253" width="1.2249%" height="15" fill="rgb(228,84,46)" fg:x="132879343" fg:w="3631298"/><text x="45.0743%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,631,298 samples, 1.22%)</title><rect x="44.8243%" y="1237" width="1.2249%" height="15" fill="rgb(254,188,9)" fg:x="132879343" fg:w="3631298"/><text x="45.0743%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,631,298 samples, 1.22%)</title><rect x="44.8243%" y="1221" width="1.2249%" height="15" fill="rgb(206,112,54)" fg:x="132879343" fg:w="3631298"/><text x="45.0743%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,631,298 samples, 1.22%)</title><rect x="44.8243%" y="1205" width="1.2249%" height="15" fill="rgb(216,84,49)" fg:x="132879343" fg:w="3631298"/><text x="45.0743%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,631,298 samples, 1.22%)</title><rect x="44.8243%" y="1189" width="1.2249%" height="15" fill="rgb(214,194,35)" fg:x="132879343" fg:w="3631298"/><text x="45.0743%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,631,298 samples, 1.22%)</title><rect x="44.8243%" y="1173" width="1.2249%" height="15" fill="rgb(249,28,3)" fg:x="132879343" fg:w="3631298"/><text x="45.0743%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (3,631,298 samples, 1.22%)</title><rect x="44.8243%" y="1157" width="1.2249%" height="15" fill="rgb(222,56,52)" fg:x="132879343" fg:w="3631298"/><text x="45.0743%" y="1167.50"></text></g><g><title>malloc (3,631,298 samples, 1.22%)</title><rect x="44.8243%" y="1141" width="1.2249%" height="15" fill="rgb(245,217,50)" fg:x="132879343" fg:w="3631298"/><text x="45.0743%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,571,376 samples, 1.20%)</title><rect x="46.0492%" y="1269" width="1.2047%" height="15" fill="rgb(213,201,24)" fg:x="136510641" fg:w="3571376"/><text x="46.2992%" y="1279.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,772,879 samples, 1.27%)</title><rect x="47.2540%" y="1253" width="1.2727%" height="15" fill="rgb(248,116,28)" fg:x="140082017" fg:w="3772879"/><text x="47.5040%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,999,285 samples, 1.01%)</title><rect x="48.5267%" y="1237" width="1.0118%" height="15" fill="rgb(219,72,43)" fg:x="143854896" fg:w="2999285"/><text x="48.7767%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,999,285 samples, 1.01%)</title><rect x="48.5267%" y="1221" width="1.0118%" height="15" fill="rgb(209,138,14)" fg:x="143854896" fg:w="2999285"/><text x="48.7767%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="933" width="1.0063%" height="15" fill="rgb(222,18,33)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="917" width="1.0063%" height="15" fill="rgb(213,199,7)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="901" width="1.0063%" height="15" fill="rgb(250,110,10)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="885" width="1.0063%" height="15" fill="rgb(248,123,6)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="895.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="869" width="1.0063%" height="15" fill="rgb(206,91,31)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="853" width="1.0063%" height="15" fill="rgb(211,154,13)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="837" width="1.0063%" height="15" fill="rgb(225,148,7)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="821" width="1.0063%" height="15" fill="rgb(220,160,43)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="805" width="1.0063%" height="15" fill="rgb(213,52,39)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="815.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="789" width="1.0063%" height="15" fill="rgb(243,137,7)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="773" width="1.0063%" height="15" fill="rgb(230,79,13)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="757" width="1.0063%" height="15" fill="rgb(247,105,23)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="741" width="1.0063%" height="15" fill="rgb(223,179,41)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="725" width="1.0063%" height="15" fill="rgb(218,9,34)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="735.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="709" width="1.0063%" height="15" fill="rgb(222,106,8)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="693" width="1.0063%" height="15" fill="rgb(211,220,0)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="677" width="1.0063%" height="15" fill="rgb(229,52,16)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="661" width="1.0063%" height="15" fill="rgb(212,155,18)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="645" width="1.0063%" height="15" fill="rgb(242,21,14)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="655.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="629" width="1.0063%" height="15" fill="rgb(222,19,48)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="613" width="1.0063%" height="15" fill="rgb(232,45,27)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="597" width="1.0063%" height="15" fill="rgb(249,103,42)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="581" width="1.0063%" height="15" fill="rgb(246,81,33)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="565" width="1.0063%" height="15" fill="rgb(252,33,42)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="575.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="549" width="1.0063%" height="15" fill="rgb(209,212,41)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="533" width="1.0063%" height="15" fill="rgb(207,154,6)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="517" width="1.0063%" height="15" fill="rgb(223,64,47)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="501" width="1.0063%" height="15" fill="rgb(211,161,38)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="485" width="1.0063%" height="15" fill="rgb(219,138,40)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,983,266 samples, 1.01%)</title><rect x="49.5384%" y="469" width="1.0063%" height="15" fill="rgb(241,228,46)" fg:x="146854181" fg:w="2983266"/><text x="49.7884%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,618,652 samples, 2.23%)</title><rect x="49.5384%" y="1013" width="2.2327%" height="15" fill="rgb(223,209,38)" fg:x="146854181" fg:w="6618652"/><text x="49.7884%" y="1023.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,618,652 samples, 2.23%)</title><rect x="49.5384%" y="997" width="2.2327%" height="15" fill="rgb(236,164,45)" fg:x="146854181" fg:w="6618652"/><text x="49.7884%" y="1007.50">a..</text></g><g><title>alloc::slice::hack::to_vec (6,618,652 samples, 2.23%)</title><rect x="49.5384%" y="981" width="2.2327%" height="15" fill="rgb(231,15,5)" fg:x="146854181" fg:w="6618652"/><text x="49.7884%" y="991.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,618,652 samples, 2.23%)</title><rect x="49.5384%" y="965" width="2.2327%" height="15" fill="rgb(252,35,15)" fg:x="146854181" fg:w="6618652"/><text x="49.7884%" y="975.50">&lt;..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (6,618,652 samples, 2.23%)</title><rect x="49.5384%" y="949" width="2.2327%" height="15" fill="rgb(248,181,18)" fg:x="146854181" fg:w="6618652"/><text x="49.7884%" y="959.50">&lt;..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,635,386 samples, 1.23%)</title><rect x="50.5448%" y="933" width="1.2263%" height="15" fill="rgb(233,39,42)" fg:x="149837447" fg:w="3635386"/><text x="50.7948%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,635,386 samples, 1.23%)</title><rect x="50.5448%" y="917" width="1.2263%" height="15" fill="rgb(238,110,33)" fg:x="149837447" fg:w="3635386"/><text x="50.7948%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,635,386 samples, 1.23%)</title><rect x="50.5448%" y="901" width="1.2263%" height="15" fill="rgb(233,195,10)" fg:x="149837447" fg:w="3635386"/><text x="50.7948%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (3,635,386 samples, 1.23%)</title><rect x="50.5448%" y="885" width="1.2263%" height="15" fill="rgb(254,105,3)" fg:x="149837447" fg:w="3635386"/><text x="50.7948%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,635,386 samples, 1.23%)</title><rect x="50.5448%" y="869" width="1.2263%" height="15" fill="rgb(221,225,9)" fg:x="149837447" fg:w="3635386"/><text x="50.7948%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,635,386 samples, 1.23%)</title><rect x="50.5448%" y="853" width="1.2263%" height="15" fill="rgb(224,227,45)" fg:x="149837447" fg:w="3635386"/><text x="50.7948%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,635,386 samples, 1.23%)</title><rect x="50.5448%" y="837" width="1.2263%" height="15" fill="rgb(229,198,43)" fg:x="149837447" fg:w="3635386"/><text x="50.7948%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,635,386 samples, 1.23%)</title><rect x="50.5448%" y="821" width="1.2263%" height="15" fill="rgb(206,209,35)" fg:x="149837447" fg:w="3635386"/><text x="50.7948%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,635,386 samples, 1.23%)</title><rect x="50.5448%" y="805" width="1.2263%" height="15" fill="rgb(245,195,53)" fg:x="149837447" fg:w="3635386"/><text x="50.7948%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,635,386 samples, 1.23%)</title><rect x="50.5448%" y="789" width="1.2263%" height="15" fill="rgb(240,92,26)" fg:x="149837447" fg:w="3635386"/><text x="50.7948%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,635,386 samples, 1.23%)</title><rect x="50.5448%" y="773" width="1.2263%" height="15" fill="rgb(207,40,23)" fg:x="149837447" fg:w="3635386"/><text x="50.7948%" y="783.50"></text></g><g><title>alloc::alloc::alloc (3,635,386 samples, 1.23%)</title><rect x="50.5448%" y="757" width="1.2263%" height="15" fill="rgb(223,111,35)" fg:x="149837447" fg:w="3635386"/><text x="50.7948%" y="767.50"></text></g><g><title>malloc (3,635,386 samples, 1.23%)</title><rect x="50.5448%" y="741" width="1.2263%" height="15" fill="rgb(229,147,28)" fg:x="149837447" fg:w="3635386"/><text x="50.7948%" y="751.50"></text></g><g><title>[libc.so.6] (3,635,386 samples, 1.23%)</title><rect x="50.5448%" y="725" width="1.2263%" height="15" fill="rgb(211,29,28)" fg:x="149837447" fg:w="3635386"/><text x="50.7948%" y="735.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,050,989 samples, 1.03%)</title><rect x="51.7711%" y="1013" width="1.0292%" height="15" fill="rgb(228,72,33)" fg:x="153472833" fg:w="3050989"/><text x="52.0211%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,050,989 samples, 1.03%)</title><rect x="51.7711%" y="997" width="1.0292%" height="15" fill="rgb(205,214,31)" fg:x="153472833" fg:w="3050989"/><text x="52.0211%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,050,989 samples, 1.03%)</title><rect x="51.7711%" y="981" width="1.0292%" height="15" fill="rgb(224,111,15)" fg:x="153472833" fg:w="3050989"/><text x="52.0211%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (3,050,989 samples, 1.03%)</title><rect x="51.7711%" y="965" width="1.0292%" height="15" fill="rgb(253,21,26)" fg:x="153472833" fg:w="3050989"/><text x="52.0211%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,050,989 samples, 1.03%)</title><rect x="51.7711%" y="949" width="1.0292%" height="15" fill="rgb(245,139,43)" fg:x="153472833" fg:w="3050989"/><text x="52.0211%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,050,989 samples, 1.03%)</title><rect x="51.7711%" y="933" width="1.0292%" height="15" fill="rgb(252,170,7)" fg:x="153472833" fg:w="3050989"/><text x="52.0211%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,050,989 samples, 1.03%)</title><rect x="51.7711%" y="917" width="1.0292%" height="15" fill="rgb(231,118,14)" fg:x="153472833" fg:w="3050989"/><text x="52.0211%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,050,989 samples, 1.03%)</title><rect x="51.7711%" y="901" width="1.0292%" height="15" fill="rgb(238,83,0)" fg:x="153472833" fg:w="3050989"/><text x="52.0211%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,050,989 samples, 1.03%)</title><rect x="51.7711%" y="885" width="1.0292%" height="15" fill="rgb(221,39,39)" fg:x="153472833" fg:w="3050989"/><text x="52.0211%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,050,989 samples, 1.03%)</title><rect x="51.7711%" y="869" width="1.0292%" height="15" fill="rgb(222,119,46)" fg:x="153472833" fg:w="3050989"/><text x="52.0211%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,050,989 samples, 1.03%)</title><rect x="51.7711%" y="853" width="1.0292%" height="15" fill="rgb(222,165,49)" fg:x="153472833" fg:w="3050989"/><text x="52.0211%" y="863.50"></text></g><g><title>alloc::alloc::alloc (3,050,989 samples, 1.03%)</title><rect x="51.7711%" y="837" width="1.0292%" height="15" fill="rgb(219,113,52)" fg:x="153472833" fg:w="3050989"/><text x="52.0211%" y="847.50"></text></g><g><title>__rdl_alloc (3,050,989 samples, 1.03%)</title><rect x="51.7711%" y="821" width="1.0292%" height="15" fill="rgb(214,7,15)" fg:x="153472833" fg:w="3050989"/><text x="52.0211%" y="831.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,050,989 samples, 1.03%)</title><rect x="51.7711%" y="805" width="1.0292%" height="15" fill="rgb(235,32,4)" fg:x="153472833" fg:w="3050989"/><text x="52.0211%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,015,508 samples, 4.39%)</title><rect x="49.5384%" y="1093" width="4.3905%" height="15" fill="rgb(238,90,54)" fg:x="146854181" fg:w="13015508"/><text x="49.7884%" y="1103.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,015,508 samples, 4.39%)</title><rect x="49.5384%" y="1077" width="4.3905%" height="15" fill="rgb(213,208,19)" fg:x="146854181" fg:w="13015508"/><text x="49.7884%" y="1087.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (13,015,508 samples, 4.39%)</title><rect x="49.5384%" y="1061" width="4.3905%" height="15" fill="rgb(233,156,4)" fg:x="146854181" fg:w="13015508"/><text x="49.7884%" y="1071.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,015,508 samples, 4.39%)</title><rect x="49.5384%" y="1045" width="4.3905%" height="15" fill="rgb(207,194,5)" fg:x="146854181" fg:w="13015508"/><text x="49.7884%" y="1055.50">&lt;T as..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (13,015,508 samples, 4.39%)</title><rect x="49.5384%" y="1029" width="4.3905%" height="15" fill="rgb(206,111,30)" fg:x="146854181" fg:w="13015508"/><text x="49.7884%" y="1039.50">&lt;css_..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,345,867 samples, 1.13%)</title><rect x="52.8003%" y="1013" width="1.1287%" height="15" fill="rgb(243,70,54)" fg:x="156523822" fg:w="3345867"/><text x="53.0503%" y="1023.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,345,867 samples, 1.13%)</title><rect x="52.8003%" y="997" width="1.1287%" height="15" fill="rgb(242,28,8)" fg:x="156523822" fg:w="3345867"/><text x="53.0503%" y="1007.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,345,867 samples, 1.13%)</title><rect x="52.8003%" y="981" width="1.1287%" height="15" fill="rgb(219,106,18)" fg:x="156523822" fg:w="3345867"/><text x="53.0503%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,345,867 samples, 1.13%)</title><rect x="52.8003%" y="965" width="1.1287%" height="15" fill="rgb(244,222,10)" fg:x="156523822" fg:w="3345867"/><text x="53.0503%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,345,867 samples, 1.13%)</title><rect x="52.8003%" y="949" width="1.1287%" height="15" fill="rgb(236,179,52)" fg:x="156523822" fg:w="3345867"/><text x="53.0503%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,345,867 samples, 1.13%)</title><rect x="52.8003%" y="933" width="1.1287%" height="15" fill="rgb(213,23,39)" fg:x="156523822" fg:w="3345867"/><text x="53.0503%" y="943.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3,345,867 samples, 1.13%)</title><rect x="52.8003%" y="917" width="1.1287%" height="15" fill="rgb(238,48,10)" fg:x="156523822" fg:w="3345867"/><text x="53.0503%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3,345,867 samples, 1.13%)</title><rect x="52.8003%" y="901" width="1.1287%" height="15" fill="rgb(251,196,23)" fg:x="156523822" fg:w="3345867"/><text x="53.0503%" y="911.50"></text></g><g><title>core::ptr::write (3,345,867 samples, 1.13%)</title><rect x="52.8003%" y="885" width="1.1287%" height="15" fill="rgb(250,152,24)" fg:x="156523822" fg:w="3345867"/><text x="53.0503%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,238,031 samples, 6.49%)</title><rect x="48.5267%" y="1253" width="6.4896%" height="15" fill="rgb(209,150,17)" fg:x="143854896" fg:w="19238031"/><text x="48.7767%" y="1263.50">&lt;alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,238,746 samples, 5.48%)</title><rect x="49.5384%" y="1237" width="5.4778%" height="15" fill="rgb(234,202,34)" fg:x="146854181" fg:w="16238746"/><text x="49.7884%" y="1247.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (16,238,746 samples, 5.48%)</title><rect x="49.5384%" y="1221" width="5.4778%" height="15" fill="rgb(253,148,53)" fg:x="146854181" fg:w="16238746"/><text x="49.7884%" y="1231.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16,238,746 samples, 5.48%)</title><rect x="49.5384%" y="1205" width="5.4778%" height="15" fill="rgb(218,129,16)" fg:x="146854181" fg:w="16238746"/><text x="49.7884%" y="1215.50">&lt;T as a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (16,238,746 samples, 5.48%)</title><rect x="49.5384%" y="1189" width="5.4778%" height="15" fill="rgb(216,85,19)" fg:x="146854181" fg:w="16238746"/><text x="49.7884%" y="1199.50">&lt;css_bi..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,238,746 samples, 5.48%)</title><rect x="49.5384%" y="1173" width="5.4778%" height="15" fill="rgb(235,228,7)" fg:x="146854181" fg:w="16238746"/><text x="49.7884%" y="1183.50">&lt;alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,238,746 samples, 5.48%)</title><rect x="49.5384%" y="1157" width="5.4778%" height="15" fill="rgb(245,175,0)" fg:x="146854181" fg:w="16238746"/><text x="49.7884%" y="1167.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (16,238,746 samples, 5.48%)</title><rect x="49.5384%" y="1141" width="5.4778%" height="15" fill="rgb(208,168,36)" fg:x="146854181" fg:w="16238746"/><text x="49.7884%" y="1151.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16,238,746 samples, 5.48%)</title><rect x="49.5384%" y="1125" width="5.4778%" height="15" fill="rgb(246,171,24)" fg:x="146854181" fg:w="16238746"/><text x="49.7884%" y="1135.50">&lt;T as a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (16,238,746 samples, 5.48%)</title><rect x="49.5384%" y="1109" width="5.4778%" height="15" fill="rgb(215,142,24)" fg:x="146854181" fg:w="16238746"/><text x="49.7884%" y="1119.50">&lt;css_bi..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,223,238 samples, 1.09%)</title><rect x="53.9290%" y="1093" width="1.0873%" height="15" fill="rgb(250,187,7)" fg:x="159869689" fg:w="3223238"/><text x="54.1790%" y="1103.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,223,238 samples, 1.09%)</title><rect x="53.9290%" y="1077" width="1.0873%" height="15" fill="rgb(228,66,33)" fg:x="159869689" fg:w="3223238"/><text x="54.1790%" y="1087.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,223,238 samples, 1.09%)</title><rect x="53.9290%" y="1061" width="1.0873%" height="15" fill="rgb(234,215,21)" fg:x="159869689" fg:w="3223238"/><text x="54.1790%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,223,238 samples, 1.09%)</title><rect x="53.9290%" y="1045" width="1.0873%" height="15" fill="rgb(222,191,20)" fg:x="159869689" fg:w="3223238"/><text x="54.1790%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,223,238 samples, 1.09%)</title><rect x="53.9290%" y="1029" width="1.0873%" height="15" fill="rgb(245,79,54)" fg:x="159869689" fg:w="3223238"/><text x="54.1790%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,223,238 samples, 1.09%)</title><rect x="53.9290%" y="1013" width="1.0873%" height="15" fill="rgb(240,10,37)" fg:x="159869689" fg:w="3223238"/><text x="54.1790%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3,223,238 samples, 1.09%)</title><rect x="53.9290%" y="997" width="1.0873%" height="15" fill="rgb(214,192,32)" fg:x="159869689" fg:w="3223238"/><text x="54.1790%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3,223,238 samples, 1.09%)</title><rect x="53.9290%" y="981" width="1.0873%" height="15" fill="rgb(209,36,54)" fg:x="159869689" fg:w="3223238"/><text x="54.1790%" y="991.50"></text></g><g><title>core::ptr::write (3,223,238 samples, 1.09%)</title><rect x="53.9290%" y="965" width="1.0873%" height="15" fill="rgb(220,10,11)" fg:x="159869689" fg:w="3223238"/><text x="54.1790%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (10,211,691 samples, 3.44%)</title><rect x="55.0163%" y="1253" width="3.4447%" height="15" fill="rgb(221,106,17)" fg:x="163092927" fg:w="10211691"/><text x="55.2663%" y="1263.50">&lt;co..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10,211,691 samples, 3.44%)</title><rect x="55.0163%" y="1237" width="3.4447%" height="15" fill="rgb(251,142,44)" fg:x="163092927" fg:w="10211691"/><text x="55.2663%" y="1247.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,211,691 samples, 3.44%)</title><rect x="55.0163%" y="1221" width="3.4447%" height="15" fill="rgb(238,13,15)" fg:x="163092927" fg:w="10211691"/><text x="55.2663%" y="1231.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,211,691 samples, 3.44%)</title><rect x="55.0163%" y="1205" width="3.4447%" height="15" fill="rgb(208,107,27)" fg:x="163092927" fg:w="10211691"/><text x="55.2663%" y="1215.50">all..</text></g><g><title>alloc::slice::hack::to_vec (10,211,691 samples, 3.44%)</title><rect x="55.0163%" y="1189" width="3.4447%" height="15" fill="rgb(205,136,37)" fg:x="163092927" fg:w="10211691"/><text x="55.2663%" y="1199.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,211,691 samples, 3.44%)</title><rect x="55.0163%" y="1173" width="3.4447%" height="15" fill="rgb(250,205,27)" fg:x="163092927" fg:w="10211691"/><text x="55.2663%" y="1183.50">&lt;T ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10,211,691 samples, 3.44%)</title><rect x="55.0163%" y="1157" width="3.4447%" height="15" fill="rgb(210,80,43)" fg:x="163092927" fg:w="10211691"/><text x="55.2663%" y="1167.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10,211,691 samples, 3.44%)</title><rect x="55.0163%" y="1141" width="3.4447%" height="15" fill="rgb(247,160,36)" fg:x="163092927" fg:w="10211691"/><text x="55.2663%" y="1151.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (10,211,691 samples, 3.44%)</title><rect x="55.0163%" y="1125" width="3.4447%" height="15" fill="rgb(234,13,49)" fg:x="163092927" fg:w="10211691"/><text x="55.2663%" y="1135.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (10,211,691 samples, 3.44%)</title><rect x="55.0163%" y="1109" width="3.4447%" height="15" fill="rgb(234,122,0)" fg:x="163092927" fg:w="10211691"/><text x="55.2663%" y="1119.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,211,691 samples, 3.44%)</title><rect x="55.0163%" y="1093" width="3.4447%" height="15" fill="rgb(207,146,38)" fg:x="163092927" fg:w="10211691"/><text x="55.2663%" y="1103.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (10,211,691 samples, 3.44%)</title><rect x="55.0163%" y="1077" width="3.4447%" height="15" fill="rgb(207,177,25)" fg:x="163092927" fg:w="10211691"/><text x="55.2663%" y="1087.50">all..</text></g><g><title>alloc::alloc::alloc (10,211,691 samples, 3.44%)</title><rect x="55.0163%" y="1061" width="3.4447%" height="15" fill="rgb(211,178,42)" fg:x="163092927" fg:w="10211691"/><text x="55.2663%" y="1071.50">all..</text></g><g><title>malloc (10,211,691 samples, 3.44%)</title><rect x="55.0163%" y="1045" width="3.4447%" height="15" fill="rgb(230,69,54)" fg:x="163092927" fg:w="10211691"/><text x="55.2663%" y="1055.50">mal..</text></g><g><title>[libc.so.6] (10,211,691 samples, 3.44%)</title><rect x="55.0163%" y="1029" width="3.4447%" height="15" fill="rgb(214,135,41)" fg:x="163092927" fg:w="10211691"/><text x="55.2663%" y="1039.50">[li..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,980,339 samples, 1.01%)</title><rect x="58.4610%" y="1253" width="1.0054%" height="15" fill="rgb(237,67,25)" fg:x="173304618" fg:w="2980339"/><text x="58.7110%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,980,339 samples, 1.01%)</title><rect x="58.4610%" y="1237" width="1.0054%" height="15" fill="rgb(222,189,50)" fg:x="173304618" fg:w="2980339"/><text x="58.7110%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,980,339 samples, 1.01%)</title><rect x="58.4610%" y="1221" width="1.0054%" height="15" fill="rgb(245,148,34)" fg:x="173304618" fg:w="2980339"/><text x="58.7110%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (2,980,339 samples, 1.01%)</title><rect x="58.4610%" y="1205" width="1.0054%" height="15" fill="rgb(222,29,6)" fg:x="173304618" fg:w="2980339"/><text x="58.7110%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,980,339 samples, 1.01%)</title><rect x="58.4610%" y="1189" width="1.0054%" height="15" fill="rgb(221,189,43)" fg:x="173304618" fg:w="2980339"/><text x="58.7110%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,980,339 samples, 1.01%)</title><rect x="58.4610%" y="1173" width="1.0054%" height="15" fill="rgb(207,36,27)" fg:x="173304618" fg:w="2980339"/><text x="58.7110%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,980,339 samples, 1.01%)</title><rect x="58.4610%" y="1157" width="1.0054%" height="15" fill="rgb(217,90,24)" fg:x="173304618" fg:w="2980339"/><text x="58.7110%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,980,339 samples, 1.01%)</title><rect x="58.4610%" y="1141" width="1.0054%" height="15" fill="rgb(224,66,35)" fg:x="173304618" fg:w="2980339"/><text x="58.7110%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,980,339 samples, 1.01%)</title><rect x="58.4610%" y="1125" width="1.0054%" height="15" fill="rgb(221,13,50)" fg:x="173304618" fg:w="2980339"/><text x="58.7110%" y="1135.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (39,197,589 samples, 13.22%)</title><rect x="47.2540%" y="1269" width="13.2226%" height="15" fill="rgb(236,68,49)" fg:x="140082017" fg:w="39197589"/><text x="47.5040%" y="1279.50">&lt;css_bitvector_compi..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1253" width="1.0102%" height="15" fill="rgb(229,146,28)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1263.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1237" width="1.0102%" height="15" fill="rgb(225,31,38)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1247.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1221" width="1.0102%" height="15" fill="rgb(250,208,3)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1231.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1205" width="1.0102%" height="15" fill="rgb(246,54,23)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1215.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1189" width="1.0102%" height="15" fill="rgb(243,76,11)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1173" width="1.0102%" height="15" fill="rgb(245,21,50)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1183.50"></text></g><g><title>core::clone::Clone::clone (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1157" width="1.0102%" height="15" fill="rgb(228,9,43)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1167.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1141" width="1.0102%" height="15" fill="rgb(208,100,47)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1125" width="1.0102%" height="15" fill="rgb(232,26,8)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1109" width="1.0102%" height="15" fill="rgb(216,166,38)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1093" width="1.0102%" height="15" fill="rgb(251,202,51)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1077" width="1.0102%" height="15" fill="rgb(254,216,34)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1061" width="1.0102%" height="15" fill="rgb(251,32,27)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1045" width="1.0102%" height="15" fill="rgb(208,127,28)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1029" width="1.0102%" height="15" fill="rgb(224,137,22)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="1013" width="1.0102%" height="15" fill="rgb(254,70,32)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="997" width="1.0102%" height="15" fill="rgb(229,75,37)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="981" width="1.0102%" height="15" fill="rgb(252,64,23)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="991.50"></text></g><g><title>alloc::alloc::alloc (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="965" width="1.0102%" height="15" fill="rgb(232,162,48)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="975.50"></text></g><g><title>malloc (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="949" width="1.0102%" height="15" fill="rgb(246,160,12)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="959.50"></text></g><g><title>[libc.so.6] (2,994,649 samples, 1.01%)</title><rect x="59.4664%" y="933" width="1.0102%" height="15" fill="rgb(247,166,0)" fg:x="176284957" fg:w="2994649"/><text x="59.7164%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (53,227,118 samples, 17.96%)</title><rect x="46.0492%" y="1333" width="17.9551%" height="15" fill="rgb(249,219,21)" fg:x="136510641" fg:w="53227118"/><text x="46.2992%" y="1343.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (53,227,118 samples, 17.96%)</title><rect x="46.0492%" y="1317" width="17.9551%" height="15" fill="rgb(205,209,3)" fg:x="136510641" fg:w="53227118"/><text x="46.2992%" y="1327.50">alloc::slice::&lt;impl [T]&gt;::to..</text></g><g><title>alloc::slice::hack::to_vec (53,227,118 samples, 17.96%)</title><rect x="46.0492%" y="1301" width="17.9551%" height="15" fill="rgb(243,44,1)" fg:x="136510641" fg:w="53227118"/><text x="46.2992%" y="1311.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (53,227,118 samples, 17.96%)</title><rect x="46.0492%" y="1285" width="17.9551%" height="15" fill="rgb(206,159,16)" fg:x="136510641" fg:w="53227118"/><text x="46.2992%" y="1295.50">&lt;T as alloc::slice::hack::Co..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10,458,153 samples, 3.53%)</title><rect x="60.4765%" y="1269" width="3.5279%" height="15" fill="rgb(244,77,30)" fg:x="179279606" fg:w="10458153"/><text x="60.7265%" y="1279.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10,458,153 samples, 3.53%)</title><rect x="60.4765%" y="1253" width="3.5279%" height="15" fill="rgb(218,69,12)" fg:x="179279606" fg:w="10458153"/><text x="60.7265%" y="1263.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (10,458,153 samples, 3.53%)</title><rect x="60.4765%" y="1237" width="3.5279%" height="15" fill="rgb(212,87,7)" fg:x="179279606" fg:w="10458153"/><text x="60.7265%" y="1247.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (10,458,153 samples, 3.53%)</title><rect x="60.4765%" y="1221" width="3.5279%" height="15" fill="rgb(245,114,25)" fg:x="179279606" fg:w="10458153"/><text x="60.7265%" y="1231.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,458,153 samples, 3.53%)</title><rect x="60.4765%" y="1205" width="3.5279%" height="15" fill="rgb(210,61,42)" fg:x="179279606" fg:w="10458153"/><text x="60.7265%" y="1215.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (10,458,153 samples, 3.53%)</title><rect x="60.4765%" y="1189" width="3.5279%" height="15" fill="rgb(211,52,33)" fg:x="179279606" fg:w="10458153"/><text x="60.7265%" y="1199.50">all..</text></g><g><title>alloc::alloc::alloc (10,458,153 samples, 3.53%)</title><rect x="60.4765%" y="1173" width="3.5279%" height="15" fill="rgb(234,58,33)" fg:x="179279606" fg:w="10458153"/><text x="60.7265%" y="1183.50">all..</text></g><g><title>malloc (10,458,153 samples, 3.53%)</title><rect x="60.4765%" y="1157" width="3.5279%" height="15" fill="rgb(220,115,36)" fg:x="179279606" fg:w="10458153"/><text x="60.7265%" y="1167.50">mal..</text></g><g><title>[libc.so.6] (10,458,153 samples, 3.53%)</title><rect x="60.4765%" y="1141" width="3.5279%" height="15" fill="rgb(243,153,54)" fg:x="179279606" fg:w="10458153"/><text x="60.7265%" y="1151.50">[li..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (62,857,621 samples, 21.20%)</title><rect x="44.8243%" y="1493" width="21.2038%" height="15" fill="rgb(251,47,18)" fg:x="132879343" fg:w="62857621"/><text x="45.0743%" y="1503.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (62,857,621 samples, 21.20%)</title><rect x="44.8243%" y="1477" width="21.2038%" height="15" fill="rgb(242,102,42)" fg:x="132879343" fg:w="62857621"/><text x="45.0743%" y="1487.50">alloc::slice::&lt;impl [T]&gt;::to_vec_..</text></g><g><title>alloc::slice::hack::to_vec (62,857,621 samples, 21.20%)</title><rect x="44.8243%" y="1461" width="21.2038%" height="15" fill="rgb(234,31,38)" fg:x="132879343" fg:w="62857621"/><text x="45.0743%" y="1471.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (62,857,621 samples, 21.20%)</title><rect x="44.8243%" y="1445" width="21.2038%" height="15" fill="rgb(221,117,51)" fg:x="132879343" fg:w="62857621"/><text x="45.0743%" y="1455.50">&lt;T as alloc::slice::hack::Convert..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (62,857,621 samples, 21.20%)</title><rect x="44.8243%" y="1429" width="21.2038%" height="15" fill="rgb(212,20,18)" fg:x="132879343" fg:w="62857621"/><text x="45.0743%" y="1439.50">&lt;css_bitvector_compiler::HtmlNode..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (62,857,621 samples, 21.20%)</title><rect x="44.8243%" y="1413" width="21.2038%" height="15" fill="rgb(245,133,36)" fg:x="132879343" fg:w="62857621"/><text x="45.0743%" y="1423.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (62,857,621 samples, 21.20%)</title><rect x="44.8243%" y="1397" width="21.2038%" height="15" fill="rgb(212,6,19)" fg:x="132879343" fg:w="62857621"/><text x="45.0743%" y="1407.50">alloc::slice::&lt;impl [T]&gt;::to_vec_..</text></g><g><title>alloc::slice::hack::to_vec (62,857,621 samples, 21.20%)</title><rect x="44.8243%" y="1381" width="21.2038%" height="15" fill="rgb(218,1,36)" fg:x="132879343" fg:w="62857621"/><text x="45.0743%" y="1391.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (62,857,621 samples, 21.20%)</title><rect x="44.8243%" y="1365" width="21.2038%" height="15" fill="rgb(246,84,54)" fg:x="132879343" fg:w="62857621"/><text x="45.0743%" y="1375.50">&lt;T as alloc::slice::hack::Convert..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (62,857,621 samples, 21.20%)</title><rect x="44.8243%" y="1349" width="21.2038%" height="15" fill="rgb(242,110,6)" fg:x="132879343" fg:w="62857621"/><text x="45.0743%" y="1359.50">&lt;css_bitvector_compiler::HtmlNode..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (5,999,205 samples, 2.02%)</title><rect x="64.0044%" y="1333" width="2.0237%" height="15" fill="rgb(214,47,5)" fg:x="189737759" fg:w="5999205"/><text x="64.2544%" y="1343.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,999,205 samples, 2.02%)</title><rect x="64.0044%" y="1317" width="2.0237%" height="15" fill="rgb(218,159,25)" fg:x="189737759" fg:w="5999205"/><text x="64.2544%" y="1327.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,999,205 samples, 2.02%)</title><rect x="64.0044%" y="1301" width="2.0237%" height="15" fill="rgb(215,211,28)" fg:x="189737759" fg:w="5999205"/><text x="64.2544%" y="1311.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,999,205 samples, 2.02%)</title><rect x="64.0044%" y="1285" width="2.0237%" height="15" fill="rgb(238,59,32)" fg:x="189737759" fg:w="5999205"/><text x="64.2544%" y="1295.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,999,205 samples, 2.02%)</title><rect x="64.0044%" y="1269" width="2.0237%" height="15" fill="rgb(226,82,3)" fg:x="189737759" fg:w="5999205"/><text x="64.2544%" y="1279.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,999,205 samples, 2.02%)</title><rect x="64.0044%" y="1253" width="2.0237%" height="15" fill="rgb(240,164,32)" fg:x="189737759" fg:w="5999205"/><text x="64.2544%" y="1263.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,999,205 samples, 2.02%)</title><rect x="64.0044%" y="1237" width="2.0237%" height="15" fill="rgb(232,46,7)" fg:x="189737759" fg:w="5999205"/><text x="64.2544%" y="1247.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,999,205 samples, 2.02%)</title><rect x="64.0044%" y="1221" width="2.0237%" height="15" fill="rgb(229,129,53)" fg:x="189737759" fg:w="5999205"/><text x="64.2544%" y="1231.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,999,205 samples, 2.02%)</title><rect x="64.0044%" y="1205" width="2.0237%" height="15" fill="rgb(234,188,29)" fg:x="189737759" fg:w="5999205"/><text x="64.2544%" y="1215.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,999,205 samples, 2.02%)</title><rect x="64.0044%" y="1189" width="2.0237%" height="15" fill="rgb(246,141,4)" fg:x="189737759" fg:w="5999205"/><text x="64.2544%" y="1199.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,999,205 samples, 2.02%)</title><rect x="64.0044%" y="1173" width="2.0237%" height="15" fill="rgb(229,23,39)" fg:x="189737759" fg:w="5999205"/><text x="64.2544%" y="1183.50">a..</text></g><g><title>alloc::alloc::alloc (5,999,205 samples, 2.02%)</title><rect x="64.0044%" y="1157" width="2.0237%" height="15" fill="rgb(206,12,3)" fg:x="189737759" fg:w="5999205"/><text x="64.2544%" y="1167.50">a..</text></g><g><title>malloc (5,999,205 samples, 2.02%)</title><rect x="64.0044%" y="1141" width="2.0237%" height="15" fill="rgb(252,226,20)" fg:x="189737759" fg:w="5999205"/><text x="64.2544%" y="1151.50">m..</text></g><g><title>[libc.so.6] (5,999,205 samples, 2.02%)</title><rect x="64.0044%" y="1125" width="2.0237%" height="15" fill="rgb(216,123,35)" fg:x="189737759" fg:w="5999205"/><text x="64.2544%" y="1135.50">[..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,049,175 samples, 1.03%)</title><rect x="66.0281%" y="1493" width="1.0286%" height="15" fill="rgb(212,68,40)" fg:x="195736964" fg:w="3049175"/><text x="66.2781%" y="1503.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,049,175 samples, 1.03%)</title><rect x="66.0281%" y="1477" width="1.0286%" height="15" fill="rgb(254,125,32)" fg:x="195736964" fg:w="3049175"/><text x="66.2781%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,049,175 samples, 1.03%)</title><rect x="66.0281%" y="1461" width="1.0286%" height="15" fill="rgb(253,97,22)" fg:x="195736964" fg:w="3049175"/><text x="66.2781%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,049,175 samples, 1.03%)</title><rect x="66.0281%" y="1445" width="1.0286%" height="15" fill="rgb(241,101,14)" fg:x="195736964" fg:w="3049175"/><text x="66.2781%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (3,049,175 samples, 1.03%)</title><rect x="66.0281%" y="1429" width="1.0286%" height="15" fill="rgb(238,103,29)" fg:x="195736964" fg:w="3049175"/><text x="66.2781%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,049,175 samples, 1.03%)</title><rect x="66.0281%" y="1413" width="1.0286%" height="15" fill="rgb(233,195,47)" fg:x="195736964" fg:w="3049175"/><text x="66.2781%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,049,175 samples, 1.03%)</title><rect x="66.0281%" y="1397" width="1.0286%" height="15" fill="rgb(246,218,30)" fg:x="195736964" fg:w="3049175"/><text x="66.2781%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,049,175 samples, 1.03%)</title><rect x="66.0281%" y="1381" width="1.0286%" height="15" fill="rgb(219,145,47)" fg:x="195736964" fg:w="3049175"/><text x="66.2781%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,049,175 samples, 1.03%)</title><rect x="66.0281%" y="1365" width="1.0286%" height="15" fill="rgb(243,12,26)" fg:x="195736964" fg:w="3049175"/><text x="66.2781%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,049,175 samples, 1.03%)</title><rect x="66.0281%" y="1349" width="1.0286%" height="15" fill="rgb(214,87,16)" fg:x="195736964" fg:w="3049175"/><text x="66.2781%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,049,175 samples, 1.03%)</title><rect x="66.0281%" y="1333" width="1.0286%" height="15" fill="rgb(208,99,42)" fg:x="195736964" fg:w="3049175"/><text x="66.2781%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,049,175 samples, 1.03%)</title><rect x="66.0281%" y="1317" width="1.0286%" height="15" fill="rgb(253,99,2)" fg:x="195736964" fg:w="3049175"/><text x="66.2781%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (3,049,175 samples, 1.03%)</title><rect x="66.0281%" y="1301" width="1.0286%" height="15" fill="rgb(220,168,23)" fg:x="195736964" fg:w="3049175"/><text x="66.2781%" y="1311.50"></text></g><g><title>malloc (3,049,175 samples, 1.03%)</title><rect x="66.0281%" y="1285" width="1.0286%" height="15" fill="rgb(242,38,24)" fg:x="195736964" fg:w="3049175"/><text x="66.2781%" y="1295.50"></text></g><g><title>[libc.so.6] (3,049,175 samples, 1.03%)</title><rect x="66.0281%" y="1269" width="1.0286%" height="15" fill="rgb(225,182,9)" fg:x="195736964" fg:w="3049175"/><text x="66.2781%" y="1279.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (69,652,773 samples, 23.50%)</title><rect x="44.8243%" y="1589" width="23.4960%" height="15" fill="rgb(243,178,37)" fg:x="132879343" fg:w="69652773"/><text x="45.0743%" y="1599.50">&lt;css_bitvector_compiler::HtmlNode as ..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (69,652,773 samples, 23.50%)</title><rect x="44.8243%" y="1573" width="23.4960%" height="15" fill="rgb(232,139,19)" fg:x="132879343" fg:w="69652773"/><text x="45.0743%" y="1583.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69,652,773 samples, 23.50%)</title><rect x="44.8243%" y="1557" width="23.4960%" height="15" fill="rgb(225,201,24)" fg:x="132879343" fg:w="69652773"/><text x="45.0743%" y="1567.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (69,652,773 samples, 23.50%)</title><rect x="44.8243%" y="1541" width="23.4960%" height="15" fill="rgb(221,47,46)" fg:x="132879343" fg:w="69652773"/><text x="45.0743%" y="1551.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (69,652,773 samples, 23.50%)</title><rect x="44.8243%" y="1525" width="23.4960%" height="15" fill="rgb(249,23,13)" fg:x="132879343" fg:w="69652773"/><text x="45.0743%" y="1535.50">&lt;T as alloc::slice::hack::ConvertVec&gt;..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (69,652,773 samples, 23.50%)</title><rect x="44.8243%" y="1509" width="23.4960%" height="15" fill="rgb(219,9,5)" fg:x="132879343" fg:w="69652773"/><text x="45.0743%" y="1519.50">&lt;css_bitvector_compiler::HtmlNode as ..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,745,977 samples, 1.26%)</title><rect x="67.0567%" y="1493" width="1.2636%" height="15" fill="rgb(254,171,16)" fg:x="198786139" fg:w="3745977"/><text x="67.3067%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,745,977 samples, 1.26%)</title><rect x="67.0567%" y="1477" width="1.2636%" height="15" fill="rgb(230,171,20)" fg:x="198786139" fg:w="3745977"/><text x="67.3067%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,745,977 samples, 1.26%)</title><rect x="67.0567%" y="1461" width="1.2636%" height="15" fill="rgb(210,71,41)" fg:x="198786139" fg:w="3745977"/><text x="67.3067%" y="1471.50"></text></g><g><title>alloc::slice::hack::to_vec (3,745,977 samples, 1.26%)</title><rect x="67.0567%" y="1445" width="1.2636%" height="15" fill="rgb(206,173,20)" fg:x="198786139" fg:w="3745977"/><text x="67.3067%" y="1455.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,745,977 samples, 1.26%)</title><rect x="67.0567%" y="1429" width="1.2636%" height="15" fill="rgb(233,88,34)" fg:x="198786139" fg:w="3745977"/><text x="67.3067%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,745,977 samples, 1.26%)</title><rect x="67.0567%" y="1413" width="1.2636%" height="15" fill="rgb(223,209,46)" fg:x="198786139" fg:w="3745977"/><text x="67.3067%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,745,977 samples, 1.26%)</title><rect x="67.0567%" y="1397" width="1.2636%" height="15" fill="rgb(250,43,18)" fg:x="198786139" fg:w="3745977"/><text x="67.3067%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,745,977 samples, 1.26%)</title><rect x="67.0567%" y="1381" width="1.2636%" height="15" fill="rgb(208,13,10)" fg:x="198786139" fg:w="3745977"/><text x="67.3067%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,745,977 samples, 1.26%)</title><rect x="67.0567%" y="1365" width="1.2636%" height="15" fill="rgb(212,200,36)" fg:x="198786139" fg:w="3745977"/><text x="67.3067%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,745,977 samples, 1.26%)</title><rect x="67.0567%" y="1349" width="1.2636%" height="15" fill="rgb(225,90,30)" fg:x="198786139" fg:w="3745977"/><text x="67.3067%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,745,977 samples, 1.26%)</title><rect x="67.0567%" y="1333" width="1.2636%" height="15" fill="rgb(236,182,39)" fg:x="198786139" fg:w="3745977"/><text x="67.3067%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (3,745,977 samples, 1.26%)</title><rect x="67.0567%" y="1317" width="1.2636%" height="15" fill="rgb(212,144,35)" fg:x="198786139" fg:w="3745977"/><text x="67.3067%" y="1327.50"></text></g><g><title>malloc (3,745,977 samples, 1.26%)</title><rect x="67.0567%" y="1301" width="1.2636%" height="15" fill="rgb(228,63,44)" fg:x="198786139" fg:w="3745977"/><text x="67.3067%" y="1311.50"></text></g><g><title>[libc.so.6] (3,745,977 samples, 1.26%)</title><rect x="67.0567%" y="1285" width="1.2636%" height="15" fill="rgb(228,109,6)" fg:x="198786139" fg:w="3745977"/><text x="67.3067%" y="1295.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (73,287,883 samples, 24.72%)</title><rect x="44.8243%" y="1829" width="24.7223%" height="15" fill="rgb(238,117,24)" fg:x="132879343" fg:w="73287883"/><text x="45.0743%" y="1839.50">&lt;css_bitvector_compiler::HtmlNode as co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (73,287,883 samples, 24.72%)</title><rect x="44.8243%" y="1813" width="24.7223%" height="15" fill="rgb(242,26,26)" fg:x="132879343" fg:w="73287883"/><text x="45.0743%" y="1823.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::C..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (73,287,883 samples, 24.72%)</title><rect x="44.8243%" y="1797" width="24.7223%" height="15" fill="rgb(221,92,48)" fg:x="132879343" fg:w="73287883"/><text x="45.0743%" y="1807.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (73,287,883 samples, 24.72%)</title><rect x="44.8243%" y="1781" width="24.7223%" height="15" fill="rgb(209,209,32)" fg:x="132879343" fg:w="73287883"/><text x="45.0743%" y="1791.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (73,287,883 samples, 24.72%)</title><rect x="44.8243%" y="1765" width="24.7223%" height="15" fill="rgb(221,70,22)" fg:x="132879343" fg:w="73287883"/><text x="45.0743%" y="1775.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (73,287,883 samples, 24.72%)</title><rect x="44.8243%" y="1749" width="24.7223%" height="15" fill="rgb(248,145,5)" fg:x="132879343" fg:w="73287883"/><text x="45.0743%" y="1759.50">&lt;css_bitvector_compiler::HtmlNode as co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (73,287,883 samples, 24.72%)</title><rect x="44.8243%" y="1733" width="24.7223%" height="15" fill="rgb(226,116,26)" fg:x="132879343" fg:w="73287883"/><text x="45.0743%" y="1743.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::C..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (73,287,883 samples, 24.72%)</title><rect x="44.8243%" y="1717" width="24.7223%" height="15" fill="rgb(244,5,17)" fg:x="132879343" fg:w="73287883"/><text x="45.0743%" y="1727.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (73,287,883 samples, 24.72%)</title><rect x="44.8243%" y="1701" width="24.7223%" height="15" fill="rgb(252,159,33)" fg:x="132879343" fg:w="73287883"/><text x="45.0743%" y="1711.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (73,287,883 samples, 24.72%)</title><rect x="44.8243%" y="1685" width="24.7223%" height="15" fill="rgb(206,71,0)" fg:x="132879343" fg:w="73287883"/><text x="45.0743%" y="1695.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (73,287,883 samples, 24.72%)</title><rect x="44.8243%" y="1669" width="24.7223%" height="15" fill="rgb(233,118,54)" fg:x="132879343" fg:w="73287883"/><text x="45.0743%" y="1679.50">&lt;css_bitvector_compiler::HtmlNode as co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (73,287,883 samples, 24.72%)</title><rect x="44.8243%" y="1653" width="24.7223%" height="15" fill="rgb(234,83,48)" fg:x="132879343" fg:w="73287883"/><text x="45.0743%" y="1663.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::C..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (73,287,883 samples, 24.72%)</title><rect x="44.8243%" y="1637" width="24.7223%" height="15" fill="rgb(228,3,54)" fg:x="132879343" fg:w="73287883"/><text x="45.0743%" y="1647.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (73,287,883 samples, 24.72%)</title><rect x="44.8243%" y="1621" width="24.7223%" height="15" fill="rgb(226,155,13)" fg:x="132879343" fg:w="73287883"/><text x="45.0743%" y="1631.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (73,287,883 samples, 24.72%)</title><rect x="44.8243%" y="1605" width="24.7223%" height="15" fill="rgb(241,28,37)" fg:x="132879343" fg:w="73287883"/><text x="45.0743%" y="1615.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,635,110 samples, 1.23%)</title><rect x="68.3203%" y="1589" width="1.2262%" height="15" fill="rgb(233,93,10)" fg:x="202532116" fg:w="3635110"/><text x="68.5703%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,635,110 samples, 1.23%)</title><rect x="68.3203%" y="1573" width="1.2262%" height="15" fill="rgb(225,113,19)" fg:x="202532116" fg:w="3635110"/><text x="68.5703%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,635,110 samples, 1.23%)</title><rect x="68.3203%" y="1557" width="1.2262%" height="15" fill="rgb(241,2,18)" fg:x="202532116" fg:w="3635110"/><text x="68.5703%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,635,110 samples, 1.23%)</title><rect x="68.3203%" y="1541" width="1.2262%" height="15" fill="rgb(228,207,21)" fg:x="202532116" fg:w="3635110"/><text x="68.5703%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,635,110 samples, 1.23%)</title><rect x="68.3203%" y="1525" width="1.2262%" height="15" fill="rgb(213,211,35)" fg:x="202532116" fg:w="3635110"/><text x="68.5703%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,635,110 samples, 1.23%)</title><rect x="68.3203%" y="1509" width="1.2262%" height="15" fill="rgb(209,83,10)" fg:x="202532116" fg:w="3635110"/><text x="68.5703%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (3,635,110 samples, 1.23%)</title><rect x="68.3203%" y="1493" width="1.2262%" height="15" fill="rgb(209,164,1)" fg:x="202532116" fg:w="3635110"/><text x="68.5703%" y="1503.50"></text></g><g><title>malloc (3,635,110 samples, 1.23%)</title><rect x="68.3203%" y="1477" width="1.2262%" height="15" fill="rgb(213,184,43)" fg:x="202532116" fg:w="3635110"/><text x="68.5703%" y="1487.50"></text></g><g><title>[libc.so.6] (3,635,110 samples, 1.23%)</title><rect x="68.3203%" y="1461" width="1.2262%" height="15" fill="rgb(231,61,34)" fg:x="202532116" fg:w="3635110"/><text x="68.5703%" y="1471.50"></text></g><g><title>[libc.so.6] (3,635,110 samples, 1.23%)</title><rect x="68.3203%" y="1445" width="1.2262%" height="15" fill="rgb(235,75,3)" fg:x="202532116" fg:w="3635110"/><text x="68.5703%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,330,940 samples, 1.12%)</title><rect x="69.5466%" y="1365" width="1.1236%" height="15" fill="rgb(220,106,47)" fg:x="206167226" fg:w="3330940"/><text x="69.7966%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,330,940 samples, 1.12%)</title><rect x="69.5466%" y="1349" width="1.1236%" height="15" fill="rgb(210,196,33)" fg:x="206167226" fg:w="3330940"/><text x="69.7966%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,330,940 samples, 1.12%)</title><rect x="69.5466%" y="1333" width="1.1236%" height="15" fill="rgb(229,154,42)" fg:x="206167226" fg:w="3330940"/><text x="69.7966%" y="1343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,330,940 samples, 1.12%)</title><rect x="69.5466%" y="1317" width="1.1236%" height="15" fill="rgb(228,114,26)" fg:x="206167226" fg:w="3330940"/><text x="69.7966%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,330,940 samples, 1.12%)</title><rect x="69.5466%" y="1301" width="1.1236%" height="15" fill="rgb(208,144,1)" fg:x="206167226" fg:w="3330940"/><text x="69.7966%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,330,940 samples, 1.12%)</title><rect x="69.5466%" y="1285" width="1.1236%" height="15" fill="rgb(239,112,37)" fg:x="206167226" fg:w="3330940"/><text x="69.7966%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (3,330,940 samples, 1.12%)</title><rect x="69.5466%" y="1269" width="1.1236%" height="15" fill="rgb(210,96,50)" fg:x="206167226" fg:w="3330940"/><text x="69.7966%" y="1279.50"></text></g><g><title>cfree (3,330,940 samples, 1.12%)</title><rect x="69.5466%" y="1253" width="1.1236%" height="15" fill="rgb(222,178,2)" fg:x="206167226" fg:w="3330940"/><text x="69.7966%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,506,038 samples, 2.19%)</title><rect x="70.6702%" y="1301" width="2.1947%" height="15" fill="rgb(226,74,18)" fg:x="209498166" fg:w="6506038"/><text x="70.9202%" y="1311.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,506,038 samples, 2.19%)</title><rect x="70.6702%" y="1285" width="2.1947%" height="15" fill="rgb(225,67,54)" fg:x="209498166" fg:w="6506038"/><text x="70.9202%" y="1295.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,506,038 samples, 2.19%)</title><rect x="70.6702%" y="1269" width="2.1947%" height="15" fill="rgb(251,92,32)" fg:x="209498166" fg:w="6506038"/><text x="70.9202%" y="1279.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,506,038 samples, 2.19%)</title><rect x="70.6702%" y="1253" width="2.1947%" height="15" fill="rgb(228,149,22)" fg:x="209498166" fg:w="6506038"/><text x="70.9202%" y="1263.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,506,038 samples, 2.19%)</title><rect x="70.6702%" y="1237" width="2.1947%" height="15" fill="rgb(243,54,13)" fg:x="209498166" fg:w="6506038"/><text x="70.9202%" y="1247.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,506,038 samples, 2.19%)</title><rect x="70.6702%" y="1221" width="2.1947%" height="15" fill="rgb(243,180,28)" fg:x="209498166" fg:w="6506038"/><text x="70.9202%" y="1231.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,506,038 samples, 2.19%)</title><rect x="70.6702%" y="1205" width="2.1947%" height="15" fill="rgb(208,167,24)" fg:x="209498166" fg:w="6506038"/><text x="70.9202%" y="1215.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,506,038 samples, 2.19%)</title><rect x="70.6702%" y="1189" width="2.1947%" height="15" fill="rgb(245,73,45)" fg:x="209498166" fg:w="6506038"/><text x="70.9202%" y="1199.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,506,038 samples, 2.19%)</title><rect x="70.6702%" y="1173" width="2.1947%" height="15" fill="rgb(237,203,48)" fg:x="209498166" fg:w="6506038"/><text x="70.9202%" y="1183.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,506,038 samples, 2.19%)</title><rect x="70.6702%" y="1157" width="2.1947%" height="15" fill="rgb(211,197,16)" fg:x="209498166" fg:w="6506038"/><text x="70.9202%" y="1167.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,506,038 samples, 2.19%)</title><rect x="70.6702%" y="1141" width="2.1947%" height="15" fill="rgb(243,99,51)" fg:x="209498166" fg:w="6506038"/><text x="70.9202%" y="1151.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,065,048 samples, 1.03%)</title><rect x="71.8309%" y="1125" width="1.0339%" height="15" fill="rgb(215,123,29)" fg:x="212939156" fg:w="3065048"/><text x="72.0809%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,065,048 samples, 1.03%)</title><rect x="71.8309%" y="1109" width="1.0339%" height="15" fill="rgb(239,186,37)" fg:x="212939156" fg:w="3065048"/><text x="72.0809%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,065,048 samples, 1.03%)</title><rect x="71.8309%" y="1093" width="1.0339%" height="15" fill="rgb(252,136,39)" fg:x="212939156" fg:w="3065048"/><text x="72.0809%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,065,048 samples, 1.03%)</title><rect x="71.8309%" y="1077" width="1.0339%" height="15" fill="rgb(223,213,32)" fg:x="212939156" fg:w="3065048"/><text x="72.0809%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,065,048 samples, 1.03%)</title><rect x="71.8309%" y="1061" width="1.0339%" height="15" fill="rgb(233,115,5)" fg:x="212939156" fg:w="3065048"/><text x="72.0809%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,065,048 samples, 1.03%)</title><rect x="71.8309%" y="1045" width="1.0339%" height="15" fill="rgb(207,226,44)" fg:x="212939156" fg:w="3065048"/><text x="72.0809%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,065,048 samples, 1.03%)</title><rect x="71.8309%" y="1029" width="1.0339%" height="15" fill="rgb(208,126,0)" fg:x="212939156" fg:w="3065048"/><text x="72.0809%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,065,048 samples, 1.03%)</title><rect x="71.8309%" y="1013" width="1.0339%" height="15" fill="rgb(244,66,21)" fg:x="212939156" fg:w="3065048"/><text x="72.0809%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,065,048 samples, 1.03%)</title><rect x="71.8309%" y="997" width="1.0339%" height="15" fill="rgb(222,97,12)" fg:x="212939156" fg:w="3065048"/><text x="72.0809%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,065,048 samples, 1.03%)</title><rect x="71.8309%" y="981" width="1.0339%" height="15" fill="rgb(219,213,19)" fg:x="212939156" fg:w="3065048"/><text x="72.0809%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,065,048 samples, 1.03%)</title><rect x="71.8309%" y="965" width="1.0339%" height="15" fill="rgb(252,169,30)" fg:x="212939156" fg:w="3065048"/><text x="72.0809%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,065,048 samples, 1.03%)</title><rect x="71.8309%" y="949" width="1.0339%" height="15" fill="rgb(206,32,51)" fg:x="212939156" fg:w="3065048"/><text x="72.0809%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (3,065,048 samples, 1.03%)</title><rect x="71.8309%" y="933" width="1.0339%" height="15" fill="rgb(250,172,42)" fg:x="212939156" fg:w="3065048"/><text x="72.0809%" y="943.50"></text></g><g><title>cfree (3,065,048 samples, 1.03%)</title><rect x="71.8309%" y="917" width="1.0339%" height="15" fill="rgb(209,34,43)" fg:x="212939156" fg:w="3065048"/><text x="72.0809%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,834,684 samples, 4.33%)</title><rect x="69.5466%" y="1477" width="4.3295%" height="15" fill="rgb(223,11,35)" fg:x="206167226" fg:w="12834684"/><text x="69.7966%" y="1487.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (12,834,684 samples, 4.33%)</title><rect x="69.5466%" y="1461" width="4.3295%" height="15" fill="rgb(251,219,26)" fg:x="206167226" fg:w="12834684"/><text x="69.7966%" y="1471.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (12,834,684 samples, 4.33%)</title><rect x="69.5466%" y="1445" width="4.3295%" height="15" fill="rgb(231,119,3)" fg:x="206167226" fg:w="12834684"/><text x="69.7966%" y="1455.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (12,834,684 samples, 4.33%)</title><rect x="69.5466%" y="1429" width="4.3295%" height="15" fill="rgb(216,97,11)" fg:x="206167226" fg:w="12834684"/><text x="69.7966%" y="1439.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,834,684 samples, 4.33%)</title><rect x="69.5466%" y="1413" width="4.3295%" height="15" fill="rgb(223,59,9)" fg:x="206167226" fg:w="12834684"/><text x="69.7966%" y="1423.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (12,834,684 samples, 4.33%)</title><rect x="69.5466%" y="1397" width="4.3295%" height="15" fill="rgb(233,93,31)" fg:x="206167226" fg:w="12834684"/><text x="69.7966%" y="1407.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (12,834,684 samples, 4.33%)</title><rect x="69.5466%" y="1381" width="4.3295%" height="15" fill="rgb(239,81,33)" fg:x="206167226" fg:w="12834684"/><text x="69.7966%" y="1391.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,503,744 samples, 3.21%)</title><rect x="70.6702%" y="1365" width="3.2059%" height="15" fill="rgb(213,120,34)" fg:x="209498166" fg:w="9503744"/><text x="70.9202%" y="1375.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,503,744 samples, 3.21%)</title><rect x="70.6702%" y="1349" width="3.2059%" height="15" fill="rgb(243,49,53)" fg:x="209498166" fg:w="9503744"/><text x="70.9202%" y="1359.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,503,744 samples, 3.21%)</title><rect x="70.6702%" y="1333" width="3.2059%" height="15" fill="rgb(247,216,33)" fg:x="209498166" fg:w="9503744"/><text x="70.9202%" y="1343.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,503,744 samples, 3.21%)</title><rect x="70.6702%" y="1317" width="3.2059%" height="15" fill="rgb(226,26,14)" fg:x="209498166" fg:w="9503744"/><text x="70.9202%" y="1327.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,997,706 samples, 1.01%)</title><rect x="72.8649%" y="1301" width="1.0112%" height="15" fill="rgb(215,49,53)" fg:x="216004204" fg:w="2997706"/><text x="73.1149%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,997,706 samples, 1.01%)</title><rect x="72.8649%" y="1285" width="1.0112%" height="15" fill="rgb(245,162,40)" fg:x="216004204" fg:w="2997706"/><text x="73.1149%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,997,706 samples, 1.01%)</title><rect x="72.8649%" y="1269" width="1.0112%" height="15" fill="rgb(229,68,17)" fg:x="216004204" fg:w="2997706"/><text x="73.1149%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,997,706 samples, 1.01%)</title><rect x="72.8649%" y="1253" width="1.0112%" height="15" fill="rgb(213,182,10)" fg:x="216004204" fg:w="2997706"/><text x="73.1149%" y="1263.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,997,706 samples, 1.01%)</title><rect x="72.8649%" y="1237" width="1.0112%" height="15" fill="rgb(245,125,30)" fg:x="216004204" fg:w="2997706"/><text x="73.1149%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,997,706 samples, 1.01%)</title><rect x="72.8649%" y="1221" width="1.0112%" height="15" fill="rgb(232,202,2)" fg:x="216004204" fg:w="2997706"/><text x="73.1149%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,997,706 samples, 1.01%)</title><rect x="72.8649%" y="1205" width="1.0112%" height="15" fill="rgb(237,140,51)" fg:x="216004204" fg:w="2997706"/><text x="73.1149%" y="1215.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,997,706 samples, 1.01%)</title><rect x="72.8649%" y="1189" width="1.0112%" height="15" fill="rgb(236,157,25)" fg:x="216004204" fg:w="2997706"/><text x="73.1149%" y="1199.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,997,706 samples, 1.01%)</title><rect x="72.8649%" y="1173" width="1.0112%" height="15" fill="rgb(219,209,0)" fg:x="216004204" fg:w="2997706"/><text x="73.1149%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,997,706 samples, 1.01%)</title><rect x="72.8649%" y="1157" width="1.0112%" height="15" fill="rgb(240,116,54)" fg:x="216004204" fg:w="2997706"/><text x="73.1149%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,997,706 samples, 1.01%)</title><rect x="72.8649%" y="1141" width="1.0112%" height="15" fill="rgb(216,10,36)" fg:x="216004204" fg:w="2997706"/><text x="73.1149%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,997,706 samples, 1.01%)</title><rect x="72.8649%" y="1125" width="1.0112%" height="15" fill="rgb(222,72,44)" fg:x="216004204" fg:w="2997706"/><text x="73.1149%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,997,706 samples, 1.01%)</title><rect x="72.8649%" y="1109" width="1.0112%" height="15" fill="rgb(232,159,9)" fg:x="216004204" fg:w="2997706"/><text x="73.1149%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,997,706 samples, 1.01%)</title><rect x="72.8649%" y="1093" width="1.0112%" height="15" fill="rgb(210,39,32)" fg:x="216004204" fg:w="2997706"/><text x="73.1149%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (26,070,959 samples, 8.79%)</title><rect x="69.5466%" y="1621" width="8.7945%" height="15" fill="rgb(216,194,45)" fg:x="206167226" fg:w="26070959"/><text x="69.7966%" y="1631.50">core::ptr::d..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26,070,959 samples, 8.79%)</title><rect x="69.5466%" y="1605" width="8.7945%" height="15" fill="rgb(218,18,35)" fg:x="206167226" fg:w="26070959"/><text x="69.7966%" y="1615.50">&lt;alloc::vec:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (26,070,959 samples, 8.79%)</title><rect x="69.5466%" y="1589" width="8.7945%" height="15" fill="rgb(207,83,51)" fg:x="206167226" fg:w="26070959"/><text x="69.7966%" y="1599.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (26,070,959 samples, 8.79%)</title><rect x="69.5466%" y="1573" width="8.7945%" height="15" fill="rgb(225,63,43)" fg:x="206167226" fg:w="26070959"/><text x="69.7966%" y="1583.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (26,070,959 samples, 8.79%)</title><rect x="69.5466%" y="1557" width="8.7945%" height="15" fill="rgb(207,57,36)" fg:x="206167226" fg:w="26070959"/><text x="69.7966%" y="1567.50">core::ptr::d..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26,070,959 samples, 8.79%)</title><rect x="69.5466%" y="1541" width="8.7945%" height="15" fill="rgb(216,99,33)" fg:x="206167226" fg:w="26070959"/><text x="69.7966%" y="1551.50">&lt;alloc::vec:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (26,070,959 samples, 8.79%)</title><rect x="69.5466%" y="1525" width="8.7945%" height="15" fill="rgb(225,42,16)" fg:x="206167226" fg:w="26070959"/><text x="69.7966%" y="1535.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (26,070,959 samples, 8.79%)</title><rect x="69.5466%" y="1509" width="8.7945%" height="15" fill="rgb(220,201,45)" fg:x="206167226" fg:w="26070959"/><text x="69.7966%" y="1519.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (26,070,959 samples, 8.79%)</title><rect x="69.5466%" y="1493" width="8.7945%" height="15" fill="rgb(225,33,4)" fg:x="206167226" fg:w="26070959"/><text x="69.7966%" y="1503.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,236,275 samples, 4.47%)</title><rect x="73.8761%" y="1477" width="4.4650%" height="15" fill="rgb(224,33,50)" fg:x="219001910" fg:w="13236275"/><text x="74.1261%" y="1487.50">core:..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,236,275 samples, 4.47%)</title><rect x="73.8761%" y="1461" width="4.4650%" height="15" fill="rgb(246,198,51)" fg:x="219001910" fg:w="13236275"/><text x="74.1261%" y="1471.50">&lt;allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (13,236,275 samples, 4.47%)</title><rect x="73.8761%" y="1445" width="4.4650%" height="15" fill="rgb(205,22,4)" fg:x="219001910" fg:w="13236275"/><text x="74.1261%" y="1455.50">alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13,236,275 samples, 4.47%)</title><rect x="73.8761%" y="1429" width="4.4650%" height="15" fill="rgb(206,3,8)" fg:x="219001910" fg:w="13236275"/><text x="74.1261%" y="1439.50">&lt;allo..</text></g><g><title>alloc::alloc::dealloc (13,236,275 samples, 4.47%)</title><rect x="73.8761%" y="1413" width="4.4650%" height="15" fill="rgb(251,23,15)" fg:x="219001910" fg:w="13236275"/><text x="74.1261%" y="1423.50">alloc..</text></g><g><title>cfree (13,236,275 samples, 4.47%)</title><rect x="73.8761%" y="1397" width="4.4650%" height="15" fill="rgb(252,88,28)" fg:x="219001910" fg:w="13236275"/><text x="74.1261%" y="1407.50">cfree</text></g><g><title>[libc.so.6] (13,236,275 samples, 4.47%)</title><rect x="73.8761%" y="1381" width="4.4650%" height="15" fill="rgb(212,127,14)" fg:x="219001910" fg:w="13236275"/><text x="74.1261%" y="1391.50">[libc..</text></g><g><title>[libc.so.6] (13,236,275 samples, 4.47%)</title><rect x="73.8761%" y="1365" width="4.4650%" height="15" fill="rgb(247,145,37)" fg:x="219001910" fg:w="13236275"/><text x="74.1261%" y="1375.50">[libc..</text></g><g><title>[libc.so.6] (3,325,288 samples, 1.12%)</title><rect x="77.2194%" y="1349" width="1.1217%" height="15" fill="rgb(209,117,53)" fg:x="228912897" fg:w="3325288"/><text x="77.4694%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,259,640 samples, 1.10%)</title><rect x="78.3411%" y="1621" width="1.0996%" height="15" fill="rgb(212,90,42)" fg:x="232238185" fg:w="3259640"/><text x="78.5911%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,259,640 samples, 1.10%)</title><rect x="78.3411%" y="1605" width="1.0996%" height="15" fill="rgb(218,164,37)" fg:x="232238185" fg:w="3259640"/><text x="78.5911%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,259,640 samples, 1.10%)</title><rect x="78.3411%" y="1589" width="1.0996%" height="15" fill="rgb(246,65,34)" fg:x="232238185" fg:w="3259640"/><text x="78.5911%" y="1599.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,259,640 samples, 1.10%)</title><rect x="78.3411%" y="1573" width="1.0996%" height="15" fill="rgb(231,100,33)" fg:x="232238185" fg:w="3259640"/><text x="78.5911%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,259,640 samples, 1.10%)</title><rect x="78.3411%" y="1557" width="1.0996%" height="15" fill="rgb(228,126,14)" fg:x="232238185" fg:w="3259640"/><text x="78.5911%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,259,640 samples, 1.10%)</title><rect x="78.3411%" y="1541" width="1.0996%" height="15" fill="rgb(215,173,21)" fg:x="232238185" fg:w="3259640"/><text x="78.5911%" y="1551.50"></text></g><g><title>alloc::alloc::dealloc (3,259,640 samples, 1.10%)</title><rect x="78.3411%" y="1525" width="1.0996%" height="15" fill="rgb(210,6,40)" fg:x="232238185" fg:w="3259640"/><text x="78.5911%" y="1535.50"></text></g><g><title>cfree (3,259,640 samples, 1.10%)</title><rect x="78.3411%" y="1509" width="1.0996%" height="15" fill="rgb(212,48,18)" fg:x="232238185" fg:w="3259640"/><text x="78.5911%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (32,633,185 samples, 11.01%)</title><rect x="69.5466%" y="1829" width="11.0082%" height="15" fill="rgb(230,214,11)" fg:x="206167226" fg:w="32633185"/><text x="69.7966%" y="1839.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (32,633,185 samples, 11.01%)</title><rect x="69.5466%" y="1813" width="11.0082%" height="15" fill="rgb(254,105,39)" fg:x="206167226" fg:w="32633185"/><text x="69.7966%" y="1823.50">core::ptr::drop_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32,633,185 samples, 11.01%)</title><rect x="69.5466%" y="1797" width="11.0082%" height="15" fill="rgb(245,158,5)" fg:x="206167226" fg:w="32633185"/><text x="69.7966%" y="1807.50">&lt;alloc::vec::Vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (32,633,185 samples, 11.01%)</title><rect x="69.5466%" y="1781" width="11.0082%" height="15" fill="rgb(249,208,11)" fg:x="206167226" fg:w="32633185"/><text x="69.7966%" y="1791.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (32,633,185 samples, 11.01%)</title><rect x="69.5466%" y="1765" width="11.0082%" height="15" fill="rgb(210,39,28)" fg:x="206167226" fg:w="32633185"/><text x="69.7966%" y="1775.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (32,633,185 samples, 11.01%)</title><rect x="69.5466%" y="1749" width="11.0082%" height="15" fill="rgb(211,56,53)" fg:x="206167226" fg:w="32633185"/><text x="69.7966%" y="1759.50">core::ptr::drop_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32,633,185 samples, 11.01%)</title><rect x="69.5466%" y="1733" width="11.0082%" height="15" fill="rgb(226,201,30)" fg:x="206167226" fg:w="32633185"/><text x="69.7966%" y="1743.50">&lt;alloc::vec::Vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (32,633,185 samples, 11.01%)</title><rect x="69.5466%" y="1717" width="11.0082%" height="15" fill="rgb(239,101,34)" fg:x="206167226" fg:w="32633185"/><text x="69.7966%" y="1727.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (32,633,185 samples, 11.01%)</title><rect x="69.5466%" y="1701" width="11.0082%" height="15" fill="rgb(226,209,5)" fg:x="206167226" fg:w="32633185"/><text x="69.7966%" y="1711.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (32,633,185 samples, 11.01%)</title><rect x="69.5466%" y="1685" width="11.0082%" height="15" fill="rgb(250,105,47)" fg:x="206167226" fg:w="32633185"/><text x="69.7966%" y="1695.50">core::ptr::drop_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32,633,185 samples, 11.01%)</title><rect x="69.5466%" y="1669" width="11.0082%" height="15" fill="rgb(230,72,3)" fg:x="206167226" fg:w="32633185"/><text x="69.7966%" y="1679.50">&lt;alloc::vec::Vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (32,633,185 samples, 11.01%)</title><rect x="69.5466%" y="1653" width="11.0082%" height="15" fill="rgb(232,218,39)" fg:x="206167226" fg:w="32633185"/><text x="69.7966%" y="1663.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (32,633,185 samples, 11.01%)</title><rect x="69.5466%" y="1637" width="11.0082%" height="15" fill="rgb(248,166,6)" fg:x="206167226" fg:w="32633185"/><text x="69.7966%" y="1647.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,302,586 samples, 1.11%)</title><rect x="79.4407%" y="1621" width="1.1141%" height="15" fill="rgb(247,89,20)" fg:x="235497825" fg:w="3302586"/><text x="79.6907%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,302,586 samples, 1.11%)</title><rect x="79.4407%" y="1605" width="1.1141%" height="15" fill="rgb(248,130,54)" fg:x="235497825" fg:w="3302586"/><text x="79.6907%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,302,586 samples, 1.11%)</title><rect x="79.4407%" y="1589" width="1.1141%" height="15" fill="rgb(234,196,4)" fg:x="235497825" fg:w="3302586"/><text x="79.6907%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,302,586 samples, 1.11%)</title><rect x="79.4407%" y="1573" width="1.1141%" height="15" fill="rgb(250,143,31)" fg:x="235497825" fg:w="3302586"/><text x="79.6907%" y="1583.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,302,586 samples, 1.11%)</title><rect x="79.4407%" y="1557" width="1.1141%" height="15" fill="rgb(211,110,34)" fg:x="235497825" fg:w="3302586"/><text x="79.6907%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,302,586 samples, 1.11%)</title><rect x="79.4407%" y="1541" width="1.1141%" height="15" fill="rgb(215,124,48)" fg:x="235497825" fg:w="3302586"/><text x="79.6907%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,302,586 samples, 1.11%)</title><rect x="79.4407%" y="1525" width="1.1141%" height="15" fill="rgb(216,46,13)" fg:x="235497825" fg:w="3302586"/><text x="79.6907%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (3,302,586 samples, 1.11%)</title><rect x="79.4407%" y="1509" width="1.1141%" height="15" fill="rgb(205,184,25)" fg:x="235497825" fg:w="3302586"/><text x="79.6907%" y="1519.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (3,302,586 samples, 1.11%)</title><rect x="79.4407%" y="1493" width="1.1141%" height="15" fill="rgb(228,1,10)" fg:x="235497825" fg:w="3302586"/><text x="79.6907%" y="1503.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3,302,586 samples, 1.11%)</title><rect x="79.4407%" y="1477" width="1.1141%" height="15" fill="rgb(213,116,27)" fg:x="235497825" fg:w="3302586"/><text x="79.6907%" y="1487.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,113,763 samples, 1.05%)</title><rect x="80.5547%" y="1829" width="1.0504%" height="15" fill="rgb(241,95,50)" fg:x="238800411" fg:w="3113763"/><text x="80.8047%" y="1839.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,113,763 samples, 1.05%)</title><rect x="80.5547%" y="1813" width="1.0504%" height="15" fill="rgb(238,48,32)" fg:x="238800411" fg:w="3113763"/><text x="80.8047%" y="1823.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,113,763 samples, 1.05%)</title><rect x="80.5547%" y="1797" width="1.0504%" height="15" fill="rgb(235,113,49)" fg:x="238800411" fg:w="3113763"/><text x="80.8047%" y="1807.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,113,763 samples, 1.05%)</title><rect x="80.5547%" y="1781" width="1.0504%" height="15" fill="rgb(205,127,43)" fg:x="238800411" fg:w="3113763"/><text x="80.8047%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (3,107,331 samples, 1.05%)</title><rect x="81.6051%" y="1813" width="1.0482%" height="15" fill="rgb(250,162,2)" fg:x="241914174" fg:w="3107331"/><text x="81.8551%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,107,331 samples, 1.05%)</title><rect x="81.6051%" y="1797" width="1.0482%" height="15" fill="rgb(220,13,41)" fg:x="241914174" fg:w="3107331"/><text x="81.8551%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,107,331 samples, 1.05%)</title><rect x="81.6051%" y="1781" width="1.0482%" height="15" fill="rgb(249,221,25)" fg:x="241914174" fg:w="3107331"/><text x="81.8551%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,107,331 samples, 1.05%)</title><rect x="81.6051%" y="1765" width="1.0482%" height="15" fill="rgb(215,208,19)" fg:x="241914174" fg:w="3107331"/><text x="81.8551%" y="1775.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,107,331 samples, 1.05%)</title><rect x="81.6051%" y="1749" width="1.0482%" height="15" fill="rgb(236,175,2)" fg:x="241914174" fg:w="3107331"/><text x="81.8551%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,107,331 samples, 1.05%)</title><rect x="81.6051%" y="1733" width="1.0482%" height="15" fill="rgb(241,52,2)" fg:x="241914174" fg:w="3107331"/><text x="81.8551%" y="1743.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3,107,331 samples, 1.05%)</title><rect x="81.6051%" y="1717" width="1.0482%" height="15" fill="rgb(248,140,14)" fg:x="241914174" fg:w="3107331"/><text x="81.8551%" y="1727.50"></text></g><g><title>alloc::alloc::realloc (3,107,331 samples, 1.05%)</title><rect x="81.6051%" y="1701" width="1.0482%" height="15" fill="rgb(253,22,42)" fg:x="241914174" fg:w="3107331"/><text x="81.8551%" y="1711.50"></text></g><g><title>realloc (3,107,331 samples, 1.05%)</title><rect x="81.6051%" y="1685" width="1.0482%" height="15" fill="rgb(234,61,47)" fg:x="241914174" fg:w="3107331"/><text x="81.8551%" y="1695.50"></text></g><g><title>[libc.so.6] (3,107,331 samples, 1.05%)</title><rect x="81.6051%" y="1669" width="1.0482%" height="15" fill="rgb(208,226,15)" fg:x="241914174" fg:w="3107331"/><text x="81.8551%" y="1679.50"></text></g><g><title>[libc.so.6] (3,107,331 samples, 1.05%)</title><rect x="81.6051%" y="1653" width="1.0482%" height="15" fill="rgb(217,221,4)" fg:x="241914174" fg:w="3107331"/><text x="81.8551%" y="1663.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,790,813 samples, 0.94%)</title><rect x="82.6533%" y="1813" width="0.9414%" height="15" fill="rgb(212,174,34)" fg:x="245021505" fg:w="2790813"/><text x="82.9033%" y="1823.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,790,813 samples, 0.94%)</title><rect x="82.6533%" y="1797" width="0.9414%" height="15" fill="rgb(253,83,4)" fg:x="245021505" fg:w="2790813"/><text x="82.9033%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,999,976 samples, 1.01%)</title><rect x="83.5947%" y="1237" width="1.0120%" height="15" fill="rgb(250,195,49)" fg:x="247812318" fg:w="2999976"/><text x="83.8447%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,999,976 samples, 1.01%)</title><rect x="83.5947%" y="1221" width="1.0120%" height="15" fill="rgb(241,192,25)" fg:x="247812318" fg:w="2999976"/><text x="83.8447%" y="1231.50"></text></g><g><title>main::benchmark::count_nodes (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1813" width="4.2967%" height="15" fill="rgb(208,124,10)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1823.50">main:..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1797" width="4.2967%" height="15" fill="rgb(222,33,0)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1807.50">core:..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1781" width="4.2967%" height="15" fill="rgb(234,209,28)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1791.50">&lt;usiz..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1765" width="4.2967%" height="15" fill="rgb(224,11,23)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1775.50">&lt;core..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1749" width="4.2967%" height="15" fill="rgb(232,99,1)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1759.50">&lt;core..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1733" width="4.2967%" height="15" fill="rgb(237,95,45)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1743.50">core:..</text></g><g><title>core::ops::function::FnMut::call_mut (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1717" width="4.2967%" height="15" fill="rgb(208,109,11)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1727.50">core:..</text></g><g><title>main::benchmark::count_nodes (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1701" width="4.2967%" height="15" fill="rgb(216,190,48)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1711.50">main:..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1685" width="4.2967%" height="15" fill="rgb(251,171,36)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1695.50">core:..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1669" width="4.2967%" height="15" fill="rgb(230,62,22)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1679.50">&lt;usiz..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1653" width="4.2967%" height="15" fill="rgb(225,114,35)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1663.50">&lt;core..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1637" width="4.2967%" height="15" fill="rgb(215,118,42)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1647.50">&lt;core..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1621" width="4.2967%" height="15" fill="rgb(243,119,21)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1631.50">core:..</text></g><g><title>core::ops::function::FnMut::call_mut (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1605" width="4.2967%" height="15" fill="rgb(252,177,53)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1615.50">core:..</text></g><g><title>main::benchmark::count_nodes (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1589" width="4.2967%" height="15" fill="rgb(237,209,29)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1599.50">main:..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1573" width="4.2967%" height="15" fill="rgb(212,65,23)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1583.50">core:..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1557" width="4.2967%" height="15" fill="rgb(230,222,46)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1567.50">&lt;usiz..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1541" width="4.2967%" height="15" fill="rgb(215,135,32)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1551.50">&lt;core..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1525" width="4.2967%" height="15" fill="rgb(246,101,22)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1535.50">&lt;core..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1509" width="4.2967%" height="15" fill="rgb(206,107,13)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1519.50">core:..</text></g><g><title>core::ops::function::FnMut::call_mut (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1493" width="4.2967%" height="15" fill="rgb(250,100,44)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1503.50">core:..</text></g><g><title>main::benchmark::count_nodes (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1477" width="4.2967%" height="15" fill="rgb(231,147,38)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1487.50">main:..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1461" width="4.2967%" height="15" fill="rgb(229,8,40)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1471.50">core:..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1445" width="4.2967%" height="15" fill="rgb(221,135,30)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1455.50">&lt;usiz..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1429" width="4.2967%" height="15" fill="rgb(249,193,18)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1439.50">&lt;core..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1413" width="4.2967%" height="15" fill="rgb(209,133,39)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1423.50">&lt;core..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1397" width="4.2967%" height="15" fill="rgb(232,100,14)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1407.50">core:..</text></g><g><title>core::ops::function::FnMut::call_mut (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1381" width="4.2967%" height="15" fill="rgb(224,185,1)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1391.50">core:..</text></g><g><title>main::benchmark::count_nodes (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1365" width="4.2967%" height="15" fill="rgb(223,139,8)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1375.50">main:..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1349" width="4.2967%" height="15" fill="rgb(232,213,38)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1359.50">core:..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1333" width="4.2967%" height="15" fill="rgb(207,94,22)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1343.50">&lt;usiz..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1317" width="4.2967%" height="15" fill="rgb(219,183,54)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1327.50">&lt;core..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1301" width="4.2967%" height="15" fill="rgb(216,185,54)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1311.50">&lt;core..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1285" width="4.2967%" height="15" fill="rgb(254,217,39)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1295.50">core:..</text></g><g><title>core::ops::function::FnMut::call_mut (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1269" width="4.2967%" height="15" fill="rgb(240,178,23)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1279.50">core:..</text></g><g><title>main::benchmark::count_nodes (12,737,355 samples, 4.30%)</title><rect x="83.5947%" y="1253" width="4.2967%" height="15" fill="rgb(218,11,47)" fg:x="247812318" fg:w="12737355"/><text x="83.8447%" y="1263.50">main:..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (9,737,379 samples, 3.28%)</title><rect x="84.6067%" y="1237" width="3.2847%" height="15" fill="rgb(218,51,51)" fg:x="250812294" fg:w="9737379"/><text x="84.8567%" y="1247.50">cor..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (9,737,379 samples, 3.28%)</title><rect x="84.6067%" y="1221" width="3.2847%" height="15" fill="rgb(238,126,27)" fg:x="250812294" fg:w="9737379"/><text x="84.8567%" y="1231.50">&lt;us..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,737,379 samples, 3.28%)</title><rect x="84.6067%" y="1205" width="3.2847%" height="15" fill="rgb(249,202,22)" fg:x="250812294" fg:w="9737379"/><text x="84.8567%" y="1215.50">&lt;co..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,737,379 samples, 3.28%)</title><rect x="84.6067%" y="1189" width="3.2847%" height="15" fill="rgb(254,195,49)" fg:x="250812294" fg:w="9737379"/><text x="84.8567%" y="1199.50">&lt;co..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (9,737,379 samples, 3.28%)</title><rect x="84.6067%" y="1173" width="3.2847%" height="15" fill="rgb(208,123,14)" fg:x="250812294" fg:w="9737379"/><text x="84.8567%" y="1183.50">cor..</text></g><g><title>core::ops::function::FnMut::call_mut (9,737,379 samples, 3.28%)</title><rect x="84.6067%" y="1157" width="3.2847%" height="15" fill="rgb(224,200,8)" fg:x="250812294" fg:w="9737379"/><text x="84.8567%" y="1167.50">cor..</text></g><g><title>main::benchmark::count_nodes (9,737,379 samples, 3.28%)</title><rect x="84.6067%" y="1141" width="3.2847%" height="15" fill="rgb(217,61,36)" fg:x="250812294" fg:w="9737379"/><text x="84.8567%" y="1151.50">mai..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (6,691,879 samples, 2.26%)</title><rect x="85.6341%" y="1125" width="2.2574%" height="15" fill="rgb(206,35,45)" fg:x="253857794" fg:w="6691879"/><text x="85.8841%" y="1135.50">c..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (6,691,879 samples, 2.26%)</title><rect x="85.6341%" y="1109" width="2.2574%" height="15" fill="rgb(217,65,33)" fg:x="253857794" fg:w="6691879"/><text x="85.8841%" y="1119.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,691,879 samples, 2.26%)</title><rect x="85.6341%" y="1093" width="2.2574%" height="15" fill="rgb(222,158,48)" fg:x="253857794" fg:w="6691879"/><text x="85.8841%" y="1103.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,691,879 samples, 2.26%)</title><rect x="85.6341%" y="1077" width="2.2574%" height="15" fill="rgb(254,2,54)" fg:x="253857794" fg:w="6691879"/><text x="85.8841%" y="1087.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6,691,879 samples, 2.26%)</title><rect x="85.6341%" y="1061" width="2.2574%" height="15" fill="rgb(250,143,38)" fg:x="253857794" fg:w="6691879"/><text x="85.8841%" y="1071.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (6,691,879 samples, 2.26%)</title><rect x="85.6341%" y="1045" width="2.2574%" height="15" fill="rgb(248,25,0)" fg:x="253857794" fg:w="6691879"/><text x="85.8841%" y="1055.50">c..</text></g><g><title>main::benchmark::count_nodes (6,691,879 samples, 2.26%)</title><rect x="85.6341%" y="1029" width="2.2574%" height="15" fill="rgb(206,152,27)" fg:x="253857794" fg:w="6691879"/><text x="85.8841%" y="1039.50">m..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (6,691,879 samples, 2.26%)</title><rect x="85.6341%" y="1013" width="2.2574%" height="15" fill="rgb(240,77,30)" fg:x="253857794" fg:w="6691879"/><text x="85.8841%" y="1023.50">c..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (6,691,879 samples, 2.26%)</title><rect x="85.6341%" y="997" width="2.2574%" height="15" fill="rgb(231,5,3)" fg:x="253857794" fg:w="6691879"/><text x="85.8841%" y="1007.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,691,879 samples, 2.26%)</title><rect x="85.6341%" y="981" width="2.2574%" height="15" fill="rgb(207,226,32)" fg:x="253857794" fg:w="6691879"/><text x="85.8841%" y="991.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,691,879 samples, 2.26%)</title><rect x="85.6341%" y="965" width="2.2574%" height="15" fill="rgb(222,207,47)" fg:x="253857794" fg:w="6691879"/><text x="85.8841%" y="975.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6,691,879 samples, 2.26%)</title><rect x="85.6341%" y="949" width="2.2574%" height="15" fill="rgb(229,115,45)" fg:x="253857794" fg:w="6691879"/><text x="85.8841%" y="959.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (6,691,879 samples, 2.26%)</title><rect x="85.6341%" y="933" width="2.2574%" height="15" fill="rgb(224,191,6)" fg:x="253857794" fg:w="6691879"/><text x="85.8841%" y="943.50">c..</text></g><g><title>main::benchmark::count_nodes (3,406,674 samples, 1.15%)</title><rect x="86.7423%" y="917" width="1.1492%" height="15" fill="rgb(230,227,24)" fg:x="257142999" fg:w="3406674"/><text x="86.9923%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,406,674 samples, 1.15%)</title><rect x="86.7423%" y="901" width="1.1492%" height="15" fill="rgb(228,80,19)" fg:x="257142999" fg:w="3406674"/><text x="86.9923%" y="911.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,406,674 samples, 1.15%)</title><rect x="86.7423%" y="885" width="1.1492%" height="15" fill="rgb(247,229,0)" fg:x="257142999" fg:w="3406674"/><text x="86.9923%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,406,674 samples, 1.15%)</title><rect x="86.7423%" y="869" width="1.1492%" height="15" fill="rgb(237,194,15)" fg:x="257142999" fg:w="3406674"/><text x="86.9923%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,406,674 samples, 1.15%)</title><rect x="86.7423%" y="853" width="1.1492%" height="15" fill="rgb(219,203,20)" fg:x="257142999" fg:w="3406674"/><text x="86.9923%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,406,674 samples, 1.15%)</title><rect x="86.7423%" y="837" width="1.1492%" height="15" fill="rgb(234,128,8)" fg:x="257142999" fg:w="3406674"/><text x="86.9923%" y="847.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,406,674 samples, 1.15%)</title><rect x="86.7423%" y="821" width="1.1492%" height="15" fill="rgb(248,202,8)" fg:x="257142999" fg:w="3406674"/><text x="86.9923%" y="831.50"></text></g><g><title>main::benchmark::count_nodes (3,406,674 samples, 1.15%)</title><rect x="86.7423%" y="805" width="1.1492%" height="15" fill="rgb(206,104,37)" fg:x="257142999" fg:w="3406674"/><text x="86.9923%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,406,674 samples, 1.15%)</title><rect x="86.7423%" y="789" width="1.1492%" height="15" fill="rgb(223,8,27)" fg:x="257142999" fg:w="3406674"/><text x="86.9923%" y="799.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,406,674 samples, 1.15%)</title><rect x="86.7423%" y="773" width="1.1492%" height="15" fill="rgb(216,217,28)" fg:x="257142999" fg:w="3406674"/><text x="86.9923%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,406,674 samples, 1.15%)</title><rect x="86.7423%" y="757" width="1.1492%" height="15" fill="rgb(249,199,1)" fg:x="257142999" fg:w="3406674"/><text x="86.9923%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,406,674 samples, 1.15%)</title><rect x="86.7423%" y="741" width="1.1492%" height="15" fill="rgb(240,85,17)" fg:x="257142999" fg:w="3406674"/><text x="86.9923%" y="751.50"></text></g><g><title>main::benchmark::json_to_html_node (2,780,756 samples, 0.94%)</title><rect x="87.8914%" y="1813" width="0.9380%" height="15" fill="rgb(206,108,45)" fg:x="260549673" fg:w="2780756"/><text x="88.1414%" y="1823.50"></text></g><g><title>main::benchmark::json_to_html_node (2,780,756 samples, 0.94%)</title><rect x="87.8914%" y="1797" width="0.9380%" height="15" fill="rgb(245,210,41)" fg:x="260549673" fg:w="2780756"/><text x="88.1414%" y="1807.50"></text></g><g><title>main::benchmark::json_to_html_node (2,780,756 samples, 0.94%)</title><rect x="87.8914%" y="1781" width="0.9380%" height="15" fill="rgb(206,13,37)" fg:x="260549673" fg:w="2780756"/><text x="88.1414%" y="1791.50"></text></g><g><title>main::benchmark::json_to_html_node (2,780,756 samples, 0.94%)</title><rect x="87.8914%" y="1765" width="0.9380%" height="15" fill="rgb(250,61,18)" fg:x="260549673" fg:w="2780756"/><text x="88.1414%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,780,756 samples, 0.94%)</title><rect x="87.8914%" y="1749" width="0.9380%" height="15" fill="rgb(235,172,48)" fg:x="260549673" fg:w="2780756"/><text x="88.1414%" y="1759.50"></text></g><g><title>core::ptr::write (2,780,756 samples, 0.94%)</title><rect x="87.8914%" y="1733" width="0.9380%" height="15" fill="rgb(249,201,17)" fg:x="260549673" fg:w="2780756"/><text x="88.1414%" y="1743.50"></text></g><g><title>[libc.so.6] (2,780,756 samples, 0.94%)</title><rect x="87.8914%" y="1717" width="0.9380%" height="15" fill="rgb(219,208,6)" fg:x="260549673" fg:w="2780756"/><text x="88.1414%" y="1727.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (3,603,601 samples, 1.22%)</title><rect x="88.8295%" y="1701" width="1.2156%" height="15" fill="rgb(248,31,23)" fg:x="263330429" fg:w="3603601"/><text x="89.0795%" y="1711.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (3,603,601 samples, 1.22%)</title><rect x="88.8295%" y="1685" width="1.2156%" height="15" fill="rgb(245,15,42)" fg:x="263330429" fg:w="3603601"/><text x="89.0795%" y="1695.50"></text></g><g><title>core::fmt::builders::DebugList::entries (3,603,601 samples, 1.22%)</title><rect x="88.8295%" y="1669" width="1.2156%" height="15" fill="rgb(222,217,39)" fg:x="263330429" fg:w="3603601"/><text x="89.0795%" y="1679.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (3,603,601 samples, 1.22%)</title><rect x="88.8295%" y="1653" width="1.2156%" height="15" fill="rgb(210,219,27)" fg:x="263330429" fg:w="3603601"/><text x="89.0795%" y="1663.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with (3,603,601 samples, 1.22%)</title><rect x="88.8295%" y="1637" width="1.2156%" height="15" fill="rgb(252,166,36)" fg:x="263330429" fg:w="3603601"/><text x="89.0795%" y="1647.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3,603,601 samples, 1.22%)</title><rect x="88.8295%" y="1621" width="1.2156%" height="15" fill="rgb(245,132,34)" fg:x="263330429" fg:w="3603601"/><text x="89.0795%" y="1631.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with::_{{closure}} (3,603,601 samples, 1.22%)</title><rect x="88.8295%" y="1605" width="1.2156%" height="15" fill="rgb(236,54,3)" fg:x="263330429" fg:w="3603601"/><text x="89.0795%" y="1615.50"></text></g><g><title>core::fmt::builders::DebugSet::entry::_{{closure}} (3,603,601 samples, 1.22%)</title><rect x="88.8295%" y="1589" width="1.2156%" height="15" fill="rgb(241,173,43)" fg:x="263330429" fg:w="3603601"/><text x="89.0795%" y="1599.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (3,603,601 samples, 1.22%)</title><rect x="88.8295%" y="1573" width="1.2156%" height="15" fill="rgb(215,190,9)" fg:x="263330429" fg:w="3603601"/><text x="89.0795%" y="1583.50"></text></g><g><title>main::benchmark::apply_frame_modifications (28,627,157 samples, 9.66%)</title><rect x="81.6051%" y="1829" width="9.6568%" height="15" fill="rgb(242,101,16)" fg:x="241914174" fg:w="28627157"/><text x="81.8551%" y="1839.50">main::benchmar..</text></g><g><title>std::io::stdio::_print (7,210,902 samples, 2.43%)</title><rect x="88.8295%" y="1813" width="2.4325%" height="15" fill="rgb(223,190,21)" fg:x="263330429" fg:w="7210902"/><text x="89.0795%" y="1823.50">st..</text></g><g><title>std::io::stdio::print_to (7,210,902 samples, 2.43%)</title><rect x="88.8295%" y="1797" width="2.4325%" height="15" fill="rgb(215,228,25)" fg:x="263330429" fg:w="7210902"/><text x="89.0795%" y="1807.50">st..</text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (7,210,902 samples, 2.43%)</title><rect x="88.8295%" y="1781" width="2.4325%" height="15" fill="rgb(225,36,22)" fg:x="263330429" fg:w="7210902"/><text x="89.0795%" y="1791.50">&lt;s..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (7,210,902 samples, 2.43%)</title><rect x="88.8295%" y="1765" width="2.4325%" height="15" fill="rgb(251,106,46)" fg:x="263330429" fg:w="7210902"/><text x="89.0795%" y="1775.50">&lt;&amp;..</text></g><g><title>std::io::Write::write_fmt (7,210,902 samples, 2.43%)</title><rect x="88.8295%" y="1749" width="2.4325%" height="15" fill="rgb(208,90,1)" fg:x="263330429" fg:w="7210902"/><text x="89.0795%" y="1759.50">st..</text></g><g><title>core::fmt::write (7,210,902 samples, 2.43%)</title><rect x="88.8295%" y="1733" width="2.4325%" height="15" fill="rgb(243,10,4)" fg:x="263330429" fg:w="7210902"/><text x="89.0795%" y="1743.50">co..</text></g><g><title>core::fmt::rt::Argument::fmt (7,210,902 samples, 2.43%)</title><rect x="88.8295%" y="1717" width="2.4325%" height="15" fill="rgb(212,137,27)" fg:x="263330429" fg:w="7210902"/><text x="89.0795%" y="1727.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (3,607,301 samples, 1.22%)</title><rect x="90.0451%" y="1701" width="1.2169%" height="15" fill="rgb(231,220,49)" fg:x="266934030" fg:w="3607301"/><text x="90.2951%" y="1711.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (3,607,301 samples, 1.22%)</title><rect x="90.0451%" y="1685" width="1.2169%" height="15" fill="rgb(237,96,20)" fg:x="266934030" fg:w="3607301"/><text x="90.2951%" y="1695.50"></text></g><g><title>core::fmt::builders::DebugList::entries (3,607,301 samples, 1.22%)</title><rect x="90.0451%" y="1669" width="1.2169%" height="15" fill="rgb(239,229,30)" fg:x="266934030" fg:w="3607301"/><text x="90.2951%" y="1679.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (3,607,301 samples, 1.22%)</title><rect x="90.0451%" y="1653" width="1.2169%" height="15" fill="rgb(219,65,33)" fg:x="266934030" fg:w="3607301"/><text x="90.2951%" y="1663.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with (3,607,301 samples, 1.22%)</title><rect x="90.0451%" y="1637" width="1.2169%" height="15" fill="rgb(243,134,7)" fg:x="266934030" fg:w="3607301"/><text x="90.2951%" y="1647.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3,607,301 samples, 1.22%)</title><rect x="90.0451%" y="1621" width="1.2169%" height="15" fill="rgb(216,177,54)" fg:x="266934030" fg:w="3607301"/><text x="90.2951%" y="1631.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with::_{{closure}} (3,607,301 samples, 1.22%)</title><rect x="90.0451%" y="1605" width="1.2169%" height="15" fill="rgb(211,160,20)" fg:x="266934030" fg:w="3607301"/><text x="90.2951%" y="1615.50"></text></g><g><title>core::fmt::Formatter::write_str (3,607,301 samples, 1.22%)</title><rect x="90.0451%" y="1589" width="1.2169%" height="15" fill="rgb(239,85,39)" fg:x="266934030" fg:w="3607301"/><text x="90.2951%" y="1599.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3,607,301 samples, 1.22%)</title><rect x="90.0451%" y="1573" width="1.2169%" height="15" fill="rgb(232,125,22)" fg:x="266934030" fg:w="3607301"/><text x="90.2951%" y="1583.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3,607,301 samples, 1.22%)</title><rect x="90.0451%" y="1557" width="1.2169%" height="15" fill="rgb(244,57,34)" fg:x="266934030" fg:w="3607301"/><text x="90.2951%" y="1567.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (3,607,301 samples, 1.22%)</title><rect x="90.0451%" y="1541" width="1.2169%" height="15" fill="rgb(214,203,32)" fg:x="266934030" fg:w="3607301"/><text x="90.2951%" y="1551.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (3,607,301 samples, 1.22%)</title><rect x="90.0451%" y="1525" width="1.2169%" height="15" fill="rgb(207,58,43)" fg:x="266934030" fg:w="3607301"/><text x="90.2951%" y="1535.50"></text></g><g><title>core::slice::memchr::memrchr (3,607,301 samples, 1.22%)</title><rect x="90.0451%" y="1509" width="1.2169%" height="15" fill="rgb(215,193,15)" fg:x="266934030" fg:w="3607301"/><text x="90.2951%" y="1519.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to (3,607,301 samples, 1.22%)</title><rect x="90.0451%" y="1493" width="1.2169%" height="15" fill="rgb(232,15,44)" fg:x="266934030" fg:w="3607301"/><text x="90.2951%" y="1503.50"></text></g><g><title>main::benchmark::clear_dirty_flags (3,091,685 samples, 1.04%)</title><rect x="91.2619%" y="1829" width="1.0429%" height="15" fill="rgb(212,3,48)" fg:x="270541331" fg:w="3091685"/><text x="91.5119%" y="1839.50"></text></g><g><title>main::benchmark::clear_dirty_flags (3,091,685 samples, 1.04%)</title><rect x="91.2619%" y="1813" width="1.0429%" height="15" fill="rgb(218,128,7)" fg:x="270541331" fg:w="3091685"/><text x="91.5119%" y="1823.50"></text></g><g><title>main::benchmark::clear_dirty_flags (3,091,685 samples, 1.04%)</title><rect x="91.2619%" y="1797" width="1.0429%" height="15" fill="rgb(226,216,39)" fg:x="270541331" fg:w="3091685"/><text x="91.5119%" y="1807.50"></text></g><g><title>main::benchmark::clear_dirty_flags (3,091,685 samples, 1.04%)</title><rect x="91.2619%" y="1781" width="1.0429%" height="15" fill="rgb(243,47,51)" fg:x="270541331" fg:w="3091685"/><text x="91.5119%" y="1791.50"></text></g><g><title>main::benchmark::clear_dirty_flags (3,091,685 samples, 1.04%)</title><rect x="91.2619%" y="1765" width="1.0429%" height="15" fill="rgb(241,183,40)" fg:x="270541331" fg:w="3091685"/><text x="91.5119%" y="1775.50"></text></g><g><title>main::benchmark::clear_dirty_flags (3,091,685 samples, 1.04%)</title><rect x="91.2619%" y="1749" width="1.0429%" height="15" fill="rgb(231,217,32)" fg:x="270541331" fg:w="3091685"/><text x="91.5119%" y="1759.50"></text></g><g><title>main::benchmark::clear_dirty_flags (3,091,685 samples, 1.04%)</title><rect x="91.2619%" y="1733" width="1.0429%" height="15" fill="rgb(229,61,38)" fg:x="270541331" fg:w="3091685"/><text x="91.5119%" y="1743.50"></text></g><g><title>main::benchmark::clear_dirty_flags (3,091,685 samples, 1.04%)</title><rect x="91.2619%" y="1717" width="1.0429%" height="15" fill="rgb(225,210,5)" fg:x="270541331" fg:w="3091685"/><text x="91.5119%" y="1727.50"></text></g><g><title>main::benchmark::clear_dirty_flags (3,091,685 samples, 1.04%)</title><rect x="91.2619%" y="1701" width="1.0429%" height="15" fill="rgb(231,79,45)" fg:x="270541331" fg:w="3091685"/><text x="91.5119%" y="1711.50"></text></g><g><title>main::benchmark::clear_dirty_flags (3,091,685 samples, 1.04%)</title><rect x="91.2619%" y="1685" width="1.0429%" height="15" fill="rgb(224,100,7)" fg:x="270541331" fg:w="3091685"/><text x="91.5119%" y="1695.50"></text></g><g><title>main::benchmark::clear_dirty_flags (3,091,685 samples, 1.04%)</title><rect x="91.2619%" y="1669" width="1.0429%" height="15" fill="rgb(241,198,18)" fg:x="270541331" fg:w="3091685"/><text x="91.5119%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,875,155 samples, 0.97%)</title><rect x="92.3049%" y="1029" width="0.9699%" height="15" fill="rgb(252,97,53)" fg:x="273633016" fg:w="2875155"/><text x="92.5549%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,875,155 samples, 0.97%)</title><rect x="92.3049%" y="1013" width="0.9699%" height="15" fill="rgb(220,88,7)" fg:x="273633016" fg:w="2875155"/><text x="92.5549%" y="1023.50"></text></g><g><title>main::benchmark::benchmark_accumulated_modifications (146,886,970 samples, 49.55%)</title><rect x="44.8243%" y="1845" width="49.5495%" height="15" fill="rgb(213,176,14)" fg:x="132879343" fg:w="146886970"/><text x="45.0743%" y="1855.50">main::benchmark::benchmark_accumulated_modifications</text></g><g><title>main::benchmark::count_nodes (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1829" width="2.0690%" height="15" fill="rgb(246,73,7)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1839.50">m..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1813" width="2.0690%" height="15" fill="rgb(245,64,36)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1823.50">c..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1797" width="2.0690%" height="15" fill="rgb(245,80,10)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1807.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1781" width="2.0690%" height="15" fill="rgb(232,107,50)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1791.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1765" width="2.0690%" height="15" fill="rgb(253,3,0)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1775.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1749" width="2.0690%" height="15" fill="rgb(212,99,53)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1759.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1733" width="2.0690%" height="15" fill="rgb(249,111,54)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1743.50">c..</text></g><g><title>main::benchmark::count_nodes (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1717" width="2.0690%" height="15" fill="rgb(249,55,30)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1727.50">m..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1701" width="2.0690%" height="15" fill="rgb(237,47,42)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1711.50">c..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1685" width="2.0690%" height="15" fill="rgb(211,20,18)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1695.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1669" width="2.0690%" height="15" fill="rgb(231,203,46)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1679.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1653" width="2.0690%" height="15" fill="rgb(237,142,3)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1663.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1637" width="2.0690%" height="15" fill="rgb(241,107,1)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1647.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1621" width="2.0690%" height="15" fill="rgb(229,83,13)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1631.50">c..</text></g><g><title>main::benchmark::count_nodes (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1605" width="2.0690%" height="15" fill="rgb(241,91,40)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1615.50">m..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1589" width="2.0690%" height="15" fill="rgb(225,3,45)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1599.50">c..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1573" width="2.0690%" height="15" fill="rgb(244,223,14)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1583.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1557" width="2.0690%" height="15" fill="rgb(224,124,37)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1567.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1541" width="2.0690%" height="15" fill="rgb(251,171,30)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1551.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1525" width="2.0690%" height="15" fill="rgb(236,46,54)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1535.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1509" width="2.0690%" height="15" fill="rgb(245,213,5)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1519.50">c..</text></g><g><title>main::benchmark::count_nodes (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1493" width="2.0690%" height="15" fill="rgb(230,144,27)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1503.50">m..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1477" width="2.0690%" height="15" fill="rgb(220,86,6)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1487.50">c..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1461" width="2.0690%" height="15" fill="rgb(240,20,13)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1471.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1445" width="2.0690%" height="15" fill="rgb(217,89,34)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1455.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1429" width="2.0690%" height="15" fill="rgb(229,13,5)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1439.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1413" width="2.0690%" height="15" fill="rgb(244,67,35)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1423.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1397" width="2.0690%" height="15" fill="rgb(221,40,2)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1407.50">c..</text></g><g><title>main::benchmark::count_nodes (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1381" width="2.0690%" height="15" fill="rgb(237,157,21)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1391.50">m..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1365" width="2.0690%" height="15" fill="rgb(222,94,11)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1375.50">c..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1349" width="2.0690%" height="15" fill="rgb(249,113,6)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1359.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1333" width="2.0690%" height="15" fill="rgb(238,137,36)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1343.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1317" width="2.0690%" height="15" fill="rgb(210,102,26)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1327.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1301" width="2.0690%" height="15" fill="rgb(218,30,30)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1311.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1285" width="2.0690%" height="15" fill="rgb(214,67,26)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1295.50">c..</text></g><g><title>main::benchmark::count_nodes (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1269" width="2.0690%" height="15" fill="rgb(251,9,53)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1279.50">m..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1253" width="2.0690%" height="15" fill="rgb(228,204,25)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1263.50">c..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1237" width="2.0690%" height="15" fill="rgb(207,153,8)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1247.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1221" width="2.0690%" height="15" fill="rgb(242,9,16)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1231.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1205" width="2.0690%" height="15" fill="rgb(217,211,10)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1215.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1189" width="2.0690%" height="15" fill="rgb(219,228,52)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1199.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1173" width="2.0690%" height="15" fill="rgb(231,92,29)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1183.50">c..</text></g><g><title>main::benchmark::count_nodes (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1157" width="2.0690%" height="15" fill="rgb(232,8,23)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1167.50">m..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1141" width="2.0690%" height="15" fill="rgb(216,211,34)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1151.50">c..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1125" width="2.0690%" height="15" fill="rgb(236,151,0)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1135.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1109" width="2.0690%" height="15" fill="rgb(209,168,3)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1119.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1093" width="2.0690%" height="15" fill="rgb(208,129,28)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1103.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1077" width="2.0690%" height="15" fill="rgb(229,78,22)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1087.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1061" width="2.0690%" height="15" fill="rgb(228,187,13)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1071.50">c..</text></g><g><title>main::benchmark::count_nodes (6,133,297 samples, 2.07%)</title><rect x="92.3049%" y="1045" width="2.0690%" height="15" fill="rgb(240,119,24)" fg:x="273633016" fg:w="6133297"/><text x="92.5549%" y="1055.50">m..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="1029" width="1.0991%" height="15" fill="rgb(209,194,42)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="1039.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="1013" width="1.0991%" height="15" fill="rgb(247,200,46)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="997" width="1.0991%" height="15" fill="rgb(218,76,16)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="981" width="1.0991%" height="15" fill="rgb(225,21,48)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="965" width="1.0991%" height="15" fill="rgb(239,223,50)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="975.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="949" width="1.0991%" height="15" fill="rgb(244,45,21)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="959.50"></text></g><g><title>main::benchmark::count_nodes (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="933" width="1.0991%" height="15" fill="rgb(232,33,43)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="917" width="1.0991%" height="15" fill="rgb(209,8,3)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="927.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="901" width="1.0991%" height="15" fill="rgb(214,25,53)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="885" width="1.0991%" height="15" fill="rgb(254,186,54)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="869" width="1.0991%" height="15" fill="rgb(208,174,49)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="853" width="1.0991%" height="15" fill="rgb(233,191,51)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="863.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="837" width="1.0991%" height="15" fill="rgb(222,134,10)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="847.50"></text></g><g><title>main::benchmark::count_nodes (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="821" width="1.0991%" height="15" fill="rgb(230,226,20)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="805" width="1.0991%" height="15" fill="rgb(251,111,25)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (3,258,142 samples, 1.10%)</title><rect x="93.2747%" y="789" width="1.0991%" height="15" fill="rgb(224,40,46)" fg:x="276508171" fg:w="3258142"/><text x="93.5247%" y="799.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,410,887 samples, 0.81%)</title><rect x="94.3738%" y="1749" width="0.8133%" height="15" fill="rgb(236,108,47)" fg:x="279766313" fg:w="2410887"/><text x="94.6238%" y="1759.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (2,410,887 samples, 0.81%)</title><rect x="94.3738%" y="1733" width="0.8133%" height="15" fill="rgb(234,93,0)" fg:x="279766313" fg:w="2410887"/><text x="94.6238%" y="1743.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (2,410,887 samples, 0.81%)</title><rect x="94.3738%" y="1717" width="0.8133%" height="15" fill="rgb(224,213,32)" fg:x="279766313" fg:w="2410887"/><text x="94.6238%" y="1727.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,410,887 samples, 0.81%)</title><rect x="94.3738%" y="1701" width="0.8133%" height="15" fill="rgb(251,11,48)" fg:x="279766313" fg:w="2410887"/><text x="94.6238%" y="1711.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2,410,887 samples, 0.81%)</title><rect x="94.3738%" y="1685" width="0.8133%" height="15" fill="rgb(236,173,5)" fg:x="279766313" fg:w="2410887"/><text x="94.6238%" y="1695.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (2,410,887 samples, 0.81%)</title><rect x="94.3738%" y="1669" width="0.8133%" height="15" fill="rgb(230,95,12)" fg:x="279766313" fg:w="2410887"/><text x="94.6238%" y="1679.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (2,410,887 samples, 0.81%)</title><rect x="94.3738%" y="1653" width="0.8133%" height="15" fill="rgb(232,209,1)" fg:x="279766313" fg:w="2410887"/><text x="94.6238%" y="1663.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,410,887 samples, 0.81%)</title><rect x="94.3738%" y="1637" width="0.8133%" height="15" fill="rgb(232,6,1)" fg:x="279766313" fg:w="2410887"/><text x="94.6238%" y="1647.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,346,073 samples, 0.79%)</title><rect x="95.1871%" y="1605" width="0.7914%" height="15" fill="rgb(210,224,50)" fg:x="282177200" fg:w="2346073"/><text x="95.4371%" y="1615.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (526,296 samples, 0.18%)</title><rect x="95.9785%" y="1301" width="0.1775%" height="15" fill="rgb(228,127,35)" fg:x="284523273" fg:w="526296"/><text x="96.2285%" y="1311.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,415,781 samples, 0.48%)</title><rect x="95.9785%" y="1333" width="0.4776%" height="15" fill="rgb(245,102,45)" fg:x="284523273" fg:w="1415781"/><text x="96.2285%" y="1343.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,415,781 samples, 0.48%)</title><rect x="95.9785%" y="1317" width="0.4776%" height="15" fill="rgb(214,1,49)" fg:x="284523273" fg:w="1415781"/><text x="96.2285%" y="1327.50"></text></g><g><title>serde_json::read::parse_escape (889,485 samples, 0.30%)</title><rect x="96.1560%" y="1301" width="0.3001%" height="15" fill="rgb(226,163,40)" fg:x="285049569" fg:w="889485"/><text x="96.4060%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (889,485 samples, 0.30%)</title><rect x="96.1560%" y="1285" width="0.3001%" height="15" fill="rgb(239,212,28)" fg:x="285049569" fg:w="889485"/><text x="96.4060%" y="1295.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,177,692 samples, 0.40%)</title><rect x="96.4561%" y="293" width="0.3973%" height="15" fill="rgb(220,20,13)" fg:x="285939054" fg:w="1177692"/><text x="96.7061%" y="303.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,177,692 samples, 0.40%)</title><rect x="96.4561%" y="277" width="0.3973%" height="15" fill="rgb(210,164,35)" fg:x="285939054" fg:w="1177692"/><text x="96.7061%" y="287.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,177,692 samples, 0.40%)</title><rect x="96.4561%" y="261" width="0.3973%" height="15" fill="rgb(248,109,41)" fg:x="285939054" fg:w="1177692"/><text x="96.7061%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,177,692 samples, 0.40%)</title><rect x="96.4561%" y="245" width="0.3973%" height="15" fill="rgb(238,23,50)" fg:x="285939054" fg:w="1177692"/><text x="96.7061%" y="255.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,177,692 samples, 0.40%)</title><rect x="96.4561%" y="229" width="0.3973%" height="15" fill="rgb(211,48,49)" fg:x="285939054" fg:w="1177692"/><text x="96.7061%" y="239.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,177,692 samples, 0.40%)</title><rect x="96.4561%" y="213" width="0.3973%" height="15" fill="rgb(223,36,21)" fg:x="285939054" fg:w="1177692"/><text x="96.7061%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,177,692 samples, 0.40%)</title><rect x="96.4561%" y="197" width="0.3973%" height="15" fill="rgb(207,123,46)" fg:x="285939054" fg:w="1177692"/><text x="96.7061%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,177,692 samples, 0.40%)</title><rect x="96.4561%" y="181" width="0.3973%" height="15" fill="rgb(240,218,32)" fg:x="285939054" fg:w="1177692"/><text x="96.7061%" y="191.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,177,692 samples, 0.40%)</title><rect x="96.4561%" y="165" width="0.3973%" height="15" fill="rgb(252,5,43)" fg:x="285939054" fg:w="1177692"/><text x="96.7061%" y="175.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,177,692 samples, 0.40%)</title><rect x="96.4561%" y="149" width="0.3973%" height="15" fill="rgb(252,84,19)" fg:x="285939054" fg:w="1177692"/><text x="96.7061%" y="159.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="805" width="1.2952%" height="15" fill="rgb(243,152,39)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="815.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="789" width="1.2952%" height="15" fill="rgb(234,160,15)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="799.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="773" width="1.2952%" height="15" fill="rgb(237,34,20)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="783.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="757" width="1.2952%" height="15" fill="rgb(229,97,13)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="741" width="1.2952%" height="15" fill="rgb(234,71,50)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="751.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="725" width="1.2952%" height="15" fill="rgb(253,155,4)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="709" width="1.2952%" height="15" fill="rgb(222,185,37)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="719.50"></text></g><g><title>serde::de::SeqAccess::next_element (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="693" width="1.2952%" height="15" fill="rgb(251,177,13)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="703.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="677" width="1.2952%" height="15" fill="rgb(250,179,40)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="661" width="1.2952%" height="15" fill="rgb(242,44,2)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="645" width="1.2952%" height="15" fill="rgb(216,177,13)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="629" width="1.2952%" height="15" fill="rgb(216,106,43)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="613" width="1.2952%" height="15" fill="rgb(216,183,2)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="623.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="597" width="1.2952%" height="15" fill="rgb(249,75,3)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="607.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="581" width="1.2952%" height="15" fill="rgb(219,67,39)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="565" width="1.2952%" height="15" fill="rgb(253,228,2)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="549" width="1.2952%" height="15" fill="rgb(235,138,27)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="533" width="1.2952%" height="15" fill="rgb(236,97,51)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="517" width="1.2952%" height="15" fill="rgb(240,80,30)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="501" width="1.2952%" height="15" fill="rgb(230,178,19)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="511.50"></text></g><g><title>serde::de::SeqAccess::next_element (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="485" width="1.2952%" height="15" fill="rgb(210,190,27)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="495.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="469" width="1.2952%" height="15" fill="rgb(222,107,31)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="479.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="453" width="1.2952%" height="15" fill="rgb(216,127,34)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="437" width="1.2952%" height="15" fill="rgb(234,116,52)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="421" width="1.2952%" height="15" fill="rgb(222,124,15)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="405" width="1.2952%" height="15" fill="rgb(231,179,28)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="415.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="389" width="1.2952%" height="15" fill="rgb(226,93,45)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="399.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="373" width="1.2952%" height="15" fill="rgb(215,8,51)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="357" width="1.2952%" height="15" fill="rgb(223,106,5)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="367.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="341" width="1.2952%" height="15" fill="rgb(250,191,5)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="325" width="1.2952%" height="15" fill="rgb(242,132,44)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,839,424 samples, 1.30%)</title><rect x="96.4561%" y="309" width="1.2952%" height="15" fill="rgb(251,152,29)" fg:x="285939054" fg:w="3839424"/><text x="96.7061%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="293" width="0.8979%" height="15" fill="rgb(218,179,5)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="303.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="277" width="0.8979%" height="15" fill="rgb(227,67,19)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="287.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="261" width="0.8979%" height="15" fill="rgb(233,119,31)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="271.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="245" width="0.8979%" height="15" fill="rgb(241,120,22)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="229" width="0.8979%" height="15" fill="rgb(224,102,30)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="213" width="0.8979%" height="15" fill="rgb(210,164,37)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="197" width="0.8979%" height="15" fill="rgb(226,191,16)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="207.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="181" width="0.8979%" height="15" fill="rgb(214,40,45)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="191.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="165" width="0.8979%" height="15" fill="rgb(244,29,26)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="149" width="0.8979%" height="15" fill="rgb(216,16,5)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="133" width="0.8979%" height="15" fill="rgb(249,76,35)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="117" width="0.8979%" height="15" fill="rgb(207,11,44)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="101" width="0.8979%" height="15" fill="rgb(228,190,49)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="111.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="85" width="0.8979%" height="15" fill="rgb(214,173,12)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="95.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="69" width="0.8979%" height="15" fill="rgb(218,26,35)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="79.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="53" width="0.8979%" height="15" fill="rgb(220,200,19)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="63.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (2,661,732 samples, 0.90%)</title><rect x="96.8533%" y="37" width="0.8979%" height="15" fill="rgb(239,95,49)" fg:x="287116746" fg:w="2661732"/><text x="97.1033%" y="47.50"></text></g><g><title>serde_json::de::from_str (11,757,011 samples, 3.97%)</title><rect x="94.3738%" y="1829" width="3.9660%" height="15" fill="rgb(235,85,53)" fg:x="279766313" fg:w="11757011"/><text x="94.6238%" y="1839.50">serd..</text></g><g><title>serde_json::de::from_trait (11,757,011 samples, 3.97%)</title><rect x="94.3738%" y="1813" width="3.9660%" height="15" fill="rgb(233,133,31)" fg:x="279766313" fg:w="11757011"/><text x="94.6238%" y="1823.50">serd..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,757,011 samples, 3.97%)</title><rect x="94.3738%" y="1797" width="3.9660%" height="15" fill="rgb(218,25,20)" fg:x="279766313" fg:w="11757011"/><text x="94.6238%" y="1807.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,757,011 samples, 3.97%)</title><rect x="94.3738%" y="1781" width="3.9660%" height="15" fill="rgb(252,210,38)" fg:x="279766313" fg:w="11757011"/><text x="94.6238%" y="1791.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,757,011 samples, 3.97%)</title><rect x="94.3738%" y="1765" width="3.9660%" height="15" fill="rgb(242,134,21)" fg:x="279766313" fg:w="11757011"/><text x="94.6238%" y="1775.50">&lt;ser..</text></g><g><title>serde::de::MapAccess::next_entry (9,346,124 samples, 3.15%)</title><rect x="95.1871%" y="1749" width="3.1527%" height="15" fill="rgb(213,28,48)" fg:x="282177200" fg:w="9346124"/><text x="95.4371%" y="1759.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (9,346,124 samples, 3.15%)</title><rect x="95.1871%" y="1733" width="3.1527%" height="15" fill="rgb(250,196,2)" fg:x="282177200" fg:w="9346124"/><text x="95.4371%" y="1743.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (9,346,124 samples, 3.15%)</title><rect x="95.1871%" y="1717" width="3.1527%" height="15" fill="rgb(227,5,17)" fg:x="282177200" fg:w="9346124"/><text x="95.4371%" y="1727.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,346,124 samples, 3.15%)</title><rect x="95.1871%" y="1701" width="3.1527%" height="15" fill="rgb(221,226,24)" fg:x="282177200" fg:w="9346124"/><text x="95.4371%" y="1711.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,346,124 samples, 3.15%)</title><rect x="95.1871%" y="1685" width="3.1527%" height="15" fill="rgb(211,5,48)" fg:x="282177200" fg:w="9346124"/><text x="95.4371%" y="1695.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,346,124 samples, 3.15%)</title><rect x="95.1871%" y="1669" width="3.1527%" height="15" fill="rgb(219,150,6)" fg:x="282177200" fg:w="9346124"/><text x="95.4371%" y="1679.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,346,124 samples, 3.15%)</title><rect x="95.1871%" y="1653" width="3.1527%" height="15" fill="rgb(251,46,16)" fg:x="282177200" fg:w="9346124"/><text x="95.4371%" y="1663.50">&lt;se..</text></g><g><title>serde::de::MapAccess::next_entry (9,346,124 samples, 3.15%)</title><rect x="95.1871%" y="1637" width="3.1527%" height="15" fill="rgb(220,204,40)" fg:x="282177200" fg:w="9346124"/><text x="95.4371%" y="1647.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (9,346,124 samples, 3.15%)</title><rect x="95.1871%" y="1621" width="3.1527%" height="15" fill="rgb(211,85,2)" fg:x="282177200" fg:w="9346124"/><text x="95.4371%" y="1631.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1605" width="2.3613%" height="15" fill="rgb(229,17,7)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1615.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1589" width="2.3613%" height="15" fill="rgb(239,72,28)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1599.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1573" width="2.3613%" height="15" fill="rgb(230,47,54)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1583.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1557" width="2.3613%" height="15" fill="rgb(214,50,8)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1567.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1541" width="2.3613%" height="15" fill="rgb(216,198,43)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1551.50">&lt;s..</text></g><g><title>serde::de::SeqAccess::next_element (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1525" width="2.3613%" height="15" fill="rgb(234,20,35)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1535.50">se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1509" width="2.3613%" height="15" fill="rgb(254,45,19)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1519.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1493" width="2.3613%" height="15" fill="rgb(219,14,44)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1503.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1477" width="2.3613%" height="15" fill="rgb(217,220,26)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1487.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1461" width="2.3613%" height="15" fill="rgb(213,158,28)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1471.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1445" width="2.3613%" height="15" fill="rgb(252,51,52)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1455.50">&lt;s..</text></g><g><title>serde::de::MapAccess::next_entry (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1429" width="2.3613%" height="15" fill="rgb(246,89,16)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1439.50">se..</text></g><g><title>serde::de::MapAccess::next_entry_seed (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1413" width="2.3613%" height="15" fill="rgb(216,158,49)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1423.50">se..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1397" width="2.3613%" height="15" fill="rgb(236,107,19)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1407.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1381" width="2.3613%" height="15" fill="rgb(228,185,30)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1391.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1365" width="2.3613%" height="15" fill="rgb(246,134,8)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1375.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,000,051 samples, 2.36%)</title><rect x="95.9785%" y="1349" width="2.3613%" height="15" fill="rgb(214,143,50)" fg:x="284523273" fg:w="7000051"/><text x="96.2285%" y="1359.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1333" width="1.8837%" height="15" fill="rgb(228,75,8)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1343.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1317" width="1.8837%" height="15" fill="rgb(207,175,4)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1327.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1301" width="1.8837%" height="15" fill="rgb(205,108,24)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1311.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1285" width="1.8837%" height="15" fill="rgb(244,120,49)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1295.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1269" width="1.8837%" height="15" fill="rgb(223,47,38)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1279.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1253" width="1.8837%" height="15" fill="rgb(229,179,11)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1263.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1237" width="1.8837%" height="15" fill="rgb(231,122,1)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1247.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1221" width="1.8837%" height="15" fill="rgb(245,119,9)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1231.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1205" width="1.8837%" height="15" fill="rgb(241,163,25)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1215.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1189" width="1.8837%" height="15" fill="rgb(217,214,3)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1199.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1173" width="1.8837%" height="15" fill="rgb(240,86,28)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1183.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1157" width="1.8837%" height="15" fill="rgb(215,47,9)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1167.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1141" width="1.8837%" height="15" fill="rgb(252,25,45)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1151.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1125" width="1.8837%" height="15" fill="rgb(251,164,9)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1135.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1109" width="1.8837%" height="15" fill="rgb(233,194,0)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1119.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1093" width="1.8837%" height="15" fill="rgb(249,111,24)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1103.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1077" width="1.8837%" height="15" fill="rgb(250,223,3)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1087.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1061" width="1.8837%" height="15" fill="rgb(236,178,37)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1071.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1045" width="1.8837%" height="15" fill="rgb(241,158,50)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1055.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1029" width="1.8837%" height="15" fill="rgb(213,121,41)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1039.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="1013" width="1.8837%" height="15" fill="rgb(240,92,3)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1023.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="997" width="1.8837%" height="15" fill="rgb(205,123,3)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="1007.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="981" width="1.8837%" height="15" fill="rgb(205,97,47)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="991.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="965" width="1.8837%" height="15" fill="rgb(247,152,14)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="975.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="949" width="1.8837%" height="15" fill="rgb(248,195,53)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="959.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="933" width="1.8837%" height="15" fill="rgb(226,201,16)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="943.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="917" width="1.8837%" height="15" fill="rgb(205,98,0)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="927.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="901" width="1.8837%" height="15" fill="rgb(214,191,48)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="911.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="885" width="1.8837%" height="15" fill="rgb(237,112,39)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="895.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="869" width="1.8837%" height="15" fill="rgb(247,203,27)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="879.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="853" width="1.8837%" height="15" fill="rgb(235,124,28)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="863.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="837" width="1.8837%" height="15" fill="rgb(208,207,46)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="847.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,584,270 samples, 1.88%)</title><rect x="96.4561%" y="821" width="1.8837%" height="15" fill="rgb(234,176,4)" fg:x="285939054" fg:w="5584270"/><text x="96.7061%" y="831.50">&lt;..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,744,846 samples, 0.59%)</title><rect x="97.7512%" y="805" width="0.5886%" height="15" fill="rgb(230,133,28)" fg:x="289778478" fg:w="1744846"/><text x="98.0012%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,744,846 samples, 0.59%)</title><rect x="97.7512%" y="789" width="0.5886%" height="15" fill="rgb(211,137,40)" fg:x="289778478" fg:w="1744846"/><text x="98.0012%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,744,846 samples, 0.59%)</title><rect x="97.7512%" y="773" width="0.5886%" height="15" fill="rgb(254,35,13)" fg:x="289778478" fg:w="1744846"/><text x="98.0012%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,744,846 samples, 0.59%)</title><rect x="97.7512%" y="757" width="0.5886%" height="15" fill="rgb(225,49,51)" fg:x="289778478" fg:w="1744846"/><text x="98.0012%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,744,846 samples, 0.59%)</title><rect x="97.7512%" y="741" width="0.5886%" height="15" fill="rgb(251,10,15)" fg:x="289778478" fg:w="1744846"/><text x="98.0012%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,744,846 samples, 0.59%)</title><rect x="97.7512%" y="725" width="0.5886%" height="15" fill="rgb(228,207,15)" fg:x="289778478" fg:w="1744846"/><text x="98.0012%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (1,744,846 samples, 0.59%)</title><rect x="97.7512%" y="709" width="0.5886%" height="15" fill="rgb(241,99,19)" fg:x="289778478" fg:w="1744846"/><text x="98.0012%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (1,744,846 samples, 0.59%)</title><rect x="97.7512%" y="693" width="0.5886%" height="15" fill="rgb(207,104,49)" fg:x="289778478" fg:w="1744846"/><text x="98.0012%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,744,846 samples, 0.59%)</title><rect x="97.7512%" y="677" width="0.5886%" height="15" fill="rgb(234,99,18)" fg:x="289778478" fg:w="1744846"/><text x="98.0012%" y="687.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,744,846 samples, 0.59%)</title><rect x="97.7512%" y="661" width="0.5886%" height="15" fill="rgb(213,191,49)" fg:x="289778478" fg:w="1744846"/><text x="98.0012%" y="671.50"></text></g><g><title>[libc.so.6] (1,744,846 samples, 0.59%)</title><rect x="97.7512%" y="645" width="0.5886%" height="15" fill="rgb(210,226,19)" fg:x="289778478" fg:w="1744846"/><text x="98.0012%" y="655.50"></text></g><g><title>_start (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="2133" width="76.0159%" height="15" fill="rgb(229,97,18)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="2143.50">_start</text></g><g><title>__libc_start_main (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="2117" width="76.0159%" height="15" fill="rgb(211,167,15)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="2127.50">__libc_start_main</text></g><g><title>[libc.so.6] (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="2101" width="76.0159%" height="15" fill="rgb(210,169,34)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="2111.50">[libc.so.6]</text></g><g><title>main (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="2085" width="76.0159%" height="15" fill="rgb(241,121,31)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="2095.50">main</text></g><g><title>std::rt::lang_start_internal (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="2069" width="76.0159%" height="15" fill="rgb(232,40,11)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="2079.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="2053" width="76.0159%" height="15" fill="rgb(205,86,26)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="2063.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="2037" width="76.0159%" height="15" fill="rgb(231,126,28)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="2047.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="2021" width="76.0159%" height="15" fill="rgb(219,221,18)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="2031.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="2005" width="76.0159%" height="15" fill="rgb(211,40,0)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="2015.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="1989" width="76.0159%" height="15" fill="rgb(239,85,43)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="1999.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="1973" width="76.0159%" height="15" fill="rgb(231,55,21)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="1983.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="1957" width="76.0159%" height="15" fill="rgb(225,184,43)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="1967.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="1941" width="76.0159%" height="15" fill="rgb(251,158,41)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="1951.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="1925" width="76.0159%" height="15" fill="rgb(234,159,37)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="1935.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="1909" width="76.0159%" height="15" fill="rgb(216,204,22)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="1919.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="1893" width="76.0159%" height="15" fill="rgb(214,17,3)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="1903.50">core::ops::function::FnOnce::call_once</text></g><g><title>main::main (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="1877" width="76.0159%" height="15" fill="rgb(212,111,17)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="1887.50">main::main</text></g><g><title>main::benchmark::run_web_browser_layout_trace_benchmark (225,345,192 samples, 76.02%)</title><rect x="22.4931%" y="1861" width="76.0159%" height="15" fill="rgb(221,157,24)" fg:x="66679636" fg:w="225345192"/><text x="22.7431%" y="1871.50">main::benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>main::benchmark::parse_web_layout_trace (12,258,515 samples, 4.14%)</title><rect x="94.3738%" y="1845" width="4.1352%" height="15" fill="rgb(252,16,13)" fg:x="279766313" fg:w="12258515"/><text x="94.6238%" y="1855.50">main:..</text></g><g><title>std::fs::read_to_string (501,504 samples, 0.17%)</title><rect x="98.3398%" y="1829" width="0.1692%" height="15" fill="rgb(221,62,2)" fg:x="291523324" fg:w="501504"/><text x="98.5898%" y="1839.50"></text></g><g><title>std::fs::read_to_string::inner (501,504 samples, 0.17%)</title><rect x="98.3398%" y="1813" width="0.1692%" height="15" fill="rgb(247,87,22)" fg:x="291523324" fg:w="501504"/><text x="98.5898%" y="1823.50"></text></g><g><title>std::io::default_read_to_string (501,504 samples, 0.17%)</title><rect x="98.3398%" y="1797" width="0.1692%" height="15" fill="rgb(215,73,9)" fg:x="291523324" fg:w="501504"/><text x="98.5898%" y="1807.50"></text></g><g><title>std::io::append_to_string (501,504 samples, 0.17%)</title><rect x="98.3398%" y="1781" width="0.1692%" height="15" fill="rgb(207,175,33)" fg:x="291523324" fg:w="501504"/><text x="98.5898%" y="1791.50"></text></g><g><title>core::str::converts::from_utf8 (501,504 samples, 0.17%)</title><rect x="98.3398%" y="1765" width="0.1692%" height="15" fill="rgb(243,129,54)" fg:x="291523324" fg:w="501504"/><text x="98.5898%" y="1775.50"></text></g><g><title>core::str::validations::run_utf8_validation (501,504 samples, 0.17%)</title><rect x="98.3398%" y="1749" width="0.1692%" height="15" fill="rgb(227,119,45)" fg:x="291523324" fg:w="501504"/><text x="98.5898%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3,052,140 samples, 1.03%)</title><rect x="98.5090%" y="2133" width="1.0296%" height="15" fill="rgb(205,109,36)" fg:x="292024828" fg:w="3052140"/><text x="98.7590%" y="2143.50"></text></g><g><title>all (296,444,877 samples, 100%)</title><rect x="0.0000%" y="2165" width="100.0000%" height="15" fill="rgb(205,6,39)" fg:x="0" fg:w="296444877"/><text x="0.2500%" y="2175.50"></text></g><g><title>main (296,444,877 samples, 100.00%)</title><rect x="0.0000%" y="2149" width="100.0000%" height="15" fill="rgb(221,32,16)" fg:x="0" fg:w="296444877"/><text x="0.2500%" y="2159.50">main</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,367,909 samples, 0.46%)</title><rect x="99.5386%" y="2133" width="0.4614%" height="15" fill="rgb(228,144,50)" fg:x="295076968" fg:w="1367909"/><text x="99.7886%" y="2143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,367,909 samples, 0.46%)</title><rect x="99.5386%" y="2117" width="0.4614%" height="15" fill="rgb(229,201,53)" fg:x="295076968" fg:w="1367909"/><text x="99.7886%" y="2127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,367,909 samples, 0.46%)</title><rect x="99.5386%" y="2101" width="0.4614%" height="15" fill="rgb(249,153,27)" fg:x="295076968" fg:w="1367909"/><text x="99.7886%" y="2111.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,367,909 samples, 0.46%)</title><rect x="99.5386%" y="2085" width="0.4614%" height="15" fill="rgb(227,106,25)" fg:x="295076968" fg:w="1367909"/><text x="99.7886%" y="2095.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,367,909 samples, 0.46%)</title><rect x="99.5386%" y="2069" width="0.4614%" height="15" fill="rgb(230,65,29)" fg:x="295076968" fg:w="1367909"/><text x="99.7886%" y="2079.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,367,909 samples, 0.46%)</title><rect x="99.5386%" y="2053" width="0.4614%" height="15" fill="rgb(221,57,46)" fg:x="295076968" fg:w="1367909"/><text x="99.7886%" y="2063.50"></text></g></svg></svg>