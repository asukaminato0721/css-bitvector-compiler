<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2214" onload="init(evt)" viewBox="0 0 1200 2214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2214" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2197.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2197.00"> </text><svg id="frames" x="10" width="1180" total_samples="245955389"><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,252,150 samples, 0.92%)</title><rect x="0.0000%" y="2133" width="0.9157%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2252150"/><text x="0.2500%" y="2143.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,252,150 samples, 0.92%)</title><rect x="0.0000%" y="2117" width="0.9157%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2252150"/><text x="0.2500%" y="2127.50"></text></g><g><title>[libc.so.6] (2,252,150 samples, 0.92%)</title><rect x="0.0000%" y="2101" width="0.9157%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2252150"/><text x="0.2500%" y="2111.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,063,672 samples, 0.43%)</title><rect x="0.9157%" y="2133" width="0.4325%" height="15" fill="rgb(248,212,6)" fg:x="2252150" fg:w="1063672"/><text x="1.1657%" y="2143.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,063,672 samples, 0.43%)</title><rect x="0.9157%" y="2117" width="0.4325%" height="15" fill="rgb(208,68,35)" fg:x="2252150" fg:w="1063672"/><text x="1.1657%" y="2127.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,063,672 samples, 0.43%)</title><rect x="0.9157%" y="2101" width="0.4325%" height="15" fill="rgb(232,128,0)" fg:x="2252150" fg:w="1063672"/><text x="1.1657%" y="2111.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,063,672 samples, 0.43%)</title><rect x="0.9157%" y="2085" width="0.4325%" height="15" fill="rgb(207,160,47)" fg:x="2252150" fg:w="1063672"/><text x="1.1657%" y="2095.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,063,672 samples, 0.43%)</title><rect x="0.9157%" y="2069" width="0.4325%" height="15" fill="rgb(228,23,34)" fg:x="2252150" fg:w="1063672"/><text x="1.1657%" y="2079.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,063,672 samples, 0.43%)</title><rect x="0.9157%" y="2053" width="0.4325%" height="15" fill="rgb(218,30,26)" fg:x="2252150" fg:w="1063672"/><text x="1.1657%" y="2063.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,063,672 samples, 0.43%)</title><rect x="0.9157%" y="2037" width="0.4325%" height="15" fill="rgb(220,122,19)" fg:x="2252150" fg:w="1063672"/><text x="1.1657%" y="2047.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,063,672 samples, 0.43%)</title><rect x="0.9157%" y="2021" width="0.4325%" height="15" fill="rgb(250,228,42)" fg:x="2252150" fg:w="1063672"/><text x="1.1657%" y="2031.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,063,672 samples, 0.43%)</title><rect x="0.9157%" y="2005" width="0.4325%" height="15" fill="rgb(240,193,28)" fg:x="2252150" fg:w="1063672"/><text x="1.1657%" y="2015.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,063,672 samples, 0.43%)</title><rect x="0.9157%" y="1989" width="0.4325%" height="15" fill="rgb(216,20,37)" fg:x="2252150" fg:w="1063672"/><text x="1.1657%" y="1999.50"></text></g><g><title>alloc::slice::hack::to_vec (1,063,672 samples, 0.43%)</title><rect x="0.9157%" y="1973" width="0.4325%" height="15" fill="rgb(206,188,39)" fg:x="2252150" fg:w="1063672"/><text x="1.1657%" y="1983.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,063,672 samples, 0.43%)</title><rect x="0.9157%" y="1957" width="0.4325%" height="15" fill="rgb(217,207,13)" fg:x="2252150" fg:w="1063672"/><text x="1.1657%" y="1967.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,063,672 samples, 0.43%)</title><rect x="0.9157%" y="1941" width="0.4325%" height="15" fill="rgb(231,73,38)" fg:x="2252150" fg:w="1063672"/><text x="1.1657%" y="1951.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,063,672 samples, 0.43%)</title><rect x="0.9157%" y="1925" width="0.4325%" height="15" fill="rgb(225,20,46)" fg:x="2252150" fg:w="1063672"/><text x="1.1657%" y="1935.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2,100,659 samples, 0.85%)</title><rect x="1.3481%" y="2133" width="0.8541%" height="15" fill="rgb(210,31,41)" fg:x="3315822" fg:w="2100659"/><text x="1.5981%" y="2143.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (449,276 samples, 0.18%)</title><rect x="2.0196%" y="2117" width="0.1827%" height="15" fill="rgb(221,200,47)" fg:x="4967205" fg:w="449276"/><text x="2.2696%" y="2127.50"></text></g><g><title>[libc.so.6] (2,920,604 samples, 1.19%)</title><rect x="2.2022%" y="2133" width="1.1875%" height="15" fill="rgb(226,26,5)" fg:x="5416481" fg:w="2920604"/><text x="2.4522%" y="2143.50"></text></g><g><title>[libc.so.6] (2,920,604 samples, 1.19%)</title><rect x="2.2022%" y="2117" width="1.1875%" height="15" fill="rgb(249,33,26)" fg:x="5416481" fg:w="2920604"/><text x="2.4522%" y="2127.50"></text></g><g><title>[unknown] (10,962,906 samples, 4.46%)</title><rect x="3.3897%" y="2133" width="4.4573%" height="15" fill="rgb(235,183,28)" fg:x="8337085" fg:w="10962906"/><text x="3.6397%" y="2143.50">[unkn..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,926,825 samples, 1.19%)</title><rect x="6.6570%" y="2117" width="1.1900%" height="15" fill="rgb(221,5,38)" fg:x="16373166" fg:w="2926825"/><text x="6.9070%" y="2127.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (2,926,825 samples, 1.19%)</title><rect x="6.6570%" y="2101" width="1.1900%" height="15" fill="rgb(247,18,42)" fg:x="16373166" fg:w="2926825"/><text x="6.9070%" y="2111.50"></text></g><g><title>exit (2,938,191 samples, 1.19%)</title><rect x="7.8469%" y="2085" width="1.1946%" height="15" fill="rgb(241,131,45)" fg:x="19299991" fg:w="2938191"/><text x="8.0969%" y="2095.50"></text></g><g><title>[libc.so.6] (2,938,191 samples, 1.19%)</title><rect x="7.8469%" y="2069" width="1.1946%" height="15" fill="rgb(249,31,29)" fg:x="19299991" fg:w="2938191"/><text x="8.0969%" y="2079.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,938,191 samples, 1.19%)</title><rect x="7.8469%" y="2053" width="1.1946%" height="15" fill="rgb(225,111,53)" fg:x="19299991" fg:w="2938191"/><text x="8.0969%" y="2063.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,324,799 samples, 0.95%)</title><rect x="9.0416%" y="981" width="0.9452%" height="15" fill="rgb(238,160,17)" fg:x="22238182" fg:w="2324799"/><text x="9.2916%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,324,799 samples, 0.95%)</title><rect x="9.0416%" y="965" width="0.9452%" height="15" fill="rgb(214,148,48)" fg:x="22238182" fg:w="2324799"/><text x="9.2916%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,324,799 samples, 0.95%)</title><rect x="9.0416%" y="949" width="0.9452%" height="15" fill="rgb(232,36,49)" fg:x="22238182" fg:w="2324799"/><text x="9.2916%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (2,324,799 samples, 0.95%)</title><rect x="9.0416%" y="933" width="0.9452%" height="15" fill="rgb(209,103,24)" fg:x="22238182" fg:w="2324799"/><text x="9.2916%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,324,799 samples, 0.95%)</title><rect x="9.0416%" y="917" width="0.9452%" height="15" fill="rgb(229,88,8)" fg:x="22238182" fg:w="2324799"/><text x="9.2916%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,324,799 samples, 0.95%)</title><rect x="9.0416%" y="901" width="0.9452%" height="15" fill="rgb(213,181,19)" fg:x="22238182" fg:w="2324799"/><text x="9.2916%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,324,799 samples, 0.95%)</title><rect x="9.0416%" y="885" width="0.9452%" height="15" fill="rgb(254,191,54)" fg:x="22238182" fg:w="2324799"/><text x="9.2916%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,324,799 samples, 0.95%)</title><rect x="9.0416%" y="869" width="0.9452%" height="15" fill="rgb(241,83,37)" fg:x="22238182" fg:w="2324799"/><text x="9.2916%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,324,799 samples, 0.95%)</title><rect x="9.0416%" y="853" width="0.9452%" height="15" fill="rgb(233,36,39)" fg:x="22238182" fg:w="2324799"/><text x="9.2916%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,324,799 samples, 0.95%)</title><rect x="9.0416%" y="837" width="0.9452%" height="15" fill="rgb(226,3,54)" fg:x="22238182" fg:w="2324799"/><text x="9.2916%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,324,799 samples, 0.95%)</title><rect x="9.0416%" y="821" width="0.9452%" height="15" fill="rgb(245,192,40)" fg:x="22238182" fg:w="2324799"/><text x="9.2916%" y="831.50"></text></g><g><title>alloc::alloc::alloc (2,324,799 samples, 0.95%)</title><rect x="9.0416%" y="805" width="0.9452%" height="15" fill="rgb(238,167,29)" fg:x="22238182" fg:w="2324799"/><text x="9.2916%" y="815.50"></text></g><g><title>malloc (2,324,799 samples, 0.95%)</title><rect x="9.0416%" y="789" width="0.9452%" height="15" fill="rgb(232,182,51)" fg:x="22238182" fg:w="2324799"/><text x="9.2916%" y="799.50"></text></g><g><title>[libc.so.6] (2,324,799 samples, 0.95%)</title><rect x="9.0416%" y="773" width="0.9452%" height="15" fill="rgb(231,60,39)" fg:x="22238182" fg:w="2324799"/><text x="9.2916%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1685" width="1.9658%" height="15" fill="rgb(208,69,12)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1695.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1669" width="1.9658%" height="15" fill="rgb(235,93,37)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1679.50">a..</text></g><g><title>alloc::slice::hack::to_vec (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1653" width="1.9658%" height="15" fill="rgb(213,116,39)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1663.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1637" width="1.9658%" height="15" fill="rgb(222,207,29)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1647.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1621" width="1.9658%" height="15" fill="rgb(206,96,30)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1631.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1605" width="1.9658%" height="15" fill="rgb(218,138,4)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1615.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1589" width="1.9658%" height="15" fill="rgb(250,191,14)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1599.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1573" width="1.9658%" height="15" fill="rgb(239,60,40)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1583.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1557" width="1.9658%" height="15" fill="rgb(206,27,48)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1567.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1541" width="1.9658%" height="15" fill="rgb(225,35,8)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1551.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1525" width="1.9658%" height="15" fill="rgb(250,213,24)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1535.50">a..</text></g><g><title>alloc::slice::hack::to_vec (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1509" width="1.9658%" height="15" fill="rgb(247,123,22)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1519.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1493" width="1.9658%" height="15" fill="rgb(231,138,38)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1503.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1477" width="1.9658%" height="15" fill="rgb(231,145,46)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1487.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1461" width="1.9658%" height="15" fill="rgb(251,118,11)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1471.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1445" width="1.9658%" height="15" fill="rgb(217,147,25)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1455.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1429" width="1.9658%" height="15" fill="rgb(247,81,37)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1439.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1413" width="1.9658%" height="15" fill="rgb(209,12,38)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1423.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1397" width="1.9658%" height="15" fill="rgb(227,1,9)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1407.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1381" width="1.9658%" height="15" fill="rgb(248,47,43)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1391.50">a..</text></g><g><title>alloc::slice::hack::to_vec (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1365" width="1.9658%" height="15" fill="rgb(221,10,30)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1375.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1349" width="1.9658%" height="15" fill="rgb(210,229,1)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1359.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1333" width="1.9658%" height="15" fill="rgb(222,148,37)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1343.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1317" width="1.9658%" height="15" fill="rgb(234,67,33)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1327.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1301" width="1.9658%" height="15" fill="rgb(247,98,35)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1311.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1285" width="1.9658%" height="15" fill="rgb(247,138,52)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1295.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1269" width="1.9658%" height="15" fill="rgb(213,79,30)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1279.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1253" width="1.9658%" height="15" fill="rgb(246,177,23)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1263.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1237" width="1.9658%" height="15" fill="rgb(230,62,27)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1247.50">a..</text></g><g><title>alloc::slice::hack::to_vec (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1221" width="1.9658%" height="15" fill="rgb(216,154,8)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1231.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1205" width="1.9658%" height="15" fill="rgb(244,35,45)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1215.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1189" width="1.9658%" height="15" fill="rgb(251,115,12)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1199.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1173" width="1.9658%" height="15" fill="rgb(240,54,50)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1183.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1157" width="1.9658%" height="15" fill="rgb(233,84,52)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1167.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1141" width="1.9658%" height="15" fill="rgb(207,117,47)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1151.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1125" width="1.9658%" height="15" fill="rgb(249,43,39)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1135.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1109" width="1.9658%" height="15" fill="rgb(209,38,44)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1119.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1093" width="1.9658%" height="15" fill="rgb(236,212,23)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1103.50">a..</text></g><g><title>alloc::slice::hack::to_vec (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1077" width="1.9658%" height="15" fill="rgb(242,79,21)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1087.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1061" width="1.9658%" height="15" fill="rgb(211,96,35)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1071.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1045" width="1.9658%" height="15" fill="rgb(253,215,40)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1055.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1029" width="1.9658%" height="15" fill="rgb(211,81,21)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1039.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="1013" width="1.9658%" height="15" fill="rgb(208,190,38)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1023.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,835,062 samples, 1.97%)</title><rect x="9.0416%" y="997" width="1.9658%" height="15" fill="rgb(235,213,38)" fg:x="22238182" fg:w="4835062"/><text x="9.2916%" y="1007.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,510,263 samples, 1.02%)</title><rect x="9.9868%" y="981" width="1.0206%" height="15" fill="rgb(237,122,38)" fg:x="24562981" fg:w="2510263"/><text x="10.2368%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,510,263 samples, 1.02%)</title><rect x="9.9868%" y="965" width="1.0206%" height="15" fill="rgb(244,218,35)" fg:x="24562981" fg:w="2510263"/><text x="10.2368%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,510,263 samples, 1.02%)</title><rect x="9.9868%" y="949" width="1.0206%" height="15" fill="rgb(240,68,47)" fg:x="24562981" fg:w="2510263"/><text x="10.2368%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (2,510,263 samples, 1.02%)</title><rect x="9.9868%" y="933" width="1.0206%" height="15" fill="rgb(210,16,53)" fg:x="24562981" fg:w="2510263"/><text x="10.2368%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,510,263 samples, 1.02%)</title><rect x="9.9868%" y="917" width="1.0206%" height="15" fill="rgb(235,124,12)" fg:x="24562981" fg:w="2510263"/><text x="10.2368%" y="927.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,510,263 samples, 1.02%)</title><rect x="9.9868%" y="901" width="1.0206%" height="15" fill="rgb(224,169,11)" fg:x="24562981" fg:w="2510263"/><text x="10.2368%" y="911.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,510,263 samples, 1.02%)</title><rect x="9.9868%" y="885" width="1.0206%" height="15" fill="rgb(250,166,2)" fg:x="24562981" fg:w="2510263"/><text x="10.2368%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,510,263 samples, 1.02%)</title><rect x="9.9868%" y="869" width="1.0206%" height="15" fill="rgb(242,216,29)" fg:x="24562981" fg:w="2510263"/><text x="10.2368%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,510,263 samples, 1.02%)</title><rect x="9.9868%" y="853" width="1.0206%" height="15" fill="rgb(230,116,27)" fg:x="24562981" fg:w="2510263"/><text x="10.2368%" y="863.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (2,510,263 samples, 1.02%)</title><rect x="9.9868%" y="837" width="1.0206%" height="15" fill="rgb(228,99,48)" fg:x="24562981" fg:w="2510263"/><text x="10.2368%" y="847.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (2,510,263 samples, 1.02%)</title><rect x="9.9868%" y="821" width="1.0206%" height="15" fill="rgb(253,11,6)" fg:x="24562981" fg:w="2510263"/><text x="10.2368%" y="831.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,510,263 samples, 1.02%)</title><rect x="9.9868%" y="805" width="1.0206%" height="15" fill="rgb(247,143,39)" fg:x="24562981" fg:w="2510263"/><text x="10.2368%" y="815.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (7,066,160 samples, 2.87%)</title><rect x="9.0416%" y="1845" width="2.8729%" height="15" fill="rgb(236,97,10)" fg:x="22238182" fg:w="7066160"/><text x="9.2916%" y="1855.50">&lt;b..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,066,160 samples, 2.87%)</title><rect x="9.0416%" y="1829" width="2.8729%" height="15" fill="rgb(233,208,19)" fg:x="22238182" fg:w="7066160"/><text x="9.2916%" y="1839.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,066,160 samples, 2.87%)</title><rect x="9.0416%" y="1813" width="2.8729%" height="15" fill="rgb(216,164,2)" fg:x="22238182" fg:w="7066160"/><text x="9.2916%" y="1823.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,066,160 samples, 2.87%)</title><rect x="9.0416%" y="1797" width="2.8729%" height="15" fill="rgb(220,129,5)" fg:x="22238182" fg:w="7066160"/><text x="9.2916%" y="1807.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,066,160 samples, 2.87%)</title><rect x="9.0416%" y="1781" width="2.8729%" height="15" fill="rgb(242,17,10)" fg:x="22238182" fg:w="7066160"/><text x="9.2916%" y="1791.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,066,160 samples, 2.87%)</title><rect x="9.0416%" y="1765" width="2.8729%" height="15" fill="rgb(242,107,0)" fg:x="22238182" fg:w="7066160"/><text x="9.2916%" y="1775.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,066,160 samples, 2.87%)</title><rect x="9.0416%" y="1749" width="2.8729%" height="15" fill="rgb(251,28,31)" fg:x="22238182" fg:w="7066160"/><text x="9.2916%" y="1759.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,066,160 samples, 2.87%)</title><rect x="9.0416%" y="1733" width="2.8729%" height="15" fill="rgb(233,223,10)" fg:x="22238182" fg:w="7066160"/><text x="9.2916%" y="1743.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,066,160 samples, 2.87%)</title><rect x="9.0416%" y="1717" width="2.8729%" height="15" fill="rgb(215,21,27)" fg:x="22238182" fg:w="7066160"/><text x="9.2916%" y="1727.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,066,160 samples, 2.87%)</title><rect x="9.0416%" y="1701" width="2.8729%" height="15" fill="rgb(232,23,21)" fg:x="22238182" fg:w="7066160"/><text x="9.2916%" y="1711.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,231,098 samples, 0.91%)</title><rect x="11.0074%" y="1685" width="0.9071%" height="15" fill="rgb(244,5,23)" fg:x="27073244" fg:w="2231098"/><text x="11.2574%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,231,098 samples, 0.91%)</title><rect x="11.0074%" y="1669" width="0.9071%" height="15" fill="rgb(226,81,46)" fg:x="27073244" fg:w="2231098"/><text x="11.2574%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,231,098 samples, 0.91%)</title><rect x="11.0074%" y="1653" width="0.9071%" height="15" fill="rgb(247,70,30)" fg:x="27073244" fg:w="2231098"/><text x="11.2574%" y="1663.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,231,098 samples, 0.91%)</title><rect x="11.0074%" y="1637" width="0.9071%" height="15" fill="rgb(212,68,19)" fg:x="27073244" fg:w="2231098"/><text x="11.2574%" y="1647.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,231,098 samples, 0.91%)</title><rect x="11.0074%" y="1621" width="0.9071%" height="15" fill="rgb(240,187,13)" fg:x="27073244" fg:w="2231098"/><text x="11.2574%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,231,098 samples, 0.91%)</title><rect x="11.0074%" y="1605" width="0.9071%" height="15" fill="rgb(223,113,26)" fg:x="27073244" fg:w="2231098"/><text x="11.2574%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,231,098 samples, 0.91%)</title><rect x="11.0074%" y="1589" width="0.9071%" height="15" fill="rgb(206,192,2)" fg:x="27073244" fg:w="2231098"/><text x="11.2574%" y="1599.50"></text></g><g><title>alloc::slice::hack::to_vec (2,231,098 samples, 0.91%)</title><rect x="11.0074%" y="1573" width="0.9071%" height="15" fill="rgb(241,108,4)" fg:x="27073244" fg:w="2231098"/><text x="11.2574%" y="1583.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,231,098 samples, 0.91%)</title><rect x="11.0074%" y="1557" width="0.9071%" height="15" fill="rgb(247,173,49)" fg:x="27073244" fg:w="2231098"/><text x="11.2574%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,231,098 samples, 0.91%)</title><rect x="11.0074%" y="1541" width="0.9071%" height="15" fill="rgb(224,114,35)" fg:x="27073244" fg:w="2231098"/><text x="11.2574%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,231,098 samples, 0.91%)</title><rect x="11.0074%" y="1525" width="0.9071%" height="15" fill="rgb(245,159,27)" fg:x="27073244" fg:w="2231098"/><text x="11.2574%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,231,098 samples, 0.91%)</title><rect x="11.0074%" y="1509" width="0.9071%" height="15" fill="rgb(245,172,44)" fg:x="27073244" fg:w="2231098"/><text x="11.2574%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,231,098 samples, 0.91%)</title><rect x="11.0074%" y="1493" width="0.9071%" height="15" fill="rgb(236,23,11)" fg:x="27073244" fg:w="2231098"/><text x="11.2574%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5,866,579 samples, 2.39%)</title><rect x="11.9145%" y="1781" width="2.3852%" height="15" fill="rgb(205,117,38)" fg:x="29304342" fg:w="5866579"/><text x="12.1645%" y="1791.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5,866,579 samples, 2.39%)</title><rect x="11.9145%" y="1765" width="2.3852%" height="15" fill="rgb(237,72,25)" fg:x="29304342" fg:w="5866579"/><text x="12.1645%" y="1775.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (5,866,579 samples, 2.39%)</title><rect x="11.9145%" y="1749" width="2.3852%" height="15" fill="rgb(244,70,9)" fg:x="29304342" fg:w="5866579"/><text x="12.1645%" y="1759.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (5,866,579 samples, 2.39%)</title><rect x="11.9145%" y="1733" width="2.3852%" height="15" fill="rgb(217,125,39)" fg:x="29304342" fg:w="5866579"/><text x="12.1645%" y="1743.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (5,866,579 samples, 2.39%)</title><rect x="11.9145%" y="1717" width="2.3852%" height="15" fill="rgb(235,36,10)" fg:x="29304342" fg:w="5866579"/><text x="12.1645%" y="1727.50">al..</text></g><g><title>malloc (5,866,579 samples, 2.39%)</title><rect x="11.9145%" y="1701" width="2.3852%" height="15" fill="rgb(251,123,47)" fg:x="29304342" fg:w="5866579"/><text x="12.1645%" y="1711.50">ma..</text></g><g><title>[libc.so.6] (5,866,579 samples, 2.39%)</title><rect x="11.9145%" y="1685" width="2.3852%" height="15" fill="rgb(221,13,13)" fg:x="29304342" fg:w="5866579"/><text x="12.1645%" y="1695.50">[l..</text></g><g><title>[libc.so.6] (5,866,579 samples, 2.39%)</title><rect x="11.9145%" y="1669" width="2.3852%" height="15" fill="rgb(238,131,9)" fg:x="29304342" fg:w="5866579"/><text x="12.1645%" y="1679.50">[l..</text></g><g><title>[libc.so.6] (2,932,115 samples, 1.19%)</title><rect x="13.1076%" y="1653" width="1.1921%" height="15" fill="rgb(211,50,8)" fg:x="32238806" fg:w="2932115"/><text x="13.3576%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,948,128 samples, 1.20%)</title><rect x="14.2997%" y="1765" width="1.1986%" height="15" fill="rgb(245,182,24)" fg:x="35170921" fg:w="2948128"/><text x="14.5497%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,948,128 samples, 1.20%)</title><rect x="14.2997%" y="1749" width="1.1986%" height="15" fill="rgb(242,14,37)" fg:x="35170921" fg:w="2948128"/><text x="14.5497%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,948,128 samples, 1.20%)</title><rect x="14.2997%" y="1733" width="1.1986%" height="15" fill="rgb(246,228,12)" fg:x="35170921" fg:w="2948128"/><text x="14.5497%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,948,128 samples, 1.20%)</title><rect x="14.2997%" y="1717" width="1.1986%" height="15" fill="rgb(213,55,15)" fg:x="35170921" fg:w="2948128"/><text x="14.5497%" y="1727.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,948,128 samples, 1.20%)</title><rect x="14.2997%" y="1701" width="1.1986%" height="15" fill="rgb(209,9,3)" fg:x="35170921" fg:w="2948128"/><text x="14.5497%" y="1711.50"></text></g><g><title>malloc (2,948,128 samples, 1.20%)</title><rect x="14.2997%" y="1685" width="1.1986%" height="15" fill="rgb(230,59,30)" fg:x="35170921" fg:w="2948128"/><text x="14.5497%" y="1695.50"></text></g><g><title>[libc.so.6] (2,948,128 samples, 1.20%)</title><rect x="14.2997%" y="1669" width="1.1986%" height="15" fill="rgb(209,121,21)" fg:x="35170921" fg:w="2948128"/><text x="14.5497%" y="1679.50"></text></g><g><title>[libc.so.6] (2,948,128 samples, 1.20%)</title><rect x="14.2997%" y="1653" width="1.1986%" height="15" fill="rgb(220,109,13)" fg:x="35170921" fg:w="2948128"/><text x="14.5497%" y="1663.50"></text></g><g><title>benchmark::json_to_html_node (11,806,811 samples, 4.80%)</title><rect x="11.9145%" y="1829" width="4.8004%" height="15" fill="rgb(232,18,1)" fg:x="29304342" fg:w="11806811"/><text x="12.1645%" y="1839.50">benchm..</text></g><g><title>benchmark::json_to_html_node (11,806,811 samples, 4.80%)</title><rect x="11.9145%" y="1813" width="4.8004%" height="15" fill="rgb(215,41,42)" fg:x="29304342" fg:w="11806811"/><text x="12.1645%" y="1823.50">benchm..</text></g><g><title>benchmark::json_to_html_node (11,806,811 samples, 4.80%)</title><rect x="11.9145%" y="1797" width="4.8004%" height="15" fill="rgb(224,123,36)" fg:x="29304342" fg:w="11806811"/><text x="12.1645%" y="1807.50">benchm..</text></g><g><title>benchmark::json_to_html_node (5,940,232 samples, 2.42%)</title><rect x="14.2997%" y="1781" width="2.4152%" height="15" fill="rgb(240,125,3)" fg:x="35170921" fg:w="5940232"/><text x="14.5497%" y="1791.50">be..</text></g><g><title>benchmark::json_to_html_node (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1765" width="1.2165%" height="15" fill="rgb(205,98,50)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1775.50"></text></g><g><title>benchmark::json_to_html_node (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1749" width="1.2165%" height="15" fill="rgb(205,185,37)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1759.50"></text></g><g><title>benchmark::json_to_html_node (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1733" width="1.2165%" height="15" fill="rgb(238,207,15)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1743.50"></text></g><g><title>benchmark::json_to_html_node (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1717" width="1.2165%" height="15" fill="rgb(213,199,42)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1727.50"></text></g><g><title>benchmark::json_to_html_node (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1701" width="1.2165%" height="15" fill="rgb(235,201,11)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1711.50"></text></g><g><title>benchmark::json_to_html_node (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1685" width="1.2165%" height="15" fill="rgb(207,46,11)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1695.50"></text></g><g><title>benchmark::json_to_html_node (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1669" width="1.2165%" height="15" fill="rgb(241,35,35)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1679.50"></text></g><g><title>benchmark::json_to_html_node (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1653" width="1.2165%" height="15" fill="rgb(243,32,47)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1663.50"></text></g><g><title>benchmark::json_to_html_node (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1637" width="1.2165%" height="15" fill="rgb(247,202,23)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1621" width="1.2165%" height="15" fill="rgb(219,102,11)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1631.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1605" width="1.2165%" height="15" fill="rgb(243,110,44)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1615.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1589" width="1.2165%" height="15" fill="rgb(222,74,54)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1599.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1573" width="1.2165%" height="15" fill="rgb(216,99,12)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1583.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1557" width="1.2165%" height="15" fill="rgb(226,22,26)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1541" width="1.2165%" height="15" fill="rgb(217,163,10)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1525" width="1.2165%" height="15" fill="rgb(213,25,53)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1535.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1509" width="1.2165%" height="15" fill="rgb(252,105,26)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1493" width="1.2165%" height="15" fill="rgb(220,39,43)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1503.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1477" width="1.2165%" height="15" fill="rgb(229,68,48)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1487.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1461" width="1.2165%" height="15" fill="rgb(252,8,32)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1445" width="1.2165%" height="15" fill="rgb(223,20,43)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1455.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1429" width="1.2165%" height="15" fill="rgb(229,81,49)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1413" width="1.2165%" height="15" fill="rgb(236,28,36)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1423.50"></text></g><g><title>hashbrown::map::make_hash (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1397" width="1.2165%" height="15" fill="rgb(249,185,26)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1407.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1381" width="1.2165%" height="15" fill="rgb(249,174,33)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1391.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1365" width="1.2165%" height="15" fill="rgb(233,201,37)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1375.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1349" width="1.2165%" height="15" fill="rgb(221,78,26)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1359.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1333" width="1.2165%" height="15" fill="rgb(250,127,30)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1343.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1317" width="1.2165%" height="15" fill="rgb(230,49,44)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1301" width="1.2165%" height="15" fill="rgb(229,67,23)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1285" width="1.2165%" height="15" fill="rgb(249,83,47)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1295.50"></text></g><g><title>core::hash::Hasher::write_u8 (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1269" width="1.2165%" height="15" fill="rgb(215,43,3)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1279.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,992,104 samples, 1.22%)</title><rect x="15.4984%" y="1253" width="1.2165%" height="15" fill="rgb(238,154,13)" fg:x="38119049" fg:w="2992104"/><text x="15.7484%" y="1263.50"></text></g><g><title>benchmark::apply_frame_modifications (14,552,111 samples, 5.92%)</title><rect x="11.9145%" y="1845" width="5.9166%" height="15" fill="rgb(219,56,2)" fg:x="29304342" fg:w="14552111"/><text x="12.1645%" y="1855.50">benchmar..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,745,300 samples, 1.12%)</title><rect x="16.7149%" y="1829" width="1.1162%" height="15" fill="rgb(233,0,4)" fg:x="41111153" fg:w="2745300"/><text x="16.9649%" y="1839.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,745,300 samples, 1.12%)</title><rect x="16.7149%" y="1813" width="1.1162%" height="15" fill="rgb(235,30,7)" fg:x="41111153" fg:w="2745300"/><text x="16.9649%" y="1823.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,745,300 samples, 1.12%)</title><rect x="16.7149%" y="1797" width="1.1162%" height="15" fill="rgb(250,79,13)" fg:x="41111153" fg:w="2745300"/><text x="16.9649%" y="1807.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,745,300 samples, 1.12%)</title><rect x="16.7149%" y="1781" width="1.1162%" height="15" fill="rgb(211,146,34)" fg:x="41111153" fg:w="2745300"/><text x="16.9649%" y="1791.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,860,454 samples, 1.16%)</title><rect x="17.8311%" y="1573" width="1.1630%" height="15" fill="rgb(228,22,38)" fg:x="43856453" fg:w="2860454"/><text x="18.0811%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,860,454 samples, 1.16%)</title><rect x="17.8311%" y="1557" width="1.1630%" height="15" fill="rgb(235,168,5)" fg:x="43856453" fg:w="2860454"/><text x="18.0811%" y="1567.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,860,454 samples, 1.16%)</title><rect x="17.8311%" y="1541" width="1.1630%" height="15" fill="rgb(221,155,16)" fg:x="43856453" fg:w="2860454"/><text x="18.0811%" y="1551.50"></text></g><g><title>alloc::slice::hack::to_vec (2,860,454 samples, 1.16%)</title><rect x="17.8311%" y="1525" width="1.1630%" height="15" fill="rgb(215,215,53)" fg:x="43856453" fg:w="2860454"/><text x="18.0811%" y="1535.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,860,454 samples, 1.16%)</title><rect x="17.8311%" y="1509" width="1.1630%" height="15" fill="rgb(223,4,10)" fg:x="43856453" fg:w="2860454"/><text x="18.0811%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,860,454 samples, 1.16%)</title><rect x="17.8311%" y="1493" width="1.1630%" height="15" fill="rgb(234,103,6)" fg:x="43856453" fg:w="2860454"/><text x="18.0811%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,860,454 samples, 1.16%)</title><rect x="17.8311%" y="1477" width="1.1630%" height="15" fill="rgb(227,97,0)" fg:x="43856453" fg:w="2860454"/><text x="18.0811%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,860,454 samples, 1.16%)</title><rect x="17.8311%" y="1461" width="1.1630%" height="15" fill="rgb(234,150,53)" fg:x="43856453" fg:w="2860454"/><text x="18.0811%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,860,454 samples, 1.16%)</title><rect x="17.8311%" y="1445" width="1.1630%" height="15" fill="rgb(228,201,54)" fg:x="43856453" fg:w="2860454"/><text x="18.0811%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,860,454 samples, 1.16%)</title><rect x="17.8311%" y="1429" width="1.1630%" height="15" fill="rgb(222,22,37)" fg:x="43856453" fg:w="2860454"/><text x="18.0811%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,860,454 samples, 1.16%)</title><rect x="17.8311%" y="1413" width="1.1630%" height="15" fill="rgb(237,53,32)" fg:x="43856453" fg:w="2860454"/><text x="18.0811%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (2,860,454 samples, 1.16%)</title><rect x="17.8311%" y="1397" width="1.1630%" height="15" fill="rgb(233,25,53)" fg:x="43856453" fg:w="2860454"/><text x="18.0811%" y="1407.50"></text></g><g><title>malloc (2,860,454 samples, 1.16%)</title><rect x="17.8311%" y="1381" width="1.1630%" height="15" fill="rgb(210,40,34)" fg:x="43856453" fg:w="2860454"/><text x="18.0811%" y="1391.50"></text></g><g><title>[libc.so.6] (2,860,454 samples, 1.16%)</title><rect x="17.8311%" y="1365" width="1.1630%" height="15" fill="rgb(241,220,44)" fg:x="43856453" fg:w="2860454"/><text x="18.0811%" y="1375.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,924,257 samples, 1.19%)</title><rect x="18.9941%" y="1413" width="1.1889%" height="15" fill="rgb(235,28,35)" fg:x="46716907" fg:w="2924257"/><text x="19.2441%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,924,257 samples, 1.19%)</title><rect x="18.9941%" y="1397" width="1.1889%" height="15" fill="rgb(210,56,17)" fg:x="46716907" fg:w="2924257"/><text x="19.2441%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,924,257 samples, 1.19%)</title><rect x="18.9941%" y="1381" width="1.1889%" height="15" fill="rgb(224,130,29)" fg:x="46716907" fg:w="2924257"/><text x="19.2441%" y="1391.50"></text></g><g><title>alloc::slice::hack::to_vec (2,924,257 samples, 1.19%)</title><rect x="18.9941%" y="1365" width="1.1889%" height="15" fill="rgb(235,212,8)" fg:x="46716907" fg:w="2924257"/><text x="19.2441%" y="1375.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,924,257 samples, 1.19%)</title><rect x="18.9941%" y="1349" width="1.1889%" height="15" fill="rgb(223,33,50)" fg:x="46716907" fg:w="2924257"/><text x="19.2441%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,924,257 samples, 1.19%)</title><rect x="18.9941%" y="1333" width="1.1889%" height="15" fill="rgb(219,149,13)" fg:x="46716907" fg:w="2924257"/><text x="19.2441%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,924,257 samples, 1.19%)</title><rect x="18.9941%" y="1317" width="1.1889%" height="15" fill="rgb(250,156,29)" fg:x="46716907" fg:w="2924257"/><text x="19.2441%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,924,257 samples, 1.19%)</title><rect x="18.9941%" y="1301" width="1.1889%" height="15" fill="rgb(216,193,19)" fg:x="46716907" fg:w="2924257"/><text x="19.2441%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,924,257 samples, 1.19%)</title><rect x="18.9941%" y="1285" width="1.1889%" height="15" fill="rgb(216,135,14)" fg:x="46716907" fg:w="2924257"/><text x="19.2441%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,924,257 samples, 1.19%)</title><rect x="18.9941%" y="1269" width="1.1889%" height="15" fill="rgb(241,47,5)" fg:x="46716907" fg:w="2924257"/><text x="19.2441%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,924,257 samples, 1.19%)</title><rect x="18.9941%" y="1253" width="1.1889%" height="15" fill="rgb(233,42,35)" fg:x="46716907" fg:w="2924257"/><text x="19.2441%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (2,924,257 samples, 1.19%)</title><rect x="18.9941%" y="1237" width="1.1889%" height="15" fill="rgb(231,13,6)" fg:x="46716907" fg:w="2924257"/><text x="19.2441%" y="1247.50"></text></g><g><title>malloc (2,924,257 samples, 1.19%)</title><rect x="18.9941%" y="1221" width="1.1889%" height="15" fill="rgb(207,181,40)" fg:x="46716907" fg:w="2924257"/><text x="19.2441%" y="1231.50"></text></g><g><title>[libc.so.6] (2,924,257 samples, 1.19%)</title><rect x="18.9941%" y="1205" width="1.1889%" height="15" fill="rgb(254,173,49)" fg:x="46716907" fg:w="2924257"/><text x="19.2441%" y="1215.50"></text></g><g><title>__rdl_alloc (2,911,409 samples, 1.18%)</title><rect x="20.1830%" y="1141" width="1.1837%" height="15" fill="rgb(221,1,38)" fg:x="49641164" fg:w="2911409"/><text x="20.4330%" y="1151.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,911,409 samples, 1.18%)</title><rect x="20.1830%" y="1125" width="1.1837%" height="15" fill="rgb(206,124,46)" fg:x="49641164" fg:w="2911409"/><text x="20.4330%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11,672,787 samples, 4.75%)</title><rect x="20.1830%" y="1333" width="4.7459%" height="15" fill="rgb(249,21,11)" fg:x="49641164" fg:w="11672787"/><text x="20.4330%" y="1343.50">&lt;alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,672,787 samples, 4.75%)</title><rect x="20.1830%" y="1317" width="4.7459%" height="15" fill="rgb(222,201,40)" fg:x="49641164" fg:w="11672787"/><text x="20.4330%" y="1327.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11,672,787 samples, 4.75%)</title><rect x="20.1830%" y="1301" width="4.7459%" height="15" fill="rgb(235,61,29)" fg:x="49641164" fg:w="11672787"/><text x="20.4330%" y="1311.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (11,672,787 samples, 4.75%)</title><rect x="20.1830%" y="1285" width="4.7459%" height="15" fill="rgb(219,207,3)" fg:x="49641164" fg:w="11672787"/><text x="20.4330%" y="1295.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11,672,787 samples, 4.75%)</title><rect x="20.1830%" y="1269" width="4.7459%" height="15" fill="rgb(222,56,46)" fg:x="49641164" fg:w="11672787"/><text x="20.4330%" y="1279.50">&lt;T as ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11,672,787 samples, 4.75%)</title><rect x="20.1830%" y="1253" width="4.7459%" height="15" fill="rgb(239,76,54)" fg:x="49641164" fg:w="11672787"/><text x="20.4330%" y="1263.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11,672,787 samples, 4.75%)</title><rect x="20.1830%" y="1237" width="4.7459%" height="15" fill="rgb(231,124,27)" fg:x="49641164" fg:w="11672787"/><text x="20.4330%" y="1247.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (11,672,787 samples, 4.75%)</title><rect x="20.1830%" y="1221" width="4.7459%" height="15" fill="rgb(249,195,6)" fg:x="49641164" fg:w="11672787"/><text x="20.4330%" y="1231.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (11,672,787 samples, 4.75%)</title><rect x="20.1830%" y="1205" width="4.7459%" height="15" fill="rgb(237,174,47)" fg:x="49641164" fg:w="11672787"/><text x="20.4330%" y="1215.50">alloc:..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11,672,787 samples, 4.75%)</title><rect x="20.1830%" y="1189" width="4.7459%" height="15" fill="rgb(206,201,31)" fg:x="49641164" fg:w="11672787"/><text x="20.4330%" y="1199.50">&lt;alloc..</text></g><g><title>alloc::alloc::Global::alloc_impl (11,672,787 samples, 4.75%)</title><rect x="20.1830%" y="1173" width="4.7459%" height="15" fill="rgb(231,57,52)" fg:x="49641164" fg:w="11672787"/><text x="20.4330%" y="1183.50">alloc:..</text></g><g><title>alloc::alloc::alloc (11,672,787 samples, 4.75%)</title><rect x="20.1830%" y="1157" width="4.7459%" height="15" fill="rgb(248,177,22)" fg:x="49641164" fg:w="11672787"/><text x="20.4330%" y="1167.50">alloc:..</text></g><g><title>malloc (8,761,378 samples, 3.56%)</title><rect x="21.3667%" y="1141" width="3.5622%" height="15" fill="rgb(215,211,37)" fg:x="52552573" fg:w="8761378"/><text x="21.6167%" y="1151.50">mall..</text></g><g><title>[libc.so.6] (2,891,940 samples, 1.18%)</title><rect x="23.7531%" y="1125" width="1.1758%" height="15" fill="rgb(241,128,51)" fg:x="58422011" fg:w="2891940"/><text x="24.0031%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,843,971 samples, 2.38%)</title><rect x="24.9289%" y="1253" width="2.3760%" height="15" fill="rgb(227,165,31)" fg:x="61313951" fg:w="5843971"/><text x="25.1789%" y="1263.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,843,971 samples, 2.38%)</title><rect x="24.9289%" y="1237" width="2.3760%" height="15" fill="rgb(228,167,24)" fg:x="61313951" fg:w="5843971"/><text x="25.1789%" y="1247.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,843,971 samples, 2.38%)</title><rect x="24.9289%" y="1221" width="2.3760%" height="15" fill="rgb(228,143,12)" fg:x="61313951" fg:w="5843971"/><text x="25.1789%" y="1231.50">al..</text></g><g><title>alloc::slice::hack::to_vec (5,843,971 samples, 2.38%)</title><rect x="24.9289%" y="1205" width="2.3760%" height="15" fill="rgb(249,149,8)" fg:x="61313951" fg:w="5843971"/><text x="25.1789%" y="1215.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,843,971 samples, 2.38%)</title><rect x="24.9289%" y="1189" width="2.3760%" height="15" fill="rgb(243,35,44)" fg:x="61313951" fg:w="5843971"/><text x="25.1789%" y="1199.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,843,971 samples, 2.38%)</title><rect x="24.9289%" y="1173" width="2.3760%" height="15" fill="rgb(246,89,9)" fg:x="61313951" fg:w="5843971"/><text x="25.1789%" y="1183.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,843,971 samples, 2.38%)</title><rect x="24.9289%" y="1157" width="2.3760%" height="15" fill="rgb(233,213,13)" fg:x="61313951" fg:w="5843971"/><text x="25.1789%" y="1167.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,843,971 samples, 2.38%)</title><rect x="24.9289%" y="1141" width="2.3760%" height="15" fill="rgb(233,141,41)" fg:x="61313951" fg:w="5843971"/><text x="25.1789%" y="1151.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,843,971 samples, 2.38%)</title><rect x="24.9289%" y="1125" width="2.3760%" height="15" fill="rgb(239,167,4)" fg:x="61313951" fg:w="5843971"/><text x="25.1789%" y="1135.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,919,635 samples, 1.19%)</title><rect x="26.1179%" y="1109" width="1.1871%" height="15" fill="rgb(209,217,16)" fg:x="64238287" fg:w="2919635"/><text x="26.3679%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,919,635 samples, 1.19%)</title><rect x="26.1179%" y="1093" width="1.1871%" height="15" fill="rgb(219,88,35)" fg:x="64238287" fg:w="2919635"/><text x="26.3679%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (2,919,635 samples, 1.19%)</title><rect x="26.1179%" y="1077" width="1.1871%" height="15" fill="rgb(220,193,23)" fg:x="64238287" fg:w="2919635"/><text x="26.3679%" y="1087.50"></text></g><g><title>malloc (2,919,635 samples, 1.19%)</title><rect x="26.1179%" y="1061" width="1.1871%" height="15" fill="rgb(230,90,52)" fg:x="64238287" fg:w="2919635"/><text x="26.3679%" y="1071.50"></text></g><g><title>[libc.so.6] (2,919,635 samples, 1.19%)</title><rect x="26.1179%" y="1045" width="1.1871%" height="15" fill="rgb(252,106,19)" fg:x="64238287" fg:w="2919635"/><text x="26.3679%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,983,230 samples, 1.21%)</title><rect x="28.4482%" y="933" width="1.2129%" height="15" fill="rgb(206,74,20)" fg:x="69969947" fg:w="2983230"/><text x="28.6982%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,983,230 samples, 1.21%)</title><rect x="28.4482%" y="917" width="1.2129%" height="15" fill="rgb(230,138,44)" fg:x="69969947" fg:w="2983230"/><text x="28.6982%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,983,230 samples, 1.21%)</title><rect x="28.4482%" y="901" width="1.2129%" height="15" fill="rgb(235,182,43)" fg:x="69969947" fg:w="2983230"/><text x="28.6982%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (2,983,230 samples, 1.21%)</title><rect x="28.4482%" y="885" width="1.2129%" height="15" fill="rgb(242,16,51)" fg:x="69969947" fg:w="2983230"/><text x="28.6982%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,983,230 samples, 1.21%)</title><rect x="28.4482%" y="869" width="1.2129%" height="15" fill="rgb(248,9,4)" fg:x="69969947" fg:w="2983230"/><text x="28.6982%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,983,230 samples, 1.21%)</title><rect x="28.4482%" y="853" width="1.2129%" height="15" fill="rgb(210,31,22)" fg:x="69969947" fg:w="2983230"/><text x="28.6982%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,983,230 samples, 1.21%)</title><rect x="28.4482%" y="837" width="1.2129%" height="15" fill="rgb(239,54,39)" fg:x="69969947" fg:w="2983230"/><text x="28.6982%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,983,230 samples, 1.21%)</title><rect x="28.4482%" y="821" width="1.2129%" height="15" fill="rgb(230,99,41)" fg:x="69969947" fg:w="2983230"/><text x="28.6982%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,983,230 samples, 1.21%)</title><rect x="28.4482%" y="805" width="1.2129%" height="15" fill="rgb(253,106,12)" fg:x="69969947" fg:w="2983230"/><text x="28.6982%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,983,230 samples, 1.21%)</title><rect x="28.4482%" y="789" width="1.2129%" height="15" fill="rgb(213,46,41)" fg:x="69969947" fg:w="2983230"/><text x="28.6982%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,983,230 samples, 1.21%)</title><rect x="28.4482%" y="773" width="1.2129%" height="15" fill="rgb(215,133,35)" fg:x="69969947" fg:w="2983230"/><text x="28.6982%" y="783.50"></text></g><g><title>alloc::alloc::alloc (2,983,230 samples, 1.21%)</title><rect x="28.4482%" y="757" width="1.2129%" height="15" fill="rgb(213,28,5)" fg:x="69969947" fg:w="2983230"/><text x="28.6982%" y="767.50"></text></g><g><title>malloc (2,983,230 samples, 1.21%)</title><rect x="28.4482%" y="741" width="1.2129%" height="15" fill="rgb(215,77,49)" fg:x="69969947" fg:w="2983230"/><text x="28.6982%" y="751.50"></text></g><g><title>[libc.so.6] (2,983,230 samples, 1.21%)</title><rect x="28.4482%" y="725" width="1.2129%" height="15" fill="rgb(248,100,22)" fg:x="69969947" fg:w="2983230"/><text x="28.6982%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="453" width="1.1974%" height="15" fill="rgb(208,67,9)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="437" width="1.1974%" height="15" fill="rgb(219,133,21)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="421" width="1.1974%" height="15" fill="rgb(246,46,29)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="405" width="1.1974%" height="15" fill="rgb(246,185,52)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="415.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="389" width="1.1974%" height="15" fill="rgb(252,136,11)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="373" width="1.1974%" height="15" fill="rgb(219,138,53)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="357" width="1.1974%" height="15" fill="rgb(211,51,23)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="341" width="1.1974%" height="15" fill="rgb(247,221,28)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="325" width="1.1974%" height="15" fill="rgb(251,222,45)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="309" width="1.1974%" height="15" fill="rgb(217,162,53)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="293" width="1.1974%" height="15" fill="rgb(229,93,14)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="277" width="1.1974%" height="15" fill="rgb(209,67,49)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="261" width="1.1974%" height="15" fill="rgb(213,87,29)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="245" width="1.1974%" height="15" fill="rgb(205,151,52)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="229" width="1.1974%" height="15" fill="rgb(253,215,39)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="213" width="1.1974%" height="15" fill="rgb(221,220,41)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2,945,145 samples, 1.20%)</title><rect x="29.6611%" y="197" width="1.1974%" height="15" fill="rgb(218,133,21)" fg:x="72953177" fg:w="2945145"/><text x="29.9111%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,874,114 samples, 2.39%)</title><rect x="29.6611%" y="613" width="2.3883%" height="15" fill="rgb(221,193,43)" fg:x="72953177" fg:w="5874114"/><text x="29.9111%" y="623.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,874,114 samples, 2.39%)</title><rect x="29.6611%" y="597" width="2.3883%" height="15" fill="rgb(240,128,52)" fg:x="72953177" fg:w="5874114"/><text x="29.9111%" y="607.50">al..</text></g><g><title>alloc::slice::hack::to_vec (5,874,114 samples, 2.39%)</title><rect x="29.6611%" y="581" width="2.3883%" height="15" fill="rgb(253,114,12)" fg:x="72953177" fg:w="5874114"/><text x="29.9111%" y="591.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,874,114 samples, 2.39%)</title><rect x="29.6611%" y="565" width="2.3883%" height="15" fill="rgb(215,223,47)" fg:x="72953177" fg:w="5874114"/><text x="29.9111%" y="575.50">&lt;T..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (5,874,114 samples, 2.39%)</title><rect x="29.6611%" y="549" width="2.3883%" height="15" fill="rgb(248,225,23)" fg:x="72953177" fg:w="5874114"/><text x="29.9111%" y="559.50">&lt;c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,874,114 samples, 2.39%)</title><rect x="29.6611%" y="533" width="2.3883%" height="15" fill="rgb(250,108,0)" fg:x="72953177" fg:w="5874114"/><text x="29.9111%" y="543.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,874,114 samples, 2.39%)</title><rect x="29.6611%" y="517" width="2.3883%" height="15" fill="rgb(228,208,7)" fg:x="72953177" fg:w="5874114"/><text x="29.9111%" y="527.50">al..</text></g><g><title>alloc::slice::hack::to_vec (5,874,114 samples, 2.39%)</title><rect x="29.6611%" y="501" width="2.3883%" height="15" fill="rgb(244,45,10)" fg:x="72953177" fg:w="5874114"/><text x="29.9111%" y="511.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,874,114 samples, 2.39%)</title><rect x="29.6611%" y="485" width="2.3883%" height="15" fill="rgb(207,125,25)" fg:x="72953177" fg:w="5874114"/><text x="29.9111%" y="495.50">&lt;T..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (5,874,114 samples, 2.39%)</title><rect x="29.6611%" y="469" width="2.3883%" height="15" fill="rgb(210,195,18)" fg:x="72953177" fg:w="5874114"/><text x="29.9111%" y="479.50">&lt;c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,928,969 samples, 1.19%)</title><rect x="30.8586%" y="453" width="1.1909%" height="15" fill="rgb(249,80,12)" fg:x="75898322" fg:w="2928969"/><text x="31.1086%" y="463.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,928,969 samples, 1.19%)</title><rect x="30.8586%" y="437" width="1.1909%" height="15" fill="rgb(221,65,9)" fg:x="75898322" fg:w="2928969"/><text x="31.1086%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,928,969 samples, 1.19%)</title><rect x="30.8586%" y="421" width="1.1909%" height="15" fill="rgb(235,49,36)" fg:x="75898322" fg:w="2928969"/><text x="31.1086%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,928,969 samples, 1.19%)</title><rect x="30.8586%" y="405" width="1.1909%" height="15" fill="rgb(225,32,20)" fg:x="75898322" fg:w="2928969"/><text x="31.1086%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,928,969 samples, 1.19%)</title><rect x="30.8586%" y="389" width="1.1909%" height="15" fill="rgb(215,141,46)" fg:x="75898322" fg:w="2928969"/><text x="31.1086%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,928,969 samples, 1.19%)</title><rect x="30.8586%" y="373" width="1.1909%" height="15" fill="rgb(250,160,47)" fg:x="75898322" fg:w="2928969"/><text x="31.1086%" y="383.50"></text></g><g><title>core::clone::Clone::clone (2,928,969 samples, 1.19%)</title><rect x="30.8586%" y="357" width="1.1909%" height="15" fill="rgb(216,222,40)" fg:x="75898322" fg:w="2928969"/><text x="31.1086%" y="367.50"></text></g><g><title>[unknown] (2,928,969 samples, 1.19%)</title><rect x="30.8586%" y="341" width="1.1909%" height="15" fill="rgb(234,217,39)" fg:x="75898322" fg:w="2928969"/><text x="31.1086%" y="351.50"></text></g><g><title>[libc.so.6] (2,928,969 samples, 1.19%)</title><rect x="30.8586%" y="325" width="1.1909%" height="15" fill="rgb(207,178,40)" fg:x="75898322" fg:w="2928969"/><text x="31.1086%" y="335.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (8,804,523 samples, 3.58%)</title><rect x="29.6611%" y="709" width="3.5797%" height="15" fill="rgb(221,136,13)" fg:x="72953177" fg:w="8804523"/><text x="29.9111%" y="719.50">&lt;css..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,804,523 samples, 3.58%)</title><rect x="29.6611%" y="693" width="3.5797%" height="15" fill="rgb(249,199,10)" fg:x="72953177" fg:w="8804523"/><text x="29.9111%" y="703.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,804,523 samples, 3.58%)</title><rect x="29.6611%" y="677" width="3.5797%" height="15" fill="rgb(249,222,13)" fg:x="72953177" fg:w="8804523"/><text x="29.9111%" y="687.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (8,804,523 samples, 3.58%)</title><rect x="29.6611%" y="661" width="3.5797%" height="15" fill="rgb(244,185,38)" fg:x="72953177" fg:w="8804523"/><text x="29.9111%" y="671.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,804,523 samples, 3.58%)</title><rect x="29.6611%" y="645" width="3.5797%" height="15" fill="rgb(236,202,9)" fg:x="72953177" fg:w="8804523"/><text x="29.9111%" y="655.50">&lt;T a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (8,804,523 samples, 3.58%)</title><rect x="29.6611%" y="629" width="3.5797%" height="15" fill="rgb(250,229,37)" fg:x="72953177" fg:w="8804523"/><text x="29.9111%" y="639.50">&lt;css..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,930,409 samples, 1.19%)</title><rect x="32.0494%" y="613" width="1.1914%" height="15" fill="rgb(206,174,23)" fg:x="78827291" fg:w="2930409"/><text x="32.2994%" y="623.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,930,409 samples, 1.19%)</title><rect x="32.0494%" y="597" width="1.1914%" height="15" fill="rgb(211,33,43)" fg:x="78827291" fg:w="2930409"/><text x="32.2994%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,930,409 samples, 1.19%)</title><rect x="32.0494%" y="581" width="1.1914%" height="15" fill="rgb(245,58,50)" fg:x="78827291" fg:w="2930409"/><text x="32.2994%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,930,409 samples, 1.19%)</title><rect x="32.0494%" y="565" width="1.1914%" height="15" fill="rgb(244,68,36)" fg:x="78827291" fg:w="2930409"/><text x="32.2994%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,930,409 samples, 1.19%)</title><rect x="32.0494%" y="549" width="1.1914%" height="15" fill="rgb(232,229,15)" fg:x="78827291" fg:w="2930409"/><text x="32.2994%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,930,409 samples, 1.19%)</title><rect x="32.0494%" y="533" width="1.1914%" height="15" fill="rgb(254,30,23)" fg:x="78827291" fg:w="2930409"/><text x="32.2994%" y="543.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,930,409 samples, 1.19%)</title><rect x="32.0494%" y="517" width="1.1914%" height="15" fill="rgb(235,160,14)" fg:x="78827291" fg:w="2930409"/><text x="32.2994%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,930,409 samples, 1.19%)</title><rect x="32.0494%" y="501" width="1.1914%" height="15" fill="rgb(212,155,44)" fg:x="78827291" fg:w="2930409"/><text x="32.2994%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,930,409 samples, 1.19%)</title><rect x="32.0494%" y="485" width="1.1914%" height="15" fill="rgb(226,2,50)" fg:x="78827291" fg:w="2930409"/><text x="32.2994%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2,930,409 samples, 1.19%)</title><rect x="32.0494%" y="469" width="1.1914%" height="15" fill="rgb(234,177,6)" fg:x="78827291" fg:w="2930409"/><text x="32.2994%" y="479.50"></text></g><g><title>malloc (2,930,409 samples, 1.19%)</title><rect x="32.0494%" y="453" width="1.1914%" height="15" fill="rgb(217,24,9)" fg:x="78827291" fg:w="2930409"/><text x="32.2994%" y="463.50"></text></g><g><title>[libc.so.6] (2,930,409 samples, 1.19%)</title><rect x="32.0494%" y="437" width="1.1914%" height="15" fill="rgb(220,13,46)" fg:x="78827291" fg:w="2930409"/><text x="32.2994%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,731,029 samples, 4.77%)</title><rect x="29.6611%" y="773" width="4.7696%" height="15" fill="rgb(239,221,27)" fg:x="72953177" fg:w="11731029"/><text x="29.9111%" y="783.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11,731,029 samples, 4.77%)</title><rect x="29.6611%" y="757" width="4.7696%" height="15" fill="rgb(222,198,25)" fg:x="72953177" fg:w="11731029"/><text x="29.9111%" y="767.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (11,731,029 samples, 4.77%)</title><rect x="29.6611%" y="741" width="4.7696%" height="15" fill="rgb(211,99,13)" fg:x="72953177" fg:w="11731029"/><text x="29.9111%" y="751.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11,731,029 samples, 4.77%)</title><rect x="29.6611%" y="725" width="4.7696%" height="15" fill="rgb(232,111,31)" fg:x="72953177" fg:w="11731029"/><text x="29.9111%" y="735.50">&lt;T as ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,926,506 samples, 1.19%)</title><rect x="33.2409%" y="709" width="1.1899%" height="15" fill="rgb(245,82,37)" fg:x="81757700" fg:w="2926506"/><text x="33.4909%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,926,506 samples, 1.19%)</title><rect x="33.2409%" y="693" width="1.1899%" height="15" fill="rgb(227,149,46)" fg:x="81757700" fg:w="2926506"/><text x="33.4909%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,926,506 samples, 1.19%)</title><rect x="33.2409%" y="677" width="1.1899%" height="15" fill="rgb(218,36,50)" fg:x="81757700" fg:w="2926506"/><text x="33.4909%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,926,506 samples, 1.19%)</title><rect x="33.2409%" y="661" width="1.1899%" height="15" fill="rgb(226,80,48)" fg:x="81757700" fg:w="2926506"/><text x="33.4909%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,926,506 samples, 1.19%)</title><rect x="33.2409%" y="645" width="1.1899%" height="15" fill="rgb(238,224,15)" fg:x="81757700" fg:w="2926506"/><text x="33.4909%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,926,506 samples, 1.19%)</title><rect x="33.2409%" y="629" width="1.1899%" height="15" fill="rgb(241,136,10)" fg:x="81757700" fg:w="2926506"/><text x="33.4909%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2,926,506 samples, 1.19%)</title><rect x="33.2409%" y="613" width="1.1899%" height="15" fill="rgb(208,32,45)" fg:x="81757700" fg:w="2926506"/><text x="33.4909%" y="623.50"></text></g><g><title>malloc (2,926,506 samples, 1.19%)</title><rect x="33.2409%" y="597" width="1.1899%" height="15" fill="rgb(207,135,9)" fg:x="81757700" fg:w="2926506"/><text x="33.4909%" y="607.50"></text></g><g><title>[libc.so.6] (2,926,506 samples, 1.19%)</title><rect x="33.2409%" y="581" width="1.1899%" height="15" fill="rgb(206,86,44)" fg:x="81757700" fg:w="2926506"/><text x="33.4909%" y="591.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,962,475 samples, 1.20%)</title><rect x="34.4307%" y="773" width="1.2045%" height="15" fill="rgb(245,177,15)" fg:x="84684206" fg:w="2962475"/><text x="34.6807%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,962,475 samples, 1.20%)</title><rect x="34.4307%" y="757" width="1.2045%" height="15" fill="rgb(206,64,50)" fg:x="84684206" fg:w="2962475"/><text x="34.6807%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,962,475 samples, 1.20%)</title><rect x="34.4307%" y="741" width="1.2045%" height="15" fill="rgb(234,36,40)" fg:x="84684206" fg:w="2962475"/><text x="34.6807%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2,962,475 samples, 1.20%)</title><rect x="34.4307%" y="725" width="1.2045%" height="15" fill="rgb(213,64,8)" fg:x="84684206" fg:w="2962475"/><text x="34.6807%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,962,475 samples, 1.20%)</title><rect x="34.4307%" y="709" width="1.2045%" height="15" fill="rgb(210,75,36)" fg:x="84684206" fg:w="2962475"/><text x="34.6807%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,962,475 samples, 1.20%)</title><rect x="34.4307%" y="693" width="1.2045%" height="15" fill="rgb(229,88,21)" fg:x="84684206" fg:w="2962475"/><text x="34.6807%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,962,475 samples, 1.20%)</title><rect x="34.4307%" y="677" width="1.2045%" height="15" fill="rgb(252,204,47)" fg:x="84684206" fg:w="2962475"/><text x="34.6807%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,962,475 samples, 1.20%)</title><rect x="34.4307%" y="661" width="1.2045%" height="15" fill="rgb(208,77,27)" fg:x="84684206" fg:w="2962475"/><text x="34.6807%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,962,475 samples, 1.20%)</title><rect x="34.4307%" y="645" width="1.2045%" height="15" fill="rgb(221,76,26)" fg:x="84684206" fg:w="2962475"/><text x="34.6807%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,962,475 samples, 1.20%)</title><rect x="34.4307%" y="629" width="1.2045%" height="15" fill="rgb(225,139,18)" fg:x="84684206" fg:w="2962475"/><text x="34.6807%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,962,475 samples, 1.20%)</title><rect x="34.4307%" y="613" width="1.2045%" height="15" fill="rgb(230,137,11)" fg:x="84684206" fg:w="2962475"/><text x="34.6807%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2,962,475 samples, 1.20%)</title><rect x="34.4307%" y="597" width="1.2045%" height="15" fill="rgb(212,28,1)" fg:x="84684206" fg:w="2962475"/><text x="34.6807%" y="607.50"></text></g><g><title>malloc (2,962,475 samples, 1.20%)</title><rect x="34.4307%" y="581" width="1.2045%" height="15" fill="rgb(248,164,17)" fg:x="84684206" fg:w="2962475"/><text x="34.6807%" y="591.50"></text></g><g><title>[libc.so.6] (2,962,475 samples, 1.20%)</title><rect x="34.4307%" y="565" width="1.2045%" height="15" fill="rgb(222,171,42)" fg:x="84684206" fg:w="2962475"/><text x="34.6807%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,627,527 samples, 7.17%)</title><rect x="29.6611%" y="853" width="7.1670%" height="15" fill="rgb(243,84,45)" fg:x="72953177" fg:w="17627527"/><text x="29.9111%" y="863.50">&lt;alloc::ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,627,527 samples, 7.17%)</title><rect x="29.6611%" y="837" width="7.1670%" height="15" fill="rgb(252,49,23)" fg:x="72953177" fg:w="17627527"/><text x="29.9111%" y="847.50">alloc::sli..</text></g><g><title>alloc::slice::hack::to_vec (17,627,527 samples, 7.17%)</title><rect x="29.6611%" y="821" width="7.1670%" height="15" fill="rgb(215,19,7)" fg:x="72953177" fg:w="17627527"/><text x="29.9111%" y="831.50">alloc::sli..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,627,527 samples, 7.17%)</title><rect x="29.6611%" y="805" width="7.1670%" height="15" fill="rgb(238,81,41)" fg:x="72953177" fg:w="17627527"/><text x="29.9111%" y="815.50">&lt;T as allo..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (17,627,527 samples, 7.17%)</title><rect x="29.6611%" y="789" width="7.1670%" height="15" fill="rgb(210,199,37)" fg:x="72953177" fg:w="17627527"/><text x="29.9111%" y="799.50">&lt;css_bitve..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,934,023 samples, 1.19%)</title><rect x="35.6352%" y="773" width="1.1929%" height="15" fill="rgb(244,192,49)" fg:x="87646681" fg:w="2934023"/><text x="35.8852%" y="783.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,934,023 samples, 1.19%)</title><rect x="35.6352%" y="757" width="1.1929%" height="15" fill="rgb(226,211,11)" fg:x="87646681" fg:w="2934023"/><text x="35.8852%" y="767.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,934,023 samples, 1.19%)</title><rect x="35.6352%" y="741" width="1.1929%" height="15" fill="rgb(236,162,54)" fg:x="87646681" fg:w="2934023"/><text x="35.8852%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,934,023 samples, 1.19%)</title><rect x="35.6352%" y="725" width="1.1929%" height="15" fill="rgb(220,229,9)" fg:x="87646681" fg:w="2934023"/><text x="35.8852%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,934,023 samples, 1.19%)</title><rect x="35.6352%" y="709" width="1.1929%" height="15" fill="rgb(250,87,22)" fg:x="87646681" fg:w="2934023"/><text x="35.8852%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,934,023 samples, 1.19%)</title><rect x="35.6352%" y="693" width="1.1929%" height="15" fill="rgb(239,43,17)" fg:x="87646681" fg:w="2934023"/><text x="35.8852%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (2,934,023 samples, 1.19%)</title><rect x="35.6352%" y="677" width="1.1929%" height="15" fill="rgb(231,177,25)" fg:x="87646681" fg:w="2934023"/><text x="35.8852%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,934,023 samples, 1.19%)</title><rect x="35.6352%" y="661" width="1.1929%" height="15" fill="rgb(219,179,1)" fg:x="87646681" fg:w="2934023"/><text x="35.8852%" y="671.50"></text></g><g><title>[libc.so.6] (2,934,023 samples, 1.19%)</title><rect x="35.6352%" y="645" width="1.1929%" height="15" fill="rgb(238,219,53)" fg:x="87646681" fg:w="2934023"/><text x="35.8852%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23,402,372 samples, 9.51%)</title><rect x="28.4482%" y="1093" width="9.5149%" height="15" fill="rgb(232,167,36)" fg:x="69969947" fg:w="23402372"/><text x="28.6982%" y="1103.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23,402,372 samples, 9.51%)</title><rect x="28.4482%" y="1077" width="9.5149%" height="15" fill="rgb(244,19,51)" fg:x="69969947" fg:w="23402372"/><text x="28.6982%" y="1087.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (23,402,372 samples, 9.51%)</title><rect x="28.4482%" y="1061" width="9.5149%" height="15" fill="rgb(224,6,22)" fg:x="69969947" fg:w="23402372"/><text x="28.6982%" y="1071.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23,402,372 samples, 9.51%)</title><rect x="28.4482%" y="1045" width="9.5149%" height="15" fill="rgb(224,145,5)" fg:x="69969947" fg:w="23402372"/><text x="28.6982%" y="1055.50">&lt;T as alloc::s..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (23,402,372 samples, 9.51%)</title><rect x="28.4482%" y="1029" width="9.5149%" height="15" fill="rgb(234,130,49)" fg:x="69969947" fg:w="23402372"/><text x="28.6982%" y="1039.50">&lt;css_bitvector..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23,402,372 samples, 9.51%)</title><rect x="28.4482%" y="1013" width="9.5149%" height="15" fill="rgb(254,6,2)" fg:x="69969947" fg:w="23402372"/><text x="28.6982%" y="1023.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23,402,372 samples, 9.51%)</title><rect x="28.4482%" y="997" width="9.5149%" height="15" fill="rgb(208,96,46)" fg:x="69969947" fg:w="23402372"/><text x="28.6982%" y="1007.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (23,402,372 samples, 9.51%)</title><rect x="28.4482%" y="981" width="9.5149%" height="15" fill="rgb(239,3,39)" fg:x="69969947" fg:w="23402372"/><text x="28.6982%" y="991.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23,402,372 samples, 9.51%)</title><rect x="28.4482%" y="965" width="9.5149%" height="15" fill="rgb(233,210,1)" fg:x="69969947" fg:w="23402372"/><text x="28.6982%" y="975.50">&lt;T as alloc::s..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (23,402,372 samples, 9.51%)</title><rect x="28.4482%" y="949" width="9.5149%" height="15" fill="rgb(244,137,37)" fg:x="69969947" fg:w="23402372"/><text x="28.6982%" y="959.50">&lt;css_bitvector..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20,419,142 samples, 8.30%)</title><rect x="29.6611%" y="933" width="8.3020%" height="15" fill="rgb(240,136,2)" fg:x="72953177" fg:w="20419142"/><text x="29.9111%" y="943.50">&lt;alloc::vec:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20,419,142 samples, 8.30%)</title><rect x="29.6611%" y="917" width="8.3020%" height="15" fill="rgb(239,18,37)" fg:x="72953177" fg:w="20419142"/><text x="29.9111%" y="927.50">alloc::slice..</text></g><g><title>alloc::slice::hack::to_vec (20,419,142 samples, 8.30%)</title><rect x="29.6611%" y="901" width="8.3020%" height="15" fill="rgb(218,185,22)" fg:x="72953177" fg:w="20419142"/><text x="29.9111%" y="911.50">alloc::slice..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20,419,142 samples, 8.30%)</title><rect x="29.6611%" y="885" width="8.3020%" height="15" fill="rgb(225,218,4)" fg:x="72953177" fg:w="20419142"/><text x="29.9111%" y="895.50">&lt;T as alloc:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (20,419,142 samples, 8.30%)</title><rect x="29.6611%" y="869" width="8.3020%" height="15" fill="rgb(230,182,32)" fg:x="72953177" fg:w="20419142"/><text x="29.9111%" y="879.50">&lt;css_bitvect..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,791,615 samples, 1.14%)</title><rect x="36.8281%" y="853" width="1.1350%" height="15" fill="rgb(242,56,43)" fg:x="90580704" fg:w="2791615"/><text x="37.0781%" y="863.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,791,615 samples, 1.14%)</title><rect x="36.8281%" y="837" width="1.1350%" height="15" fill="rgb(233,99,24)" fg:x="90580704" fg:w="2791615"/><text x="37.0781%" y="847.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,791,615 samples, 1.14%)</title><rect x="36.8281%" y="821" width="1.1350%" height="15" fill="rgb(234,209,42)" fg:x="90580704" fg:w="2791615"/><text x="37.0781%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,791,615 samples, 1.14%)</title><rect x="36.8281%" y="805" width="1.1350%" height="15" fill="rgb(227,7,12)" fg:x="90580704" fg:w="2791615"/><text x="37.0781%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,791,615 samples, 1.14%)</title><rect x="36.8281%" y="789" width="1.1350%" height="15" fill="rgb(245,203,43)" fg:x="90580704" fg:w="2791615"/><text x="37.0781%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,791,615 samples, 1.14%)</title><rect x="36.8281%" y="773" width="1.1350%" height="15" fill="rgb(238,205,33)" fg:x="90580704" fg:w="2791615"/><text x="37.0781%" y="783.50"></text></g><g><title>core::clone::Clone::clone (2,791,615 samples, 1.14%)</title><rect x="36.8281%" y="757" width="1.1350%" height="15" fill="rgb(231,56,7)" fg:x="90580704" fg:w="2791615"/><text x="37.0781%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,791,615 samples, 1.14%)</title><rect x="36.8281%" y="741" width="1.1350%" height="15" fill="rgb(244,186,29)" fg:x="90580704" fg:w="2791615"/><text x="37.0781%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,791,615 samples, 1.14%)</title><rect x="36.8281%" y="725" width="1.1350%" height="15" fill="rgb(234,111,31)" fg:x="90580704" fg:w="2791615"/><text x="37.0781%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,791,615 samples, 1.14%)</title><rect x="36.8281%" y="709" width="1.1350%" height="15" fill="rgb(241,149,10)" fg:x="90580704" fg:w="2791615"/><text x="37.0781%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (2,791,615 samples, 1.14%)</title><rect x="36.8281%" y="693" width="1.1350%" height="15" fill="rgb(249,206,44)" fg:x="90580704" fg:w="2791615"/><text x="37.0781%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,791,615 samples, 1.14%)</title><rect x="36.8281%" y="677" width="1.1350%" height="15" fill="rgb(251,153,30)" fg:x="90580704" fg:w="2791615"/><text x="37.0781%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,791,615 samples, 1.14%)</title><rect x="36.8281%" y="661" width="1.1350%" height="15" fill="rgb(239,152,38)" fg:x="90580704" fg:w="2791615"/><text x="37.0781%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,791,615 samples, 1.14%)</title><rect x="36.8281%" y="645" width="1.1350%" height="15" fill="rgb(249,139,47)" fg:x="90580704" fg:w="2791615"/><text x="37.0781%" y="655.50"></text></g><g><title>[libc.so.6] (2,791,615 samples, 1.14%)</title><rect x="36.8281%" y="629" width="1.1350%" height="15" fill="rgb(244,64,35)" fg:x="90580704" fg:w="2791615"/><text x="37.0781%" y="639.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (26,282,494 samples, 10.69%)</title><rect x="28.4482%" y="1109" width="10.6859%" height="15" fill="rgb(216,46,15)" fg:x="69969947" fg:w="26282494"/><text x="28.6982%" y="1119.50">&lt;css_bitvector_c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,880,122 samples, 1.17%)</title><rect x="37.9631%" y="1093" width="1.1710%" height="15" fill="rgb(250,74,19)" fg:x="93372319" fg:w="2880122"/><text x="38.2131%" y="1103.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,880,122 samples, 1.17%)</title><rect x="37.9631%" y="1077" width="1.1710%" height="15" fill="rgb(249,42,33)" fg:x="93372319" fg:w="2880122"/><text x="38.2131%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29,196,967 samples, 11.87%)</title><rect x="28.4482%" y="1173" width="11.8708%" height="15" fill="rgb(242,149,17)" fg:x="69969947" fg:w="29196967"/><text x="28.6982%" y="1183.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29,196,967 samples, 11.87%)</title><rect x="28.4482%" y="1157" width="11.8708%" height="15" fill="rgb(244,29,21)" fg:x="69969947" fg:w="29196967"/><text x="28.6982%" y="1167.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (29,196,967 samples, 11.87%)</title><rect x="28.4482%" y="1141" width="11.8708%" height="15" fill="rgb(220,130,37)" fg:x="69969947" fg:w="29196967"/><text x="28.6982%" y="1151.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29,196,967 samples, 11.87%)</title><rect x="28.4482%" y="1125" width="11.8708%" height="15" fill="rgb(211,67,2)" fg:x="69969947" fg:w="29196967"/><text x="28.6982%" y="1135.50">&lt;T as alloc::slice..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,914,473 samples, 1.18%)</title><rect x="39.1341%" y="1109" width="1.1850%" height="15" fill="rgb(235,68,52)" fg:x="96252441" fg:w="2914473"/><text x="39.3841%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,914,473 samples, 1.18%)</title><rect x="39.1341%" y="1093" width="1.1850%" height="15" fill="rgb(246,142,3)" fg:x="96252441" fg:w="2914473"/><text x="39.3841%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,914,473 samples, 1.18%)</title><rect x="39.1341%" y="1077" width="1.1850%" height="15" fill="rgb(241,25,7)" fg:x="96252441" fg:w="2914473"/><text x="39.3841%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,914,473 samples, 1.18%)</title><rect x="39.1341%" y="1061" width="1.1850%" height="15" fill="rgb(242,119,39)" fg:x="96252441" fg:w="2914473"/><text x="39.3841%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,914,473 samples, 1.18%)</title><rect x="39.1341%" y="1045" width="1.1850%" height="15" fill="rgb(241,98,45)" fg:x="96252441" fg:w="2914473"/><text x="39.3841%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,914,473 samples, 1.18%)</title><rect x="39.1341%" y="1029" width="1.1850%" height="15" fill="rgb(254,28,30)" fg:x="96252441" fg:w="2914473"/><text x="39.3841%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (2,914,473 samples, 1.18%)</title><rect x="39.1341%" y="1013" width="1.1850%" height="15" fill="rgb(241,142,54)" fg:x="96252441" fg:w="2914473"/><text x="39.3841%" y="1023.50"></text></g><g><title>malloc (2,914,473 samples, 1.18%)</title><rect x="39.1341%" y="997" width="1.1850%" height="15" fill="rgb(222,85,15)" fg:x="96252441" fg:w="2914473"/><text x="39.3841%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (34,781,525 samples, 14.14%)</title><rect x="27.3049%" y="1253" width="14.1414%" height="15" fill="rgb(210,85,47)" fg:x="67157922" fg:w="34781525"/><text x="27.5549%" y="1263.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34,781,525 samples, 14.14%)</title><rect x="27.3049%" y="1237" width="14.1414%" height="15" fill="rgb(224,206,25)" fg:x="67157922" fg:w="34781525"/><text x="27.5549%" y="1247.50">alloc::slice::&lt;impl [..</text></g><g><title>alloc::slice::hack::to_vec (34,781,525 samples, 14.14%)</title><rect x="27.3049%" y="1221" width="14.1414%" height="15" fill="rgb(243,201,19)" fg:x="67157922" fg:w="34781525"/><text x="27.5549%" y="1231.50">alloc::slice::hack::t..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34,781,525 samples, 14.14%)</title><rect x="27.3049%" y="1205" width="14.1414%" height="15" fill="rgb(236,59,4)" fg:x="67157922" fg:w="34781525"/><text x="27.5549%" y="1215.50">&lt;T as alloc::slice::h..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (34,781,525 samples, 14.14%)</title><rect x="27.3049%" y="1189" width="14.1414%" height="15" fill="rgb(254,179,45)" fg:x="67157922" fg:w="34781525"/><text x="27.5549%" y="1199.50">&lt;css_bitvector_compil..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,772,533 samples, 1.13%)</title><rect x="40.3191%" y="1173" width="1.1273%" height="15" fill="rgb(226,14,10)" fg:x="99166914" fg:w="2772533"/><text x="40.5691%" y="1183.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,772,533 samples, 1.13%)</title><rect x="40.3191%" y="1157" width="1.1273%" height="15" fill="rgb(244,27,41)" fg:x="99166914" fg:w="2772533"/><text x="40.5691%" y="1167.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,772,533 samples, 1.13%)</title><rect x="40.3191%" y="1141" width="1.1273%" height="15" fill="rgb(235,35,32)" fg:x="99166914" fg:w="2772533"/><text x="40.5691%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,772,533 samples, 1.13%)</title><rect x="40.3191%" y="1125" width="1.1273%" height="15" fill="rgb(218,68,31)" fg:x="99166914" fg:w="2772533"/><text x="40.5691%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,772,533 samples, 1.13%)</title><rect x="40.3191%" y="1109" width="1.1273%" height="15" fill="rgb(207,120,37)" fg:x="99166914" fg:w="2772533"/><text x="40.5691%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,772,533 samples, 1.13%)</title><rect x="40.3191%" y="1093" width="1.1273%" height="15" fill="rgb(227,98,0)" fg:x="99166914" fg:w="2772533"/><text x="40.5691%" y="1103.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,772,533 samples, 1.13%)</title><rect x="40.3191%" y="1077" width="1.1273%" height="15" fill="rgb(207,7,3)" fg:x="99166914" fg:w="2772533"/><text x="40.5691%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,772,533 samples, 1.13%)</title><rect x="40.3191%" y="1061" width="1.1273%" height="15" fill="rgb(206,98,19)" fg:x="99166914" fg:w="2772533"/><text x="40.5691%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,772,533 samples, 1.13%)</title><rect x="40.3191%" y="1045" width="1.1273%" height="15" fill="rgb(217,5,26)" fg:x="99166914" fg:w="2772533"/><text x="40.5691%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (2,772,533 samples, 1.13%)</title><rect x="40.3191%" y="1029" width="1.1273%" height="15" fill="rgb(235,190,38)" fg:x="99166914" fg:w="2772533"/><text x="40.5691%" y="1039.50"></text></g><g><title>malloc (2,772,533 samples, 1.13%)</title><rect x="40.3191%" y="1013" width="1.1273%" height="15" fill="rgb(247,86,24)" fg:x="99166914" fg:w="2772533"/><text x="40.5691%" y="1023.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,915,551 samples, 1.19%)</title><rect x="41.4463%" y="1253" width="1.1854%" height="15" fill="rgb(205,101,16)" fg:x="101939447" fg:w="2915551"/><text x="41.6963%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,915,551 samples, 1.19%)</title><rect x="41.4463%" y="1237" width="1.1854%" height="15" fill="rgb(246,168,33)" fg:x="101939447" fg:w="2915551"/><text x="41.6963%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,915,551 samples, 1.19%)</title><rect x="41.4463%" y="1221" width="1.1854%" height="15" fill="rgb(231,114,1)" fg:x="101939447" fg:w="2915551"/><text x="41.6963%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (2,915,551 samples, 1.19%)</title><rect x="41.4463%" y="1205" width="1.1854%" height="15" fill="rgb(207,184,53)" fg:x="101939447" fg:w="2915551"/><text x="41.6963%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,915,551 samples, 1.19%)</title><rect x="41.4463%" y="1189" width="1.1854%" height="15" fill="rgb(224,95,51)" fg:x="101939447" fg:w="2915551"/><text x="41.6963%" y="1199.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,915,551 samples, 1.19%)</title><rect x="41.4463%" y="1173" width="1.1854%" height="15" fill="rgb(212,188,45)" fg:x="101939447" fg:w="2915551"/><text x="41.6963%" y="1183.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,915,551 samples, 1.19%)</title><rect x="41.4463%" y="1157" width="1.1854%" height="15" fill="rgb(223,154,38)" fg:x="101939447" fg:w="2915551"/><text x="41.6963%" y="1167.50"></text></g><g><title>[libc.so.6] (2,915,551 samples, 1.19%)</title><rect x="41.4463%" y="1141" width="1.1854%" height="15" fill="rgb(251,22,52)" fg:x="101939447" fg:w="2915551"/><text x="41.6963%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (46,465,388 samples, 18.89%)</title><rect x="24.9289%" y="1333" width="18.8918%" height="15" fill="rgb(229,209,22)" fg:x="61313951" fg:w="46465388"/><text x="25.1789%" y="1343.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (46,465,388 samples, 18.89%)</title><rect x="24.9289%" y="1317" width="18.8918%" height="15" fill="rgb(234,138,34)" fg:x="61313951" fg:w="46465388"/><text x="25.1789%" y="1327.50">alloc::slice::&lt;impl [T]&gt;::to_v..</text></g><g><title>alloc::slice::hack::to_vec (46,465,388 samples, 18.89%)</title><rect x="24.9289%" y="1301" width="18.8918%" height="15" fill="rgb(212,95,11)" fg:x="61313951" fg:w="46465388"/><text x="25.1789%" y="1311.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (46,465,388 samples, 18.89%)</title><rect x="24.9289%" y="1285" width="18.8918%" height="15" fill="rgb(240,179,47)" fg:x="61313951" fg:w="46465388"/><text x="25.1789%" y="1295.50">&lt;T as alloc::slice::hack::Conv..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (46,465,388 samples, 18.89%)</title><rect x="24.9289%" y="1269" width="18.8918%" height="15" fill="rgb(240,163,11)" fg:x="61313951" fg:w="46465388"/><text x="25.1789%" y="1279.50">&lt;css_bitvector_compiler::HtmlN..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,924,341 samples, 1.19%)</title><rect x="42.6317%" y="1253" width="1.1890%" height="15" fill="rgb(236,37,12)" fg:x="104854998" fg:w="2924341"/><text x="42.8817%" y="1263.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,924,341 samples, 1.19%)</title><rect x="42.6317%" y="1237" width="1.1890%" height="15" fill="rgb(232,164,16)" fg:x="104854998" fg:w="2924341"/><text x="42.8817%" y="1247.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,924,341 samples, 1.19%)</title><rect x="42.6317%" y="1221" width="1.1890%" height="15" fill="rgb(244,205,15)" fg:x="104854998" fg:w="2924341"/><text x="42.8817%" y="1231.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,924,341 samples, 1.19%)</title><rect x="42.6317%" y="1205" width="1.1890%" height="15" fill="rgb(223,117,47)" fg:x="104854998" fg:w="2924341"/><text x="42.8817%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,924,341 samples, 1.19%)</title><rect x="42.6317%" y="1189" width="1.1890%" height="15" fill="rgb(244,107,35)" fg:x="104854998" fg:w="2924341"/><text x="42.8817%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,924,341 samples, 1.19%)</title><rect x="42.6317%" y="1173" width="1.1890%" height="15" fill="rgb(205,140,8)" fg:x="104854998" fg:w="2924341"/><text x="42.8817%" y="1183.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,924,341 samples, 1.19%)</title><rect x="42.6317%" y="1157" width="1.1890%" height="15" fill="rgb(228,84,46)" fg:x="104854998" fg:w="2924341"/><text x="42.8817%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,924,341 samples, 1.19%)</title><rect x="42.6317%" y="1141" width="1.1890%" height="15" fill="rgb(254,188,9)" fg:x="104854998" fg:w="2924341"/><text x="42.8817%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,924,341 samples, 1.19%)</title><rect x="42.6317%" y="1125" width="1.1890%" height="15" fill="rgb(206,112,54)" fg:x="104854998" fg:w="2924341"/><text x="42.8817%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (2,924,341 samples, 1.19%)</title><rect x="42.6317%" y="1109" width="1.1890%" height="15" fill="rgb(216,84,49)" fg:x="104854998" fg:w="2924341"/><text x="42.8817%" y="1119.50"></text></g><g><title>malloc (2,924,341 samples, 1.19%)</title><rect x="42.6317%" y="1093" width="1.1890%" height="15" fill="rgb(214,194,35)" fg:x="104854998" fg:w="2924341"/><text x="42.8817%" y="1103.50"></text></g><g><title>[libc.so.6] (2,924,341 samples, 1.19%)</title><rect x="42.6317%" y="1077" width="1.1890%" height="15" fill="rgb(249,28,3)" fg:x="104854998" fg:w="2924341"/><text x="42.8817%" y="1087.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,941,002 samples, 1.20%)</title><rect x="43.8207%" y="1333" width="1.1957%" height="15" fill="rgb(222,56,52)" fg:x="107779339" fg:w="2941002"/><text x="44.0707%" y="1343.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,941,002 samples, 1.20%)</title><rect x="43.8207%" y="1317" width="1.1957%" height="15" fill="rgb(245,217,50)" fg:x="107779339" fg:w="2941002"/><text x="44.0707%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,941,002 samples, 1.20%)</title><rect x="43.8207%" y="1301" width="1.1957%" height="15" fill="rgb(213,201,24)" fg:x="107779339" fg:w="2941002"/><text x="44.0707%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,941,002 samples, 1.20%)</title><rect x="43.8207%" y="1285" width="1.1957%" height="15" fill="rgb(248,116,28)" fg:x="107779339" fg:w="2941002"/><text x="44.0707%" y="1295.50"></text></g><g><title>alloc::slice::hack::to_vec (2,941,002 samples, 1.20%)</title><rect x="43.8207%" y="1269" width="1.1957%" height="15" fill="rgb(219,72,43)" fg:x="107779339" fg:w="2941002"/><text x="44.0707%" y="1279.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,941,002 samples, 1.20%)</title><rect x="43.8207%" y="1253" width="1.1957%" height="15" fill="rgb(209,138,14)" fg:x="107779339" fg:w="2941002"/><text x="44.0707%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,941,002 samples, 1.20%)</title><rect x="43.8207%" y="1237" width="1.1957%" height="15" fill="rgb(222,18,33)" fg:x="107779339" fg:w="2941002"/><text x="44.0707%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,941,002 samples, 1.20%)</title><rect x="43.8207%" y="1221" width="1.1957%" height="15" fill="rgb(213,199,7)" fg:x="107779339" fg:w="2941002"/><text x="44.0707%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,941,002 samples, 1.20%)</title><rect x="43.8207%" y="1205" width="1.1957%" height="15" fill="rgb(250,110,10)" fg:x="107779339" fg:w="2941002"/><text x="44.0707%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,941,002 samples, 1.20%)</title><rect x="43.8207%" y="1189" width="1.1957%" height="15" fill="rgb(248,123,6)" fg:x="107779339" fg:w="2941002"/><text x="44.0707%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,941,002 samples, 1.20%)</title><rect x="43.8207%" y="1173" width="1.1957%" height="15" fill="rgb(206,91,31)" fg:x="107779339" fg:w="2941002"/><text x="44.0707%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,941,002 samples, 1.20%)</title><rect x="43.8207%" y="1157" width="1.1957%" height="15" fill="rgb(211,154,13)" fg:x="107779339" fg:w="2941002"/><text x="44.0707%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (2,941,002 samples, 1.20%)</title><rect x="43.8207%" y="1141" width="1.1957%" height="15" fill="rgb(225,148,7)" fg:x="107779339" fg:w="2941002"/><text x="44.0707%" y="1151.50"></text></g><g><title>malloc (2,941,002 samples, 1.20%)</title><rect x="43.8207%" y="1125" width="1.1957%" height="15" fill="rgb(220,160,43)" fg:x="107779339" fg:w="2941002"/><text x="44.0707%" y="1135.50"></text></g><g><title>[libc.so.6] (2,941,002 samples, 1.20%)</title><rect x="43.8207%" y="1109" width="1.1957%" height="15" fill="rgb(213,52,39)" fg:x="107779339" fg:w="2941002"/><text x="44.0707%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,750,635 samples, 2.34%)</title><rect x="46.2036%" y="1253" width="2.3381%" height="15" fill="rgb(243,137,7)" fg:x="113640221" fg:w="5750635"/><text x="46.4536%" y="1263.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,750,635 samples, 2.34%)</title><rect x="46.2036%" y="1237" width="2.3381%" height="15" fill="rgb(230,79,13)" fg:x="113640221" fg:w="5750635"/><text x="46.4536%" y="1247.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,750,635 samples, 2.34%)</title><rect x="46.2036%" y="1221" width="2.3381%" height="15" fill="rgb(247,105,23)" fg:x="113640221" fg:w="5750635"/><text x="46.4536%" y="1231.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,750,635 samples, 2.34%)</title><rect x="46.2036%" y="1205" width="2.3381%" height="15" fill="rgb(223,179,41)" fg:x="113640221" fg:w="5750635"/><text x="46.4536%" y="1215.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,750,635 samples, 2.34%)</title><rect x="46.2036%" y="1189" width="2.3381%" height="15" fill="rgb(218,9,34)" fg:x="113640221" fg:w="5750635"/><text x="46.4536%" y="1199.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,750,635 samples, 2.34%)</title><rect x="46.2036%" y="1173" width="2.3381%" height="15" fill="rgb(222,106,8)" fg:x="113640221" fg:w="5750635"/><text x="46.4536%" y="1183.50">a..</text></g><g><title>alloc::alloc::alloc (5,750,635 samples, 2.34%)</title><rect x="46.2036%" y="1157" width="2.3381%" height="15" fill="rgb(211,220,0)" fg:x="113640221" fg:w="5750635"/><text x="46.4536%" y="1167.50">a..</text></g><g><title>malloc (5,750,635 samples, 2.34%)</title><rect x="46.2036%" y="1141" width="2.3381%" height="15" fill="rgb(229,52,16)" fg:x="113640221" fg:w="5750635"/><text x="46.4536%" y="1151.50">m..</text></g><g><title>[libc.so.6] (2,910,286 samples, 1.18%)</title><rect x="47.3584%" y="1125" width="1.1833%" height="15" fill="rgb(212,155,18)" fg:x="116480570" fg:w="2910286"/><text x="47.6084%" y="1135.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (75,396,843 samples, 30.65%)</title><rect x="18.9941%" y="1429" width="30.6547%" height="15" fill="rgb(242,21,14)" fg:x="46716907" fg:w="75396843"/><text x="19.2441%" y="1439.50">&lt;css_bitvector_compiler::HtmlNode as core::clone:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (72,472,586 samples, 29.47%)</title><rect x="20.1830%" y="1413" width="29.4657%" height="15" fill="rgb(222,19,48)" fg:x="49641164" fg:w="72472586"/><text x="20.4330%" y="1423.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::c..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (72,472,586 samples, 29.47%)</title><rect x="20.1830%" y="1397" width="29.4657%" height="15" fill="rgb(232,45,27)" fg:x="49641164" fg:w="72472586"/><text x="20.4330%" y="1407.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (72,472,586 samples, 29.47%)</title><rect x="20.1830%" y="1381" width="29.4657%" height="15" fill="rgb(249,103,42)" fg:x="49641164" fg:w="72472586"/><text x="20.4330%" y="1391.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (72,472,586 samples, 29.47%)</title><rect x="20.1830%" y="1365" width="29.4657%" height="15" fill="rgb(246,81,33)" fg:x="49641164" fg:w="72472586"/><text x="20.4330%" y="1375.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (72,472,586 samples, 29.47%)</title><rect x="20.1830%" y="1349" width="29.4657%" height="15" fill="rgb(252,33,42)" fg:x="49641164" fg:w="72472586"/><text x="20.4330%" y="1359.50">&lt;css_bitvector_compiler::HtmlNode as core::clon..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (11,393,409 samples, 4.63%)</title><rect x="45.0164%" y="1333" width="4.6323%" height="15" fill="rgb(209,212,41)" fg:x="110720341" fg:w="11393409"/><text x="45.2664%" y="1343.50">&lt;css_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,393,409 samples, 4.63%)</title><rect x="45.0164%" y="1317" width="4.6323%" height="15" fill="rgb(207,154,6)" fg:x="110720341" fg:w="11393409"/><text x="45.2664%" y="1327.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,473,529 samples, 3.45%)</title><rect x="46.2036%" y="1301" width="3.4451%" height="15" fill="rgb(223,64,47)" fg:x="113640221" fg:w="8473529"/><text x="46.4536%" y="1311.50">all..</text></g><g><title>alloc::slice::hack::to_vec (8,473,529 samples, 3.45%)</title><rect x="46.2036%" y="1285" width="3.4451%" height="15" fill="rgb(211,161,38)" fg:x="113640221" fg:w="8473529"/><text x="46.4536%" y="1295.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,473,529 samples, 3.45%)</title><rect x="46.2036%" y="1269" width="3.4451%" height="15" fill="rgb(219,138,40)" fg:x="113640221" fg:w="8473529"/><text x="46.4536%" y="1279.50">&lt;T ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,722,894 samples, 1.11%)</title><rect x="48.5417%" y="1253" width="1.1071%" height="15" fill="rgb(241,228,46)" fg:x="119390856" fg:w="2722894"/><text x="48.7917%" y="1263.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,722,894 samples, 1.11%)</title><rect x="48.5417%" y="1237" width="1.1071%" height="15" fill="rgb(223,209,38)" fg:x="119390856" fg:w="2722894"/><text x="48.7917%" y="1247.50"></text></g><g><title>[libc.so.6] (2,722,894 samples, 1.11%)</title><rect x="48.5417%" y="1221" width="1.1071%" height="15" fill="rgb(236,164,45)" fg:x="119390856" fg:w="2722894"/><text x="48.7917%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (81,225,810 samples, 33.02%)</title><rect x="18.9941%" y="1493" width="33.0246%" height="15" fill="rgb(231,15,5)" fg:x="46716907" fg:w="81225810"/><text x="19.2441%" y="1503.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (81,225,810 samples, 33.02%)</title><rect x="18.9941%" y="1477" width="33.0246%" height="15" fill="rgb(252,35,15)" fg:x="46716907" fg:w="81225810"/><text x="19.2441%" y="1487.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (81,225,810 samples, 33.02%)</title><rect x="18.9941%" y="1461" width="33.0246%" height="15" fill="rgb(248,181,18)" fg:x="46716907" fg:w="81225810"/><text x="19.2441%" y="1471.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (81,225,810 samples, 33.02%)</title><rect x="18.9941%" y="1445" width="33.0246%" height="15" fill="rgb(233,39,42)" fg:x="46716907" fg:w="81225810"/><text x="19.2441%" y="1455.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,828,967 samples, 2.37%)</title><rect x="49.6487%" y="1429" width="2.3699%" height="15" fill="rgb(238,110,33)" fg:x="122113750" fg:w="5828967"/><text x="49.8987%" y="1439.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,828,967 samples, 2.37%)</title><rect x="49.6487%" y="1413" width="2.3699%" height="15" fill="rgb(233,195,10)" fg:x="122113750" fg:w="5828967"/><text x="49.8987%" y="1423.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,828,967 samples, 2.37%)</title><rect x="49.6487%" y="1397" width="2.3699%" height="15" fill="rgb(254,105,3)" fg:x="122113750" fg:w="5828967"/><text x="49.8987%" y="1407.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,828,967 samples, 2.37%)</title><rect x="49.6487%" y="1381" width="2.3699%" height="15" fill="rgb(221,225,9)" fg:x="122113750" fg:w="5828967"/><text x="49.8987%" y="1391.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,828,967 samples, 2.37%)</title><rect x="49.6487%" y="1365" width="2.3699%" height="15" fill="rgb(224,227,45)" fg:x="122113750" fg:w="5828967"/><text x="49.8987%" y="1375.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,828,967 samples, 2.37%)</title><rect x="49.6487%" y="1349" width="2.3699%" height="15" fill="rgb(229,198,43)" fg:x="122113750" fg:w="5828967"/><text x="49.8987%" y="1359.50">al..</text></g><g><title>alloc::alloc::alloc (5,828,967 samples, 2.37%)</title><rect x="49.6487%" y="1333" width="2.3699%" height="15" fill="rgb(206,209,35)" fg:x="122113750" fg:w="5828967"/><text x="49.8987%" y="1343.50">al..</text></g><g><title>malloc (5,828,967 samples, 2.37%)</title><rect x="49.6487%" y="1317" width="2.3699%" height="15" fill="rgb(245,195,53)" fg:x="122113750" fg:w="5828967"/><text x="49.8987%" y="1327.50">ma..</text></g><g><title>[libc.so.6] (2,933,439 samples, 1.19%)</title><rect x="50.8260%" y="1301" width="1.1927%" height="15" fill="rgb(240,92,26)" fg:x="125009278" fg:w="2933439"/><text x="51.0760%" y="1311.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (84,069,323 samples, 34.18%)</title><rect x="18.9941%" y="1509" width="34.1807%" height="15" fill="rgb(207,40,23)" fg:x="46716907" fg:w="84069323"/><text x="19.2441%" y="1519.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,843,513 samples, 1.16%)</title><rect x="52.0187%" y="1493" width="1.1561%" height="15" fill="rgb(223,111,35)" fg:x="127942717" fg:w="2843513"/><text x="52.2687%" y="1503.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,843,513 samples, 1.16%)</title><rect x="52.0187%" y="1477" width="1.1561%" height="15" fill="rgb(229,147,28)" fg:x="127942717" fg:w="2843513"/><text x="52.2687%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,843,513 samples, 1.16%)</title><rect x="52.0187%" y="1461" width="1.1561%" height="15" fill="rgb(211,29,28)" fg:x="127942717" fg:w="2843513"/><text x="52.2687%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,843,513 samples, 1.16%)</title><rect x="52.0187%" y="1445" width="1.1561%" height="15" fill="rgb(228,72,33)" fg:x="127942717" fg:w="2843513"/><text x="52.2687%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (2,843,513 samples, 1.16%)</title><rect x="52.0187%" y="1429" width="1.1561%" height="15" fill="rgb(205,214,31)" fg:x="127942717" fg:w="2843513"/><text x="52.2687%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,843,513 samples, 1.16%)</title><rect x="52.0187%" y="1413" width="1.1561%" height="15" fill="rgb(224,111,15)" fg:x="127942717" fg:w="2843513"/><text x="52.2687%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,843,513 samples, 1.16%)</title><rect x="52.0187%" y="1397" width="1.1561%" height="15" fill="rgb(253,21,26)" fg:x="127942717" fg:w="2843513"/><text x="52.2687%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,843,513 samples, 1.16%)</title><rect x="52.0187%" y="1381" width="1.1561%" height="15" fill="rgb(245,139,43)" fg:x="127942717" fg:w="2843513"/><text x="52.2687%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,843,513 samples, 1.16%)</title><rect x="52.0187%" y="1365" width="1.1561%" height="15" fill="rgb(252,170,7)" fg:x="127942717" fg:w="2843513"/><text x="52.2687%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,843,513 samples, 1.16%)</title><rect x="52.0187%" y="1349" width="1.1561%" height="15" fill="rgb(231,118,14)" fg:x="127942717" fg:w="2843513"/><text x="52.2687%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,843,513 samples, 1.16%)</title><rect x="52.0187%" y="1333" width="1.1561%" height="15" fill="rgb(238,83,0)" fg:x="127942717" fg:w="2843513"/><text x="52.2687%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,843,513 samples, 1.16%)</title><rect x="52.0187%" y="1317" width="1.1561%" height="15" fill="rgb(221,39,39)" fg:x="127942717" fg:w="2843513"/><text x="52.2687%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (2,843,513 samples, 1.16%)</title><rect x="52.0187%" y="1301" width="1.1561%" height="15" fill="rgb(222,119,46)" fg:x="127942717" fg:w="2843513"/><text x="52.2687%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (86,997,278 samples, 35.37%)</title><rect x="18.9941%" y="1573" width="35.3712%" height="15" fill="rgb(222,165,49)" fg:x="46716907" fg:w="86997278"/><text x="19.2441%" y="1583.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (86,997,278 samples, 35.37%)</title><rect x="18.9941%" y="1557" width="35.3712%" height="15" fill="rgb(219,113,52)" fg:x="46716907" fg:w="86997278"/><text x="19.2441%" y="1567.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (86,997,278 samples, 35.37%)</title><rect x="18.9941%" y="1541" width="35.3712%" height="15" fill="rgb(214,7,15)" fg:x="46716907" fg:w="86997278"/><text x="19.2441%" y="1551.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (86,997,278 samples, 35.37%)</title><rect x="18.9941%" y="1525" width="35.3712%" height="15" fill="rgb(235,32,4)" fg:x="46716907" fg:w="86997278"/><text x="19.2441%" y="1535.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,927,955 samples, 1.19%)</title><rect x="53.1748%" y="1509" width="1.1904%" height="15" fill="rgb(238,90,54)" fg:x="130786230" fg:w="2927955"/><text x="53.4248%" y="1519.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (95,452,531 samples, 38.81%)</title><rect x="17.8311%" y="1589" width="38.8089%" height="15" fill="rgb(213,208,19)" fg:x="43856453" fg:w="95452531"/><text x="18.0811%" y="1599.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5,594,799 samples, 2.27%)</title><rect x="54.3652%" y="1573" width="2.2747%" height="15" fill="rgb(233,156,4)" fg:x="133714185" fg:w="5594799"/><text x="54.6152%" y="1583.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,594,799 samples, 2.27%)</title><rect x="54.3652%" y="1557" width="2.2747%" height="15" fill="rgb(207,194,5)" fg:x="133714185" fg:w="5594799"/><text x="54.6152%" y="1567.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,594,799 samples, 2.27%)</title><rect x="54.3652%" y="1541" width="2.2747%" height="15" fill="rgb(206,111,30)" fg:x="133714185" fg:w="5594799"/><text x="54.6152%" y="1551.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,594,799 samples, 2.27%)</title><rect x="54.3652%" y="1525" width="2.2747%" height="15" fill="rgb(243,70,54)" fg:x="133714185" fg:w="5594799"/><text x="54.6152%" y="1535.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,594,799 samples, 2.27%)</title><rect x="54.3652%" y="1509" width="2.2747%" height="15" fill="rgb(242,28,8)" fg:x="133714185" fg:w="5594799"/><text x="54.6152%" y="1519.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,594,799 samples, 2.27%)</title><rect x="54.3652%" y="1493" width="2.2747%" height="15" fill="rgb(219,106,18)" fg:x="133714185" fg:w="5594799"/><text x="54.6152%" y="1503.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,594,799 samples, 2.27%)</title><rect x="54.3652%" y="1477" width="2.2747%" height="15" fill="rgb(244,222,10)" fg:x="133714185" fg:w="5594799"/><text x="54.6152%" y="1487.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,594,799 samples, 2.27%)</title><rect x="54.3652%" y="1461" width="2.2747%" height="15" fill="rgb(236,179,52)" fg:x="133714185" fg:w="5594799"/><text x="54.6152%" y="1471.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,594,799 samples, 2.27%)</title><rect x="54.3652%" y="1445" width="2.2747%" height="15" fill="rgb(213,23,39)" fg:x="133714185" fg:w="5594799"/><text x="54.6152%" y="1455.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,594,799 samples, 2.27%)</title><rect x="54.3652%" y="1429" width="2.2747%" height="15" fill="rgb(238,48,10)" fg:x="133714185" fg:w="5594799"/><text x="54.6152%" y="1439.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,594,799 samples, 2.27%)</title><rect x="54.3652%" y="1413" width="2.2747%" height="15" fill="rgb(251,196,23)" fg:x="133714185" fg:w="5594799"/><text x="54.6152%" y="1423.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,594,799 samples, 2.27%)</title><rect x="54.3652%" y="1397" width="2.2747%" height="15" fill="rgb(250,152,24)" fg:x="133714185" fg:w="5594799"/><text x="54.6152%" y="1407.50">a..</text></g><g><title>alloc::alloc::alloc (5,594,799 samples, 2.27%)</title><rect x="54.3652%" y="1381" width="2.2747%" height="15" fill="rgb(209,150,17)" fg:x="133714185" fg:w="5594799"/><text x="54.6152%" y="1391.50">a..</text></g><g><title>malloc (5,594,799 samples, 2.27%)</title><rect x="54.3652%" y="1365" width="2.2747%" height="15" fill="rgb(234,202,34)" fg:x="133714185" fg:w="5594799"/><text x="54.6152%" y="1375.50">m..</text></g><g><title>[libc.so.6] (5,594,799 samples, 2.27%)</title><rect x="54.3652%" y="1349" width="2.2747%" height="15" fill="rgb(253,148,53)" fg:x="133714185" fg:w="5594799"/><text x="54.6152%" y="1359.50">[..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (97,583,483 samples, 39.68%)</title><rect x="17.8311%" y="1829" width="39.6753%" height="15" fill="rgb(218,129,16)" fg:x="43856453" fg:w="97583483"/><text x="18.0811%" y="1839.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (97,583,483 samples, 39.68%)</title><rect x="17.8311%" y="1813" width="39.6753%" height="15" fill="rgb(216,85,19)" fg:x="43856453" fg:w="97583483"/><text x="18.0811%" y="1823.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (97,583,483 samples, 39.68%)</title><rect x="17.8311%" y="1797" width="39.6753%" height="15" fill="rgb(235,228,7)" fg:x="43856453" fg:w="97583483"/><text x="18.0811%" y="1807.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (97,583,483 samples, 39.68%)</title><rect x="17.8311%" y="1781" width="39.6753%" height="15" fill="rgb(245,175,0)" fg:x="43856453" fg:w="97583483"/><text x="18.0811%" y="1791.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (97,583,483 samples, 39.68%)</title><rect x="17.8311%" y="1765" width="39.6753%" height="15" fill="rgb(208,168,36)" fg:x="43856453" fg:w="97583483"/><text x="18.0811%" y="1775.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (97,583,483 samples, 39.68%)</title><rect x="17.8311%" y="1749" width="39.6753%" height="15" fill="rgb(246,171,24)" fg:x="43856453" fg:w="97583483"/><text x="18.0811%" y="1759.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (97,583,483 samples, 39.68%)</title><rect x="17.8311%" y="1733" width="39.6753%" height="15" fill="rgb(215,142,24)" fg:x="43856453" fg:w="97583483"/><text x="18.0811%" y="1743.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (97,583,483 samples, 39.68%)</title><rect x="17.8311%" y="1717" width="39.6753%" height="15" fill="rgb(250,187,7)" fg:x="43856453" fg:w="97583483"/><text x="18.0811%" y="1727.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (97,583,483 samples, 39.68%)</title><rect x="17.8311%" y="1701" width="39.6753%" height="15" fill="rgb(228,66,33)" fg:x="43856453" fg:w="97583483"/><text x="18.0811%" y="1711.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (97,583,483 samples, 39.68%)</title><rect x="17.8311%" y="1685" width="39.6753%" height="15" fill="rgb(234,215,21)" fg:x="43856453" fg:w="97583483"/><text x="18.0811%" y="1695.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (97,583,483 samples, 39.68%)</title><rect x="17.8311%" y="1669" width="39.6753%" height="15" fill="rgb(222,191,20)" fg:x="43856453" fg:w="97583483"/><text x="18.0811%" y="1679.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (97,583,483 samples, 39.68%)</title><rect x="17.8311%" y="1653" width="39.6753%" height="15" fill="rgb(245,79,54)" fg:x="43856453" fg:w="97583483"/><text x="18.0811%" y="1663.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (97,583,483 samples, 39.68%)</title><rect x="17.8311%" y="1637" width="39.6753%" height="15" fill="rgb(240,10,37)" fg:x="43856453" fg:w="97583483"/><text x="18.0811%" y="1647.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (97,583,483 samples, 39.68%)</title><rect x="17.8311%" y="1621" width="39.6753%" height="15" fill="rgb(214,192,32)" fg:x="43856453" fg:w="97583483"/><text x="18.0811%" y="1631.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (97,583,483 samples, 39.68%)</title><rect x="17.8311%" y="1605" width="39.6753%" height="15" fill="rgb(209,36,54)" fg:x="43856453" fg:w="97583483"/><text x="18.0811%" y="1615.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,130,952 samples, 0.87%)</title><rect x="56.6399%" y="1589" width="0.8664%" height="15" fill="rgb(220,10,11)" fg:x="139308984" fg:w="2130952"/><text x="56.8899%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,130,952 samples, 0.87%)</title><rect x="56.6399%" y="1573" width="0.8664%" height="15" fill="rgb(221,106,17)" fg:x="139308984" fg:w="2130952"/><text x="56.8899%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,130,952 samples, 0.87%)</title><rect x="56.6399%" y="1557" width="0.8664%" height="15" fill="rgb(251,142,44)" fg:x="139308984" fg:w="2130952"/><text x="56.8899%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,130,952 samples, 0.87%)</title><rect x="56.6399%" y="1541" width="0.8664%" height="15" fill="rgb(238,13,15)" fg:x="139308984" fg:w="2130952"/><text x="56.8899%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,130,952 samples, 0.87%)</title><rect x="56.6399%" y="1525" width="0.8664%" height="15" fill="rgb(208,107,27)" fg:x="139308984" fg:w="2130952"/><text x="56.8899%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,130,952 samples, 0.87%)</title><rect x="56.6399%" y="1509" width="0.8664%" height="15" fill="rgb(205,136,37)" fg:x="139308984" fg:w="2130952"/><text x="56.8899%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (2,130,952 samples, 0.87%)</title><rect x="56.6399%" y="1493" width="0.8664%" height="15" fill="rgb(250,205,27)" fg:x="139308984" fg:w="2130952"/><text x="56.8899%" y="1503.50"></text></g><g><title>malloc (2,130,952 samples, 0.87%)</title><rect x="56.6399%" y="1477" width="0.8664%" height="15" fill="rgb(210,80,43)" fg:x="139308984" fg:w="2130952"/><text x="56.8899%" y="1487.50"></text></g><g><title>[libc.so.6] (2,130,952 samples, 0.87%)</title><rect x="56.6399%" y="1461" width="0.8664%" height="15" fill="rgb(247,160,36)" fg:x="139308984" fg:w="2130952"/><text x="56.8899%" y="1471.50"></text></g><g><title>[libc.so.6] (2,130,952 samples, 0.87%)</title><rect x="56.6399%" y="1445" width="0.8664%" height="15" fill="rgb(234,13,49)" fg:x="139308984" fg:w="2130952"/><text x="56.8899%" y="1455.50"></text></g><g><title>benchmark::apply_frame_modifications (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1829" width="1.1838%" height="15" fill="rgb(234,122,0)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1839.50"></text></g><g><title>benchmark::json_to_html_node (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1813" width="1.1838%" height="15" fill="rgb(207,146,38)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1823.50"></text></g><g><title>benchmark::json_to_html_node (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1797" width="1.1838%" height="15" fill="rgb(207,177,25)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1807.50"></text></g><g><title>benchmark::json_to_html_node (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1781" width="1.1838%" height="15" fill="rgb(211,178,42)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1791.50"></text></g><g><title>benchmark::json_to_html_node (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1765" width="1.1838%" height="15" fill="rgb(230,69,54)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1775.50"></text></g><g><title>benchmark::json_to_html_node (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1749" width="1.1838%" height="15" fill="rgb(214,135,41)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1759.50"></text></g><g><title>benchmark::json_to_html_node (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1733" width="1.1838%" height="15" fill="rgb(237,67,25)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1717" width="1.1838%" height="15" fill="rgb(222,189,50)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1727.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1701" width="1.1838%" height="15" fill="rgb(245,148,34)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1711.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1685" width="1.1838%" height="15" fill="rgb(222,29,6)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1695.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1669" width="1.1838%" height="15" fill="rgb(221,189,43)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1679.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1653" width="1.1838%" height="15" fill="rgb(207,36,27)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1637" width="1.1838%" height="15" fill="rgb(217,90,24)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1621" width="1.1838%" height="15" fill="rgb(224,66,35)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1605" width="1.1838%" height="15" fill="rgb(221,13,50)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1589" width="1.1838%" height="15" fill="rgb(236,68,49)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1573" width="1.1838%" height="15" fill="rgb(229,146,28)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1583.50"></text></g><g><title>benchmark::json_to_html_node::_{{closure}} (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1557" width="1.1838%" height="15" fill="rgb(225,31,38)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1567.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1541" width="1.1838%" height="15" fill="rgb(250,208,3)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1551.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1525" width="1.1838%" height="15" fill="rgb(246,54,23)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1535.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1509" width="1.1838%" height="15" fill="rgb(243,76,11)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1519.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1493" width="1.1838%" height="15" fill="rgb(245,21,50)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1477" width="1.1838%" height="15" fill="rgb(228,9,43)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1461" width="1.1838%" height="15" fill="rgb(208,100,47)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1445" width="1.1838%" height="15" fill="rgb(232,26,8)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1429" width="1.1838%" height="15" fill="rgb(216,166,38)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1413" width="1.1838%" height="15" fill="rgb(251,202,51)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1397" width="1.1838%" height="15" fill="rgb(254,216,34)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1381" width="1.1838%" height="15" fill="rgb(251,32,27)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1365" width="1.1838%" height="15" fill="rgb(208,127,28)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1349" width="1.1838%" height="15" fill="rgb(224,137,22)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1333" width="1.1838%" height="15" fill="rgb(254,70,32)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1317" width="1.1838%" height="15" fill="rgb(229,75,37)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1301" width="1.1838%" height="15" fill="rgb(252,64,23)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1311.50"></text></g><g><title>malloc (2,911,580 samples, 1.18%)</title><rect x="57.5063%" y="1285" width="1.1838%" height="15" fill="rgb(232,162,48)" fg:x="141439936" fg:w="2911580"/><text x="57.7563%" y="1295.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,919,186 samples, 1.19%)</title><rect x="58.6901%" y="1701" width="1.1869%" height="15" fill="rgb(246,160,12)" fg:x="144351516" fg:w="2919186"/><text x="58.9401%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,919,186 samples, 1.19%)</title><rect x="58.6901%" y="1685" width="1.1869%" height="15" fill="rgb(247,166,0)" fg:x="144351516" fg:w="2919186"/><text x="58.9401%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,919,186 samples, 1.19%)</title><rect x="58.6901%" y="1669" width="1.1869%" height="15" fill="rgb(249,219,21)" fg:x="144351516" fg:w="2919186"/><text x="58.9401%" y="1679.50"></text></g><g><title>benchmark::clear_dirty_flags (5,819,863 samples, 2.37%)</title><rect x="58.6901%" y="1829" width="2.3662%" height="15" fill="rgb(205,209,3)" fg:x="144351516" fg:w="5819863"/><text x="58.9401%" y="1839.50">be..</text></g><g><title>benchmark::clear_dirty_flags (5,819,863 samples, 2.37%)</title><rect x="58.6901%" y="1813" width="2.3662%" height="15" fill="rgb(243,44,1)" fg:x="144351516" fg:w="5819863"/><text x="58.9401%" y="1823.50">be..</text></g><g><title>benchmark::clear_dirty_flags (5,819,863 samples, 2.37%)</title><rect x="58.6901%" y="1797" width="2.3662%" height="15" fill="rgb(206,159,16)" fg:x="144351516" fg:w="5819863"/><text x="58.9401%" y="1807.50">be..</text></g><g><title>benchmark::clear_dirty_flags (5,819,863 samples, 2.37%)</title><rect x="58.6901%" y="1781" width="2.3662%" height="15" fill="rgb(244,77,30)" fg:x="144351516" fg:w="5819863"/><text x="58.9401%" y="1791.50">be..</text></g><g><title>benchmark::clear_dirty_flags (5,819,863 samples, 2.37%)</title><rect x="58.6901%" y="1765" width="2.3662%" height="15" fill="rgb(218,69,12)" fg:x="144351516" fg:w="5819863"/><text x="58.9401%" y="1775.50">be..</text></g><g><title>benchmark::clear_dirty_flags (5,819,863 samples, 2.37%)</title><rect x="58.6901%" y="1749" width="2.3662%" height="15" fill="rgb(212,87,7)" fg:x="144351516" fg:w="5819863"/><text x="58.9401%" y="1759.50">be..</text></g><g><title>benchmark::clear_dirty_flags (5,819,863 samples, 2.37%)</title><rect x="58.6901%" y="1733" width="2.3662%" height="15" fill="rgb(245,114,25)" fg:x="144351516" fg:w="5819863"/><text x="58.9401%" y="1743.50">be..</text></g><g><title>benchmark::clear_dirty_flags (5,819,863 samples, 2.37%)</title><rect x="58.6901%" y="1717" width="2.3662%" height="15" fill="rgb(210,61,42)" fg:x="144351516" fg:w="5819863"/><text x="58.9401%" y="1727.50">be..</text></g><g><title>benchmark::clear_dirty_flags (2,900,677 samples, 1.18%)</title><rect x="59.8770%" y="1701" width="1.1794%" height="15" fill="rgb(211,52,33)" fg:x="147270702" fg:w="2900677"/><text x="60.1270%" y="1711.50"></text></g><g><title>benchmark::clear_dirty_flags (2,900,677 samples, 1.18%)</title><rect x="59.8770%" y="1685" width="1.1794%" height="15" fill="rgb(234,58,33)" fg:x="147270702" fg:w="2900677"/><text x="60.1270%" y="1695.50"></text></g><g><title>benchmark::clear_dirty_flags (2,900,677 samples, 1.18%)</title><rect x="59.8770%" y="1669" width="1.1794%" height="15" fill="rgb(220,115,36)" fg:x="147270702" fg:w="2900677"/><text x="60.1270%" y="1679.50"></text></g><g><title>benchmark::clear_dirty_flags (2,900,677 samples, 1.18%)</title><rect x="59.8770%" y="1653" width="1.1794%" height="15" fill="rgb(243,153,54)" fg:x="147270702" fg:w="2900677"/><text x="60.1270%" y="1663.50"></text></g><g><title>benchmark::clear_dirty_flags (2,900,677 samples, 1.18%)</title><rect x="59.8770%" y="1637" width="1.1794%" height="15" fill="rgb(251,47,18)" fg:x="147270702" fg:w="2900677"/><text x="60.1270%" y="1647.50"></text></g><g><title>benchmark::clear_dirty_flags (2,900,677 samples, 1.18%)</title><rect x="59.8770%" y="1621" width="1.1794%" height="15" fill="rgb(242,102,42)" fg:x="147270702" fg:w="2900677"/><text x="60.1270%" y="1631.50"></text></g><g><title>benchmark::clear_dirty_flags (2,900,677 samples, 1.18%)</title><rect x="59.8770%" y="1605" width="1.1794%" height="15" fill="rgb(234,31,38)" fg:x="147270702" fg:w="2900677"/><text x="60.1270%" y="1615.50"></text></g><g><title>benchmark::clear_dirty_flags (2,900,677 samples, 1.18%)</title><rect x="59.8770%" y="1589" width="1.1794%" height="15" fill="rgb(221,117,51)" fg:x="147270702" fg:w="2900677"/><text x="60.1270%" y="1599.50"></text></g><g><title>benchmark::clear_dirty_flags (2,900,677 samples, 1.18%)</title><rect x="59.8770%" y="1573" width="1.1794%" height="15" fill="rgb(212,20,18)" fg:x="147270702" fg:w="2900677"/><text x="60.1270%" y="1583.50"></text></g><g><title>benchmark::clear_dirty_flags (2,900,677 samples, 1.18%)</title><rect x="59.8770%" y="1557" width="1.1794%" height="15" fill="rgb(245,133,36)" fg:x="147270702" fg:w="2900677"/><text x="60.1270%" y="1567.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1829" width="1.1615%" height="15" fill="rgb(212,6,19)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1813" width="1.1615%" height="15" fill="rgb(218,1,36)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1823.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1797" width="1.1615%" height="15" fill="rgb(246,84,54)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1781" width="1.1615%" height="15" fill="rgb(242,110,6)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1791.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1765" width="1.1615%" height="15" fill="rgb(214,47,5)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1775.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1749" width="1.1615%" height="15" fill="rgb(218,159,25)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1759.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1733" width="1.1615%" height="15" fill="rgb(215,211,28)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1743.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1717" width="1.1615%" height="15" fill="rgb(238,59,32)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1701" width="1.1615%" height="15" fill="rgb(226,82,3)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1711.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1685" width="1.1615%" height="15" fill="rgb(240,164,32)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1669" width="1.1615%" height="15" fill="rgb(232,46,7)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1679.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1653" width="1.1615%" height="15" fill="rgb(229,129,53)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1663.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1637" width="1.1615%" height="15" fill="rgb(234,188,29)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1647.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1621" width="1.1615%" height="15" fill="rgb(246,141,4)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1631.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1605" width="1.1615%" height="15" fill="rgb(229,23,39)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1589" width="1.1615%" height="15" fill="rgb(206,12,3)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1599.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1573" width="1.1615%" height="15" fill="rgb(252,226,20)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1557" width="1.1615%" height="15" fill="rgb(216,123,35)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1567.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1541" width="1.1615%" height="15" fill="rgb(212,68,40)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1551.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1525" width="1.1615%" height="15" fill="rgb(254,125,32)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1535.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1509" width="1.1615%" height="15" fill="rgb(253,97,22)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1519.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1493" width="1.1615%" height="15" fill="rgb(241,101,14)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1477" width="1.1615%" height="15" fill="rgb(238,103,29)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1487.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1461" width="1.1615%" height="15" fill="rgb(233,195,47)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1445" width="1.1615%" height="15" fill="rgb(246,218,30)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1455.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1429" width="1.1615%" height="15" fill="rgb(219,145,47)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1439.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1413" width="1.1615%" height="15" fill="rgb(243,12,26)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1423.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1397" width="1.1615%" height="15" fill="rgb(214,87,16)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1407.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1381" width="1.1615%" height="15" fill="rgb(208,99,42)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1365" width="1.1615%" height="15" fill="rgb(253,99,2)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1375.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1349" width="1.1615%" height="15" fill="rgb(220,168,23)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1333" width="1.1615%" height="15" fill="rgb(242,38,24)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1317" width="1.1615%" height="15" fill="rgb(225,182,9)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1327.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1301" width="1.1615%" height="15" fill="rgb(243,178,37)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1311.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1285" width="1.1615%" height="15" fill="rgb(232,139,19)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1295.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1269" width="1.1615%" height="15" fill="rgb(225,201,24)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1253" width="1.1615%" height="15" fill="rgb(221,47,46)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1263.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1237" width="1.1615%" height="15" fill="rgb(249,23,13)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1221" width="1.1615%" height="15" fill="rgb(219,9,5)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1231.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1205" width="1.1615%" height="15" fill="rgb(254,171,16)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1215.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1189" width="1.1615%" height="15" fill="rgb(230,171,20)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1199.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1173" width="1.1615%" height="15" fill="rgb(210,71,41)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1183.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1157" width="1.1615%" height="15" fill="rgb(206,173,20)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1141" width="1.1615%" height="15" fill="rgb(233,88,34)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1151.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1125" width="1.1615%" height="15" fill="rgb(223,209,46)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1109" width="1.1615%" height="15" fill="rgb(250,43,18)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1093" width="1.1615%" height="15" fill="rgb(208,13,10)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1103.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1077" width="1.1615%" height="15" fill="rgb(212,200,36)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1087.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1061" width="1.1615%" height="15" fill="rgb(225,90,30)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1071.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1045" width="1.1615%" height="15" fill="rgb(236,182,39)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1029" width="1.1615%" height="15" fill="rgb(212,144,35)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1039.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="1013" width="1.1615%" height="15" fill="rgb(228,63,44)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="997" width="1.1615%" height="15" fill="rgb(228,109,6)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="981" width="1.1615%" height="15" fill="rgb(238,117,24)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="965" width="1.1615%" height="15" fill="rgb(242,26,26)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="975.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="949" width="1.1615%" height="15" fill="rgb(221,92,48)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="959.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="933" width="1.1615%" height="15" fill="rgb(209,209,32)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="917" width="1.1615%" height="15" fill="rgb(221,70,22)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="927.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="901" width="1.1615%" height="15" fill="rgb(248,145,5)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="885" width="1.1615%" height="15" fill="rgb(226,116,26)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="869" width="1.1615%" height="15" fill="rgb(244,5,17)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="853" width="1.1615%" height="15" fill="rgb(252,159,33)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="863.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="837" width="1.1615%" height="15" fill="rgb(206,71,0)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="847.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="821" width="1.1615%" height="15" fill="rgb(233,118,54)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="805" width="1.1615%" height="15" fill="rgb(234,83,48)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="815.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="789" width="1.1615%" height="15" fill="rgb(228,3,54)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="773" width="1.1615%" height="15" fill="rgb(226,155,13)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="757" width="1.1615%" height="15" fill="rgb(241,28,37)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="741" width="1.1615%" height="15" fill="rgb(233,93,10)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="751.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="725" width="1.1615%" height="15" fill="rgb(225,113,19)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="735.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="709" width="1.1615%" height="15" fill="rgb(241,2,18)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="693" width="1.1615%" height="15" fill="rgb(228,207,21)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="703.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="677" width="1.1615%" height="15" fill="rgb(213,211,35)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="661" width="1.1615%" height="15" fill="rgb(209,83,10)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="645" width="1.1615%" height="15" fill="rgb(209,164,1)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="629" width="1.1615%" height="15" fill="rgb(213,184,43)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="639.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="613" width="1.1615%" height="15" fill="rgb(231,61,34)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="623.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="597" width="1.1615%" height="15" fill="rgb(235,75,3)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="581" width="1.1615%" height="15" fill="rgb(220,106,47)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="591.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="565" width="1.1615%" height="15" fill="rgb(210,196,33)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="549" width="1.1615%" height="15" fill="rgb(229,154,42)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="533" width="1.1615%" height="15" fill="rgb(228,114,26)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="517" width="1.1615%" height="15" fill="rgb(208,144,1)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="501" width="1.1615%" height="15" fill="rgb(239,112,37)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="511.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="485" width="1.1615%" height="15" fill="rgb(210,96,50)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="469" width="1.1615%" height="15" fill="rgb(222,178,2)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="479.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="453" width="1.1615%" height="15" fill="rgb(226,74,18)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="437" width="1.1615%" height="15" fill="rgb(225,67,54)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="421" width="1.1615%" height="15" fill="rgb(251,92,32)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="405" width="1.1615%" height="15" fill="rgb(228,149,22)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="415.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="389" width="1.1615%" height="15" fill="rgb(243,54,13)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="399.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="373" width="1.1615%" height="15" fill="rgb(243,180,28)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="357" width="1.1615%" height="15" fill="rgb(208,167,24)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="367.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="341" width="1.1615%" height="15" fill="rgb(245,73,45)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="325" width="1.1615%" height="15" fill="rgb(237,203,48)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="309" width="1.1615%" height="15" fill="rgb(211,197,16)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="293" width="1.1615%" height="15" fill="rgb(243,99,51)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="303.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="277" width="1.1615%" height="15" fill="rgb(215,123,29)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="287.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="261" width="1.1615%" height="15" fill="rgb(239,186,37)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="245" width="1.1615%" height="15" fill="rgb(252,136,39)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="255.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="229" width="1.1615%" height="15" fill="rgb(223,213,32)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="213" width="1.1615%" height="15" fill="rgb(233,115,5)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="197" width="1.1615%" height="15" fill="rgb(207,226,44)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="207.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="181" width="1.1615%" height="15" fill="rgb(208,126,0)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="191.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="165" width="1.1615%" height="15" fill="rgb(244,66,21)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="175.50"></text></g><g><title>benchmark::count_nodes (2,856,846 samples, 1.16%)</title><rect x="61.0563%" y="149" width="1.1615%" height="15" fill="rgb(222,97,12)" fg:x="150171379" fg:w="2856846"/><text x="61.3063%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,928,875 samples, 1.19%)</title><rect x="62.2179%" y="917" width="1.1908%" height="15" fill="rgb(219,213,19)" fg:x="153028225" fg:w="2928875"/><text x="62.4679%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,928,875 samples, 1.19%)</title><rect x="62.2179%" y="901" width="1.1908%" height="15" fill="rgb(252,169,30)" fg:x="153028225" fg:w="2928875"/><text x="62.4679%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,928,875 samples, 1.19%)</title><rect x="62.2179%" y="885" width="1.1908%" height="15" fill="rgb(206,32,51)" fg:x="153028225" fg:w="2928875"/><text x="62.4679%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,928,875 samples, 1.19%)</title><rect x="62.2179%" y="869" width="1.1908%" height="15" fill="rgb(250,172,42)" fg:x="153028225" fg:w="2928875"/><text x="62.4679%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,928,875 samples, 1.19%)</title><rect x="62.2179%" y="853" width="1.1908%" height="15" fill="rgb(209,34,43)" fg:x="153028225" fg:w="2928875"/><text x="62.4679%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,928,875 samples, 1.19%)</title><rect x="62.2179%" y="837" width="1.1908%" height="15" fill="rgb(223,11,35)" fg:x="153028225" fg:w="2928875"/><text x="62.4679%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (2,928,875 samples, 1.19%)</title><rect x="62.2179%" y="821" width="1.1908%" height="15" fill="rgb(251,219,26)" fg:x="153028225" fg:w="2928875"/><text x="62.4679%" y="831.50"></text></g><g><title>cfree (2,928,875 samples, 1.19%)</title><rect x="62.2179%" y="805" width="1.1908%" height="15" fill="rgb(231,119,3)" fg:x="153028225" fg:w="2928875"/><text x="62.4679%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,806,860 samples, 2.36%)</title><rect x="62.2179%" y="1045" width="2.3609%" height="15" fill="rgb(216,97,11)" fg:x="153028225" fg:w="5806860"/><text x="62.4679%" y="1055.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,806,860 samples, 2.36%)</title><rect x="62.2179%" y="1029" width="2.3609%" height="15" fill="rgb(223,59,9)" fg:x="153028225" fg:w="5806860"/><text x="62.4679%" y="1039.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,806,860 samples, 2.36%)</title><rect x="62.2179%" y="1013" width="2.3609%" height="15" fill="rgb(233,93,31)" fg:x="153028225" fg:w="5806860"/><text x="62.4679%" y="1023.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,806,860 samples, 2.36%)</title><rect x="62.2179%" y="997" width="2.3609%" height="15" fill="rgb(239,81,33)" fg:x="153028225" fg:w="5806860"/><text x="62.4679%" y="1007.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,806,860 samples, 2.36%)</title><rect x="62.2179%" y="981" width="2.3609%" height="15" fill="rgb(213,120,34)" fg:x="153028225" fg:w="5806860"/><text x="62.4679%" y="991.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,806,860 samples, 2.36%)</title><rect x="62.2179%" y="965" width="2.3609%" height="15" fill="rgb(243,49,53)" fg:x="153028225" fg:w="5806860"/><text x="62.4679%" y="975.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,806,860 samples, 2.36%)</title><rect x="62.2179%" y="949" width="2.3609%" height="15" fill="rgb(247,216,33)" fg:x="153028225" fg:w="5806860"/><text x="62.4679%" y="959.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,806,860 samples, 2.36%)</title><rect x="62.2179%" y="933" width="2.3609%" height="15" fill="rgb(226,26,14)" fg:x="153028225" fg:w="5806860"/><text x="62.4679%" y="943.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="917" width="1.1701%" height="15" fill="rgb(215,49,53)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="901" width="1.1701%" height="15" fill="rgb(245,162,40)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="885" width="1.1701%" height="15" fill="rgb(229,68,17)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="869" width="1.1701%" height="15" fill="rgb(213,182,10)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="853" width="1.1701%" height="15" fill="rgb(245,125,30)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="837" width="1.1701%" height="15" fill="rgb(232,202,2)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="821" width="1.1701%" height="15" fill="rgb(237,140,51)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="805" width="1.1701%" height="15" fill="rgb(236,157,25)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="789" width="1.1701%" height="15" fill="rgb(219,209,0)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="773" width="1.1701%" height="15" fill="rgb(240,116,54)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="757" width="1.1701%" height="15" fill="rgb(216,10,36)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="741" width="1.1701%" height="15" fill="rgb(222,72,44)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="725" width="1.1701%" height="15" fill="rgb(232,159,9)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="709" width="1.1701%" height="15" fill="rgb(210,39,32)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="693" width="1.1701%" height="15" fill="rgb(216,194,45)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="677" width="1.1701%" height="15" fill="rgb(218,18,35)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="661" width="1.1701%" height="15" fill="rgb(207,83,51)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,877,985 samples, 1.17%)</title><rect x="63.4087%" y="645" width="1.1701%" height="15" fill="rgb(225,63,43)" fg:x="155957100" fg:w="2877985"/><text x="63.6587%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (8,706,126 samples, 3.54%)</title><rect x="62.2179%" y="1109" width="3.5397%" height="15" fill="rgb(207,57,36)" fg:x="153028225" fg:w="8706126"/><text x="62.4679%" y="1119.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,706,126 samples, 3.54%)</title><rect x="62.2179%" y="1093" width="3.5397%" height="15" fill="rgb(216,99,33)" fg:x="153028225" fg:w="8706126"/><text x="62.4679%" y="1103.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (8,706,126 samples, 3.54%)</title><rect x="62.2179%" y="1077" width="3.5397%" height="15" fill="rgb(225,42,16)" fg:x="153028225" fg:w="8706126"/><text x="62.4679%" y="1087.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (8,706,126 samples, 3.54%)</title><rect x="62.2179%" y="1061" width="3.5397%" height="15" fill="rgb(220,201,45)" fg:x="153028225" fg:w="8706126"/><text x="62.4679%" y="1071.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,899,266 samples, 1.18%)</title><rect x="64.5788%" y="1045" width="1.1788%" height="15" fill="rgb(225,33,4)" fg:x="158835085" fg:w="2899266"/><text x="64.8288%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2,899,266 samples, 1.18%)</title><rect x="64.5788%" y="1029" width="1.1788%" height="15" fill="rgb(224,33,50)" fg:x="158835085" fg:w="2899266"/><text x="64.8288%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2,899,266 samples, 1.18%)</title><rect x="64.5788%" y="1013" width="1.1788%" height="15" fill="rgb(246,198,51)" fg:x="158835085" fg:w="2899266"/><text x="64.8288%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,266 samples, 1.18%)</title><rect x="64.5788%" y="997" width="1.1788%" height="15" fill="rgb(205,22,4)" fg:x="158835085" fg:w="2899266"/><text x="64.8288%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,899,266 samples, 1.18%)</title><rect x="64.5788%" y="981" width="1.1788%" height="15" fill="rgb(206,3,8)" fg:x="158835085" fg:w="2899266"/><text x="64.8288%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,899,266 samples, 1.18%)</title><rect x="64.5788%" y="965" width="1.1788%" height="15" fill="rgb(251,23,15)" fg:x="158835085" fg:w="2899266"/><text x="64.8288%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (2,899,266 samples, 1.18%)</title><rect x="64.5788%" y="949" width="1.1788%" height="15" fill="rgb(252,88,28)" fg:x="158835085" fg:w="2899266"/><text x="64.8288%" y="959.50"></text></g><g><title>cfree (2,899,266 samples, 1.18%)</title><rect x="64.5788%" y="933" width="1.1788%" height="15" fill="rgb(212,127,14)" fg:x="158835085" fg:w="2899266"/><text x="64.8288%" y="943.50"></text></g><g><title>[libc.so.6] (2,899,266 samples, 1.18%)</title><rect x="64.5788%" y="917" width="1.1788%" height="15" fill="rgb(247,145,37)" fg:x="158835085" fg:w="2899266"/><text x="64.8288%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,637,450 samples, 4.73%)</title><rect x="62.2179%" y="1221" width="4.7315%" height="15" fill="rgb(209,117,53)" fg:x="153028225" fg:w="11637450"/><text x="62.4679%" y="1231.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (11,637,450 samples, 4.73%)</title><rect x="62.2179%" y="1205" width="4.7315%" height="15" fill="rgb(212,90,42)" fg:x="153028225" fg:w="11637450"/><text x="62.4679%" y="1215.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (11,637,450 samples, 4.73%)</title><rect x="62.2179%" y="1189" width="4.7315%" height="15" fill="rgb(218,164,37)" fg:x="153028225" fg:w="11637450"/><text x="62.4679%" y="1199.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (11,637,450 samples, 4.73%)</title><rect x="62.2179%" y="1173" width="4.7315%" height="15" fill="rgb(246,65,34)" fg:x="153028225" fg:w="11637450"/><text x="62.4679%" y="1183.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,637,450 samples, 4.73%)</title><rect x="62.2179%" y="1157" width="4.7315%" height="15" fill="rgb(231,100,33)" fg:x="153028225" fg:w="11637450"/><text x="62.4679%" y="1167.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (11,637,450 samples, 4.73%)</title><rect x="62.2179%" y="1141" width="4.7315%" height="15" fill="rgb(228,126,14)" fg:x="153028225" fg:w="11637450"/><text x="62.4679%" y="1151.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (11,637,450 samples, 4.73%)</title><rect x="62.2179%" y="1125" width="4.7315%" height="15" fill="rgb(215,173,21)" fg:x="153028225" fg:w="11637450"/><text x="62.4679%" y="1135.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,931,324 samples, 1.19%)</title><rect x="65.7576%" y="1109" width="1.1918%" height="15" fill="rgb(210,6,40)" fg:x="161734351" fg:w="2931324"/><text x="66.0076%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2,931,324 samples, 1.19%)</title><rect x="65.7576%" y="1093" width="1.1918%" height="15" fill="rgb(212,48,18)" fg:x="161734351" fg:w="2931324"/><text x="66.0076%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2,931,324 samples, 1.19%)</title><rect x="65.7576%" y="1077" width="1.1918%" height="15" fill="rgb(230,214,11)" fg:x="161734351" fg:w="2931324"/><text x="66.0076%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,931,324 samples, 1.19%)</title><rect x="65.7576%" y="1061" width="1.1918%" height="15" fill="rgb(254,105,39)" fg:x="161734351" fg:w="2931324"/><text x="66.0076%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,931,324 samples, 1.19%)</title><rect x="65.7576%" y="1045" width="1.1918%" height="15" fill="rgb(245,158,5)" fg:x="161734351" fg:w="2931324"/><text x="66.0076%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,931,324 samples, 1.19%)</title><rect x="65.7576%" y="1029" width="1.1918%" height="15" fill="rgb(249,208,11)" fg:x="161734351" fg:w="2931324"/><text x="66.0076%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (2,931,324 samples, 1.19%)</title><rect x="65.7576%" y="1013" width="1.1918%" height="15" fill="rgb(210,39,28)" fg:x="161734351" fg:w="2931324"/><text x="66.0076%" y="1023.50"></text></g><g><title>cfree (2,931,324 samples, 1.19%)</title><rect x="65.7576%" y="997" width="1.1918%" height="15" fill="rgb(211,56,53)" fg:x="161734351" fg:w="2931324"/><text x="66.0076%" y="1007.50"></text></g><g><title>[libc.so.6] (2,931,324 samples, 1.19%)</title><rect x="65.7576%" y="981" width="1.1918%" height="15" fill="rgb(226,201,30)" fg:x="161734351" fg:w="2931324"/><text x="66.0076%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (14,571,815 samples, 5.92%)</title><rect x="62.2179%" y="1237" width="5.9246%" height="15" fill="rgb(239,101,34)" fg:x="153028225" fg:w="14571815"/><text x="62.4679%" y="1247.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,934,365 samples, 1.19%)</title><rect x="66.9494%" y="1221" width="1.1930%" height="15" fill="rgb(226,209,5)" fg:x="164665675" fg:w="2934365"/><text x="67.1994%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,934,365 samples, 1.19%)</title><rect x="66.9494%" y="1205" width="1.1930%" height="15" fill="rgb(250,105,47)" fg:x="164665675" fg:w="2934365"/><text x="67.1994%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,934,365 samples, 1.19%)</title><rect x="66.9494%" y="1189" width="1.1930%" height="15" fill="rgb(230,72,3)" fg:x="164665675" fg:w="2934365"/><text x="67.1994%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,934,365 samples, 1.19%)</title><rect x="66.9494%" y="1173" width="1.1930%" height="15" fill="rgb(232,218,39)" fg:x="164665675" fg:w="2934365"/><text x="67.1994%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (2,934,365 samples, 1.19%)</title><rect x="66.9494%" y="1157" width="1.1930%" height="15" fill="rgb(248,166,6)" fg:x="164665675" fg:w="2934365"/><text x="67.1994%" y="1167.50"></text></g><g><title>cfree (2,934,365 samples, 1.19%)</title><rect x="66.9494%" y="1141" width="1.1930%" height="15" fill="rgb(247,89,20)" fg:x="164665675" fg:w="2934365"/><text x="67.1994%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (17,550,840 samples, 7.14%)</title><rect x="62.2179%" y="1365" width="7.1358%" height="15" fill="rgb(248,130,54)" fg:x="153028225" fg:w="17550840"/><text x="62.4679%" y="1375.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,550,840 samples, 7.14%)</title><rect x="62.2179%" y="1349" width="7.1358%" height="15" fill="rgb(234,196,4)" fg:x="153028225" fg:w="17550840"/><text x="62.4679%" y="1359.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (17,550,840 samples, 7.14%)</title><rect x="62.2179%" y="1333" width="7.1358%" height="15" fill="rgb(250,143,31)" fg:x="153028225" fg:w="17550840"/><text x="62.4679%" y="1343.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (17,550,840 samples, 7.14%)</title><rect x="62.2179%" y="1317" width="7.1358%" height="15" fill="rgb(211,110,34)" fg:x="153028225" fg:w="17550840"/><text x="62.4679%" y="1327.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (17,550,840 samples, 7.14%)</title><rect x="62.2179%" y="1301" width="7.1358%" height="15" fill="rgb(215,124,48)" fg:x="153028225" fg:w="17550840"/><text x="62.4679%" y="1311.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,550,840 samples, 7.14%)</title><rect x="62.2179%" y="1285" width="7.1358%" height="15" fill="rgb(216,46,13)" fg:x="153028225" fg:w="17550840"/><text x="62.4679%" y="1295.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (17,550,840 samples, 7.14%)</title><rect x="62.2179%" y="1269" width="7.1358%" height="15" fill="rgb(205,184,25)" fg:x="153028225" fg:w="17550840"/><text x="62.4679%" y="1279.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (17,550,840 samples, 7.14%)</title><rect x="62.2179%" y="1253" width="7.1358%" height="15" fill="rgb(228,1,10)" fg:x="153028225" fg:w="17550840"/><text x="62.4679%" y="1263.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,979,025 samples, 1.21%)</title><rect x="68.1425%" y="1237" width="1.2112%" height="15" fill="rgb(213,116,27)" fg:x="167600040" fg:w="2979025"/><text x="68.3925%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2,979,025 samples, 1.21%)</title><rect x="68.1425%" y="1221" width="1.2112%" height="15" fill="rgb(241,95,50)" fg:x="167600040" fg:w="2979025"/><text x="68.3925%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2,979,025 samples, 1.21%)</title><rect x="68.1425%" y="1205" width="1.2112%" height="15" fill="rgb(238,48,32)" fg:x="167600040" fg:w="2979025"/><text x="68.3925%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,979,025 samples, 1.21%)</title><rect x="68.1425%" y="1189" width="1.2112%" height="15" fill="rgb(235,113,49)" fg:x="167600040" fg:w="2979025"/><text x="68.3925%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,979,025 samples, 1.21%)</title><rect x="68.1425%" y="1173" width="1.2112%" height="15" fill="rgb(205,127,43)" fg:x="167600040" fg:w="2979025"/><text x="68.3925%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,979,025 samples, 1.21%)</title><rect x="68.1425%" y="1157" width="1.2112%" height="15" fill="rgb(250,162,2)" fg:x="167600040" fg:w="2979025"/><text x="68.3925%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (2,979,025 samples, 1.21%)</title><rect x="68.1425%" y="1141" width="1.2112%" height="15" fill="rgb(220,13,41)" fg:x="167600040" fg:w="2979025"/><text x="68.3925%" y="1151.50"></text></g><g><title>cfree (2,979,025 samples, 1.21%)</title><rect x="68.1425%" y="1125" width="1.2112%" height="15" fill="rgb(249,221,25)" fg:x="167600040" fg:w="2979025"/><text x="68.3925%" y="1135.50"></text></g><g><title>[libc.so.6] (2,979,025 samples, 1.21%)</title><rect x="68.1425%" y="1109" width="1.2112%" height="15" fill="rgb(215,208,19)" fg:x="167600040" fg:w="2979025"/><text x="68.3925%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,492,245 samples, 8.33%)</title><rect x="62.2179%" y="1413" width="8.3317%" height="15" fill="rgb(236,175,2)" fg:x="153028225" fg:w="20492245"/><text x="62.4679%" y="1423.50">&lt;alloc::vec:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (20,492,245 samples, 8.33%)</title><rect x="62.2179%" y="1397" width="8.3317%" height="15" fill="rgb(241,52,2)" fg:x="153028225" fg:w="20492245"/><text x="62.4679%" y="1407.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (20,492,245 samples, 8.33%)</title><rect x="62.2179%" y="1381" width="8.3317%" height="15" fill="rgb(248,140,14)" fg:x="153028225" fg:w="20492245"/><text x="62.4679%" y="1391.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,941,405 samples, 1.20%)</title><rect x="69.3537%" y="1365" width="1.1959%" height="15" fill="rgb(253,22,42)" fg:x="170579065" fg:w="2941405"/><text x="69.6037%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,941,405 samples, 1.20%)</title><rect x="69.3537%" y="1349" width="1.1959%" height="15" fill="rgb(234,61,47)" fg:x="170579065" fg:w="2941405"/><text x="69.6037%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,941,405 samples, 1.20%)</title><rect x="69.3537%" y="1333" width="1.1959%" height="15" fill="rgb(208,226,15)" fg:x="170579065" fg:w="2941405"/><text x="69.6037%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,941,405 samples, 1.20%)</title><rect x="69.3537%" y="1317" width="1.1959%" height="15" fill="rgb(217,221,4)" fg:x="170579065" fg:w="2941405"/><text x="69.6037%" y="1327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,941,405 samples, 1.20%)</title><rect x="69.3537%" y="1301" width="1.1959%" height="15" fill="rgb(212,174,34)" fg:x="170579065" fg:w="2941405"/><text x="69.6037%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,941,405 samples, 1.20%)</title><rect x="69.3537%" y="1285" width="1.1959%" height="15" fill="rgb(253,83,4)" fg:x="170579065" fg:w="2941405"/><text x="69.6037%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,941,405 samples, 1.20%)</title><rect x="69.3537%" y="1269" width="1.1959%" height="15" fill="rgb(250,195,49)" fg:x="170579065" fg:w="2941405"/><text x="69.6037%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (2,941,405 samples, 1.20%)</title><rect x="69.3537%" y="1253" width="1.1959%" height="15" fill="rgb(241,192,25)" fg:x="170579065" fg:w="2941405"/><text x="69.6037%" y="1263.50"></text></g><g><title>cfree (2,941,405 samples, 1.20%)</title><rect x="69.3537%" y="1237" width="1.1959%" height="15" fill="rgb(208,124,10)" fg:x="170579065" fg:w="2941405"/><text x="69.6037%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (26,030,305 samples, 10.58%)</title><rect x="62.2179%" y="1429" width="10.5833%" height="15" fill="rgb(222,33,0)" fg:x="153028225" fg:w="26030305"/><text x="62.4679%" y="1439.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,538,060 samples, 2.25%)</title><rect x="70.5496%" y="1413" width="2.2517%" height="15" fill="rgb(234,209,28)" fg:x="173520470" fg:w="5538060"/><text x="70.7996%" y="1423.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,538,060 samples, 2.25%)</title><rect x="70.5496%" y="1397" width="2.2517%" height="15" fill="rgb(224,11,23)" fg:x="173520470" fg:w="5538060"/><text x="70.7996%" y="1407.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,538,060 samples, 2.25%)</title><rect x="70.5496%" y="1381" width="2.2517%" height="15" fill="rgb(232,99,1)" fg:x="173520470" fg:w="5538060"/><text x="70.7996%" y="1391.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,538,060 samples, 2.25%)</title><rect x="70.5496%" y="1365" width="2.2517%" height="15" fill="rgb(237,95,45)" fg:x="173520470" fg:w="5538060"/><text x="70.7996%" y="1375.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (5,538,060 samples, 2.25%)</title><rect x="70.5496%" y="1349" width="2.2517%" height="15" fill="rgb(208,109,11)" fg:x="173520470" fg:w="5538060"/><text x="70.7996%" y="1359.50">a..</text></g><g><title>cfree (5,538,060 samples, 2.25%)</title><rect x="70.5496%" y="1333" width="2.2517%" height="15" fill="rgb(216,190,48)" fg:x="173520470" fg:w="5538060"/><text x="70.7996%" y="1343.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34,112,283 samples, 13.87%)</title><rect x="62.2179%" y="1477" width="13.8693%" height="15" fill="rgb(251,171,36)" fg:x="153028225" fg:w="34112283"/><text x="62.4679%" y="1487.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (34,112,283 samples, 13.87%)</title><rect x="62.2179%" y="1461" width="13.8693%" height="15" fill="rgb(230,62,22)" fg:x="153028225" fg:w="34112283"/><text x="62.4679%" y="1471.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (34,112,283 samples, 13.87%)</title><rect x="62.2179%" y="1445" width="13.8693%" height="15" fill="rgb(225,114,35)" fg:x="153028225" fg:w="34112283"/><text x="62.4679%" y="1455.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (8,081,978 samples, 3.29%)</title><rect x="72.8012%" y="1429" width="3.2860%" height="15" fill="rgb(215,118,42)" fg:x="179058530" fg:w="8081978"/><text x="73.0512%" y="1439.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (8,081,978 samples, 3.29%)</title><rect x="72.8012%" y="1413" width="3.2860%" height="15" fill="rgb(243,119,21)" fg:x="179058530" fg:w="8081978"/><text x="73.0512%" y="1423.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (8,081,978 samples, 3.29%)</title><rect x="72.8012%" y="1397" width="3.2860%" height="15" fill="rgb(252,177,53)" fg:x="179058530" fg:w="8081978"/><text x="73.0512%" y="1407.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,081,978 samples, 3.29%)</title><rect x="72.8012%" y="1381" width="3.2860%" height="15" fill="rgb(237,209,29)" fg:x="179058530" fg:w="8081978"/><text x="73.0512%" y="1391.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (8,081,978 samples, 3.29%)</title><rect x="72.8012%" y="1365" width="3.2860%" height="15" fill="rgb(212,65,23)" fg:x="179058530" fg:w="8081978"/><text x="73.0512%" y="1375.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,081,978 samples, 3.29%)</title><rect x="72.8012%" y="1349" width="3.2860%" height="15" fill="rgb(230,222,46)" fg:x="179058530" fg:w="8081978"/><text x="73.0512%" y="1359.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (8,081,978 samples, 3.29%)</title><rect x="72.8012%" y="1333" width="3.2860%" height="15" fill="rgb(215,135,32)" fg:x="179058530" fg:w="8081978"/><text x="73.0512%" y="1343.50">all..</text></g><g><title>cfree (8,081,978 samples, 3.29%)</title><rect x="72.8012%" y="1317" width="3.2860%" height="15" fill="rgb(246,101,22)" fg:x="179058530" fg:w="8081978"/><text x="73.0512%" y="1327.50">cfr..</text></g><g><title>[libc.so.6] (2,898,187 samples, 1.18%)</title><rect x="74.9088%" y="1301" width="1.1783%" height="15" fill="rgb(206,107,13)" fg:x="184242321" fg:w="2898187"/><text x="75.1588%" y="1311.50"></text></g><g><title>[libc.so.6] (2,898,187 samples, 1.18%)</title><rect x="74.9088%" y="1285" width="1.1783%" height="15" fill="rgb(250,100,44)" fg:x="184242321" fg:w="2898187"/><text x="75.1588%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (45,788,546 samples, 18.62%)</title><rect x="62.2179%" y="1493" width="18.6166%" height="15" fill="rgb(231,147,38)" fg:x="153028225" fg:w="45788546"/><text x="62.4679%" y="1503.50">core::ptr::drop_in_place&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (11,676,263 samples, 4.75%)</title><rect x="76.0872%" y="1477" width="4.7473%" height="15" fill="rgb(229,8,40)" fg:x="187140508" fg:w="11676263"/><text x="76.3372%" y="1487.50">core::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,676,263 samples, 4.75%)</title><rect x="76.0872%" y="1461" width="4.7473%" height="15" fill="rgb(221,135,30)" fg:x="187140508" fg:w="11676263"/><text x="76.3372%" y="1471.50">&lt;alloc..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (11,676,263 samples, 4.75%)</title><rect x="76.0872%" y="1445" width="4.7473%" height="15" fill="rgb(249,193,18)" fg:x="187140508" fg:w="11676263"/><text x="76.3372%" y="1455.50">alloc:..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11,676,263 samples, 4.75%)</title><rect x="76.0872%" y="1429" width="4.7473%" height="15" fill="rgb(209,133,39)" fg:x="187140508" fg:w="11676263"/><text x="76.3372%" y="1439.50">&lt;alloc..</text></g><g><title>alloc::alloc::dealloc (11,676,263 samples, 4.75%)</title><rect x="76.0872%" y="1413" width="4.7473%" height="15" fill="rgb(232,100,14)" fg:x="187140508" fg:w="11676263"/><text x="76.3372%" y="1423.50">alloc:..</text></g><g><title>cfree (11,676,263 samples, 4.75%)</title><rect x="76.0872%" y="1397" width="4.7473%" height="15" fill="rgb(224,185,1)" fg:x="187140508" fg:w="11676263"/><text x="76.3372%" y="1407.50">cfree</text></g><g><title>[libc.so.6] (11,676,263 samples, 4.75%)</title><rect x="76.0872%" y="1381" width="4.7473%" height="15" fill="rgb(223,139,8)" fg:x="187140508" fg:w="11676263"/><text x="76.3372%" y="1391.50">[libc...</text></g><g><title>[libc.so.6] (11,676,263 samples, 4.75%)</title><rect x="76.0872%" y="1365" width="4.7473%" height="15" fill="rgb(232,213,38)" fg:x="187140508" fg:w="11676263"/><text x="76.3372%" y="1375.50">[libc...</text></g><g><title>[libc.so.6] (2,930,019 samples, 1.19%)</title><rect x="79.6432%" y="1349" width="1.1913%" height="15" fill="rgb(207,94,22)" fg:x="195886752" fg:w="2930019"/><text x="79.8932%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1829" width="19.8108%" height="15" fill="rgb(219,183,54)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1839.50">core::ptr::drop_in_place&lt;css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1813" width="19.8108%" height="15" fill="rgb(216,185,54)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1823.50">core::ptr::drop_in_place&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1797" width="19.8108%" height="15" fill="rgb(254,217,39)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1807.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1781" width="19.8108%" height="15" fill="rgb(240,178,23)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1791.50">core::ptr::drop_in_place&lt;[css_b..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1765" width="19.8108%" height="15" fill="rgb(218,11,47)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1775.50">core::ptr::drop_in_place&lt;css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1749" width="19.8108%" height="15" fill="rgb(218,51,51)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1759.50">core::ptr::drop_in_place&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1733" width="19.8108%" height="15" fill="rgb(238,126,27)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1743.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1717" width="19.8108%" height="15" fill="rgb(249,202,22)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1727.50">core::ptr::drop_in_place&lt;[css_b..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1701" width="19.8108%" height="15" fill="rgb(254,195,49)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1711.50">core::ptr::drop_in_place&lt;css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1685" width="19.8108%" height="15" fill="rgb(208,123,14)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1695.50">core::ptr::drop_in_place&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1669" width="19.8108%" height="15" fill="rgb(224,200,8)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1679.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1653" width="19.8108%" height="15" fill="rgb(217,61,36)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1663.50">core::ptr::drop_in_place&lt;[css_b..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1637" width="19.8108%" height="15" fill="rgb(206,35,45)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1647.50">core::ptr::drop_in_place&lt;css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1621" width="19.8108%" height="15" fill="rgb(217,65,33)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1631.50">core::ptr::drop_in_place&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1605" width="19.8108%" height="15" fill="rgb(222,158,48)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1615.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1589" width="19.8108%" height="15" fill="rgb(254,2,54)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1599.50">core::ptr::drop_in_place&lt;[css_b..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1573" width="19.8108%" height="15" fill="rgb(250,143,38)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1583.50">core::ptr::drop_in_place&lt;css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1557" width="19.8108%" height="15" fill="rgb(248,25,0)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1567.50">core::ptr::drop_in_place&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1541" width="19.8108%" height="15" fill="rgb(206,152,27)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1551.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1525" width="19.8108%" height="15" fill="rgb(240,77,30)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1535.50">core::ptr::drop_in_place&lt;[css_b..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (48,725,798 samples, 19.81%)</title><rect x="62.2179%" y="1509" width="19.8108%" height="15" fill="rgb(231,5,3)" fg:x="153028225" fg:w="48725798"/><text x="62.4679%" y="1519.50">core::ptr::drop_in_place&lt;css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,937,252 samples, 1.19%)</title><rect x="80.8345%" y="1493" width="1.1942%" height="15" fill="rgb(207,226,32)" fg:x="198816771" fg:w="2937252"/><text x="81.0845%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2,937,252 samples, 1.19%)</title><rect x="80.8345%" y="1477" width="1.1942%" height="15" fill="rgb(222,207,47)" fg:x="198816771" fg:w="2937252"/><text x="81.0845%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2,937,252 samples, 1.19%)</title><rect x="80.8345%" y="1461" width="1.1942%" height="15" fill="rgb(229,115,45)" fg:x="198816771" fg:w="2937252"/><text x="81.0845%" y="1471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,937,252 samples, 1.19%)</title><rect x="80.8345%" y="1445" width="1.1942%" height="15" fill="rgb(224,191,6)" fg:x="198816771" fg:w="2937252"/><text x="81.0845%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,937,252 samples, 1.19%)</title><rect x="80.8345%" y="1429" width="1.1942%" height="15" fill="rgb(230,227,24)" fg:x="198816771" fg:w="2937252"/><text x="81.0845%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,937,252 samples, 1.19%)</title><rect x="80.8345%" y="1413" width="1.1942%" height="15" fill="rgb(228,80,19)" fg:x="198816771" fg:w="2937252"/><text x="81.0845%" y="1423.50"></text></g><g><title>alloc::alloc::dealloc (2,937,252 samples, 1.19%)</title><rect x="80.8345%" y="1397" width="1.1942%" height="15" fill="rgb(247,229,0)" fg:x="198816771" fg:w="2937252"/><text x="81.0845%" y="1407.50"></text></g><g><title>cfree (2,937,252 samples, 1.19%)</title><rect x="80.8345%" y="1381" width="1.1942%" height="15" fill="rgb(237,194,15)" fg:x="198816771" fg:w="2937252"/><text x="81.0845%" y="1391.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (160,837,554 samples, 65.39%)</title><rect x="17.8311%" y="1845" width="65.3930%" height="15" fill="rgb(219,203,20)" fg:x="43856453" fg:w="160837554"/><text x="18.0811%" y="1855.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,939,984 samples, 1.20%)</title><rect x="82.0287%" y="1829" width="1.1953%" height="15" fill="rgb(234,128,8)" fg:x="201754023" fg:w="2939984"/><text x="82.2787%" y="1839.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,939,984 samples, 1.20%)</title><rect x="82.0287%" y="1813" width="1.1953%" height="15" fill="rgb(248,202,8)" fg:x="201754023" fg:w="2939984"/><text x="82.2787%" y="1823.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,939,984 samples, 1.20%)</title><rect x="82.0287%" y="1797" width="1.1953%" height="15" fill="rgb(206,104,37)" fg:x="201754023" fg:w="2939984"/><text x="82.2787%" y="1807.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,939,984 samples, 1.20%)</title><rect x="82.0287%" y="1781" width="1.1953%" height="15" fill="rgb(223,8,27)" fg:x="201754023" fg:w="2939984"/><text x="82.2787%" y="1791.50"></text></g><g><title>benchmark::generate_web_layout_csv (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1845" width="1.1775%" height="15" fill="rgb(216,217,28)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1855.50"></text></g><g><title>alloc::fmt::format (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1829" width="1.1775%" height="15" fill="rgb(249,199,1)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1839.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1813" width="1.1775%" height="15" fill="rgb(240,85,17)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1823.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1797" width="1.1775%" height="15" fill="rgb(206,108,45)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1807.50"></text></g><g><title>alloc::fmt::format::format_inner (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1781" width="1.1775%" height="15" fill="rgb(245,210,41)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1791.50"></text></g><g><title>core::fmt::Write::write_fmt (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1765" width="1.1775%" height="15" fill="rgb(206,13,37)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1775.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1749" width="1.1775%" height="15" fill="rgb(250,61,18)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1759.50"></text></g><g><title>core::fmt::write (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1733" width="1.1775%" height="15" fill="rgb(235,172,48)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1743.50"></text></g><g><title>core::fmt::run (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1717" width="1.1775%" height="15" fill="rgb(249,201,17)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1727.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1701" width="1.1775%" height="15" fill="rgb(219,208,6)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1711.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1685" width="1.1775%" height="15" fill="rgb(248,31,23)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1695.50"></text></g><g><title>alloc::string::String::push_str (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1669" width="1.1775%" height="15" fill="rgb(245,15,42)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1653" width="1.1775%" height="15" fill="rgb(222,217,39)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1637" width="1.1775%" height="15" fill="rgb(210,219,27)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1621" width="1.1775%" height="15" fill="rgb(252,166,36)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1631.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1605" width="1.1775%" height="15" fill="rgb(245,132,34)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1615.50"></text></g><g><title>[libc.so.6] (2,896,232 samples, 1.18%)</title><rect x="83.2240%" y="1589" width="1.1775%" height="15" fill="rgb(236,54,3)" fg:x="204694007" fg:w="2896232"/><text x="83.4740%" y="1599.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (699,733 samples, 0.28%)</title><rect x="86.9249%" y="1333" width="0.2845%" height="15" fill="rgb(241,173,43)" fg:x="213796583" fg:w="699733"/><text x="87.1749%" y="1343.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (699,733 samples, 0.28%)</title><rect x="86.9249%" y="1317" width="0.2845%" height="15" fill="rgb(215,190,9)" fg:x="213796583" fg:w="699733"/><text x="87.1749%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (699,733 samples, 0.28%)</title><rect x="86.9249%" y="1301" width="0.2845%" height="15" fill="rgb(242,101,16)" fg:x="213796583" fg:w="699733"/><text x="87.1749%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (699,733 samples, 0.28%)</title><rect x="86.9249%" y="1285" width="0.2845%" height="15" fill="rgb(223,190,21)" fg:x="213796583" fg:w="699733"/><text x="87.1749%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (699,733 samples, 0.28%)</title><rect x="86.9249%" y="1269" width="0.2845%" height="15" fill="rgb(215,228,25)" fg:x="213796583" fg:w="699733"/><text x="87.1749%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (699,733 samples, 0.28%)</title><rect x="86.9249%" y="1253" width="0.2845%" height="15" fill="rgb(225,36,22)" fg:x="213796583" fg:w="699733"/><text x="87.1749%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (699,733 samples, 0.28%)</title><rect x="86.9249%" y="1237" width="0.2845%" height="15" fill="rgb(251,106,46)" fg:x="213796583" fg:w="699733"/><text x="87.1749%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (699,733 samples, 0.28%)</title><rect x="86.9249%" y="1221" width="0.2845%" height="15" fill="rgb(208,90,1)" fg:x="213796583" fg:w="699733"/><text x="87.1749%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (699,733 samples, 0.28%)</title><rect x="86.9249%" y="1205" width="0.2845%" height="15" fill="rgb(243,10,4)" fg:x="213796583" fg:w="699733"/><text x="87.1749%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (699,733 samples, 0.28%)</title><rect x="86.9249%" y="1189" width="0.2845%" height="15" fill="rgb(212,137,27)" fg:x="213796583" fg:w="699733"/><text x="87.1749%" y="1199.50"></text></g><g><title>alloc::raw_vec::finish_grow (699,733 samples, 0.28%)</title><rect x="86.9249%" y="1173" width="0.2845%" height="15" fill="rgb(231,220,49)" fg:x="213796583" fg:w="699733"/><text x="87.1749%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (699,733 samples, 0.28%)</title><rect x="86.9249%" y="1157" width="0.2845%" height="15" fill="rgb(237,96,20)" fg:x="213796583" fg:w="699733"/><text x="87.1749%" y="1167.50"></text></g><g><title>alloc::alloc::Global::grow_impl (699,733 samples, 0.28%)</title><rect x="86.9249%" y="1141" width="0.2845%" height="15" fill="rgb(239,229,30)" fg:x="213796583" fg:w="699733"/><text x="87.1749%" y="1151.50"></text></g><g><title>alloc::alloc::realloc (699,733 samples, 0.28%)</title><rect x="86.9249%" y="1125" width="0.2845%" height="15" fill="rgb(219,65,33)" fg:x="213796583" fg:w="699733"/><text x="87.1749%" y="1135.50"></text></g><g><title>realloc (699,733 samples, 0.28%)</title><rect x="86.9249%" y="1109" width="0.2845%" height="15" fill="rgb(243,134,7)" fg:x="213796583" fg:w="699733"/><text x="87.1749%" y="1119.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,233,357 samples, 0.50%)</title><rect x="87.2094%" y="917" width="0.5015%" height="15" fill="rgb(216,177,54)" fg:x="214496316" fg:w="1233357"/><text x="87.4594%" y="927.50"></text></g><g><title>serde::de::MapAccess::next_value (1,233,357 samples, 0.50%)</title><rect x="87.2094%" y="901" width="0.5015%" height="15" fill="rgb(211,160,20)" fg:x="214496316" fg:w="1233357"/><text x="87.4594%" y="911.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,233,357 samples, 0.50%)</title><rect x="87.2094%" y="885" width="0.5015%" height="15" fill="rgb(239,85,39)" fg:x="214496316" fg:w="1233357"/><text x="87.4594%" y="895.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,233,357 samples, 0.50%)</title><rect x="87.2094%" y="869" width="0.5015%" height="15" fill="rgb(232,125,22)" fg:x="214496316" fg:w="1233357"/><text x="87.4594%" y="879.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,233,357 samples, 0.50%)</title><rect x="87.2094%" y="853" width="0.5015%" height="15" fill="rgb(244,57,34)" fg:x="214496316" fg:w="1233357"/><text x="87.4594%" y="863.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,233,357 samples, 0.50%)</title><rect x="87.2094%" y="837" width="0.5015%" height="15" fill="rgb(214,203,32)" fg:x="214496316" fg:w="1233357"/><text x="87.4594%" y="847.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,233,357 samples, 0.50%)</title><rect x="87.2094%" y="821" width="0.5015%" height="15" fill="rgb(207,58,43)" fg:x="214496316" fg:w="1233357"/><text x="87.4594%" y="831.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,233,357 samples, 0.50%)</title><rect x="87.2094%" y="805" width="0.5015%" height="15" fill="rgb(215,193,15)" fg:x="214496316" fg:w="1233357"/><text x="87.4594%" y="815.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,233,357 samples, 0.50%)</title><rect x="87.2094%" y="789" width="0.5015%" height="15" fill="rgb(232,15,44)" fg:x="214496316" fg:w="1233357"/><text x="87.4594%" y="799.50"></text></g><g><title>serde_json::read::is_escape (1,233,357 samples, 0.50%)</title><rect x="87.2094%" y="773" width="0.5015%" height="15" fill="rgb(212,3,48)" fg:x="214496316" fg:w="1233357"/><text x="87.4594%" y="783.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,475,546 samples, 0.60%)</title><rect x="88.6903%" y="709" width="0.5999%" height="15" fill="rgb(218,128,7)" fg:x="218138549" fg:w="1475546"/><text x="88.9403%" y="719.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="597" width="0.7465%" height="15" fill="rgb(226,216,39)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="607.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="581" width="0.7465%" height="15" fill="rgb(243,47,51)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="565" width="0.7465%" height="15" fill="rgb(241,183,40)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="549" width="0.7465%" height="15" fill="rgb(231,217,32)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="533" width="0.7465%" height="15" fill="rgb(229,61,38)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="517" width="0.7465%" height="15" fill="rgb(225,210,5)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="501" width="0.7465%" height="15" fill="rgb(231,79,45)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="511.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="485" width="0.7465%" height="15" fill="rgb(224,100,7)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="495.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="469" width="0.7465%" height="15" fill="rgb(241,198,18)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="479.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="453" width="0.7465%" height="15" fill="rgb(252,97,53)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="437" width="0.7465%" height="15" fill="rgb(220,88,7)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="421" width="0.7465%" height="15" fill="rgb(213,176,14)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="405" width="0.7465%" height="15" fill="rgb(246,73,7)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="415.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="389" width="0.7465%" height="15" fill="rgb(245,64,36)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="399.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="373" width="0.7465%" height="15" fill="rgb(245,80,10)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="357" width="0.7465%" height="15" fill="rgb(232,107,50)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="367.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="341" width="0.7465%" height="15" fill="rgb(253,3,0)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="351.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="325" width="0.7465%" height="15" fill="rgb(212,99,53)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="309" width="0.7465%" height="15" fill="rgb(249,111,54)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="293" width="0.7465%" height="15" fill="rgb(249,55,30)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="303.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="277" width="0.7465%" height="15" fill="rgb(237,47,42)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="287.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="261" width="0.7465%" height="15" fill="rgb(211,20,18)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="245" width="0.7465%" height="15" fill="rgb(231,203,46)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="229" width="0.7465%" height="15" fill="rgb(237,142,3)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="213" width="0.7465%" height="15" fill="rgb(241,107,1)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="197" width="0.7465%" height="15" fill="rgb(229,83,13)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="181" width="0.7465%" height="15" fill="rgb(241,91,40)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="165" width="0.7465%" height="15" fill="rgb(225,3,45)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="149" width="0.7465%" height="15" fill="rgb(244,223,14)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="133" width="0.7465%" height="15" fill="rgb(224,124,37)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="117" width="0.7465%" height="15" fill="rgb(251,171,30)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="101" width="0.7465%" height="15" fill="rgb(236,46,54)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="85" width="0.7465%" height="15" fill="rgb(245,213,5)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="69" width="0.7465%" height="15" fill="rgb(230,144,27)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="79.50"></text></g><g><title>malloc (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="53" width="0.7465%" height="15" fill="rgb(220,86,6)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="63.50"></text></g><g><title>[libc.so.6] (1,836,078 samples, 0.75%)</title><rect x="89.2902%" y="37" width="0.7465%" height="15" fill="rgb(240,20,13)" fg:x="219614095" fg:w="1836078"/><text x="89.5402%" y="47.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (9,346,032 samples, 3.80%)</title><rect x="87.2094%" y="1125" width="3.7999%" height="15" fill="rgb(217,89,34)" fg:x="214496316" fg:w="9346032"/><text x="87.4594%" y="1135.50">&lt;ser..</text></g><g><title>serde::de::SeqAccess::next_element (9,346,032 samples, 3.80%)</title><rect x="87.2094%" y="1109" width="3.7999%" height="15" fill="rgb(229,13,5)" fg:x="214496316" fg:w="9346032"/><text x="87.4594%" y="1119.50">serd..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,346,032 samples, 3.80%)</title><rect x="87.2094%" y="1093" width="3.7999%" height="15" fill="rgb(244,67,35)" fg:x="214496316" fg:w="9346032"/><text x="87.4594%" y="1103.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,346,032 samples, 3.80%)</title><rect x="87.2094%" y="1077" width="3.7999%" height="15" fill="rgb(221,40,2)" fg:x="214496316" fg:w="9346032"/><text x="87.4594%" y="1087.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,346,032 samples, 3.80%)</title><rect x="87.2094%" y="1061" width="3.7999%" height="15" fill="rgb(237,157,21)" fg:x="214496316" fg:w="9346032"/><text x="87.4594%" y="1071.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,346,032 samples, 3.80%)</title><rect x="87.2094%" y="1045" width="3.7999%" height="15" fill="rgb(222,94,11)" fg:x="214496316" fg:w="9346032"/><text x="87.4594%" y="1055.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,346,032 samples, 3.80%)</title><rect x="87.2094%" y="1029" width="3.7999%" height="15" fill="rgb(249,113,6)" fg:x="214496316" fg:w="9346032"/><text x="87.4594%" y="1039.50">&lt;ser..</text></g><g><title>serde::de::MapAccess::next_entry (9,346,032 samples, 3.80%)</title><rect x="87.2094%" y="1013" width="3.7999%" height="15" fill="rgb(238,137,36)" fg:x="214496316" fg:w="9346032"/><text x="87.4594%" y="1023.50">serd..</text></g><g><title>serde::de::MapAccess::next_entry_seed (9,346,032 samples, 3.80%)</title><rect x="87.2094%" y="997" width="3.7999%" height="15" fill="rgb(210,102,26)" fg:x="214496316" fg:w="9346032"/><text x="87.4594%" y="1007.50">serd..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (9,346,032 samples, 3.80%)</title><rect x="87.2094%" y="981" width="3.7999%" height="15" fill="rgb(218,30,30)" fg:x="214496316" fg:w="9346032"/><text x="87.4594%" y="991.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,346,032 samples, 3.80%)</title><rect x="87.2094%" y="965" width="3.7999%" height="15" fill="rgb(214,67,26)" fg:x="214496316" fg:w="9346032"/><text x="87.4594%" y="975.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,346,032 samples, 3.80%)</title><rect x="87.2094%" y="949" width="3.7999%" height="15" fill="rgb(251,9,53)" fg:x="214496316" fg:w="9346032"/><text x="87.4594%" y="959.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,346,032 samples, 3.80%)</title><rect x="87.2094%" y="933" width="3.7999%" height="15" fill="rgb(228,204,25)" fg:x="214496316" fg:w="9346032"/><text x="87.4594%" y="943.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (8,112,675 samples, 3.30%)</title><rect x="87.7109%" y="917" width="3.2984%" height="15" fill="rgb(207,153,8)" fg:x="215729673" fg:w="8112675"/><text x="87.9609%" y="927.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (8,112,675 samples, 3.30%)</title><rect x="87.7109%" y="901" width="3.2984%" height="15" fill="rgb(242,9,16)" fg:x="215729673" fg:w="8112675"/><text x="87.9609%" y="911.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (8,112,675 samples, 3.30%)</title><rect x="87.7109%" y="885" width="3.2984%" height="15" fill="rgb(217,211,10)" fg:x="215729673" fg:w="8112675"/><text x="87.9609%" y="895.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8,112,675 samples, 3.30%)</title><rect x="87.7109%" y="869" width="3.2984%" height="15" fill="rgb(219,228,52)" fg:x="215729673" fg:w="8112675"/><text x="87.9609%" y="879.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8,112,675 samples, 3.30%)</title><rect x="87.7109%" y="853" width="3.2984%" height="15" fill="rgb(231,92,29)" fg:x="215729673" fg:w="8112675"/><text x="87.9609%" y="863.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8,112,675 samples, 3.30%)</title><rect x="87.7109%" y="837" width="3.2984%" height="15" fill="rgb(232,8,23)" fg:x="215729673" fg:w="8112675"/><text x="87.9609%" y="847.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8,112,675 samples, 3.30%)</title><rect x="87.7109%" y="821" width="3.2984%" height="15" fill="rgb(216,211,34)" fg:x="215729673" fg:w="8112675"/><text x="87.9609%" y="831.50">&lt;se..</text></g><g><title>serde::de::MapAccess::next_entry (8,112,675 samples, 3.30%)</title><rect x="87.7109%" y="805" width="3.2984%" height="15" fill="rgb(236,151,0)" fg:x="215729673" fg:w="8112675"/><text x="87.9609%" y="815.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (8,112,675 samples, 3.30%)</title><rect x="87.7109%" y="789" width="3.2984%" height="15" fill="rgb(209,168,3)" fg:x="215729673" fg:w="8112675"/><text x="87.9609%" y="799.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,703,799 samples, 2.32%)</title><rect x="88.6903%" y="773" width="2.3190%" height="15" fill="rgb(208,129,28)" fg:x="218138549" fg:w="5703799"/><text x="88.9403%" y="783.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,703,799 samples, 2.32%)</title><rect x="88.6903%" y="757" width="2.3190%" height="15" fill="rgb(229,78,22)" fg:x="218138549" fg:w="5703799"/><text x="88.9403%" y="767.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,703,799 samples, 2.32%)</title><rect x="88.6903%" y="741" width="2.3190%" height="15" fill="rgb(228,187,13)" fg:x="218138549" fg:w="5703799"/><text x="88.9403%" y="751.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,703,799 samples, 2.32%)</title><rect x="88.6903%" y="725" width="2.3190%" height="15" fill="rgb(240,119,24)" fg:x="218138549" fg:w="5703799"/><text x="88.9403%" y="735.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,228,253 samples, 1.72%)</title><rect x="89.2902%" y="709" width="1.7191%" height="15" fill="rgb(209,194,42)" fg:x="219614095" fg:w="4228253"/><text x="89.5402%" y="719.50"></text></g><g><title>serde::de::SeqAccess::next_element (4,228,253 samples, 1.72%)</title><rect x="89.2902%" y="693" width="1.7191%" height="15" fill="rgb(247,200,46)" fg:x="219614095" fg:w="4228253"/><text x="89.5402%" y="703.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,228,253 samples, 1.72%)</title><rect x="89.2902%" y="677" width="1.7191%" height="15" fill="rgb(218,76,16)" fg:x="219614095" fg:w="4228253"/><text x="89.5402%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,228,253 samples, 1.72%)</title><rect x="89.2902%" y="661" width="1.7191%" height="15" fill="rgb(225,21,48)" fg:x="219614095" fg:w="4228253"/><text x="89.5402%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,228,253 samples, 1.72%)</title><rect x="89.2902%" y="645" width="1.7191%" height="15" fill="rgb(239,223,50)" fg:x="219614095" fg:w="4228253"/><text x="89.5402%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,228,253 samples, 1.72%)</title><rect x="89.2902%" y="629" width="1.7191%" height="15" fill="rgb(244,45,21)" fg:x="219614095" fg:w="4228253"/><text x="89.5402%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,228,253 samples, 1.72%)</title><rect x="89.2902%" y="613" width="1.7191%" height="15" fill="rgb(232,33,43)" fg:x="219614095" fg:w="4228253"/><text x="89.5402%" y="623.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,392,175 samples, 0.97%)</title><rect x="90.0367%" y="597" width="0.9726%" height="15" fill="rgb(209,8,3)" fg:x="221450173" fg:w="2392175"/><text x="90.2867%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,392,175 samples, 0.97%)</title><rect x="90.0367%" y="581" width="0.9726%" height="15" fill="rgb(214,25,53)" fg:x="221450173" fg:w="2392175"/><text x="90.2867%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2,392,175 samples, 0.97%)</title><rect x="90.0367%" y="565" width="0.9726%" height="15" fill="rgb(254,186,54)" fg:x="221450173" fg:w="2392175"/><text x="90.2867%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (2,392,175 samples, 0.97%)</title><rect x="90.0367%" y="549" width="0.9726%" height="15" fill="rgb(208,174,49)" fg:x="221450173" fg:w="2392175"/><text x="90.2867%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2,392,175 samples, 0.97%)</title><rect x="90.0367%" y="533" width="0.9726%" height="15" fill="rgb(233,191,51)" fg:x="221450173" fg:w="2392175"/><text x="90.2867%" y="543.50"></text></g><g><title>serde::de::MapAccess::next_entry (12,222,304 samples, 4.97%)</title><rect x="86.2235%" y="1637" width="4.9693%" height="15" fill="rgb(222,134,10)" fg:x="212071260" fg:w="12222304"/><text x="86.4735%" y="1647.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,222,304 samples, 4.97%)</title><rect x="86.2235%" y="1621" width="4.9693%" height="15" fill="rgb(230,226,20)" fg:x="212071260" fg:w="12222304"/><text x="86.4735%" y="1631.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,222,304 samples, 4.97%)</title><rect x="86.2235%" y="1605" width="4.9693%" height="15" fill="rgb(251,111,25)" fg:x="212071260" fg:w="12222304"/><text x="86.4735%" y="1615.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,222,304 samples, 4.97%)</title><rect x="86.2235%" y="1589" width="4.9693%" height="15" fill="rgb(224,40,46)" fg:x="212071260" fg:w="12222304"/><text x="86.4735%" y="1599.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,222,304 samples, 4.97%)</title><rect x="86.2235%" y="1573" width="4.9693%" height="15" fill="rgb(236,108,47)" fg:x="212071260" fg:w="12222304"/><text x="86.4735%" y="1583.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,222,304 samples, 4.97%)</title><rect x="86.2235%" y="1557" width="4.9693%" height="15" fill="rgb(234,93,0)" fg:x="212071260" fg:w="12222304"/><text x="86.4735%" y="1567.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (10,496,981 samples, 4.27%)</title><rect x="86.9249%" y="1541" width="4.2678%" height="15" fill="rgb(224,213,32)" fg:x="213796583" fg:w="10496981"/><text x="87.1749%" y="1551.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (10,496,981 samples, 4.27%)</title><rect x="86.9249%" y="1525" width="4.2678%" height="15" fill="rgb(251,11,48)" fg:x="213796583" fg:w="10496981"/><text x="87.1749%" y="1535.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (10,496,981 samples, 4.27%)</title><rect x="86.9249%" y="1509" width="4.2678%" height="15" fill="rgb(236,173,5)" fg:x="213796583" fg:w="10496981"/><text x="87.1749%" y="1519.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,496,981 samples, 4.27%)</title><rect x="86.9249%" y="1493" width="4.2678%" height="15" fill="rgb(230,95,12)" fg:x="213796583" fg:w="10496981"/><text x="87.1749%" y="1503.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,496,981 samples, 4.27%)</title><rect x="86.9249%" y="1477" width="4.2678%" height="15" fill="rgb(232,209,1)" fg:x="213796583" fg:w="10496981"/><text x="87.1749%" y="1487.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,496,981 samples, 4.27%)</title><rect x="86.9249%" y="1461" width="4.2678%" height="15" fill="rgb(232,6,1)" fg:x="213796583" fg:w="10496981"/><text x="87.1749%" y="1471.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,496,981 samples, 4.27%)</title><rect x="86.9249%" y="1445" width="4.2678%" height="15" fill="rgb(210,224,50)" fg:x="213796583" fg:w="10496981"/><text x="87.1749%" y="1455.50">&lt;serd..</text></g><g><title>serde::de::MapAccess::next_entry (10,496,981 samples, 4.27%)</title><rect x="86.9249%" y="1429" width="4.2678%" height="15" fill="rgb(228,127,35)" fg:x="213796583" fg:w="10496981"/><text x="87.1749%" y="1439.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (10,496,981 samples, 4.27%)</title><rect x="86.9249%" y="1413" width="4.2678%" height="15" fill="rgb(245,102,45)" fg:x="213796583" fg:w="10496981"/><text x="87.1749%" y="1423.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10,496,981 samples, 4.27%)</title><rect x="86.9249%" y="1397" width="4.2678%" height="15" fill="rgb(214,1,49)" fg:x="213796583" fg:w="10496981"/><text x="87.1749%" y="1407.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,496,981 samples, 4.27%)</title><rect x="86.9249%" y="1381" width="4.2678%" height="15" fill="rgb(226,163,40)" fg:x="213796583" fg:w="10496981"/><text x="87.1749%" y="1391.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,496,981 samples, 4.27%)</title><rect x="86.9249%" y="1365" width="4.2678%" height="15" fill="rgb(239,212,28)" fg:x="213796583" fg:w="10496981"/><text x="87.1749%" y="1375.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,496,981 samples, 4.27%)</title><rect x="86.9249%" y="1349" width="4.2678%" height="15" fill="rgb(220,20,13)" fg:x="213796583" fg:w="10496981"/><text x="87.1749%" y="1359.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (9,797,248 samples, 3.98%)</title><rect x="87.2094%" y="1333" width="3.9833%" height="15" fill="rgb(210,164,35)" fg:x="214496316" fg:w="9797248"/><text x="87.4594%" y="1343.50">&lt;ser..</text></g><g><title>serde::de::SeqAccess::next_element (9,797,248 samples, 3.98%)</title><rect x="87.2094%" y="1317" width="3.9833%" height="15" fill="rgb(248,109,41)" fg:x="214496316" fg:w="9797248"/><text x="87.4594%" y="1327.50">serd..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,797,248 samples, 3.98%)</title><rect x="87.2094%" y="1301" width="3.9833%" height="15" fill="rgb(238,23,50)" fg:x="214496316" fg:w="9797248"/><text x="87.4594%" y="1311.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,797,248 samples, 3.98%)</title><rect x="87.2094%" y="1285" width="3.9833%" height="15" fill="rgb(211,48,49)" fg:x="214496316" fg:w="9797248"/><text x="87.4594%" y="1295.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,797,248 samples, 3.98%)</title><rect x="87.2094%" y="1269" width="3.9833%" height="15" fill="rgb(223,36,21)" fg:x="214496316" fg:w="9797248"/><text x="87.4594%" y="1279.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,797,248 samples, 3.98%)</title><rect x="87.2094%" y="1253" width="3.9833%" height="15" fill="rgb(207,123,46)" fg:x="214496316" fg:w="9797248"/><text x="87.4594%" y="1263.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,797,248 samples, 3.98%)</title><rect x="87.2094%" y="1237" width="3.9833%" height="15" fill="rgb(240,218,32)" fg:x="214496316" fg:w="9797248"/><text x="87.4594%" y="1247.50">&lt;ser..</text></g><g><title>serde::de::MapAccess::next_entry (9,797,248 samples, 3.98%)</title><rect x="87.2094%" y="1221" width="3.9833%" height="15" fill="rgb(252,5,43)" fg:x="214496316" fg:w="9797248"/><text x="87.4594%" y="1231.50">serd..</text></g><g><title>serde::de::MapAccess::next_entry_seed (9,797,248 samples, 3.98%)</title><rect x="87.2094%" y="1205" width="3.9833%" height="15" fill="rgb(252,84,19)" fg:x="214496316" fg:w="9797248"/><text x="87.4594%" y="1215.50">serd..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (9,797,248 samples, 3.98%)</title><rect x="87.2094%" y="1189" width="3.9833%" height="15" fill="rgb(243,152,39)" fg:x="214496316" fg:w="9797248"/><text x="87.4594%" y="1199.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,797,248 samples, 3.98%)</title><rect x="87.2094%" y="1173" width="3.9833%" height="15" fill="rgb(234,160,15)" fg:x="214496316" fg:w="9797248"/><text x="87.4594%" y="1183.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,797,248 samples, 3.98%)</title><rect x="87.2094%" y="1157" width="3.9833%" height="15" fill="rgb(237,34,20)" fg:x="214496316" fg:w="9797248"/><text x="87.4594%" y="1167.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,797,248 samples, 3.98%)</title><rect x="87.2094%" y="1141" width="3.9833%" height="15" fill="rgb(229,97,13)" fg:x="214496316" fg:w="9797248"/><text x="87.4594%" y="1151.50">&lt;&amp;mu..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (451,216 samples, 0.18%)</title><rect x="91.0093%" y="1125" width="0.1835%" height="15" fill="rgb(234,71,50)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="1135.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (451,216 samples, 0.18%)</title><rect x="91.0093%" y="1109" width="0.1835%" height="15" fill="rgb(253,155,4)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="1119.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (451,216 samples, 0.18%)</title><rect x="91.0093%" y="1093" width="0.1835%" height="15" fill="rgb(222,185,37)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="1103.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (451,216 samples, 0.18%)</title><rect x="91.0093%" y="1077" width="0.1835%" height="15" fill="rgb(251,177,13)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (451,216 samples, 0.18%)</title><rect x="91.0093%" y="1061" width="0.1835%" height="15" fill="rgb(250,179,40)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (451,216 samples, 0.18%)</title><rect x="91.0093%" y="1045" width="0.1835%" height="15" fill="rgb(242,44,2)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (451,216 samples, 0.18%)</title><rect x="91.0093%" y="1029" width="0.1835%" height="15" fill="rgb(216,177,13)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (451,216 samples, 0.18%)</title><rect x="91.0093%" y="1013" width="0.1835%" height="15" fill="rgb(216,106,43)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (451,216 samples, 0.18%)</title><rect x="91.0093%" y="997" width="0.1835%" height="15" fill="rgb(216,183,2)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (451,216 samples, 0.18%)</title><rect x="91.0093%" y="981" width="0.1835%" height="15" fill="rgb(249,75,3)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (451,216 samples, 0.18%)</title><rect x="91.0093%" y="965" width="0.1835%" height="15" fill="rgb(219,67,39)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (451,216 samples, 0.18%)</title><rect x="91.0093%" y="949" width="0.1835%" height="15" fill="rgb(253,228,2)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (451,216 samples, 0.18%)</title><rect x="91.0093%" y="933" width="0.1835%" height="15" fill="rgb(235,138,27)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (451,216 samples, 0.18%)</title><rect x="91.0093%" y="917" width="0.1835%" height="15" fill="rgb(236,97,51)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (451,216 samples, 0.18%)</title><rect x="91.0093%" y="901" width="0.1835%" height="15" fill="rgb(240,80,30)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="911.50"></text></g><g><title>alloc::alloc::alloc (451,216 samples, 0.18%)</title><rect x="91.0093%" y="885" width="0.1835%" height="15" fill="rgb(230,178,19)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="895.50"></text></g><g><title>malloc (451,216 samples, 0.18%)</title><rect x="91.0093%" y="869" width="0.1835%" height="15" fill="rgb(210,190,27)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="879.50"></text></g><g><title>[libc.so.6] (451,216 samples, 0.18%)</title><rect x="91.0093%" y="853" width="0.1835%" height="15" fill="rgb(222,107,31)" fg:x="223842348" fg:w="451216"/><text x="91.2593%" y="863.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2,085,259 samples, 0.85%)</title><rect x="91.1928%" y="1573" width="0.8478%" height="15" fill="rgb(216,127,34)" fg:x="224293564" fg:w="2085259"/><text x="91.4428%" y="1583.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (2,085,259 samples, 0.85%)</title><rect x="91.1928%" y="1557" width="0.8478%" height="15" fill="rgb(234,116,52)" fg:x="224293564" fg:w="2085259"/><text x="91.4428%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (2,085,259 samples, 0.85%)</title><rect x="91.1928%" y="1541" width="0.8478%" height="15" fill="rgb(222,124,15)" fg:x="224293564" fg:w="2085259"/><text x="91.4428%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (2,085,259 samples, 0.85%)</title><rect x="91.1928%" y="1525" width="0.8478%" height="15" fill="rgb(231,179,28)" fg:x="224293564" fg:w="2085259"/><text x="91.4428%" y="1535.50"></text></g><g><title>core::intrinsics::copy (2,085,259 samples, 0.85%)</title><rect x="91.1928%" y="1509" width="0.8478%" height="15" fill="rgb(226,93,45)" fg:x="224293564" fg:w="2085259"/><text x="91.4428%" y="1519.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15,181,255 samples, 6.17%)</title><rect x="86.2235%" y="1653" width="6.1724%" height="15" fill="rgb(215,8,51)" fg:x="212071260" fg:w="15181255"/><text x="86.4735%" y="1663.50">&lt;serde_j..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,958,951 samples, 1.20%)</title><rect x="91.1928%" y="1637" width="1.2030%" height="15" fill="rgb(223,106,5)" fg:x="224293564" fg:w="2958951"/><text x="91.4428%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,958,951 samples, 1.20%)</title><rect x="91.1928%" y="1621" width="1.2030%" height="15" fill="rgb(250,191,5)" fg:x="224293564" fg:w="2958951"/><text x="91.4428%" y="1631.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2,958,951 samples, 1.20%)</title><rect x="91.1928%" y="1605" width="1.2030%" height="15" fill="rgb(242,132,44)" fg:x="224293564" fg:w="2958951"/><text x="91.4428%" y="1615.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (2,958,951 samples, 1.20%)</title><rect x="91.1928%" y="1589" width="1.2030%" height="15" fill="rgb(251,152,29)" fg:x="224293564" fg:w="2958951"/><text x="91.4428%" y="1599.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (873,692 samples, 0.36%)</title><rect x="92.0406%" y="1573" width="0.3552%" height="15" fill="rgb(218,179,5)" fg:x="226378823" fg:w="873692"/><text x="92.2906%" y="1583.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (873,692 samples, 0.36%)</title><rect x="92.0406%" y="1557" width="0.3552%" height="15" fill="rgb(227,67,19)" fg:x="226378823" fg:w="873692"/><text x="92.2906%" y="1567.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (873,692 samples, 0.36%)</title><rect x="92.0406%" y="1541" width="0.3552%" height="15" fill="rgb(233,119,31)" fg:x="226378823" fg:w="873692"/><text x="92.2906%" y="1551.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (873,692 samples, 0.36%)</title><rect x="92.0406%" y="1525" width="0.3552%" height="15" fill="rgb(241,120,22)" fg:x="226378823" fg:w="873692"/><text x="92.2906%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (873,692 samples, 0.36%)</title><rect x="92.0406%" y="1509" width="0.3552%" height="15" fill="rgb(224,102,30)" fg:x="226378823" fg:w="873692"/><text x="92.2906%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (873,692 samples, 0.36%)</title><rect x="92.0406%" y="1493" width="0.3552%" height="15" fill="rgb(210,164,37)" fg:x="226378823" fg:w="873692"/><text x="92.2906%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (873,692 samples, 0.36%)</title><rect x="92.0406%" y="1477" width="0.3552%" height="15" fill="rgb(226,191,16)" fg:x="226378823" fg:w="873692"/><text x="92.2906%" y="1487.50"></text></g><g><title>malloc (873,692 samples, 0.36%)</title><rect x="92.0406%" y="1461" width="0.3552%" height="15" fill="rgb(214,40,45)" fg:x="226378823" fg:w="873692"/><text x="92.2906%" y="1471.50"></text></g><g><title>[libc.so.6] (873,692 samples, 0.36%)</title><rect x="92.0406%" y="1445" width="0.3552%" height="15" fill="rgb(244,29,26)" fg:x="226378823" fg:w="873692"/><text x="92.2906%" y="1455.50"></text></g><g><title>benchmark::parse_web_layout_trace (21,914,185 samples, 8.91%)</title><rect x="84.4016%" y="1845" width="8.9098%" height="15" fill="rgb(216,16,5)" fg:x="207590239" fg:w="21914185"/><text x="84.6516%" y="1855.50">benchmark::pa..</text></g><g><title>serde_json::de::from_str (21,914,185 samples, 8.91%)</title><rect x="84.4016%" y="1829" width="8.9098%" height="15" fill="rgb(249,76,35)" fg:x="207590239" fg:w="21914185"/><text x="84.6516%" y="1839.50">serde_json::d..</text></g><g><title>serde_json::de::from_trait (21,914,185 samples, 8.91%)</title><rect x="84.4016%" y="1813" width="8.9098%" height="15" fill="rgb(207,11,44)" fg:x="207590239" fg:w="21914185"/><text x="84.6516%" y="1823.50">serde_json::d..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (21,914,185 samples, 8.91%)</title><rect x="84.4016%" y="1797" width="8.9098%" height="15" fill="rgb(228,190,49)" fg:x="207590239" fg:w="21914185"/><text x="84.6516%" y="1807.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21,914,185 samples, 8.91%)</title><rect x="84.4016%" y="1781" width="8.9098%" height="15" fill="rgb(214,173,12)" fg:x="207590239" fg:w="21914185"/><text x="84.6516%" y="1791.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (21,914,185 samples, 8.91%)</title><rect x="84.4016%" y="1765" width="8.9098%" height="15" fill="rgb(218,26,35)" fg:x="207590239" fg:w="21914185"/><text x="84.6516%" y="1775.50">&lt;serde_json::..</text></g><g><title>serde::de::MapAccess::next_entry (21,914,185 samples, 8.91%)</title><rect x="84.4016%" y="1749" width="8.9098%" height="15" fill="rgb(220,200,19)" fg:x="207590239" fg:w="21914185"/><text x="84.6516%" y="1759.50">serde::de::Ma..</text></g><g><title>serde::de::MapAccess::next_entry_seed (21,914,185 samples, 8.91%)</title><rect x="84.4016%" y="1733" width="8.9098%" height="15" fill="rgb(239,95,49)" fg:x="207590239" fg:w="21914185"/><text x="84.6516%" y="1743.50">serde::de::Ma..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (19,578,696 samples, 7.96%)</title><rect x="85.3511%" y="1717" width="7.9603%" height="15" fill="rgb(235,85,53)" fg:x="209925728" fg:w="19578696"/><text x="85.6011%" y="1727.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19,578,696 samples, 7.96%)</title><rect x="85.3511%" y="1701" width="7.9603%" height="15" fill="rgb(233,133,31)" fg:x="209925728" fg:w="19578696"/><text x="85.6011%" y="1711.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,578,696 samples, 7.96%)</title><rect x="85.3511%" y="1685" width="7.9603%" height="15" fill="rgb(218,25,20)" fg:x="209925728" fg:w="19578696"/><text x="85.6011%" y="1695.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,578,696 samples, 7.96%)</title><rect x="85.3511%" y="1669" width="7.9603%" height="15" fill="rgb(252,210,38)" fg:x="209925728" fg:w="19578696"/><text x="85.6011%" y="1679.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,251,909 samples, 0.92%)</title><rect x="92.3958%" y="1653" width="0.9156%" height="15" fill="rgb(242,134,21)" fg:x="227252515" fg:w="2251909"/><text x="92.6458%" y="1663.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,251,909 samples, 0.92%)</title><rect x="92.3958%" y="1637" width="0.9156%" height="15" fill="rgb(213,28,48)" fg:x="227252515" fg:w="2251909"/><text x="92.6458%" y="1647.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,251,909 samples, 0.92%)</title><rect x="92.3958%" y="1621" width="0.9156%" height="15" fill="rgb(250,196,2)" fg:x="227252515" fg:w="2251909"/><text x="92.6458%" y="1631.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,251,909 samples, 0.92%)</title><rect x="92.3958%" y="1605" width="0.9156%" height="15" fill="rgb(227,5,17)" fg:x="227252515" fg:w="2251909"/><text x="92.6458%" y="1615.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,251,909 samples, 0.92%)</title><rect x="92.3958%" y="1589" width="0.9156%" height="15" fill="rgb(221,226,24)" fg:x="227252515" fg:w="2251909"/><text x="92.6458%" y="1599.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,251,909 samples, 0.92%)</title><rect x="92.3958%" y="1573" width="0.9156%" height="15" fill="rgb(211,5,48)" fg:x="227252515" fg:w="2251909"/><text x="92.6458%" y="1583.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2,925,971 samples, 1.19%)</title><rect x="93.3114%" y="773" width="1.1896%" height="15" fill="rgb(219,150,6)" fg:x="229504424" fg:w="2925971"/><text x="93.5614%" y="783.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (2,925,971 samples, 1.19%)</title><rect x="93.3114%" y="757" width="1.1896%" height="15" fill="rgb(251,46,16)" fg:x="229504424" fg:w="2925971"/><text x="93.5614%" y="767.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (2,925,971 samples, 1.19%)</title><rect x="93.3114%" y="741" width="1.1896%" height="15" fill="rgb(220,204,40)" fg:x="229504424" fg:w="2925971"/><text x="93.5614%" y="751.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (2,925,971 samples, 1.19%)</title><rect x="93.3114%" y="725" width="1.1896%" height="15" fill="rgb(211,85,2)" fg:x="229504424" fg:w="2925971"/><text x="93.5614%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,925,971 samples, 1.19%)</title><rect x="93.3114%" y="709" width="1.1896%" height="15" fill="rgb(229,17,7)" fg:x="229504424" fg:w="2925971"/><text x="93.5614%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (2,925,971 samples, 1.19%)</title><rect x="93.3114%" y="693" width="1.1896%" height="15" fill="rgb(239,72,28)" fg:x="229504424" fg:w="2925971"/><text x="93.5614%" y="703.50"></text></g><g><title>cfree (2,925,971 samples, 1.19%)</title><rect x="93.3114%" y="677" width="1.1896%" height="15" fill="rgb(230,47,54)" fg:x="229504424" fg:w="2925971"/><text x="93.5614%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1829" width="2.3506%" height="15" fill="rgb(214,50,8)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1839.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1813" width="2.3506%" height="15" fill="rgb(216,198,43)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1823.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1797" width="2.3506%" height="15" fill="rgb(234,20,35)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1807.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1781" width="2.3506%" height="15" fill="rgb(254,45,19)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1791.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1765" width="2.3506%" height="15" fill="rgb(219,14,44)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1775.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1749" width="2.3506%" height="15" fill="rgb(217,220,26)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1759.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1733" width="2.3506%" height="15" fill="rgb(213,158,28)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1743.50">&lt;..</text></g><g><title>core::mem::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1717" width="2.3506%" height="15" fill="rgb(252,51,52)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1727.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1701" width="2.3506%" height="15" fill="rgb(246,89,16)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1711.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1685" width="2.3506%" height="15" fill="rgb(216,158,49)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1695.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1669" width="2.3506%" height="15" fill="rgb(236,107,19)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1679.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1653" width="2.3506%" height="15" fill="rgb(228,185,30)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1663.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1637" width="2.3506%" height="15" fill="rgb(246,134,8)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1647.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1621" width="2.3506%" height="15" fill="rgb(214,143,50)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1631.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1605" width="2.3506%" height="15" fill="rgb(228,75,8)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1615.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1589" width="2.3506%" height="15" fill="rgb(207,175,4)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1599.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1573" width="2.3506%" height="15" fill="rgb(205,108,24)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1583.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1557" width="2.3506%" height="15" fill="rgb(244,120,49)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1567.50">&lt;..</text></g><g><title>core::mem::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1541" width="2.3506%" height="15" fill="rgb(223,47,38)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1551.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1525" width="2.3506%" height="15" fill="rgb(229,179,11)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1535.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1509" width="2.3506%" height="15" fill="rgb(231,122,1)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1519.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1493" width="2.3506%" height="15" fill="rgb(245,119,9)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1503.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1477" width="2.3506%" height="15" fill="rgb(241,163,25)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1487.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1461" width="2.3506%" height="15" fill="rgb(217,214,3)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1471.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1445" width="2.3506%" height="15" fill="rgb(240,86,28)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1455.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1429" width="2.3506%" height="15" fill="rgb(215,47,9)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1439.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1413" width="2.3506%" height="15" fill="rgb(252,25,45)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1423.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1397" width="2.3506%" height="15" fill="rgb(251,164,9)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1407.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1381" width="2.3506%" height="15" fill="rgb(233,194,0)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1391.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1365" width="2.3506%" height="15" fill="rgb(249,111,24)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1375.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1349" width="2.3506%" height="15" fill="rgb(250,223,3)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1359.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1333" width="2.3506%" height="15" fill="rgb(236,178,37)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1343.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1317" width="2.3506%" height="15" fill="rgb(241,158,50)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1327.50">&lt;..</text></g><g><title>core::mem::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1301" width="2.3506%" height="15" fill="rgb(213,121,41)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1311.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1285" width="2.3506%" height="15" fill="rgb(240,92,3)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1295.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1269" width="2.3506%" height="15" fill="rgb(205,123,3)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1279.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1253" width="2.3506%" height="15" fill="rgb(205,97,47)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1263.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1237" width="2.3506%" height="15" fill="rgb(247,152,14)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1247.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1221" width="2.3506%" height="15" fill="rgb(248,195,53)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1231.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1205" width="2.3506%" height="15" fill="rgb(226,201,16)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1215.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1189" width="2.3506%" height="15" fill="rgb(205,98,0)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1199.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1173" width="2.3506%" height="15" fill="rgb(214,191,48)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1183.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1157" width="2.3506%" height="15" fill="rgb(237,112,39)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1167.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1141" width="2.3506%" height="15" fill="rgb(247,203,27)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1151.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1125" width="2.3506%" height="15" fill="rgb(235,124,28)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1135.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1109" width="2.3506%" height="15" fill="rgb(208,207,46)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1119.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1093" width="2.3506%" height="15" fill="rgb(234,176,4)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1103.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1077" width="2.3506%" height="15" fill="rgb(230,133,28)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1087.50">&lt;..</text></g><g><title>core::mem::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1061" width="2.3506%" height="15" fill="rgb(211,137,40)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1071.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1045" width="2.3506%" height="15" fill="rgb(254,35,13)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1055.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1029" width="2.3506%" height="15" fill="rgb(225,49,51)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1039.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="1013" width="2.3506%" height="15" fill="rgb(251,10,15)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1023.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="997" width="2.3506%" height="15" fill="rgb(228,207,15)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="1007.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="981" width="2.3506%" height="15" fill="rgb(241,99,19)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="991.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="965" width="2.3506%" height="15" fill="rgb(207,104,49)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="975.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="949" width="2.3506%" height="15" fill="rgb(234,99,18)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="959.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="933" width="2.3506%" height="15" fill="rgb(213,191,49)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="943.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="917" width="2.3506%" height="15" fill="rgb(210,226,19)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="927.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="901" width="2.3506%" height="15" fill="rgb(229,97,18)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="911.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="885" width="2.3506%" height="15" fill="rgb(211,167,15)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="895.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="869" width="2.3506%" height="15" fill="rgb(210,169,34)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="879.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="853" width="2.3506%" height="15" fill="rgb(241,121,31)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="863.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="837" width="2.3506%" height="15" fill="rgb(232,40,11)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="847.50">&lt;..</text></g><g><title>core::mem::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="821" width="2.3506%" height="15" fill="rgb(205,86,26)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="831.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="805" width="2.3506%" height="15" fill="rgb(231,126,28)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="815.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,781,375 samples, 2.35%)</title><rect x="93.3114%" y="789" width="2.3506%" height="15" fill="rgb(219,221,18)" fg:x="229504424" fg:w="5781375"/><text x="93.5614%" y="799.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="773" width="1.1609%" height="15" fill="rgb(211,40,0)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="757" width="1.1609%" height="15" fill="rgb(239,85,43)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="741" width="1.1609%" height="15" fill="rgb(231,55,21)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="751.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="725" width="1.1609%" height="15" fill="rgb(225,184,43)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="709" width="1.1609%" height="15" fill="rgb(251,158,41)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="693" width="1.1609%" height="15" fill="rgb(234,159,37)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="677" width="1.1609%" height="15" fill="rgb(216,204,22)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="661" width="1.1609%" height="15" fill="rgb(214,17,3)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="645" width="1.1609%" height="15" fill="rgb(212,111,17)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="629" width="1.1609%" height="15" fill="rgb(221,157,24)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="613" width="1.1609%" height="15" fill="rgb(252,16,13)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="597" width="1.1609%" height="15" fill="rgb(221,62,2)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="607.50"></text></g><g><title>core::mem::drop (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="581" width="1.1609%" height="15" fill="rgb(247,87,22)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="565" width="1.1609%" height="15" fill="rgb(215,73,9)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="549" width="1.1609%" height="15" fill="rgb(207,175,33)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="533" width="1.1609%" height="15" fill="rgb(243,129,54)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="517" width="1.1609%" height="15" fill="rgb(227,119,45)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="501" width="1.1609%" height="15" fill="rgb(205,109,36)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="485" width="1.1609%" height="15" fill="rgb(205,6,39)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="469" width="1.1609%" height="15" fill="rgb(221,32,16)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="453" width="1.1609%" height="15" fill="rgb(228,144,50)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="437" width="1.1609%" height="15" fill="rgb(229,201,53)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="421" width="1.1609%" height="15" fill="rgb(249,153,27)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="405" width="1.1609%" height="15" fill="rgb(227,106,25)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="415.50"></text></g><g><title>cfree (2,855,404 samples, 1.16%)</title><rect x="94.5010%" y="389" width="1.1609%" height="15" fill="rgb(230,65,29)" fg:x="232430395" fg:w="2855404"/><text x="94.7510%" y="399.50"></text></g><g><title>std::panic::catch_unwind (215,949,271 samples, 87.80%)</title><rect x="9.0416%" y="1989" width="87.8002%" height="15" fill="rgb(221,57,46)" fg:x="22238182" fg:w="215949271"/><text x="9.2916%" y="1999.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (215,949,271 samples, 87.80%)</title><rect x="9.0416%" y="1973" width="87.8002%" height="15" fill="rgb(229,161,17)" fg:x="22238182" fg:w="215949271"/><text x="9.2916%" y="1983.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (215,949,271 samples, 87.80%)</title><rect x="9.0416%" y="1957" width="87.8002%" height="15" fill="rgb(222,213,11)" fg:x="22238182" fg:w="215949271"/><text x="9.2916%" y="1967.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (215,949,271 samples, 87.80%)</title><rect x="9.0416%" y="1941" width="87.8002%" height="15" fill="rgb(235,35,13)" fg:x="22238182" fg:w="215949271"/><text x="9.2916%" y="1951.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (215,949,271 samples, 87.80%)</title><rect x="9.0416%" y="1925" width="87.8002%" height="15" fill="rgb(233,158,34)" fg:x="22238182" fg:w="215949271"/><text x="9.2916%" y="1935.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (215,949,271 samples, 87.80%)</title><rect x="9.0416%" y="1909" width="87.8002%" height="15" fill="rgb(215,151,48)" fg:x="22238182" fg:w="215949271"/><text x="9.2916%" y="1919.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (215,949,271 samples, 87.80%)</title><rect x="9.0416%" y="1893" width="87.8002%" height="15" fill="rgb(229,84,14)" fg:x="22238182" fg:w="215949271"/><text x="9.2916%" y="1903.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (215,949,271 samples, 87.80%)</title><rect x="9.0416%" y="1877" width="87.8002%" height="15" fill="rgb(229,68,14)" fg:x="22238182" fg:w="215949271"/><text x="9.2916%" y="1887.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (215,949,271 samples, 87.80%)</title><rect x="9.0416%" y="1861" width="87.8002%" height="15" fill="rgb(243,106,26)" fg:x="22238182" fg:w="215949271"/><text x="9.2916%" y="1871.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (8,683,029 samples, 3.53%)</title><rect x="93.3114%" y="1845" width="3.5303%" height="15" fill="rgb(206,45,38)" fg:x="229504424" fg:w="8683029"/><text x="93.5614%" y="1855.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (2,901,654 samples, 1.18%)</title><rect x="95.6620%" y="1829" width="1.1797%" height="15" fill="rgb(226,6,15)" fg:x="235285799" fg:w="2901654"/><text x="95.9120%" y="1839.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,901,654 samples, 1.18%)</title><rect x="95.6620%" y="1813" width="1.1797%" height="15" fill="rgb(232,22,54)" fg:x="235285799" fg:w="2901654"/><text x="95.9120%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,901,654 samples, 1.18%)</title><rect x="95.6620%" y="1797" width="1.1797%" height="15" fill="rgb(229,222,32)" fg:x="235285799" fg:w="2901654"/><text x="95.9120%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,901,654 samples, 1.18%)</title><rect x="95.6620%" y="1781" width="1.1797%" height="15" fill="rgb(228,62,29)" fg:x="235285799" fg:w="2901654"/><text x="95.9120%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (2,901,654 samples, 1.18%)</title><rect x="95.6620%" y="1765" width="1.1797%" height="15" fill="rgb(251,103,34)" fg:x="235285799" fg:w="2901654"/><text x="95.9120%" y="1775.50"></text></g><g><title>cfree (2,901,654 samples, 1.18%)</title><rect x="95.6620%" y="1749" width="1.1797%" height="15" fill="rgb(233,12,30)" fg:x="235285799" fg:w="2901654"/><text x="95.9120%" y="1759.50"></text></g><g><title>[libc.so.6] (2,901,654 samples, 1.18%)</title><rect x="95.6620%" y="1733" width="1.1797%" height="15" fill="rgb(238,52,0)" fg:x="235285799" fg:w="2901654"/><text x="95.9120%" y="1743.50"></text></g><g><title>[libc.so.6] (2,901,654 samples, 1.18%)</title><rect x="95.6620%" y="1717" width="1.1797%" height="15" fill="rgb(223,98,5)" fg:x="235285799" fg:w="2901654"/><text x="95.9120%" y="1727.50"></text></g><g><title>_start (219,388,966 samples, 89.20%)</title><rect x="7.8469%" y="2133" width="89.1987%" height="15" fill="rgb(228,75,37)" fg:x="19299991" fg:w="219388966"/><text x="8.0969%" y="2143.50">_start</text></g><g><title>__libc_start_main (219,388,966 samples, 89.20%)</title><rect x="7.8469%" y="2117" width="89.1987%" height="15" fill="rgb(205,115,49)" fg:x="19299991" fg:w="219388966"/><text x="8.0969%" y="2127.50">__libc_start_main</text></g><g><title>[libc.so.6] (219,388,966 samples, 89.20%)</title><rect x="7.8469%" y="2101" width="89.1987%" height="15" fill="rgb(250,154,43)" fg:x="19299991" fg:w="219388966"/><text x="8.0969%" y="2111.50">[libc.so.6]</text></g><g><title>main (216,450,775 samples, 88.00%)</title><rect x="9.0416%" y="2085" width="88.0041%" height="15" fill="rgb(226,43,29)" fg:x="22238182" fg:w="216450775"/><text x="9.2916%" y="2095.50">main</text></g><g><title>std::rt::lang_start_internal (216,450,775 samples, 88.00%)</title><rect x="9.0416%" y="2069" width="88.0041%" height="15" fill="rgb(249,228,39)" fg:x="22238182" fg:w="216450775"/><text x="9.2916%" y="2079.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (216,450,775 samples, 88.00%)</title><rect x="9.0416%" y="2053" width="88.0041%" height="15" fill="rgb(216,79,43)" fg:x="22238182" fg:w="216450775"/><text x="9.2916%" y="2063.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (216,450,775 samples, 88.00%)</title><rect x="9.0416%" y="2037" width="88.0041%" height="15" fill="rgb(228,95,12)" fg:x="22238182" fg:w="216450775"/><text x="9.2916%" y="2047.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (216,450,775 samples, 88.00%)</title><rect x="9.0416%" y="2021" width="88.0041%" height="15" fill="rgb(249,221,15)" fg:x="22238182" fg:w="216450775"/><text x="9.2916%" y="2031.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (216,450,775 samples, 88.00%)</title><rect x="9.0416%" y="2005" width="88.0041%" height="15" fill="rgb(233,34,13)" fg:x="22238182" fg:w="216450775"/><text x="9.2916%" y="2015.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::rt::init (501,504 samples, 0.20%)</title><rect x="96.8417%" y="1989" width="0.2039%" height="15" fill="rgb(214,103,39)" fg:x="238187453" fg:w="501504"/><text x="97.0917%" y="1999.50"></text></g><g><title>std::sys::pal::unix::init (501,504 samples, 0.20%)</title><rect x="96.8417%" y="1973" width="0.2039%" height="15" fill="rgb(251,126,39)" fg:x="238187453" fg:w="501504"/><text x="97.0917%" y="1983.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::init (501,504 samples, 0.20%)</title><rect x="96.8417%" y="1957" width="0.2039%" height="15" fill="rgb(214,216,36)" fg:x="238187453" fg:w="501504"/><text x="97.0917%" y="1967.50"></text></g><g><title>__libc_sigaction (501,504 samples, 0.20%)</title><rect x="96.8417%" y="1941" width="0.2039%" height="15" fill="rgb(220,221,8)" fg:x="238187453" fg:w="501504"/><text x="97.0917%" y="1951.50"></text></g><g><title>[unknown] (501,504 samples, 0.20%)</title><rect x="96.8417%" y="1925" width="0.2039%" height="15" fill="rgb(240,216,3)" fg:x="238187453" fg:w="501504"/><text x="97.0917%" y="1935.50"></text></g><g><title>cfree (2,388,432 samples, 0.97%)</title><rect x="97.0456%" y="2133" width="0.9711%" height="15" fill="rgb(232,218,17)" fg:x="238688957" fg:w="2388432"/><text x="97.2956%" y="2143.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,909,926 samples, 1.18%)</title><rect x="98.0167%" y="2133" width="1.1831%" height="15" fill="rgb(229,163,45)" fg:x="241077389" fg:w="2909926"/><text x="98.2667%" y="2143.50"></text></g><g><title>all (245,955,389 samples, 100%)</title><rect x="0.0000%" y="2165" width="100.0000%" height="15" fill="rgb(231,110,42)" fg:x="0" fg:w="245955389"/><text x="0.2500%" y="2175.50"></text></g><g><title>benchmark (245,955,389 samples, 100.00%)</title><rect x="0.0000%" y="2149" width="100.0000%" height="15" fill="rgb(208,170,48)" fg:x="0" fg:w="245955389"/><text x="0.2500%" y="2159.50">benchmark</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,968,074 samples, 0.80%)</title><rect x="99.1998%" y="2133" width="0.8002%" height="15" fill="rgb(239,116,25)" fg:x="243987315" fg:w="1968074"/><text x="99.4498%" y="2143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,968,074 samples, 0.80%)</title><rect x="99.1998%" y="2117" width="0.8002%" height="15" fill="rgb(219,200,50)" fg:x="243987315" fg:w="1968074"/><text x="99.4498%" y="2127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,968,074 samples, 0.80%)</title><rect x="99.1998%" y="2101" width="0.8002%" height="15" fill="rgb(245,200,0)" fg:x="243987315" fg:w="1968074"/><text x="99.4498%" y="2111.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,968,074 samples, 0.80%)</title><rect x="99.1998%" y="2085" width="0.8002%" height="15" fill="rgb(245,119,33)" fg:x="243987315" fg:w="1968074"/><text x="99.4498%" y="2095.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,968,074 samples, 0.80%)</title><rect x="99.1998%" y="2069" width="0.8002%" height="15" fill="rgb(231,125,12)" fg:x="243987315" fg:w="1968074"/><text x="99.4498%" y="2079.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,968,074 samples, 0.80%)</title><rect x="99.1998%" y="2053" width="0.8002%" height="15" fill="rgb(216,96,41)" fg:x="243987315" fg:w="1968074"/><text x="99.4498%" y="2063.50"></text></g></svg></svg>