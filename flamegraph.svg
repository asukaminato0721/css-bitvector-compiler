<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2358" onload="init(evt)" viewBox="0 0 1200 2358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2358" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2341.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2341.00"> </text><svg id="frames" x="10" width="1180" total_samples="225516341"><g><title>[libc.so.6] (8,576,328 samples, 3.80%)</title><rect x="0.0000%" y="2277" width="3.8030%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8576328"/><text x="0.2500%" y="2287.50">[lib..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,223,104 samples, 1.43%)</title><rect x="3.8030%" y="2261" width="1.4292%" height="15" fill="rgb(217,0,24)" fg:x="8576328" fg:w="3223104"/><text x="4.0530%" y="2271.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (3,223,104 samples, 1.43%)</title><rect x="3.8030%" y="2245" width="1.4292%" height="15" fill="rgb(221,193,54)" fg:x="8576328" fg:w="3223104"/><text x="4.0530%" y="2255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (2,636,661 samples, 1.17%)</title><rect x="5.2322%" y="2261" width="1.1692%" height="15" fill="rgb(248,212,6)" fg:x="11799432" fg:w="2636661"/><text x="5.4822%" y="2271.50"></text></g><g><title>[unknown] (8,853,791 samples, 3.93%)</title><rect x="3.8030%" y="2277" width="3.9260%" height="15" fill="rgb(208,68,35)" fg:x="8576328" fg:w="8853791"/><text x="4.0530%" y="2287.50">[unk..</text></g><g><title>benchmark::clear_dirty_flags (2,994,026 samples, 1.33%)</title><rect x="6.4014%" y="2261" width="1.3276%" height="15" fill="rgb(232,128,0)" fg:x="14436093" fg:w="2994026"/><text x="6.6514%" y="2271.50"></text></g><g><title>__rdl_dealloc (3,201,189 samples, 1.42%)</title><rect x="7.7290%" y="2277" width="1.4195%" height="15" fill="rgb(207,160,47)" fg:x="17430119" fg:w="3201189"/><text x="7.9790%" y="2287.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,201,189 samples, 1.42%)</title><rect x="7.7290%" y="2261" width="1.4195%" height="15" fill="rgb(228,23,34)" fg:x="17430119" fg:w="3201189"/><text x="7.9790%" y="2271.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1989" width="1.1029%" height="15" fill="rgb(218,30,26)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1999.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1973" width="1.1029%" height="15" fill="rgb(220,122,19)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1983.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1957" width="1.1029%" height="15" fill="rgb(250,228,42)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1967.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1941" width="1.1029%" height="15" fill="rgb(240,193,28)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1925" width="1.1029%" height="15" fill="rgb(216,20,37)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1935.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1909" width="1.1029%" height="15" fill="rgb(206,188,39)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1919.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1893" width="1.1029%" height="15" fill="rgb(217,207,13)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1903.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1877" width="1.1029%" height="15" fill="rgb(231,73,38)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1861" width="1.1029%" height="15" fill="rgb(225,20,46)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1871.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1845" width="1.1029%" height="15" fill="rgb(210,31,41)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1829" width="1.1029%" height="15" fill="rgb(221,200,47)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1813" width="1.1029%" height="15" fill="rgb(226,26,5)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1823.50"></text></g><g><title>alloc::slice::hack::to_vec (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1797" width="1.1029%" height="15" fill="rgb(249,33,26)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1781" width="1.1029%" height="15" fill="rgb(235,183,28)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1791.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1765" width="1.1029%" height="15" fill="rgb(221,5,38)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1775.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1749" width="1.1029%" height="15" fill="rgb(247,18,42)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1759.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1733" width="1.1029%" height="15" fill="rgb(241,131,45)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1743.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1717" width="1.1029%" height="15" fill="rgb(249,31,29)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1727.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1701" width="1.1029%" height="15" fill="rgb(225,111,53)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1685" width="1.1029%" height="15" fill="rgb(238,160,17)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1669" width="1.1029%" height="15" fill="rgb(214,148,48)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1653" width="1.1029%" height="15" fill="rgb(232,36,49)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1637" width="1.1029%" height="15" fill="rgb(209,103,24)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1647.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1621" width="1.1029%" height="15" fill="rgb(229,88,8)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1631.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1605" width="1.1029%" height="15" fill="rgb(213,181,19)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1589" width="1.1029%" height="15" fill="rgb(254,191,54)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1599.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1573" width="1.1029%" height="15" fill="rgb(241,83,37)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1583.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1557" width="1.1029%" height="15" fill="rgb(233,36,39)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1541" width="1.1029%" height="15" fill="rgb(226,3,54)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1551.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1525" width="1.1029%" height="15" fill="rgb(245,192,40)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1535.50"></text></g><g><title>alloc::slice::hack::to_vec (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1509" width="1.1029%" height="15" fill="rgb(238,167,29)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1519.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1493" width="1.1029%" height="15" fill="rgb(232,182,51)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1503.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1477" width="1.1029%" height="15" fill="rgb(231,60,39)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1487.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1461" width="1.1029%" height="15" fill="rgb(208,69,12)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1471.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1445" width="1.1029%" height="15" fill="rgb(235,93,37)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1429" width="1.1029%" height="15" fill="rgb(213,116,39)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1439.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1413" width="1.1029%" height="15" fill="rgb(222,207,29)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1397" width="1.1029%" height="15" fill="rgb(206,96,30)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1381" width="1.1029%" height="15" fill="rgb(218,138,4)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1391.50"></text></g><g><title>alloc::slice::hack::to_vec (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1365" width="1.1029%" height="15" fill="rgb(250,191,14)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1375.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1349" width="1.1029%" height="15" fill="rgb(239,60,40)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1359.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1333" width="1.1029%" height="15" fill="rgb(206,27,48)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1343.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1317" width="1.1029%" height="15" fill="rgb(225,35,8)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1327.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1301" width="1.1029%" height="15" fill="rgb(250,213,24)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1311.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1285" width="1.1029%" height="15" fill="rgb(247,123,22)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1295.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1269" width="1.1029%" height="15" fill="rgb(231,138,38)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1279.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1253" width="1.1029%" height="15" fill="rgb(231,145,46)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1237" width="1.1029%" height="15" fill="rgb(251,118,11)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1221" width="1.1029%" height="15" fill="rgb(217,147,25)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1231.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,487,296 samples, 1.10%)</title><rect x="9.1485%" y="1205" width="1.1029%" height="15" fill="rgb(247,81,37)" fg:x="20631308" fg:w="2487296"/><text x="9.3985%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (3,188,706 samples, 1.41%)</title><rect x="10.2514%" y="1973" width="1.4140%" height="15" fill="rgb(209,12,38)" fg:x="23118604" fg:w="3188706"/><text x="10.5014%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,188,706 samples, 1.41%)</title><rect x="10.2514%" y="1957" width="1.4140%" height="15" fill="rgb(227,1,9)" fg:x="23118604" fg:w="3188706"/><text x="10.5014%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,188,706 samples, 1.41%)</title><rect x="10.2514%" y="1941" width="1.4140%" height="15" fill="rgb(248,47,43)" fg:x="23118604" fg:w="3188706"/><text x="10.5014%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,188,706 samples, 1.41%)</title><rect x="10.2514%" y="1925" width="1.4140%" height="15" fill="rgb(221,10,30)" fg:x="23118604" fg:w="3188706"/><text x="10.5014%" y="1935.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,188,706 samples, 1.41%)</title><rect x="10.2514%" y="1909" width="1.4140%" height="15" fill="rgb(210,229,1)" fg:x="23118604" fg:w="3188706"/><text x="10.5014%" y="1919.50"></text></g><g><title>malloc (3,188,706 samples, 1.41%)</title><rect x="10.2514%" y="1893" width="1.4140%" height="15" fill="rgb(222,148,37)" fg:x="23118604" fg:w="3188706"/><text x="10.5014%" y="1903.50"></text></g><g><title>[libc.so.6] (3,188,706 samples, 1.41%)</title><rect x="10.2514%" y="1877" width="1.4140%" height="15" fill="rgb(234,67,33)" fg:x="23118604" fg:w="3188706"/><text x="10.5014%" y="1887.50"></text></g><g><title>[libc.so.6] (3,188,706 samples, 1.41%)</title><rect x="10.2514%" y="1861" width="1.4140%" height="15" fill="rgb(247,98,35)" fg:x="23118604" fg:w="3188706"/><text x="10.5014%" y="1871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,648,948 samples, 1.17%)</title><rect x="11.6654%" y="1941" width="1.1746%" height="15" fill="rgb(247,138,52)" fg:x="26307310" fg:w="2648948"/><text x="11.9154%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,648,948 samples, 1.17%)</title><rect x="11.6654%" y="1925" width="1.1746%" height="15" fill="rgb(213,79,30)" fg:x="26307310" fg:w="2648948"/><text x="11.9154%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,648,948 samples, 1.17%)</title><rect x="11.6654%" y="1909" width="1.1746%" height="15" fill="rgb(246,177,23)" fg:x="26307310" fg:w="2648948"/><text x="11.9154%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,648,948 samples, 1.17%)</title><rect x="11.6654%" y="1893" width="1.1746%" height="15" fill="rgb(230,62,27)" fg:x="26307310" fg:w="2648948"/><text x="11.9154%" y="1903.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,648,948 samples, 1.17%)</title><rect x="11.6654%" y="1877" width="1.1746%" height="15" fill="rgb(216,154,8)" fg:x="26307310" fg:w="2648948"/><text x="11.9154%" y="1887.50"></text></g><g><title>malloc (2,648,948 samples, 1.17%)</title><rect x="11.6654%" y="1861" width="1.1746%" height="15" fill="rgb(244,35,45)" fg:x="26307310" fg:w="2648948"/><text x="11.9154%" y="1871.50"></text></g><g><title>[libc.so.6] (2,648,948 samples, 1.17%)</title><rect x="11.6654%" y="1845" width="1.1746%" height="15" fill="rgb(251,115,12)" fg:x="26307310" fg:w="2648948"/><text x="11.9154%" y="1855.50"></text></g><g><title>[libc.so.6] (2,648,948 samples, 1.17%)</title><rect x="11.6654%" y="1829" width="1.1746%" height="15" fill="rgb(240,54,50)" fg:x="26307310" fg:w="2648948"/><text x="11.9154%" y="1839.50"></text></g><g><title>benchmark::json_to_html_node (5,103,459 samples, 2.26%)</title><rect x="11.6654%" y="1957" width="2.2630%" height="15" fill="rgb(233,84,52)" fg:x="26307310" fg:w="5103459"/><text x="11.9154%" y="1967.50">b..</text></g><g><title>benchmark::json_to_html_node (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1941" width="1.0884%" height="15" fill="rgb(207,117,47)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1951.50"></text></g><g><title>benchmark::json_to_html_node (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1925" width="1.0884%" height="15" fill="rgb(249,43,39)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1935.50"></text></g><g><title>benchmark::json_to_html_node (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1909" width="1.0884%" height="15" fill="rgb(209,38,44)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1919.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1893" width="1.0884%" height="15" fill="rgb(236,212,23)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1903.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1877" width="1.0884%" height="15" fill="rgb(242,79,21)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1887.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1861" width="1.0884%" height="15" fill="rgb(211,96,35)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1871.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1845" width="1.0884%" height="15" fill="rgb(253,215,40)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1855.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1829" width="1.0884%" height="15" fill="rgb(211,81,21)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1813" width="1.0884%" height="15" fill="rgb(208,190,38)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1797" width="1.0884%" height="15" fill="rgb(235,213,38)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1781" width="1.0884%" height="15" fill="rgb(237,122,38)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1765" width="1.0884%" height="15" fill="rgb(244,218,35)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1749" width="1.0884%" height="15" fill="rgb(240,68,47)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1733" width="1.0884%" height="15" fill="rgb(210,16,53)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1717" width="1.0884%" height="15" fill="rgb(235,124,12)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1701" width="1.0884%" height="15" fill="rgb(224,169,11)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1685" width="1.0884%" height="15" fill="rgb(250,166,2)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1669" width="1.0884%" height="15" fill="rgb(242,216,29)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1653" width="1.0884%" height="15" fill="rgb(230,116,27)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1663.50"></text></g><g><title>malloc (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1637" width="1.0884%" height="15" fill="rgb(228,99,48)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1647.50"></text></g><g><title>[libc.so.6] (2,454,511 samples, 1.09%)</title><rect x="12.8400%" y="1621" width="1.0884%" height="15" fill="rgb(253,11,6)" fg:x="28956258" fg:w="2454511"/><text x="13.0900%" y="1631.50"></text></g><g><title>benchmark::apply_frame_modifications (11,517,858 samples, 5.11%)</title><rect x="10.2514%" y="1989" width="5.1073%" height="15" fill="rgb(247,143,39)" fg:x="23118604" fg:w="11517858"/><text x="10.5014%" y="1999.50">benchm..</text></g><g><title>benchmark::json_to_html_node (8,329,152 samples, 3.69%)</title><rect x="11.6654%" y="1973" width="3.6934%" height="15" fill="rgb(236,97,10)" fg:x="26307310" fg:w="8329152"/><text x="11.9154%" y="1983.50">benc..</text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (3,225,693 samples, 1.43%)</title><rect x="13.9284%" y="1957" width="1.4304%" height="15" fill="rgb(233,208,19)" fg:x="31410769" fg:w="3225693"/><text x="14.1784%" y="1967.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (3,225,693 samples, 1.43%)</title><rect x="13.9284%" y="1941" width="1.4304%" height="15" fill="rgb(216,164,2)" fg:x="31410769" fg:w="3225693"/><text x="14.1784%" y="1951.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (3,225,693 samples, 1.43%)</title><rect x="13.9284%" y="1925" width="1.4304%" height="15" fill="rgb(220,129,5)" fg:x="31410769" fg:w="3225693"/><text x="14.1784%" y="1935.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (3,225,693 samples, 1.43%)</title><rect x="13.9284%" y="1909" width="1.4304%" height="15" fill="rgb(242,17,10)" fg:x="31410769" fg:w="3225693"/><text x="14.1784%" y="1919.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (3,225,693 samples, 1.43%)</title><rect x="13.9284%" y="1893" width="1.4304%" height="15" fill="rgb(242,107,0)" fg:x="31410769" fg:w="3225693"/><text x="14.1784%" y="1903.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (3,225,693 samples, 1.43%)</title><rect x="13.9284%" y="1877" width="1.4304%" height="15" fill="rgb(251,28,31)" fg:x="31410769" fg:w="3225693"/><text x="14.1784%" y="1887.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (3,225,693 samples, 1.43%)</title><rect x="13.9284%" y="1861" width="1.4304%" height="15" fill="rgb(233,223,10)" fg:x="31410769" fg:w="3225693"/><text x="14.1784%" y="1871.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (3,225,693 samples, 1.43%)</title><rect x="13.9284%" y="1845" width="1.4304%" height="15" fill="rgb(215,21,27)" fg:x="31410769" fg:w="3225693"/><text x="14.1784%" y="1855.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (3,225,693 samples, 1.43%)</title><rect x="13.9284%" y="1829" width="1.4304%" height="15" fill="rgb(232,23,21)" fg:x="31410769" fg:w="3225693"/><text x="14.1784%" y="1839.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (3,225,693 samples, 1.43%)</title><rect x="13.9284%" y="1813" width="1.4304%" height="15" fill="rgb(244,5,23)" fg:x="31410769" fg:w="3225693"/><text x="14.1784%" y="1823.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (3,225,693 samples, 1.43%)</title><rect x="13.9284%" y="1797" width="1.4304%" height="15" fill="rgb(226,81,46)" fg:x="31410769" fg:w="3225693"/><text x="14.1784%" y="1807.50"></text></g><g><title>[libc.so.6] (3,225,693 samples, 1.43%)</title><rect x="13.9284%" y="1781" width="1.4304%" height="15" fill="rgb(247,70,30)" fg:x="31410769" fg:w="3225693"/><text x="14.1784%" y="1791.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,433,598 samples, 2.85%)</title><rect x="15.3587%" y="1397" width="2.8528%" height="15" fill="rgb(212,68,19)" fg:x="34636462" fg:w="6433598"/><text x="15.6087%" y="1407.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,433,598 samples, 2.85%)</title><rect x="15.3587%" y="1381" width="2.8528%" height="15" fill="rgb(240,187,13)" fg:x="34636462" fg:w="6433598"/><text x="15.6087%" y="1391.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,433,598 samples, 2.85%)</title><rect x="15.3587%" y="1365" width="2.8528%" height="15" fill="rgb(223,113,26)" fg:x="34636462" fg:w="6433598"/><text x="15.6087%" y="1375.50">al..</text></g><g><title>alloc::slice::hack::to_vec (6,433,598 samples, 2.85%)</title><rect x="15.3587%" y="1349" width="2.8528%" height="15" fill="rgb(206,192,2)" fg:x="34636462" fg:w="6433598"/><text x="15.6087%" y="1359.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,433,598 samples, 2.85%)</title><rect x="15.3587%" y="1333" width="2.8528%" height="15" fill="rgb(241,108,4)" fg:x="34636462" fg:w="6433598"/><text x="15.6087%" y="1343.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,433,598 samples, 2.85%)</title><rect x="15.3587%" y="1317" width="2.8528%" height="15" fill="rgb(247,173,49)" fg:x="34636462" fg:w="6433598"/><text x="15.6087%" y="1327.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,433,598 samples, 2.85%)</title><rect x="15.3587%" y="1301" width="2.8528%" height="15" fill="rgb(224,114,35)" fg:x="34636462" fg:w="6433598"/><text x="15.6087%" y="1311.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,433,598 samples, 2.85%)</title><rect x="15.3587%" y="1285" width="2.8528%" height="15" fill="rgb(245,159,27)" fg:x="34636462" fg:w="6433598"/><text x="15.6087%" y="1295.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,433,598 samples, 2.85%)</title><rect x="15.3587%" y="1269" width="2.8528%" height="15" fill="rgb(245,172,44)" fg:x="34636462" fg:w="6433598"/><text x="15.6087%" y="1279.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,433,598 samples, 2.85%)</title><rect x="15.3587%" y="1253" width="2.8528%" height="15" fill="rgb(236,23,11)" fg:x="34636462" fg:w="6433598"/><text x="15.6087%" y="1263.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (6,433,598 samples, 2.85%)</title><rect x="15.3587%" y="1237" width="2.8528%" height="15" fill="rgb(205,117,38)" fg:x="34636462" fg:w="6433598"/><text x="15.6087%" y="1247.50">al..</text></g><g><title>alloc::alloc::alloc (6,433,598 samples, 2.85%)</title><rect x="15.3587%" y="1221" width="2.8528%" height="15" fill="rgb(237,72,25)" fg:x="34636462" fg:w="6433598"/><text x="15.6087%" y="1231.50">al..</text></g><g><title>malloc (6,433,598 samples, 2.85%)</title><rect x="15.3587%" y="1205" width="2.8528%" height="15" fill="rgb(244,70,9)" fg:x="34636462" fg:w="6433598"/><text x="15.6087%" y="1215.50">ma..</text></g><g><title>[libc.so.6] (6,433,598 samples, 2.85%)</title><rect x="15.3587%" y="1189" width="2.8528%" height="15" fill="rgb(217,125,39)" fg:x="34636462" fg:w="6433598"/><text x="15.6087%" y="1199.50">[l..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,179,047 samples, 1.41%)</title><rect x="18.2116%" y="757" width="1.4097%" height="15" fill="rgb(235,36,10)" fg:x="41070060" fg:w="3179047"/><text x="18.4616%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,179,047 samples, 1.41%)</title><rect x="18.2116%" y="741" width="1.4097%" height="15" fill="rgb(251,123,47)" fg:x="41070060" fg:w="3179047"/><text x="18.4616%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,179,047 samples, 1.41%)</title><rect x="18.2116%" y="725" width="1.4097%" height="15" fill="rgb(221,13,13)" fg:x="41070060" fg:w="3179047"/><text x="18.4616%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (3,179,047 samples, 1.41%)</title><rect x="18.2116%" y="709" width="1.4097%" height="15" fill="rgb(238,131,9)" fg:x="41070060" fg:w="3179047"/><text x="18.4616%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,179,047 samples, 1.41%)</title><rect x="18.2116%" y="693" width="1.4097%" height="15" fill="rgb(211,50,8)" fg:x="41070060" fg:w="3179047"/><text x="18.4616%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,179,047 samples, 1.41%)</title><rect x="18.2116%" y="677" width="1.4097%" height="15" fill="rgb(245,182,24)" fg:x="41070060" fg:w="3179047"/><text x="18.4616%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,179,047 samples, 1.41%)</title><rect x="18.2116%" y="661" width="1.4097%" height="15" fill="rgb(242,14,37)" fg:x="41070060" fg:w="3179047"/><text x="18.4616%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,179,047 samples, 1.41%)</title><rect x="18.2116%" y="645" width="1.4097%" height="15" fill="rgb(246,228,12)" fg:x="41070060" fg:w="3179047"/><text x="18.4616%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,179,047 samples, 1.41%)</title><rect x="18.2116%" y="629" width="1.4097%" height="15" fill="rgb(213,55,15)" fg:x="41070060" fg:w="3179047"/><text x="18.4616%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,179,047 samples, 1.41%)</title><rect x="18.2116%" y="613" width="1.4097%" height="15" fill="rgb(209,9,3)" fg:x="41070060" fg:w="3179047"/><text x="18.4616%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,179,047 samples, 1.41%)</title><rect x="18.2116%" y="597" width="1.4097%" height="15" fill="rgb(230,59,30)" fg:x="41070060" fg:w="3179047"/><text x="18.4616%" y="607.50"></text></g><g><title>alloc::alloc::alloc (3,179,047 samples, 1.41%)</title><rect x="18.2116%" y="581" width="1.4097%" height="15" fill="rgb(209,121,21)" fg:x="41070060" fg:w="3179047"/><text x="18.4616%" y="591.50"></text></g><g><title>malloc (3,179,047 samples, 1.41%)</title><rect x="18.2116%" y="565" width="1.4097%" height="15" fill="rgb(220,109,13)" fg:x="41070060" fg:w="3179047"/><text x="18.4616%" y="575.50"></text></g><g><title>[libc.so.6] (3,179,047 samples, 1.41%)</title><rect x="18.2116%" y="549" width="1.4097%" height="15" fill="rgb(232,18,1)" fg:x="41070060" fg:w="3179047"/><text x="18.4616%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,191,194 samples, 2.75%)</title><rect x="19.6212%" y="597" width="2.7453%" height="15" fill="rgb(215,41,42)" fg:x="44249107" fg:w="6191194"/><text x="19.8712%" y="607.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,191,194 samples, 2.75%)</title><rect x="19.6212%" y="581" width="2.7453%" height="15" fill="rgb(224,123,36)" fg:x="44249107" fg:w="6191194"/><text x="19.8712%" y="591.50">al..</text></g><g><title>alloc::slice::hack::to_vec (6,191,194 samples, 2.75%)</title><rect x="19.6212%" y="565" width="2.7453%" height="15" fill="rgb(240,125,3)" fg:x="44249107" fg:w="6191194"/><text x="19.8712%" y="575.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,191,194 samples, 2.75%)</title><rect x="19.6212%" y="549" width="2.7453%" height="15" fill="rgb(205,98,50)" fg:x="44249107" fg:w="6191194"/><text x="19.8712%" y="559.50">&lt;T..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,106,721 samples, 1.38%)</title><rect x="20.9890%" y="533" width="1.3776%" height="15" fill="rgb(205,185,37)" fg:x="47333580" fg:w="3106721"/><text x="21.2390%" y="543.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,106,721 samples, 1.38%)</title><rect x="20.9890%" y="517" width="1.3776%" height="15" fill="rgb(238,207,15)" fg:x="47333580" fg:w="3106721"/><text x="21.2390%" y="527.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,106,721 samples, 1.38%)</title><rect x="20.9890%" y="501" width="1.3776%" height="15" fill="rgb(213,199,42)" fg:x="47333580" fg:w="3106721"/><text x="21.2390%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,106,721 samples, 1.38%)</title><rect x="20.9890%" y="485" width="1.3776%" height="15" fill="rgb(235,201,11)" fg:x="47333580" fg:w="3106721"/><text x="21.2390%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,106,721 samples, 1.38%)</title><rect x="20.9890%" y="469" width="1.3776%" height="15" fill="rgb(207,46,11)" fg:x="47333580" fg:w="3106721"/><text x="21.2390%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,106,721 samples, 1.38%)</title><rect x="20.9890%" y="453" width="1.3776%" height="15" fill="rgb(241,35,35)" fg:x="47333580" fg:w="3106721"/><text x="21.2390%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,106,721 samples, 1.38%)</title><rect x="20.9890%" y="437" width="1.3776%" height="15" fill="rgb(243,32,47)" fg:x="47333580" fg:w="3106721"/><text x="21.2390%" y="447.50"></text></g><g><title>core::clone::Clone::clone (3,106,721 samples, 1.38%)</title><rect x="20.9890%" y="421" width="1.3776%" height="15" fill="rgb(247,202,23)" fg:x="47333580" fg:w="3106721"/><text x="21.2390%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,106,721 samples, 1.38%)</title><rect x="20.9890%" y="405" width="1.3776%" height="15" fill="rgb(219,102,11)" fg:x="47333580" fg:w="3106721"/><text x="21.2390%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,424,886 samples, 4.18%)</title><rect x="19.6212%" y="757" width="4.1792%" height="15" fill="rgb(243,110,44)" fg:x="44249107" fg:w="9424886"/><text x="19.8712%" y="767.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,424,886 samples, 4.18%)</title><rect x="19.6212%" y="741" width="4.1792%" height="15" fill="rgb(222,74,54)" fg:x="44249107" fg:w="9424886"/><text x="19.8712%" y="751.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (9,424,886 samples, 4.18%)</title><rect x="19.6212%" y="725" width="4.1792%" height="15" fill="rgb(216,99,12)" fg:x="44249107" fg:w="9424886"/><text x="19.8712%" y="735.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,424,886 samples, 4.18%)</title><rect x="19.6212%" y="709" width="4.1792%" height="15" fill="rgb(226,22,26)" fg:x="44249107" fg:w="9424886"/><text x="19.8712%" y="719.50">&lt;T as..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (9,424,886 samples, 4.18%)</title><rect x="19.6212%" y="693" width="4.1792%" height="15" fill="rgb(217,163,10)" fg:x="44249107" fg:w="9424886"/><text x="19.8712%" y="703.50">&lt;css_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,424,886 samples, 4.18%)</title><rect x="19.6212%" y="677" width="4.1792%" height="15" fill="rgb(213,25,53)" fg:x="44249107" fg:w="9424886"/><text x="19.8712%" y="687.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,424,886 samples, 4.18%)</title><rect x="19.6212%" y="661" width="4.1792%" height="15" fill="rgb(252,105,26)" fg:x="44249107" fg:w="9424886"/><text x="19.8712%" y="671.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (9,424,886 samples, 4.18%)</title><rect x="19.6212%" y="645" width="4.1792%" height="15" fill="rgb(220,39,43)" fg:x="44249107" fg:w="9424886"/><text x="19.8712%" y="655.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,424,886 samples, 4.18%)</title><rect x="19.6212%" y="629" width="4.1792%" height="15" fill="rgb(229,68,48)" fg:x="44249107" fg:w="9424886"/><text x="19.8712%" y="639.50">&lt;T as..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (9,424,886 samples, 4.18%)</title><rect x="19.6212%" y="613" width="4.1792%" height="15" fill="rgb(252,8,32)" fg:x="44249107" fg:w="9424886"/><text x="19.8712%" y="623.50">&lt;css_..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="597" width="1.4339%" height="15" fill="rgb(223,20,43)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="607.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="581" width="1.4339%" height="15" fill="rgb(229,81,49)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="565" width="1.4339%" height="15" fill="rgb(236,28,36)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="549" width="1.4339%" height="15" fill="rgb(249,185,26)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="533" width="1.4339%" height="15" fill="rgb(249,174,33)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="517" width="1.4339%" height="15" fill="rgb(233,201,37)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="527.50"></text></g><g><title>core::clone::Clone::clone (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="501" width="1.4339%" height="15" fill="rgb(221,78,26)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="485" width="1.4339%" height="15" fill="rgb(250,127,30)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="469" width="1.4339%" height="15" fill="rgb(230,49,44)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="453" width="1.4339%" height="15" fill="rgb(229,67,23)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="437" width="1.4339%" height="15" fill="rgb(249,83,47)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="421" width="1.4339%" height="15" fill="rgb(215,43,3)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="405" width="1.4339%" height="15" fill="rgb(238,154,13)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="389" width="1.4339%" height="15" fill="rgb(219,56,2)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="373" width="1.4339%" height="15" fill="rgb(233,0,4)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="357" width="1.4339%" height="15" fill="rgb(235,30,7)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="341" width="1.4339%" height="15" fill="rgb(250,79,13)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="325" width="1.4339%" height="15" fill="rgb(211,146,34)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="335.50"></text></g><g><title>alloc::alloc::alloc (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="309" width="1.4339%" height="15" fill="rgb(228,22,38)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="319.50"></text></g><g><title>malloc (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="293" width="1.4339%" height="15" fill="rgb(235,168,5)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="303.50"></text></g><g><title>[libc.so.6] (3,233,692 samples, 1.43%)</title><rect x="22.3666%" y="277" width="1.4339%" height="15" fill="rgb(221,155,16)" fg:x="50440301" fg:w="3233692"/><text x="22.6166%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15,513,944 samples, 6.88%)</title><rect x="18.2116%" y="997" width="6.8793%" height="15" fill="rgb(215,215,53)" fg:x="41070060" fg:w="15513944"/><text x="18.4616%" y="1007.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15,513,944 samples, 6.88%)</title><rect x="18.2116%" y="981" width="6.8793%" height="15" fill="rgb(223,4,10)" fg:x="41070060" fg:w="15513944"/><text x="18.4616%" y="991.50">alloc::sl..</text></g><g><title>alloc::slice::hack::to_vec (15,513,944 samples, 6.88%)</title><rect x="18.2116%" y="965" width="6.8793%" height="15" fill="rgb(234,103,6)" fg:x="41070060" fg:w="15513944"/><text x="18.4616%" y="975.50">alloc::sl..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15,513,944 samples, 6.88%)</title><rect x="18.2116%" y="949" width="6.8793%" height="15" fill="rgb(227,97,0)" fg:x="41070060" fg:w="15513944"/><text x="18.4616%" y="959.50">&lt;T as all..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (15,513,944 samples, 6.88%)</title><rect x="18.2116%" y="933" width="6.8793%" height="15" fill="rgb(234,150,53)" fg:x="41070060" fg:w="15513944"/><text x="18.4616%" y="943.50">&lt;css_bitv..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15,513,944 samples, 6.88%)</title><rect x="18.2116%" y="917" width="6.8793%" height="15" fill="rgb(228,201,54)" fg:x="41070060" fg:w="15513944"/><text x="18.4616%" y="927.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15,513,944 samples, 6.88%)</title><rect x="18.2116%" y="901" width="6.8793%" height="15" fill="rgb(222,22,37)" fg:x="41070060" fg:w="15513944"/><text x="18.4616%" y="911.50">alloc::sl..</text></g><g><title>alloc::slice::hack::to_vec (15,513,944 samples, 6.88%)</title><rect x="18.2116%" y="885" width="6.8793%" height="15" fill="rgb(237,53,32)" fg:x="41070060" fg:w="15513944"/><text x="18.4616%" y="895.50">alloc::sl..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15,513,944 samples, 6.88%)</title><rect x="18.2116%" y="869" width="6.8793%" height="15" fill="rgb(233,25,53)" fg:x="41070060" fg:w="15513944"/><text x="18.4616%" y="879.50">&lt;T as all..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (15,513,944 samples, 6.88%)</title><rect x="18.2116%" y="853" width="6.8793%" height="15" fill="rgb(210,40,34)" fg:x="41070060" fg:w="15513944"/><text x="18.4616%" y="863.50">&lt;css_bitv..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15,513,944 samples, 6.88%)</title><rect x="18.2116%" y="837" width="6.8793%" height="15" fill="rgb(241,220,44)" fg:x="41070060" fg:w="15513944"/><text x="18.4616%" y="847.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15,513,944 samples, 6.88%)</title><rect x="18.2116%" y="821" width="6.8793%" height="15" fill="rgb(235,28,35)" fg:x="41070060" fg:w="15513944"/><text x="18.4616%" y="831.50">alloc::sl..</text></g><g><title>alloc::slice::hack::to_vec (15,513,944 samples, 6.88%)</title><rect x="18.2116%" y="805" width="6.8793%" height="15" fill="rgb(210,56,17)" fg:x="41070060" fg:w="15513944"/><text x="18.4616%" y="815.50">alloc::sl..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15,513,944 samples, 6.88%)</title><rect x="18.2116%" y="789" width="6.8793%" height="15" fill="rgb(224,130,29)" fg:x="41070060" fg:w="15513944"/><text x="18.4616%" y="799.50">&lt;T as all..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (15,513,944 samples, 6.88%)</title><rect x="18.2116%" y="773" width="6.8793%" height="15" fill="rgb(235,212,8)" fg:x="41070060" fg:w="15513944"/><text x="18.4616%" y="783.50">&lt;css_bitv..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="757" width="1.2904%" height="15" fill="rgb(223,33,50)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="767.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="741" width="1.2904%" height="15" fill="rgb(219,149,13)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="751.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="725" width="1.2904%" height="15" fill="rgb(250,156,29)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="709" width="1.2904%" height="15" fill="rgb(216,193,19)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="693" width="1.2904%" height="15" fill="rgb(216,135,14)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="677" width="1.2904%" height="15" fill="rgb(241,47,5)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="687.50"></text></g><g><title>core::clone::Clone::clone (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="661" width="1.2904%" height="15" fill="rgb(233,42,35)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="645" width="1.2904%" height="15" fill="rgb(231,13,6)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="629" width="1.2904%" height="15" fill="rgb(207,181,40)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="613" width="1.2904%" height="15" fill="rgb(254,173,49)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="597" width="1.2904%" height="15" fill="rgb(221,1,38)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="581" width="1.2904%" height="15" fill="rgb(206,124,46)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="565" width="1.2904%" height="15" fill="rgb(249,21,11)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="549" width="1.2904%" height="15" fill="rgb(222,201,40)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="533" width="1.2904%" height="15" fill="rgb(235,61,29)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="517" width="1.2904%" height="15" fill="rgb(219,207,3)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="501" width="1.2904%" height="15" fill="rgb(222,56,46)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="485" width="1.2904%" height="15" fill="rgb(239,76,54)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="469" width="1.2904%" height="15" fill="rgb(231,124,27)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="479.50"></text></g><g><title>malloc (2,910,011 samples, 1.29%)</title><rect x="23.8005%" y="453" width="1.2904%" height="15" fill="rgb(249,195,6)" fg:x="53673993" fg:w="2910011"/><text x="24.0505%" y="463.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (18,706,333 samples, 8.29%)</title><rect x="18.2116%" y="1013" width="8.2949%" height="15" fill="rgb(237,174,47)" fg:x="41070060" fg:w="18706333"/><text x="18.4616%" y="1023.50">&lt;css_bitvect..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,192,389 samples, 1.42%)</title><rect x="25.0909%" y="997" width="1.4156%" height="15" fill="rgb(206,201,31)" fg:x="56584004" fg:w="3192389"/><text x="25.3409%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,192,389 samples, 1.42%)</title><rect x="25.0909%" y="981" width="1.4156%" height="15" fill="rgb(231,57,52)" fg:x="56584004" fg:w="3192389"/><text x="25.3409%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,192,389 samples, 1.42%)</title><rect x="25.0909%" y="965" width="1.4156%" height="15" fill="rgb(248,177,22)" fg:x="56584004" fg:w="3192389"/><text x="25.3409%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (3,192,389 samples, 1.42%)</title><rect x="25.0909%" y="949" width="1.4156%" height="15" fill="rgb(215,211,37)" fg:x="56584004" fg:w="3192389"/><text x="25.3409%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,192,389 samples, 1.42%)</title><rect x="25.0909%" y="933" width="1.4156%" height="15" fill="rgb(241,128,51)" fg:x="56584004" fg:w="3192389"/><text x="25.3409%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,192,389 samples, 1.42%)</title><rect x="25.0909%" y="917" width="1.4156%" height="15" fill="rgb(227,165,31)" fg:x="56584004" fg:w="3192389"/><text x="25.3409%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,192,389 samples, 1.42%)</title><rect x="25.0909%" y="901" width="1.4156%" height="15" fill="rgb(228,167,24)" fg:x="56584004" fg:w="3192389"/><text x="25.3409%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,192,389 samples, 1.42%)</title><rect x="25.0909%" y="885" width="1.4156%" height="15" fill="rgb(228,143,12)" fg:x="56584004" fg:w="3192389"/><text x="25.3409%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,192,389 samples, 1.42%)</title><rect x="25.0909%" y="869" width="1.4156%" height="15" fill="rgb(249,149,8)" fg:x="56584004" fg:w="3192389"/><text x="25.3409%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,192,389 samples, 1.42%)</title><rect x="25.0909%" y="853" width="1.4156%" height="15" fill="rgb(243,35,44)" fg:x="56584004" fg:w="3192389"/><text x="25.3409%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,192,389 samples, 1.42%)</title><rect x="25.0909%" y="837" width="1.4156%" height="15" fill="rgb(246,89,9)" fg:x="56584004" fg:w="3192389"/><text x="25.3409%" y="847.50"></text></g><g><title>alloc::alloc::alloc (3,192,389 samples, 1.42%)</title><rect x="25.0909%" y="821" width="1.4156%" height="15" fill="rgb(233,213,13)" fg:x="56584004" fg:w="3192389"/><text x="25.3409%" y="831.50"></text></g><g><title>malloc (3,192,389 samples, 1.42%)</title><rect x="25.0909%" y="805" width="1.4156%" height="15" fill="rgb(233,141,41)" fg:x="56584004" fg:w="3192389"/><text x="25.3409%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21,923,083 samples, 9.72%)</title><rect x="18.2116%" y="1157" width="9.7213%" height="15" fill="rgb(239,167,4)" fg:x="41070060" fg:w="21923083"/><text x="18.4616%" y="1167.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21,923,083 samples, 9.72%)</title><rect x="18.2116%" y="1141" width="9.7213%" height="15" fill="rgb(209,217,16)" fg:x="41070060" fg:w="21923083"/><text x="18.4616%" y="1151.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (21,923,083 samples, 9.72%)</title><rect x="18.2116%" y="1125" width="9.7213%" height="15" fill="rgb(219,88,35)" fg:x="41070060" fg:w="21923083"/><text x="18.4616%" y="1135.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21,923,083 samples, 9.72%)</title><rect x="18.2116%" y="1109" width="9.7213%" height="15" fill="rgb(220,193,23)" fg:x="41070060" fg:w="21923083"/><text x="18.4616%" y="1119.50">&lt;T as alloc::s..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (21,923,083 samples, 9.72%)</title><rect x="18.2116%" y="1093" width="9.7213%" height="15" fill="rgb(230,90,52)" fg:x="41070060" fg:w="21923083"/><text x="18.4616%" y="1103.50">&lt;css_bitvector..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21,923,083 samples, 9.72%)</title><rect x="18.2116%" y="1077" width="9.7213%" height="15" fill="rgb(252,106,19)" fg:x="41070060" fg:w="21923083"/><text x="18.4616%" y="1087.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21,923,083 samples, 9.72%)</title><rect x="18.2116%" y="1061" width="9.7213%" height="15" fill="rgb(206,74,20)" fg:x="41070060" fg:w="21923083"/><text x="18.4616%" y="1071.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (21,923,083 samples, 9.72%)</title><rect x="18.2116%" y="1045" width="9.7213%" height="15" fill="rgb(230,138,44)" fg:x="41070060" fg:w="21923083"/><text x="18.4616%" y="1055.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21,923,083 samples, 9.72%)</title><rect x="18.2116%" y="1029" width="9.7213%" height="15" fill="rgb(235,182,43)" fg:x="41070060" fg:w="21923083"/><text x="18.4616%" y="1039.50">&lt;T as alloc::s..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,216,750 samples, 1.43%)</title><rect x="26.5065%" y="1013" width="1.4264%" height="15" fill="rgb(242,16,51)" fg:x="59776393" fg:w="3216750"/><text x="26.7565%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,216,750 samples, 1.43%)</title><rect x="26.5065%" y="997" width="1.4264%" height="15" fill="rgb(248,9,4)" fg:x="59776393" fg:w="3216750"/><text x="26.7565%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,216,750 samples, 1.43%)</title><rect x="26.5065%" y="981" width="1.4264%" height="15" fill="rgb(210,31,22)" fg:x="59776393" fg:w="3216750"/><text x="26.7565%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,216,750 samples, 1.43%)</title><rect x="26.5065%" y="965" width="1.4264%" height="15" fill="rgb(239,54,39)" fg:x="59776393" fg:w="3216750"/><text x="26.7565%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,216,750 samples, 1.43%)</title><rect x="26.5065%" y="949" width="1.4264%" height="15" fill="rgb(230,99,41)" fg:x="59776393" fg:w="3216750"/><text x="26.7565%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,216,750 samples, 1.43%)</title><rect x="26.5065%" y="933" width="1.4264%" height="15" fill="rgb(253,106,12)" fg:x="59776393" fg:w="3216750"/><text x="26.7565%" y="943.50"></text></g><g><title>alloc::alloc::alloc (3,216,750 samples, 1.43%)</title><rect x="26.5065%" y="917" width="1.4264%" height="15" fill="rgb(213,46,41)" fg:x="59776393" fg:w="3216750"/><text x="26.7565%" y="927.50"></text></g><g><title>malloc (3,216,750 samples, 1.43%)</title><rect x="26.5065%" y="901" width="1.4264%" height="15" fill="rgb(215,133,35)" fg:x="59776393" fg:w="3216750"/><text x="26.7565%" y="911.50"></text></g><g><title>[libc.so.6] (3,216,750 samples, 1.43%)</title><rect x="26.5065%" y="885" width="1.4264%" height="15" fill="rgb(213,28,5)" fg:x="59776393" fg:w="3216750"/><text x="26.7565%" y="895.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (25,107,790 samples, 11.13%)</title><rect x="18.2116%" y="1173" width="11.1335%" height="15" fill="rgb(215,77,49)" fg:x="41070060" fg:w="25107790"/><text x="18.4616%" y="1183.50">&lt;css_bitvector_c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="1157" width="1.4122%" height="15" fill="rgb(248,100,22)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="1167.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="1141" width="1.4122%" height="15" fill="rgb(208,67,9)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="1151.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="1125" width="1.4122%" height="15" fill="rgb(219,133,21)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="1109" width="1.4122%" height="15" fill="rgb(246,46,29)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="1093" width="1.4122%" height="15" fill="rgb(246,185,52)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="1077" width="1.4122%" height="15" fill="rgb(252,136,11)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="1087.50"></text></g><g><title>core::clone::Clone::clone (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="1061" width="1.4122%" height="15" fill="rgb(219,138,53)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="1045" width="1.4122%" height="15" fill="rgb(211,51,23)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="1029" width="1.4122%" height="15" fill="rgb(247,221,28)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="1013" width="1.4122%" height="15" fill="rgb(251,222,45)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="997" width="1.4122%" height="15" fill="rgb(217,162,53)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="981" width="1.4122%" height="15" fill="rgb(229,93,14)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="965" width="1.4122%" height="15" fill="rgb(209,67,49)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="949" width="1.4122%" height="15" fill="rgb(213,87,29)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="933" width="1.4122%" height="15" fill="rgb(205,151,52)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="917" width="1.4122%" height="15" fill="rgb(253,215,39)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="901" width="1.4122%" height="15" fill="rgb(221,220,41)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="885" width="1.4122%" height="15" fill="rgb(218,133,21)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="895.50"></text></g><g><title>alloc::alloc::alloc (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="869" width="1.4122%" height="15" fill="rgb(221,193,43)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="879.50"></text></g><g><title>malloc (3,184,707 samples, 1.41%)</title><rect x="27.9329%" y="853" width="1.4122%" height="15" fill="rgb(240,128,52)" fg:x="62993143" fg:w="3184707"/><text x="28.1829%" y="863.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (30,520,166 samples, 13.53%)</title><rect x="18.2116%" y="1253" width="13.5335%" height="15" fill="rgb(253,114,12)" fg:x="41070060" fg:w="30520166"/><text x="18.4616%" y="1263.50">&lt;css_bitvector_compi..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30,520,166 samples, 13.53%)</title><rect x="18.2116%" y="1237" width="13.5335%" height="15" fill="rgb(215,223,47)" fg:x="41070060" fg:w="30520166"/><text x="18.4616%" y="1247.50">&lt;alloc::vec::Vec&lt;T,A..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30,520,166 samples, 13.53%)</title><rect x="18.2116%" y="1221" width="13.5335%" height="15" fill="rgb(248,225,23)" fg:x="41070060" fg:w="30520166"/><text x="18.4616%" y="1231.50">alloc::slice::&lt;impl ..</text></g><g><title>alloc::slice::hack::to_vec (30,520,166 samples, 13.53%)</title><rect x="18.2116%" y="1205" width="13.5335%" height="15" fill="rgb(250,108,0)" fg:x="41070060" fg:w="30520166"/><text x="18.4616%" y="1215.50">alloc::slice::hack::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30,520,166 samples, 13.53%)</title><rect x="18.2116%" y="1189" width="13.5335%" height="15" fill="rgb(228,208,7)" fg:x="41070060" fg:w="30520166"/><text x="18.4616%" y="1199.50">&lt;T as alloc::slice::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,412,376 samples, 2.40%)</title><rect x="29.3450%" y="1173" width="2.4000%" height="15" fill="rgb(244,45,10)" fg:x="66177850" fg:w="5412376"/><text x="29.5950%" y="1183.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,412,376 samples, 2.40%)</title><rect x="29.3450%" y="1157" width="2.4000%" height="15" fill="rgb(207,125,25)" fg:x="66177850" fg:w="5412376"/><text x="29.5950%" y="1167.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,412,376 samples, 2.40%)</title><rect x="29.3450%" y="1141" width="2.4000%" height="15" fill="rgb(210,195,18)" fg:x="66177850" fg:w="5412376"/><text x="29.5950%" y="1151.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,412,376 samples, 2.40%)</title><rect x="29.3450%" y="1125" width="2.4000%" height="15" fill="rgb(249,80,12)" fg:x="66177850" fg:w="5412376"/><text x="29.5950%" y="1135.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,412,376 samples, 2.40%)</title><rect x="29.3450%" y="1109" width="2.4000%" height="15" fill="rgb(221,65,9)" fg:x="66177850" fg:w="5412376"/><text x="29.5950%" y="1119.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,412,376 samples, 2.40%)</title><rect x="29.3450%" y="1093" width="2.4000%" height="15" fill="rgb(235,49,36)" fg:x="66177850" fg:w="5412376"/><text x="29.5950%" y="1103.50">al..</text></g><g><title>alloc::alloc::alloc (5,412,376 samples, 2.40%)</title><rect x="29.3450%" y="1077" width="2.4000%" height="15" fill="rgb(225,32,20)" fg:x="66177850" fg:w="5412376"/><text x="29.5950%" y="1087.50">al..</text></g><g><title>malloc (5,412,376 samples, 2.40%)</title><rect x="29.3450%" y="1061" width="2.4000%" height="15" fill="rgb(215,141,46)" fg:x="66177850" fg:w="5412376"/><text x="29.5950%" y="1071.50">ma..</text></g><g><title>[libc.so.6] (5,412,376 samples, 2.40%)</title><rect x="29.3450%" y="1045" width="2.4000%" height="15" fill="rgb(250,160,47)" fg:x="66177850" fg:w="5412376"/><text x="29.5950%" y="1055.50">[l..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (33,755,501 samples, 14.97%)</title><rect x="18.2116%" y="1317" width="14.9681%" height="15" fill="rgb(216,222,40)" fg:x="41070060" fg:w="33755501"/><text x="18.4616%" y="1327.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (33,755,501 samples, 14.97%)</title><rect x="18.2116%" y="1301" width="14.9681%" height="15" fill="rgb(234,217,39)" fg:x="41070060" fg:w="33755501"/><text x="18.4616%" y="1311.50">alloc::slice::&lt;impl [T]..</text></g><g><title>alloc::slice::hack::to_vec (33,755,501 samples, 14.97%)</title><rect x="18.2116%" y="1285" width="14.9681%" height="15" fill="rgb(207,178,40)" fg:x="41070060" fg:w="33755501"/><text x="18.4616%" y="1295.50">alloc::slice::hack::to_..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33,755,501 samples, 14.97%)</title><rect x="18.2116%" y="1269" width="14.9681%" height="15" fill="rgb(221,136,13)" fg:x="41070060" fg:w="33755501"/><text x="18.4616%" y="1279.50">&lt;T as alloc::slice::hac..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,235,335 samples, 1.43%)</title><rect x="31.7450%" y="1253" width="1.4346%" height="15" fill="rgb(249,199,10)" fg:x="71590226" fg:w="3235335"/><text x="31.9950%" y="1263.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,205,502 samples, 1.42%)</title><rect x="33.1797%" y="1317" width="1.4214%" height="15" fill="rgb(249,222,13)" fg:x="74825561" fg:w="3205502"/><text x="33.4297%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,205,502 samples, 1.42%)</title><rect x="33.1797%" y="1301" width="1.4214%" height="15" fill="rgb(244,185,38)" fg:x="74825561" fg:w="3205502"/><text x="33.4297%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (43,414,301 samples, 19.25%)</title><rect x="18.2116%" y="1397" width="19.2511%" height="15" fill="rgb(236,202,9)" fg:x="41070060" fg:w="43414301"/><text x="18.4616%" y="1407.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (43,414,301 samples, 19.25%)</title><rect x="18.2116%" y="1381" width="19.2511%" height="15" fill="rgb(250,229,37)" fg:x="41070060" fg:w="43414301"/><text x="18.4616%" y="1391.50">alloc::slice::&lt;impl [T]&gt;::to_v..</text></g><g><title>alloc::slice::hack::to_vec (43,414,301 samples, 19.25%)</title><rect x="18.2116%" y="1365" width="19.2511%" height="15" fill="rgb(206,174,23)" fg:x="41070060" fg:w="43414301"/><text x="18.4616%" y="1375.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (43,414,301 samples, 19.25%)</title><rect x="18.2116%" y="1349" width="19.2511%" height="15" fill="rgb(211,33,43)" fg:x="41070060" fg:w="43414301"/><text x="18.4616%" y="1359.50">&lt;T as alloc::slice::hack::Conv..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (43,414,301 samples, 19.25%)</title><rect x="18.2116%" y="1333" width="19.2511%" height="15" fill="rgb(245,58,50)" fg:x="41070060" fg:w="43414301"/><text x="18.4616%" y="1343.50">&lt;css_bitvector_compiler::HtmlN..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6,453,298 samples, 2.86%)</title><rect x="34.6011%" y="1317" width="2.8616%" height="15" fill="rgb(244,68,36)" fg:x="78031063" fg:w="6453298"/><text x="34.8511%" y="1327.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6,453,298 samples, 2.86%)</title><rect x="34.6011%" y="1301" width="2.8616%" height="15" fill="rgb(232,229,15)" fg:x="78031063" fg:w="6453298"/><text x="34.8511%" y="1311.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6,453,298 samples, 2.86%)</title><rect x="34.6011%" y="1285" width="2.8616%" height="15" fill="rgb(254,30,23)" fg:x="78031063" fg:w="6453298"/><text x="34.8511%" y="1295.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,453,298 samples, 2.86%)</title><rect x="34.6011%" y="1269" width="2.8616%" height="15" fill="rgb(235,160,14)" fg:x="78031063" fg:w="6453298"/><text x="34.8511%" y="1279.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (6,453,298 samples, 2.86%)</title><rect x="34.6011%" y="1253" width="2.8616%" height="15" fill="rgb(212,155,44)" fg:x="78031063" fg:w="6453298"/><text x="34.8511%" y="1263.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (6,453,298 samples, 2.86%)</title><rect x="34.6011%" y="1237" width="2.8616%" height="15" fill="rgb(226,2,50)" fg:x="78031063" fg:w="6453298"/><text x="34.8511%" y="1247.50">ha..</text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (6,453,298 samples, 2.86%)</title><rect x="34.6011%" y="1221" width="2.8616%" height="15" fill="rgb(234,177,6)" fg:x="78031063" fg:w="6453298"/><text x="34.8511%" y="1231.50">ha..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,453,298 samples, 2.86%)</title><rect x="34.6011%" y="1205" width="2.8616%" height="15" fill="rgb(217,24,9)" fg:x="78031063" fg:w="6453298"/><text x="34.8511%" y="1215.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (6,453,298 samples, 2.86%)</title><rect x="34.6011%" y="1189" width="2.8616%" height="15" fill="rgb(220,13,46)" fg:x="78031063" fg:w="6453298"/><text x="34.8511%" y="1199.50">al..</text></g><g><title>alloc::alloc::alloc (6,453,298 samples, 2.86%)</title><rect x="34.6011%" y="1173" width="2.8616%" height="15" fill="rgb(239,221,27)" fg:x="78031063" fg:w="6453298"/><text x="34.8511%" y="1183.50">al..</text></g><g><title>malloc (6,453,298 samples, 2.86%)</title><rect x="34.6011%" y="1157" width="2.8616%" height="15" fill="rgb(222,198,25)" fg:x="78031063" fg:w="6453298"/><text x="34.8511%" y="1167.50">ma..</text></g><g><title>[libc.so.6] (6,453,298 samples, 2.86%)</title><rect x="34.6011%" y="1141" width="2.8616%" height="15" fill="rgb(211,99,13)" fg:x="78031063" fg:w="6453298"/><text x="34.8511%" y="1151.50">[l..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,076,300 samples, 1.36%)</title><rect x="37.4626%" y="1397" width="1.3641%" height="15" fill="rgb(232,111,31)" fg:x="84484361" fg:w="3076300"/><text x="37.7126%" y="1407.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,076,300 samples, 1.36%)</title><rect x="37.4626%" y="1381" width="1.3641%" height="15" fill="rgb(245,82,37)" fg:x="84484361" fg:w="3076300"/><text x="37.7126%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,076,300 samples, 1.36%)</title><rect x="37.4626%" y="1365" width="1.3641%" height="15" fill="rgb(227,149,46)" fg:x="84484361" fg:w="3076300"/><text x="37.7126%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,076,300 samples, 1.36%)</title><rect x="37.4626%" y="1349" width="1.3641%" height="15" fill="rgb(218,36,50)" fg:x="84484361" fg:w="3076300"/><text x="37.7126%" y="1359.50"></text></g><g><title>alloc::slice::hack::to_vec (3,076,300 samples, 1.36%)</title><rect x="37.4626%" y="1333" width="1.3641%" height="15" fill="rgb(226,80,48)" fg:x="84484361" fg:w="3076300"/><text x="37.7126%" y="1343.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,076,300 samples, 1.36%)</title><rect x="37.4626%" y="1317" width="1.3641%" height="15" fill="rgb(238,224,15)" fg:x="84484361" fg:w="3076300"/><text x="37.7126%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,076,300 samples, 1.36%)</title><rect x="37.4626%" y="1301" width="1.3641%" height="15" fill="rgb(241,136,10)" fg:x="84484361" fg:w="3076300"/><text x="37.7126%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,076,300 samples, 1.36%)</title><rect x="37.4626%" y="1285" width="1.3641%" height="15" fill="rgb(208,32,45)" fg:x="84484361" fg:w="3076300"/><text x="37.7126%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,076,300 samples, 1.36%)</title><rect x="37.4626%" y="1269" width="1.3641%" height="15" fill="rgb(207,135,9)" fg:x="84484361" fg:w="3076300"/><text x="37.7126%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,076,300 samples, 1.36%)</title><rect x="37.4626%" y="1253" width="1.3641%" height="15" fill="rgb(206,86,44)" fg:x="84484361" fg:w="3076300"/><text x="37.7126%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,076,300 samples, 1.36%)</title><rect x="37.4626%" y="1237" width="1.3641%" height="15" fill="rgb(245,177,15)" fg:x="84484361" fg:w="3076300"/><text x="37.7126%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,076,300 samples, 1.36%)</title><rect x="37.4626%" y="1221" width="1.3641%" height="15" fill="rgb(206,64,50)" fg:x="84484361" fg:w="3076300"/><text x="37.7126%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (3,076,300 samples, 1.36%)</title><rect x="37.4626%" y="1205" width="1.3641%" height="15" fill="rgb(234,36,40)" fg:x="84484361" fg:w="3076300"/><text x="37.7126%" y="1215.50"></text></g><g><title>malloc (3,076,300 samples, 1.36%)</title><rect x="37.4626%" y="1189" width="1.3641%" height="15" fill="rgb(213,64,8)" fg:x="84484361" fg:w="3076300"/><text x="37.7126%" y="1199.50"></text></g><g><title>[libc.so.6] (3,076,300 samples, 1.36%)</title><rect x="37.4626%" y="1173" width="1.3641%" height="15" fill="rgb(210,75,36)" fg:x="84484361" fg:w="3076300"/><text x="37.7126%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (56,126,913 samples, 24.89%)</title><rect x="15.3587%" y="1477" width="24.8882%" height="15" fill="rgb(229,88,21)" fg:x="34636462" fg:w="56126913"/><text x="15.6087%" y="1487.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (56,126,913 samples, 24.89%)</title><rect x="15.3587%" y="1461" width="24.8882%" height="15" fill="rgb(252,204,47)" fg:x="34636462" fg:w="56126913"/><text x="15.6087%" y="1471.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (56,126,913 samples, 24.89%)</title><rect x="15.3587%" y="1445" width="24.8882%" height="15" fill="rgb(208,77,27)" fg:x="34636462" fg:w="56126913"/><text x="15.6087%" y="1455.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (56,126,913 samples, 24.89%)</title><rect x="15.3587%" y="1429" width="24.8882%" height="15" fill="rgb(221,76,26)" fg:x="34636462" fg:w="56126913"/><text x="15.6087%" y="1439.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::t..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (56,126,913 samples, 24.89%)</title><rect x="15.3587%" y="1413" width="24.8882%" height="15" fill="rgb(225,139,18)" fg:x="34636462" fg:w="56126913"/><text x="15.6087%" y="1423.50">&lt;css_bitvector_compiler::HtmlNode as cor..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,202,714 samples, 1.42%)</title><rect x="38.8267%" y="1397" width="1.4202%" height="15" fill="rgb(230,137,11)" fg:x="87560661" fg:w="3202714"/><text x="39.0767%" y="1407.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,202,714 samples, 1.42%)</title><rect x="38.8267%" y="1381" width="1.4202%" height="15" fill="rgb(212,28,1)" fg:x="87560661" fg:w="3202714"/><text x="39.0767%" y="1391.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,202,714 samples, 1.42%)</title><rect x="38.8267%" y="1365" width="1.4202%" height="15" fill="rgb(248,164,17)" fg:x="87560661" fg:w="3202714"/><text x="39.0767%" y="1375.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,202,714 samples, 1.42%)</title><rect x="38.8267%" y="1349" width="1.4202%" height="15" fill="rgb(222,171,42)" fg:x="87560661" fg:w="3202714"/><text x="39.0767%" y="1359.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,202,714 samples, 1.42%)</title><rect x="38.8267%" y="1333" width="1.4202%" height="15" fill="rgb(243,84,45)" fg:x="87560661" fg:w="3202714"/><text x="39.0767%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,202,714 samples, 1.42%)</title><rect x="38.8267%" y="1317" width="1.4202%" height="15" fill="rgb(252,49,23)" fg:x="87560661" fg:w="3202714"/><text x="39.0767%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (59,344,288 samples, 26.31%)</title><rect x="15.3587%" y="1717" width="26.3149%" height="15" fill="rgb(215,19,7)" fg:x="34636462" fg:w="59344288"/><text x="15.6087%" y="1727.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clon..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (59,344,288 samples, 26.31%)</title><rect x="15.3587%" y="1701" width="26.3149%" height="15" fill="rgb(238,81,41)" fg:x="34636462" fg:w="59344288"/><text x="15.6087%" y="1711.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (59,344,288 samples, 26.31%)</title><rect x="15.3587%" y="1685" width="26.3149%" height="15" fill="rgb(210,199,37)" fg:x="34636462" fg:w="59344288"/><text x="15.6087%" y="1695.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (59,344,288 samples, 26.31%)</title><rect x="15.3587%" y="1669" width="26.3149%" height="15" fill="rgb(244,192,49)" fg:x="34636462" fg:w="59344288"/><text x="15.6087%" y="1679.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (59,344,288 samples, 26.31%)</title><rect x="15.3587%" y="1653" width="26.3149%" height="15" fill="rgb(226,211,11)" fg:x="34636462" fg:w="59344288"/><text x="15.6087%" y="1663.50">&lt;css_bitvector_compiler::HtmlNode as core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (59,344,288 samples, 26.31%)</title><rect x="15.3587%" y="1637" width="26.3149%" height="15" fill="rgb(236,162,54)" fg:x="34636462" fg:w="59344288"/><text x="15.6087%" y="1647.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clon..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (59,344,288 samples, 26.31%)</title><rect x="15.3587%" y="1621" width="26.3149%" height="15" fill="rgb(220,229,9)" fg:x="34636462" fg:w="59344288"/><text x="15.6087%" y="1631.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (59,344,288 samples, 26.31%)</title><rect x="15.3587%" y="1605" width="26.3149%" height="15" fill="rgb(250,87,22)" fg:x="34636462" fg:w="59344288"/><text x="15.6087%" y="1615.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (59,344,288 samples, 26.31%)</title><rect x="15.3587%" y="1589" width="26.3149%" height="15" fill="rgb(239,43,17)" fg:x="34636462" fg:w="59344288"/><text x="15.6087%" y="1599.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (59,344,288 samples, 26.31%)</title><rect x="15.3587%" y="1573" width="26.3149%" height="15" fill="rgb(231,177,25)" fg:x="34636462" fg:w="59344288"/><text x="15.6087%" y="1583.50">&lt;css_bitvector_compiler::HtmlNode as core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (59,344,288 samples, 26.31%)</title><rect x="15.3587%" y="1557" width="26.3149%" height="15" fill="rgb(219,179,1)" fg:x="34636462" fg:w="59344288"/><text x="15.6087%" y="1567.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clon..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (59,344,288 samples, 26.31%)</title><rect x="15.3587%" y="1541" width="26.3149%" height="15" fill="rgb(238,219,53)" fg:x="34636462" fg:w="59344288"/><text x="15.6087%" y="1551.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (59,344,288 samples, 26.31%)</title><rect x="15.3587%" y="1525" width="26.3149%" height="15" fill="rgb(232,167,36)" fg:x="34636462" fg:w="59344288"/><text x="15.6087%" y="1535.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (59,344,288 samples, 26.31%)</title><rect x="15.3587%" y="1509" width="26.3149%" height="15" fill="rgb(244,19,51)" fg:x="34636462" fg:w="59344288"/><text x="15.6087%" y="1519.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (59,344,288 samples, 26.31%)</title><rect x="15.3587%" y="1493" width="26.3149%" height="15" fill="rgb(224,6,22)" fg:x="34636462" fg:w="59344288"/><text x="15.6087%" y="1503.50">&lt;css_bitvector_compiler::HtmlNode as core:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,217,375 samples, 1.43%)</title><rect x="40.2469%" y="1477" width="1.4267%" height="15" fill="rgb(224,145,5)" fg:x="90763375" fg:w="3217375"/><text x="40.4969%" y="1487.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,217,375 samples, 1.43%)</title><rect x="40.2469%" y="1461" width="1.4267%" height="15" fill="rgb(234,130,49)" fg:x="90763375" fg:w="3217375"/><text x="40.4969%" y="1471.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,217,375 samples, 1.43%)</title><rect x="40.2469%" y="1445" width="1.4267%" height="15" fill="rgb(254,6,2)" fg:x="90763375" fg:w="3217375"/><text x="40.4969%" y="1455.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,217,375 samples, 1.43%)</title><rect x="40.2469%" y="1429" width="1.4267%" height="15" fill="rgb(208,96,46)" fg:x="90763375" fg:w="3217375"/><text x="40.4969%" y="1439.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,217,375 samples, 1.43%)</title><rect x="40.2469%" y="1413" width="1.4267%" height="15" fill="rgb(239,3,39)" fg:x="90763375" fg:w="3217375"/><text x="40.4969%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,217,375 samples, 1.43%)</title><rect x="40.2469%" y="1397" width="1.4267%" height="15" fill="rgb(233,210,1)" fg:x="90763375" fg:w="3217375"/><text x="40.4969%" y="1407.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3,217,375 samples, 1.43%)</title><rect x="40.2469%" y="1381" width="1.4267%" height="15" fill="rgb(244,137,37)" fg:x="90763375" fg:w="3217375"/><text x="40.4969%" y="1391.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3,217,375 samples, 1.43%)</title><rect x="40.2469%" y="1365" width="1.4267%" height="15" fill="rgb(240,136,2)" fg:x="90763375" fg:w="3217375"/><text x="40.4969%" y="1375.50"></text></g><g><title>core::ptr::write (3,217,375 samples, 1.43%)</title><rect x="40.2469%" y="1349" width="1.4267%" height="15" fill="rgb(239,18,37)" fg:x="90763375" fg:w="3217375"/><text x="40.4969%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (62,519,827 samples, 27.72%)</title><rect x="15.3587%" y="1957" width="27.7230%" height="15" fill="rgb(218,185,22)" fg:x="34636462" fg:w="62519827"/><text x="15.6087%" y="1967.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (62,519,827 samples, 27.72%)</title><rect x="15.3587%" y="1941" width="27.7230%" height="15" fill="rgb(225,218,4)" fg:x="34636462" fg:w="62519827"/><text x="15.6087%" y="1951.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (62,519,827 samples, 27.72%)</title><rect x="15.3587%" y="1925" width="27.7230%" height="15" fill="rgb(230,182,32)" fg:x="34636462" fg:w="62519827"/><text x="15.6087%" y="1935.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (62,519,827 samples, 27.72%)</title><rect x="15.3587%" y="1909" width="27.7230%" height="15" fill="rgb(242,56,43)" fg:x="34636462" fg:w="62519827"/><text x="15.6087%" y="1919.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (62,519,827 samples, 27.72%)</title><rect x="15.3587%" y="1893" width="27.7230%" height="15" fill="rgb(233,99,24)" fg:x="34636462" fg:w="62519827"/><text x="15.6087%" y="1903.50">&lt;css_bitvector_compiler::HtmlNode as core::c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (62,519,827 samples, 27.72%)</title><rect x="15.3587%" y="1877" width="27.7230%" height="15" fill="rgb(234,209,42)" fg:x="34636462" fg:w="62519827"/><text x="15.6087%" y="1887.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (62,519,827 samples, 27.72%)</title><rect x="15.3587%" y="1861" width="27.7230%" height="15" fill="rgb(227,7,12)" fg:x="34636462" fg:w="62519827"/><text x="15.6087%" y="1871.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (62,519,827 samples, 27.72%)</title><rect x="15.3587%" y="1845" width="27.7230%" height="15" fill="rgb(245,203,43)" fg:x="34636462" fg:w="62519827"/><text x="15.6087%" y="1855.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (62,519,827 samples, 27.72%)</title><rect x="15.3587%" y="1829" width="27.7230%" height="15" fill="rgb(238,205,33)" fg:x="34636462" fg:w="62519827"/><text x="15.6087%" y="1839.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (62,519,827 samples, 27.72%)</title><rect x="15.3587%" y="1813" width="27.7230%" height="15" fill="rgb(231,56,7)" fg:x="34636462" fg:w="62519827"/><text x="15.6087%" y="1823.50">&lt;css_bitvector_compiler::HtmlNode as core::c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (62,519,827 samples, 27.72%)</title><rect x="15.3587%" y="1797" width="27.7230%" height="15" fill="rgb(244,186,29)" fg:x="34636462" fg:w="62519827"/><text x="15.6087%" y="1807.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (62,519,827 samples, 27.72%)</title><rect x="15.3587%" y="1781" width="27.7230%" height="15" fill="rgb(234,111,31)" fg:x="34636462" fg:w="62519827"/><text x="15.6087%" y="1791.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (62,519,827 samples, 27.72%)</title><rect x="15.3587%" y="1765" width="27.7230%" height="15" fill="rgb(241,149,10)" fg:x="34636462" fg:w="62519827"/><text x="15.6087%" y="1775.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (62,519,827 samples, 27.72%)</title><rect x="15.3587%" y="1749" width="27.7230%" height="15" fill="rgb(249,206,44)" fg:x="34636462" fg:w="62519827"/><text x="15.6087%" y="1759.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (62,519,827 samples, 27.72%)</title><rect x="15.3587%" y="1733" width="27.7230%" height="15" fill="rgb(251,153,30)" fg:x="34636462" fg:w="62519827"/><text x="15.6087%" y="1743.50">&lt;css_bitvector_compiler::HtmlNode as core::c..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,175,539 samples, 1.41%)</title><rect x="41.6736%" y="1717" width="1.4081%" height="15" fill="rgb(239,152,38)" fg:x="93980750" fg:w="3175539"/><text x="41.9236%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,175,539 samples, 1.41%)</title><rect x="41.6736%" y="1701" width="1.4081%" height="15" fill="rgb(249,139,47)" fg:x="93980750" fg:w="3175539"/><text x="41.9236%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,175,539 samples, 1.41%)</title><rect x="41.6736%" y="1685" width="1.4081%" height="15" fill="rgb(244,64,35)" fg:x="93980750" fg:w="3175539"/><text x="41.9236%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (3,175,539 samples, 1.41%)</title><rect x="41.6736%" y="1669" width="1.4081%" height="15" fill="rgb(216,46,15)" fg:x="93980750" fg:w="3175539"/><text x="41.9236%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,175,539 samples, 1.41%)</title><rect x="41.6736%" y="1653" width="1.4081%" height="15" fill="rgb(250,74,19)" fg:x="93980750" fg:w="3175539"/><text x="41.9236%" y="1663.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,175,539 samples, 1.41%)</title><rect x="41.6736%" y="1637" width="1.4081%" height="15" fill="rgb(249,42,33)" fg:x="93980750" fg:w="3175539"/><text x="41.9236%" y="1647.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,175,539 samples, 1.41%)</title><rect x="41.6736%" y="1621" width="1.4081%" height="15" fill="rgb(242,149,17)" fg:x="93980750" fg:w="3175539"/><text x="41.9236%" y="1631.50"></text></g><g><title>[libc.so.6] (3,175,539 samples, 1.41%)</title><rect x="41.6736%" y="1605" width="1.4081%" height="15" fill="rgb(244,29,21)" fg:x="93980750" fg:w="3175539"/><text x="41.9236%" y="1615.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (65,075,388 samples, 28.86%)</title><rect x="15.3587%" y="1973" width="28.8562%" height="15" fill="rgb(220,130,37)" fg:x="34636462" fg:w="65075388"/><text x="15.6087%" y="1983.50">&lt;css_bitvector_compiler::HtmlNode as core::clo..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,555,561 samples, 1.13%)</title><rect x="43.0817%" y="1957" width="1.1332%" height="15" fill="rgb(211,67,2)" fg:x="97156289" fg:w="2555561"/><text x="43.3317%" y="1967.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,555,561 samples, 1.13%)</title><rect x="43.0817%" y="1941" width="1.1332%" height="15" fill="rgb(235,68,52)" fg:x="97156289" fg:w="2555561"/><text x="43.3317%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,555,561 samples, 1.13%)</title><rect x="43.0817%" y="1925" width="1.1332%" height="15" fill="rgb(246,142,3)" fg:x="97156289" fg:w="2555561"/><text x="43.3317%" y="1935.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,555,561 samples, 1.13%)</title><rect x="43.0817%" y="1909" width="1.1332%" height="15" fill="rgb(241,25,7)" fg:x="97156289" fg:w="2555561"/><text x="43.3317%" y="1919.50"></text></g><g><title>alloc::slice::hack::to_vec (2,555,561 samples, 1.13%)</title><rect x="43.0817%" y="1893" width="1.1332%" height="15" fill="rgb(242,119,39)" fg:x="97156289" fg:w="2555561"/><text x="43.3317%" y="1903.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,555,561 samples, 1.13%)</title><rect x="43.0817%" y="1877" width="1.1332%" height="15" fill="rgb(241,98,45)" fg:x="97156289" fg:w="2555561"/><text x="43.3317%" y="1887.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,555,561 samples, 1.13%)</title><rect x="43.0817%" y="1861" width="1.1332%" height="15" fill="rgb(254,28,30)" fg:x="97156289" fg:w="2555561"/><text x="43.3317%" y="1871.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,555,561 samples, 1.13%)</title><rect x="43.0817%" y="1845" width="1.1332%" height="15" fill="rgb(241,142,54)" fg:x="97156289" fg:w="2555561"/><text x="43.3317%" y="1855.50"></text></g><g><title>[libc.so.6] (2,555,561 samples, 1.13%)</title><rect x="43.0817%" y="1829" width="1.1332%" height="15" fill="rgb(222,85,15)" fg:x="97156289" fg:w="2555561"/><text x="43.3317%" y="1839.50"></text></g><g><title>benchmark::json_to_html_node (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1957" width="1.4337%" height="15" fill="rgb(210,85,47)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1941" width="1.4337%" height="15" fill="rgb(224,206,25)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1951.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1925" width="1.4337%" height="15" fill="rgb(243,201,19)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1935.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1909" width="1.4337%" height="15" fill="rgb(236,59,4)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1919.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1893" width="1.4337%" height="15" fill="rgb(254,179,45)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1903.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1877" width="1.4337%" height="15" fill="rgb(226,14,10)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1861" width="1.4337%" height="15" fill="rgb(244,27,41)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1845" width="1.4337%" height="15" fill="rgb(235,35,32)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1855.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1829" width="1.4337%" height="15" fill="rgb(218,68,31)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1813" width="1.4337%" height="15" fill="rgb(207,120,37)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1823.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1797" width="1.4337%" height="15" fill="rgb(227,98,0)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1807.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1781" width="1.4337%" height="15" fill="rgb(207,7,3)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1765" width="1.4337%" height="15" fill="rgb(206,98,19)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1775.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1749" width="1.4337%" height="15" fill="rgb(217,5,26)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1733" width="1.4337%" height="15" fill="rgb(235,190,38)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1717" width="1.4337%" height="15" fill="rgb(247,86,24)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1727.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (3,233,184 samples, 1.43%)</title><rect x="44.2149%" y="1701" width="1.4337%" height="15" fill="rgb(205,101,16)" fg:x="99711850" fg:w="3233184"/><text x="44.4649%" y="1711.50"></text></g><g><title>benchmark::apply_frame_modifications (5,744,576 samples, 2.55%)</title><rect x="44.2149%" y="1973" width="2.5473%" height="15" fill="rgb(246,168,33)" fg:x="99711850" fg:w="5744576"/><text x="44.4649%" y="1983.50">be..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,511,392 samples, 1.11%)</title><rect x="45.6486%" y="1957" width="1.1136%" height="15" fill="rgb(231,114,1)" fg:x="102945034" fg:w="2511392"/><text x="45.8986%" y="1967.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,511,392 samples, 1.11%)</title><rect x="45.6486%" y="1941" width="1.1136%" height="15" fill="rgb(207,184,53)" fg:x="102945034" fg:w="2511392"/><text x="45.8986%" y="1951.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,511,392 samples, 1.11%)</title><rect x="45.6486%" y="1925" width="1.1136%" height="15" fill="rgb(224,95,51)" fg:x="102945034" fg:w="2511392"/><text x="45.8986%" y="1935.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,511,392 samples, 1.11%)</title><rect x="45.6486%" y="1909" width="1.1136%" height="15" fill="rgb(212,188,45)" fg:x="102945034" fg:w="2511392"/><text x="45.8986%" y="1919.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,511,392 samples, 1.11%)</title><rect x="45.6486%" y="1893" width="1.1136%" height="15" fill="rgb(223,154,38)" fg:x="102945034" fg:w="2511392"/><text x="45.8986%" y="1903.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,511,392 samples, 1.11%)</title><rect x="45.6486%" y="1877" width="1.1136%" height="15" fill="rgb(251,22,52)" fg:x="102945034" fg:w="2511392"/><text x="45.8986%" y="1887.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,511,392 samples, 1.11%)</title><rect x="45.6486%" y="1861" width="1.1136%" height="15" fill="rgb(229,209,22)" fg:x="102945034" fg:w="2511392"/><text x="45.8986%" y="1871.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,511,392 samples, 1.11%)</title><rect x="45.6486%" y="1845" width="1.1136%" height="15" fill="rgb(234,138,34)" fg:x="102945034" fg:w="2511392"/><text x="45.8986%" y="1855.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,511,392 samples, 1.11%)</title><rect x="45.6486%" y="1829" width="1.1136%" height="15" fill="rgb(212,95,11)" fg:x="102945034" fg:w="2511392"/><text x="45.8986%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,511,392 samples, 1.11%)</title><rect x="45.6486%" y="1813" width="1.1136%" height="15" fill="rgb(240,179,47)" fg:x="102945034" fg:w="2511392"/><text x="45.8986%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,511,392 samples, 1.11%)</title><rect x="45.6486%" y="1797" width="1.1136%" height="15" fill="rgb(240,163,11)" fg:x="102945034" fg:w="2511392"/><text x="45.8986%" y="1807.50"></text></g><g><title>benchmark::count_nodes (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1973" width="1.0942%" height="15" fill="rgb(236,37,12)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1957" width="1.0942%" height="15" fill="rgb(232,164,16)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1967.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1941" width="1.0942%" height="15" fill="rgb(244,205,15)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1925" width="1.0942%" height="15" fill="rgb(223,117,47)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1935.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1909" width="1.0942%" height="15" fill="rgb(244,107,35)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1919.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1893" width="1.0942%" height="15" fill="rgb(205,140,8)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1903.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1877" width="1.0942%" height="15" fill="rgb(228,84,46)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1887.50"></text></g><g><title>benchmark::count_nodes (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1861" width="1.0942%" height="15" fill="rgb(254,188,9)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1845" width="1.0942%" height="15" fill="rgb(206,112,54)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1855.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1829" width="1.0942%" height="15" fill="rgb(216,84,49)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1813" width="1.0942%" height="15" fill="rgb(214,194,35)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1823.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1797" width="1.0942%" height="15" fill="rgb(249,28,3)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1807.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1781" width="1.0942%" height="15" fill="rgb(222,56,52)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1791.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1765" width="1.0942%" height="15" fill="rgb(245,217,50)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1775.50"></text></g><g><title>benchmark::count_nodes (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1749" width="1.0942%" height="15" fill="rgb(213,201,24)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1733" width="1.0942%" height="15" fill="rgb(248,116,28)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1743.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1717" width="1.0942%" height="15" fill="rgb(219,72,43)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1701" width="1.0942%" height="15" fill="rgb(209,138,14)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1711.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1685" width="1.0942%" height="15" fill="rgb(222,18,33)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1695.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1669" width="1.0942%" height="15" fill="rgb(213,199,7)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1679.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1653" width="1.0942%" height="15" fill="rgb(250,110,10)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1663.50"></text></g><g><title>benchmark::count_nodes (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1637" width="1.0942%" height="15" fill="rgb(248,123,6)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1621" width="1.0942%" height="15" fill="rgb(206,91,31)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1631.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1605" width="1.0942%" height="15" fill="rgb(211,154,13)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1589" width="1.0942%" height="15" fill="rgb(225,148,7)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1599.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1573" width="1.0942%" height="15" fill="rgb(220,160,43)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1583.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1557" width="1.0942%" height="15" fill="rgb(213,52,39)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1567.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1541" width="1.0942%" height="15" fill="rgb(243,137,7)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1551.50"></text></g><g><title>benchmark::count_nodes (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1525" width="1.0942%" height="15" fill="rgb(230,79,13)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1509" width="1.0942%" height="15" fill="rgb(247,105,23)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1519.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1493" width="1.0942%" height="15" fill="rgb(223,179,41)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1477" width="1.0942%" height="15" fill="rgb(218,9,34)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1487.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1461" width="1.0942%" height="15" fill="rgb(222,106,8)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1471.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1445" width="1.0942%" height="15" fill="rgb(211,220,0)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1455.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1429" width="1.0942%" height="15" fill="rgb(229,52,16)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1439.50"></text></g><g><title>benchmark::count_nodes (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1413" width="1.0942%" height="15" fill="rgb(212,155,18)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1397" width="1.0942%" height="15" fill="rgb(242,21,14)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1407.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1381" width="1.0942%" height="15" fill="rgb(222,19,48)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1365" width="1.0942%" height="15" fill="rgb(232,45,27)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1375.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1349" width="1.0942%" height="15" fill="rgb(249,103,42)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1359.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1333" width="1.0942%" height="15" fill="rgb(246,81,33)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1343.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1317" width="1.0942%" height="15" fill="rgb(252,33,42)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1327.50"></text></g><g><title>benchmark::count_nodes (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1301" width="1.0942%" height="15" fill="rgb(209,212,41)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1285" width="1.0942%" height="15" fill="rgb(207,154,6)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1295.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1269" width="1.0942%" height="15" fill="rgb(223,64,47)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1253" width="1.0942%" height="15" fill="rgb(211,161,38)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1263.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1237" width="1.0942%" height="15" fill="rgb(219,138,40)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1247.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1221" width="1.0942%" height="15" fill="rgb(241,228,46)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1231.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1205" width="1.0942%" height="15" fill="rgb(223,209,38)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1215.50"></text></g><g><title>benchmark::count_nodes (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1189" width="1.0942%" height="15" fill="rgb(236,164,45)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1173" width="1.0942%" height="15" fill="rgb(231,15,5)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1183.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1157" width="1.0942%" height="15" fill="rgb(252,35,15)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1141" width="1.0942%" height="15" fill="rgb(248,181,18)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1125" width="1.0942%" height="15" fill="rgb(233,39,42)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1135.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1109" width="1.0942%" height="15" fill="rgb(238,110,33)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1119.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1093" width="1.0942%" height="15" fill="rgb(233,195,10)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1103.50"></text></g><g><title>benchmark::count_nodes (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1077" width="1.0942%" height="15" fill="rgb(254,105,3)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1061" width="1.0942%" height="15" fill="rgb(221,225,9)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1071.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1045" width="1.0942%" height="15" fill="rgb(224,227,45)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1029" width="1.0942%" height="15" fill="rgb(229,198,43)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="1013" width="1.0942%" height="15" fill="rgb(206,209,35)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1023.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="997" width="1.0942%" height="15" fill="rgb(245,195,53)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="1007.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="981" width="1.0942%" height="15" fill="rgb(240,92,26)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="991.50"></text></g><g><title>benchmark::count_nodes (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="965" width="1.0942%" height="15" fill="rgb(207,40,23)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="949" width="1.0942%" height="15" fill="rgb(223,111,35)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="959.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="933" width="1.0942%" height="15" fill="rgb(229,147,28)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="917" width="1.0942%" height="15" fill="rgb(211,29,28)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="901" width="1.0942%" height="15" fill="rgb(228,72,33)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="885" width="1.0942%" height="15" fill="rgb(205,214,31)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="895.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="869" width="1.0942%" height="15" fill="rgb(224,111,15)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="879.50"></text></g><g><title>benchmark::count_nodes (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="853" width="1.0942%" height="15" fill="rgb(253,21,26)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="837" width="1.0942%" height="15" fill="rgb(245,139,43)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,467,537 samples, 1.09%)</title><rect x="46.7622%" y="821" width="1.0942%" height="15" fill="rgb(252,170,7)" fg:x="105456426" fg:w="2467537"/><text x="47.0122%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,942,882 samples, 1.30%)</title><rect x="49.2889%" y="1381" width="1.3050%" height="15" fill="rgb(231,118,14)" fg:x="111154427" fg:w="2942882"/><text x="49.5389%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,942,882 samples, 1.30%)</title><rect x="49.2889%" y="1365" width="1.3050%" height="15" fill="rgb(238,83,0)" fg:x="111154427" fg:w="2942882"/><text x="49.5389%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,942,882 samples, 1.30%)</title><rect x="49.2889%" y="1349" width="1.3050%" height="15" fill="rgb(221,39,39)" fg:x="111154427" fg:w="2942882"/><text x="49.5389%" y="1359.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,942,882 samples, 1.30%)</title><rect x="49.2889%" y="1333" width="1.3050%" height="15" fill="rgb(222,119,46)" fg:x="111154427" fg:w="2942882"/><text x="49.5389%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,942,882 samples, 1.30%)</title><rect x="49.2889%" y="1317" width="1.3050%" height="15" fill="rgb(222,165,49)" fg:x="111154427" fg:w="2942882"/><text x="49.5389%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,942,882 samples, 1.30%)</title><rect x="49.2889%" y="1301" width="1.3050%" height="15" fill="rgb(219,113,52)" fg:x="111154427" fg:w="2942882"/><text x="49.5389%" y="1311.50"></text></g><g><title>alloc::alloc::dealloc (2,942,882 samples, 1.30%)</title><rect x="49.2889%" y="1285" width="1.3050%" height="15" fill="rgb(214,7,15)" fg:x="111154427" fg:w="2942882"/><text x="49.5389%" y="1295.50"></text></g><g><title>cfree (2,942,882 samples, 1.30%)</title><rect x="49.2889%" y="1269" width="1.3050%" height="15" fill="rgb(235,32,4)" fg:x="111154427" fg:w="2942882"/><text x="49.5389%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,220,406 samples, 1.43%)</title><rect x="50.5938%" y="853" width="1.4280%" height="15" fill="rgb(238,90,54)" fg:x="114097309" fg:w="3220406"/><text x="50.8438%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,220,406 samples, 1.43%)</title><rect x="50.5938%" y="837" width="1.4280%" height="15" fill="rgb(213,208,19)" fg:x="114097309" fg:w="3220406"/><text x="50.8438%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,220,406 samples, 1.43%)</title><rect x="50.5938%" y="821" width="1.4280%" height="15" fill="rgb(233,156,4)" fg:x="114097309" fg:w="3220406"/><text x="50.8438%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,220,406 samples, 1.43%)</title><rect x="50.5938%" y="805" width="1.4280%" height="15" fill="rgb(207,194,5)" fg:x="114097309" fg:w="3220406"/><text x="50.8438%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,220,406 samples, 1.43%)</title><rect x="50.5938%" y="789" width="1.4280%" height="15" fill="rgb(206,111,30)" fg:x="114097309" fg:w="3220406"/><text x="50.8438%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,220,406 samples, 1.43%)</title><rect x="50.5938%" y="773" width="1.4280%" height="15" fill="rgb(243,70,54)" fg:x="114097309" fg:w="3220406"/><text x="50.8438%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,220,406 samples, 1.43%)</title><rect x="50.5938%" y="757" width="1.4280%" height="15" fill="rgb(242,28,8)" fg:x="114097309" fg:w="3220406"/><text x="50.8438%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;css_bitvector_compiler::BitVector&gt;&gt; (3,220,406 samples, 1.43%)</title><rect x="50.5938%" y="741" width="1.4280%" height="15" fill="rgb(219,106,18)" fg:x="114097309" fg:w="3220406"/><text x="50.8438%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,453,021 samples, 2.86%)</title><rect x="50.5938%" y="869" width="2.8614%" height="15" fill="rgb(244,222,10)" fg:x="114097309" fg:w="6453021"/><text x="50.8438%" y="879.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,232,615 samples, 1.43%)</title><rect x="52.0218%" y="853" width="1.4334%" height="15" fill="rgb(236,179,52)" fg:x="117317715" fg:w="3232615"/><text x="52.2718%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,232,615 samples, 1.43%)</title><rect x="52.0218%" y="837" width="1.4334%" height="15" fill="rgb(213,23,39)" fg:x="117317715" fg:w="3232615"/><text x="52.2718%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,232,615 samples, 1.43%)</title><rect x="52.0218%" y="821" width="1.4334%" height="15" fill="rgb(238,48,10)" fg:x="117317715" fg:w="3232615"/><text x="52.2718%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,232,615 samples, 1.43%)</title><rect x="52.0218%" y="805" width="1.4334%" height="15" fill="rgb(251,196,23)" fg:x="117317715" fg:w="3232615"/><text x="52.2718%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (3,232,615 samples, 1.43%)</title><rect x="52.0218%" y="789" width="1.4334%" height="15" fill="rgb(250,152,24)" fg:x="117317715" fg:w="3232615"/><text x="52.2718%" y="799.50"></text></g><g><title>cfree (3,232,615 samples, 1.43%)</title><rect x="52.0218%" y="773" width="1.4334%" height="15" fill="rgb(209,150,17)" fg:x="117317715" fg:w="3232615"/><text x="52.2718%" y="783.50"></text></g><g><title>[libc.so.6] (3,232,615 samples, 1.43%)</title><rect x="52.0218%" y="757" width="1.4334%" height="15" fill="rgb(234,202,34)" fg:x="117317715" fg:w="3232615"/><text x="52.2718%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,226,316 samples, 1.43%)</title><rect x="53.4553%" y="773" width="1.4306%" height="15" fill="rgb(253,148,53)" fg:x="120550330" fg:w="3226316"/><text x="53.7053%" y="783.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,226,316 samples, 1.43%)</title><rect x="53.4553%" y="757" width="1.4306%" height="15" fill="rgb(218,129,16)" fg:x="120550330" fg:w="3226316"/><text x="53.7053%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,226,316 samples, 1.43%)</title><rect x="53.4553%" y="741" width="1.4306%" height="15" fill="rgb(216,85,19)" fg:x="120550330" fg:w="3226316"/><text x="53.7053%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,226,316 samples, 1.43%)</title><rect x="53.4553%" y="725" width="1.4306%" height="15" fill="rgb(235,228,7)" fg:x="120550330" fg:w="3226316"/><text x="53.7053%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,226,316 samples, 1.43%)</title><rect x="53.4553%" y="709" width="1.4306%" height="15" fill="rgb(245,175,0)" fg:x="120550330" fg:w="3226316"/><text x="53.7053%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,226,316 samples, 1.43%)</title><rect x="53.4553%" y="693" width="1.4306%" height="15" fill="rgb(208,168,36)" fg:x="120550330" fg:w="3226316"/><text x="53.7053%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,226,316 samples, 1.43%)</title><rect x="53.4553%" y="677" width="1.4306%" height="15" fill="rgb(246,171,24)" fg:x="120550330" fg:w="3226316"/><text x="53.7053%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,226,316 samples, 1.43%)</title><rect x="53.4553%" y="661" width="1.4306%" height="15" fill="rgb(215,142,24)" fg:x="120550330" fg:w="3226316"/><text x="53.7053%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,226,316 samples, 1.43%)</title><rect x="53.4553%" y="645" width="1.4306%" height="15" fill="rgb(250,187,7)" fg:x="120550330" fg:w="3226316"/><text x="53.7053%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,226,316 samples, 1.43%)</title><rect x="53.4553%" y="629" width="1.4306%" height="15" fill="rgb(228,66,33)" fg:x="120550330" fg:w="3226316"/><text x="53.7053%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (3,226,316 samples, 1.43%)</title><rect x="53.4553%" y="613" width="1.4306%" height="15" fill="rgb(234,215,21)" fg:x="120550330" fg:w="3226316"/><text x="53.7053%" y="623.50"></text></g><g><title>cfree (3,226,316 samples, 1.43%)</title><rect x="53.4553%" y="597" width="1.4306%" height="15" fill="rgb(222,191,20)" fg:x="120550330" fg:w="3226316"/><text x="53.7053%" y="607.50"></text></g><g><title>[libc.so.6] (3,226,316 samples, 1.43%)</title><rect x="53.4553%" y="581" width="1.4306%" height="15" fill="rgb(245,79,54)" fg:x="120550330" fg:w="3226316"/><text x="53.7053%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (12,748,805 samples, 5.65%)</title><rect x="50.5938%" y="933" width="5.6532%" height="15" fill="rgb(240,10,37)" fg:x="114097309" fg:w="12748805"/><text x="50.8438%" y="943.50">core::p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,748,805 samples, 5.65%)</title><rect x="50.5938%" y="917" width="5.6532%" height="15" fill="rgb(214,192,32)" fg:x="114097309" fg:w="12748805"/><text x="50.8438%" y="927.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (12,748,805 samples, 5.65%)</title><rect x="50.5938%" y="901" width="5.6532%" height="15" fill="rgb(209,36,54)" fg:x="114097309" fg:w="12748805"/><text x="50.8438%" y="911.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (12,748,805 samples, 5.65%)</title><rect x="50.5938%" y="885" width="5.6532%" height="15" fill="rgb(220,10,11)" fg:x="114097309" fg:w="12748805"/><text x="50.8438%" y="895.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (6,295,784 samples, 2.79%)</title><rect x="53.4553%" y="869" width="2.7917%" height="15" fill="rgb(221,106,17)" fg:x="120550330" fg:w="6295784"/><text x="53.7053%" y="879.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (6,295,784 samples, 2.79%)</title><rect x="53.4553%" y="853" width="2.7917%" height="15" fill="rgb(251,142,44)" fg:x="120550330" fg:w="6295784"/><text x="53.7053%" y="863.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (6,295,784 samples, 2.79%)</title><rect x="53.4553%" y="837" width="2.7917%" height="15" fill="rgb(238,13,15)" fg:x="120550330" fg:w="6295784"/><text x="53.7053%" y="847.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (6,295,784 samples, 2.79%)</title><rect x="53.4553%" y="821" width="2.7917%" height="15" fill="rgb(208,107,27)" fg:x="120550330" fg:w="6295784"/><text x="53.7053%" y="831.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,295,784 samples, 2.79%)</title><rect x="53.4553%" y="805" width="2.7917%" height="15" fill="rgb(205,136,37)" fg:x="120550330" fg:w="6295784"/><text x="53.7053%" y="815.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (6,295,784 samples, 2.79%)</title><rect x="53.4553%" y="789" width="2.7917%" height="15" fill="rgb(250,205,27)" fg:x="120550330" fg:w="6295784"/><text x="53.7053%" y="799.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,069,468 samples, 1.36%)</title><rect x="54.8859%" y="773" width="1.3611%" height="15" fill="rgb(210,80,43)" fg:x="123776646" fg:w="3069468"/><text x="55.1359%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,069,468 samples, 1.36%)</title><rect x="54.8859%" y="757" width="1.3611%" height="15" fill="rgb(247,160,36)" fg:x="123776646" fg:w="3069468"/><text x="55.1359%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (3,069,468 samples, 1.36%)</title><rect x="54.8859%" y="741" width="1.3611%" height="15" fill="rgb(234,13,49)" fg:x="123776646" fg:w="3069468"/><text x="55.1359%" y="751.50"></text></g><g><title>cfree (3,069,468 samples, 1.36%)</title><rect x="54.8859%" y="725" width="1.3611%" height="15" fill="rgb(234,122,0)" fg:x="123776646" fg:w="3069468"/><text x="55.1359%" y="735.50"></text></g><g><title>[libc.so.6] (3,069,468 samples, 1.36%)</title><rect x="54.8859%" y="709" width="1.3611%" height="15" fill="rgb(207,146,38)" fg:x="123776646" fg:w="3069468"/><text x="55.1359%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,984,853 samples, 1.32%)</title><rect x="56.2470%" y="933" width="1.3236%" height="15" fill="rgb(207,177,25)" fg:x="126846114" fg:w="2984853"/><text x="56.4970%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,984,853 samples, 1.32%)</title><rect x="56.2470%" y="917" width="1.3236%" height="15" fill="rgb(211,178,42)" fg:x="126846114" fg:w="2984853"/><text x="56.4970%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,984,853 samples, 1.32%)</title><rect x="56.2470%" y="901" width="1.3236%" height="15" fill="rgb(230,69,54)" fg:x="126846114" fg:w="2984853"/><text x="56.4970%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,984,853 samples, 1.32%)</title><rect x="56.2470%" y="885" width="1.3236%" height="15" fill="rgb(214,135,41)" fg:x="126846114" fg:w="2984853"/><text x="56.4970%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,984,853 samples, 1.32%)</title><rect x="56.2470%" y="869" width="1.3236%" height="15" fill="rgb(237,67,25)" fg:x="126846114" fg:w="2984853"/><text x="56.4970%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,984,853 samples, 1.32%)</title><rect x="56.2470%" y="853" width="1.3236%" height="15" fill="rgb(222,189,50)" fg:x="126846114" fg:w="2984853"/><text x="56.4970%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,984,853 samples, 1.32%)</title><rect x="56.2470%" y="837" width="1.3236%" height="15" fill="rgb(245,148,34)" fg:x="126846114" fg:w="2984853"/><text x="56.4970%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (2,984,853 samples, 1.32%)</title><rect x="56.2470%" y="821" width="1.3236%" height="15" fill="rgb(222,29,6)" fg:x="126846114" fg:w="2984853"/><text x="56.4970%" y="831.50"></text></g><g><title>cfree (2,984,853 samples, 1.32%)</title><rect x="56.2470%" y="805" width="1.3236%" height="15" fill="rgb(221,189,43)" fg:x="126846114" fg:w="2984853"/><text x="56.4970%" y="815.50"></text></g><g><title>[libc.so.6] (2,984,853 samples, 1.32%)</title><rect x="56.2470%" y="789" width="1.3236%" height="15" fill="rgb(207,36,27)" fg:x="126846114" fg:w="2984853"/><text x="56.4970%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (18,881,996 samples, 8.37%)</title><rect x="50.5938%" y="1061" width="8.3728%" height="15" fill="rgb(217,90,24)" fg:x="114097309" fg:w="18881996"/><text x="50.8438%" y="1071.50">core::ptr::d..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,881,996 samples, 8.37%)</title><rect x="50.5938%" y="1045" width="8.3728%" height="15" fill="rgb(224,66,35)" fg:x="114097309" fg:w="18881996"/><text x="50.8438%" y="1055.50">&lt;alloc::vec:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (18,881,996 samples, 8.37%)</title><rect x="50.5938%" y="1029" width="8.3728%" height="15" fill="rgb(221,13,50)" fg:x="114097309" fg:w="18881996"/><text x="50.8438%" y="1039.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (18,881,996 samples, 8.37%)</title><rect x="50.5938%" y="1013" width="8.3728%" height="15" fill="rgb(236,68,49)" fg:x="114097309" fg:w="18881996"/><text x="50.8438%" y="1023.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (18,881,996 samples, 8.37%)</title><rect x="50.5938%" y="997" width="8.3728%" height="15" fill="rgb(229,146,28)" fg:x="114097309" fg:w="18881996"/><text x="50.8438%" y="1007.50">core::ptr::d..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,881,996 samples, 8.37%)</title><rect x="50.5938%" y="981" width="8.3728%" height="15" fill="rgb(225,31,38)" fg:x="114097309" fg:w="18881996"/><text x="50.8438%" y="991.50">&lt;alloc::vec:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (18,881,996 samples, 8.37%)</title><rect x="50.5938%" y="965" width="8.3728%" height="15" fill="rgb(250,208,3)" fg:x="114097309" fg:w="18881996"/><text x="50.8438%" y="975.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (18,881,996 samples, 8.37%)</title><rect x="50.5938%" y="949" width="8.3728%" height="15" fill="rgb(246,54,23)" fg:x="114097309" fg:w="18881996"/><text x="50.8438%" y="959.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="933" width="1.3961%" height="15" fill="rgb(243,76,11)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="917" width="1.3961%" height="15" fill="rgb(245,21,50)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="901" width="1.3961%" height="15" fill="rgb(228,9,43)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="885" width="1.3961%" height="15" fill="rgb(208,100,47)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="869" width="1.3961%" height="15" fill="rgb(232,26,8)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="853" width="1.3961%" height="15" fill="rgb(216,166,38)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="837" width="1.3961%" height="15" fill="rgb(251,202,51)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="821" width="1.3961%" height="15" fill="rgb(254,216,34)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="805" width="1.3961%" height="15" fill="rgb(251,32,27)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="789" width="1.3961%" height="15" fill="rgb(208,127,28)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="773" width="1.3961%" height="15" fill="rgb(224,137,22)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="757" width="1.3961%" height="15" fill="rgb(254,70,32)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="741" width="1.3961%" height="15" fill="rgb(229,75,37)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="725" width="1.3961%" height="15" fill="rgb(252,64,23)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="709" width="1.3961%" height="15" fill="rgb(232,162,48)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="693" width="1.3961%" height="15" fill="rgb(246,160,12)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="677" width="1.3961%" height="15" fill="rgb(247,166,0)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="687.50"></text></g><g><title>cfree (3,148,338 samples, 1.40%)</title><rect x="57.5705%" y="661" width="1.3961%" height="15" fill="rgb(249,219,21)" fg:x="129830967" fg:w="3148338"/><text x="57.8205%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (22,129,685 samples, 9.81%)</title><rect x="50.5938%" y="1189" width="9.8129%" height="15" fill="rgb(205,209,3)" fg:x="114097309" fg:w="22129685"/><text x="50.8438%" y="1199.50">core::ptr::dro..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,129,685 samples, 9.81%)</title><rect x="50.5938%" y="1173" width="9.8129%" height="15" fill="rgb(243,44,1)" fg:x="114097309" fg:w="22129685"/><text x="50.8438%" y="1183.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (22,129,685 samples, 9.81%)</title><rect x="50.5938%" y="1157" width="9.8129%" height="15" fill="rgb(206,159,16)" fg:x="114097309" fg:w="22129685"/><text x="50.8438%" y="1167.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (22,129,685 samples, 9.81%)</title><rect x="50.5938%" y="1141" width="9.8129%" height="15" fill="rgb(244,77,30)" fg:x="114097309" fg:w="22129685"/><text x="50.8438%" y="1151.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (22,129,685 samples, 9.81%)</title><rect x="50.5938%" y="1125" width="9.8129%" height="15" fill="rgb(218,69,12)" fg:x="114097309" fg:w="22129685"/><text x="50.8438%" y="1135.50">core::ptr::dro..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,129,685 samples, 9.81%)</title><rect x="50.5938%" y="1109" width="9.8129%" height="15" fill="rgb(212,87,7)" fg:x="114097309" fg:w="22129685"/><text x="50.8438%" y="1119.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (22,129,685 samples, 9.81%)</title><rect x="50.5938%" y="1093" width="9.8129%" height="15" fill="rgb(245,114,25)" fg:x="114097309" fg:w="22129685"/><text x="50.8438%" y="1103.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (22,129,685 samples, 9.81%)</title><rect x="50.5938%" y="1077" width="9.8129%" height="15" fill="rgb(210,61,42)" fg:x="114097309" fg:w="22129685"/><text x="50.8438%" y="1087.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="1061" width="1.4401%" height="15" fill="rgb(211,52,33)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="1045" width="1.4401%" height="15" fill="rgb(234,58,33)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="1029" width="1.4401%" height="15" fill="rgb(220,115,36)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="1013" width="1.4401%" height="15" fill="rgb(243,153,54)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="997" width="1.4401%" height="15" fill="rgb(251,47,18)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="981" width="1.4401%" height="15" fill="rgb(242,102,42)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="965" width="1.4401%" height="15" fill="rgb(234,31,38)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="949" width="1.4401%" height="15" fill="rgb(221,117,51)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="933" width="1.4401%" height="15" fill="rgb(212,20,18)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="917" width="1.4401%" height="15" fill="rgb(245,133,36)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="901" width="1.4401%" height="15" fill="rgb(212,6,19)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="885" width="1.4401%" height="15" fill="rgb(218,1,36)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="869" width="1.4401%" height="15" fill="rgb(246,84,54)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="853" width="1.4401%" height="15" fill="rgb(242,110,6)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="837" width="1.4401%" height="15" fill="rgb(214,47,5)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="821" width="1.4401%" height="15" fill="rgb(218,159,25)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="805" width="1.4401%" height="15" fill="rgb(215,211,28)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="815.50"></text></g><g><title>cfree (3,247,689 samples, 1.44%)</title><rect x="58.9666%" y="789" width="1.4401%" height="15" fill="rgb(238,59,32)" fg:x="132979305" fg:w="3247689"/><text x="59.2166%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (25,248,378 samples, 11.20%)</title><rect x="50.5938%" y="1317" width="11.1958%" height="15" fill="rgb(226,82,3)" fg:x="114097309" fg:w="25248378"/><text x="50.8438%" y="1327.50">core::ptr::drop_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,248,378 samples, 11.20%)</title><rect x="50.5938%" y="1301" width="11.1958%" height="15" fill="rgb(240,164,32)" fg:x="114097309" fg:w="25248378"/><text x="50.8438%" y="1311.50">&lt;alloc::vec::Vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (25,248,378 samples, 11.20%)</title><rect x="50.5938%" y="1285" width="11.1958%" height="15" fill="rgb(232,46,7)" fg:x="114097309" fg:w="25248378"/><text x="50.8438%" y="1295.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (25,248,378 samples, 11.20%)</title><rect x="50.5938%" y="1269" width="11.1958%" height="15" fill="rgb(229,129,53)" fg:x="114097309" fg:w="25248378"/><text x="50.8438%" y="1279.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (25,248,378 samples, 11.20%)</title><rect x="50.5938%" y="1253" width="11.1958%" height="15" fill="rgb(234,188,29)" fg:x="114097309" fg:w="25248378"/><text x="50.8438%" y="1263.50">core::ptr::drop_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,248,378 samples, 11.20%)</title><rect x="50.5938%" y="1237" width="11.1958%" height="15" fill="rgb(246,141,4)" fg:x="114097309" fg:w="25248378"/><text x="50.8438%" y="1247.50">&lt;alloc::vec::Vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (25,248,378 samples, 11.20%)</title><rect x="50.5938%" y="1221" width="11.1958%" height="15" fill="rgb(229,23,39)" fg:x="114097309" fg:w="25248378"/><text x="50.8438%" y="1231.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (25,248,378 samples, 11.20%)</title><rect x="50.5938%" y="1205" width="11.1958%" height="15" fill="rgb(206,12,3)" fg:x="114097309" fg:w="25248378"/><text x="50.8438%" y="1215.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="1189" width="1.3829%" height="15" fill="rgb(252,226,20)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="1173" width="1.3829%" height="15" fill="rgb(216,123,35)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="1157" width="1.3829%" height="15" fill="rgb(212,68,40)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="1141" width="1.3829%" height="15" fill="rgb(254,125,32)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="1125" width="1.3829%" height="15" fill="rgb(253,97,22)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="1109" width="1.3829%" height="15" fill="rgb(241,101,14)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="1093" width="1.3829%" height="15" fill="rgb(238,103,29)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="1077" width="1.3829%" height="15" fill="rgb(233,195,47)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="1061" width="1.3829%" height="15" fill="rgb(246,218,30)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="1045" width="1.3829%" height="15" fill="rgb(219,145,47)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="1029" width="1.3829%" height="15" fill="rgb(243,12,26)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="1013" width="1.3829%" height="15" fill="rgb(214,87,16)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="997" width="1.3829%" height="15" fill="rgb(208,99,42)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="981" width="1.3829%" height="15" fill="rgb(253,99,2)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="965" width="1.3829%" height="15" fill="rgb(220,168,23)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="949" width="1.3829%" height="15" fill="rgb(242,38,24)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="933" width="1.3829%" height="15" fill="rgb(225,182,9)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="943.50"></text></g><g><title>__rust_dealloc (3,118,693 samples, 1.38%)</title><rect x="60.4067%" y="917" width="1.3829%" height="15" fill="rgb(243,178,37)" fg:x="136226994" fg:w="3118693"/><text x="60.6567%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (34,641,247 samples, 15.36%)</title><rect x="47.8564%" y="1509" width="15.3609%" height="15" fill="rgb(232,139,19)" fg:x="107923963" fg:w="34641247"/><text x="48.1064%" y="1519.50">core::ptr::drop_in_place..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34,641,247 samples, 15.36%)</title><rect x="47.8564%" y="1493" width="15.3609%" height="15" fill="rgb(225,201,24)" fg:x="107923963" fg:w="34641247"/><text x="48.1064%" y="1503.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (34,641,247 samples, 15.36%)</title><rect x="47.8564%" y="1477" width="15.3609%" height="15" fill="rgb(221,47,46)" fg:x="107923963" fg:w="34641247"/><text x="48.1064%" y="1487.50">core::ptr::drop_in_place..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (34,641,247 samples, 15.36%)</title><rect x="47.8564%" y="1461" width="15.3609%" height="15" fill="rgb(249,23,13)" fg:x="107923963" fg:w="34641247"/><text x="48.1064%" y="1471.50">core::ptr::drop_in_place..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (34,641,247 samples, 15.36%)</title><rect x="47.8564%" y="1445" width="15.3609%" height="15" fill="rgb(219,9,5)" fg:x="107923963" fg:w="34641247"/><text x="48.1064%" y="1455.50">core::ptr::drop_in_place..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34,641,247 samples, 15.36%)</title><rect x="47.8564%" y="1429" width="15.3609%" height="15" fill="rgb(254,171,16)" fg:x="107923963" fg:w="34641247"/><text x="48.1064%" y="1439.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (34,641,247 samples, 15.36%)</title><rect x="47.8564%" y="1413" width="15.3609%" height="15" fill="rgb(230,171,20)" fg:x="107923963" fg:w="34641247"/><text x="48.1064%" y="1423.50">core::ptr::drop_in_place..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (31,410,783 samples, 13.93%)</title><rect x="49.2889%" y="1397" width="13.9284%" height="15" fill="rgb(210,71,41)" fg:x="111154427" fg:w="31410783"/><text x="49.5389%" y="1407.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (28,467,901 samples, 12.62%)</title><rect x="50.5938%" y="1381" width="12.6234%" height="15" fill="rgb(206,173,20)" fg:x="114097309" fg:w="28467901"/><text x="50.8438%" y="1391.50">core::ptr::drop_in_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28,467,901 samples, 12.62%)</title><rect x="50.5938%" y="1365" width="12.6234%" height="15" fill="rgb(233,88,34)" fg:x="114097309" fg:w="28467901"/><text x="50.8438%" y="1375.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (28,467,901 samples, 12.62%)</title><rect x="50.5938%" y="1349" width="12.6234%" height="15" fill="rgb(223,209,46)" fg:x="114097309" fg:w="28467901"/><text x="50.8438%" y="1359.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (28,467,901 samples, 12.62%)</title><rect x="50.5938%" y="1333" width="12.6234%" height="15" fill="rgb(250,43,18)" fg:x="114097309" fg:w="28467901"/><text x="50.8438%" y="1343.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,219,523 samples, 1.43%)</title><rect x="61.7896%" y="1317" width="1.4276%" height="15" fill="rgb(208,13,10)" fg:x="139345687" fg:w="3219523"/><text x="62.0396%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,219,523 samples, 1.43%)</title><rect x="61.7896%" y="1301" width="1.4276%" height="15" fill="rgb(212,200,36)" fg:x="139345687" fg:w="3219523"/><text x="62.0396%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,219,523 samples, 1.43%)</title><rect x="61.7896%" y="1285" width="1.4276%" height="15" fill="rgb(225,90,30)" fg:x="139345687" fg:w="3219523"/><text x="62.0396%" y="1295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,219,523 samples, 1.43%)</title><rect x="61.7896%" y="1269" width="1.4276%" height="15" fill="rgb(236,182,39)" fg:x="139345687" fg:w="3219523"/><text x="62.0396%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,219,523 samples, 1.43%)</title><rect x="61.7896%" y="1253" width="1.4276%" height="15" fill="rgb(212,144,35)" fg:x="139345687" fg:w="3219523"/><text x="62.0396%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,219,523 samples, 1.43%)</title><rect x="61.7896%" y="1237" width="1.4276%" height="15" fill="rgb(228,63,44)" fg:x="139345687" fg:w="3219523"/><text x="62.0396%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (3,219,523 samples, 1.43%)</title><rect x="61.7896%" y="1221" width="1.4276%" height="15" fill="rgb(228,109,6)" fg:x="139345687" fg:w="3219523"/><text x="62.0396%" y="1231.50"></text></g><g><title>cfree (3,219,523 samples, 1.43%)</title><rect x="61.7896%" y="1205" width="1.4276%" height="15" fill="rgb(238,117,24)" fg:x="139345687" fg:w="3219523"/><text x="62.0396%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37,867,339 samples, 16.79%)</title><rect x="47.8564%" y="1557" width="16.7914%" height="15" fill="rgb(242,26,26)" fg:x="107923963" fg:w="37867339"/><text x="48.1064%" y="1567.50">&lt;alloc::vec::Vec&lt;T,A&gt; as c..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (37,867,339 samples, 16.79%)</title><rect x="47.8564%" y="1541" width="16.7914%" height="15" fill="rgb(221,92,48)" fg:x="107923963" fg:w="37867339"/><text x="48.1064%" y="1551.50">core::ptr::drop_in_place&lt;[..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (37,867,339 samples, 16.79%)</title><rect x="47.8564%" y="1525" width="16.7914%" height="15" fill="rgb(209,209,32)" fg:x="107923963" fg:w="37867339"/><text x="48.1064%" y="1535.50">core::ptr::drop_in_place&lt;c..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1509" width="1.4305%" height="15" fill="rgb(221,70,22)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1493" width="1.4305%" height="15" fill="rgb(248,145,5)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1477" width="1.4305%" height="15" fill="rgb(226,116,26)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1461" width="1.4305%" height="15" fill="rgb(244,5,17)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1471.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1445" width="1.4305%" height="15" fill="rgb(252,159,33)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1429" width="1.4305%" height="15" fill="rgb(206,71,0)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1413" width="1.4305%" height="15" fill="rgb(233,118,54)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1423.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1397" width="1.4305%" height="15" fill="rgb(234,83,48)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1407.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1381" width="1.4305%" height="15" fill="rgb(228,3,54)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1365" width="1.4305%" height="15" fill="rgb(226,155,13)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1349" width="1.4305%" height="15" fill="rgb(241,28,37)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1333" width="1.4305%" height="15" fill="rgb(233,93,10)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1317" width="1.4305%" height="15" fill="rgb(225,113,19)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1301" width="1.4305%" height="15" fill="rgb(241,2,18)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1285" width="1.4305%" height="15" fill="rgb(228,207,21)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1269" width="1.4305%" height="15" fill="rgb(213,211,35)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1253" width="1.4305%" height="15" fill="rgb(209,83,10)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1263.50"></text></g><g><title>cfree (3,226,092 samples, 1.43%)</title><rect x="63.2172%" y="1237" width="1.4305%" height="15" fill="rgb(209,164,1)" fg:x="142565210" fg:w="3226092"/><text x="63.4672%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (41,063,877 samples, 18.21%)</title><rect x="47.8564%" y="1573" width="18.2088%" height="15" fill="rgb(213,184,43)" fg:x="107923963" fg:w="41063877"/><text x="48.1064%" y="1583.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,196,538 samples, 1.42%)</title><rect x="64.6478%" y="1557" width="1.4174%" height="15" fill="rgb(231,61,34)" fg:x="145791302" fg:w="3196538"/><text x="64.8978%" y="1567.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,196,538 samples, 1.42%)</title><rect x="64.6478%" y="1541" width="1.4174%" height="15" fill="rgb(235,75,3)" fg:x="145791302" fg:w="3196538"/><text x="64.8978%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,196,538 samples, 1.42%)</title><rect x="64.6478%" y="1525" width="1.4174%" height="15" fill="rgb(220,106,47)" fg:x="145791302" fg:w="3196538"/><text x="64.8978%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,196,538 samples, 1.42%)</title><rect x="64.6478%" y="1509" width="1.4174%" height="15" fill="rgb(210,196,33)" fg:x="145791302" fg:w="3196538"/><text x="64.8978%" y="1519.50"></text></g><g><title>alloc::alloc::dealloc (3,196,538 samples, 1.42%)</title><rect x="64.6478%" y="1493" width="1.4174%" height="15" fill="rgb(229,154,42)" fg:x="145791302" fg:w="3196538"/><text x="64.8978%" y="1503.50"></text></g><g><title>cfree (3,196,538 samples, 1.42%)</title><rect x="64.6478%" y="1477" width="1.4174%" height="15" fill="rgb(228,114,26)" fg:x="145791302" fg:w="3196538"/><text x="64.8978%" y="1487.50"></text></g><g><title>[libc.so.6] (3,196,538 samples, 1.42%)</title><rect x="64.6478%" y="1461" width="1.4174%" height="15" fill="rgb(208,144,1)" fg:x="145791302" fg:w="3196538"/><text x="64.8978%" y="1471.50"></text></g><g><title>[libc.so.6] (3,196,538 samples, 1.42%)</title><rect x="64.6478%" y="1445" width="1.4174%" height="15" fill="rgb(239,112,37)" fg:x="145791302" fg:w="3196538"/><text x="64.8978%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47,526,573 samples, 21.07%)</title><rect x="47.8564%" y="1621" width="21.0746%" height="15" fill="rgb(210,96,50)" fg:x="107923963" fg:w="47526573"/><text x="48.1064%" y="1631.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::op..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (47,526,573 samples, 21.07%)</title><rect x="47.8564%" y="1605" width="21.0746%" height="15" fill="rgb(222,178,2)" fg:x="107923963" fg:w="47526573"/><text x="48.1064%" y="1615.50">core::ptr::drop_in_place&lt;[css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (47,526,573 samples, 21.07%)</title><rect x="47.8564%" y="1589" width="21.0746%" height="15" fill="rgb(226,74,18)" fg:x="107923963" fg:w="47526573"/><text x="48.1064%" y="1599.50">core::ptr::drop_in_place&lt;css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (6,462,696 samples, 2.87%)</title><rect x="66.0652%" y="1573" width="2.8657%" height="15" fill="rgb(225,67,54)" fg:x="148987840" fg:w="6462696"/><text x="66.3152%" y="1583.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (6,462,696 samples, 2.87%)</title><rect x="66.0652%" y="1557" width="2.8657%" height="15" fill="rgb(251,92,32)" fg:x="148987840" fg:w="6462696"/><text x="66.3152%" y="1567.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (6,462,696 samples, 2.87%)</title><rect x="66.0652%" y="1541" width="2.8657%" height="15" fill="rgb(228,149,22)" fg:x="148987840" fg:w="6462696"/><text x="66.3152%" y="1551.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (6,462,696 samples, 2.87%)</title><rect x="66.0652%" y="1525" width="2.8657%" height="15" fill="rgb(243,54,13)" fg:x="148987840" fg:w="6462696"/><text x="66.3152%" y="1535.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,462,696 samples, 2.87%)</title><rect x="66.0652%" y="1509" width="2.8657%" height="15" fill="rgb(243,180,28)" fg:x="148987840" fg:w="6462696"/><text x="66.3152%" y="1519.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (6,462,696 samples, 2.87%)</title><rect x="66.0652%" y="1493" width="2.8657%" height="15" fill="rgb(208,167,24)" fg:x="148987840" fg:w="6462696"/><text x="66.3152%" y="1503.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,212,603 samples, 1.42%)</title><rect x="67.5064%" y="1477" width="1.4246%" height="15" fill="rgb(245,73,45)" fg:x="152237933" fg:w="3212603"/><text x="67.7564%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (66,882,434 samples, 29.66%)</title><rect x="47.8564%" y="1685" width="29.6575%" height="15" fill="rgb(237,203,48)" fg:x="107923963" fg:w="66882434"/><text x="48.1064%" y="1695.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (66,882,434 samples, 29.66%)</title><rect x="47.8564%" y="1669" width="29.6575%" height="15" fill="rgb(211,197,16)" fg:x="107923963" fg:w="66882434"/><text x="48.1064%" y="1679.50">core::ptr::drop_in_place&lt;[css_bitvector_compiler..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (66,882,434 samples, 29.66%)</title><rect x="47.8564%" y="1653" width="29.6575%" height="15" fill="rgb(243,99,51)" fg:x="107923963" fg:w="66882434"/><text x="48.1064%" y="1663.50">core::ptr::drop_in_place&lt;css_bitvector_compiler:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (66,882,434 samples, 29.66%)</title><rect x="47.8564%" y="1637" width="29.6575%" height="15" fill="rgb(215,123,29)" fg:x="107923963" fg:w="66882434"/><text x="48.1064%" y="1647.50">core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (19,355,861 samples, 8.58%)</title><rect x="68.9309%" y="1621" width="8.5829%" height="15" fill="rgb(239,186,37)" fg:x="155450536" fg:w="19355861"/><text x="69.1809%" y="1631.50">core::ptr::d..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19,355,861 samples, 8.58%)</title><rect x="68.9309%" y="1605" width="8.5829%" height="15" fill="rgb(252,136,39)" fg:x="155450536" fg:w="19355861"/><text x="69.1809%" y="1615.50">&lt;alloc::raw_..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (19,355,861 samples, 8.58%)</title><rect x="68.9309%" y="1589" width="8.5829%" height="15" fill="rgb(223,213,32)" fg:x="155450536" fg:w="19355861"/><text x="69.1809%" y="1599.50">alloc::raw_v..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19,355,861 samples, 8.58%)</title><rect x="68.9309%" y="1573" width="8.5829%" height="15" fill="rgb(233,115,5)" fg:x="155450536" fg:w="19355861"/><text x="69.1809%" y="1583.50">&lt;alloc::allo..</text></g><g><title>alloc::alloc::dealloc (19,355,861 samples, 8.58%)</title><rect x="68.9309%" y="1557" width="8.5829%" height="15" fill="rgb(207,226,44)" fg:x="155450536" fg:w="19355861"/><text x="69.1809%" y="1567.50">alloc::alloc..</text></g><g><title>cfree (19,355,861 samples, 8.58%)</title><rect x="68.9309%" y="1541" width="8.5829%" height="15" fill="rgb(208,126,0)" fg:x="155450536" fg:w="19355861"/><text x="69.1809%" y="1551.50">cfree</text></g><g><title>[libc.so.6] (19,355,861 samples, 8.58%)</title><rect x="68.9309%" y="1525" width="8.5829%" height="15" fill="rgb(244,66,21)" fg:x="155450536" fg:w="19355861"/><text x="69.1809%" y="1535.50">[libc.so.6]</text></g><g><title>[libc.so.6] (19,355,861 samples, 8.58%)</title><rect x="68.9309%" y="1509" width="8.5829%" height="15" fill="rgb(222,97,12)" fg:x="155450536" fg:w="19355861"/><text x="69.1809%" y="1519.50">[libc.so.6]</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1973" width="32.3305%" height="15" fill="rgb(219,213,19)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1983.50">core::ptr::drop_in_place&lt;css_bitvector_compiler::Htm..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1957" width="32.3305%" height="15" fill="rgb(252,169,30)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1967.50">core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvect..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1941" width="32.3305%" height="15" fill="rgb(206,32,51)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1951.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1925" width="32.3305%" height="15" fill="rgb(250,172,42)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1935.50">core::ptr::drop_in_place&lt;[css_bitvector_compiler::Ht..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1909" width="32.3305%" height="15" fill="rgb(209,34,43)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1919.50">core::ptr::drop_in_place&lt;css_bitvector_compiler::Htm..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1893" width="32.3305%" height="15" fill="rgb(223,11,35)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1903.50">core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvect..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1877" width="32.3305%" height="15" fill="rgb(251,219,26)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1887.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1861" width="32.3305%" height="15" fill="rgb(231,119,3)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1871.50">core::ptr::drop_in_place&lt;[css_bitvector_compiler::Ht..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1845" width="32.3305%" height="15" fill="rgb(216,97,11)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1855.50">core::ptr::drop_in_place&lt;css_bitvector_compiler::Htm..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1829" width="32.3305%" height="15" fill="rgb(223,59,9)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1839.50">core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvect..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1813" width="32.3305%" height="15" fill="rgb(233,93,31)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1823.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1797" width="32.3305%" height="15" fill="rgb(239,81,33)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1807.50">core::ptr::drop_in_place&lt;[css_bitvector_compiler::Ht..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1781" width="32.3305%" height="15" fill="rgb(213,120,34)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1791.50">core::ptr::drop_in_place&lt;css_bitvector_compiler::Htm..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1765" width="32.3305%" height="15" fill="rgb(243,49,53)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1775.50">core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvect..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1749" width="32.3305%" height="15" fill="rgb(247,216,33)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1759.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1733" width="32.3305%" height="15" fill="rgb(226,26,14)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1743.50">core::ptr::drop_in_place&lt;[css_bitvector_compiler::Ht..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1717" width="32.3305%" height="15" fill="rgb(215,49,53)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1727.50">core::ptr::drop_in_place&lt;css_bitvector_compiler::Htm..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (72,910,518 samples, 32.33%)</title><rect x="47.8564%" y="1701" width="32.3305%" height="15" fill="rgb(245,162,40)" fg:x="107923963" fg:w="72910518"/><text x="48.1064%" y="1711.50">core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvect..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,028,084 samples, 2.67%)</title><rect x="77.5138%" y="1685" width="2.6730%" height="15" fill="rgb(229,68,17)" fg:x="174806397" fg:w="6028084"/><text x="77.7638%" y="1695.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,028,084 samples, 2.67%)</title><rect x="77.5138%" y="1669" width="2.6730%" height="15" fill="rgb(213,182,10)" fg:x="174806397" fg:w="6028084"/><text x="77.7638%" y="1679.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,028,084 samples, 2.67%)</title><rect x="77.5138%" y="1653" width="2.6730%" height="15" fill="rgb(245,125,30)" fg:x="174806397" fg:w="6028084"/><text x="77.7638%" y="1663.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,028,084 samples, 2.67%)</title><rect x="77.5138%" y="1637" width="2.6730%" height="15" fill="rgb(232,202,2)" fg:x="174806397" fg:w="6028084"/><text x="77.7638%" y="1647.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (6,028,084 samples, 2.67%)</title><rect x="77.5138%" y="1621" width="2.6730%" height="15" fill="rgb(237,140,51)" fg:x="174806397" fg:w="6028084"/><text x="77.7638%" y="1631.50">al..</text></g><g><title>cfree (6,028,084 samples, 2.67%)</title><rect x="77.5138%" y="1605" width="2.6730%" height="15" fill="rgb(236,157,25)" fg:x="174806397" fg:w="6028084"/><text x="77.7638%" y="1615.50">cf..</text></g><g><title>[libc.so.6] (6,028,084 samples, 2.67%)</title><rect x="77.5138%" y="1589" width="2.6730%" height="15" fill="rgb(219,209,0)" fg:x="174806397" fg:w="6028084"/><text x="77.7638%" y="1599.50">[l..</text></g><g><title>[libc.so.6] (3,233,899 samples, 1.43%)</title><rect x="78.7529%" y="1573" width="1.4340%" height="15" fill="rgb(240,116,54)" fg:x="177600582" fg:w="3233899"/><text x="79.0029%" y="1583.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (149,349,980 samples, 66.23%)</title><rect x="15.3587%" y="1989" width="66.2258%" height="15" fill="rgb(216,10,36)" fg:x="34636462" fg:w="149349980"/><text x="15.6087%" y="1999.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,151,961 samples, 1.40%)</title><rect x="80.1869%" y="1973" width="1.3977%" height="15" fill="rgb(222,72,44)" fg:x="180834481" fg:w="3151961"/><text x="80.4369%" y="1983.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,151,961 samples, 1.40%)</title><rect x="80.1869%" y="1957" width="1.3977%" height="15" fill="rgb(232,159,9)" fg:x="180834481" fg:w="3151961"/><text x="80.4369%" y="1967.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,151,961 samples, 1.40%)</title><rect x="80.1869%" y="1941" width="1.3977%" height="15" fill="rgb(210,39,32)" fg:x="180834481" fg:w="3151961"/><text x="80.4369%" y="1951.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,151,961 samples, 1.40%)</title><rect x="80.1869%" y="1925" width="1.3977%" height="15" fill="rgb(216,194,45)" fg:x="180834481" fg:w="3151961"/><text x="80.4369%" y="1935.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,151,961 samples, 1.40%)</title><rect x="80.1869%" y="1909" width="1.3977%" height="15" fill="rgb(218,18,35)" fg:x="180834481" fg:w="3151961"/><text x="80.4369%" y="1919.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,151,961 samples, 1.40%)</title><rect x="80.1869%" y="1893" width="1.3977%" height="15" fill="rgb(207,83,51)" fg:x="180834481" fg:w="3151961"/><text x="80.4369%" y="1903.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,151,961 samples, 1.40%)</title><rect x="80.1869%" y="1877" width="1.3977%" height="15" fill="rgb(225,63,43)" fg:x="180834481" fg:w="3151961"/><text x="80.4369%" y="1887.50"></text></g><g><title>benchmark::generate_web_layout_csv (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1989" width="1.3540%" height="15" fill="rgb(207,57,36)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1999.50"></text></g><g><title>alloc::string::String::push_str (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1973" width="1.3540%" height="15" fill="rgb(216,99,33)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1957" width="1.3540%" height="15" fill="rgb(225,42,16)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1941" width="1.3540%" height="15" fill="rgb(220,201,45)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1925" width="1.3540%" height="15" fill="rgb(225,33,4)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1909" width="1.3540%" height="15" fill="rgb(224,33,50)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1893" width="1.3540%" height="15" fill="rgb(246,198,51)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1877" width="1.3540%" height="15" fill="rgb(205,22,4)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1861" width="1.3540%" height="15" fill="rgb(206,3,8)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1845" width="1.3540%" height="15" fill="rgb(251,23,15)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1855.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1829" width="1.3540%" height="15" fill="rgb(252,88,28)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1813" width="1.3540%" height="15" fill="rgb(212,127,14)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1823.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1797" width="1.3540%" height="15" fill="rgb(247,145,37)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1807.50"></text></g><g><title>alloc::alloc::realloc (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1781" width="1.3540%" height="15" fill="rgb(209,117,53)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1791.50"></text></g><g><title>realloc (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1765" width="1.3540%" height="15" fill="rgb(212,90,42)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1775.50"></text></g><g><title>[libc.so.6] (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1749" width="1.3540%" height="15" fill="rgb(218,164,37)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1759.50"></text></g><g><title>[libc.so.6] (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1733" width="1.3540%" height="15" fill="rgb(246,65,34)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1743.50"></text></g><g><title>[libc.so.6] (3,053,583 samples, 1.35%)</title><rect x="81.5845%" y="1717" width="1.3540%" height="15" fill="rgb(231,100,33)" fg:x="183986442" fg:w="3053583"/><text x="81.8345%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,219,865 samples, 0.54%)</title><rect x="82.9386%" y="1973" width="0.5409%" height="15" fill="rgb(228,126,14)" fg:x="187040025" fg:w="1219865"/><text x="83.1886%" y="1983.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1,219,865 samples, 0.54%)</title><rect x="82.9386%" y="1957" width="0.5409%" height="15" fill="rgb(215,173,21)" fg:x="187040025" fg:w="1219865"/><text x="83.1886%" y="1967.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,219,865 samples, 0.54%)</title><rect x="82.9386%" y="1941" width="0.5409%" height="15" fill="rgb(210,6,40)" fg:x="187040025" fg:w="1219865"/><text x="83.1886%" y="1951.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,219,865 samples, 0.54%)</title><rect x="82.9386%" y="1925" width="0.5409%" height="15" fill="rgb(212,48,18)" fg:x="187040025" fg:w="1219865"/><text x="83.1886%" y="1935.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1,219,865 samples, 0.54%)</title><rect x="82.9386%" y="1909" width="0.5409%" height="15" fill="rgb(230,214,11)" fg:x="187040025" fg:w="1219865"/><text x="83.1886%" y="1919.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1,219,865 samples, 0.54%)</title><rect x="82.9386%" y="1893" width="0.5409%" height="15" fill="rgb(254,105,39)" fg:x="187040025" fg:w="1219865"/><text x="83.1886%" y="1903.50"></text></g><g><title>core::slice::memchr::memchr (1,219,865 samples, 0.54%)</title><rect x="82.9386%" y="1877" width="0.5409%" height="15" fill="rgb(245,158,5)" fg:x="187040025" fg:w="1219865"/><text x="83.1886%" y="1887.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1,219,865 samples, 0.54%)</title><rect x="82.9386%" y="1861" width="0.5409%" height="15" fill="rgb(249,208,11)" fg:x="187040025" fg:w="1219865"/><text x="83.1886%" y="1871.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (1,219,865 samples, 0.54%)</title><rect x="82.9386%" y="1845" width="0.5409%" height="15" fill="rgb(210,39,28)" fg:x="187040025" fg:w="1219865"/><text x="83.1886%" y="1855.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (1,219,865 samples, 0.54%)</title><rect x="82.9386%" y="1829" width="0.5409%" height="15" fill="rgb(211,56,53)" fg:x="187040025" fg:w="1219865"/><text x="83.1886%" y="1839.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1749" width="0.7898%" height="15" fill="rgb(226,201,30)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1759.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1733" width="0.7898%" height="15" fill="rgb(239,101,34)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1743.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1717" width="0.7898%" height="15" fill="rgb(226,209,5)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1727.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1701" width="0.7898%" height="15" fill="rgb(250,105,47)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1711.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1685" width="0.7898%" height="15" fill="rgb(230,72,3)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1695.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1669" width="0.7898%" height="15" fill="rgb(232,218,39)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1679.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1653" width="0.7898%" height="15" fill="rgb(248,166,6)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1663.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1637" width="0.7898%" height="15" fill="rgb(247,89,20)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1621" width="0.7898%" height="15" fill="rgb(248,130,54)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1605" width="0.7898%" height="15" fill="rgb(234,196,4)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1589" width="0.7898%" height="15" fill="rgb(250,143,31)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1573" width="0.7898%" height="15" fill="rgb(211,110,34)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1557" width="0.7898%" height="15" fill="rgb(215,124,48)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1541" width="0.7898%" height="15" fill="rgb(216,46,13)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1525" width="0.7898%" height="15" fill="rgb(205,184,25)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1509" width="0.7898%" height="15" fill="rgb(228,1,10)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1493" width="0.7898%" height="15" fill="rgb(213,116,27)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1477" width="0.7898%" height="15" fill="rgb(241,95,50)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1461" width="0.7898%" height="15" fill="rgb(238,48,32)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1471.50"></text></g><g><title>malloc (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1445" width="0.7898%" height="15" fill="rgb(235,113,49)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1455.50"></text></g><g><title>[libc.so.6] (1,781,102 samples, 0.79%)</title><rect x="83.4795%" y="1429" width="0.7898%" height="15" fill="rgb(205,127,43)" fg:x="188259890" fg:w="1781102"/><text x="83.7295%" y="1439.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (952,451 samples, 0.42%)</title><rect x="84.2693%" y="1685" width="0.4223%" height="15" fill="rgb(250,162,2)" fg:x="190040992" fg:w="952451"/><text x="84.5193%" y="1695.50"></text></g><g><title>serde::de::MapAccess::next_entry (952,451 samples, 0.42%)</title><rect x="84.2693%" y="1669" width="0.4223%" height="15" fill="rgb(220,13,41)" fg:x="190040992" fg:w="952451"/><text x="84.5193%" y="1679.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (952,451 samples, 0.42%)</title><rect x="84.2693%" y="1653" width="0.4223%" height="15" fill="rgb(249,221,25)" fg:x="190040992" fg:w="952451"/><text x="84.5193%" y="1663.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (952,451 samples, 0.42%)</title><rect x="84.2693%" y="1637" width="0.4223%" height="15" fill="rgb(215,208,19)" fg:x="190040992" fg:w="952451"/><text x="84.5193%" y="1647.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (952,451 samples, 0.42%)</title><rect x="84.2693%" y="1621" width="0.4223%" height="15" fill="rgb(236,175,2)" fg:x="190040992" fg:w="952451"/><text x="84.5193%" y="1631.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (952,451 samples, 0.42%)</title><rect x="84.2693%" y="1605" width="0.4223%" height="15" fill="rgb(241,52,2)" fg:x="190040992" fg:w="952451"/><text x="84.5193%" y="1615.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (952,451 samples, 0.42%)</title><rect x="84.2693%" y="1589" width="0.4223%" height="15" fill="rgb(248,140,14)" fg:x="190040992" fg:w="952451"/><text x="84.5193%" y="1599.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (952,451 samples, 0.42%)</title><rect x="84.2693%" y="1573" width="0.4223%" height="15" fill="rgb(253,22,42)" fg:x="190040992" fg:w="952451"/><text x="84.5193%" y="1583.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (952,451 samples, 0.42%)</title><rect x="84.2693%" y="1557" width="0.4223%" height="15" fill="rgb(234,61,47)" fg:x="190040992" fg:w="952451"/><text x="84.5193%" y="1567.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (952,451 samples, 0.42%)</title><rect x="84.2693%" y="1541" width="0.4223%" height="15" fill="rgb(208,226,15)" fg:x="190040992" fg:w="952451"/><text x="84.5193%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (482,506 samples, 0.21%)</title><rect x="84.6916%" y="1445" width="0.2140%" height="15" fill="rgb(217,221,4)" fg:x="190993443" fg:w="482506"/><text x="84.9416%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (482,506 samples, 0.21%)</title><rect x="84.6916%" y="1429" width="0.2140%" height="15" fill="rgb(212,174,34)" fg:x="190993443" fg:w="482506"/><text x="84.9416%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (482,506 samples, 0.21%)</title><rect x="84.6916%" y="1413" width="0.2140%" height="15" fill="rgb(253,83,4)" fg:x="190993443" fg:w="482506"/><text x="84.9416%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (482,506 samples, 0.21%)</title><rect x="84.6916%" y="1397" width="0.2140%" height="15" fill="rgb(250,195,49)" fg:x="190993443" fg:w="482506"/><text x="84.9416%" y="1407.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,245,595 samples, 0.55%)</title><rect x="84.6916%" y="1477" width="0.5523%" height="15" fill="rgb(241,192,25)" fg:x="190993443" fg:w="1245595"/><text x="84.9416%" y="1487.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,245,595 samples, 0.55%)</title><rect x="84.6916%" y="1461" width="0.5523%" height="15" fill="rgb(208,124,10)" fg:x="190993443" fg:w="1245595"/><text x="84.9416%" y="1471.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (763,089 samples, 0.34%)</title><rect x="84.9056%" y="1445" width="0.3384%" height="15" fill="rgb(222,33,0)" fg:x="191475949" fg:w="763089"/><text x="85.1556%" y="1455.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1333" width="0.7532%" height="15" fill="rgb(234,209,28)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1343.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1317" width="0.7532%" height="15" fill="rgb(224,11,23)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1327.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1301" width="0.7532%" height="15" fill="rgb(232,99,1)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1311.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1285" width="0.7532%" height="15" fill="rgb(237,95,45)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1295.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1269" width="0.7532%" height="15" fill="rgb(208,109,11)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1279.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1253" width="0.7532%" height="15" fill="rgb(216,190,48)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1263.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1237" width="0.7532%" height="15" fill="rgb(251,171,36)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1221" width="0.7532%" height="15" fill="rgb(230,62,22)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1205" width="0.7532%" height="15" fill="rgb(225,114,35)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1189" width="0.7532%" height="15" fill="rgb(215,118,42)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1173" width="0.7532%" height="15" fill="rgb(243,119,21)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1157" width="0.7532%" height="15" fill="rgb(252,177,53)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1141" width="0.7532%" height="15" fill="rgb(237,209,29)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1125" width="0.7532%" height="15" fill="rgb(212,65,23)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1109" width="0.7532%" height="15" fill="rgb(230,222,46)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1093" width="0.7532%" height="15" fill="rgb(215,135,32)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1077" width="0.7532%" height="15" fill="rgb(246,101,22)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1061" width="0.7532%" height="15" fill="rgb(206,107,13)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1045" width="0.7532%" height="15" fill="rgb(250,100,44)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1055.50"></text></g><g><title>malloc (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1029" width="0.7532%" height="15" fill="rgb(231,147,38)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1039.50"></text></g><g><title>[libc.so.6] (1,698,677 samples, 0.75%)</title><rect x="85.2440%" y="1013" width="0.7532%" height="15" fill="rgb(229,8,40)" fg:x="192239038" fg:w="1698677"/><text x="85.4940%" y="1023.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="1061" width="1.1610%" height="15" fill="rgb(221,135,30)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="1071.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="1045" width="1.1610%" height="15" fill="rgb(249,193,18)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="1055.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="1029" width="1.1610%" height="15" fill="rgb(209,133,39)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="1039.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="1013" width="1.1610%" height="15" fill="rgb(232,100,14)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="1023.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="997" width="1.1610%" height="15" fill="rgb(224,185,1)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="1007.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="981" width="1.1610%" height="15" fill="rgb(223,139,8)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="991.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="965" width="1.1610%" height="15" fill="rgb(232,213,38)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="975.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="949" width="1.1610%" height="15" fill="rgb(207,94,22)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="959.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="933" width="1.1610%" height="15" fill="rgb(219,183,54)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="943.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="917" width="1.1610%" height="15" fill="rgb(216,185,54)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="927.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="901" width="1.1610%" height="15" fill="rgb(254,217,39)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="911.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="885" width="1.1610%" height="15" fill="rgb(240,178,23)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="895.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="869" width="1.1610%" height="15" fill="rgb(218,11,47)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="879.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="853" width="1.1610%" height="15" fill="rgb(218,51,51)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="863.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="837" width="1.1610%" height="15" fill="rgb(238,126,27)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="847.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="821" width="1.1610%" height="15" fill="rgb(249,202,22)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="831.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="805" width="1.1610%" height="15" fill="rgb(254,195,49)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="789" width="1.1610%" height="15" fill="rgb(208,123,14)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="799.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="773" width="1.1610%" height="15" fill="rgb(224,200,8)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="783.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="757" width="1.1610%" height="15" fill="rgb(217,61,36)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="767.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="741" width="1.1610%" height="15" fill="rgb(206,35,45)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="751.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="725" width="1.1610%" height="15" fill="rgb(217,65,33)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="735.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="709" width="1.1610%" height="15" fill="rgb(222,158,48)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="693" width="1.1610%" height="15" fill="rgb(254,2,54)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="677" width="1.1610%" height="15" fill="rgb(250,143,38)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="661" width="1.1610%" height="15" fill="rgb(248,25,0)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="645" width="1.1610%" height="15" fill="rgb(206,152,27)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="655.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="629" width="1.1610%" height="15" fill="rgb(240,77,30)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="639.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="613" width="1.1610%" height="15" fill="rgb(231,5,3)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="597" width="1.1610%" height="15" fill="rgb(207,226,32)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="581" width="1.1610%" height="15" fill="rgb(222,207,47)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="565" width="1.1610%" height="15" fill="rgb(229,115,45)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="549" width="1.1610%" height="15" fill="rgb(224,191,6)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="559.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="533" width="1.1610%" height="15" fill="rgb(230,227,24)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="543.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="517" width="1.1610%" height="15" fill="rgb(228,80,19)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="501" width="1.1610%" height="15" fill="rgb(247,229,0)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="485" width="1.1610%" height="15" fill="rgb(237,194,15)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="469" width="1.1610%" height="15" fill="rgb(219,203,20)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="453" width="1.1610%" height="15" fill="rgb(234,128,8)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="437" width="1.1610%" height="15" fill="rgb(248,202,8)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="447.50"></text></g><g><title>serde::de::MapAccess::next_value (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="421" width="1.1610%" height="15" fill="rgb(206,104,37)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="405" width="1.1610%" height="15" fill="rgb(223,8,27)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="415.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="389" width="1.1610%" height="15" fill="rgb(216,217,28)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="373" width="1.1610%" height="15" fill="rgb(249,199,1)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="357" width="1.1610%" height="15" fill="rgb(240,85,17)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="341" width="1.1610%" height="15" fill="rgb(206,108,45)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="351.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="325" width="1.1610%" height="15" fill="rgb(245,210,41)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="335.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="309" width="1.1610%" height="15" fill="rgb(206,13,37)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="319.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="293" width="1.1610%" height="15" fill="rgb(250,61,18)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="303.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="277" width="1.1610%" height="15" fill="rgb(235,172,48)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="287.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (2,618,270 samples, 1.16%)</title><rect x="85.9972%" y="261" width="1.1610%" height="15" fill="rgb(249,201,17)" fg:x="193937715" fg:w="2618270"/><text x="86.2472%" y="271.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,954,952 samples, 3.08%)</title><rect x="84.6916%" y="1525" width="3.0840%" height="15" fill="rgb(219,208,6)" fg:x="190993443" fg:w="6954952"/><text x="84.9416%" y="1535.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,954,952 samples, 3.08%)</title><rect x="84.6916%" y="1509" width="3.0840%" height="15" fill="rgb(248,31,23)" fg:x="190993443" fg:w="6954952"/><text x="84.9416%" y="1519.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,954,952 samples, 3.08%)</title><rect x="84.6916%" y="1493" width="3.0840%" height="15" fill="rgb(245,15,42)" fg:x="190993443" fg:w="6954952"/><text x="84.9416%" y="1503.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,709,357 samples, 2.53%)</title><rect x="85.2440%" y="1477" width="2.5317%" height="15" fill="rgb(222,217,39)" fg:x="192239038" fg:w="5709357"/><text x="85.4940%" y="1487.50">&lt;s..</text></g><g><title>serde::de::SeqAccess::next_element (5,709,357 samples, 2.53%)</title><rect x="85.2440%" y="1461" width="2.5317%" height="15" fill="rgb(210,219,27)" fg:x="192239038" fg:w="5709357"/><text x="85.4940%" y="1471.50">se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,709,357 samples, 2.53%)</title><rect x="85.2440%" y="1445" width="2.5317%" height="15" fill="rgb(252,166,36)" fg:x="192239038" fg:w="5709357"/><text x="85.4940%" y="1455.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,709,357 samples, 2.53%)</title><rect x="85.2440%" y="1429" width="2.5317%" height="15" fill="rgb(245,132,34)" fg:x="192239038" fg:w="5709357"/><text x="85.4940%" y="1439.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,709,357 samples, 2.53%)</title><rect x="85.2440%" y="1413" width="2.5317%" height="15" fill="rgb(236,54,3)" fg:x="192239038" fg:w="5709357"/><text x="85.4940%" y="1423.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,709,357 samples, 2.53%)</title><rect x="85.2440%" y="1397" width="2.5317%" height="15" fill="rgb(241,173,43)" fg:x="192239038" fg:w="5709357"/><text x="85.4940%" y="1407.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,709,357 samples, 2.53%)</title><rect x="85.2440%" y="1381" width="2.5317%" height="15" fill="rgb(215,190,9)" fg:x="192239038" fg:w="5709357"/><text x="85.4940%" y="1391.50">&lt;s..</text></g><g><title>serde::de::MapAccess::next_entry (5,709,357 samples, 2.53%)</title><rect x="85.2440%" y="1365" width="2.5317%" height="15" fill="rgb(242,101,16)" fg:x="192239038" fg:w="5709357"/><text x="85.4940%" y="1375.50">se..</text></g><g><title>serde::de::MapAccess::next_entry_seed (5,709,357 samples, 2.53%)</title><rect x="85.2440%" y="1349" width="2.5317%" height="15" fill="rgb(223,190,21)" fg:x="192239038" fg:w="5709357"/><text x="85.4940%" y="1359.50">se..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1333" width="1.7784%" height="15" fill="rgb(215,228,25)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1343.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1317" width="1.7784%" height="15" fill="rgb(225,36,22)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1327.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1301" width="1.7784%" height="15" fill="rgb(251,106,46)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1311.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1285" width="1.7784%" height="15" fill="rgb(208,90,1)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1295.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1269" width="1.7784%" height="15" fill="rgb(243,10,4)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1279.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1253" width="1.7784%" height="15" fill="rgb(212,137,27)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1263.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1237" width="1.7784%" height="15" fill="rgb(231,220,49)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1247.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1221" width="1.7784%" height="15" fill="rgb(237,96,20)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1231.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1205" width="1.7784%" height="15" fill="rgb(239,229,30)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1215.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1189" width="1.7784%" height="15" fill="rgb(219,65,33)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1199.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1173" width="1.7784%" height="15" fill="rgb(243,134,7)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1183.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1157" width="1.7784%" height="15" fill="rgb(216,177,54)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1167.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1141" width="1.7784%" height="15" fill="rgb(211,160,20)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1151.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1125" width="1.7784%" height="15" fill="rgb(239,85,39)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1135.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1109" width="1.7784%" height="15" fill="rgb(232,125,22)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1119.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1093" width="1.7784%" height="15" fill="rgb(244,57,34)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1103.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,010,680 samples, 1.78%)</title><rect x="85.9972%" y="1077" width="1.7784%" height="15" fill="rgb(214,203,32)" fg:x="193937715" fg:w="4010680"/><text x="86.2472%" y="1087.50">&lt;..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="1061" width="0.6174%" height="15" fill="rgb(207,58,43)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="1071.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="1045" width="0.6174%" height="15" fill="rgb(215,193,15)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="1029" width="0.6174%" height="15" fill="rgb(232,15,44)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="1039.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="1013" width="0.6174%" height="15" fill="rgb(212,3,48)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="997" width="0.6174%" height="15" fill="rgb(218,128,7)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="981" width="0.6174%" height="15" fill="rgb(226,216,39)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="965" width="0.6174%" height="15" fill="rgb(243,47,51)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="949" width="0.6174%" height="15" fill="rgb(241,183,40)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="933" width="0.6174%" height="15" fill="rgb(231,217,32)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="917" width="0.6174%" height="15" fill="rgb(229,61,38)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="901" width="0.6174%" height="15" fill="rgb(225,210,5)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="885" width="0.6174%" height="15" fill="rgb(231,79,45)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="869" width="0.6174%" height="15" fill="rgb(224,100,7)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="853" width="0.6174%" height="15" fill="rgb(241,198,18)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="837" width="0.6174%" height="15" fill="rgb(252,97,53)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="847.50"></text></g><g><title>alloc::alloc::alloc (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="821" width="0.6174%" height="15" fill="rgb(220,88,7)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="831.50"></text></g><g><title>malloc (1,392,410 samples, 0.62%)</title><rect x="87.1582%" y="805" width="0.6174%" height="15" fill="rgb(213,176,14)" fg:x="196555985" fg:w="1392410"/><text x="87.4082%" y="815.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,811,356 samples, 5.24%)</title><rect x="83.4795%" y="1797" width="5.2375%" height="15" fill="rgb(246,73,7)" fg:x="188259890" fg:w="11811356"/><text x="83.7295%" y="1807.50">&lt;serde..</text></g><g><title>serde::de::MapAccess::next_entry (11,811,356 samples, 5.24%)</title><rect x="83.4795%" y="1781" width="5.2375%" height="15" fill="rgb(245,64,36)" fg:x="188259890" fg:w="11811356"/><text x="83.7295%" y="1791.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,811,356 samples, 5.24%)</title><rect x="83.4795%" y="1765" width="5.2375%" height="15" fill="rgb(245,80,10)" fg:x="188259890" fg:w="11811356"/><text x="83.7295%" y="1775.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10,030,254 samples, 4.45%)</title><rect x="84.2693%" y="1749" width="4.4477%" height="15" fill="rgb(232,107,50)" fg:x="190040992" fg:w="10030254"/><text x="84.5193%" y="1759.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,030,254 samples, 4.45%)</title><rect x="84.2693%" y="1733" width="4.4477%" height="15" fill="rgb(253,3,0)" fg:x="190040992" fg:w="10030254"/><text x="84.5193%" y="1743.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,030,254 samples, 4.45%)</title><rect x="84.2693%" y="1717" width="4.4477%" height="15" fill="rgb(212,99,53)" fg:x="190040992" fg:w="10030254"/><text x="84.5193%" y="1727.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,030,254 samples, 4.45%)</title><rect x="84.2693%" y="1701" width="4.4477%" height="15" fill="rgb(249,111,54)" fg:x="190040992" fg:w="10030254"/><text x="84.5193%" y="1711.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (9,077,803 samples, 4.03%)</title><rect x="84.6916%" y="1685" width="4.0253%" height="15" fill="rgb(249,55,30)" fg:x="190993443" fg:w="9077803"/><text x="84.9416%" y="1695.50">&lt;ser..</text></g><g><title>serde::de::SeqAccess::next_element (9,077,803 samples, 4.03%)</title><rect x="84.6916%" y="1669" width="4.0253%" height="15" fill="rgb(237,47,42)" fg:x="190993443" fg:w="9077803"/><text x="84.9416%" y="1679.50">serd..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,077,803 samples, 4.03%)</title><rect x="84.6916%" y="1653" width="4.0253%" height="15" fill="rgb(211,20,18)" fg:x="190993443" fg:w="9077803"/><text x="84.9416%" y="1663.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,077,803 samples, 4.03%)</title><rect x="84.6916%" y="1637" width="4.0253%" height="15" fill="rgb(231,203,46)" fg:x="190993443" fg:w="9077803"/><text x="84.9416%" y="1647.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,077,803 samples, 4.03%)</title><rect x="84.6916%" y="1621" width="4.0253%" height="15" fill="rgb(237,142,3)" fg:x="190993443" fg:w="9077803"/><text x="84.9416%" y="1631.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,077,803 samples, 4.03%)</title><rect x="84.6916%" y="1605" width="4.0253%" height="15" fill="rgb(241,107,1)" fg:x="190993443" fg:w="9077803"/><text x="84.9416%" y="1615.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,077,803 samples, 4.03%)</title><rect x="84.6916%" y="1589" width="4.0253%" height="15" fill="rgb(229,83,13)" fg:x="190993443" fg:w="9077803"/><text x="84.9416%" y="1599.50">&lt;ser..</text></g><g><title>serde::de::MapAccess::next_entry (9,077,803 samples, 4.03%)</title><rect x="84.6916%" y="1573" width="4.0253%" height="15" fill="rgb(241,91,40)" fg:x="190993443" fg:w="9077803"/><text x="84.9416%" y="1583.50">serd..</text></g><g><title>serde::de::MapAccess::next_entry_seed (9,077,803 samples, 4.03%)</title><rect x="84.6916%" y="1557" width="4.0253%" height="15" fill="rgb(225,3,45)" fg:x="190993443" fg:w="9077803"/><text x="84.9416%" y="1567.50">serd..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (9,077,803 samples, 4.03%)</title><rect x="84.6916%" y="1541" width="4.0253%" height="15" fill="rgb(244,223,14)" fg:x="190993443" fg:w="9077803"/><text x="84.9416%" y="1551.50">&lt;ser..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (2,122,851 samples, 0.94%)</title><rect x="87.7756%" y="1525" width="0.9413%" height="15" fill="rgb(224,124,37)" fg:x="197948395" fg:w="2122851"/><text x="88.0256%" y="1535.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (2,122,851 samples, 0.94%)</title><rect x="87.7756%" y="1509" width="0.9413%" height="15" fill="rgb(251,171,30)" fg:x="197948395" fg:w="2122851"/><text x="88.0256%" y="1519.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (2,122,851 samples, 0.94%)</title><rect x="87.7756%" y="1493" width="0.9413%" height="15" fill="rgb(236,46,54)" fg:x="197948395" fg:w="2122851"/><text x="88.0256%" y="1503.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (2,122,851 samples, 0.94%)</title><rect x="87.7756%" y="1477" width="0.9413%" height="15" fill="rgb(245,213,5)" fg:x="197948395" fg:w="2122851"/><text x="88.0256%" y="1487.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (2,122,851 samples, 0.94%)</title><rect x="87.7756%" y="1461" width="0.9413%" height="15" fill="rgb(230,144,27)" fg:x="197948395" fg:w="2122851"/><text x="88.0256%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,455,003 samples, 1.09%)</title><rect x="88.7170%" y="1765" width="1.0886%" height="15" fill="rgb(220,86,6)" fg:x="200071246" fg:w="2455003"/><text x="88.9670%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,455,003 samples, 1.09%)</title><rect x="88.7170%" y="1749" width="1.0886%" height="15" fill="rgb(240,20,13)" fg:x="200071246" fg:w="2455003"/><text x="88.9670%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,455,003 samples, 1.09%)</title><rect x="88.7170%" y="1733" width="1.0886%" height="15" fill="rgb(217,89,34)" fg:x="200071246" fg:w="2455003"/><text x="88.9670%" y="1743.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,455,003 samples, 1.09%)</title><rect x="88.7170%" y="1717" width="1.0886%" height="15" fill="rgb(229,13,5)" fg:x="200071246" fg:w="2455003"/><text x="88.9670%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,455,003 samples, 1.09%)</title><rect x="88.7170%" y="1701" width="1.0886%" height="15" fill="rgb(244,67,35)" fg:x="200071246" fg:w="2455003"/><text x="88.9670%" y="1711.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,455,003 samples, 1.09%)</title><rect x="88.7170%" y="1685" width="1.0886%" height="15" fill="rgb(221,40,2)" fg:x="200071246" fg:w="2455003"/><text x="88.9670%" y="1695.50"></text></g><g><title>alloc::alloc::realloc (2,455,003 samples, 1.09%)</title><rect x="88.7170%" y="1669" width="1.0886%" height="15" fill="rgb(237,157,21)" fg:x="200071246" fg:w="2455003"/><text x="88.9670%" y="1679.50"></text></g><g><title>realloc (2,455,003 samples, 1.09%)</title><rect x="88.7170%" y="1653" width="1.0886%" height="15" fill="rgb(222,94,11)" fg:x="200071246" fg:w="2455003"/><text x="88.9670%" y="1663.50"></text></g><g><title>[libc.so.6] (2,455,003 samples, 1.09%)</title><rect x="88.7170%" y="1637" width="1.0886%" height="15" fill="rgb(249,113,6)" fg:x="200071246" fg:w="2455003"/><text x="88.9670%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,398,166 samples, 1.95%)</title><rect x="88.7170%" y="1781" width="1.9503%" height="15" fill="rgb(238,137,36)" fg:x="200071246" fg:w="4398166"/><text x="88.9670%" y="1791.50">a..</text></g><g><title>core::ptr::write (1,943,163 samples, 0.86%)</title><rect x="89.8056%" y="1765" width="0.8617%" height="15" fill="rgb(210,102,26)" fg:x="202526249" fg:w="1943163"/><text x="90.0556%" y="1775.50"></text></g><g><title>benchmark::parse_web_layout_trace (19,998,658 samples, 8.87%)</title><rect x="82.9386%" y="1989" width="8.8679%" height="15" fill="rgb(218,30,30)" fg:x="187040025" fg:w="19998658"/><text x="83.1886%" y="1999.50">benchmark::pa..</text></g><g><title>serde_json::de::from_str (18,778,793 samples, 8.33%)</title><rect x="83.4795%" y="1973" width="8.3270%" height="15" fill="rgb(214,67,26)" fg:x="188259890" fg:w="18778793"/><text x="83.7295%" y="1983.50">serde_json::..</text></g><g><title>serde_json::de::from_trait (18,778,793 samples, 8.33%)</title><rect x="83.4795%" y="1957" width="8.3270%" height="15" fill="rgb(251,9,53)" fg:x="188259890" fg:w="18778793"/><text x="83.7295%" y="1967.50">serde_json::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18,778,793 samples, 8.33%)</title><rect x="83.4795%" y="1941" width="8.3270%" height="15" fill="rgb(228,204,25)" fg:x="188259890" fg:w="18778793"/><text x="83.7295%" y="1951.50">serde_json::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18,778,793 samples, 8.33%)</title><rect x="83.4795%" y="1925" width="8.3270%" height="15" fill="rgb(207,153,8)" fg:x="188259890" fg:w="18778793"/><text x="83.7295%" y="1935.50">&lt;&amp;mut serde_..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18,778,793 samples, 8.33%)</title><rect x="83.4795%" y="1909" width="8.3270%" height="15" fill="rgb(242,9,16)" fg:x="188259890" fg:w="18778793"/><text x="83.7295%" y="1919.50">&lt;serde_json:..</text></g><g><title>serde::de::MapAccess::next_entry (18,778,793 samples, 8.33%)</title><rect x="83.4795%" y="1893" width="8.3270%" height="15" fill="rgb(217,211,10)" fg:x="188259890" fg:w="18778793"/><text x="83.7295%" y="1903.50">serde::de::M..</text></g><g><title>serde::de::MapAccess::next_entry_seed (18,778,793 samples, 8.33%)</title><rect x="83.4795%" y="1877" width="8.3270%" height="15" fill="rgb(219,228,52)" fg:x="188259890" fg:w="18778793"/><text x="83.7295%" y="1887.50">serde::de::M..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (18,778,793 samples, 8.33%)</title><rect x="83.4795%" y="1861" width="8.3270%" height="15" fill="rgb(231,92,29)" fg:x="188259890" fg:w="18778793"/><text x="83.7295%" y="1871.50">&lt;serde_json:..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18,778,793 samples, 8.33%)</title><rect x="83.4795%" y="1845" width="8.3270%" height="15" fill="rgb(232,8,23)" fg:x="188259890" fg:w="18778793"/><text x="83.7295%" y="1855.50">&lt;core::marke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18,778,793 samples, 8.33%)</title><rect x="83.4795%" y="1829" width="8.3270%" height="15" fill="rgb(216,211,34)" fg:x="188259890" fg:w="18778793"/><text x="83.7295%" y="1839.50">serde_json::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18,778,793 samples, 8.33%)</title><rect x="83.4795%" y="1813" width="8.3270%" height="15" fill="rgb(236,151,0)" fg:x="188259890" fg:w="18778793"/><text x="83.7295%" y="1823.50">&lt;&amp;mut serde_..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,967,437 samples, 3.09%)</title><rect x="88.7170%" y="1797" width="3.0895%" height="15" fill="rgb(209,168,3)" fg:x="200071246" fg:w="6967437"/><text x="88.9670%" y="1807.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (2,569,271 samples, 1.14%)</title><rect x="90.6672%" y="1781" width="1.1393%" height="15" fill="rgb(208,129,28)" fg:x="204469412" fg:w="2569271"/><text x="90.9172%" y="1791.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,569,271 samples, 1.14%)</title><rect x="90.6672%" y="1765" width="1.1393%" height="15" fill="rgb(229,78,22)" fg:x="204469412" fg:w="2569271"/><text x="90.9172%" y="1775.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed::has_next_element (2,569,271 samples, 1.14%)</title><rect x="90.6672%" y="1749" width="1.1393%" height="15" fill="rgb(228,187,13)" fg:x="204469412" fg:w="2569271"/><text x="90.9172%" y="1759.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (2,569,271 samples, 1.14%)</title><rect x="90.6672%" y="1733" width="1.1393%" height="15" fill="rgb(240,119,24)" fg:x="204469412" fg:w="2569271"/><text x="90.9172%" y="1743.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (2,569,271 samples, 1.14%)</title><rect x="90.6672%" y="1717" width="1.1393%" height="15" fill="rgb(209,194,42)" fg:x="204469412" fg:w="2569271"/><text x="90.9172%" y="1727.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (2,569,271 samples, 1.14%)</title><rect x="90.6672%" y="1701" width="1.1393%" height="15" fill="rgb(247,200,46)" fg:x="204469412" fg:w="2569271"/><text x="90.9172%" y="1711.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (2,569,271 samples, 1.14%)</title><rect x="90.6672%" y="1685" width="1.1393%" height="15" fill="rgb(218,76,16)" fg:x="204469412" fg:w="2569271"/><text x="90.9172%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1557" width="1.3358%" height="15" fill="rgb(225,21,48)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1541" width="1.3358%" height="15" fill="rgb(239,223,50)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1525" width="1.3358%" height="15" fill="rgb(244,45,21)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1509" width="1.3358%" height="15" fill="rgb(232,33,43)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1493" width="1.3358%" height="15" fill="rgb(209,8,3)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1477" width="1.3358%" height="15" fill="rgb(214,25,53)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1461" width="1.3358%" height="15" fill="rgb(254,186,54)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1471.50"></text></g><g><title>core::mem::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1445" width="1.3358%" height="15" fill="rgb(208,174,49)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1429" width="1.3358%" height="15" fill="rgb(233,191,51)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1439.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1413" width="1.3358%" height="15" fill="rgb(222,134,10)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1423.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1397" width="1.3358%" height="15" fill="rgb(230,226,20)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1381" width="1.3358%" height="15" fill="rgb(251,111,25)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1365" width="1.3358%" height="15" fill="rgb(224,40,46)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1375.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1349" width="1.3358%" height="15" fill="rgb(236,108,47)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1333" width="1.3358%" height="15" fill="rgb(234,93,0)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1317" width="1.3358%" height="15" fill="rgb(224,213,32)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1301" width="1.3358%" height="15" fill="rgb(251,11,48)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1285" width="1.3358%" height="15" fill="rgb(236,173,5)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1269" width="1.3358%" height="15" fill="rgb(230,95,12)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1253" width="1.3358%" height="15" fill="rgb(232,209,1)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1237" width="1.3358%" height="15" fill="rgb(232,6,1)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1221" width="1.3358%" height="15" fill="rgb(210,224,50)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1231.50"></text></g><g><title>core::mem::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1205" width="1.3358%" height="15" fill="rgb(228,127,35)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1189" width="1.3358%" height="15" fill="rgb(245,102,45)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1173" width="1.3358%" height="15" fill="rgb(214,1,49)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1183.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1157" width="1.3358%" height="15" fill="rgb(226,163,40)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1141" width="1.3358%" height="15" fill="rgb(239,212,28)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1125" width="1.3358%" height="15" fill="rgb(220,20,13)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1135.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1109" width="1.3358%" height="15" fill="rgb(210,164,35)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1093" width="1.3358%" height="15" fill="rgb(248,109,41)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1077" width="1.3358%" height="15" fill="rgb(238,23,50)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1061" width="1.3358%" height="15" fill="rgb(211,48,49)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1045" width="1.3358%" height="15" fill="rgb(223,36,21)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1029" width="1.3358%" height="15" fill="rgb(207,123,46)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="1013" width="1.3358%" height="15" fill="rgb(240,218,32)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="997" width="1.3358%" height="15" fill="rgb(252,5,43)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="981" width="1.3358%" height="15" fill="rgb(252,84,19)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="991.50"></text></g><g><title>core::mem::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="965" width="1.3358%" height="15" fill="rgb(243,152,39)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="949" width="1.3358%" height="15" fill="rgb(234,160,15)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="933" width="1.3358%" height="15" fill="rgb(237,34,20)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="943.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="917" width="1.3358%" height="15" fill="rgb(229,97,13)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="901" width="1.3358%" height="15" fill="rgb(234,71,50)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="885" width="1.3358%" height="15" fill="rgb(253,155,4)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="869" width="1.3358%" height="15" fill="rgb(222,185,37)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="853" width="1.3358%" height="15" fill="rgb(251,177,13)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="837" width="1.3358%" height="15" fill="rgb(250,179,40)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="821" width="1.3358%" height="15" fill="rgb(242,44,2)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="805" width="1.3358%" height="15" fill="rgb(216,177,13)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="789" width="1.3358%" height="15" fill="rgb(216,106,43)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="773" width="1.3358%" height="15" fill="rgb(216,183,2)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="757" width="1.3358%" height="15" fill="rgb(249,75,3)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="741" width="1.3358%" height="15" fill="rgb(219,67,39)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="751.50"></text></g><g><title>core::mem::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="725" width="1.3358%" height="15" fill="rgb(253,228,2)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="709" width="1.3358%" height="15" fill="rgb(235,138,27)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="693" width="1.3358%" height="15" fill="rgb(236,97,51)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="677" width="1.3358%" height="15" fill="rgb(240,80,30)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="661" width="1.3358%" height="15" fill="rgb(230,178,19)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="645" width="1.3358%" height="15" fill="rgb(210,190,27)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="655.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="629" width="1.3358%" height="15" fill="rgb(222,107,31)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="613" width="1.3358%" height="15" fill="rgb(216,127,34)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="597" width="1.3358%" height="15" fill="rgb(234,116,52)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="581" width="1.3358%" height="15" fill="rgb(222,124,15)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="565" width="1.3358%" height="15" fill="rgb(231,179,28)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="549" width="1.3358%" height="15" fill="rgb(226,93,45)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="533" width="1.3358%" height="15" fill="rgb(215,8,51)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="517" width="1.3358%" height="15" fill="rgb(223,106,5)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="501" width="1.3358%" height="15" fill="rgb(250,191,5)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="511.50"></text></g><g><title>core::mem::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="485" width="1.3358%" height="15" fill="rgb(242,132,44)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="469" width="1.3358%" height="15" fill="rgb(251,152,29)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="453" width="1.3358%" height="15" fill="rgb(218,179,5)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="437" width="1.3358%" height="15" fill="rgb(227,67,19)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="421" width="1.3358%" height="15" fill="rgb(233,119,31)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="405" width="1.3358%" height="15" fill="rgb(241,120,22)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="415.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="389" width="1.3358%" height="15" fill="rgb(224,102,30)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="373" width="1.3358%" height="15" fill="rgb(210,164,37)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="357" width="1.3358%" height="15" fill="rgb(226,191,16)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="341" width="1.3358%" height="15" fill="rgb(214,40,45)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="325" width="1.3358%" height="15" fill="rgb(244,29,26)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="309" width="1.3358%" height="15" fill="rgb(216,16,5)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="293" width="1.3358%" height="15" fill="rgb(249,76,35)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="277" width="1.3358%" height="15" fill="rgb(207,11,44)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="261" width="1.3358%" height="15" fill="rgb(228,190,49)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="271.50"></text></g><g><title>core::mem::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="245" width="1.3358%" height="15" fill="rgb(214,173,12)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="229" width="1.3358%" height="15" fill="rgb(218,26,35)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="213" width="1.3358%" height="15" fill="rgb(220,200,19)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="223.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="197" width="1.3358%" height="15" fill="rgb(239,95,49)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="207.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="181" width="1.3358%" height="15" fill="rgb(235,85,53)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="165" width="1.3358%" height="15" fill="rgb(233,133,31)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="149" width="1.3358%" height="15" fill="rgb(218,25,20)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="133" width="1.3358%" height="15" fill="rgb(252,210,38)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="117" width="1.3358%" height="15" fill="rgb(242,134,21)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="101" width="1.3358%" height="15" fill="rgb(213,28,48)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="85" width="1.3358%" height="15" fill="rgb(250,196,2)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="95.50"></text></g><g><title>alloc::alloc::dealloc (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="69" width="1.3358%" height="15" fill="rgb(227,5,17)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="79.50"></text></g><g><title>cfree (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="53" width="1.3358%" height="15" fill="rgb(221,226,24)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="63.50"></text></g><g><title>[libc.so.6] (3,012,520 samples, 1.34%)</title><rect x="91.8065%" y="37" width="1.3358%" height="15" fill="rgb(211,5,48)" fg:x="207038683" fg:w="3012520"/><text x="92.0565%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1973" width="2.6956%" height="15" fill="rgb(219,150,6)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1983.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1957" width="2.6956%" height="15" fill="rgb(251,46,16)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1967.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1941" width="2.6956%" height="15" fill="rgb(220,204,40)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1951.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1925" width="2.6956%" height="15" fill="rgb(211,85,2)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1935.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1909" width="2.6956%" height="15" fill="rgb(229,17,7)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1919.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1893" width="2.6956%" height="15" fill="rgb(239,72,28)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1903.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1877" width="2.6956%" height="15" fill="rgb(230,47,54)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1887.50">&lt;a..</text></g><g><title>core::mem::drop (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1861" width="2.6956%" height="15" fill="rgb(214,50,8)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1871.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1845" width="2.6956%" height="15" fill="rgb(216,198,43)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1855.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1829" width="2.6956%" height="15" fill="rgb(234,20,35)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1839.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1813" width="2.6956%" height="15" fill="rgb(254,45,19)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1823.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1797" width="2.6956%" height="15" fill="rgb(219,14,44)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1807.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1781" width="2.6956%" height="15" fill="rgb(217,220,26)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1791.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1765" width="2.6956%" height="15" fill="rgb(213,158,28)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1775.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1749" width="2.6956%" height="15" fill="rgb(252,51,52)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1759.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1733" width="2.6956%" height="15" fill="rgb(246,89,16)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1743.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1717" width="2.6956%" height="15" fill="rgb(216,158,49)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1727.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1701" width="2.6956%" height="15" fill="rgb(236,107,19)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1711.50">&lt;a..</text></g><g><title>core::mem::drop (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1685" width="2.6956%" height="15" fill="rgb(228,185,30)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1695.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1669" width="2.6956%" height="15" fill="rgb(246,134,8)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1679.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1653" width="2.6956%" height="15" fill="rgb(214,143,50)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1663.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1637" width="2.6956%" height="15" fill="rgb(228,75,8)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1647.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1621" width="2.6956%" height="15" fill="rgb(207,175,4)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1631.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1605" width="2.6956%" height="15" fill="rgb(205,108,24)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1615.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1589" width="2.6956%" height="15" fill="rgb(244,120,49)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1599.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,079,095 samples, 2.70%)</title><rect x="91.8065%" y="1573" width="2.6956%" height="15" fill="rgb(223,47,38)" fg:x="207038683" fg:w="6079095"/><text x="92.0565%" y="1583.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,066,575 samples, 1.36%)</title><rect x="93.1423%" y="1557" width="1.3598%" height="15" fill="rgb(229,179,11)" fg:x="210051203" fg:w="3066575"/><text x="93.3923%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,066,575 samples, 1.36%)</title><rect x="93.1423%" y="1541" width="1.3598%" height="15" fill="rgb(231,122,1)" fg:x="210051203" fg:w="3066575"/><text x="93.3923%" y="1551.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,066,575 samples, 1.36%)</title><rect x="93.1423%" y="1525" width="1.3598%" height="15" fill="rgb(245,119,9)" fg:x="210051203" fg:w="3066575"/><text x="93.3923%" y="1535.50"></text></g><g><title>core::mem::drop (3,066,575 samples, 1.36%)</title><rect x="93.1423%" y="1509" width="1.3598%" height="15" fill="rgb(241,163,25)" fg:x="210051203" fg:w="3066575"/><text x="93.3923%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,066,575 samples, 1.36%)</title><rect x="93.1423%" y="1493" width="1.3598%" height="15" fill="rgb(217,214,3)" fg:x="210051203" fg:w="3066575"/><text x="93.3923%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,066,575 samples, 1.36%)</title><rect x="93.1423%" y="1477" width="1.3598%" height="15" fill="rgb(240,86,28)" fg:x="210051203" fg:w="3066575"/><text x="93.3923%" y="1487.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,066,575 samples, 1.36%)</title><rect x="93.1423%" y="1461" width="1.3598%" height="15" fill="rgb(215,47,9)" fg:x="210051203" fg:w="3066575"/><text x="93.3923%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,066,575 samples, 1.36%)</title><rect x="93.1423%" y="1445" width="1.3598%" height="15" fill="rgb(252,25,45)" fg:x="210051203" fg:w="3066575"/><text x="93.3923%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,066,575 samples, 1.36%)</title><rect x="93.1423%" y="1429" width="1.3598%" height="15" fill="rgb(251,164,9)" fg:x="210051203" fg:w="3066575"/><text x="93.3923%" y="1439.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,066,575 samples, 1.36%)</title><rect x="93.1423%" y="1413" width="1.3598%" height="15" fill="rgb(233,194,0)" fg:x="210051203" fg:w="3066575"/><text x="93.3923%" y="1423.50"></text></g><g><title>cfree (3,066,575 samples, 1.36%)</title><rect x="93.1423%" y="1397" width="1.3598%" height="15" fill="rgb(249,111,24)" fg:x="210051203" fg:w="3066575"/><text x="93.3923%" y="1407.50"></text></g><g><title>std::panic::catch_unwind (195,557,825 samples, 86.72%)</title><rect x="9.1485%" y="2133" width="86.7156%" height="15" fill="rgb(250,223,3)" fg:x="20631308" fg:w="195557825"/><text x="9.3985%" y="2143.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (195,557,825 samples, 86.72%)</title><rect x="9.1485%" y="2117" width="86.7156%" height="15" fill="rgb(236,178,37)" fg:x="20631308" fg:w="195557825"/><text x="9.3985%" y="2127.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (195,557,825 samples, 86.72%)</title><rect x="9.1485%" y="2101" width="86.7156%" height="15" fill="rgb(241,158,50)" fg:x="20631308" fg:w="195557825"/><text x="9.3985%" y="2111.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (195,557,825 samples, 86.72%)</title><rect x="9.1485%" y="2085" width="86.7156%" height="15" fill="rgb(213,121,41)" fg:x="20631308" fg:w="195557825"/><text x="9.3985%" y="2095.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (195,557,825 samples, 86.72%)</title><rect x="9.1485%" y="2069" width="86.7156%" height="15" fill="rgb(240,92,3)" fg:x="20631308" fg:w="195557825"/><text x="9.3985%" y="2079.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (195,557,825 samples, 86.72%)</title><rect x="9.1485%" y="2053" width="86.7156%" height="15" fill="rgb(205,123,3)" fg:x="20631308" fg:w="195557825"/><text x="9.3985%" y="2063.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (195,557,825 samples, 86.72%)</title><rect x="9.1485%" y="2037" width="86.7156%" height="15" fill="rgb(205,97,47)" fg:x="20631308" fg:w="195557825"/><text x="9.3985%" y="2047.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (195,557,825 samples, 86.72%)</title><rect x="9.1485%" y="2021" width="86.7156%" height="15" fill="rgb(247,152,14)" fg:x="20631308" fg:w="195557825"/><text x="9.3985%" y="2031.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (195,557,825 samples, 86.72%)</title><rect x="9.1485%" y="2005" width="86.7156%" height="15" fill="rgb(248,195,53)" fg:x="20631308" fg:w="195557825"/><text x="9.3985%" y="2015.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (9,150,450 samples, 4.06%)</title><rect x="91.8065%" y="1989" width="4.0576%" height="15" fill="rgb(226,201,16)" fg:x="207038683" fg:w="9150450"/><text x="92.0565%" y="1999.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (3,071,355 samples, 1.36%)</title><rect x="94.5021%" y="1973" width="1.3619%" height="15" fill="rgb(205,98,0)" fg:x="213117778" fg:w="3071355"/><text x="94.7521%" y="1983.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,071,355 samples, 1.36%)</title><rect x="94.5021%" y="1957" width="1.3619%" height="15" fill="rgb(214,191,48)" fg:x="213117778" fg:w="3071355"/><text x="94.7521%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,071,355 samples, 1.36%)</title><rect x="94.5021%" y="1941" width="1.3619%" height="15" fill="rgb(237,112,39)" fg:x="213117778" fg:w="3071355"/><text x="94.7521%" y="1951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,071,355 samples, 1.36%)</title><rect x="94.5021%" y="1925" width="1.3619%" height="15" fill="rgb(247,203,27)" fg:x="213117778" fg:w="3071355"/><text x="94.7521%" y="1935.50"></text></g><g><title>alloc::alloc::dealloc (3,071,355 samples, 1.36%)</title><rect x="94.5021%" y="1909" width="1.3619%" height="15" fill="rgb(235,124,28)" fg:x="213117778" fg:w="3071355"/><text x="94.7521%" y="1919.50"></text></g><g><title>cfree (3,071,355 samples, 1.36%)</title><rect x="94.5021%" y="1893" width="1.3619%" height="15" fill="rgb(208,207,46)" fg:x="213117778" fg:w="3071355"/><text x="94.7521%" y="1903.50"></text></g><g><title>[libc.so.6] (3,071,355 samples, 1.36%)</title><rect x="94.5021%" y="1877" width="1.3619%" height="15" fill="rgb(234,176,4)" fg:x="213117778" fg:w="3071355"/><text x="94.7521%" y="1887.50"></text></g><g><title>[libc.so.6] (3,071,355 samples, 1.36%)</title><rect x="94.5021%" y="1861" width="1.3619%" height="15" fill="rgb(230,133,28)" fg:x="213117778" fg:w="3071355"/><text x="94.7521%" y="1871.50"></text></g><g><title>_start (196,059,329 samples, 86.94%)</title><rect x="9.1485%" y="2277" width="86.9380%" height="15" fill="rgb(211,137,40)" fg:x="20631308" fg:w="196059329"/><text x="9.3985%" y="2287.50">_start</text></g><g><title>__libc_start_main (196,059,329 samples, 86.94%)</title><rect x="9.1485%" y="2261" width="86.9380%" height="15" fill="rgb(254,35,13)" fg:x="20631308" fg:w="196059329"/><text x="9.3985%" y="2271.50">__libc_start_main</text></g><g><title>[libc.so.6] (196,059,329 samples, 86.94%)</title><rect x="9.1485%" y="2245" width="86.9380%" height="15" fill="rgb(225,49,51)" fg:x="20631308" fg:w="196059329"/><text x="9.3985%" y="2255.50">[libc.so.6]</text></g><g><title>main (196,059,329 samples, 86.94%)</title><rect x="9.1485%" y="2229" width="86.9380%" height="15" fill="rgb(251,10,15)" fg:x="20631308" fg:w="196059329"/><text x="9.3985%" y="2239.50">main</text></g><g><title>std::rt::lang_start_internal (196,059,329 samples, 86.94%)</title><rect x="9.1485%" y="2213" width="86.9380%" height="15" fill="rgb(228,207,15)" fg:x="20631308" fg:w="196059329"/><text x="9.3985%" y="2223.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (196,059,329 samples, 86.94%)</title><rect x="9.1485%" y="2197" width="86.9380%" height="15" fill="rgb(241,99,19)" fg:x="20631308" fg:w="196059329"/><text x="9.3985%" y="2207.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (196,059,329 samples, 86.94%)</title><rect x="9.1485%" y="2181" width="86.9380%" height="15" fill="rgb(207,104,49)" fg:x="20631308" fg:w="196059329"/><text x="9.3985%" y="2191.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (196,059,329 samples, 86.94%)</title><rect x="9.1485%" y="2165" width="86.9380%" height="15" fill="rgb(234,99,18)" fg:x="20631308" fg:w="196059329"/><text x="9.3985%" y="2175.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (196,059,329 samples, 86.94%)</title><rect x="9.1485%" y="2149" width="86.9380%" height="15" fill="rgb(213,191,49)" fg:x="20631308" fg:w="196059329"/><text x="9.3985%" y="2159.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::rt::init (501,504 samples, 0.22%)</title><rect x="95.8641%" y="2133" width="0.2224%" height="15" fill="rgb(210,226,19)" fg:x="216189133" fg:w="501504"/><text x="96.1141%" y="2143.50"></text></g><g><title>std::sys::pal::unix::init (501,504 samples, 0.22%)</title><rect x="95.8641%" y="2117" width="0.2224%" height="15" fill="rgb(229,97,18)" fg:x="216189133" fg:w="501504"/><text x="96.1141%" y="2127.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::init (501,504 samples, 0.22%)</title><rect x="95.8641%" y="2101" width="0.2224%" height="15" fill="rgb(211,167,15)" fg:x="216189133" fg:w="501504"/><text x="96.1141%" y="2111.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard (501,504 samples, 0.22%)</title><rect x="95.8641%" y="2085" width="0.2224%" height="15" fill="rgb(210,169,34)" fg:x="216189133" fg:w="501504"/><text x="96.1141%" y="2095.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard_linux (501,504 samples, 0.22%)</title><rect x="95.8641%" y="2069" width="0.2224%" height="15" fill="rgb(241,121,31)" fg:x="216189133" fg:w="501504"/><text x="96.1141%" y="2079.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::stack_start_aligned (501,504 samples, 0.22%)</title><rect x="95.8641%" y="2053" width="0.2224%" height="15" fill="rgb(232,40,11)" fg:x="216189133" fg:w="501504"/><text x="96.1141%" y="2063.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack_start (501,504 samples, 0.22%)</title><rect x="95.8641%" y="2037" width="0.2224%" height="15" fill="rgb(205,86,26)" fg:x="216189133" fg:w="501504"/><text x="96.1141%" y="2047.50"></text></g><g><title>pthread_getattr_np (501,504 samples, 0.22%)</title><rect x="95.8641%" y="2021" width="0.2224%" height="15" fill="rgb(231,126,28)" fg:x="216189133" fg:w="501504"/><text x="96.1141%" y="2031.50"></text></g><g><title>__isoc23_sscanf (501,504 samples, 0.22%)</title><rect x="95.8641%" y="2005" width="0.2224%" height="15" fill="rgb(219,221,18)" fg:x="216189133" fg:w="501504"/><text x="96.1141%" y="2015.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.22%)</title><rect x="95.8641%" y="1989" width="0.2224%" height="15" fill="rgb(211,40,0)" fg:x="216189133" fg:w="501504"/><text x="96.1141%" y="1999.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.22%)</title><rect x="95.8641%" y="1973" width="0.2224%" height="15" fill="rgb(239,85,43)" fg:x="216189133" fg:w="501504"/><text x="96.1141%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,191,548 samples, 0.97%)</title><rect x="96.0864%" y="2277" width="0.9718%" height="15" fill="rgb(231,55,21)" fg:x="216690637" fg:w="2191548"/><text x="96.3364%" y="2287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (2,191,548 samples, 0.97%)</title><rect x="96.0864%" y="2261" width="0.9718%" height="15" fill="rgb(225,184,43)" fg:x="216690637" fg:w="2191548"/><text x="96.3364%" y="2271.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2,191,548 samples, 0.97%)</title><rect x="96.0864%" y="2245" width="0.9718%" height="15" fill="rgb(251,158,41)" fg:x="216690637" fg:w="2191548"/><text x="96.3364%" y="2255.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2,191,548 samples, 0.97%)</title><rect x="96.0864%" y="2229" width="0.9718%" height="15" fill="rgb(234,159,37)" fg:x="216690637" fg:w="2191548"/><text x="96.3364%" y="2239.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2,191,548 samples, 0.97%)</title><rect x="96.0864%" y="2213" width="0.9718%" height="15" fill="rgb(216,204,22)" fg:x="216690637" fg:w="2191548"/><text x="96.3364%" y="2223.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (2,191,548 samples, 0.97%)</title><rect x="96.0864%" y="2197" width="0.9718%" height="15" fill="rgb(214,17,3)" fg:x="216690637" fg:w="2191548"/><text x="96.3364%" y="2207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (2,191,548 samples, 0.97%)</title><rect x="96.0864%" y="2181" width="0.9718%" height="15" fill="rgb(212,111,17)" fg:x="216690637" fg:w="2191548"/><text x="96.3364%" y="2191.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (2,191,548 samples, 0.97%)</title><rect x="96.0864%" y="2165" width="0.9718%" height="15" fill="rgb(221,157,24)" fg:x="216690637" fg:w="2191548"/><text x="96.3364%" y="2175.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (2,191,548 samples, 0.97%)</title><rect x="96.0864%" y="2149" width="0.9718%" height="15" fill="rgb(252,16,13)" fg:x="216690637" fg:w="2191548"/><text x="96.3364%" y="2159.50"></text></g><g><title>cfree (6,141,149 samples, 2.72%)</title><rect x="97.0582%" y="2277" width="2.7232%" height="15" fill="rgb(221,62,2)" fg:x="218882185" fg:w="6141149"/><text x="97.3082%" y="2287.50">cf..</text></g><g><title>all (225,516,341 samples, 100%)</title><rect x="0.0000%" y="2309" width="100.0000%" height="15" fill="rgb(247,87,22)" fg:x="0" fg:w="225516341"/><text x="0.2500%" y="2319.50"></text></g><g><title>benchmark (225,516,341 samples, 100.00%)</title><rect x="0.0000%" y="2293" width="100.0000%" height="15" fill="rgb(215,73,9)" fg:x="0" fg:w="225516341"/><text x="0.2500%" y="2303.50">benchmark</text></g><g><title>serde_json::de::from_trait (493,007 samples, 0.22%)</title><rect x="99.7814%" y="2277" width="0.2186%" height="15" fill="rgb(207,175,33)" fg:x="225023334" fg:w="493007"/><text x="100.0314%" y="2287.50"></text></g></svg></svg>